Gadgets information
============================================================
0x000000000005ef03 : adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000067ce9 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000053676 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000018382f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183899 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000141218 : adc al, 0 ; add byte ptr [rax], al ; add edx, 1 ; syscall
0x0000000000117761 : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000adb88 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000404e6 : adc al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x14
0x000000000009f3af : adc al, 0 ; add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x000000000009bf10 : adc al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x00000000000a2a88 : adc al, 0 ; add rsp, 8 ; ret
0x000000000009a335 : adc al, 0 ; call 0x1165c4
0x000000000009fa95 : adc al, 0 ; call 0x9bca4
0x000000000009aa77 : adc al, 0 ; call qword ptr [rax]
0x000000000009f3ca : adc al, 0 ; jae 0x9f3f8 ; lea rax, [rax - 8] ; ret
0x000000000009d2ad : adc al, 0 ; mov qword ptr [rax], rdi ; ret
0x00000000000a2a43 : adc al, 0 ; mov qword ptr [rip + 0x14b1bc], rax ; ret
0x000000000009abd2 : adc al, 0 ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000a2a4a : adc al, 0 ; ret
0x000000000009bf78 : adc al, 0 ; syscall
0x000000000009aabd : adc al, 0 ; xor edi, edi ; call qword ptr [rax]
0x000000000009beab : adc al, 0 ; xor esi, esi ; mov rdi, rbp ; call 0x98109
0x00000000001264df : adc al, 0x11 ; test edx, edx ; jne 0x1264f6 ; ret
0x0000000000126e0f : adc al, 0x11 ; test edx, edx ; jne 0x126e26 ; ret
0x00000000001694b5 : adc al, 0x13 ; jmp rdx
0x00000000000ad5c9 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000001870e0 : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x00000000001076b4 : adc al, 0x24 ; mov rax, qword ptr [rbp - 0x1e0] ; call rax
0x0000000000049baf : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000e2388 : adc al, 0x30 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000be333 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000018770d : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x0000000000047580 : adc al, 0x44 ; mov edi, esp ; mov eax, 0x81 ; syscall
0x00000000000d33d4 : adc al, 0x48 ; add esp, 0x28 ; ret
0x00000000001312c0 : adc al, 0x48 ; add esp, 0xd8 ; ret
0x00000000000bb860 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000000bc6d3 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000af8ab : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x00000000000271d8 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000146337 : adc al, 0x4c ; mov edx, esp ; mov eax, 0x81 ; syscall
0x00000000001302e9 : adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000001302e7 : adc al, 0x74 ; adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000f9ead : adc al, 0x83 ; ret
0x000000000002ce04 : adc al, 0x85 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000001470b8 : adc al, 0x87 ; or al, byte ptr [rax] ; syscall
0x00000000000de189 : adc al, 0x89 ; retf 0x2944
0x000000000014b896 : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000fca0f : adc al, 0x8e ; mov r13, rdi ; add rdx, rsi ; jmp rdx
0x0000000000152a46 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x000000000008afc5 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000055fb1 : adc al, 0x91 ; add rdx, r9 ; jmp rdx
0x0000000000083fe4 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000184cc0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001833ee : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001694b1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000005827d : adc al, 0x96 ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x0000000000043cbf : adc al, 0x97 ; add r10, r15 ; jmp r10
0x0000000000043b91 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000000ac1c7 : adc al, 0xa ; jmp r10
0x00000000000ad733 : adc al, 0xa ; sub eax, edx ; ret
0x000000000018725d : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x0000000000197710 : adc al, 0xa1 ; xor r8d, r13d ; add rdx, rcx ; jmp rdx
0x000000000012629f : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000db4ea : adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000036e29 : adc al, 0xb7 ; mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x00000000000db470 : adc al, 0xb9 ; add rdx, r9 ; jmp rdx
0x00000000000586f1 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000586f5 : adc al, 0xc6 ; xor eax, eax ; ret
0x0000000000163ef8 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000163f28 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000130da8 : adc al, 0xdb ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000a36c8 : adc al, 0xdd ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000bed28 : adc al, 0xe ; cmp rdi, rdx ; jb 0xbed3b ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000181501 : adc al, 0xe ; sub eax, edx ; ret
0x00000000001882aa : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000011b930 : adc al, 0xea ; or al, 0 ; ret
0x000000000014b6d6 : adc al, 0xf ; retf 0xd189
0x00000000000bc249 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000140dd7 : adc al, 0xf ; xchg eax, ebp ; ret 0x2144
0x00000000000cb0d8 : adc al, 0xf ; xchg eax, ebx ; ret
0x00000000000ccdd0 : adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x0000000000145f0f : adc al, 0xf2 ; call 0xa21d4
0x00000000000f35df : adc al, 0xf6 ; ret 0x7580
0x000000000005fe32 : adc al, 0xf8 ; add cl, ch ; ret 0xfff6
0x0000000000033f9c : adc al, 0xf8 ; test rdx, rdx ; je 0x33fac ; call rdx
0x00000000000e0526 : adc al, 0xff ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x000000000004c107 : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195f98 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000001226d4 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000ab9e6 : adc al, 7 ; cmp edx, esi ; je 0xab9e6 ; ret
0x0000000000054fc9 : adc al, 9 ; ret 0x8d74
0x00000000001839d7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183a41 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010f484 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b339e : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000081118 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00000000000cd818 : adc al, byte ptr [rax] ; syscall
0x00000000000b6b34 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000039979 : adc al, byte ptr [rdx*4 - 0x763f6af1] ; ret
0x000000000018d9ba : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018a34f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cd817 : adc al, byte ptr es:[rax] ; syscall
0x0000000000132afd : adc al, ch ; insd dword ptr [rdi], dx ; ret 0xfff5
0x000000000015f135 : adc al, ch ; push rbp ; retf 0xfffb
0x000000000003f557 : adc al, ch ; ret
0x000000000008e868 : adc al, ch ; ret 0xf96a
0x0000000000064ee0 : adc al, ch ; retf 0x2a0
0x00000000000517e0 : adc al, ch ; retf 0x7b
0x00000000000cd215 : adc al, ch ; xchg eax, ebp ; ret
0x0000000000139144 : adc bh, dh ; ret 0x8080
0x000000000014b5cb : adc bl, al ; mov dword ptr [rsi], 8 ; ret
0x0000000000044f5c : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000128485 : adc bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b9cc5 : adc bl, ch ; call 0xffffffffc3dc261a
0x00000000000b9bd5 : adc bl, ch ; call 0xffffffffc404252a
0x00000000000bcd15 : adc bl, ch ; call 0xffffffffc404566a
0x0000000000059406 : adc bl, ch ; jge 0x5945c ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000162f48 : adc bl, ch ; retf
0x00000000000bae26 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba176 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba1e7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba147 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000012640a : adc bl, dl ; call 0xffffffffc314449a
0x0000000000126d4a : adc bl, dl ; call 0xffffffffc3144dda
0x00000000000bae25 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba175 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000014b5ca : adc bl, r8b ; mov dword ptr [rsi], 8 ; ret
0x0000000000115be3 : adc byte ptr [r13 + 0x41], r11b ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011dee0 : adc byte ptr [r13 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 4
0x0000000000048668 : adc byte ptr [r15], cl ; sahf ; ret 0x3949
0x0000000000048230 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000059f0b : adc byte ptr [r15], r9b ; popfq ; ret 0x3948
0x000000000003a79b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000012c59c : adc byte ptr [r8 + 0x39], cl ; retf 0xed75
0x00000000000f4c34 : adc byte ptr [r8 + 0x39], r9b ; retf
0x0000000000162e1b : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000efa24 : adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000eb062 : adc byte ptr [r8 + 1], r9b ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000008c7e2 : adc byte ptr [r8 + 1], r9b ; ret
0x0000000000066ab8 : adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000011f915 : adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x000000000017bdea : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000015eeff : adc byte ptr [r8 - 0x77], r9b ; ret 0x2548
0x0000000000096b03 : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000144539 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000be2ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2ce : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be30c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be38e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000d44b7 : adc byte ptr [r9], r13b ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xb70f
0x00000000001228ff : adc byte ptr [rax + 0x130], bh ; syscall
0x00000000001176bf : adc byte ptr [rax + 0x13], bh ; syscall
0x000000000004b52f : adc byte ptr [rax + 0x13e], bh ; syscall
0x0000000000141216 : adc byte ptr [rax + 0x14], bh ; add edx, 1 ; syscall
0x000000000011775f : adc byte ptr [rax + 0x14], bh ; syscall
0x000000000011bbff : adc byte ptr [rax + 0x1a], bh ; syscall
0x00000000000e5c9f : adc byte ptr [rax + 0x22], bh ; syscall
0x00000000000e5d1f : adc byte ptr [rax + 0x23], bh ; syscall
0x000000000009c772 : adc byte ptr [rax + 0x29], cl ; ret 0x3948
0x0000000000061aa5 : adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000ba78a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000af126 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000000b9f9a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x00000000000d3a23 : adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000001233cf : adc byte ptr [rax + 0x2a], bh ; syscall
0x00000000001232ff : adc byte ptr [rax + 0x2b], bh ; syscall
0x000000000012380f : adc byte ptr [rax + 0x2e], bh ; syscall
0x00000000001236af : adc byte ptr [rax + 0x2f], bh ; syscall
0x000000000014d853 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000a02a3 : adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x00000000000cc0e8 : adc byte ptr [rax + 0x39], cl ; fisttp word ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000e8b21 : adc byte ptr [rax + 0x39], cl ; ret
0x000000000015b940 : adc byte ptr [rax + 0x39], cl ; ret 0x3375
0x00000000000481d8 : adc byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000000e8f4e : adc byte ptr [rax + 0x39], cl ; ret 0xec75
0x0000000000059a0d : adc byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000003a7dc : adc byte ptr [rax + 0x39], cl ; ret 0xee75
0x00000000000fb377 : adc byte ptr [rax + 0x39], cl ; ret 0xf375
0x00000000000a3e36 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000000f4c35 : adc byte ptr [rax + 0x39], cl ; retf
0x000000000012c59d : adc byte ptr [rax + 0x39], cl ; retf 0xed75
0x000000000009b5c6 : adc byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000009b5c5 : adc byte ptr [rax + 0x39], r9b ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000011847f : adc byte ptr [rax + 0x4a], bh ; syscall
0x000000000011853f : adc byte ptr [rax + 0x4b], bh ; syscall
0x0000000000111c3f : adc byte ptr [rax + 0x55], bh ; syscall
0x0000000000162e1c : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000efa25 : adc byte ptr [rax + 0x63], cl ; ret
0x000000000010314f : adc byte ptr [rax + 0x63], cl ; retf
0x00000000000e5b91 : adc byte ptr [rax + 0xf7], bh ; syscall
0x000000000005734c : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011a5cf : adc byte ptr [rax + 1], bh ; ret
0x000000000011131f : adc byte ptr [rax + 1], bh ; syscall
0x00000000000d252e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000eb063 : adc byte ptr [rax + 1], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000019a7be : adc byte ptr [rax + 1], cl ; out dx, eax ; call r12
0x0000000000059b9e : adc byte ptr [rax + 1], cl ; ret
0x00000000000af8a6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008bec2 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000012ee71 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000e1117 : adc byte ptr [rax + 1], cl ; retf 0x8b49
0x0000000000153a8d : adc byte ptr [rax + 1], dil ; ret
0x0000000000111abf : adc byte ptr [rax + 3], bh ; syscall
0x0000000000115bff : adc byte ptr [rax + 7], bh ; syscall
0x00000000000654d5 : adc byte ptr [rax + rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000be4b4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be3b2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be330 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000138ff4 : adc byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000012629c : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001264f4 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000001264f3 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000012c599 : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; retf 0xed75
0x00000000000271db : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000149cc1 : adc byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdi, rbp ; call rcx
0x0000000000066ab9 : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014b88d : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000b997c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000159127 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000089efb : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000089f3d : adc byte ptr [rax - 0x77], cl ; push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000089eff : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000329d4 : adc byte ptr [rax - 0x77], cl ; ret 0x2548
0x00000000000d3af7 : adc byte ptr [rax - 0x77], cl ; ret 0x6348
0x000000000005a9d3 : adc byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000000a19ec : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000009afdb : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000966e4 : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000014c2de : adc byte ptr [rax - 0x77], cl ; ret 0x8eeb
0x000000000012ad64 : adc byte ptr [rax - 0x77], cl ; ret 0x950f
0x0000000000130646 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000062076 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000096b04 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000012afee : adc byte ptr [rax - 0x77], cl ; ret 0xff41
0x000000000008a76a : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000010d7bf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rcx - 0x75], 0x3e ; call 0x10a299
0x0000000000100fea : adc byte ptr [rax - 0x77], r9b ; ret 0x8948
0x00000000000b5724 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000fd8bf : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xc675
0x00000000000fd8be : adc byte ptr [rax - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xc675
0x000000000009c63b : adc byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000679d1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000f4014 : adc byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000099543 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000114086 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000af614 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000015b118 : adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000012b7a3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000011d15d : adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000001569f2 : adc byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x0000000000183482 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000181550 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000018509c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x00000000001816f0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000000c7987 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x00000000000fb351 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000001887f8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000000f5c24 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000185c51 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183be1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011665e : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000014b522 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000149c15 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000bf3b2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000066129 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000116b1a : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000ae008 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000041ccd : adc byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x0000000000065744 : adc byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x0000000000071290 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000174388 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000d930d : adc byte ptr [rax], al ; mov rdi, r13 ; call 0x255a7
0x0000000000055c61 : adc byte ptr [rax], al ; ret
0x00000000000e1a0c : adc byte ptr [rax], al ; syscall
0x00000000000be2ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2cf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be30d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be38f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be491 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000065938 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a6403 : adc byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x00000000000a7963 : adc byte ptr [rbp + 0x39], cl ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000000a9eb4 : adc byte ptr [rbp + 0x39], cl ; retf 0x894c
0x0000000000115be4 : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003345a : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000001444bb : adc byte ptr [rbp + 0x5b0875c0], al ; pop rbp ; pop r12 ; ret
0x0000000000142472 : adc byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8348
0x000000000014d8a7 : adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x000000000011dccd : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x3e] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcf9 : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x69] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dee1 : adc byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 4
0x000000000011df91 : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 0x3b], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000011dfba : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 0x7d], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000057ca3 : adc byte ptr [rbp - 0x7c], al ; ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x00000000000a32b9 : adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x000000000009418f : adc byte ptr [rbx + 0x1593092d], al ; add byte ptr [rcx], al ; ret
0x0000000000065c78 : adc byte ptr [rbx + 0x24182444], cl ; cmp al, 0xc ; ret 0x4489
0x0000000000065658 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000e23ec : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2011 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000084227 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001538e7 : adc byte ptr [rbx + 0x78ff853b], cl ; ret 0xbde8
0x0000000000114fde : adc byte ptr [rbx + r9*4 + 0x63], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000114fdf : adc byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000009673a : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000008a7ee : adc byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004d240 : adc byte ptr [rbx - 0x6af069c4], cl ; ret 0x8941
0x000000000013f5fe : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000010285f : adc byte ptr [rbx - 0x76f3dbb4], cl ; ret 0x8b4c
0x0000000000063459 : adc byte ptr [rbx - 0x7bf0cf02], al ; ret 0xfff1
0x000000000014d860 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000062dea : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000000a83ce : adc byte ptr [rcx + 0x39], cl ; ret 0xec75
0x0000000000147c42 : adc byte ptr [rcx + 0x5c], al ; ret
0x000000000013a777 : adc byte ptr [rcx + 0xf], al ; mov dh, 0xc ; and al, 0x88 ; or dh, dh ; ret 0xf02
0x00000000000aaf2c : adc byte ptr [rcx + 1], cl ; fimul dword ptr [rcx + 0x39] ; retf 0xf41
0x0000000000042653 : adc byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret
0x00000000000c0a9e : adc byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000a06c5 : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000047464 : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033482 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000843db : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155598 : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop r12 ; ret
0x00000000001105de : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0x000000000004a03f : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c782 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x00000000000a0027 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c58b : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000153cd3 : adc byte ptr [rcx + rcx*4 - 1], cl ; call rcx
0x00000000000be412 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be3f2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000004afae : adc byte ptr [rcx - 0x3f76bbea], cl ; ret
0x000000000002b18f : adc byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; retf 0x2948
0x0000000000098495 : adc byte ptr [rcx - 0x77], al ; ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x000000000015d5ec : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000141ea1 : adc byte ptr [rcx - 0x77], cl ; ret 0x3948
0x000000000009ad7c : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000056d2f : adc byte ptr [rcx - 0x7d], cl ; ret
0x0000000000181583 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000185127 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011027a : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x00000000000d8aa1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x255a6
0x0000000000163d82 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x0000000000155880 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123025 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000015abaf : adc byte ptr [rcx], al ; imul ebp, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000edf0a : adc byte ptr [rcx], bh ; retf
0x00000000000d70df : adc byte ptr [rcx], ch ; ret 0x5589
0x000000000009673d : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000d44b8 : adc byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xb70f
0x00000000000a4dae : adc byte ptr [rcx], cl ; ret 0x3949
0x0000000000054fc3 : adc byte ptr [rcx], cl ; retf 0x5489
0x000000000012ae7f : adc byte ptr [rcx], dh ; idiv byte ptr [rdi + 0x2000004] ; call rax
0x0000000000031594 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000371f9 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000abc5d : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abc3f : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x000000000009116c : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x0000000000059f0c : adc byte ptr [rdi], cl ; popfq ; ret 0x3948
0x000000000014b64e : adc byte ptr [rdi], cl ; retf 0x5089
0x000000000014b752 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000014b69a : adc byte ptr [rdi], cl ; retf 0xd189
0x000000000014ba60 : adc byte ptr [rdi], cl ; retf 0xd789
0x000000000005a57e : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000048669 : adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x000000000012badf : adc byte ptr [rdi], cl ; test byte ptr [rdx - 0x7d000000], ch ; ret 0x8801
0x00000000000f7fc9 : adc byte ptr [rdi], cl ; test dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax + 0x63], cl ; retf
0x000000000017b888 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001940c3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000182771 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182861 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182681 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018b4ab : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000189faf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018b1af : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a8af : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018abaf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a2a7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001830c9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000182c21 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001823b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000182e01 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182591 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000182fe1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182ef1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182833 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182923 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182743 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a554 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b154 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b454 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018ab54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a854 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000018a24c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001824a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001863cd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001861ed : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186bc5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185ae5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001869e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182653 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182473 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182563 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182383 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000003a79c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000048231 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000111f62 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000011ae3c : adc byte ptr [rdi], dh ; or eax, 0x1f88300 ; jg 0x11ae4f ; ret
0x000000000005a57d : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000001699ba : adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000b339d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019161b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6451 : adc byte ptr [rip + 0x3949eb74], al ; ret 0x1674
0x00000000001914ca : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000190ac5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010aed0 : adc byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8948
0x0000000000190ec5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x190e99
0x0000000000190f43 : adc byte ptr [rsi + 0xf], ah ; jmp 0x190f17
0x00000000001913d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1913a9
0x0000000000191453 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191427
0x00000000001924f5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1924c9
0x0000000000192573 : adc byte ptr [rsi + 0xf], ah ; jmp 0x192547
0x0000000000192a05 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1929d9
0x0000000000192a83 : adc byte ptr [rsi + 0xf], ah ; jmp 0x192a57
0x0000000000190ec0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190e9e
0x0000000000190f3e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190f1c
0x00000000001913d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1913ae
0x000000000019144e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19142c
0x00000000001924f0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1924ce
0x000000000019256e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19254c
0x0000000000192a00 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1929de
0x0000000000192a7e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192a5c
0x00000000000ac315 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000b017b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000008d04a : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xff3
0x00000000000ba35f : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000ba35e : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000176f1d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d347e : adc byte ptr [rsp - 0x10], al ; ret
0x000000000018a557 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004c256 : adc ch, al ; xor al, 0x92 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000624ac : adc cl, bl ; in eax, 0xdf ; loopne 0x62441 ; ret
0x00000000000ac0f9 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000d41bc : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x0000000000119363 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000081b57 : adc cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000ab57e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000cce09 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000000a883d : adc cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000b9bc5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000055b70 : adc cl, byte ptr [rcx] ; retf 0xbe0f
0x00000000000da656 : adc cl, ch ; retf 0xffd6
0x000000000014a307 : adc dh, dh ; ret 0x7401
0x00000000001539db : adc dword ptr [rax + 0x20], edx ; ret
0x00000000001539a8 : adc dword ptr [rax + 0x30], eax ; ret
0x000000000008ad6a : adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000004dc4f : adc dword ptr [rax + 0x63], ecx ; retf
0x00000000000c8f04 : adc dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001502c0 : adc dword ptr [rax + 8], eax ; ret
0x000000000008c479 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000026a8e : adc dword ptr [rax - 0x77], ecx ; add eax, 0x1c95b2 ; ret
0x00000000000865fe : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000011c0a4 : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ab2d7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000188aeb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000183b77 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185ae9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010f3d4 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000a73fc : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000ade88 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a7622 : adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x00000000000d3315 : adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000e5de4 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000009c21d : adc dword ptr [rax], eax ; call 0x98494
0x000000000009baa9 : adc dword ptr [rax], eax ; call 0x984f4
0x00000000000a0a7d : adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0xa0a3c
0x00000000000d4ddd : adc dword ptr [rax], eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089f43 : adc dword ptr [rax], eax ; ret
0x00000000000d5a24 : adc dword ptr [rax], eax ; syscall
0x00000000000e1c32 : adc dword ptr [rax], ecx ; add byte ptr [rcx + rcx*4 - 8], cl ; call rax
0x000000000009585f : adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x00000000000bfead : adc dword ptr [rbp - 0x6b], esi ; test edx, edx ; jne 0xbfe97 ; ret
0x000000000012f501 : adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012f61c : adc dword ptr [rbp - 0x78], ebx ; call r9
0x000000000012f84e : adc dword ptr [rbp - 0x78], ecx ; call rax
0x000000000012fb44 : adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012f6ef : adc dword ptr [rbp - 0x78], edi ; call rcx
0x000000000012f474 : adc dword ptr [rbp - 0x78], edx ; call rcx
0x000000000012fa76 : adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012f566 : adc dword ptr [rbp - 0x78], esp ; call rax
0x00000000000916e3 : adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000a1ae1 : adc dword ptr [rbx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000916e7 : adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000a175f : adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x00000000000a1685 : adc dword ptr [rbx + 0x38], eax ; movsxd rdi, esi ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000950a6 : adc dword ptr [rbx + 0x38], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094b66 : adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000917e6 : adc dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004b318 : adc dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000befac : adc dword ptr [rbx], eax ; ret
0x00000000000bef25 : adc dword ptr [rbx], esp ; ret
0x00000000001932fb : adc dword ptr [rcx + 7], edi ; ret
0x00000000000d7bee : adc dword ptr [rcx + rcx*4 - 0x40], ecx ; add rsp, 8 ; ret
0x00000000000bef20 : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000cb792 : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4c10
0x00000000000cb02a : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4d10
0x0000000000192f96 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000192f5a : adc dword ptr [rcx - 1], edi ; ret
0x00000000000f42b3 : adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000ab9b0 : adc dword ptr [rcx], edi ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc839
0x000000000015a8fe : adc dword ptr [rdi + 0x18], eax ; ret
0x000000000010f576 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000befa7 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010f57a : adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000046e59 : adc dword ptr [rdi + 0x58], eax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000046e5d : adc dword ptr [rdi + 0x68], eax ; ret
0x000000000010f9ba : adc dword ptr [rdi + 0x78], edi ; ret
0x000000000011037f : adc dword ptr [rdi + 0xf8], edi ; ret
0x0000000000094a9c : adc dword ptr [rdi + 8], eax ; ret
0x000000000013f9e4 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000becc7 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000bee89 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bee8e : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000bee66 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000bee6b : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000019345d : adc dword ptr [rdi - 8], edi ; ret
0x000000000005ae95 : adc dword ptr [rdi], eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000456b5 : adc dword ptr [rdi], eax ; movd xmm0, esi ; ret
0x00000000000becc4 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000047246 : adc dword ptr [rdi], eax ; ret
0x00000000001936b0 : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000002a7ff : adc dword ptr [rdx + 0x48], eax ; ret
0x00000000001539ec : adc dword ptr [rdx], ebx ; ret
0x00000000001502d4 : adc dword ptr [rdx], ecx ; ret
0x00000000001530dc : adc dword ptr [rdx], edx ; ret
0x00000000001539cc : adc dword ptr [rdx], esp ; ret
0x000000000010f96a : adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000061f99 : adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000001937e3 : adc dword ptr [rsi + 3], edx ; ret
0x0000000000193880 : adc dword ptr [rsi + 7], edx ; ret
0x0000000000103707 : adc dword ptr [rsi + 8], eax ; ret
0x000000000014b5ac : adc dword ptr [rsi + 8], ecx ; ret
0x0000000000193682 : adc dword ptr [rsi - 1], edx ; ret
0x0000000000158225 : adc dword ptr [rsi], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000004acd4 : adc dword ptr [rsi], eax ; sub ecx, 1 ; jns 0x4aca2 ; xor eax, eax ; ret
0x0000000000116b8e : adc dword ptr [rsp + 0x11], eax ; syscall
0x000000000015acfa : adc dword ptr [rsp + 0x18], eax ; call r8
0x00000000001571a6 : adc dword ptr [rsp + 0xb8], ebp ; call rax
0x0000000000157112 : adc dword ptr [rsp + 0xd8], eax ; call rax
0x000000000019a75a : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000183b76 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000993e3 : adc eax, 0x10894800 ; ret
0x00000000000d252a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000c116f : adc eax, 0x116fc ; cmovne rax, rdx ; ret
0x00000000000a22cf : adc eax, 0x12e7c ; cmovne rax, rdx ; ret
0x00000000000a28df : adc eax, 0x1448c ; cmovne rax, rdx ; ret
0x00000000000980b8 : adc eax, 0x152213 ; ret
0x0000000000161e39 : adc eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000000473e1 : adc eax, 0x1a2dc6 ; ret
0x00000000000a3bdd : adc eax, 0x1b0be ; cmove rax, rdx ; ret
0x00000000000a386d : adc eax, 0x1b40e ; cmove rax, rdx ; ret
0x00000000000a370d : adc eax, 0x1b58e ; cmove rax, rdx ; ret
0x00000000000358b4 : adc eax, 0x1b6f24 ; ret
0x00000000000256f9 : adc eax, 0x1ca7b2 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000579eb : adc eax, 0x2474ff00 ; or byte ptr [rax + 0xf], cl ; retf 0x854d
0x0000000000057b1a : adc eax, 0x2474ff00 ; sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x000000000015548e : adc eax, 0x3a2d ; call qword ptr [rax]
0x00000000000d221a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000005e07a : adc eax, 0x3d8d4800 ; lodsd eax, dword ptr [rsi] ; ret 0x15
0x000000000005df2c : adc eax, 0x3d8d4800 ; ret
0x0000000000065ddd : adc eax, 0x3d8d4800 ; retf 0x1546
0x0000000000130da7 : adc eax, 0x3db14 ; cmovne rax, rdx ; ret
0x0000000000130c27 : adc eax, 0x3dcb4 ; cmovne rax, rdx ; ret
0x0000000000130ce7 : adc eax, 0x406e4 ; cmovne rax, rdx ; ret
0x00000000000a3807 : adc eax, 0x48000eb3 ; cmove eax, edx ; ret
0x000000000009873d : adc eax, 0x48a77600 ; add esp, 8 ; ret
0x00000000000e1667 : adc eax, 0x48eb894c ; mov edi, ebp ; call r12
0x000000000011deba : adc eax, 0x49000007 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000019bf83 : adc eax, 0x50f0005 ; pop rbx ; ret
0x000000000009263d : adc eax, 0x58d4800 ; ret 0x159f
0x000000000019bf3a : adc eax, 0x5b010005 ; ret
0x0000000000097da4 : adc eax, 0x5b050f00 ; ret
0x000000000010f7ca : adc eax, 0x5bc33948 ; setl al ; ret
0x0000000000130d86 : adc eax, 0x5dd85 ; cmove rax, rdx ; ret
0x0000000000130cc6 : adc eax, 0x5de65 ; cmove rax, rdx ; ret
0x0000000000130c06 : adc eax, 0x5df25 ; cmove rax, rdx ; ret
0x00000000000bab28 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x0000000000130dd1 : adc eax, 0x62aba ; cmove rax, rdx ; ret
0x0000000000130d11 : adc eax, 0x62b9a ; cmove rax, rdx ; ret
0x0000000000130c51 : adc eax, 0x62c5a ; cmove rax, rdx ; ret
0x0000000000130e91 : adc eax, 0x62faa ; cmove rax, rdx ; ret
0x00000000000bc27c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000183701 : adc eax, 0x83480000 ; ret 0xe910
0x000000000007a072 : adc eax, 0x83490000 ; ret 0xbe01
0x0000000000050a49 : adc eax, 0x89480000 ; retf 0xf66
0x0000000000167d98 : adc eax, 0x894d0000 ; retf
0x000000000015fccb : adc eax, 0x8b7c0 ; add rsp, 8 ; ret
0x000000000015638d : adc eax, 0x997ae ; mov qword ptr fs:[rax], rdx ; ret
0x000000000010a11e : adc eax, 0xbe0f4890 ; retf 0x8348
0x00000000000a237f : adc eax, 0xc45cc ; cmovne rax, rdx ; ret
0x0000000000045dec : adc eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a2949 : adc eax, 0xc5272 ; cmovne rax, rdx ; ret
0x00000000000a3b97 : adc eax, 0xcad54 ; cmovne rax, rdx ; ret
0x00000000000a3827 : adc eax, 0xcb0a4 ; cmovne rax, rdx ; ret
0x00000000000a36c7 : adc eax, 0xcdd14 ; cmovne rax, rdx ; ret
0x00000000000a3a72 : adc eax, 0xd04a9 ; cmovne rax, rdx ; ret
0x00000000000a39d2 : adc eax, 0xd0529 ; cmovne rax, rdx ; ret
0x00000000000a3ac2 : adc eax, 0xd25b9 ; cmovne rax, rdx ; ret
0x00000000000a3a22 : adc eax, 0xd2639 ; cmovne rax, rdx ; ret
0x00000000000bff40 : adc eax, 0xd5b6b ; cmovne rax, rdx ; ret
0x00000000000a23ff : adc eax, 0xd61cc ; cmovne rax, rdx ; ret
0x00000000000a29af : adc eax, 0xd73cc ; cmovne rax, rdx ; ret
0x00000000000a391f : adc eax, 0xd8fdc ; cmovne rax, rdx ; ret
0x00000000000a397f : adc eax, 0xda78c ; cmovne rax, rdx ; ret
0x00000000000642d3 : adc eax, 0xdb0f6600 ; ret 0x290f
0x00000000000aaea8 : adc eax, 0xe0c14901 ; or byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000d2caa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000a3b76 : adc eax, 0xeafc5 ; cmove rax, rdx ; ret
0x00000000000a3806 : adc eax, 0xeb315 ; cmove rax, rdx ; ret
0x00000000000a36a6 : adc eax, 0xeb495 ; cmove rax, rdx ; ret
0x00000000000a3bc1 : adc eax, 0xefcfa ; cmove rax, rdx ; ret
0x00000000000a3851 : adc eax, 0xf004a ; cmove rax, rdx ; ret
0x00000000000a36f1 : adc eax, 0xf01ca ; cmove rax, rdx ; ret
0x00000000000a37b1 : adc eax, 0xf069a ; cmove rax, rdx ; ret
0x00000000000a3630 : adc eax, 0xf0d0b ; cmovne rax, rdx ; ret
0x00000000000a2322 : adc eax, 0xf1cf9 ; cmovne rax, rdx ; ret
0x00000000000bf218 : adc eax, 0xf880272 ; ret
0x0000000000130ded : adc eax, 0xfff8de7e ; cmove rax, rdx ; ret
0x0000000000130d2d : adc eax, 0xfff8df5e ; cmove rax, rdx ; ret
0x0000000000130c6d : adc eax, 0xfff8e01e ; cmove rax, rdx ; ret
0x000000000007e298 : adc eax, 0xfffffb2c ; add rax, rdx ; jmp rax
0x00000000000646a6 : adc eax, 0xfffffff ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf40
0x0000000000066ace : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000de454 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000018884e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185909 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001176c1 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000add08 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000285c2 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000029622 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x0000000000028d15 : adc eax, dword ptr [rax] ; mov rsi, qword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x000000000007a949 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rbx ; jmp rax
0x000000000007a9a4 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rbx ; jmp rax
0x00000000000983b8 : adc eax, dword ptr [rbp + 1] ; sbb byte ptr [r8 + 0x39], cl ; ret
0x00000000000a80c5 : adc eax, dword ptr [rbp - 0x77] ; ret 0x8b4b
0x00000000000bfef4 : adc eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000122834 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000b6b38 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000018a24f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000058b6d : adc eax, eax ; ret
0x00000000000db5ee : adc eax, ecx ; retf 0x3104
0x0000000000058ca6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000000889e1 : adc ebp, ebx ; retf
0x000000000013395e : adc ebx, ebp ; ret 0x8b48
0x00000000000a5229 : adc ecx, dword ptr [rax + 0x29] ; retf 0x2ee8
0x00000000000bcbec : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x000000000004be5f : adc ecx, dword ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x000000000004a5c8 : adc ecx, dword ptr [rax - 0x75] ; jge 0x4a5da ; call rax
0x0000000000085c0c : adc ecx, dword ptr [rax - 0x75] ; mov edi, 0xe0 ; jmp rax
0x0000000000049cc1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000065c57 : adc ecx, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000019a5fc : adc ecx, dword ptr [rbp - 0x77] ; ret 0x94d
0x00000000000327a4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000006eca2 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x0000000000102e34 : adc ecx, dword ptr [rcx + 0x6c0f66d0] ; ret
0x00000000000f093b : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4d10
0x000000000014b637 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000b6d04 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000b6d24 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000b6d44 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000b6b8e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000006e251 : adc ecx, ebp ; pop rsp ; retf 0xffff
0x000000000013eccf : adc edi, dword ptr [rax - 1] ; ret
0x00000000001694b6 : adc edi, dword ptr [rsi] ; jmp rdx
0x0000000000122329 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000f194c : adc esi, dword ptr [rcx] ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x00000000001442ad : adc esi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x00000000001441a2 : adc esi, ebp ; dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x0000000000086bb7 : adc esi, esi ; ret 0xf20
0x00000000000956ff : adc esp, dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000001642ad : adc esp, ebp ; dec dword ptr [rax - 0x77] ; ret 0x8b64
0x000000000018a432 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001932fa : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000192f95 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000192f59 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000019345c : adc qword ptr [rdi - 8], rdi ; ret
0x00000000001937e2 : adc qword ptr [rsi + 3], rdx ; ret
0x000000000019387f : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000193681 : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000185a70 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000da655 : adc r9b, r13b ; retf 0xffd6
0x00000000000aaea7 : adc rax, -0x1f3eb6ff ; or byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000058ca5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000bf2ef : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000100f69 : add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000bf3e9 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bf33a : add ah, bh ; inc dword ptr [rbx] ; ret
0x00000000001937de : add ah, byte ptr [rdx - 0xf] ; jl 0x193833 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000082bea : add ah, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b6b8b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000008cf95 : add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000006549d : add al, 0 ; add al, ch ; retf
0x000000000002d937 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000031ad1 : add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000f7fcd : add al, 0 ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000033bd3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000039ae4 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x000000000002b1ad : add al, 0 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000f27e4 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181cbd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186809 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181ce1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000099f6a : add al, 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000009f1aa : add al, 0 ; add byte ptr [rax], al ; and rsi, r14 ; call 0x11bc99
0x00000000000ab69d : add al, 0 ; add byte ptr [rax], al ; jmp 0xa81a7
0x00000000000d2d33 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000a8988 : add al, 0 ; add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa8949
0x00000000000a9a28 : add al, 0 ; add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa99e9
0x00000000000a67d7 : add al, 0 ; add byte ptr [rax], al ; sub rax, rbp ; add rdx, rax ; jmp 0xa6799
0x00000000000f3fb6 : add al, 0 ; add byte ptr [rax], al ; sub rax, rcx ; add rdx, rax ; jmp 0xf3f59
0x0000000000110764 : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000654d6 : add al, 0 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000aec08 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000840ca : add al, 0 ; add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x00000000000efa1f : add al, 0 ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x0000000000141716 : add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000010e397 : add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x0000000000038005 : add al, 0 ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x0000000000142ae5 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012ae83 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000601f7 : add al, 0 ; add dh, dh ; ret
0x0000000000130cea : add al, 0 ; cmovne rax, rdx ; ret
0x00000000000ec998 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000014e114 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x0000000000126409 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000001264fa : add al, 0x11 ; ret
0x00000000000bf384 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000ad5c5 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000ad55a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000018e10e : add al, 0x17 ; vzeroupper ; ret
0x0000000000158e8f : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r8
0x0000000000140057 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001189ad : add al, 0x24 ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000045dd3 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5d69 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000001235a1 : add al, 0x24 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f435 : add al, 0x24 ; add rsp, 0x28 ; ret
0x0000000000123667 : add al, 0x24 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000125aa8 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000125b09 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000048a8d : add al, 0x24 ; call rax
0x0000000000048bf2 : add al, 0x24 ; mov r13, r15 ; add r15, r12 ; call rax
0x000000000013b8b0 : add al, 0x24 ; mov rdi, r12 ; call rax
0x0000000000048b7d : add al, 0x24 ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000012849b : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097f97 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002753e : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000027214 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000027523 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000013f7b5 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x0000000000062457 : add al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000005e582 : add al, 0x30 ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000000be169 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be17b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b4c8e : add al, 0x31 ; ret
0x0000000000104555 : add al, 0x34 ; add cl, ch ; retf
0x00000000000b4b8a : add al, 0x37 ; ret
0x00000000000c1196 : add al, 0x39 ; bnd je 0xc11a8 ; test edx, edx ; jne 0xc1199 ; ret
0x0000000000099b6c : add al, 0x39 ; ret
0x00000000000eed72 : add al, 0x39 ; retf
0x00000000000ab980 : add al, 0x39 ; sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x000000000008ae8f : add al, 0x3a ; ret
0x00000000000c9c7e : add al, 0x44 ; mov eax, eax ; ret
0x00000000000d233b : add al, 0x44 ; mov eax, ecx ; ret
0x00000000001224ac : add al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000123e2f : add al, 0x48 ; add esp, 0x28 ; ret
0x000000000010f645 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005e421 : add al, 0x48 ; cmp edi, eax ; jbe 0x5e423 ; mov rax, r10 ; ret
0x00000000000bb6cb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000bc51b : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x00000000000abd3d : add al, 0x48 ; lea eax, [rdi + rdx - 1] ; ret
0x000000000017dff9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000017e00b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000008862c : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000170efa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000089162 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000b6bfe : add al, 0x48 ; mov eax, edi ; ret
0x00000000000b4f38 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000bffe3 : add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x000000000003145f : add al, 0x4c ; cmp edx, ecx ; jb 0x314ba ; mov r10, rcx ; jmp 0x3142a
0x000000000003145e : add al, 0x4c ; cmp edx, ecx ; jb 0x314bb ; mov r10, rcx ; jmp 0x3142b
0x000000000013fb25 : add al, 0x4c ; lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x00000000000c0367 : add al, 0x4c ; lea ecx, [rsp + 0x18] ; call rbx
0x00000000000c0780 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000130048 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010f6df : add al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010f76d : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000017e007 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b6c1c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000327a2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000002e177 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000001103c8 : add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x000000000004ab76 : add al, 0x75 ; push rcx ; add rsp, 0x18 ; ret
0x00000000001513ba : add al, 0x75 ; ret
0x000000000015e7ab : add al, 0x75 ; retf 0xbd49
0x00000000000371d4 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000371f4 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000037134 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000371b4 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000370d4 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000037174 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000037114 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000037154 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000037274 : add al, 0x78 ; and eax, 1 ; ret
0x00000000000370f4 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000037194 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000370b4 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000abcc8 : add al, 0x80 ; add rax, r8 ; jmp rax
0x00000000000a47d9 : add al, 0x80 ; jb 0xa47f1 ; sub al, bl ; ret
0x00000000000bf97c : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xbf968 ; ret
0x000000000006661a : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000779ce : add al, 0x81 ; add rax, rdx ; jmp rax
0x00000000000bf922 : add al, 0x81 ; je 0xbf90c ; ret
0x00000000001833eb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bf91e : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xbf910 ; ret
0x0000000000184cc3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000093337 : add al, 0x82 ; add rax, r10 ; jmp rax
0x0000000000026ecb : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000019812c : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000b1fc7 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000093369 : add al, 0x83 ; add rax, r11 ; jmp rax
0x0000000000158806 : add al, 0x83 ; lcall [rdx] ; cmovae eax, r10d ; jmp 0x1587aa
0x000000000008de02 : add al, 0x83 ; loop 0x8de0d ; mov eax, edx ; ret
0x000000000013fae4 : add al, 0x83 ; loopne 0x13fb6b ; ret
0x0000000000091088 : add al, 0x83 ; loopne 0x91091 ; ret
0x000000000006259c : add al, 0x83 ; ret
0x00000000000633a6 : add al, 0x83 ; ret 0x4802
0x000000000013f92e : add al, 0x83 ; ret 0x8108
0x0000000000162aa3 : add al, 0x83 ; ret 0xf601
0x000000000009f60c : add al, 0x83 ; retf 0x8902
0x000000000010fafa : add al, 0x83 ; retf 0xe803
0x0000000000046bb8 : add al, 0x83 ; rol byte ptr [rcx], 0xf7 ; ret 0
0x000000000010c27f : add al, 0x84 ; add rax, r12 ; jmp rax
0x00000000000eca80 : add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xeca68
0x00000000000eca7f : add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xeca69
0x00000000000bfe15 : add al, 0x85 ; sal byte ptr [rbp - 0x12], cl ; xor eax, eax ; ret
0x000000000013213b : add al, 0x85 ; sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x00000000000c119a : add al, 0x85 ; sal byte ptr [rbp - 0xf], cl ; ret
0x0000000000077191 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000007ac0d : add al, 0x86 ; add rax, rbx ; jmp rax
0x00000000000822bb : add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000008372c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000007ac6b : add al, 0x87 ; add rax, rbx ; jmp rax
0x0000000000083ee4 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000017dff6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000b6bfb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000007a94d : add al, 0x88 ; add rax, rbx ; jmp rax
0x000000000008111c : add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000bf980 : add al, 0x88 ; je 0xbf964 ; ret
0x0000000000078615 : add al, 0x89 ; ret 0xf41
0x00000000001255e9 : add al, 0x89 ; retf 0x8d49
0x0000000000125741 : add al, 0x89 ; retf 0x8d4d
0x000000000004b2e0 : add al, 0x89 ; retf 0xe0c1
0x0000000000162be1 : add al, 0x89 ; retf 0xeac0
0x0000000000034b0b : add al, 0x8a ; add r8, rdx ; jmp r8
0x00000000000b6be4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f1122 : add al, 0x8b ; push rbp ; add al, 1 ; ret 0x341
0x000000000006f9dd : add al, 0x8e ; add rax, rsi ; jmp rax
0x00000000001502a8 : add al, 0x8f ; add rax, rdi ; jmp rax
0x000000000007a9a8 : add al, 0x90 ; add rax, rbx ; jmp rax
0x0000000000067a2d : add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000bf353 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000c001a : add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2de7 : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000001262a2 : add al, 0xa ; ret
0x0000000000067110 : add al, 0xa1 ; add rax, rcx ; jmp rax
0x00000000000676f4 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000094fe2 : add al, 0xa8 ; add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x00000000000956ec : add al, 0xa8 ; add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x00000000000e82f9 : add al, 0xaa ; add rax, rdx ; jmp rax
0x00000000000e7965 : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000000fff67 : add al, 0xb7 ; add rax, rdi ; jmp rax
0x000000000015ab17 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003748c : add al, 0xb8 ; ret
0x00000000000ffe04 : add al, 0xba ; add rax, r10 ; jmp rax
0x0000000000104314 : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000ffcb2 : add al, 0xbe ; add rax, r14 ; jmp rax
0x00000000000bf28b : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000eca87 : add al, 0xc2 ; jmp 0xeca61
0x0000000000058939 : add al, 0xc8 ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x000000000005893d : add al, 0xc9 ; xor eax, eax ; ret
0x00000000000a3a74 : add al, 0xd ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e052c : add al, 0xd0 ; ret
0x0000000000163f4b : add al, 0xd7 ; xor eax, eax ; ret
0x000000000019b959 : add al, 0xd8 ; test rax, rax ; je 0x19b969 ; call rax
0x0000000000033d1f : add al, 0xe0 ; test rax, rax ; je 0x33d2f ; call rax
0x000000000013880f : add al, 0xe9 ; retf
0x000000000010f84e : add al, 0xeb ; ret
0x00000000000370d9 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00000000000abbd1 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc8e : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000001814fd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000015a7a4 : add al, 0xf ; retf 0x1689
0x000000000015a764 : add al, 0xf ; retf 0x5089
0x00000000000c7983 : add al, 0xf ; test byte ptr [rax], cl ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x0000000000143ff6 : add al, 0xf ; test byte ptr [rbx - 0x7d000000], ah ; ret 0x4801
0x00000000000d2125 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000ba8fb : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000015ec11 : add al, 0xf ; xchg byte ptr [rax - 0x76ffffff], ah ; retf 0x894c
0x0000000000171263 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000012523e : add al, 0xfd ; sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000135498 : add al, 0xff ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000013f08e : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d2158 : add al, 1 ; add byte ptr [rax], al ; ret
0x0000000000112698 : add al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000660bb : add al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e100d : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1125 : add al, 1 ; ret 0x341
0x000000000011ca45 : add al, 1 ; ror dword ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000066132 : add al, 1 ; xor eax, eax ; ret
0x0000000000036e2d : add al, 2 ; mov eax, r8d ; ret
0x000000000014c5be : add al, 2 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000036dcb : add al, 2 ; test eax, eax ; jne 0x36de1 ; mov eax, r8d ; ret
0x0000000000191d27 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007ac67 : add al, 3 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rbx ; jmp rax
0x000000000007ac09 : add al, 3 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rbx ; jmp rax
0x00000000000baa48 : add al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b46a1 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000b48cc : add al, 7 ; ret
0x000000000018e7c4 : add al, 7 ; vzeroupper ; ret
0x000000000008fe17 : add al, 8 ; add byte ptr [rax], al ; ret
0x0000000000125b7b : add al, 8 ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000ad72f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000102561 : add al, 9 ; ret
0x00000000000bad4b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011c85f : add al, bl ; retf 0xed83
0x000000000019b17e : add al, bpl ; retf
0x00000000000eb2cf : add al, byte ptr [r8 - 0x6bf0a206] ; ret 0xb60f
0x000000000018b332 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000b9bc1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000000eb2d0 : add al, byte ptr [rax - 0x6bf0a206] ; ret 0xb60f
0x000000000012eaf6 : add al, byte ptr [rax] ; add al, ch ; ret 0xfffc
0x000000000013637e : add al, byte ptr [rax] ; add al, ch ; retf 0x118
0x00000000000624b6 : add al, byte ptr [rax] ; add bh, bl ; call 0x1205aed5
0x00000000000a8f92 : add al, byte ptr [rax] ; add bh, dh ; ret
0x000000000002debf : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000f371c : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000fc6b8 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x728d
0x00000000000af112 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000008e861 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; je 0x8e895 ; adc al, ch ; ret 0xf96a
0x0000000000112b3a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e6909 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d7593 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000193988 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000198221 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000714e3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181e5d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a75b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000184a81 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181e81 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002c78d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x0000000000036cb6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000150e33 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000153943 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000153003 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000115801 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x111ab6
0x0000000000158e91 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r8
0x0000000000105d35 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000154ea6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x00000000000463e0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000005ae45 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001300b3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000012022a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000089c4b : add al, byte ptr [rax] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000f1399 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x00000000000aed88 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000047896 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000038543 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x000000000010cc2d : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6af0fe05], al ; ret
0x000000000010747f : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b7fd07], al ; ret 0x940f
0x000000000012f7f9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7af0fe05], al ; retf
0x00000000001956c4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000009b69b : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000011dbb8 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000083986 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x76b3d395], cl ; ret 0x8348
0x0000000000110894 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ror byte ptr [rax - 0x77], 1 ; retf
0x000000000002fbab : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; xor ecx, dword ptr [rcx - 0x77] ; retf
0x000000000011cede : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000000a7615 : add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret
0x0000000000129b3d : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000010fe56 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf02
0x000000000010fe4d : add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000000d999a : add al, byte ptr [rax] ; add dh, dh ; rol dword ptr [rdi + rcx], 0x84 ; ret
0x000000000018e0d8 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000011fe58 : add al, byte ptr [rax] ; mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x000000000013b8ac : add al, byte ptr [rax] ; mov rax, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x000000000013b7aa : add al, byte ptr [rax] ; mov rdi, r12 ; call rbx
0x000000000019a756 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000137f1b : add al, byte ptr [rax] ; pop r12 ; pop r13 ; ret
0x000000000013f99f : add al, byte ptr [rax] ; ret
0x000000000018c648 : add al, byte ptr [rax] ; vzeroupper ; ret
0x0000000000036dcc : add al, byte ptr [rbp + 0x440775c0] ; mov eax, eax ; ret
0x000000000013f8e7 : add al, byte ptr [rbp - 0x77] ; sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x00000000001229b7 : add al, byte ptr [rbx + 0x377426f8] ; mov eax, r8d ; ret
0x00000000000e9d7d : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000097942 : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000105ae1 : add al, byte ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000098044 : add al, byte ptr [rcx + rcx*4 - 0x40] ; add rsp, 0x18 ; ret
0x0000000000036e2e : add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d7364 : add al, byte ptr [rcx - 0x70a3d706] ; add dh, byte ptr [rsi + 3] ; ret
0x0000000000056566 : add al, byte ptr [rcx - 0x77] ; ret
0x0000000000072e9d : add al, byte ptr [rcx - 9] ; ret
0x000000000013f0b8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000110f35 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000014f922 : add al, byte ptr [rcx] ; or al, byte ptr [rax] ; syscall
0x00000000000d447f : add al, byte ptr [rcx] ; ret
0x000000000005ad23 : add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x00000000000bab4a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000e2386 : add al, ch ; adc al, 0x30 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000135496 : add al, ch ; add al, 0xff ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000107b15 : add al, ch ; add eax, 0x890003f0 ; ret
0x00000000000e4776 : add al, ch ; and al, 0xc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000126f76 : add al, ch ; and al, 0xe4 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015fa51 : add al, ch ; cdq ; ret
0x0000000000055d15 : add al, ch ; cmc ; retf 0xa
0x0000000000115804 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000010a513 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfff2
0x00000000000eaaf3 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; test eax, 0x8948fff3 ; ret
0x00000000000e2556 : add al, ch ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000135ea6 : add al, ch ; hlt ; hlt ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000e45a6 : add al, ch ; hlt ; or eax, 0x8948fff4 ; ret 0x8548
0x0000000000143dc6 : add al, ch ; in al, 0x53 ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009c21e : add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x00000000000d91a9 : add al, ch ; int1 ; ret
0x000000000002fcc7 : add al, ch ; jb 0x2fcd4 ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000000fe5ab : add al, ch ; jg 0xfe624 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000fedab : add al, ch ; jg 0xfee1c ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000005739d : add al, ch ; jge 0x5738b ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001551eb : add al, ch ; jmp qword ptr [rsi]
0x0000000000128e20 : add al, ch ; jp 0x128df1 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000142d7d : add al, ch ; lodsd eax, dword ptr [rsi] ; and eax, 0x8948ffee ; ret
0x0000000000133ab8 : add al, ch ; loop 0x133adc ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000fc8c4 : add al, ch ; mov dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff09c : add al, ch ; mov fs, word ptr [rdx - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000013d1e7 : add al, ch ; movsxd rax, dword ptr [rcx - 0x7cb70012] ; ret
0x0000000000143e1a : add al, ch ; nop ; push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000142941 : add al, ch ; or esp, edi ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f6736 : add al, ch ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000012902c : add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x000000000013ae7b : add al, ch ; outsd dx, dword ptr [rsi] ; retf 0xfff5
0x000000000004922f : add al, ch ; pop rbx ; ret 0xfffd
0x000000000014f536 : add al, ch ; pop rsi ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012d43a : add al, ch ; push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000012d93a : add al, ch ; push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x0000000000127149 : add al, ch ; push rcx ; loop 0x127145 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000013b796 : add al, ch ; push rsp ; mov ecx, 0x89480000 ; ret
0x000000000009c196 : add al, ch ; push rsp ; ret
0x000000000002ac78 : add al, ch ; ret
0x000000000008f278 : add al, ch ; ret 0x66
0x0000000000146968 : add al, ch ; ret 0xede9
0x0000000000144bf8 : add al, ch ; ret 0xef23
0x0000000000143988 : add al, ch ; ret 0xef40
0x00000000000ff088 : add al, ch ; ret 0xf262
0x00000000000ea8c8 : add al, ch ; ret 0xf3ab
0x00000000000c6cf8 : add al, ch ; ret 0xf702
0x000000000012eaf8 : add al, ch ; ret 0xfffc
0x000000000009c23d : add al, ch ; ret 0xffff
0x000000000002e4ef : add al, ch ; retf
0x0000000000136380 : add al, ch ; retf 0x118
0x0000000000112700 : add al, ch ; retf 0x45
0x00000000000314f0 : add al, ch ; retf 0x5a
0x00000000000e2e00 : add al, ch ; retf 0x648
0x00000000000e2280 : add al, ch ; retf 0x659
0x00000000001402c0 : add al, ch ; retf 0xfe30
0x000000000009baaa : add al, ch ; retf 0xffff
0x0000000000103745 : add al, ch ; sbb eax, 0x8948fff2 ; ret 0x8b64
0x00000000000f5c5f : add al, ch ; sbb edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x000000000012eb49 : add al, ch ; shr dword ptr [rdx - 0x11], 1 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000014807d : add al, ch ; std ; retf
0x000000000014ce21 : add al, ch ; sub dword ptr [rsi + rbp*8 + 0x158d48ff], ebp ; retf 0x706
0x0000000000119562 : add al, ch ; test al, 0xbe ; lock dec dword ptr [rax + 1] ; ret
0x000000000014f706 : add al, ch ; xchg eax, esp ; pop rsp ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000136766 : add al, ch ; xor al, 0xec ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000104553 : add al, dh ; add al, 0x34 ; add cl, ch ; retf
0x000000000005ad21 : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x0000000000162f46 : add bh, bh ; adc bl, ch ; retf
0x0000000000049cbf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000014d62f : add bh, bh ; add byte ptr [rax + 0x31], cl ; ret 0xc148
0x0000000000197c7f : add bh, bh ; dec dword ptr [rax + 0x21] ; retf 0x944
0x00000000001987b3 : add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x00000000000579ec : add bh, bh ; je 0x57a1c ; or byte ptr [rax + 0xf], cl ; retf 0x854d
0x0000000000057b1b : add bh, bh ; je 0x57b4b ; sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x000000000010f9dc : add bh, bh ; jne 0x10f9ee ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000d1278 : add bh, bh ; ret
0x00000000000624b8 : add bh, bl ; call 0x1205aed3
0x000000000005ac69 : add bh, byte ptr [rax + 1] ; ret
0x000000000005ae98 : add bh, byte ptr [rax + 2] ; ret
0x00000000001164fd : add bh, byte ptr [rax - 1] ; jmp 0x1164cf
0x0000000000123d9d : add bh, byte ptr [rax - 1] ; jmp 0x123d6f
0x0000000000123e55 : add bh, byte ptr [rax - 1] ; jmp 0x123e27
0x000000000012409d : add bh, byte ptr [rax - 1] ; jmp 0x12406f
0x00000000000466cb : add bh, byte ptr [rax - 1] ; ret
0x0000000000195a92 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000012cf7f : add bh, byte ptr [rcx] ; ret 0x840f
0x00000000000ee178 : add bh, byte ptr [rcx] ; retf
0x0000000000085a2a : add bh, cl ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000001988b4 : add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x00000000000a8f94 : add bh, dh ; ret
0x000000000002d945 : add bh, dh ; ret 0
0x000000000002d939 : add bh, dh ; ret 0xf800
0x000000000004c0af : add bh, dh ; ret 0xffef
0x0000000000066353 : add bl, al ; call 0x132de4
0x00000000000980ee : add bl, al ; endbr64 ; xor eax, eax ; ret
0x000000000014b5d2 : add bl, al ; mov dword ptr [rsi], 0xa ; ret
0x000000000014b5d9 : add bl, al ; mov dword ptr [rsi], 0xb ; ret
0x00000000000e894c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ef32d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e7ecc : add bl, al ; nop ; mov eax, 0x7e ; ret
0x0000000000153aad : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000abc2a : add bl, al ; nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x000000000019c1ef : add bl, al ; nop dword ptr [rax] ; ret
0x00000000000a1a44 : add bl, al ; ret
0x000000000013f0c4 : add bl, al ; xor eax, eax ; ret
0x000000000004501b : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000004517f : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000eb352 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000119b41 : add bl, byte ptr [rax + rsi + 0x31] ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000119b01 : add bl, byte ptr [rax + rsi + 0x31] ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x00000000001197c6 : add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001199a4 : add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x8004
0x000000000014c5bf : add bl, byte ptr [rbx + 0x5d] ; mov eax, r8d ; ret
0x00000000000eb353 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006589d : add bl, byte ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000d664b : add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e60fd : add bl, ch ; ret
0x000000000014c128 : add bl, ch ; ret 0x2bf
0x00000000000843f3 : add bl, ch ; ret 0x43c7
0x000000000010f71b : add bl, ch ; ret 0x9066
0x00000000000c376e : add bl, ch ; ret 0xc748
0x00000000000843ea : add bl, ch ; retf
0x0000000000161ac4 : add bl, ch ; retf 0x14e8
0x00000000000d669e : add bl, ch ; retf 0x8948
0x00000000000e1f9a : add bl, ch ; retf 0x8d48
0x00000000000db42b : add bl, ch ; retf 0x9066
0x000000000010f864 : add bl, ch ; retf 0xcb8
0x0000000000150ff4 : add bl, ch ; retf 0xe4e8
0x0000000000095877 : add bl, ch ; retf 0xf66
0x000000000004580f : add bl, dh ; addps xmm0, xmm0 ; ret
0x00000000000bb0ff : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000bb10f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000019a757 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000000457b6 : add bl, dh ; mulps xmm0, xmmword ptr [rip + 0x179ee9] ; ret
0x0000000000045791 : add bl, dh ; mulps xmm0, xmmword ptr [rip + 0x179f12] ; ret
0x00000000001157ff : add byte ptr [r10], r8b ; add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000011f7e3 : add byte ptr [r11 + rcx*4 + 0x7d], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011683f : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000d5ffd : add byte ptr [r8 + 9], r9b ; ret 0x850f
0x00000000000a5477 : add byte ptr [r8 - 0x77], r9b ; ret 0x14eb
0x00000000001085ff : add byte ptr [r8 - 0x77], r9b ; ret 0xb70f
0x000000000006979f : add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000131578 : add byte ptr [r8 - 0x7d], r9b ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000000c6005 : add byte ptr [r8], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x00000000000d323d : add byte ptr [r8], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000148078 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; std ; retf
0x00000000000a517a : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000a52a0 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000a71c7 : add byte ptr [r9 + 0xf], 0x93 ; ret
0x000000000013f0b6 : add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x0000000000066127 : add byte ptr [rax + 0x10], bh ; ret
0x0000000000116e39 : add byte ptr [rax + 0x10], bh ; syscall
0x0000000000122438 : add byte ptr [rax + 0x119], bh ; syscall
0x00000000000e60a2 : add byte ptr [rax + 0x142], bh ; syscall
0x000000000019426e : add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000018212e : add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x0000000000130227 : add byte ptr [rax + 0x16], bh ; ret
0x0000000000130226 : add byte ptr [rax + 0x16], dil ; ret
0x000000000004564f : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x0000000000196282 : add byte ptr [rax + 0x21], cl ; ret 0x8548
0x0000000000054edf : add byte ptr [rax + 0x21], cl ; ret 0x8948
0x00000000000bffd5 : add byte ptr [rax + 0x21], cl ; ret 0x8d48
0x0000000000095bc7 : add byte ptr [rax + 0x29], cl ; enter -0x177d, 1 ; ret
0x00000000000f3fb9 : add byte ptr [rax + 0x29], cl ; enter 0x148, -0x3e ; jmp 0xf3f56
0x000000000007d4be : add byte ptr [rax + 0x29], cl ; ret
0x00000000000d815b : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002cefe : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000162077 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000162cd4 : add byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000387e7 : add byte ptr [rax + 0x29], cl ; retf
0x000000000012a9d6 : add byte ptr [rax + 0x29], cl ; retf 0x21e8
0x000000000005841f : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000081a03 : add byte ptr [rax + 0x29], cl ; retf 0x8949
0x000000000012a824 : add byte ptr [rax + 0x29], cl ; retf 0xd3e8
0x000000000009c57b : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000000d3a3c : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000014d631 : add byte ptr [rax + 0x31], cl ; ret 0xc148
0x000000000002dafb : add byte ptr [rax + 0x39], cl ; ret
0x000000000010b93e : add byte ptr [rax + 0x39], cl ; ret 0x2e74
0x000000000010d81d : add byte ptr [rax + 0x39], cl ; ret 0x3074
0x000000000010a2c2 : add byte ptr [rax + 0x39], cl ; ret 0x6076
0x000000000010b74d : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000091ad7 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000097b63 : add byte ptr [rax + 0x39], cl ; ret 0x8c75
0x00000000000a6174 : add byte ptr [rax + 0x39], cl ; ret 0xc019
0x000000000009900f : add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x000000000002ce08 : add byte ptr [rax + 0x39], cl ; retf
0x00000000001698a6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000001701bf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000002c2f4 : add byte ptr [rax + 0x39], cl ; retf 0x3775
0x000000000005919f : add byte ptr [rax + 0x39], cl ; retf 0x777
0x000000000008b9d9 : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000016e973 : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000097177 : add byte ptr [rax + 0x39], cl ; retf 0x860f
0x0000000000097095 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000001693b6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000000971c7 : add byte ptr [rax + 0x39], cl ; retf 0xbb77
0x0000000000193fa7 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000018f0e4 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000035788 : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000fca39 : add byte ptr [rax + 0x45894800], al ; xor al, ch ; retf
0x00000000000bf367 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000116661 : add byte ptr [rax + 0x48], bh ; syscall
0x0000000000045378 : add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x000000000013a0dc : add byte ptr [rax + 0x578b4803], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000256fd : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000014b65e : add byte ptr [rax + 0x5d5bc031], dl ; pop r12 ; ret
0x0000000000152a43 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000083fe1 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000043b8e : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000066617 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000008101d : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rdx ; jmp rax
0x0000000000026ec8 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000198129 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000822b8 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdx ; jmp rax
0x00000000000ebc63 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000007a94a : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rbx ; jmp rax
0x0000000000081119 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rdx ; jmp rax
0x000000000006f9da : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rax, rsi ; jmp rax
0x000000000007a9a5 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rbx ; jmp rax
0x000000000010d2a2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000e82f6 : add byte ptr [rax + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x0000000000104311 : add byte ptr [rax + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000bf288 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000013ea71 : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x0000000000083f7d : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000006560e : add byte ptr [rax + 0x63], cl ; ret
0x000000000012cf6d : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000aa4ca : add byte ptr [rax + 0x63], cl ; ret 0x4e8d
0x000000000010329f : add byte ptr [rax + 0x63], cl ; ret 0x5489
0x00000000000fc6ba : add byte ptr [rax + 0x63], cl ; ret 0x728d
0x0000000000186e6b : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000000000d99b2 : add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000033df0 : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000102cbf : add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000001052cf : add byte ptr [rax + 0x63], cl ; ret 0x8b4d
0x00000000000fd90c : add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000db583 : add byte ptr [rax + 0x63], cl ; ret 0xd789
0x000000000004db6e : add byte ptr [rax + 0x63], cl ; retf
0x00000000000f1a08 : add byte ptr [rax + 0x63], cl ; retf 0x25eb
0x00000000000f8aa1 : add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000004d93b : add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x0000000000050783 : add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000001018f7 : add byte ptr [rax + 0x63], cl ; retf 0x8eb
0x00000000000f42ac : add byte ptr [rax + 0x63], cl ; ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x0000000000186f4f : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 1], 0xf8 ; ret
0x00000000000b9bbf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000011a09f : add byte ptr [rax + 0x7522017f], al ; ret 0x8d48
0x000000000018db3f : add byte ptr [rax + 0x77f8c517], cl ; ret
0x00000000000bb66f : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000046718 : add byte ptr [rax + 0x7f], bh ; syscall
0x000000000013fd9f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x0000000000047437 : add byte ptr [rax + 0x80], bh ; syscall
0x0000000000046764 : add byte ptr [rax + 0x82], bh ; syscall
0x00000000001229c7 : add byte ptr [rax + 0x95], bh ; syscall
0x0000000000057f7d : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000000f531f : add byte ptr [rax + 0xc], bh ; ret
0x0000000000025a35 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000004653e : add byte ptr [rax + 0xd], bh ; syscall
0x00000000000463e3 : add byte ptr [rax + 0xe], bh ; syscall
0x000000000004bfb3 : add byte ptr [rax + 0xf48f685], al ; ret 0x13eb
0x0000000000037178 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00000000000b4ae9 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000001086ef : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480142 ; ret 0x8401
0x000000000002a407 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480142 ; ret 0xf01
0x000000000012e49f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480143 ; ret
0x0000000000129b9f : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348014a ; ret 0x4801
0x000000000012d62f : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348014b ; ret
0x00000000000e3717 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480153 ; ret
0x00000000000e20e0 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000e7c30 : add byte ptr [rax + 0xf], cl ; ret 0x19e9
0x000000000015c2b6 : add byte ptr [rax + 0xf], cl ; ret 0x3145
0x00000000000e7e8d : add byte ptr [rax + 0xf], cl ; ret 0x49c3
0x00000000001620d0 : add byte ptr [rax + 0xf], cl ; ret 0x4fe9
0x00000000000e7ae5 : add byte ptr [rax + 0xf], cl ; ret 0x64e9
0x00000000000a242c : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e7bdb : add byte ptr [rax + 0xf], cl ; ret 0x6ee9
0x000000000015f798 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000e4403 : add byte ptr [rax + 0xf], cl ; ret 0x854d
0x000000000002cb1c : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000113b3a : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000e7f89 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000e7b99 : add byte ptr [rax + 0xf], cl ; ret 0xb0e9
0x00000000000e7c94 : add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x0000000000118f95 : add byte ptr [rax + 0xf], cl ; ret 0xc7e9
0x00000000000e7c7a : add byte ptr [rax + 0xf], cl ; ret 0xcfe9
0x00000000000e7b63 : add byte ptr [rax + 0xf], cl ; ret 0xe6e9
0x00000000000a5aba : add byte ptr [rax + 0xf], cl ; ret 0xf3c3
0x00000000000a36aa : add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x00000000000a22d3 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e793a : add byte ptr [rax + 0xf], cl ; ret 0xfe9
0x00000000001423b6 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000e7c4a : add byte ptr [rax + 0xf], cl ; ret 0xffe9
0x0000000000157098 : add byte ptr [rax + 0xf], cl ; retf 0x3948
0x00000000000c047c : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000009b3b1 : add byte ptr [rax + 0xf], cl ; retf 0xc183
0x00000000000e7ec7 : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000e7ec6 : add byte ptr [rax + 0xfc17], dil ; ret
0x00000000000e7ff7 : add byte ptr [rax + 0xff], bh ; ret
0x00000000000e7ff6 : add byte ptr [rax + 0xff], dil ; ret
0x000000000010f7df : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000005ac30 : add byte ptr [rax + 1], bh ; ret
0x00000000000af114 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000187fc9 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000000cc6b1 : add byte ptr [rax + 1], cl ; dec byte ptr [rcx - 0x76b34eec] ; retf 0x8348
0x00000000000c7d08 : add byte ptr [rax + 1], cl ; jmp 0xffffffff8d573f9e
0x0000000000098834 : add byte ptr [rax + 1], cl ; ret
0x00000000000d380f : add byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000d996b : add byte ptr [rax + 1], cl ; ret 0x7b8b
0x0000000000187fc0 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013e425 : add byte ptr [rax + 1], cl ; ret 0xe183
0x00000000000f8b8c : add byte ptr [rax + 1], cl ; ret 0xf66
0x0000000000049504 : add byte ptr [rax + 1], cl ; retf
0x000000000017027d : add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000448ee : add byte ptr [rax + 1], cl ; retf 0xdeb
0x000000000010f7de : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x0000000000097366 : add byte ptr [rax + 1], dil ; ret
0x000000000005ae43 : add byte ptr [rax + 2], bh ; ret
0x000000000018764c : add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000d5ffe : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000014db1c : add byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000ab8f7 : add byte ptr [rax + rax*8 - 0x76b2d38c], al ; ret
0x00000000000baccc : add byte ptr [rax + rax], 0 ; ret
0x000000000006549c : add byte ptr [rax + rax], al ; add al, ch ; retf
0x00000000000f7fcc : add byte ptr [rax + rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000009b29c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000011c9b2 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000a1b3d : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d27f5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x000000000019b9c3 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004a5c4 : add byte ptr [rax + rcx*2 - 0x77], ah ; adc ecx, dword ptr [rax - 0x75] ; jge 0x4a5de ; call rax
0x00000000000a5235 : add byte ptr [rax + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000084027 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x0000000000151da4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000046e9d : add byte ptr [rax - 0x2d], cl ; loopne 0x46ef3 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000002723e : add byte ptr [rax - 0x2f7600cf], dl ; syscall
0x0000000000045714 : add byte ptr [rax - 0x3991f09a], al ; ret
0x0000000000140054 : add byte ptr [rax - 0x39], cl ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000004d03f : add byte ptr [rax - 0x39], cl ; ret
0x000000000005b4cc : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d2d1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000004646f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000119987 : add byte ptr [rax - 0x3d7cb7fe], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000888e8 : add byte ptr [rax - 0x3d8b0000], al ; jmp 0x88888
0x0000000000044f29 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000013395a : add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x00000000000256eb : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000003344d : add byte ptr [rax - 0x3f], cl ; ret 0x4911
0x0000000000033421 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000001343b9 : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000d303d : add byte ptr [rax - 0x3f], cl ; retf 0x4804
0x00000000000d37dd : add byte ptr [rax - 0x3f], cl ; retf 0x4c02
0x0000000000046139 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000081a18 : add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rcx + 0x29] ; retf
0x0000000000116a34 : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000da03f : add byte ptr [rax - 0x41], cl ; ret
0x000000000004e28c : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000051337 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000011a7f7 : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x000000000011f912 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x000000000003591f : add byte ptr [rax - 0x73], cl ; add eax, 0x180aac ; ret
0x00000000000d283f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d284f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000e4b76 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109622 ; syscall
0x00000000000e4a36 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109762 ; syscall
0x00000000000e497e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10981a ; syscall
0x00000000000e48a2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1098ee ; syscall
0x00000000000e46d2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109a7e ; syscall
0x00000000000e450e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109bfa ; syscall
0x00000000000e4154 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109f5c ; syscall
0x00000000000e2c46 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b3e2 ; syscall
0x00000000000e2b06 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b522 ; syscall
0x00000000000e2a4e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b5da ; syscall
0x00000000000e2682 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b99e ; syscall
0x00000000000e24b2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10bb2e ; syscall
0x00000000000e22ee : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10bcaa ; syscall
0x00000000000e1a06 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10c53a ; syscall
0x00000000000d5c52 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x118206 ; syscall
0x00000000000d5a1e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x11843a ; syscall
0x00000000000cd812 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1226a6 ; syscall
0x000000000009f9f2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14b186 ; syscall
0x00000000000a137e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14c85a ; syscall
0x00000000000a119e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ca3a ; syscall
0x00000000000a0fb2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cc26 ; syscall
0x00000000000a0f42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cc96 ; syscall
0x00000000000a0d12 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cec6 ; syscall
0x000000000009cc72 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14df06 ; syscall
0x000000000009cc12 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14df66 ; syscall
0x000000000009c852 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14e326 ; syscall
0x000000000009c5f2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14e586 ; syscall
0x000000000009bfaa : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ebce ; syscall
0x000000000009bf72 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ec06 ; syscall
0x000000000009dc22 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ff36 ; syscall
0x000000000009d186 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1509c2 ; syscall
0x0000000000099223 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x154925 ; syscall
0x00000000000991f2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x154966 ; syscall
0x0000000000098f72 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x154be6 ; syscall
0x0000000000098a4e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x15510a ; syscall
0x0000000000097f73 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x155565 ; syscall
0x0000000000097d9e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x15573a ; syscall
0x0000000000097c02 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1558d6 ; syscall
0x0000000000096ac4 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1569d4 ; syscall
0x0000000000096584 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x156f14 ; syscall
0x00000000000961e0 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1572b8 ; syscall
0x0000000000095e74 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x157624 ; syscall
0x00000000000947f0 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x158ca8 ; syscall
0x0000000000094530 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x158f68 ; syscall
0x00000000000941bc : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1592dc ; syscall
0x0000000000087401 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x166057 ; syscall
0x0000000000087004 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x166454 ; syscall
0x0000000000086f59 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1664ff ; syscall
0x00000000000850f2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x16adc6 ; syscall
0x0000000000064196 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x189292 ; syscall
0x0000000000063f12 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x189512 ; syscall
0x0000000000061d3e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x18b6de ; syscall
0x0000000000061bfe : add byte ptr [rax - 0x73], cl ; cmp eax, 0x18b81e ; syscall
0x0000000000057e62 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1955a6 ; syscall
0x0000000000057c82 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x195786 ; syscall
0x0000000000057752 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x195cb6 ; syscall
0x00000000000554de : add byte ptr [rax - 0x73], cl ; cmp eax, 0x197cfa ; syscall
0x000000000005538a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x197e4e ; syscall
0x0000000000055355 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x197e83 ; syscall
0x000000000004abbe : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a25fa ; syscall
0x000000000004aafe : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a26ba ; syscall
0x000000000004aa36 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a2782 ; syscall
0x000000000004a95e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a285a ; syscall
0x0000000000049a56 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a2f0a ; syscall
0x0000000000049991 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a2fcf ; syscall
0x00000000000497ef : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a3171 ; syscall
0x0000000000049715 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a324b ; syscall
0x000000000003b71f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b11f1 ; syscall
0x0000000000039d9c : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b2b3c ; syscall
0x0000000000038a55 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b3ddb ; syscall
0x0000000000038a28 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b3e08 ; syscall
0x00000000000388e3 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b3f4d ; syscall
0x00000000000296c6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c67f2 ; syscall
0x000000000002955a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c695e ; syscall
0x000000000002943a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c6a7e ; syscall
0x0000000000025885 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c70a3 ; syscall
0x000000000019bdbe : add byte ptr [rax - 0x73], cl ; cmp eax, 0x50ba2 ; syscall
0x000000000019bf7e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x5155a ; syscall
0x000000000019c2ae : add byte ptr [rax - 0x73], cl ; cmp eax, 0x52f62 ; syscall
0x000000000016157e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x8ee32 ; syscall
0x0000000000160396 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9001a ; syscall
0x00000000001602b6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x900fa ; syscall
0x00000000001600ce : add byte ptr [rax - 0x73], cl ; cmp eax, 0x902e2 ; syscall
0x000000000016002e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x90382 ; syscall
0x000000000015ff8e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x90422 ; syscall
0x000000000015fede : add byte ptr [rax - 0x73], cl ; cmp eax, 0x904d2 ; syscall
0x000000000015f95e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x90a52 ; syscall
0x000000000015572e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a3ba ; syscall
0x00000000001555ce : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a51a ; syscall
0x00000000001553c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a726 ; syscall
0x0000000000155222 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a8c6 ; syscall
0x000000000015508e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9aa5a ; syscall
0x0000000000154f4e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ab9a ; syscall
0x0000000000154dee : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9acfa ; syscall
0x0000000000154cde : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ae0a ; syscall
0x000000000015182e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9e2b6 ; syscall
0x000000000014fb16 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ff0a ; syscall
0x000000000014f9d6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa004a ; syscall
0x000000000014f91e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa0102 ; syscall
0x000000000014f832 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa01e6 ; syscall
0x000000000014f662 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa0386 ; syscall
0x000000000014f49e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa0522 ; syscall
0x0000000000149b30 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa5d2c ; syscall
0x0000000000147992 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa7e36 ; syscall
0x000000000014765a : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa816e ; syscall
0x00000000001472da : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa84ee ; syscall
0x00000000001470b4 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8714 ; syscall
0x0000000000146f52 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8876 ; syscall
0x0000000000146d15 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8ab3 ; syscall
0x00000000001462be : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9452 ; syscall
0x000000000014613c : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa95d4 ; syscall
0x0000000000146102 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa960e ; syscall
0x0000000000145fea : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9726 ; syscall
0x00000000001457a6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9f6a ; syscall
0x00000000001456de : add byte ptr [rax - 0x73], cl ; cmp eax, 0xaa032 ; syscall
0x00000000001455c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xaa14e ; syscall
0x00000000001441ef : add byte ptr [rax - 0x73], cl ; cmp eax, 0xab2c9 ; syscall
0x0000000000140aae : add byte ptr [rax - 0x73], cl ; cmp eax, 0xae762 ; syscall
0x00000000001407b2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xaea5e ; syscall
0x000000000013c482 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb2d7a ; syscall
0x000000000013bf02 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb32de ; syscall
0x000000000013bd3e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb345a ; syscall
0x000000000013bc76 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb34c2 ; syscall
0x000000000013bb36 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb3602 ; syscall
0x000000000013ba7e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb36ba ; syscall
0x000000000013b38e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb3da2 ; syscall
0x000000000013b06e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb40c2 ; syscall
0x000000000013aeb2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb427e ; syscall
0x0000000000137b26 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb749a ; syscall
0x00000000001379e6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb75da ; syscall
0x000000000013792e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb7692 ; syscall
0x000000000013784e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb776a ; syscall
0x0000000000137382 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb7bbe ; syscall
0x0000000000136db2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb812e ; syscall
0x0000000000136892 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8606 ; syscall
0x00000000001366c6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8792 ; syscall
0x0000000000136586 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb88d2 ; syscall
0x00000000001364ce : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb898a ; syscall
0x00000000001363ee : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8a62 ; syscall
0x0000000000135fd2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8e36 ; syscall
0x00000000001359b6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb93f2 ; syscall
0x000000000013585e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb954a ; syscall
0x000000000013579e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb960a ; syscall
0x00000000001356b6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb96ea ; syscall
0x00000000001355d2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9796 ; syscall
0x0000000000134f72 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9db6 ; syscall
0x0000000000134d66 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9f7a ; syscall
0x0000000000134c0e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xba0d2 ; syscall
0x0000000000134b4e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xba192 ; syscall
0x0000000000134a66 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xba272 ; syscall
0x0000000000133e52 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbae0e ; syscall
0x0000000000133be2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbb03e ; syscall
0x0000000000133462 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbb75e ; syscall
0x0000000000129726 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5402 ; syscall
0x00000000001295e6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5542 ; syscall
0x000000000012952e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc55fa ; syscall
0x0000000000129154 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc59cc ; syscall
0x0000000000128f52 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5b96 ; syscall
0x0000000000128d72 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5d2e ; syscall
0x0000000000128bae : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5eaa ; syscall
0x0000000000128ade : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5f26 ; syscall
0x0000000000128a14 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5ff0 ; syscall
0x000000000012897f : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6085 ; syscall
0x0000000000127c76 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6d5a ; syscall
0x0000000000127b36 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6e9a ; syscall
0x0000000000127a7e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6f52 ; syscall
0x0000000000127484 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc7544 ; syscall
0x0000000000127282 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc76ee ; syscall
0x00000000001270a2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc7866 ; syscall
0x0000000000126ede : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc79c2 ; syscall
0x000000000011b8fe : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd2c4a ; syscall
0x000000000011b7e2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd2d66 ; syscall
0x000000000011b382 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd31c6 ; syscall
0x000000000011ae57 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd36f1 ; syscall
0x0000000000109d37 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xe4541 ; syscall
0x00000000000573c7 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d282f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000011d1f7 : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000001192a8 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000045471 : add byte ptr [rax - 0x73], cl ; retf 0x42e9
0x0000000000100fe7 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000009953f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000199e0b : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000013b8ad : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; mov rdi, r12 ; call rax
0x000000000011ec87 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000004a6d9 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000a16ff : add byte ptr [rax - 0x75], cl ; add eax, 0x148849 ; call qword ptr [rax]
0x000000000009aa71 : add byte ptr [rax - 0x75], cl ; add eax, 0x14f347 ; call qword ptr [rax]
0x000000000015fe6f : add byte ptr [rax - 0x75], cl ; add eax, 0x8b619 ; call qword ptr [rax]
0x000000000015f862 : add byte ptr [rax - 0x75], cl ; add eax, 0x8bc26 ; call qword ptr [rax]
0x0000000000162f3f : add byte ptr [rax - 0x75], cl ; add eax, 0x8cf41 ; call qword ptr [rax]
0x000000000014b225 : add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000013ab8e : add byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdi, rbx ; call rax
0x0000000000154b47 : add byte ptr [rax - 0x75], cl ; cmp ebp, ebx ; ret
0x000000000014c61d : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f5d37 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000019a24c : add byte ptr [rax - 0x75], cl ; je 0x19a27d ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000009db97 : add byte ptr [rax - 0x75], cl ; je 0x9dbc9 ; mov rdi, r13 ; call rax
0x000000000009eebf : add byte ptr [rax - 0x75], cl ; je 0x9eef1 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x00000000000a182b : add byte ptr [rax - 0x75], cl ; jg 0xa1880 ; mov rsi, rbp ; call rax
0x00000000001337ab : add byte ptr [rax - 0x75], cl ; jl 0x1337db ; cmp al, ch ; retf 0x114
0x0000000000025712 : add byte ptr [rax - 0x75], cl ; jl 0x25742 ; or cl, ch ; retf
0x0000000000028d16 : add byte ptr [rax - 0x75], cl ; jne 0x28cb3 ; mov rdi, rbx ; call rsi
0x00000000000a1a6f : add byte ptr [rax - 0x75], cl ; jnp 0xa1ac1 ; call rax
0x000000000006d9ac : add byte ptr [rax - 0x75], cl ; lea edx, [rax - 0x7c000005] ; ret 0x4830
0x0000000000120237 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000144807 : add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0x7401
0x000000000010fad2 : add byte ptr [rax - 0x75], cl ; push rdx ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000016adef : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004af4f : add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x00000000000abc17 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x00000000001262cc : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x0000000000125156 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000008fdb7 : add byte ptr [rax - 0x75], cl ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000012a487 : add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000162e18 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000008a767 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000000a5226 : add byte ptr [rax - 0x77], cl ; adc ecx, dword ptr [rax + 0x29] ; retf 0x2ee8
0x00000000000a2a44 : add byte ptr [rax - 0x77], cl ; add eax, 0x14b1bc ; ret
0x000000000009844a : add byte ptr [rax - 0x77], cl ; add eax, 0x151e3e ; ret
0x0000000000098421 : add byte ptr [rax - 0x77], cl ; add eax, 0x151e5f ; ret
0x0000000000098401 : add byte ptr [rax - 0x77], cl ; add eax, 0x151e77 ; ret
0x0000000000163303 : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000132af8 : add byte ptr [rax - 0x77], cl ; and al, 0x10 ; call 0x8ed78
0x00000000000b998f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018eaff : add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x0000000000101d6d : add byte ptr [rax - 0x77], cl ; cmp byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000093217 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000067ceb : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000006990f : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000000000fff7e : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; retf 0
0x000000000009e01f : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 0xca] ; syscall
0x000000000005728c : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8949
0x00000000000f4c98 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000129acc : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000096606 : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000151770 : add byte ptr [rax - 0x77], cl ; in eax, 0x89 ; ret
0x000000000011c913 : add byte ptr [rax - 0x77], cl ; je 0x11c927 ; pop rbx ; ret
0x000000000008e863 : add byte ptr [rax - 0x77], cl ; je 0x8e893 ; adc al, ch ; ret 0xf96a
0x00000000000d9137 : add byte ptr [rax - 0x77], cl ; jl 0xd9168 ; sbb al, ch ; ret
0x00000000000a10b7 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x000000000014a68a : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000004a089 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 0xca ; syscall
0x00000000000256b6 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000a5478 : add byte ptr [rax - 0x77], cl ; ret 0x14eb
0x000000000007753c : add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000033bd5 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008aaf7 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000002991e : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000004497e : add byte ptr [rax - 0x77], cl ; ret 0x394c
0x0000000000039ae6 : add byte ptr [rax - 0x77], cl ; ret 0x448b
0x000000000012e60b : add byte ptr [rax - 0x77], cl ; ret 0x57e9
0x000000000006c6d3 : add byte ptr [rax - 0x77], cl ; ret 0x74e8
0x00000000000a9393 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000006277f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x00000000000d6192 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x0000000000070503 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000d6fef : add byte ptr [rax - 0x77], cl ; ret 0x88e9
0x0000000000064ae5 : add byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000009c954 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000019749d : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000621c7 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000062d4f : add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000068910 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e89bb : add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000011f84e : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000ac046 : add byte ptr [rax - 0x77], cl ; ret 0xb1e8
0x00000000000e19db : add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x0000000000108600 : add byte ptr [rax - 0x77], cl ; ret 0xb70f
0x0000000000057834 : add byte ptr [rax - 0x77], cl ; ret 0xbf41
0x00000000000a161a : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000054fa2 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e4103 : add byte ptr [rax - 0x77], cl ; ret 0xcce9
0x00000000000a1e17 : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000000bfb89 : add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x000000000004e16c : add byte ptr [rax - 0x77], cl ; ret 0xf4d
0x0000000000093ab8 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000002b1af : add byte ptr [rax - 0x77], cl ; retf
0x0000000000183484 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000008f298 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000181552 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000062d80 : add byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000008b26c : add byte ptr [rax - 0x77], cl ; retf 0x4966
0x00000000001047f4 : add byte ptr [rax - 0x77], cl ; retf 0x4be9
0x00000000001047dc : add byte ptr [rax - 0x77], cl ; retf 0x55e9
0x00000000001814b0 : add byte ptr [rax - 0x77], cl ; retf 0x6666
0x00000000001816f2 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000003522c : add byte ptr [rax - 0x77], cl ; retf 0x850f
0x00000000000a8275 : add byte ptr [rax - 0x77], cl ; retf 0x8548
0x000000000005880f : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000f7631 : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000059097 : add byte ptr [rax - 0x77], cl ; retf 0x8b49
0x00000000000ed421 : add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x000000000018229a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000005aa27 : add byte ptr [rax - 0x77], cl ; retf 0xa0e8
0x000000000010480c : add byte ptr [rax - 0x77], cl ; retf 0xa7e9
0x00000000000a0a7e : add byte ptr [rax - 0x77], cl ; retf 0xb4eb
0x000000000004dcf9 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001886dc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000000ab807 : add byte ptr [rax - 0x77], cl ; sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000bedc4 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000162dd0 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000002f70d : add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x1f0f
0x0000000000115fbe : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000000fca3b : add byte ptr [rax - 0x77], cl ; xor r8b, r13b ; retf
0x00000000000ab66b : add byte ptr [rax - 0x78], 0x7d ; ret 0x2bf
0x00000000000a76e0 : add byte ptr [rax - 0x78], 0x7d ; ret 0x8944
0x000000000019a6ae : add byte ptr [rax - 0x7ab70000], al ; ret
0x000000000008a57e : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000045335 : add byte ptr [rax - 0x7b], cl ; ret 0x574
0x000000000002704b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x0000000000198223 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000b73f3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000112871 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xd321
0x000000000014ad32 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*2 + 0x41], 0x83 ; call qword ptr [rbx]
0x000000000011924e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x52], cl ; xor eax, eax ; pop rbp ; ret
0x000000000011fe35 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + 0x48], 0x39 ; ret
0x0000000000110614 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rsi + 0x31], 0xd2 ; call rax
0x000000000004c3c4 : add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x000000000013151c : add byte ptr [rax - 0x7bf10000], al ; ret 0
0x000000000017fbb7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000f9ea7 : add byte ptr [rax - 0x7d], cl ; and al, 0x30 ; adc al, 0x83 ; ret
0x00000000000573ef : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33ebbff
0x000000000009e453 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009fd71 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000010ab01 : add byte ptr [rax - 0x7d], cl ; clc ; push qword ptr [rax + rbx*8 - 0x77] ; ret 0xc085
0x000000000004541f : add byte ptr [rax - 0x7d], cl ; clc ; retf
0x0000000000145d5c : add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x000000000014521f : add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax + 0xf] ; retf 0xe8c0
0x000000000009c7bf : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000013e057 : add byte ptr [rax - 0x7d], cl ; out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x0000000000029888 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b4a7 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000010bfc2 : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000000be69f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000006876d : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000004d147 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000bf907 : add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000028355 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f5037 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000012b82f : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000002a436 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000071e73 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000018157f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000119b85 : add byte ptr [rax - 0x7d], cl ; ret 0x6602
0x00000000000cd38f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a2517 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000012c707 : add byte ptr [rax - 0x7d], cl ; ret 0x8330
0x00000000000ece18 : add byte ptr [rax - 0x7d], cl ; ret 0x8b02
0x000000000013fdb7 : add byte ptr [rax - 0x7d], cl ; ret 0x8d01
0x000000000009bcb6 : add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000000fb26f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000139db1 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000a2f80 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000183563 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001815a3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d461f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000099a1a : add byte ptr [rax - 0x7d], cl ; retf
0x000000000009b30f : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000009a6c8 : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000000ad66f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000b506f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000f3bc7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0x840f
0x000000000003265d : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000131579 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000056487 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000002c78f : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x00000000001635e4 : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000036cb8 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000000e7f0c : add byte ptr [rax - 0x7f], cl ; ret 0x231b
0x000000000016ea7b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000086f1f : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000525ef : add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x000000000013f075 : add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x000000000004466d : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x0000000000027b35 : add byte ptr [rax - 1], bh ; ret
0x0000000000093ede : add byte ptr [rax - 1], dil ; ret
0x0000000000142974 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000018f0e1 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000ff018 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000097910 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000187fbd : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8b89 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000017027a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000fff7b : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; retf 0
0x0000000000093ab5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000139dae : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000001871e2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000a2acb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009f7db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x9c257
0x000000000009f3eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000abc23 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000abc4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017126b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000120233 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000a1a6b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000012f6e9 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x00000000000bf31b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000000cd233 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000057403 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000018cfdd : add byte ptr [rax], 0 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000044373 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ecf04 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; fmul qword ptr [rax - 0x77] ; retf
0x0000000000070d6d : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x9bef71d], al ; ret
0x00000000000563f1 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret
0x00000000001565cb : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000056c98 : add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0xfde9
0x000000000013f934 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000fcc61 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000190d43 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009af4b : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000888e9 : add byte ptr [rax], 0 ; jne 0x888b4 ; jmp 0x88887
0x00000000000e5de5 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x000000000012b256 : add byte ptr [rax], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000371b8 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000015fa4f : add byte ptr [rax], al ; add al, ch ; cdq ; ret
0x0000000000115802 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000012d438 : add byte ptr [rax], al ; add al, ch ; push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000012d938 : add byte ptr [rax], al ; add al, ch ; push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x000000000010f385 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000008f276 : add byte ptr [rax], al ; add al, ch ; ret 0x66
0x0000000000146966 : add byte ptr [rax], al ; add al, ch ; ret 0xede9
0x000000000008761d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000001402be : add byte ptr [rax], al ; add al, ch ; retf 0xfe30
0x000000000014807b : add byte ptr [rax], al ; add al, ch ; std ; retf
0x000000000005ad1f : add byte ptr [rax], al ; add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000019bffd : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000197c7d : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x21] ; retf 0x944
0x00000000001987b1 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x000000000004c58d : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x0000000000066351 : add byte ptr [rax], al ; add bl, al ; call 0x132de6
0x00000000000e894a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000153aab : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000a1a42 : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000045019 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000e60fb : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000843f1 : add byte ptr [rax], al ; add bl, ch ; ret 0x43c7
0x000000000010f719 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x00000000000c376c : add byte ptr [rax], al ; add bl, ch ; ret 0xc748
0x00000000000843e8 : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000161ac2 : add byte ptr [rax], al ; add bl, ch ; retf 0x14e8
0x00000000000db429 : add byte ptr [rax], al ; add bl, ch ; retf 0x9066
0x000000000010f862 : add byte ptr [rax], al ; add bl, ch ; retf 0xcb8
0x00000000000bb0fd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000bb10d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000122436 : add byte ptr [rax], al ; add byte ptr [rax + 0x119], bh ; syscall
0x000000000019426c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000018212c : add byte ptr [rax], al ; add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x00000000000f3fb7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; enter 0x148, -0x3e ; jmp 0xf3f58
0x000000000007d4bc : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d8159 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000162075 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000162cd2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000054663 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x000000000005841d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000081a01 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8949
0x00000000000d3a3a : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000801c2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010c9c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000002ce06 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000001698a4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000172cd1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000002c2f2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3775
0x00000000000592dd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x000000000008b9d7 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000018f0e2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000035786 : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000011665f : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000013ea6f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000000c352d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000aa4c8 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x4e8d
0x000000000010329d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x5489
0x0000000000033dee : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000102cbd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000004db6c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000004d939 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x0000000000050781 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000bb66d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000046716 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000013fd9d : add byte ptr [rax], al ; add byte ptr [rax + 0x7fffffff], bh ; ret
0x0000000000047435 : add byte ptr [rax], al ; add byte ptr [rax + 0x80], bh ; syscall
0x0000000000046762 : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000001229c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x95], bh ; syscall
0x00000000000f531d : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; ret
0x0000000000025a33 : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000004653c : add byte ptr [rax], al ; add byte ptr [rax + 0xd], bh ; syscall
0x00000000000463e1 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x000000000004bfb1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f685], al ; ret 0x13eb
0x00000000000e20de : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000015c2b4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x3145
0x00000000000e7e8b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x49c3
0x00000000000e7e4e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e7bd9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x6ee9
0x000000000015f796 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000002cb1a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e7f87 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000e7b97 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb0e9
0x00000000000e7c92 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x00000000000e7b61 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xe6e9
0x00000000000a5ab8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf3c3
0x00000000000e7e34 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e7938 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfe9
0x00000000001423b4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c047a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000005ac2e : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000d2464 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000187fc7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000187fbe : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8b8a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000013176f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf
0x000000000017027b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000005ae41 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000d27f3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000084025 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000002723c : add byte ptr [rax], al ; add byte ptr [rax - 0x2f7600cf], dl ; syscall
0x0000000000045712 : add byte ptr [rax], al ; add byte ptr [rax - 0x3991f09a], al ; ret
0x00000000000c2c35 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000133958 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x00000000000256e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000003344b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4911
0x000000000003341f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000001343b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000d37db : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x4c02
0x0000000000046137 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000081a16 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rcx + 0x29] ; retf
0x0000000000116a32 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000da1f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; ret
0x00000000000d283d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d284d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d282d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000014c61b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f5d35 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1a6d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jnp 0xa1ac3 ; call rax
0x0000000000120235 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000001262ca : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x000000000012a485 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000008a765 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000000bc49d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018eafd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x00000000000fff7c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; retf 0
0x000000000005728a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8949
0x00000000000f4c96 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000129aca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000000a10b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x0000000000054439 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007753a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000008a334 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008aaf5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000079fe1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000006c6d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x74e8
0x00000000000a9391 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000007f04d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000156a4a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000009c952 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000621c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000062d4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000086e26 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e89b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001128bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000bfb87 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x000000000004e16a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf4d
0x0000000000093ab6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000479c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000008f296 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000008b26a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x4966
0x00000000001047f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x4be9
0x00000000001047da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x55e9
0x00000000001814ae : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x000000000005880d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000f762f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000ed41f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000182298 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000010480a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xa7e9
0x0000000000183304 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001886da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000019a6ac : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret
0x000000000008a57c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000009e451 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009c7bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003542d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b4a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000be69d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000bf905 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000028353 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f968d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000012b82d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000a913d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001830a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000cd38d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000ece16 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8b02
0x00000000000fb26d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000139daf : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000184c21 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001830cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009bd4c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000009a6c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000000ad66d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000e7f0a : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x231b
0x0000000000170274 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000086f1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000525ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x000000000004466b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0x0000000000027b33 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000008f274 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x66
0x000000000008761b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000148079 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; std ; retf
0x000000000019bffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000197c7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x21] ; retf 0x944
0x00000000001987af : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x000000000004c58b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000a517b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000bb10b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000086e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000592db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x00000000000c5e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000010329b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x5489
0x0000000000102cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d283b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d284b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d282b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000bc49b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000019768b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c6cf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x74e8
0x0000000000062d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x000000000005880b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000003542b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000be69b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000ca65b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a913b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000cd38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000009a6c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000086f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000525eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x000000000008f272 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x66
0x0000000000105b1d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000a52a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001510b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013f60b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000be8db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000009fb4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x0000000000105b1e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000014243b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xc641
0x00000000000c312b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000166aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000ac2cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000010561b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x840f
0x00000000000d459b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; retf 0x8104
0x0000000000138ff7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000012beeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x00000000000d2cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000009d93c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000a2acc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000013919b : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x115bf6
0x000000000009f7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x9c256
0x000000000019bffc : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000140059 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000115d98 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000123f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000001189e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a5ab7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000130bac : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; ret
0x0000000000045018 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000133bb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133b8a
0x0000000000133e24 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133dfa
0x00000000000a517c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa5152
0x00000000000804f5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000005812a : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x5813b ; push r10 ; ret
0x0000000000058633 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x58644 ; push r10 ; ret
0x00000000001942ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000001942fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000019430c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000019431c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000019432c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000019427c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000019428c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000019429c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x00000000001942ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000001942bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000001942cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000001942dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000d282c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000d284c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000d283c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009f3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000abc24 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000bb66c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000ba02c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000abc4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017bc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017bc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013fd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000001229c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x95 ; syscall
0x00000000000f531c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x00000000000473ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000005ac2d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000005ae40 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000004a893 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000105b1f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000017126c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000017bcac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb07c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000bb08c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000014b5c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120234 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bc49c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a1a6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000009fb4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000000bb0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000bb10c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008ad65 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000012f6ea : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x0000000000094b61 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000010371a : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000bf31c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000001713bc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000019426b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000019425b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x00000000000bb03b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bb04b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017bc4a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000bb02a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000d253a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x00000000000bad08 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000af8b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a52a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000cd234 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000bf2d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x00000000000a5255 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003332a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000027540 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018cfde : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001880ac : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000a2116 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000044374 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d285c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000090d65 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x0000000000118ad1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; ret
0x0000000000163ebc : add byte ptr [rax], al ; add byte ptr [rbp + 0x13], dh ; add rsp, 0x38 ; ret
0x00000000000d33d0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x00000000001222c6 : add byte ptr [rax], al ; add byte ptr [rbp + 0x18], dh ; add rsp, 0x68 ; ret
0x00000000000d7312 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x000000000005e962 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x0000000000157430 : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; ret
0x000000000013999c : add byte ptr [rax], al ; add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x00000000000d57ff : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret
0x00000000000d5590 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; retf
0x000000000015fc6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x0000000000091a3c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000a6bd5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; fild dword ptr [rbp - 0x77] ; ret 0x8948
0x00000000000c3777 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; imul cl ; ret
0x00000000000a3cde : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000118c21 : add byte ptr [rax], al ; add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x0000000000162f21 : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], dh ; add rsp, 0x58 ; ret
0x00000000001423d5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf
0x000000000019a66b : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret
0x0000000000119d95 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x0000000000119e64 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000016327a : add byte ptr [rax], al ; add byte ptr [rbp + 0x3d], dh ; add rsp, 0x38 ; ret
0x0000000000063ffb : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000469d7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000004bfb2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x440f48f6], 0xc2 ; jmp 0x4bfd8
0x0000000000124280 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x0000000000116648 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x00000000001166d7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x00000000001167bf : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x0000000000163018 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x68 ; ret
0x000000000011685d : add byte ptr [rax], al ; add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x00000000001631b1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x68 ; ret
0x000000000009188a : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x00000000000e21dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x0000000000105c4e : add byte ptr [rax], al ; add byte ptr [rbp + 0x53], dh ; add rsp, 0x38 ; ret
0x0000000000117c6c : add byte ptr [rax], al ; add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; ret
0x00000000000e73ac : add byte ptr [rax], al ; add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x0000000000117dc1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x0000000000132905 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000116dda : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x0000000000065ee4 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x000000000005812b : add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; push r10 ; ret
0x0000000000045f72 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000004a750 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000139a39 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000158ea3 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000156bf2 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x0000000000092cd4 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x158b
0x0000000000154ea7 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x14 ; call qword ptr [rax]
0x000000000015567d : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x0000000000026ab2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3c], dh ; ret
0x000000000019984d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76b63fb6], cl ; ret 0xd349
0x000000000010f17a : add byte ptr [rax], al ; add byte ptr [rbp - 0x76b7febd], cl ; ret
0x00000000000ecf05 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fmul qword ptr [rax - 0x77] ; retf
0x0000000000183058 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000196238 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x894c
0x0000000000196b92 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x894d
0x0000000000158c7e : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; ret
0x000000000007a629 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; retf
0x000000000004ce49 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x000000000009323d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008427d : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c83480e], cl ; retf 0x4800
0x00000000000ab5ae : add byte ptr [rax], al ; add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x00000000000bf2d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x00000000000475aa : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000046860 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000863cc : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000192e78 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000000491fd : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000081846 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50743], al ; call qword ptr [rax]
0x000000000010cdc5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6af0fd05], al ; ret
0x0000000000126bac : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x000000000013f5af : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000000af7f2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000bf5d6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x00000000001060f5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf00001], al ; ret
0x00000000000c23c1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0cf03], al ; ret
0x00000000000cedea : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0d403], al ; ret 7
0x00000000000c239a : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0d403], al ; retf 1
0x0000000000144667 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7efab], cl ; ret
0x0000000000144535 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7efbb], cl ; ret
0x00000000000bfc6d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000f39ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x000000000018c591 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x0000000000070d6e : add byte ptr [rax], al ; add byte ptr [rbx - 0x9bef71d], al ; ret
0x00000000001981cf : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000000d9d49 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x00000000000db63a : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8d43
0x00000000000d9def : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0xbe0f
0x0000000000080de6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000ba343 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000017bc9d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000fbd99 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000fbf59 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x0000000000062459 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000622a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x1773
0x000000000002d0ae : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000130301 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000e01c9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x00000000000d09f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000c3696 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x000000000005dad3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0xd231
0x00000000001539d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x00000000001530b3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x000000000007de85 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000039acf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; retf 0x8949
0x00000000000563f2 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000116b9d : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x00000000000a8989 : add byte ptr [rax], al ; add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa8948
0x00000000000a9a29 : add byte ptr [rax], al ; add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa99e8
0x0000000000143466 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x00000000000f7890 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x8b48
0x000000000014340e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000039235 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x254a8
0x000000000009fb4d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x00000000000a0e50 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000a08f6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000161752 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x00000000000d323e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x000000000004460b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x0000000000032c52 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000084b40 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000000d4261 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000008fe03 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000001565cc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000009b29e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000018beed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000054756 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000011db58 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11db66 ; call rbx
0x000000000013e7cb : add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x000000000002d09a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000d9db0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000001330ce : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ror dword ptr [rdi], 0x97 ; ret 0x840
0x00000000000889da : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; call 0xffffffffcbf39d78
0x00000000000816b5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x00000000000313fa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x313b9
0x0000000000199a1b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000d0490 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2e66
0x0000000000054631 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000014243d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xc641
0x0000000000116c64 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x0000000000026dbe : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000043d09 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a3d39 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000166aed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a3cc4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xbd01
0x00000000000ac2cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011ce83 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x000000000013c77b : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000000000009f1ab : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], cl ; call 0x11bc98
0x000000000006f7b7 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000000af9c4 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000000af9ea : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000a3652 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xa361b ; ret
0x00000000000bff62 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xbff2b ; ret
0x0000000000056c99 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfde9
0x000000000015eabf : add byte ptr [rax], al ; add byte ptr [rcx], al ; retf 0x27e8
0x000000000003a885 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x7477
0x000000000010561d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x840f
0x000000000018788d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x00000000000cd1d5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000df414 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8948
0x00000000000dc079 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000117495 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x00000000000dddc3 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd729
0x0000000000027602 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; retf
0x000000000002ac93 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x1089
0x000000000004ccff : add byte ptr [rax], al ; add byte ptr [rcx], dh ; div bh ; ret 0
0x000000000011bb4a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000090a6b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000af2fa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000009ae9e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x34 ; ret
0x00000000000a2117 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000154b5b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xbb ; retf
0x00000000000d2262 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001960b2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000163b98 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x854d
0x000000000008ad66 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000012f6eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], edi ; call rcx
0x0000000000094b62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000001539e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x00000000001502d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x00000000001530d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x00000000001539c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x00000000001102ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000010371b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000014b5a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x00000000000463b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000003a7bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3fcf, -0x77 ; retf 0xeac1
0x000000000017134d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000014564b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x0000000000129564 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0xc55
0x000000000011b084 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0xd34
0x000000000014f954 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; retf 0xa00
0x000000000008718b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x35 ; retf
0x00000000001713bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000003b28d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003c025 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004c52d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bf31d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000af33d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000e43c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000470ef : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x31c3
0x0000000000115d99 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x41c3
0x00000000000dbc5f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x5841
0x0000000000056eb1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x6de9
0x0000000000130219 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000001300c9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x89c3
0x0000000000033471 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000105d36 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000fae3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x000000000015265d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000000570e6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2ae9
0x0000000000199a8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x00000000001970b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x00000000000fcc62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000098439 : add byte ptr [rax], al ; add byte ptr [rdx], al ; jbe 0x98446 ; ret
0x00000000001660dc : add byte ptr [rax], al ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000190d44 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009af4c : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x0000000000163ab5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x44c7
0x00000000000af74a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af262 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000012873b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; endbr64 ; ret
0x000000000017bc4b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000bb02b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000be0fb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000d253b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x00000000000c9c7a : add byte ptr [rax], al ; add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x00000000001126f9 : add byte ptr [rax], al ; add byte ptr [rsp + rax*2 - 0x75], ah ; insd dword ptr [rdi], dx ; add al, ch ; retf 0x45
0x00000000000d459d : add byte ptr [rax], al ; add cl, al ; retf 0x8104
0x000000000012b9e3 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0x53ff
0x000000000012d1c0 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0xff41
0x0000000000031596 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000061a05 : add byte ptr [rax], al ; add cl, ch ; ret 0xffe2
0x000000000007ed89 : add byte ptr [rax], al ; add cl, ch ; ret 0xffea
0x0000000000056e8b : add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x000000000010c8d5 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff9
0x00000000000e38b7 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000000879d2 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000031e75 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000618fd : add byte ptr [rax], al ; add cl, ch ; retf 0xffe3
0x00000000000cfc4b : add byte ptr [rax], al ; add cl, ch ; retf 0xfff1
0x00000000000fc421 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x000000000008c7f6 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x000000000002ee59 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x000000000004918d : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000ab69e : add byte ptr [rax], al ; add cl, ch ; sti ; retf 0xffff
0x000000000005a9b5 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000abc25 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000000781e2 : add byte ptr [rax], al ; add dh, al ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000007ee8f : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000121fa3 : add byte ptr [rax], al ; add dh, byte ptr [rax + rcx - 0x77] ; ret 0xeac1
0x000000000009843a : add byte ptr [rax], al ; add dh, byte ptr [rsi + 1] ; ret
0x0000000000066d08 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000012beed : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x0000000000195521 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000014d54e : add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x00000000000f62c2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000b53d0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000b53d9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x0000000000062655 : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000f0b10 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x0000000000151a38 : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x000000000014121a : add byte ptr [rax], al ; add edx, 1 ; syscall
0x000000000002c6b2 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x2c68c
0x00000000000d2cde : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000af113 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000187fc8 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x0000000000150e35 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000153945 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000153005 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000150208 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000448ed : add byte ptr [rax], al ; add rdx, rcx ; jmp 0x44905
0x000000000008caf4 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009d93e : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000045f1f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000001518c3 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000159105 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001118bb : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000008d4a1 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001551a1 : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000141233 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000118375 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000111009 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x000000000010439a : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011177a : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000111184 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000027370 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000011a5ac : add byte ptr [rax], al ; add rsp, 8 ; mov eax, r8d ; ret
0x00000000000a5afe : add byte ptr [rax], al ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000014bd64 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x0000000000028486 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045216 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000004580e : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000122098 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x00000000000374bf : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000009f1ac : add byte ptr [rax], al ; and rsi, r14 ; call 0x11bc97
0x00000000000af33e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000b4fd0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b4ae8 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000115803 : add byte ptr [rax], al ; call 0x111ab4
0x000000000013919d : add byte ptr [rax], al ; call 0x115bf4
0x000000000005b595 : add byte ptr [rax], al ; call 0x198014
0x0000000000119063 : add byte ptr [rax], al ; call 0x25334
0x000000000004922e : add byte ptr [rax], al ; call 0x25494
0x00000000000d8aa3 : add byte ptr [rax], al ; call 0x255a4
0x000000000014afbc : add byte ptr [rax], al ; call 0x37a54
0x000000000009f7de : add byte ptr [rax], al ; call 0x9c254
0x0000000000154d76 : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000019bffe : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000011cc9f : add byte ptr [rax], al ; call r12
0x0000000000032815 : add byte ptr [rax], al ; call r15
0x0000000000158e93 : add byte ptr [rax], al ; call r8
0x0000000000027218 : add byte ptr [rax], al ; call rax
0x0000000000049bb3 : add byte ptr [rax], al ; call rdx
0x000000000013021a : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x0000000000115d9a : add byte ptr [rax], al ; cmova eax, edx ; ret
0x000000000013f936 : add byte ptr [rax], al ; cmovb eax, edx ; ret
0x0000000000123f6d : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000105a96 : add byte ptr [rax], al ; cmovbe rsi, r8 ; syscall
0x00000000000470f0 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001189eb : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bf312 : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000a35e5 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d2373 : add byte ptr [rax], al ; cmovg r9d, eax ; mov eax, r9d ; ret
0x00000000000d2351 : add byte ptr [rax], al ; cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000001300ca : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000a5a78 : add byte ptr [rax], al ; cmovne r8, rax ; mov rax, r8 ; ret
0x00000000000e7e9d : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000012ac6e : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000017fbb6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000105cbc : add byte ptr [rax], al ; cmp dx, 2 ; je 0x105cd0 ; ret
0x000000000008a539 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x8a551 ; ret
0x00000000000969fe : add byte ptr [rax], al ; endbr64 ; mov rax, rdi ; ret
0x000000000014a1ce : add byte ptr [rax], al ; endbr64 ; push rbp ; call 0x156449
0x00000000000969be : add byte ptr [rax], al ; endbr64 ; ret
0x00000000001494de : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; ret
0x00000000001168de : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; syscall
0x000000000004517e : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x000000000004501a : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a13da : add byte ptr [rax], al ; je 0xa13e4 ; ret
0x00000000000c9c7b : add byte ptr [rax], al ; je 0xc9c8a ; mov eax, r8d ; ret
0x00000000000d27f4 : add byte ptr [rax], al ; je 0xd2868 ; lea rax, [rdi - 0x10] ; ret
0x00000000001960b3 : add byte ptr [rax], al ; jg 0x1960c6 ; neg eax ; ret
0x00000000000d2263 : add byte ptr [rax], al ; jg 0xd226f ; neg eax ; ret
0x0000000000192e79 : add byte ptr [rax], al ; jl 0x192e86 ; neg eax ; ret
0x000000000010f86a : add byte ptr [rax], al ; jmp 0x10f834
0x0000000000123c63 : add byte ptr [rax], al ; jmp 0x123c2d
0x0000000000133bb6 : add byte ptr [rax], al ; jmp 0x133b88
0x0000000000133e26 : add byte ptr [rax], al ; jmp 0x133df8
0x000000000015974c : add byte ptr [rax], al ; jmp 0x159716
0x00000000000843e9 : add byte ptr [rax], al ; jmp 0x843bb
0x00000000000a517e : add byte ptr [rax], al ; jmp 0xa5150
0x00000000000ab69f : add byte ptr [rax], al ; jmp 0xa81a5
0x00000000000e60fc : add byte ptr [rax], al ; jmp 0xe60c6
0x0000000000027527 : add byte ptr [rax], al ; jmp rax
0x000000000015020f : add byte ptr [rax], al ; jmp rcx
0x0000000000105c4f : add byte ptr [rax], al ; jne 0x105cae ; add rsp, 0x38 ; ret
0x0000000000110419 : add byte ptr [rax], al ; jne 0x110439 ; add rsp, 0x28 ; ret
0x00000000001106ee : add byte ptr [rax], al ; jne 0x1106ff ; add rsp, 0x18 ; ret
0x0000000000110740 : add byte ptr [rax], al ; jne 0x110751 ; add rsp, 0x18 ; ret
0x0000000000116649 : add byte ptr [rax], al ; jne 0x11669b ; add rsp, 0x68 ; ret
0x00000000001166d8 : add byte ptr [rax], al ; jne 0x11672b ; add rsp, 0x18 ; ret
0x00000000001167c0 : add byte ptr [rax], al ; jne 0x116813 ; add rsp, 0x58 ; ret
0x000000000011685e : add byte ptr [rax], al ; jne 0x1168b3 ; add rsp, 0x58 ; ret
0x0000000000116ddb : add byte ptr [rax], al ; jne 0x116df3 ; add rsp, 0x18 ; ret
0x0000000000117c6d : add byte ptr [rax], al ; jne 0x117cd3 ; add rsp, 0x38 ; ret
0x0000000000117d0d : add byte ptr [rax], al ; jne 0x117d73 ; add rsp, 0x38 ; ret
0x0000000000117dc2 : add byte ptr [rax], al ; jne 0x117e43 ; add rsp, 0x38 ; ret
0x0000000000117e92 : add byte ptr [rax], al ; jne 0x117f13 ; add rsp, 0x38 ; ret
0x0000000000117f8c : add byte ptr [rax], al ; jne 0x117f9d ; add rsp, 0x28 ; ret
0x0000000000118ad2 : add byte ptr [rax], al ; jne 0x118aef ; add rsp, 0x58 ; ret
0x0000000000118b4b : add byte ptr [rax], al ; jne 0x118b5c ; add rsp, 0x28 ; ret
0x0000000000118c22 : add byte ptr [rax], al ; jne 0x118c65 ; add rsp, 0x68 ; ret
0x0000000000119d96 : add byte ptr [rax], al ; jne 0x119ddd ; add rsp, 0x38 ; ret
0x0000000000119e65 : add byte ptr [rax], al ; jne 0x119ead ; add rsp, 0x38 ; ret
0x000000000011c8d7 : add byte ptr [rax], al ; jne 0x11c8e8 ; add rsp, 0x18 ; ret
0x00000000001222c7 : add byte ptr [rax], al ; jne 0x1222eb ; add rsp, 0x68 ; ret
0x0000000000123cec : add byte ptr [rax], al ; jne 0x123cfd ; add rsp, 0x18 ; ret
0x0000000000124281 : add byte ptr [rax], al ; jne 0x1242d3 ; add rsp, 0x58 ; ret
0x0000000000130442 : add byte ptr [rax], al ; jne 0x130526 ; leave ; ret
0x0000000000132906 : add byte ptr [rax], al ; jne 0x13291d ; add rsp, 0x28 ; ret
0x0000000000132966 : add byte ptr [rax], al ; jne 0x13297d ; add rsp, 0x28 ; ret
0x000000000013999d : add byte ptr [rax], al ; jne 0x1399d1 ; add rsp, 0x38 ; ret
0x0000000000139a3a : add byte ptr [rax], al ; jne 0x139a4b ; add rsp, 0x38 ; ret
0x0000000000139aa7 : add byte ptr [rax], al ; jne 0x139ab8 ; add rsp, 0x28 ; ret
0x000000000013fab0 : add byte ptr [rax], al ; jne 0x13fac8 ; add rsp, 0x18 ; ret
0x00000000001414d7 : add byte ptr [rax], al ; jne 0x1414fe ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014152c : add byte ptr [rax], al ; jne 0x14153d ; add rsp, 0x18 ; ret
0x000000000014157f : add byte ptr [rax], al ; jne 0x141590 ; add rsp, 0x28 ; ret
0x0000000000141e0e : add byte ptr [rax], al ; jne 0x141e1f ; add rsp, 0x18 ; ret
0x00000000001495a9 : add byte ptr [rax], al ; jne 0x1495bc ; add rsp, 0x40 ; pop rbp ; ret
0x000000000014c37f : add byte ptr [rax], al ; jne 0x14c3cc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c8f2 : add byte ptr [rax], al ; jne 0x14c92b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c990 : add byte ptr [rax], al ; jne 0x14c9ce ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014d5a3 : add byte ptr [rax], al ; jne 0x14d5c0 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000154931 : add byte ptr [rax], al ; jne 0x15495a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154efa : add byte ptr [rax], al ; jne 0x154f73 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000015503a : add byte ptr [rax], al ; jne 0x1550b3 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000156bf3 : add byte ptr [rax], al ; jne 0x156c04 ; add rsp, 0x78 ; ret
0x0000000000156c69 : add byte ptr [rax], al ; jne 0x156c7a ; add rsp, 0x78 ; ret
0x0000000000156cd9 : add byte ptr [rax], al ; jne 0x156cea ; add rsp, 0x78 ; ret
0x0000000000156d49 : add byte ptr [rax], al ; jne 0x156d5a ; add rsp, 0x78 ; ret
0x0000000000156daa : add byte ptr [rax], al ; jne 0x156dbb ; add rsp, 0x78 ; ret
0x0000000000156e0e : add byte ptr [rax], al ; jne 0x156e1f ; add rsp, 0x78 ; ret
0x0000000000156e79 : add byte ptr [rax], al ; jne 0x156e8a ; add rsp, 0x78 ; ret
0x0000000000156efc : add byte ptr [rax], al ; jne 0x156f0d ; add rsp, 0x78 ; ret
0x0000000000157431 : add byte ptr [rax], al ; jne 0x157460 ; add rsp, 0x28 ; ret
0x0000000000158ea4 : add byte ptr [rax], al ; jne 0x158eb5 ; add rsp, 0x48 ; ret
0x0000000000158f0f : add byte ptr [rax], al ; jne 0x158f5c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000158f9f : add byte ptr [rax], al ; jne 0x158feb ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015906f : add byte ptr [rax], al ; jne 0x1590be ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001594bf : add byte ptr [rax], al ; jne 0x15950d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015954f : add byte ptr [rax], al ; jne 0x15959c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015971f : add byte ptr [rax], al ; jne 0x159772 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001597af : add byte ptr [rax], al ; jne 0x1597fc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a49f : add byte ptr [rax], al ; jne 0x15a4ee ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a52f : add byte ptr [rax], al ; jne 0x15a57e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a5bf : add byte ptr [rax], al ; jne 0x15a60e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a64f : add byte ptr [rax], al ; jne 0x15a69e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015ae68 : add byte ptr [rax], al ; jne 0x15ae7b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015aedb : add byte ptr [rax], al ; jne 0x15aeee ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015fc70 : add byte ptr [rax], al ; jne 0x15fcac ; add rsp, 0x18 ; ret
0x0000000000160127 : add byte ptr [rax], al ; jne 0x160165 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001601b7 : add byte ptr [rax], al ; jne 0x1601f5 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000162f22 : add byte ptr [rax], al ; jne 0x162f66 ; add rsp, 0x58 ; ret
0x0000000000163019 : add byte ptr [rax], al ; jne 0x16306c ; add rsp, 0x68 ; ret
0x00000000001631b2 : add byte ptr [rax], al ; jne 0x16320c ; add rsp, 0x68 ; ret
0x000000000016327b : add byte ptr [rax], al ; jne 0x1632c4 ; add rsp, 0x38 ; ret
0x0000000000163ebd : add byte ptr [rax], al ; jne 0x163edc ; add rsp, 0x38 ; ret
0x0000000000166869 : add byte ptr [rax], al ; jne 0x16687c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001668ef : add byte ptr [rax], al ; jne 0x166902 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000188392 : add byte ptr [rax], al ; jne 0x1882a8 ; ret
0x000000000018f2d0 : add byte ptr [rax], al ; jne 0x18f258 ; ret
0x0000000000026ab3 : add byte ptr [rax], al ; jne 0x26a7f ; ret
0x0000000000045f73 : add byte ptr [rax], al ; jne 0x45f84 ; add rsp, 0x18 ; ret
0x0000000000046ca4 : add byte ptr [rax], al ; jne 0x46ccb ; add rsp, 0x40 ; pop rbx ; ret
0x000000000004a751 : add byte ptr [rax], al ; jne 0x4a762 ; add rsp, 0x28 ; ret
0x000000000004a841 : add byte ptr [rax], al ; jne 0x4a852 ; add rsp, 0x28 ; ret
0x000000000004b0cb : add byte ptr [rax], al ; jne 0x4b0dc ; add rsp, 0x18 ; ret
0x000000000004b118 : add byte ptr [rax], al ; jne 0x4b129 ; add rsp, 0x18 ; ret
0x000000000004b16a : add byte ptr [rax], al ; jne 0x4b17b ; add rsp, 0x18 ; ret
0x000000000004b1b7 : add byte ptr [rax], al ; jne 0x4b1c8 ; add rsp, 0x18 ; ret
0x000000000004b20a : add byte ptr [rax], al ; jne 0x4b21b ; add rsp, 0x18 ; ret
0x000000000004b257 : add byte ptr [rax], al ; jne 0x4b268 ; add rsp, 0x18 ; ret
0x000000000005812c : add byte ptr [rax], al ; jne 0x58139 ; push r10 ; ret
0x0000000000058635 : add byte ptr [rax], al ; jne 0x58642 ; push r10 ; ret
0x000000000005a9b0 : add byte ptr [rax], al ; jne 0x5aa3e ; leave ; ret
0x000000000005e963 : add byte ptr [rax], al ; jne 0x5e98d ; add rsp, 0x38 ; ret
0x0000000000065ee5 : add byte ptr [rax], al ; jne 0x65eff ; add rsp, 0x18 ; ret
0x00000000000888ea : add byte ptr [rax], al ; jne 0x888b3 ; jmp 0x88886
0x0000000000090d66 : add byte ptr [rax], al ; jne 0x90d83 ; add rsp, 0x48 ; ret
0x000000000009c3e9 : add byte ptr [rax], al ; jne 0x9c433 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000cd291 : add byte ptr [rax], al ; jne 0xcd2bd ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d33d1 : add byte ptr [rax], al ; jne 0xd33f1 ; add rsp, 0x28 ; ret
0x00000000000d344b : add byte ptr [rax], al ; jne 0xd345e ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000d7313 : add byte ptr [rax], al ; jne 0xd7339 ; add rsp, 0x28 ; ret
0x00000000000d7444 : add byte ptr [rax], al ; jne 0xd745e ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000dd81a : add byte ptr [rax], al ; jne 0xdd82b ; add rsp, 0x18 ; ret
0x00000000000e00ea : add byte ptr [rax], al ; jne 0xe00fb ; add rsp, 0x18 ; ret
0x00000000000e21dd : add byte ptr [rax], al ; jne 0xe223b ; add rsp, 0x38 ; ret
0x00000000000e6514 : add byte ptr [rax], al ; jne 0xe6562 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e66e4 : add byte ptr [rax], al ; jne 0xe6732 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e703d : add byte ptr [rax], al ; jne 0xe709b ; add rsp, 0x38 ; ret
0x00000000000e70dd : add byte ptr [rax], al ; jne 0xe713b ; add rsp, 0x38 ; ret
0x00000000000e73ad : add byte ptr [rax], al ; jne 0xe741b ; add rsp, 0x38 ; ret
0x00000000000e745d : add byte ptr [rax], al ; jne 0xe74cb ; add rsp, 0x38 ; ret
0x00000000000e7e73 : add byte ptr [rax], al ; jne 0xe7e9c ; mov eax, 0xfffa ; ret
0x00000000000e7f94 : add byte ptr [rax], al ; jne 0xe7fa9 ; mov eax, 0x40 ; ret
0x0000000000154ea8 : add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x000000000015567e : add byte ptr [rax], al ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000014a749 : add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001942ee : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000001942fe : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000019430e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000019431e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000019432e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000019424d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000019427e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000019428e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000019429e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x00000000001942ae : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000001942be : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000001941fa : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x00000000001942ce : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000001942de : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000d26cb : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000d282e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000d284e : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000d283e : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009f3ee : add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x000000000003591e : add byte ptr [rax], al ; lea rax, [rip + 0x180aac] ; ret
0x00000000000e4b75 : add byte ptr [rax], al ; lea rdi, [rip + 0x109622] ; syscall
0x00000000000e4a35 : add byte ptr [rax], al ; lea rdi, [rip + 0x109762] ; syscall
0x00000000000e497d : add byte ptr [rax], al ; lea rdi, [rip + 0x10981a] ; syscall
0x00000000000e48a1 : add byte ptr [rax], al ; lea rdi, [rip + 0x1098ee] ; syscall
0x00000000000e46d1 : add byte ptr [rax], al ; lea rdi, [rip + 0x109a7e] ; syscall
0x00000000000e450d : add byte ptr [rax], al ; lea rdi, [rip + 0x109bfa] ; syscall
0x00000000000e4153 : add byte ptr [rax], al ; lea rdi, [rip + 0x109f5c] ; syscall
0x00000000000e2c45 : add byte ptr [rax], al ; lea rdi, [rip + 0x10b3e2] ; syscall
0x00000000000e2b05 : add byte ptr [rax], al ; lea rdi, [rip + 0x10b522] ; syscall
0x00000000000e2a4d : add byte ptr [rax], al ; lea rdi, [rip + 0x10b5da] ; syscall
0x00000000000e2681 : add byte ptr [rax], al ; lea rdi, [rip + 0x10b99e] ; syscall
0x00000000000e24b1 : add byte ptr [rax], al ; lea rdi, [rip + 0x10bb2e] ; syscall
0x00000000000e22ed : add byte ptr [rax], al ; lea rdi, [rip + 0x10bcaa] ; syscall
0x00000000000e1a05 : add byte ptr [rax], al ; lea rdi, [rip + 0x10c53a] ; syscall
0x00000000000d5c51 : add byte ptr [rax], al ; lea rdi, [rip + 0x118206] ; syscall
0x00000000000d5a1d : add byte ptr [rax], al ; lea rdi, [rip + 0x11843a] ; syscall
0x00000000000cd811 : add byte ptr [rax], al ; lea rdi, [rip + 0x1226a6] ; syscall
0x000000000009f9f1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14b186] ; syscall
0x00000000000a137d : add byte ptr [rax], al ; lea rdi, [rip + 0x14c85a] ; syscall
0x00000000000a119d : add byte ptr [rax], al ; lea rdi, [rip + 0x14ca3a] ; syscall
0x00000000000a0fb1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14cc26] ; syscall
0x00000000000a0f41 : add byte ptr [rax], al ; lea rdi, [rip + 0x14cc96] ; syscall
0x00000000000a0d11 : add byte ptr [rax], al ; lea rdi, [rip + 0x14cec6] ; syscall
0x000000000009cc71 : add byte ptr [rax], al ; lea rdi, [rip + 0x14df06] ; syscall
0x000000000009cc11 : add byte ptr [rax], al ; lea rdi, [rip + 0x14df66] ; syscall
0x000000000009c851 : add byte ptr [rax], al ; lea rdi, [rip + 0x14e326] ; syscall
0x000000000009c5f1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14e586] ; syscall
0x000000000009bfa9 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ebce] ; syscall
0x000000000009bf71 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ec06] ; syscall
0x000000000009dc21 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ff36] ; syscall
0x000000000009d185 : add byte ptr [rax], al ; lea rdi, [rip + 0x1509c2] ; syscall
0x0000000000099222 : add byte ptr [rax], al ; lea rdi, [rip + 0x154925] ; syscall
0x00000000000991f1 : add byte ptr [rax], al ; lea rdi, [rip + 0x154966] ; syscall
0x0000000000098f71 : add byte ptr [rax], al ; lea rdi, [rip + 0x154be6] ; syscall
0x0000000000098a4d : add byte ptr [rax], al ; lea rdi, [rip + 0x15510a] ; syscall
0x0000000000097f72 : add byte ptr [rax], al ; lea rdi, [rip + 0x155565] ; syscall
0x0000000000097d9d : add byte ptr [rax], al ; lea rdi, [rip + 0x15573a] ; syscall
0x0000000000097c01 : add byte ptr [rax], al ; lea rdi, [rip + 0x1558d6] ; syscall
0x0000000000096ac3 : add byte ptr [rax], al ; lea rdi, [rip + 0x1569d4] ; syscall
0x0000000000096583 : add byte ptr [rax], al ; lea rdi, [rip + 0x156f14] ; syscall
0x00000000000961df : add byte ptr [rax], al ; lea rdi, [rip + 0x1572b8] ; syscall
0x0000000000095e73 : add byte ptr [rax], al ; lea rdi, [rip + 0x157624] ; syscall
0x00000000000947ef : add byte ptr [rax], al ; lea rdi, [rip + 0x158ca8] ; syscall
0x000000000009452f : add byte ptr [rax], al ; lea rdi, [rip + 0x158f68] ; syscall
0x00000000000941bb : add byte ptr [rax], al ; lea rdi, [rip + 0x1592dc] ; syscall
0x0000000000087400 : add byte ptr [rax], al ; lea rdi, [rip + 0x166057] ; syscall
0x0000000000087003 : add byte ptr [rax], al ; lea rdi, [rip + 0x166454] ; syscall
0x0000000000086f58 : add byte ptr [rax], al ; lea rdi, [rip + 0x1664ff] ; syscall
0x00000000000850f1 : add byte ptr [rax], al ; lea rdi, [rip + 0x16adc6] ; syscall
0x0000000000064195 : add byte ptr [rax], al ; lea rdi, [rip + 0x189292] ; syscall
0x0000000000063f11 : add byte ptr [rax], al ; lea rdi, [rip + 0x189512] ; syscall
0x0000000000061d3d : add byte ptr [rax], al ; lea rdi, [rip + 0x18b6de] ; syscall
0x0000000000061bfd : add byte ptr [rax], al ; lea rdi, [rip + 0x18b81e] ; syscall
0x0000000000057e61 : add byte ptr [rax], al ; lea rdi, [rip + 0x1955a6] ; syscall
0x0000000000057c81 : add byte ptr [rax], al ; lea rdi, [rip + 0x195786] ; syscall
0x0000000000057751 : add byte ptr [rax], al ; lea rdi, [rip + 0x195cb6] ; syscall
0x00000000000554dd : add byte ptr [rax], al ; lea rdi, [rip + 0x197cfa] ; syscall
0x0000000000055389 : add byte ptr [rax], al ; lea rdi, [rip + 0x197e4e] ; syscall
0x0000000000055354 : add byte ptr [rax], al ; lea rdi, [rip + 0x197e83] ; syscall
0x000000000004abbd : add byte ptr [rax], al ; lea rdi, [rip + 0x1a25fa] ; syscall
0x000000000004aafd : add byte ptr [rax], al ; lea rdi, [rip + 0x1a26ba] ; syscall
0x000000000004aa35 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a2782] ; syscall
0x000000000004a95d : add byte ptr [rax], al ; lea rdi, [rip + 0x1a285a] ; syscall
0x0000000000049a55 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a2f0a] ; syscall
0x0000000000049990 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a2fcf] ; syscall
0x00000000000497ee : add byte ptr [rax], al ; lea rdi, [rip + 0x1a3171] ; syscall
0x0000000000049714 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a324b] ; syscall
0x000000000003b71e : add byte ptr [rax], al ; lea rdi, [rip + 0x1b11f1] ; syscall
0x0000000000039d9b : add byte ptr [rax], al ; lea rdi, [rip + 0x1b2b3c] ; syscall
0x0000000000038a54 : add byte ptr [rax], al ; lea rdi, [rip + 0x1b3ddb] ; syscall
0x0000000000038a27 : add byte ptr [rax], al ; lea rdi, [rip + 0x1b3e08] ; syscall
0x00000000000388e2 : add byte ptr [rax], al ; lea rdi, [rip + 0x1b3f4d] ; syscall
0x00000000000296c5 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c67f2] ; syscall
0x0000000000029559 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c695e] ; syscall
0x0000000000029439 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c6a7e] ; syscall
0x0000000000025884 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c70a3] ; syscall
0x000000000019bdbd : add byte ptr [rax], al ; lea rdi, [rip + 0x50ba2] ; syscall
0x000000000019bf7d : add byte ptr [rax], al ; lea rdi, [rip + 0x5155a] ; syscall
0x000000000019c2ad : add byte ptr [rax], al ; lea rdi, [rip + 0x52f62] ; syscall
0x000000000016157d : add byte ptr [rax], al ; lea rdi, [rip + 0x8ee32] ; syscall
0x0000000000160395 : add byte ptr [rax], al ; lea rdi, [rip + 0x9001a] ; syscall
0x00000000001602b5 : add byte ptr [rax], al ; lea rdi, [rip + 0x900fa] ; syscall
0x00000000001600cd : add byte ptr [rax], al ; lea rdi, [rip + 0x902e2] ; syscall
0x000000000016002d : add byte ptr [rax], al ; lea rdi, [rip + 0x90382] ; syscall
0x000000000015ff8d : add byte ptr [rax], al ; lea rdi, [rip + 0x90422] ; syscall
0x000000000015fedd : add byte ptr [rax], al ; lea rdi, [rip + 0x904d2] ; syscall
0x000000000015f95d : add byte ptr [rax], al ; lea rdi, [rip + 0x90a52] ; syscall
0x000000000015572d : add byte ptr [rax], al ; lea rdi, [rip + 0x9a3ba] ; syscall
0x00000000001555cd : add byte ptr [rax], al ; lea rdi, [rip + 0x9a51a] ; syscall
0x00000000001553c1 : add byte ptr [rax], al ; lea rdi, [rip + 0x9a726] ; syscall
0x0000000000155221 : add byte ptr [rax], al ; lea rdi, [rip + 0x9a8c6] ; syscall
0x000000000015508d : add byte ptr [rax], al ; lea rdi, [rip + 0x9aa5a] ; syscall
0x0000000000154f4d : add byte ptr [rax], al ; lea rdi, [rip + 0x9ab9a] ; syscall
0x0000000000154ded : add byte ptr [rax], al ; lea rdi, [rip + 0x9acfa] ; syscall
0x0000000000154cdd : add byte ptr [rax], al ; lea rdi, [rip + 0x9ae0a] ; syscall
0x000000000015182d : add byte ptr [rax], al ; lea rdi, [rip + 0x9e2b6] ; syscall
0x000000000014fb15 : add byte ptr [rax], al ; lea rdi, [rip + 0x9ff0a] ; syscall
0x000000000014f9d5 : add byte ptr [rax], al ; lea rdi, [rip + 0xa004a] ; syscall
0x000000000014f91d : add byte ptr [rax], al ; lea rdi, [rip + 0xa0102] ; syscall
0x000000000014f831 : add byte ptr [rax], al ; lea rdi, [rip + 0xa01e6] ; syscall
0x000000000014f661 : add byte ptr [rax], al ; lea rdi, [rip + 0xa0386] ; syscall
0x000000000014f49d : add byte ptr [rax], al ; lea rdi, [rip + 0xa0522] ; syscall
0x0000000000149b2f : add byte ptr [rax], al ; lea rdi, [rip + 0xa5d2c] ; syscall
0x0000000000147991 : add byte ptr [rax], al ; lea rdi, [rip + 0xa7e36] ; syscall
0x0000000000147659 : add byte ptr [rax], al ; lea rdi, [rip + 0xa816e] ; syscall
0x00000000001472d9 : add byte ptr [rax], al ; lea rdi, [rip + 0xa84ee] ; syscall
0x00000000001470b3 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8714] ; syscall
0x0000000000146f51 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8876] ; syscall
0x0000000000146d14 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8ab3] ; syscall
0x00000000001462bd : add byte ptr [rax], al ; lea rdi, [rip + 0xa9452] ; syscall
0x000000000014613b : add byte ptr [rax], al ; lea rdi, [rip + 0xa95d4] ; syscall
0x0000000000146101 : add byte ptr [rax], al ; lea rdi, [rip + 0xa960e] ; syscall
0x0000000000145fe9 : add byte ptr [rax], al ; lea rdi, [rip + 0xa9726] ; syscall
0x00000000001457a5 : add byte ptr [rax], al ; lea rdi, [rip + 0xa9f6a] ; syscall
0x00000000001456dd : add byte ptr [rax], al ; lea rdi, [rip + 0xaa032] ; syscall
0x00000000001455c1 : add byte ptr [rax], al ; lea rdi, [rip + 0xaa14e] ; syscall
0x00000000001441ee : add byte ptr [rax], al ; lea rdi, [rip + 0xab2c9] ; syscall
0x0000000000140aad : add byte ptr [rax], al ; lea rdi, [rip + 0xae762] ; syscall
0x00000000001407b1 : add byte ptr [rax], al ; lea rdi, [rip + 0xaea5e] ; syscall
0x000000000013c481 : add byte ptr [rax], al ; lea rdi, [rip + 0xb2d7a] ; syscall
0x000000000013bf01 : add byte ptr [rax], al ; lea rdi, [rip + 0xb32de] ; syscall
0x000000000013bd3d : add byte ptr [rax], al ; lea rdi, [rip + 0xb345a] ; syscall
0x000000000013bc75 : add byte ptr [rax], al ; lea rdi, [rip + 0xb34c2] ; syscall
0x000000000013bb35 : add byte ptr [rax], al ; lea rdi, [rip + 0xb3602] ; syscall
0x000000000013ba7d : add byte ptr [rax], al ; lea rdi, [rip + 0xb36ba] ; syscall
0x000000000013b38d : add byte ptr [rax], al ; lea rdi, [rip + 0xb3da2] ; syscall
0x000000000013b06d : add byte ptr [rax], al ; lea rdi, [rip + 0xb40c2] ; syscall
0x000000000013aeb1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb427e] ; syscall
0x0000000000137b25 : add byte ptr [rax], al ; lea rdi, [rip + 0xb749a] ; syscall
0x00000000001379e5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb75da] ; syscall
0x000000000013792d : add byte ptr [rax], al ; lea rdi, [rip + 0xb7692] ; syscall
0x000000000013784d : add byte ptr [rax], al ; lea rdi, [rip + 0xb776a] ; syscall
0x0000000000137381 : add byte ptr [rax], al ; lea rdi, [rip + 0xb7bbe] ; syscall
0x0000000000136db1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb812e] ; syscall
0x0000000000136891 : add byte ptr [rax], al ; lea rdi, [rip + 0xb8606] ; syscall
0x00000000001366c5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb8792] ; syscall
0x0000000000136585 : add byte ptr [rax], al ; lea rdi, [rip + 0xb88d2] ; syscall
0x00000000001364cd : add byte ptr [rax], al ; lea rdi, [rip + 0xb898a] ; syscall
0x00000000001363ed : add byte ptr [rax], al ; lea rdi, [rip + 0xb8a62] ; syscall
0x0000000000135fd1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb8e36] ; syscall
0x00000000001359b5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb93f2] ; syscall
0x000000000013585d : add byte ptr [rax], al ; lea rdi, [rip + 0xb954a] ; syscall
0x000000000013579d : add byte ptr [rax], al ; lea rdi, [rip + 0xb960a] ; syscall
0x00000000001356b5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb96ea] ; syscall
0x00000000001355d1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb9796] ; syscall
0x0000000000134f71 : add byte ptr [rax], al ; lea rdi, [rip + 0xb9db6] ; syscall
0x0000000000134d65 : add byte ptr [rax], al ; lea rdi, [rip + 0xb9f7a] ; syscall
0x0000000000134c0d : add byte ptr [rax], al ; lea rdi, [rip + 0xba0d2] ; syscall
0x0000000000134b4d : add byte ptr [rax], al ; lea rdi, [rip + 0xba192] ; syscall
0x0000000000134a65 : add byte ptr [rax], al ; lea rdi, [rip + 0xba272] ; syscall
0x0000000000133e51 : add byte ptr [rax], al ; lea rdi, [rip + 0xbae0e] ; syscall
0x0000000000133be1 : add byte ptr [rax], al ; lea rdi, [rip + 0xbb03e] ; syscall
0x0000000000133461 : add byte ptr [rax], al ; lea rdi, [rip + 0xbb75e] ; syscall
0x0000000000129725 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5402] ; syscall
0x00000000001295e5 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5542] ; syscall
0x000000000012952d : add byte ptr [rax], al ; lea rdi, [rip + 0xc55fa] ; syscall
0x0000000000129153 : add byte ptr [rax], al ; lea rdi, [rip + 0xc59cc] ; syscall
0x0000000000128f51 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5b96] ; syscall
0x0000000000128d71 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5d2e] ; syscall
0x0000000000128bad : add byte ptr [rax], al ; lea rdi, [rip + 0xc5eaa] ; syscall
0x0000000000128add : add byte ptr [rax], al ; lea rdi, [rip + 0xc5f26] ; syscall
0x0000000000128a13 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5ff0] ; syscall
0x000000000012897e : add byte ptr [rax], al ; lea rdi, [rip + 0xc6085] ; syscall
0x0000000000127c75 : add byte ptr [rax], al ; lea rdi, [rip + 0xc6d5a] ; syscall
0x0000000000127b35 : add byte ptr [rax], al ; lea rdi, [rip + 0xc6e9a] ; syscall
0x0000000000127a7d : add byte ptr [rax], al ; lea rdi, [rip + 0xc6f52] ; syscall
0x0000000000127483 : add byte ptr [rax], al ; lea rdi, [rip + 0xc7544] ; syscall
0x0000000000127281 : add byte ptr [rax], al ; lea rdi, [rip + 0xc76ee] ; syscall
0x00000000001270a1 : add byte ptr [rax], al ; lea rdi, [rip + 0xc7866] ; syscall
0x0000000000126edd : add byte ptr [rax], al ; lea rdi, [rip + 0xc79c2] ; syscall
0x000000000011b8fd : add byte ptr [rax], al ; lea rdi, [rip + 0xd2c4a] ; syscall
0x000000000011b7e1 : add byte ptr [rax], al ; lea rdi, [rip + 0xd2d66] ; syscall
0x000000000011b381 : add byte ptr [rax], al ; lea rdi, [rip + 0xd31c6] ; syscall
0x000000000011ae56 : add byte ptr [rax], al ; lea rdi, [rip + 0xd36f1] ; syscall
0x0000000000109d36 : add byte ptr [rax], al ; lea rdi, [rip + 0xe4541] ; syscall
0x0000000000085bbb : add byte ptr [rax], al ; lea rsi, [rsp + 8] ; call rax
0x000000000005a9b6 : add byte ptr [rax], al ; leave ; ret
0x00000000000abc26 : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x000000000018ccd3 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ef363 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000bb66e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000ba02e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000abc4e : add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017bc9e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017bc8e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017bc6e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013e7cc : add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000abd1e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000bb06e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000005ad20 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000098470 : add byte ptr [rax], al ; mov dword ptr [rip + 0x151e34], eax ; ret
0x000000000014b597 : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000110308 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000bad2e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000116e38 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x0000000000122437 : add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000116660 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000046717 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000013fd9e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x0000000000047436 : add byte ptr [rax], al ; mov eax, 0x80 ; syscall
0x0000000000046763 : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000001229c6 : add byte ptr [rax], al ; mov eax, 0x95 ; syscall
0x0000000000057f7c : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000000f531e : add byte ptr [rax], al ; mov eax, 0xc ; ret
0x0000000000025a34 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000004653d : add byte ptr [rax], al ; mov eax, 0xd ; syscall
0x00000000000463e2 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000004466c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000027b34 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000005ac2f : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000005ae42 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000004a895 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000018138e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000009d155 : add byte ptr [rax], al ; mov eax, ebx ; syscall
0x00000000000463ad : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000132ed6 : add byte ptr [rax], al ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000a08f7 : add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x0000000000161753 : add byte ptr [rax], al ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000011745a : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a56d : add byte ptr [rax], al ; mov eax, r8d ; add rsp, 8 ; ret
0x0000000000116bb2 : add byte ptr [rax], al ; mov eax, r8d ; mov ebx, dword ptr fs:[r10] ; syscall
0x0000000000032c53 : add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000084b41 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000046bfd : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000008fe04 : add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000ba06e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000011905e : add byte ptr [rax], al ; mov edi, 0x1fc0 ; call 0x25339
0x00000000001290f1 : add byte ptr [rax], al ; mov edi, 0x400 ; call 0x25339
0x0000000000115842 : add byte ptr [rax], al ; mov edi, dword ptr [rbp + 0x3c] ; call 0x111ab7
0x000000000013dc07 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000013da1e : add byte ptr [rax], al ; mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x0000000000055410 : add byte ptr [rax], al ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x00000000001182a3 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0xc] ; syscall
0x000000000012248e : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000124113 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 8] ; syscall
0x0000000000164141 : add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000e5fde : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000001224ea : add byte ptr [rax], al ; mov edx, 8 ; syscall
0x00000000000ba05e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000979da : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000009d150 : add byte ptr [rax], al ; mov esi, 0x81 ; mov eax, ebx ; syscall
0x0000000000162e17 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000162dcf : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000163302 : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000017bcde : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017bcee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017bcfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd2e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017bcce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017bcae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb07e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000ab8b9 : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000bb0be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb0ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb0de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb0ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb0ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000bb08e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000005ac48 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000858f8 : add byte ptr [rax], al ; mov qword ptr [rdx + 0xf0], rcx ; ret
0x0000000000098449 : add byte ptr [rax], al ; mov qword ptr [rip + 0x151e3e], rax ; ret
0x0000000000098420 : add byte ptr [rax], al ; mov qword ptr [rip + 0x151e5f], rax ; ret
0x0000000000098400 : add byte ptr [rax], al ; mov qword ptr [rip + 0x151e77], rax ; ret
0x000000000014b588 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004b466 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000014b524 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000132af7 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x10], rax ; call 0x8ed79
0x00000000000d8a59 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x30], rdi ; call 0x25499
0x000000000003757d : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000007bbd6 : add byte ptr [rax], al ; mov r10, qword ptr [rbp - 0x518] ; jmp rax
0x000000000014243e : add byte ptr [rax], al ; mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000007b049 : add byte ptr [rax], al ; mov r10, rdx ; jmp rax
0x00000000000889db : add byte ptr [rax], al ; mov r8, rbp ; mov edx, dword ptr [rbx] ; jmp 0x889b7
0x000000000008246e : add byte ptr [rax], al ; mov r9, qword ptr [rbp - 0x508] ; jmp rax
0x00000000000816b6 : add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x000000000003119b : add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x31158
0x00000000000313fb : add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x313b8
0x000000000004630c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000d2d0e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000d2d1e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000d2d2e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000d2d3e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000d2d4e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000d2d5e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000008ca02 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000120236 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000004a6d8 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014c38e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a16fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x148849] ; call qword ptr [rax]
0x000000000009aa70 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x14f347] ; call qword ptr [rax]
0x0000000000162f3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8cf41] ; call qword ptr [rax]
0x000000000014b224 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000004460c : add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000000d323f : add byte ptr [rax], al ; mov rax, r12 ; pop r12 ; ret
0x0000000000065745 : add byte ptr [rax], al ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000011a4b3 : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ce8f : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001565cd : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x000000000009b29f : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000018beee : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000003bec5 : add byte ptr [rax], al ; mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009269b : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093216 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb2fe : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000018eafe : add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x00000000000bedc3 : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011daf9 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call rbx
0x000000000011dbb9 : add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x000000000003fee7 : add byte ptr [rax], al ; mov rdi, qword ptr [r15 + 0x18] ; call 0x3c128
0x000000000011dd2a : add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000000a1a6e : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000a182a : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000014bff7 : add byte ptr [rax], al ; mov rdi, r12 ; call qword ptr [rbx]
0x0000000000039236 : add byte ptr [rax], al ; mov rdi, r13 ; call 0x254a7
0x000000000012dfbe : add byte ptr [rax], al ; mov rdi, r15 ; call 0x12a1e7
0x0000000000084345 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000083d4f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000ba09e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a04af : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, r12 ; call rax
0x0000000000115fbd : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000009fb4e : add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000000a0e51 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a10b6 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000005e5be : add byte ptr [rax], al ; mov rsp, rdx ; ret
0x0000000000116f69 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000abb5e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018db4e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x000000000004b4a8 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000bb0fe : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000bb10e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000813d6 : add byte ptr [rax], al ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000008101c : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000822b7 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x00000000001539d7 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x00000000001530b4 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000008ad67 : add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x0000000000144df5 : add byte ptr [rax], al ; movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x000000000009585c : add byte ptr [rax], al ; movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x000000000012f6ec : add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x0000000000094b63 : add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x00000000001502d1 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530d9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539e9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539c9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x00000000001102ef : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010371c : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000014b5a9 : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000093f81 : add byte ptr [rax], al ; movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf31e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000001713be : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000017134e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000012873c : add byte ptr [rax], al ; nop ; endbr64 ; ret
0x000000000019426d : add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000019425d : add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x000000000017bc7c : add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bb03d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bb05c : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb04d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017bcbd : add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000bb09d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000018ddbd : add byte ptr [rax], al ; nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017bc5d : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc4c : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000bb02c : add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x0000000000034a1c : add byte ptr [rax], al ; nop ; ret
0x0000000000187c5d : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000be0fc : add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000014b65d : add byte ptr [rax], al ; nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002723d : add byte ptr [rax], al ; nop ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000d253c : add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x000000000019bfa1 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000149b8b : add byte ptr [rax], al ; nop dword ptr [rax] ; endbr64 ; ret
0x000000000017bc3a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000bb01a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000b998a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000bad0a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000af8bb : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000130f58 : add byte ptr [rax], al ; nop word ptr [rax + rax] ; ret
0x0000000000045377 : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x00000000000bf2a9 : add byte ptr [rax], al ; or byte ptr [rdi], 0xa2 ; jmp 0xbf279
0x0000000000116c2f : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9b75
0x0000000000130302 : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000000e01ca : add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x000000000014bdb3 : add byte ptr [rax], al ; pop rbp ; jmp rcx
0x000000000006654d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063ffc : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000469d8 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000005e6aa : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000bf2d9 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x000000000009cdb2 : add byte ptr [rax], al ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000011314e : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000475ab : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046861 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000863cd : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000003332c : add byte ptr [rax], al ; pop rbx ; ret
0x000000000009323e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000119fbe : add byte ptr [rax], al ; pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000027377 : add byte ptr [rax], al ; ret
0x0000000000105d56 : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x00000000000e803e : add byte ptr [rax], al ; setne al ; ret
0x000000000009bbcf : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x000000000010f8fa : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019178c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000044f18 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000117496 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000013f52f : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000a898a : add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa8947
0x00000000000a9a2a : add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa99e7
0x00000000000a67d9 : add byte ptr [rax], al ; sub rax, rbp ; add rdx, rax ; jmp 0xa6797
0x00000000000f3fb8 : add byte ptr [rax], al ; sub rax, rcx ; add rdx, rax ; jmp 0xf3f57
0x0000000000095bc6 : add byte ptr [rax], al ; sub rax, rcx ; sub eax, 1 ; ret
0x00000000000beb01 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000025a39 : add byte ptr [rax], al ; syscall
0x000000000014b493 : add byte ptr [rax], al ; test eax, eax ; je 0x14b4a8 ; xor eax, eax ; ret
0x000000000011127a : add byte ptr [rax], al ; test eax, eax ; jne 0x111296 ; syscall
0x00000000000e80c7 : add byte ptr [rax], al ; test edi, edi ; js 0xe80d6 ; ret
0x0000000000066184 : add byte ptr [rax], al ; test edx, edx ; jne 0x66199 ; sub dword ptr [rdi], 1 ; ret
0x0000000000110613 : add byte ptr [rax], al ; test rax, rax ; je 0x110659 ; xor edx, edx ; call rax
0x0000000000130132 : add byte ptr [rax], al ; test rax, rax ; je 0x130177 ; call rax
0x000000000018cfe0 : add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001880ae : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000d333c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000a2118 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000090a6c : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf296 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000044376 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001878be : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000004b08a : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000011704e : add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000039344 : add byte ptr [rax], al ; xor esi, esi ; call 0x25606
0x0000000000091496 : add byte ptr [rax], al ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d226e : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000123c5d : add byte ptr [rax], cl ; add byte ptr [rbp + 5], bh ; jmp 0x123c33
0x0000000000037118 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000000371f8 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x0000000000028485 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000478d1 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000004580d : add byte ptr [rax], r8b ; addss xmm0, xmm0 ; ret
0x000000000004922d : add byte ptr [rax], r8b ; call 0x25495
0x0000000000099a2d : add byte ptr [rax], r8b ; call rax
0x00000000000969bd : add byte ptr [rax], r8b ; endbr64 ; ret
0x00000000001494dd : add byte ptr [rax], r8b ; endbr64 ; xor eax, eax ; ret
0x00000000001168dd : add byte ptr [rax], r8b ; endbr64 ; xor eax, eax ; syscall
0x000000000004517d : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000065f75 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000008b555 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000e8945 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000010290d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x0000000000128aed : add byte ptr [rax], r8b ; mov eax, r8d ; ret
0x00000000000e5fdd : add byte ptr [rax], r8b ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000ba05d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011fe65 : add byte ptr [rax], r8b ; mov rax, r8 ; ret
0x00000000000bb2fd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000012dfbd : add byte ptr [rax], r8b ; mov rdi, r15 ; call 0x12a1e8
0x00000000000ba09d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a15e5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000014be35 : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000332b5 : add byte ptr [rax], r8b ; ret
0x0000000000095bc5 : add byte ptr [rax], r8b ; sub rax, rcx ; sub eax, 1 ; ret
0x00000000000bf295 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000058ce5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000001878bd : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x00000000000a5a3d : add byte ptr [rax], r8b ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d226d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x000000000014d5a4 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000090d67 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x0000000000118ad3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; ret
0x0000000000163ebe : add byte ptr [rbp + 0x13], dh ; add rsp, 0x38 ; ret
0x00000000000d33d2 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x0000000000161e37 : add byte ptr [rbp + 0x15], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001222c8 : add byte ptr [rbp + 0x18], dh ; add rsp, 0x68 ; ret
0x00000000001414d8 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d7314 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x0000000000046ca5 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000154932 : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e7e74 : add byte ptr [rbp + 0x1c], dh ; mov eax, 0xfffa ; ret
0x000000000005e964 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x00000000000cd292 : add byte ptr [rbp + 0x1f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000157432 : add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; ret
0x0000000000124263 : add byte ptr [rbp + 0x24], dh ; mov eax, 0x42 ; syscall
0x000000000013da0c : add byte ptr [rbp + 0x28], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013999e : add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x00000000000d5801 : add byte ptr [rbp + 0x29], al ; ret
0x00000000000d5592 : add byte ptr [rbp + 0x29], al ; retf
0x00000000000d99e4 : add byte ptr [rbp + 0x29], al ; shr dword ptr [rcx], cl ; ret 0x8945
0x000000000016638f : add byte ptr [rbp + 0x29], cl ; retf 0x8d4b
0x00000000000cd066 : add byte ptr [rbp + 0x29dd75db], al ; ret
0x000000000014c8f3 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e80f : add byte ptr [rbp + 0x2e], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000054df9 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015fc71 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x0000000000091a3e : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000a6bd7 : add byte ptr [rbp + 0x31], al ; fild dword ptr [rbp - 0x77] ; ret 0x8948
0x000000000015d463 : add byte ptr [rbp + 0x31], al ; fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000000c3779 : add byte ptr [rbp + 0x31], al ; imul cl ; ret
0x00000000000d324f : add byte ptr [rbp + 0x31], al ; in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x000000000014238f : add byte ptr [rbp + 0x31], al ; rol byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000000a3ce0 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000131af6 : add byte ptr [rbp + 0x31], al ; shl byte ptr [rbx + rax*4 + 0x39], 0xb ; jne 0x131ad3 ; jmp 0x131ac3
0x0000000000160128 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbp ; ret
0x000000000014c991 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014a95e : add byte ptr [rbp + 0x34], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000118c23 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x0000000000162f23 : add byte ptr [rbp + 0x38], dh ; add rsp, 0x58 ; ret
0x00000000000cd0c2 : add byte ptr [rbp + 0x391974db], al ; ret
0x00000000000cd1b7 : add byte ptr [rbp + 0x391c74db], al ; ret
0x00000000001423d7 : add byte ptr [rbp + 0x39], al ; retf
0x000000000019a66d : add byte ptr [rbp + 0x39], cl ; ret
0x000000000009a7c6 : add byte ptr [rbp + 0x39], cl ; ret 0x850f
0x0000000000098221 : add byte ptr [rbp + 0x39], cl ; ret 0xd977
0x0000000000160f21 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000119d97 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x0000000000119e66 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000016327c : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x38 ; ret
0x000000000009c3ea : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x40 ; pop rbp ; ret
0x000000000011fdff : add byte ptr [rbp + 0x3e], dh ; mov rdx, rax ; jmp 0x11fe1e
0x0000000000158fa0 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c380 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009e52f : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; jmp rax
0x000000000006654e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000063ffd : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000469d9 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001594c0 : add byte ptr [rbp + 0x41], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e6515 : add byte ptr [rbp + 0x41], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000159070 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbp ; ret
0x000000000015a4a0 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000004bfb4 : add byte ptr [rbp + 0x440f48f6], 0xc2 ; jmp 0x4bfd6
0x0000000000159720 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013fbac : add byte ptr [rbp + 0x46], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000124282 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x000000000011664a : add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x00000000001166d9 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x00000000001167c1 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x000000000016301a : add byte ptr [rbp + 0x47], dh ; add rsp, 0x68 ; ret
0x000000000011685f : add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x0000000000118888 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009d678 : add byte ptr [rbp + 0x4c], bl ; mov eax, eax ; pop r12 ; pop r13 ; ret
0x000000000009e80f : add byte ptr [rbp + 0x4c], bl ; mov esi, esp ; pop r12 ; pop r13 ; jmp rax
0x00000000001595df : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001631b3 : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x68 ; ret
0x00000000000859b0 : add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000005e149 : add byte ptr [rbp + 0x51], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e21de : add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x0000000000105c50 : add byte ptr [rbp + 0x53], dh ; add rsp, 0x38 ; ret
0x000000000014007a : add byte ptr [rbp + 0x54], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000054f77 : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000117c6e : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; ret
0x0000000000054ea9 : add byte ptr [rbp + 0x5f], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e73ae : add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x0000000000154efb : add byte ptr [rbp + 0x6c], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e43da : add byte ptr [rbp + 0x6f], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c84 : add byte ptr [rbp + 0x73], dh ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000117dc3 : add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x000000000014a6ed : add byte ptr [rbp + 0x77], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000115cf4 : add byte ptr [rbp + 0x7f], dh ; add rsp, 0x40 ; pop r12 ; ret
0x0000000000132907 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000116ddc : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x00000000000d7445 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000065ee6 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x00000000000e5c74 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001554c2 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005957f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000005946f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000d5f3b : add byte ptr [rbp + 1], cl ; retf 0x8d49
0x000000000005812d : add byte ptr [rbp + 3], dh ; push r10 ; ret
0x0000000000123c5f : add byte ptr [rbp + 5], bh ; jmp 0x123c31
0x0000000000045f74 : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000004a752 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000139a3b : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000158ea5 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000156bf4 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000015ae69 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d344c : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000147c3c : add byte ptr [rbp + 7], dh ; add rsp, 0x10 ; pop r12 ; ret
0x000000000004a67e : add byte ptr [rbp + 7], dh ; pop rbx ; ret
0x00000000000e7f95 : add byte ptr [rbp + 8], dh ; mov eax, 0x40 ; ret
0x0000000000116840 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000092cd6 : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x158b
0x00000000000317fc : add byte ptr [rbp + rcx*4 + 0x41], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x0000000000154ea9 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x14 ; call qword ptr [rax]
0x000000000015567f : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000014a74a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x000000000014a498 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x00000000000f08d7 : add byte ptr [rbp + rcx*4 + 0x52], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8349
0x00000000000590ef : add byte ptr [rbp + rcx*4 + 0x54], cl ; retf 0x4cf0
0x00000000000a4a3f : add byte ptr [rbp + rcx*4 + 0x58], cl ; dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000019657f : add byte ptr [rbp + rcx*4 + 0x5f], cl ; add dword ptr [rcx - 9], eax ; ret
0x00000000000cd345 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x0000000000026ab4 : add byte ptr [rbp - 0x3c], dh ; ret
0x00000000000888eb : add byte ptr [rbp - 0x3e], dh ; jmp 0x88885
0x00000000000cdaff : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000196af7 : add byte ptr [rbp - 0x76b23fb6], cl ; retf
0x00000000001964d6 : add byte ptr [rbp - 0x76b33fb6], cl ; retf
0x000000000019984f : add byte ptr [rbp - 0x76b63fb6], cl ; ret 0xd349
0x000000000010f17c : add byte ptr [rbp - 0x76b7febd], cl ; ret
0x00000000000f139b : add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x00000000000fb07f : add byte ptr [rbp - 0x76db8b40], al ; ret 0xe283
0x00000000000f770c : add byte ptr [rbp - 0x77], al ; loopne 0xf7766 ; mov ecx, ebp ; call 0xf3959
0x00000000000d5637 : add byte ptr [rbp - 0x77], al ; ret 0x8341
0x00000000000a80c2 : add byte ptr [rbp - 0x77], cl ; adc eax, dword ptr [rbp - 0x77] ; ret 0x8b4b
0x00000000000ecf07 : add byte ptr [rbp - 0x77], cl ; fmul qword ptr [rax - 0x77] ; retf
0x00000000000d895c : add byte ptr [rbp - 0x77], cl ; out 0x89, eax ; ret 0x44c7
0x000000000002ff54 : add byte ptr [rbp - 0x77], cl ; ret
0x00000000000ad92d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000019623a : add byte ptr [rbp - 0x77], cl ; retf 0x894c
0x0000000000196b94 : add byte ptr [rbp - 0x77], cl ; retf 0x894d
0x00000000000a07b8 : add byte ptr [rbp - 0x7acc812e], al ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000158c80 : add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; ret
0x000000000002b809 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ed16b : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; retf
0x000000000007a62b : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; retf
0x000000000006fb5f : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8341
0x000000000004ce4b : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x00000000000f0f0f : add byte ptr [rbp - 0x7cdf872e], al ; ret 0x4801
0x000000000011b608 : add byte ptr [rbp - 0x8f38b25], al ; ret
0x000000000011ac7f : add byte ptr [rbp - 0x8f38b2e], al ; ret 0xfc07
0x0000000000057427 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000e7c2d : add byte ptr [rbp], bh ; add byte ptr [rax + 0xf], cl ; ret 0x19e9
0x00000000000e7c47 : add byte ptr [rbp], bh ; add byte ptr [rax + 0xf], cl ; ret 0xffe9
0x00000000000e76b2 : add byte ptr [rbp], bh ; add cl, ch ; ret
0x00000000001833e9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000009bf0b : add byte ptr [rbx + 0x14ec6d2d], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000096a45 : add byte ptr [rbx + 0x156a5705], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000011ae3f : add byte ptr [rbx + 0x17f01f8], al ; ret
0x000000000009f3cb : add byte ptr [rbx + 0x22], dh ; lea rax, [rax - 8] ; ret
0x000000000004ed60 : add byte ptr [rbx + 0x29482404], cl ; retf
0x000000000009323f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000013da1f : add byte ptr [rbx + 0x3b83b], cl ; add byte ptr [rax], al ; syscall
0x000000000008427f : add byte ptr [rbx + 0x3c83480e], cl ; retf 0x4800
0x000000000011314f : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ab5b0 : add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x0000000000110b56 : add byte ptr [rbx + 0x47426f8], al ; mov eax, r9d ; ret
0x00000000000ba06f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000017dfdf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000018138f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000467ad : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000bc4ef : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x00000000000bf2da : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x000000000009cdb3 : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000170b4f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000ef732 : add byte ptr [rbx + 0x5b010447], al ; pop rbp ; pop r12 ; ret
0x000000000008e705 : add byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; pop r12 ; ret
0x00000000000666d4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000475ac : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000046862 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000863ce : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115843 : add byte ptr [rbx + 0x64e83c7d], cl ; ret 0xffff
0x0000000000039410 : add byte ptr [rbx + 0x6c0f6600], cl ; ret 0xf41
0x000000000002a99f : add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x0000000000192e7a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001513b6 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x0000000000126f35 : add byte ptr [rbx + rcx*4 + 0x25], cl ; retf
0x00000000000abf19 : add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret 0x854d
0x00000000000e4014 : add byte ptr [rbx + rcx*4 + 0x35], cl ; hlt ; ret
0x00000000000e475e : add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0x10bc
0x00000000000e253e : add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0x10de
0x0000000000038545 : add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x00000000000ce16b : add byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x10 ; call r14
0x000000000009afd7 : add byte ptr [rbx + rcx*4 + 0x50], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000005abc7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000058c97 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000104be5 : add byte ptr [rbx + rcx*4 + 0x63], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000491ff : add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000011f7e4 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e44a5 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret
0x00000000001332bd : add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x00000000000f0ed5 : add byte ptr [rbx - 0x157cfe15], al ; add dword ptr [rax + 0x63], ecx ; ret
0x00000000000e91b7 : add byte ptr [rbx - 0x30373], al ; call qword ptr [rax]
0x000000000008a96f : add byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bf3ae : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000bf3a7 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000bf3a0 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000bf399 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000bf3bc : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000bf3b5 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000011ff8f : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000014438a : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x1443a0 ; ret
0x00000000000bf62d : add byte ptr [rbx - 0x3f7cfe3e], al ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x000000000014281c : add byte ptr [rbx - 0x49f0fe0d], al ; ret
0x0000000000081848 : add byte ptr [rbx - 0x50743], al ; call qword ptr [rax]
0x00000000000bf644 : add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xcfe9
0x000000000002f2c1 : add byte ptr [rbx - 0x57f3f1e], al ; or byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000010cdc7 : add byte ptr [rbx - 0x6af0fd05], al ; ret
0x000000000010cc2f : add byte ptr [rbx - 0x6af0fe05], al ; ret
0x0000000000198b9b : add byte ptr [rbx - 0x70f08b06], al ; retf
0x000000000019622b : add byte ptr [rbx - 0x70f0c006], al ; ret
0x00000000000f3984 : add byte ptr [rbx - 0x72bed3a7], cl ; add dword ptr [rcx], edi ; ret
0x0000000000126bae : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x000000000004a6dc : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000cd137 : add byte ptr [rbx - 0x76b30383], cl ; out 0x89, al ; ret
0x0000000000107481 : add byte ptr [rbx - 0x76b7fd07], al ; ret 0x940f
0x000000000013f5b1 : add byte ptr [rbx - 0x77], dl ; retf
0x000000000013f530 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x13f541 ; ret
0x000000000007d835 : add byte ptr [rbx - 0x78f0f808], al ; ret 8
0x00000000000af7f4 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000007fdec : add byte ptr [rbx - 0x7af00008], al ; jmp rax
0x00000000000bf5d8 : add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x000000000012f7fb : add byte ptr [rbx - 0x7af0fe05], al ; retf
0x00000000001060f7 : add byte ptr [rbx - 0x7bf00001], al ; ret
0x00000000000c23c3 : add byte ptr [rbx - 0x7bf0cf03], al ; ret
0x00000000000cedec : add byte ptr [rbx - 0x7bf0d403], al ; ret 7
0x00000000000c239c : add byte ptr [rbx - 0x7bf0d403], al ; retf 1
0x00000000001956c6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000f79b7 : add byte ptr [rbx - 0x7bf0f71e], al ; ret 0xfffc
0x000000000003c5d4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0x1a
0x000000000004006c : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000003ef29 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x000000000003dbc3 : add byte ptr [rbx - 0x7bf0fd08], al ; call qword ptr [rcx]
0x0000000000040797 : add byte ptr [rbx - 0x7bf0fd08], al ; retf 8
0x000000000003d17b : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000414b0 : add byte ptr [rbx - 0x7bf0fe08], al ; retf
0x0000000000041ccf : add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x00000000000404e8 : add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x14
0x000000000012f6b7 : add byte ptr [rbx - 0x7cb7e7ad], cl ; ret
0x0000000000144669 : add byte ptr [rbx - 0x7cb7efab], cl ; ret
0x0000000000144537 : add byte ptr [rbx - 0x7cb7efbb], cl ; ret
0x00000000000eb757 : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000000000bfc6f : add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000840cc : add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000063d9f : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret
0x0000000000083ff7 : add byte ptr [rbx - 0x7cb7fbbe], cl ; ret 0x4104
0x00000000000bfd07 : add byte ptr [rbx - 0x7cb7fbbe], cl ; ret 0x8504
0x000000000014410f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3928
0x00000000000f39af : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x000000000018c593 : add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x0000000000070d70 : add byte ptr [rbx - 0x9bef71d], al ; ret
0x000000000011a103 : add byte ptr [rbx], ah ; mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x0000000000096737 : add byte ptr [rbx], ch ; push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000132f67 : add byte ptr [rcx + 0x18e8c1f8], cl ; ret
0x0000000000150342 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000001981d1 : add byte ptr [rcx + 0x21], cl ; ret
0x00000000000d9d4b : add byte ptr [rcx + 0x29], al ; ret
0x00000000000db601 : add byte ptr [rcx + 0x29], al ; ret 0x8944
0x00000000000db63c : add byte ptr [rcx + 0x29], al ; ret 0x8d43
0x00000000000d9df1 : add byte ptr [rcx + 0x29], al ; ret 0xbe0f
0x0000000000080de8 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000ba345 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000005e94f : add byte ptr [rcx + 0x29], cl ; retf 0x8d4b
0x000000000008c7df : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000000853e7 : add byte ptr [rcx + 0x31c289df], cl ; shr al, 0x2d ; ret
0x000000000017bc9f : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000002f68b : add byte ptr [rcx + 0x3948fc51], cl ; ret
0x00000000000fbd9b : add byte ptr [rcx + 0x39], al ; ret
0x00000000000d9ec1 : add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000fbf5b : add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x00000000000d9f61 : add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x000000000006245b : add byte ptr [rcx + 0x39], cl ; ret
0x00000000000622a3 : add byte ptr [rcx + 0x39], cl ; ret 0x1773
0x00000000000a60c4 : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000002d0b0 : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000164142 : add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x000000000010582a : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000037725 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000011c3a8 : add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x0000000000130303 : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000e01cb : add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x000000000011c36f : add byte ptr [rcx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000105627 : add byte ptr [rcx + 0x63482c53], cl ; ret 0x2de9
0x000000000007718e : add byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000190a40 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000d09fa : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000fce68 : add byte ptr [rcx + 0x63], cl ; ret 0x8341
0x000000000006f8fd : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x00000000000c3698 : add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x000000000005dad5 : add byte ptr [rcx + 0x63], cl ; ret 0xd231
0x00000000000ff99e : add byte ptr [rcx + 0x63], cl ; retf
0x0000000000045e9f : add byte ptr [rcx + 0x6f0f66ef], cl ; ret 0x5e8
0x00000000000d9cb1 : add byte ptr [rcx + 0x76bc3], al ; add byte ptr [rdi], cl ; ret
0x00000000000a71c8 : add byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000001539d8 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x00000000001530b5 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x00000000000ee67f : add byte ptr [rcx + 0xf], al ; mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000066f4f : add byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add dword ptr [rax - 0x7d], ecx ; ret 0xbe02
0x000000000007de87 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000f400f : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000d5616 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x3ee9
0x00000000000d58be : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0xe1e9
0x0000000000062765 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x3145
0x0000000000039ad1 : add byte ptr [rcx + 0xf], cl ; retf 0x8949
0x00000000000dcebe : add byte ptr [rcx + 1], al ; ret 0x8944
0x00000000000563f4 : add byte ptr [rcx + 1], cl ; ret
0x0000000000116b9f : add byte ptr [rcx + 9], al ; ret 0x8941
0x0000000000196566 : add byte ptr [rcx + 9], cl ; retf 0x8548
0x00000000000a898b : add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa8946
0x00000000000a9a2b : add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa99e6
0x000000000010a22a : add byte ptr [rcx + rbx*2 + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000035691 : add byte ptr [rcx + rcx*4 + 0x25], al ; ret
0x0000000000143468 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x00000000000f7892 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x8b48
0x0000000000143410 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x0000000000143020 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x00000000000ce364 : add byte ptr [rcx + rcx*4 + 0x42], 4 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000011dfec : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000009abd3 : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000012bfc5 : add byte ptr [rcx + rcx*4 + 0x45], cl ; test al, 0x89 ; ret 0xc031
0x00000000000abb87 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000ab918 : add byte ptr [rcx + rcx*4 + 7], cl ; mov rax, r12 ; pop r12 ; ret
0x0000000000039237 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x254a6
0x00000000000d930e : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x255a6
0x000000000004a41b : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, 0xca ; syscall
0x00000000000a04b0 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r12 ; call rax
0x000000000012460c : add byte ptr [rcx + rcx*4 - 0x19], al ; mov eax, 0x14 ; syscall
0x000000000014bff8 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rbx]
0x000000000013b7ab : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000049e32 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 0xca ; syscall
0x000000000009fb4f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x0000000000048b93 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r15 ; call 0x255d9
0x00000000000a0e52 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000115cd4 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov eax, 0x10f ; syscall
0x00000000000a08f8 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000128916 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000161754 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000011745b : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d3240 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000085d43 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000065746 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x000000000011a4b4 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004460d : add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000003bec6 : add byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000154dba : add byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0x000000000011a56e : add byte ptr [rcx + rcx*4 - 0x40], al ; add rsp, 8 ; ret
0x0000000000116bb3 : add byte ptr [rcx + rcx*4 - 0x40], al ; mov ebx, dword ptr fs:[r10] ; syscall
0x0000000000032c54 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000084b42 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x0000000000046bfe : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000008b0e4 : add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000011a8b2 : add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; ret
0x000000000009ce90 : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001565ce : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000009b2a0 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000018beef : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000011fb08 : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r15 ; call 0x4bdf9
0x000000000012dfbf : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x12a1e6
0x000000000009f31a : add byte ptr [rcx + rcx*4 - 1], cl ; mov eax, 0xca ; syscall
0x00000000000e1c34 : add byte ptr [rcx + rcx*4 - 8], cl ; call rax
0x0000000000049c3b : add byte ptr [rcx + rcx*4 - 9], cl ; mov eax, 0xca ; syscall
0x000000000011cc81 : add byte ptr [rcx + rsi + 0x48], dh ; mov edi, ebp ; xor esi, esi ; call r12
0x00000000000931c4 : add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0x1389
0x00000000000609be : add byte ptr [rcx - 0x1177b], cl ; ljmp [rcx] ; ret
0x0000000000054758 : add byte ptr [rcx - 0x39], cl ; ret
0x000000000014afb7 : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x37a59
0x0000000000196234 : add byte ptr [rcx - 0x45], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x894c
0x0000000000031182 : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000002f640 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000009a48b : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 - 0x7b] ; ret 0x850f
0x000000000009b69d : add byte ptr [rcx - 0x73], cl ; push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000015a7da : add byte ptr [rcx - 0x74b7d7b9], cl ; sbb byte ptr [r15], r9b ; retf 0x8348
0x00000000000efa21 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000011dbba : add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000000591ef : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000003fee8 : add byte ptr [rcx - 0x75], cl ; jg 0x3ff0c ; call 0x3c127
0x000000000011dafa : add byte ptr [rcx - 0x75], cl ; jge 0x11db04 ; call rbx
0x000000000011db2a : add byte ptr [rcx - 0x75], cl ; jge 0x11db34 ; call rbx
0x000000000011db5a : add byte ptr [rcx - 0x75], cl ; jge 0x11db64 ; call rbx
0x000000000008c9cc : add byte ptr [rcx - 0x75], cl ; mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000f841f : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r9], al ; retf
0x0000000000083988 : add byte ptr [rcx - 0x76b3d395], cl ; ret 0x8348
0x0000000000083c38 : add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x000000000013e7cd : add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x0000000000026d83 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000f68e2 : add byte ptr [rcx - 0x77], al ; ret 0x3941
0x00000000000ebd45 : add byte ptr [rcx - 0x77], al ; ret 0x3b4c
0x000000000002e2c8 : add byte ptr [rcx - 0x77], al ; ret 0x5a58
0x0000000000116b2b : add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000000de25d : add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000ebc50 : add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x000000000004d397 : add byte ptr [rcx - 0x77], al ; ret 0xd231
0x000000000015bcdb : add byte ptr [rcx - 0x77], al ; ret 0xf883
0x00000000000d9db2 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000110896 : add byte ptr [rcx - 0x77], al ; ror byte ptr [rax - 0x77], 1 ; retf
0x00000000001330d0 : add byte ptr [rcx - 0x77], al ; ror dword ptr [rdi], 0x97 ; ret 0x840
0x000000000002fbad : add byte ptr [rcx - 0x77], al ; xor ecx, dword ptr [rcx - 0x77] ; retf
0x00000000000889dc : add byte ptr [rcx - 0x77], cl ; call 0xffffffffcbf39d76
0x00000000001029b7 : add byte ptr [rcx - 0x77], cl ; dec byte ptr [rbp - 0x77] ; ret
0x00000000000f2545 : add byte ptr [rcx - 0x77], cl ; dec dword ptr [rax - 0x77] ; retf 0xd349
0x0000000000031666 : add byte ptr [rcx - 0x77], cl ; dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x000000000003c067 : add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x000000000011fe59 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x0000000000119bdf : add byte ptr [rcx - 0x77], cl ; fsubp st(1) ; retf
0x00000000000816b7 : add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x000000000003119c : add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x31157
0x00000000000313fc : add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x313b7
0x000000000009b31a : add byte ptr [rcx - 0x77], cl ; push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000065c59 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000d0492 : add byte ptr [rcx - 0x77], cl ; ret 0x2e66
0x00000000000a2d47 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000054633 : add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000006203f : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000014dba5 : add byte ptr [rcx - 0x77], cl ; ret 0xb43
0x00000000001963da : add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x000000000014243f : add byte ptr [rcx - 0x77], cl ; ret 0xc641
0x000000000002fccc : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000100b47 : add byte ptr [rcx - 0x77], cl ; retf 0x8b49
0x00000000000a83ad : add byte ptr [rcx - 0x77], cl ; retf 0x8b4c
0x0000000000044b39 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000000f1363 : add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x000000000019a6b1 : add byte ptr [rcx - 0x7b], cl ; ret
0x0000000000060acf : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000010d2ee : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rbx]
0x0000000000141718 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000f343f : add byte ptr [rcx - 0x7d], al ; ret 0x8d01
0x000000000006f52f : add byte ptr [rcx - 0x7d], al ; retf
0x000000000019a5b7 : add byte ptr [rcx - 0x7d], al ; retf 0x4101
0x000000000019a177 : add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x0000000000026dc0 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000043d0b : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012553c : add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x00000000000a3d3b : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000004d3ef : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000071b4b : add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x0000000000166aef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a3cc6 : add byte ptr [rcx - 0x7d], cl ; ret 0xbd01
0x000000000007a074 : add byte ptr [rcx - 0x7d], cl ; ret 0xbe01
0x000000000012de50 : add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000000ac2cf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011cee0 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000011ce85 : add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x000000000002b39f : add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx], 0x89 ; xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000006f51f : add byte ptr [rcx - 0x7f], al ; retf
0x000000000010e399 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000010bd7f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000010e54a : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x00000000000345ae : add byte ptr [rcx - 0x8373], cl ; dec dword ptr [rcx + 1] ; ret 0x8d48
0x000000000012f65f : add byte ptr [rcx - 0x877b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007dfd8 : add byte ptr [rcx - 0x8ef63], cl ; dec dword ptr [rax - 0x77] ; retf
0x000000000002b27f : add byte ptr [rcx - 0xa], al ; ret
0x00000000000a9926 : add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000009f1ad : add byte ptr [rcx - 0xa], cl ; call 0x11bc96
0x0000000000132ed7 : add byte ptr [rcx - 0xda08], cl ; inc dword ptr [rax] ; ret
0x00000000001109ba : add byte ptr [rcx - 0xfff1e], al ; dec dword ptr [rcx] ; retf 0x9489
0x000000000006f7b9 : add byte ptr [rcx - 9], al ; ret
0x00000000000af9c6 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000000af9ec : add byte ptr [rcx - 9], cl ; ret 2
0x000000000014c196 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015e35d : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000015e6f5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000374bd : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000116f67 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013f0ca : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000beaff : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000049f32 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d59d1 : add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000a3654 : add byte ptr [rcx], al ; je 0xa3619 ; ret
0x00000000000bff64 : add byte ptr [rcx], al ; je 0xbff29 ; ret
0x0000000000128a8a : add byte ptr [rcx], al ; mov eax, r8d ; add rsp, 8 ; ret
0x000000000013adce : add byte ptr [rcx], al ; mov eax, r8d ; pop rbp ; ret
0x0000000000064147 : add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000015ffe1 : add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x00000000000371d8 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000004a90e : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000057dc5 : add byte ptr [rcx], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000055470 : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000086fe1 : add byte ptr [rcx], al ; ret
0x00000000000f521e : add byte ptr [rcx], al ; ret 0xc083
0x0000000000056c9b : add byte ptr [rcx], al ; ret 0xfde9
0x000000000015eac1 : add byte ptr [rcx], al ; retf 0x27e8
0x000000000004513a : add byte ptr [rcx], al ; retf 0xfe0d
0x00000000000df208 : add byte ptr [rcx], al ; ror dword ptr [rcx - 0x35d6bb36], 0x81 ; ret 0x17e
0x0000000000049a11 : add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; ret
0x000000000004a2e4 : add byte ptr [rcx], al ; xor esi, esi ; mov rdi, r9 ; call r8
0x000000000018faef : add byte ptr [rcx], bh ; enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000cd047 : add byte ptr [rcx], bh ; ret
0x0000000000105443 : add byte ptr [rcx], bh ; ret 0x1874
0x000000000009a6e6 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000ee02f : add byte ptr [rcx], bh ; retf
0x000000000003a887 : add byte ptr [rcx], bh ; retf 0x7477
0x000000000010561f : add byte ptr [rcx], bh ; retf 0x840f
0x0000000000102f22 : add byte ptr [rcx], bh ; retf 0x8c0f
0x0000000000105309 : add byte ptr [rcx], bh ; retf 0xe74
0x0000000000198833 : add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000198952 : add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001873bf : add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x000000000018788f : add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x00000000000cd1d7 : add byte ptr [rcx], ch ; ret
0x00000000000df416 : add byte ptr [rcx], ch ; ret 0x8948
0x00000000000dc07b : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000d9b54 : add byte ptr [rcx], ch ; ret 0x8d44
0x0000000000117497 : add byte ptr [rcx], ch ; ret 0xc085
0x00000000000dddc5 : add byte ptr [rcx], ch ; ret 0xd729
0x0000000000027604 : add byte ptr [rcx], ch ; retf
0x00000000000de216 : add byte ptr [rcx], ch ; ror dword ptr [rcx - 0x35d6bb36], 0x81 ; ret 0x17e
0x0000000000054eff : add byte ptr [rcx], cl ; ret 0x8f74
0x000000000002ac95 : add byte ptr [rcx], cl ; retf 0x1089
0x0000000000112bdc : add byte ptr [rcx], cl ; retf 0xea81
0x000000000005269f : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000138dec : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001249a1 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000004cd01 : add byte ptr [rcx], dh ; div bh ; ret 0
0x000000000011bb4c : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000045527 : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x0000000000090a6d : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000af2fc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000163fbf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x000000000009aea0 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x34 ; ret
0x00000000000a2119 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000004b381 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bebb2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018f26f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000110888 : add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x0000000000114bfc : add byte ptr [rcx], dh ; shr al, 0x8c ; ret
0x0000000000154b5d : add byte ptr [rcx], dh ; shr al, 0xbb ; retf
0x000000000009beac : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call 0x98108
0x000000000011905f : add byte ptr [rdi + 0x1fc0], bh ; call 0x25338
0x00000000001290f2 : add byte ptr [rdi + 0x400], bh ; call 0x25338
0x00000000000d2264 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001960b4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000011d8f8 : add byte ptr [rdi + rbp + 0x48], dh ; mov edi, ebp ; xor esi, esi ; call r12
0x0000000000163b9a : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x854d
0x00000000000d2352 : add byte ptr [rdi + rcx + 0x4c], al ; enter -0x76bc, -0x38 ; ret
0x00000000000d2374 : add byte ptr [rdi + rcx + 0x4f], al ; enter -0x76bc, -0x38 ; ret
0x000000000009351a : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x00000000001982b9 : add byte ptr [rdi + rcx - 0x43], cl ; ret 0x8349
0x00000000000d5477 : add byte ptr [rdi + rcx - 0x49], al ; retf
0x000000000014dc40 : add byte ptr [rdi + rcx - 0x49], al ; retf 0xc148
0x00000000000370d8 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x0000000000045877 : add byte ptr [rdi], bh ; mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x000000000008ad68 : add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x0000000000144df6 : add byte ptr [rdi], cl ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000009585d : add byte ptr [rdi], cl ; adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x000000000012f6ed : add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], edi ; call rcx
0x0000000000094b64 : add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000001539ea : add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x00000000001502d2 : add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x00000000001530da : add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x00000000001539ca : add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x00000000001102f0 : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000010371d : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000014b5aa : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x00000000001571a4 : add byte ptr [rdi], cl ; adc dword ptr [rsp + 0xb8], ebp ; call rax
0x0000000000157110 : add byte ptr [rdi], cl ; adc dword ptr [rsp + 0xd8], eax ; call rax
0x00000000000a3853 : add byte ptr [rdi], cl ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000463ba : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000170306 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000038007 : add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x0000000000039fb6 : add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0xd289
0x000000000003a7c1 : add byte ptr [rdi], cl ; enter -0x3fcf, -0x77 ; retf 0xeac1
0x000000000017134f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000125cc4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x125c55 ; loopne 0x125cd5 ; ret
0x0000000000037271 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x37202 ; loopne 0x37282 ; ret
0x000000000014564d : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x0000000000129566 : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0xc55
0x000000000011b086 : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0xd34
0x000000000014f956 : add byte ptr [rdi], cl ; mov cl, 0x15 ; retf 0xa00
0x000000000008718d : add byte ptr [rdi], cl ; mov cl, 0x35 ; retf
0x00000000001713bf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018da5f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000003b28f : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000ed48f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000003c027 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004c017 : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e9bff : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000062497 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf01
0x00000000000d8019 : add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000043a9e : add byte ptr [rdi], cl ; mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x00000000000bf31f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000093f82 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad56f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000018831f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000af82f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af83f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000af81f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000af32f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000af35f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af34f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000af33f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000064577 : add byte ptr [rdi], cl ; push rax ; ret 0xb60f
0x000000000004566b : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000d9cb7 : add byte ptr [rdi], cl ; ret
0x00000000000470f1 : add byte ptr [rdi], cl ; ret 0x31c3
0x0000000000115d9b : add byte ptr [rdi], cl ; ret 0x41c3
0x00000000000dbc61 : add byte ptr [rdi], cl ; ret 0x5841
0x000000000013f091 : add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000056eb3 : add byte ptr [rdi], cl ; ret 0x6de9
0x000000000013021b : add byte ptr [rdi], cl ; ret 0x8348
0x00000000001300cb : add byte ptr [rdi], cl ; ret 0x89c3
0x0000000000151db3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000013f0bb : add byte ptr [rdi], cl ; ret 0xb8c3
0x0000000000033473 : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000105d38 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000002a9a3 : add byte ptr [rdi], cl ; retf 0x1489
0x000000000014ba6b : add byte ptr [rdi], cl ; retf 0xfa81
0x00000000000d4e81 : add byte ptr [rdi], cl ; sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001822df : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000010fbd5 : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xa0], eax ; syscall
0x000000000004639f : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000199a17 : add byte ptr [rdi], cl ; test bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000198d4f : add byte ptr [rdi], cl ; test byte ptr [rdx], bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x00000000000e349f : add byte ptr [rdi], cl ; test byte ptr [rsi + rdi*8 + 0x3d80ffff], ah ; retf
0x00000000000a6f5f : add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005a9b1 : add byte ptr [rdi], cl ; test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x0000000000130443 : add byte ptr [rdi], cl ; test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000073741 : add byte ptr [rdi], cl ; test esp, esi ; retf
0x000000000014d440 : add byte ptr [rdi], cl ; xchg dword ptr [rcx - 0x77000000], ebx ; retf 0x8b48
0x000000000005832f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ebp ; retf 0xc183
0x000000000005834f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ebx ; retf 0xc183
0x000000000005836f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ecx ; retf 0xc183
0x000000000005830f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], edi ; retf 0xc183
0x000000000005b895 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000fae3f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x00000000000f1952 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x000000000015265f : add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000000d792b : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xc283
0x00000000000d995d : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x6348
0x0000000000199191 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2040
0x0000000000196800 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2041
0x00000000000570e8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2ae9
0x0000000000084fa1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b48
0x0000000000199a90 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x00000000001970ba : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x00000000000fcc64 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000001014af : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x000000000015620c : add byte ptr [rdx + 0x3c], ch ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000179c6f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000006f74b : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000010c453 : add byte ptr [rdx + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x000000000019753b : add byte ptr [rdx + 0x63], cl ; or al, 0xa7 ; add rcx, rdi ; jmp rcx
0x0000000000129124 : add byte ptr [rdx + 0xc], bl ; add al, ch ; ret
0x00000000001224eb : add byte ptr [rdx + 8], bh ; syscall
0x000000000009b8cc : add byte ptr [rdx - 0x7d], cl ; xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000115800 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000119240 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e68c9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000003757b : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000003722a : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000002a5f6 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000012ae85 : add byte ptr [rdx], al ; call rax
0x000000000009843b : add byte ptr [rdx], al ; jbe 0x98444 ; ret
0x0000000000037138 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000044609 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000012b23b : add byte ptr [rdx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000122099 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x0000000000197754 : add byte ptr [rsi + 0x63], cl ; and al, 0xa7 ; add rdi, r12 ; jmp rdi
0x00000000000979db : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000009d151 : add byte ptr [rsi + 0x81], bh ; mov eax, ebx ; syscall
0x0000000000155deb : add byte ptr [rsi + 0xa], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000190d46 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009af4e : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x0000000000163ab7 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x44c7
0x000000000008ce0a : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x7589
0x0000000000039412 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0xf41
0x000000000005eeff : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000061f95 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000045f15 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xc764
0x000000000005ef28 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000af74c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af264 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d26df : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000009873e : add byte ptr [rsi - 0x59], dh ; add rsp, 8 ; ret
0x000000000012873d : add byte ptr [rsi - 0x70], ah ; endbr64 ; ret
0x000000000017bc7d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bb05d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000ba03d : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000017bc4d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000bb02d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x0000000000034a1d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000000be0fd : add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000d253d : add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x000000000013d6bb : add byte ptr [rsi - 0x77], ah ; rol r14, 0x45 ; ret
0x000000000015b1f0 : add byte ptr [rsi - 0x77], ah ; shl byte ptr [rsi + 0xf], 0xc5 ; retf
0x00000000000e60f9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000879d0 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000000c9c7c : add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x00000000001126fb : add byte ptr [rsp + rax*2 - 0x75], ah ; insd dword ptr [rdi], dx ; add al, ch ; retf 0x45
0x000000000005eb4a : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001192a7 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000011c912 : add byte ptr ds:[rax - 0x77], cl ; je 0x11c928 ; pop rbx ; ret
0x000000000016a1d3 : add byte ptr es:[rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000046f6e : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013d5e3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f1951 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000c3695 : add byte ptr ss:[rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x00000000000fac5f : add ch, al ; retf
0x0000000000187e9e : add ch, al ; std ; je 0x187f0b ; and ch, al ; std ; xlatb ; ret
0x0000000000187f8c : add ch, al ; std ; je 0x187ff9 ; and ch, al ; std ; xlatb ; ret
0x0000000000187f32 : add ch, al ; std ; xlatb ; ret
0x0000000000187f3e : add ch, al ; std ; xlatb ; ret 0xc085
0x000000000018bb1f : add ch, al ; std ; xlatb ; retf 0xc985
0x0000000000116d91 : add ch, bl ; retf
0x00000000000d7aee : add ch, byte ptr [rcx] ; retf 0xc8d
0x000000000008af5a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000473a6 : add ch, byte ptr [rsi] ; sbb al, byte ptr [rax] ; ret
0x0000000000046dfa : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000d459f : add cl, al ; retf 0x8104
0x00000000000d42ff : add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000317ff : add cl, byte ptr [r13 + 0x39] ; ret 0x820f
0x000000000011fe76 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000b6bcc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000ed492 : add cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000ee683 : add cl, byte ptr [r9 - 0x7d] ; ret
0x00000000000dc234 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000dc3dc : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000002f644 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000013ec3a : add cl, byte ptr [rax + 0x39] ; ret 0x1072
0x00000000000a79fd : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000090fb7 : add cl, byte ptr [rax + 0x39] ; ret 0x870f
0x000000000013ec48 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x000000000011fe77 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000002fe1f : add cl, byte ptr [rax + 0x39] ; retf
0x000000000013ec14 : add cl, byte ptr [rax + 0x39] ; retf 0x3672
0x000000000004e9fe : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000018f108 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000151fe0 : add cl, byte ptr [rax + 0xf] ; ret 0x8944
0x0000000000151dba : add cl, byte ptr [rax + 0xf] ; retf 0xc689
0x000000000008c63d : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000008c47d : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000d37d1 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 1], cl ; ret 0x1b8
0x00000000000f42e1 : add cl, byte ptr [rax + 1] ; retf 0x1f0f
0x000000000009b89e : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x00000000000b6bcd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000b6b39 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000088d0f : add cl, byte ptr [rax - 0x77] ; ret
0x000000000012b9e5 : add cl, byte ptr [rax - 0x77] ; ret 0x53ff
0x0000000000107484 : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000012d1c2 : add cl, byte ptr [rax - 0x77] ; ret 0xff41
0x00000000000a7394 : add cl, byte ptr [rax - 0x77] ; retf
0x000000000002b192 : add cl, byte ptr [rax - 0x77] ; retf 0x2948
0x000000000008390f : add cl, byte ptr [rax - 0x77] ; retf 0x8948
0x00000000000da085 : add cl, byte ptr [rax - 0x77] ; retf 0xb948
0x00000000000da055 : add cl, byte ptr [rax - 0x77] ; retf 0xc148
0x00000000000d2ab3 : add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x000000000006dc61 : add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000077293 : add cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000002b8c3 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000000b9b50 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000001197a9 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000002ab24 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x00000000000a4723 : add cl, byte ptr [rax - 0x7d] ; ret 0x6610
0x00000000000e9a37 : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x0000000000083dc8 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x00000000000b9bb3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000003920d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000015a820 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000031800 : add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x00000000000eed6e : add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x0000000000171192 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000116674 : add cl, byte ptr [rbx + 0x750c2444] ; ret 0xd8f7
0x000000000007b1b3 : add cl, byte ptr [rbx - 0x4ef7b] ; inc dword ptr [rcx] ; retf
0x0000000000107b13 : add cl, byte ptr [rbx] ; add al, ch ; add eax, 0x890003f0 ; ret
0x0000000000081a1c : add cl, byte ptr [rcx + 0x29] ; retf
0x00000000000f0859 : add cl, byte ptr [rcx + 0x39] ; ret 0x3176
0x00000000000d7c0b : add cl, byte ptr [rcx + rcx*4 - 0x40] ; add rsp, 8 ; ret
0x00000000000a75b2 : add cl, byte ptr [rcx - 0x76b774fc] ; ror dword ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000089c9c : add cl, byte ptr [rcx - 0x77] ; ret
0x00000000001301f4 : add cl, byte ptr [rcx - 0x77] ; retf 0x440f
0x00000000000ee684 : add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000e8a70 : add cl, byte ptr [rcx] ; ret 0xf089
0x000000000004b2dc : add cl, byte ptr [rdi] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000370f8 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000fb34d : add cl, byte ptr [rdi] ; test ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000012de4a : add cl, byte ptr [rdi] ; test bh, bl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000013e41f : add cl, byte ptr [rdi] ; test dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x000000000010cdca : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000084579 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00000000000a7393 : add cl, byte ptr cs:[rax - 0x77] ; retf
0x00000000000a7de7 : add cl, byte ptr ss:[rax - 0x77] ; retf
0x0000000000034a18 : add cl, ch ; mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x0000000000031598 : add cl, ch ; ret
0x0000000000061a07 : add cl, ch ; ret 0xffe2
0x000000000007ed8b : add cl, ch ; ret 0xffea
0x0000000000056e8d : add cl, ch ; ret 0xfff3
0x000000000005fe34 : add cl, ch ; ret 0xfff6
0x000000000010c8d7 : add cl, ch ; ret 0xfff9
0x0000000000197eb5 : add cl, ch ; ret 0xfffb
0x00000000000e38b9 : add cl, ch ; ret 0xfffd
0x00000000000879d4 : add cl, ch ; ret 0xfffe
0x0000000000031e77 : add cl, ch ; retf
0x00000000000618ff : add cl, ch ; retf 0xffe3
0x00000000000cfc4d : add cl, ch ; retf 0xfff1
0x00000000000fc423 : add cl, ch ; retf 0xfff6
0x00000000000ec5a4 : add cl, ch ; retf 0xfff7
0x0000000000066a30 : add cl, ch ; retf 0xfffb
0x000000000008c7f8 : add cl, ch ; retf 0xfffc
0x000000000002ee5b : add cl, ch ; retf 0xfffd
0x000000000004918f : add cl, ch ; retf 0xfffe
0x00000000000ab6a0 : add cl, ch ; sti ; retf 0xffff
0x000000000005a9b7 : add cl, cl ; ret
0x00000000000abc27 : add dh, al ; add byte ptr [rax], al ; ret
0x00000000000ab7f7 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x000000000012a537 : add dh, al ; jmp qword ptr [rax]
0x0000000000140bd9 : add dh, al ; ret
0x00000000000781e4 : add dh, al ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000007ee91 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000171343 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000121fa5 : add dh, byte ptr [rax + rcx - 0x77] ; ret 0xeac1
0x00000000000be13b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000011806b : add dh, byte ptr [rbp + rdi*4 - 0x77] ; retf 0xf41
0x000000000007849a : add dh, byte ptr [rdi + rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000009843c : add dh, byte ptr [rsi + 1] ; ret
0x00000000000d736a : add dh, byte ptr [rsi + 3] ; ret
0x000000000013bb3a : add dh, byte ptr [rsi] ; or eax, dword ptr [rax] ; syscall
0x000000000009b65e : add dh, byte ptr [rsp - 0x77] ; ret 0xb48b
0x000000000005f11f : add dh, dh ; ret
0x000000000012beef : add dh, dh ; ret 0x4804
0x000000000008ce50 : add dh, dh ; ret 0x7402
0x00000000000889bf : add dh, dh ; ret 0x7420
0x00000000001940f7 : add dh, dh ; ret 0x7501
0x0000000000194104 : add dh, dh ; ret 0x7502
0x0000000000194111 : add dh, dh ; ret 0x7504
0x000000000014d550 : add dh, dh ; ret 0x7507
0x00000000001940c9 : add dh, dh ; ret 0x7510
0x00000000001940d6 : add dh, dh ; ret 0x7520
0x00000000000f62c4 : add dh, dh ; ret 0x7540
0x000000000009b197 : add dh, dh ; ret 0xf01
0x000000000010fe58 : add dh, dh ; ret 0xf02
0x0000000000104677 : add dh, dh ; ret 0xf04
0x00000000000b53d2 : add dh, dh ; ret 0xf20
0x000000000007debf : add dh, dh ; ret 0xf40
0x0000000000062657 : add dh, dh ; ret 0xf50
0x000000000010fe4f : add dh, dh ; ret 0xf80
0x00000000000d999c : add dh, dh ; rol dword ptr [rdi + rcx], 0x84 ; ret
0x00000000000e9827 : add dh, dh ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000000d1277 : add dil, r15b ; ret
0x000000000003b864 : add dl, byte ptr [rbx - 0x77] ; retf
0x0000000000116c62 : add dl, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x000000000012972a : add dl, byte ptr [rsp + rcx] ; syscall
0x00000000000454af : add dl, dh ; addps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000045417 : add dl, dh ; mulps xmm0, xmm1 ; ret
0x00000000000a79c6 : add dword ptr [r8 + 0x39], ecx ; ret 0x860f
0x000000000002fd07 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000010eeef : add dword ptr [r8 + 1], ecx ; ror dword ptr [rax + 1], 1 ; ret 0x8948
0x000000000005e4b3 : add dword ptr [r8 + r8*8 - 0x7cb6f78c], eax ; ret
0x000000000010f17e : add dword ptr [r8 - 0x77], ecx ; ret
0x00000000001589cc : add dword ptr [r8 - 0x77], r9d ; ret 0x4c88
0x000000000003b244 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000066f53 : add dword ptr [r8 - 0x7d], r9d ; ret 0xbe02
0x00000000000fca33 : add dword ptr [r8 - 0x7f], r9d ; retf 0
0x000000000018ceb6 : add dword ptr [r8], r8d ; vzeroupper ; ret
0x00000000000ee4c9 : add dword ptr [r9 - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000ed36f : add dword ptr [r9 - 0x7d], eax ; call 0xffffffffc3921b81
0x00000000000ef38d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000017dfa1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000614e2 : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000000614a7 : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x00000000000f3f47 : add dword ptr [rax + 0x29], ecx ; ret 0x1f0f
0x00000000000e5de7 : add dword ptr [rax + 0x38], edi ; syscall
0x000000000002fd54 : add dword ptr [rax + 0x39480751], ecx ; ret
0x000000000002f99e : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000113ae3 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000004c74b : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x00000000000a79c7 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000019c970 : add dword ptr [rax + 0x39], ecx ; ret 0x9974
0x0000000000113ad5 : add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x000000000002beb3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000ece2f : add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000015d52f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x000000000005873b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000cb4a8 : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000cc533 : add dword ptr [rax + 0x39], ecx ; retf 0x1774
0x00000000000bf968 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x00000000000cbb1b : add dword ptr [rax + 0x39], ecx ; retf 0x1f74
0x00000000000a9533 : add dword ptr [rax + 0x39], ecx ; retf 0x2674
0x00000000000a8873 : add dword ptr [rax + 0x39], ecx ; retf 0x2c74
0x00000000000ee863 : add dword ptr [rax + 0x39], ecx ; retf 0x3274
0x00000000000a8823 : add dword ptr [rax + 0x39], ecx ; retf 0x840f
0x00000000000cbad3 : add dword ptr [rax + 0x39], ecx ; retf 0xc73
0x00000000000e630d : add dword ptr [rax + 0x39], ecx ; retf 0xed75
0x000000000005898b : add dword ptr [rax + 0x39], ecx ; retf 0xef75
0x000000000019c933 : add dword ptr [rax + 0x39], ecx ; sal dword ptr [rdi + rcx*4 + 0x48], 0x89 ; ret 0xc148
0x000000000013077e : add dword ptr [rax + 0x3b], ecx ; pop rbp ; mov eax, 0x89483e74 ; ret
0x00000000000ff017 : add dword ptr [rax + 0x48000000], 0x63 ; ret 0x8948
0x00000000000f0edb : add dword ptr [rax + 0x63], ecx ; ret
0x00000000000d9bd4 : add dword ptr [rax + 0x63], ecx ; ret 0xd789
0x000000000009f3e3 : add dword ptr [rax + 0xf], ecx ; ret 0xfc3
0x0000000000067f33 : add dword ptr [rax + 1], ecx ; ret
0x000000000015c8fb : add dword ptr [rax + 1], ecx ; retf
0x0000000000026fda : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000004434f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000010eef0 : add dword ptr [rax + 1], ecx ; ror dword ptr [rax + 1], 1 ; ret 0x8948
0x00000000000ef35f : add dword ptr [rax + 1], edi ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000ef310 : add dword ptr [rax + 1], edi ; ret
0x000000000011d833 : add dword ptr [rax + 9], ecx ; retf 0x8948
0x00000000000eb100 : add dword ptr [rax + rax*8 - 0x3fce538b], eax ; ret
0x000000000005e4b4 : add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x00000000000ec997 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000a8832 : add dword ptr [rax + rdi + 0x5c], eax ; syscall
0x000000000007a79d : add dword ptr [rax - 0x50743], eax ; jmp qword ptr [rax]
0x000000000011fe73 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000126bb1 : add dword ptr [rax - 0x75], ecx ; push rsp ; retf 0x8b40
0x000000000008dfed : add dword ptr [rax - 0x75], ecx ; sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x000000000010d216 : add dword ptr [rax - 0x75], ecx ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b6ba6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000000980b5 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x152213 ; ret
0x0000000000179c02 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000004cce7 : add dword ptr [rax - 0x77], ecx ; push rbp ; add bh, dh ; ret 0
0x00000000000910e1 : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000009b5da : add dword ptr [rax - 0x77], ecx ; push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a87e1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000005ca41 : add dword ptr [rax - 0x77], ecx ; ret 0x44f6
0x000000000009f3b1 : add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x00000000001589cd : add dword ptr [rax - 0x77], ecx ; ret 0x4c88
0x0000000000125096 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000000929b6 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000e9f97 : add dword ptr [rax - 0x77], ecx ; ret 0xb60f
0x0000000000108678 : add dword ptr [rax - 0x77], ecx ; ret 0xb70f
0x00000000000fd088 : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000000e94f4 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x00000000000775b1 : add dword ptr [rax - 0x77], ecx ; retf 0x3948
0x00000000000e39a0 : add dword ptr [rax - 0x77], ecx ; retf 0x44f6
0x00000000000ffd43 : add dword ptr [rax - 0x77], ecx ; retf 0xc148
0x0000000000164efe : add dword ptr [rax - 0x77], ecx ; retf 0xd4eb
0x00000000000e9e5d : add dword ptr [rax - 0x77], ecx ; retf 0xd5eb
0x000000000013f533 : add dword ptr [rax - 0x78], eax ; ja 0x13f53e ; ret
0x00000000000a20eb : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000003be8f : add dword ptr [rax - 0x7cb700b8], ecx ; ret 0x4901
0x000000000017fbba : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000028f58 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f39b2 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000144112 : add dword ptr [rax - 0x7d], ecx ; ret 0x3928
0x0000000000129d42 : add dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x00000000000488a5 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x0000000000047ca4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000f17fb : add dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x000000000002d34c : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000013eb40 : add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x000000000013e0fb : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d6fb3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c08
0x000000000003b293 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000063fa4 : add dword ptr [rax - 0x7d], ecx ; ret 0x8404
0x0000000000029d36 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000066f54 : add dword ptr [rax - 0x7d], ecx ; ret 0xbe02
0x000000000002a40c : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000055671 : add dword ptr [rax - 0x7f], ecx ; ret
0x00000000000fca34 : add dword ptr [rax - 0x7f], ecx ; retf 0
0x0000000000077f22 : add dword ptr [rax - 0x8ff43], eax ; jmp qword ptr [rax]
0x000000000007eb8a : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000003baa8 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000049e2f : add dword ptr [rax], 0x894c0000 ; out 0xb8, eax ; retf 0
0x000000000009d153 : add dword ptr [rax], 0xd8890000 ; syscall
0x000000000012515c : add dword ptr [rax], 1 ; ret
0x00000000000d91a7 : add dword ptr [rax], eax ; add al, ch ; int1 ; ret
0x0000000000092145 : add dword ptr [rax], eax ; add al, ch ; ret
0x000000000013f0cb : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000013f0c2 : add dword ptr [rax], eax ; add bl, al ; xor eax, eax ; ret
0x00000000000c3c56 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000097093 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000193fa5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000013e855 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000db612 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000001052cd : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b4d
0x00000000000db581 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0xd789
0x00000000000f8a9f : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000e7ae3 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x64e9
0x00000000000da03d : add dword ptr [rax], eax ; add byte ptr [rax - 0x41], cl ; ret
0x000000000014b223 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000163301 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000014685a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a5762 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000163e89 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000199b6e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000bedc2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000002f70b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x1f0f
0x0000000000115fbc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x000000000004c3c2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x0000000000029886 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181ffd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e6218 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000009bcb4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000000a2f7e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001899af : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181f51 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001635e2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000028351 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000118d74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011cc9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x00000000000470ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001960b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x1960c8 ; neg eax ; ret
0x00000000000d2261 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xd2271 ; neg eax ; ret
0x0000000000192e77 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x192e88 ; neg eax ; ret
0x000000000015974a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x159718
0x0000000000079e00 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000ef361 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x0000000000150354 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000a08f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000008fe02 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000005ac46 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000014b586 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000007b047 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r10, rdx ; jmp rax
0x00000000000816b4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x0000000000084343 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000083d4d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000001539d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x00000000001530b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000001502cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000063ffa : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a635 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000a1cf4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000863cb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000010f7e1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005871f : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000111321 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e80c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edi, edi ; js 0xe80d8 ; ret
0x00000000000d99e2 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x29], al ; shr dword ptr [rcx], cl ; ret 0x8945
0x0000000000065446 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000317fa : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x41], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x00000000000f08d5 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x52], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8349
0x00000000000aef08 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000002b807 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ed169 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; retf
0x000000000004ed5e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x29482404], cl ; retf
0x0000000000141033 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001181a6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000115841 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x64e83c7d], cl ; ret 0xffff
0x0000000000104be3 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x63], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000db5ff : add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], al ; ret 0x8944
0x000000000002f689 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000105625 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63482c53], cl ; ret 0x2de9
0x00000000000ff99c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x00000000000dcebc : add dword ptr [rax], eax ; add byte ptr [rcx + 1], al ; ret 0x8944
0x00000000000a04ae : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r12 ; call rax
0x000000000014bff6 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rbx]
0x0000000000163d83 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000046bfc : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000313e0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000011dc78 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000011daf8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x11db06 ; call rbx
0x000000000011db28 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x11db36 ; call rbx
0x0000000000083c36 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x00000000000eb993 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000f68e0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3941
0x0000000000116b29 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000198060 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000014dba3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0xb43
0x0000000000044b37 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x0000000000071b60 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000071b49 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000000000a779f : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x0000000000105441 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1874
0x0000000000138dea : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000110886 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x0000000000093518 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x0000000000039fb4 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0xd289
0x000000000013f08f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x66c3
0x000000000013f0b9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xb8c3
0x00000000001224e9 : add dword ptr [rax], eax ; add byte ptr [rdx + 8], bh ; syscall
0x0000000000187f30 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x0000000000187f3c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x00000000000d42fd : add dword ptr [rax], eax ; add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000f8073 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000001940f5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000194102 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000019410f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001940c7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001940d4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001940e1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000013a768 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000a2845 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000a22d2 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000011fdfe : add dword ptr [rax], eax ; jne 0x11fe46 ; mov rdx, rax ; jmp 0x11fe1f
0x0000000000057426 : add dword ptr [rax], eax ; jne 0x57425 ; pop rbx ; ret
0x000000000004b424 : add dword ptr [rax], eax ; ret
0x000000000018ceb7 : add dword ptr [rax], eax ; vzeroupper ; ret
0x00000000000ab902 : add dword ptr [rax], edi ; ret 0xf41
0x00000000000ab8b2 : add dword ptr [rax], edi ; retf 0xe975
0x0000000000057f7a : add dword ptr [rax], esi ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000002b806 : add dword ptr [rax], r8d ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000116b28 : add dword ptr [rax], r8d ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000000a28e1 : add dword ptr [rax], r8d ; cmovne rax, rdx ; ret
0x00000000000a9922 : add dword ptr [rbp + 0x19], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000000a77d6 : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4105
0x00000000000a8fd6 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8806
0x000000000012aafe : add dword ptr [rbp + 0x38], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c6f7 : add dword ptr [rbp + 0x440f45c9], eax ; ror dword ptr [rax - 0x7d], 1 ; ret
0x000000000012c7a2 : add dword ptr [rbp + 0x440f45f6], eax ; retf
0x0000000000110e9e : add dword ptr [rbp + 0x47], esi ; mov eax, 0x10c ; syscall
0x00000000000d9dff : add dword ptr [rbp + rcx*4 + 0x14], eax ; ret
0x00000000000c0710 : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x20 ; call rbx
0x00000000000c020d : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x28 ; call rbx
0x0000000000159012 : add dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000a45d3 : add dword ptr [rbp - 0x16], esi ; ret
0x000000000005871b : add dword ptr [rbp - 0x1e], esi ; mov eax, 1 ; ret
0x00000000000a1a9a : add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x00000000001192ac : add dword ptr [rbp - 0x2f], esi ; ret
0x000000000009bf12 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x00000000000cdaab : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000013f804 : add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0x8041
0x000000000013f8a3 : add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0xc639
0x0000000000142359 : add dword ptr [rbp - 0x77], eax ; ret 0x394c
0x0000000000149443 : add dword ptr [rbp - 0x7e], esi ; ret
0x000000000009a6e0 : add dword ptr [rbx + 0x14fbc905], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000171202 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015abb0 : add dword ptr [rbx + 0x28], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9d56 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000a65d4 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x14c
0x00000000000f40ae : add dword ptr [rbx + 0x294803e1], eax ; retf 0x14c
0x0000000000049dea : add dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f95a9 : add dword ptr [rbx + 0x48b4818], ecx ; and al, 0x39 ; ret
0x00000000000e100e : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000f0ed8 : add dword ptr [rbx + 0x634801ea], eax ; ret
0x000000000011d785 : add dword ptr [rbx + 0x94901e0], eax ; ret
0x0000000000080e57 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000080e28 : add dword ptr [rbx - 0x50743], eax ; call qword ptr [rax]
0x00000000000bf630 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0x518d
0x000000000007a771 : add dword ptr [rbx - 0x51743], eax ; call qword ptr [rax]
0x000000000006d81c : add dword ptr [rbx - 0x64f7b], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000004149e : add dword ptr [rbx - 0x7bf0fd08], eax ; ret 0x1d
0x0000000000043976 : add dword ptr [rbx - 0x7cb60030], eax ; ret
0x00000000000e9d93 : add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xe901
0x00000000000ec59e : add dword ptr [rcx + 0x101c4715], ecx ; add cl, ch ; retf 0xfff7
0x0000000000098151 : add dword ptr [rcx + 0x21], ecx ; ret 0x8d4d
0x00000000000f67bc : add dword ptr [rcx + 0x21], ecx ; retf 0x854d
0x00000000000a3d56 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000a6443 : add dword ptr [rcx + 0x39], ecx ; ret 0x2774
0x00000000000a63c3 : add dword ptr [rcx + 0x39], ecx ; ret 0x2f74
0x000000000012477d : add dword ptr [rcx + 0x39], ecx ; ret 0x4f73
0x00000000000a6383 : add dword ptr [rcx + 0x39], ecx ; ret 0x840f
0x00000000000f0a81 : add dword ptr [rcx + 0x39], ecx ; ret 0xe877
0x00000000000ab56a : add dword ptr [rcx + 0x39], ecx ; sal dword ptr [rbp - 0x11], 0xe9 ; retf 0xffd5
0x000000000010fea4 : add dword ptr [rcx + 0x63], ecx ; add al, 0x84 ; add rax, r12 ; jmp rax
0x00000000000a6025 : add dword ptr [rcx + 0x63], ecx ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000140dc7 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000001085fb : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret 0xb70f
0x000000000011027e : add dword ptr [rcx + 0xf], ecx ; ret
0x000000000011d788 : add dword ptr [rcx + 9], ecx ; ret
0x00000000000e22a6 : add dword ptr [rcx + rax*2 - 0x77], esp ; sbb dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; ret
0x0000000000094fe4 : add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x0000000000161537 : add dword ptr [rcx + rcx*4 - 0x20], eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000128a8b : add dword ptr [rcx + rcx*4 - 0x40], eax ; add rsp, 8 ; ret
0x000000000013adcf : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x0000000000088722 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064148 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000125dd2 : add dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x000000000013f998 : add dword ptr [rcx + rcx*4 - 0x40], ecx ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000015ffe2 : add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x000000000013105b : add dword ptr [rcx + rcx*8 - 0x76b7578b], eax ; clc ; ret
0x00000000000aba9b : add dword ptr [rcx + rcx*8 - 0xec6f78c], eax ; jne 0xaba99 ; ret
0x000000000013e3fa : add dword ptr [rcx - 0x39], ecx ; ret 0xffff
0x000000000004acd8 : add dword ptr [rcx - 0x42], edi ; xor eax, eax ; ret
0x00000000000ee4ca : add dword ptr [rcx - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000b6be6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000002f885 : add dword ptr [rcx - 0x77], eax ; ret 0x8341
0x000000000007767d : add dword ptr [rcx - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000005a1a0 : add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000196d10 : add dword ptr [rcx - 0x77], ecx ; retf
0x0000000000124753 : add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x000000000004c9c0 : add dword ptr [rcx - 0x77], ecx ; xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000056458 : add dword ptr [rcx - 0x78], eax ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000a8a94 : add dword ptr [rcx - 0x7c2de63f], ecx ; ret 0x8305
0x00000000000ed370 : add dword ptr [rcx - 0x7d], eax ; call 0xffffffffc3921b80
0x00000000000a6a62 : add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x000000000002d58b : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000013f81c : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000012b8e6 : add dword ptr [rcx - 0x7d], ecx ; ret 0xe901
0x00000000000ee4ce : add dword ptr [rcx - 0x7f], ecx ; ret
0x0000000000100029 : add dword ptr [rcx - 0x80], eax ; lcall [rdi + 0xf] ; xchg eax, esp ; ret 0xd009
0x0000000000196583 : add dword ptr [rcx - 9], eax ; ret
0x00000000000d272b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000013f0c1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000000000110fe5 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000007e425 : add dword ptr [rcx], eax ; ret
0x00000000000f398b : add dword ptr [rcx], edi ; ret
0x00000000000f1a63 : add dword ptr [rcx], edi ; ret 0xc775
0x00000000000f1835 : add dword ptr [rcx], edi ; ret 0xee7f
0x000000000004a2e5 : add dword ptr [rcx], esi ; test byte ptr [rcx + rcx*4 - 0x31], 0x41 ; call rax
0x00000000000bf216 : add dword ptr [rdi + 0x15], esi ; jb 0xbf224 ; mov byte ptr [rdi], cl ; ret
0x000000000015ab14 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000015ab24 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000110760 : add dword ptr [rdi + 0x2d], esi ; mov eax, 4 ; syscall
0x0000000000110820 : add dword ptr [rdi + 0x2d], esi ; mov eax, 6 ; syscall
0x00000000001107bf : add dword ptr [rdi + 0x2e], esi ; mov eax, 5 ; syscall
0x0000000000110c65 : add dword ptr [rdi + 0x30], esi ; mov eax, 0x106 ; syscall
0x000000000011ae42 : add dword ptr [rdi + 1], edi ; ret
0x00000000000ef733 : add dword ptr [rdi + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014480e : add dword ptr [rdi + rbp - 9], esi ; ret 0
0x00000000000f7648 : add dword ptr [rdi + rsi*2 - 0x75], esi ; pop rax ; or bh, dh ; ret
0x00000000000956ee : add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x00000000000a5404 : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b576 : add dword ptr [rdi - 2], -1 ; dec dword ptr [rax + 0x39] ; retf 0x9775
0x000000000002c6b5 : add dword ptr [rdi], 1 ; jmp 0x2c689
0x0000000000047244 : add dword ptr [rdi], ecx ; adc dword ptr [rdi], eax ; ret
0x00000000000a36f3 : add dword ptr [rdi], ecx ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000f0b12 : add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x00000000000371d9 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000ab9e3 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0xab9e9 ; ret
0x000000000009c9fa : add dword ptr [rdi], ecx ; ret 0x8348
0x00000000001519d9 : add dword ptr [rdi], ecx ; retf 0x5489
0x00000000000bf633 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x00000000000bf647 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xcfe9
0x00000000000bf639 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000011aee1 : add dword ptr [rdi], ecx ; test byte ptr [rdx], cl ; add al, byte ptr [rax] ; add bh, dh ; ret
0x000000000017ba7e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000010cc32 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000004e4c1 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc220
0x0000000000059817 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8948
0x000000000013f569 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000054413 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2040
0x0000000000056b17 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x0000000000107242 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000000bf91f : add dword ptr [rdx + 0x2b], 0xe2748104 ; ret
0x00000000000b6ba4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000105d33 : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x0000000000193700 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000066130 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000193031 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000124e8f : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000000e8903 : add dword ptr [rdx - 0x75], ecx ; cmp al, 0xf3 ; call 0x25357
0x0000000000161ac0 : add dword ptr [rdx], eax ; add byte ptr [rax], al ; add bl, ch ; retf 0x14e8
0x000000000013f602 : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000000ce169 : add dword ptr [rdx], ebp ; mov r9, qword ptr [rsp + 0x10] ; call r14
0x000000000013f601 : add dword ptr [rdx], r8d ; pop rbx ; ret
0x0000000000096a46 : add dword ptr [rip + 0x156a57], 1 ; pop rbx ; ret
0x00000000000b6b35 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000144a2f : add dword ptr [rsi + rbp - 9], esi ; ret 0
0x00000000000b6bb7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a22d1 : add dword ptr cs:[rax], eax ; cmovne rax, rdx ; ret
0x000000000018b457 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a2884 : add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x000000000013a767 : add dword ptr gs:[rax], eax ; add dh, dh ; ret 0xf04
0x000000000013e7aa : add eax, 0x10 ; ret
0x00000000000bfef2 : add eax, 0x11389 ; cmove rax, rdx ; ret
0x00000000000d3312 : add eax, 0x11aa49 ; add rsp, 8 ; ret
0x00000000000bfa32 : add eax, 0x11b79 ; cmove rax, rdx ; ret
0x00000000000a29f2 : add eax, 0x12099 ; cmove rax, rdx ; ret
0x00000000000a2842 : add eax, 0x12549 ; cmove rax, rdx ; ret
0x00000000000bfbe2 : add eax, 0x12699 ; cmove rax, rdx ; ret
0x00000000000a2882 : add eax, 0x126a9 ; cmove rax, rdx ; ret
0x00000000000bfcd2 : add eax, 0x12879 ; cmove rax, rdx ; ret
0x00000000000bfa58 : add eax, 0x12933 ; cmovne rax, rdx ; ret
0x00000000000bf9f2 : add eax, 0x129c9 ; cmove rax, rdx ; ret
0x00000000000bfb42 : add eax, 0x12f89 ; cmove rax, rdx ; ret
0x00000000000a19b3 : add eax, 0x148598 ; call qword ptr [rax]
0x00000000000a17d2 : add eax, 0x148779 ; call qword ptr [rax]
0x00000000000a1702 : add eax, 0x148849 ; call qword ptr [rax]
0x00000000000a2a85 : add eax, 0x14b17e ; add rsp, 8 ; ret
0x00000000000a2a47 : add eax, 0x14b1bc ; ret
0x000000000009d2aa : add eax, 0x14cc31 ; mov qword ptr [rax], rdi ; ret
0x000000000009aaba : add eax, 0x14f301 ; xor edi, edi ; call qword ptr [rax]
0x000000000009aa74 : add eax, 0x14f347 ; call qword ptr [rax]
0x000000000009d23f : add eax, 0x150908 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000993e0 : add eax, 0x150afb ; mov qword ptr [rax], rdx ; ret
0x0000000000098473 : add eax, 0x151e34 ; ret
0x000000000009844d : add eax, 0x151e3e ; ret
0x0000000000098424 : add eax, 0x151e5f ; ret
0x0000000000098404 : add eax, 0x151e77 ; ret
0x00000000000980ea : add eax, 0x1521f9 ; ret
0x00000000000980d2 : add eax, 0x152209 ; ret
0x000000000009807a : add eax, 0x152219 ; ret
0x000000000009806a : add eax, 0x152231 ; ret
0x00000000000969d6 : add eax, 0x154bc5 ; ret
0x0000000000098489 : add eax, 0x1556d6 ; ret
0x0000000000096ae1 : add eax, 0x1569be ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000097a78 : add eax, 0x15877f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d737e : add eax, 0x16d ; ret
0x00000000000454a0 : add eax, 0x179b6b ; ret
0x0000000000045805 : add eax, 0x179ea6 ; ret
0x00000000000457ba : add eax, 0x179ee9 ; ret
0x0000000000045795 : add eax, 0x179f12 ; ret
0x0000000000035922 : add eax, 0x180aac ; ret
0x0000000000045f76 : add eax, 0x18c48348 ; ret
0x00000000000272d6 : add eax, 0x18ec2c ; ret
0x00000000000272e6 : add eax, 0x190a9f ; ret
0x0000000000055c5a : add eax, 0x1976e1 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000047404 : add eax, 0x1a2d9f ; mov eax, edx ; ret
0x00000000000473b5 : add eax, 0x1a2dee ; ret
0x00000000000473a5 : add eax, 0x1a2e02 ; ret
0x000000000004b296 : add eax, 0x1a4d8b ; add rsp, 8 ; ret
0x00000000000a34eb : add eax, 0x1b0d0 ; cmove rax, rdx ; ret
0x0000000000036d42 : add eax, 0x1b30a1 ; mov qword ptr [rax], rdx ; ret
0x00000000000a378b : add eax, 0x1b940 ; cmovne rax, rdx ; ret
0x0000000000032af6 : add eax, 0x1b9b4d ; ret
0x00000000000a2cd8 : add eax, 0x1bee3 ; cmovne rax, rdx ; ret
0x00000000000a2a18 : add eax, 0x1c0f3 ; cmovne rax, rdx ; ret
0x000000000002a5d9 : add eax, 0x1c2056 ; test eax, eax ; je 0x2a5f1 ; ret
0x00000000000a2428 : add eax, 0x1c633 ; cmovne rax, rdx ; ret
0x0000000000029136 : add eax, 0x1c6d7d ; ret
0x0000000000029126 : add eax, 0x1c6d9d ; ret
0x0000000000026a91 : add eax, 0x1c95b2 ; ret
0x0000000000187c0a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000003757a : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000004a754 : add eax, 0x28c48348 ; ret
0x000000000017bb04 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x000000000019b8cd : add eax, 0x358d4800 ; retf 0xffff
0x00000000000abdb2 : add eax, 0x3819 ; cmove rax, rdx ; ret
0x0000000000139a3d : add eax, 0x38c48348 ; ret
0x000000000002daf9 : add eax, 0x39480000 ; ret
0x00000000000a9543 : add eax, 0x3948ea74 ; retf 0x1474
0x00000000000a6452 : add eax, 0x3949eb74 ; ret 0x1674
0x0000000000187c2a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000130300 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x0000000000130e53 : add eax, 0x440f4800 ; ret 0x66c3
0x0000000000130c09 : add eax, 0x440f4800 ; ret 0xf6c3
0x000000000015fe88 : add eax, 0x48010009 ; add esp, 8 ; ret
0x000000000017e038 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000179ce8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000ba0f6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000158ea7 : add eax, 0x48c48348 ; ret
0x000000000019bd79 : add eax, 0x50bde ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019c0ae : add eax, 0x51d39 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019c1e7 : add eax, 0x52980 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e0b9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000179d29 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000130e4c : add eax, 0x58d4800 ; retf
0x000000000019bf84 : add eax, 0x5b050f00 ; ret
0x0000000000137c40 : add eax, 0x5bf08948 ; ret
0x000000000010a288 : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000019c2b4 : add eax, 0x5d050f00 ; ret
0x0000000000157151 : add eax, 0x5d5b0000 ; pop r12 ; pop r13 ; ret
0x0000000000130e50 : add eax, 0x5e1cb ; cmove rax, rdx ; ret
0x0000000000188063 : add eax, 0x60 ; add rax, rdi ; ret
0x0000000000187c4a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000004dc0b : add eax, 0x63485374 ; retf
0x00000000000cd1b6 : add eax, 0x74db8500 ; sbb al, 0x39 ; ret
0x00000000000cd0c1 : add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x0000000000156bf6 : add eax, 0x78c48348 ; ret
0x00000000000ba91e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x0000000000072720 : add eax, 0x83480000 ; ret
0x0000000000181bed : add eax, 0x83480000 ; ret 0x4910
0x0000000000184741 : add eax, 0x83480000 ; ret 0xe910
0x0000000000181b41 : add eax, 0x83480000 ; ret 0xeb10
0x000000000017e03b : add eax, 0x8428d48 ; ret
0x000000000006ac9a : add eax, 0x89000035 ; retf 0xc183
0x0000000000107b17 : add eax, 0x890003f0 ; ret
0x00000000000463bc : add eax, 0x8944c689 ; ret 0xeab8
0x00000000000d7645 : add eax, 0x89480000 ; ret
0x00000000000ac044 : add eax, 0x89480000 ; ret 0xb1e8
0x00000000000cc656 : add eax, 0x89490000 ; ret
0x00000000000ee722 : add eax, 0x8949eb74 ; retf 0x3949
0x000000000015f744 : add eax, 0x894c0000 ; loopne 0x15f794 ; pop rsp ; ret
0x00000000000aea88 : add eax, 0x894d0000 ; retf
0x000000000015fe72 : add eax, 0x8b619 ; call qword ptr [rax]
0x000000000015f865 : add eax, 0x8bc26 ; call qword ptr [rax]
0x0000000000162f42 : add eax, 0x8cf41 ; call qword ptr [rax]
0x00000000000d37c7 : add eax, 0x8f5cba49 ; ret 0x28f5
0x0000000000034a1b : add eax, 0x90660000 ; ret
0x0000000000123f24 : add eax, 0x90797 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000156481 : add eax, 0x99696 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bc002 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00000000000a4e62 : add eax, 0xa559 ; cmove rax, rdx ; ret
0x000000000014a22a : add eax, 0xa564d ; add rsp, 8 ; ret
0x000000000014a215 : add eax, 0xa5662 ; test eax, eax ; je 0x14a229 ; ret
0x0000000000144476 : add eax, 0xa5b75 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000149634 : add eax, 0xa61c7 ; ret
0x0000000000149608 : add eax, 0xa61f3 ; add rsp, 8 ; ret
0x0000000000143f39 : add eax, 0xab586 ; test eax, eax ; je 0x143f51 ; ret
0x000000000013b8f4 : add eax, 0xb4c07 ; add rsp, 8 ; ret
0x00000000000a35e2 : add eax, 0xbaa9 ; cmove rax, rdx ; ret
0x000000000013038d : add eax, 0xbe7e6 ; pop rbp ; ret
0x0000000000191a7a : add eax, 0xc0310000 ; ret
0x000000000017e0bd : add eax, 0xc428d48 ; ret
0x0000000000125a46 : add eax, 0xc4415 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000bb77d : add eax, 0xc478d48 ; ret
0x0000000000124e21 : add eax, 0xc5536 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124df8 : add eax, 0xc555f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124dc7 : add eax, 0xc5590 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000124da1 : add eax, 0xc55b6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011c3f4 : add eax, 0xd21c7 ; add rsp, 0x18 ; ret
0x000000000011c3a4 : add eax, 0xd2257 ; pop r12 ; pop r13 ; ret
0x000000000011beac : add eax, 0xd26bf ; add rsp, 8 ; ret
0x000000000011a91f : add eax, 0xd3b6c ; add rsp, 8 ; ret
0x000000000011a87e : add eax, 0xd3c0d ; mov rax, r8 ; ret
0x00000000000bc5dd : add eax, 0xd478d48 ; ret
0x0000000000118e7d : add eax, 0xd54b6 ; add rsp, 8 ; ret
0x00000000001191b4 : add eax, 0xd7287 ; add rsp, 8 ; ret
0x000000000019bec8 : add eax, 0xdb854800 ; jne 0x19beb8 ; pop rbx ; ret
0x00000000001018f3 : add eax, 0xe85f0 ; movsxd rcx, edx ; jmp 0x10190c
0x0000000000123c61 : add eax, 0xeb000000 ; ret
0x00000000000a3770 : add eax, 0xeb8bb ; cmove rax, rdx ; ret
0x00000000000a39d4 : add eax, 0xf48000d ; ret 0xfc3
0x00000000001711f3 : add eax, 0xf7f0ff3 ; ret
0x00000000000a4ea2 : add eax, 0xf9d9 ; cmove rax, rdx ; ret
0x0000000000055d2b : add eax, 0xfb8ee800 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130e6b : add eax, 0xfff8e250 ; cmovne rax, rdx ; ret
0x00000000001104f8 : add eax, 0xffffff43 ; cmove rax, rdx ; ret
0x00000000000952d8 : add eax, 1 ; cmp rbx, rax ; jne 0x952d9 ; jmp 0x952b6
0x0000000000125102 : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000125142 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x000000000002833d : add eax, 1 ; push rax ; call rbx
0x00000000000a389f : add eax, 1 ; ret
0x00000000000d2cc8 : add eax, 2 ; ret
0x00000000000d2ce1 : add eax, 3 ; ret
0x00000000000bfe13 : add eax, 4 ; test edx, edx ; jne 0xbfe11 ; xor eax, eax ; ret
0x000000000002753d : add eax, dword ptr [0] ; ret
0x000000000010fe43 : add eax, dword ptr [r8] ; add dh, dh ; ret 0xf20
0x00000000000f2e4a : add eax, dword ptr [rax - 0x6bf0a005] ; ret 0xd009
0x000000000002decb : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000013e423 : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x00000000000448ec : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0xdeb
0x000000000005b4ca : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000004e28a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000006990d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x0000000000057832 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbf41
0x0000000000181d8d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001848e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181db1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ed41d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x00000000001249fa : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014afba : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x37a56
0x00000000001300c8 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000843e7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x843bd
0x00000000000ab6b3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0xa81a7
0x0000000000154fe6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x000000000013dc05 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000d2d23 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000111ac1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000182d88 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000551ca : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000bf642 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xcfe9
0x0000000000031180 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000002f63e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000011dbe8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000000f841d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r9], al ; retf
0x0000000000026d81 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001029b5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; dec byte ptr [rbp - 0x77] ; ret
0x000000000003119a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x31159
0x00000000001963d8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x00000000000a83ab : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; retf 0x8b4c
0x000000000012553a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x000000000012de4e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000010e548 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000002b27d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000102f20 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0x8c0f
0x0000000000105307 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0xe74
0x00000000001982b7 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x43], cl ; ret 0x8349
0x00000000000979d9 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000009b195 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf01
0x000000000010fe44 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf20
0x0000000000130c2a : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000bf2f1 : add eax, dword ptr [rax] ; ret
0x00000000000a5476 : add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0xa5497
0x0000000000140dd3 : add eax, dword ptr [rbx + rcx*4 + 0x56] ; adc al, 0xf ; xchg eax, ebp ; ret 0x2144
0x000000000008b0e1 : add eax, dword ptr [rbx + rcx*4] ; mov eax, r8d ; ret
0x000000000017bac9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000005812f : add eax, dword ptr [rcx + 0x52] ; ret
0x0000000000026de9 : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000001264f9 : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000110c0f : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001262a1 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000017bbc9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000018b24f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000abccb : add eax, eax ; jmp rax
0x0000000000061b28 : add eax, eax ; mov eax, r8d ; ret
0x00000000000f12a8 : add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000188131 : add eax, eax ; vzeroupper ; ret
0x00000000001040fb : add eax, ebp ; call qword ptr [rbx]
0x000000000014324e : add eax, ebp ; cld ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007619f : add eax, ebp ; retf
0x000000000010cf46 : add eax, ebp ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000007a950 : add eax, ebx ; jmp rax
0x0000000000130edb : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018b858 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000013fd93 : add eax, ecx ; cmovs eax, edx ; ret
0x000000000006661d : add eax, ecx ; jmp rax
0x00000000000af119 : add eax, ecx ; ret
0x0000000000186d96 : add eax, ecx ; sub rax, rdi ; ret
0x000000000018bbfd : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000014943e : add eax, ecx ; sub rdx, 1 ; jne 0x1493d0 ; ret
0x0000000000187a86 : add eax, ecx ; vzeroupper ; ret
0x000000000018812e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x00000000000af116 : add eax, edi ; add rax, rcx ; ret
0x0000000000187a83 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000000af94a : add eax, edi ; add rax, rsi ; ret
0x00000000000676f7 : add eax, edi ; jmp rax
0x00000000000abb49 : add eax, edi ; ret
0x000000000018bcb5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000187bfa : add eax, edi ; vzeroupper ; ret
0x0000000000034b0e : add eax, edx ; jmp r8
0x0000000000026ece : add eax, edx ; jmp rax
0x00000000000b4f26 : add eax, edx ; sub rax, rdi ; ret
0x00000000000d2a2b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000006f9e0 : add eax, esi ; jmp rax
0x00000000000af94d : add eax, esi ; ret
0x000000000010c282 : add eax, esp ; jmp rax
0x0000000000164efc : add ebp, 1 ; mov rdx, rcx ; jmp 0x164edd
0x00000000000e9e5b : add ebp, 1 ; mov rdx, rcx ; jmp 0xe9e3d
0x00000000000ddb50 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011022e : add ebp, ecx ; ret 0xfffd
0x00000000000f884d : add ebx, 0x20 ; call 0x25355
0x00000000000393af : add ebx, 1 ; call 0x255d5
0x0000000000163306 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000a1b96 : add ebx, dword ptr [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a02ee : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000983c1 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000445f0 : add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x000000000012516d : add ebx, eax ; nop ; ret
0x0000000000058ce1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001882eb : add ebx, eax ; nop dword ptr [rax] ; ret
0x000000000012232b : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000012eabb : add ebx, ebp ; ret 0x9066
0x000000000002c6b7 : add ebx, ebp ; retf
0x000000000009aabb : add ebx, esi ; adc al, 0 ; xor edi, edi ; call qword ptr [rax]
0x00000000001713b3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000bf1fb : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xbf1f0 ; ret
0x00000000000b6c3a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000139118 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000098c6c : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000a9d59 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000a65d7 : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x00000000000f40b1 : add ecx, dword ptr [rax + 0x29] ; retf 0x14c
0x0000000000162cf7 : add ecx, dword ptr [rax + 0x29] ; retf 0xceb
0x0000000000051fb1 : add ecx, dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000a7a18 : add ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000007ac0a : add ecx, dword ptr [rax + 0x63] ; add al, 0x86 ; add rax, rbx ; jmp rax
0x000000000007ac68 : add ecx, dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rbx ; jmp rax
0x000000000011f817 : add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x000000000012ed7e : add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000019bff2 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x000000000013a0de : add ecx, dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000b6c3e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000002dbdc : add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000eb565 : add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000012e47f : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x000000000009811f : add ecx, dword ptr [rax - 0x77] ; retf 0x3141
0x00000000000f5ce4 : add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000001701c4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000000a00cb : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000013e05b : add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x0000000000067403 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a5485 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000a6f15 : add ecx, dword ptr [rbp + 0x29] ; retf 0x14d
0x00000000000aa291 : add ecx, dword ptr [rbp + 0x39] ; ret
0x0000000000049cb7 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x00000000001998cd : add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000171122 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000151a3a : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000000ba094 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000001052ae : add ecx, dword ptr [rcx + 0x4b8b3053] ; sub al, 0x39 ; retf 0x57d
0x0000000000196c7b : add ecx, dword ptr [rcx + 9] ; retf 0x894d
0x0000000000196f61 : add ecx, dword ptr [rcx + 9] ; retf 0xe583
0x00000000000b6c3b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000014db77 : add ecx, dword ptr [rcx - 0x77] ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000156507 : add ecx, dword ptr [rcx - 0x77] ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x000000000005645b : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000deb47 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000160087 : add ecx, dword ptr [rcx] ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000015ffdf : add ecx, dword ptr [rcx] ; add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x000000000013d3ec : add ecx, dword ptr [rdi] ; test byte ptr [rbp - 0x7d000000], cl ; ret 0x8103
0x00000000000f4bc2 : add ecx, dword ptr [rdi] ; test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba8e0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000fa68f : add ecx, dword ptr [rdi] ; test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000cc92e : add ecx, dword ptr [rdi] ; xchg bh, cl ; add eax, 0x89490000 ; ret
0x00000000000cc652 : add ecx, dword ptr [rdi] ; xchg dl, bh ; add eax, 0x89490000 ; ret
0x000000000002daf5 : add ecx, dword ptr [rdi] ; xchg dword ptr [rax + 0x39480000], esp ; ret
0x00000000000cdab1 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000cdb05 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000031acd : add ecx, dword ptr [rdi] ; xchg ebp, ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000de7e2 : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e60a0 : add ecx, dword ptr [rip + 0x142b800] ; add byte ptr [rax], al ; syscall
0x000000000002b58c : add ecx, ebp ; retf
0x00000000000cec86 : add ecx, ebp ; retf 0xfffb
0x0000000000141c40 : add ecx, ebp ; retf 0xfffc
0x00000000000e3813 : add ecx, ebp ; retf 0xfffd
0x000000000016937f : add ecx, ebx ; jmp r9
0x0000000000190a46 : add ecx, ebx ; jmp rcx
0x000000000011c864 : add ecx, ebx ; ret
0x0000000000132b35 : add ecx, ecx ; jmp 0x8ed74
0x00000000000abb36 : add ecx, ecx ; jmp rcx
0x0000000000083f83 : add ecx, edi ; jmp rcx
0x00000000001017ee : add ecx, edx ; jmp rcx
0x00000000000bf2c4 : add ecx, esi ; jmp rcx
0x0000000000150e11 : add edi, 0x10 ; jmp rcx
0x000000000014bdaf : add edi, 0x23b0 ; pop rbp ; jmp rcx
0x0000000000153948 : add edi, 0x58 ; jmp rcx
0x0000000000153008 : add edi, 0x68 ; jmp rcx
0x000000000015020b : add edi, 0xc8 ; jmp rcx
0x00000000000eb0fe : add edi, 1 ; test al, al ; jne 0xeb0ba ; xor eax, eax ; ret
0x0000000000159748 : add edi, dword ptr [rax + 1] ; jmp 0x15971a
0x000000000004794f : add edi, dword ptr [rsp] ; mov rsi, r15 ; call r14
0x00000000001197c4 : add edi, eax ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001199a2 : add edi, eax ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x8004
0x000000000004b602 : add edi, eax ; cmp rdi, r8 ; jb 0x4b5ee ; xor eax, eax ; ret
0x000000000019a7c0 : add edi, ebp ; call r12
0x0000000000122a91 : add edi, ebp ; xor eax, eax ; ret
0x000000000016937c : add edi, edx ; add r9, r11 ; jmp r9
0x000000000013f8c8 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000046bbb : add edi, esi ; ret 0
0x0000000000048bf8 : add edi, esp ; call rax
0x000000000019775a : add edi, esp ; jmp rdi
0x000000000018c5d6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18c57d
0x000000000018ccf6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18cc9d
0x000000000018d376 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18d31d
0x000000000018d7c6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18d75d
0x000000000018e066 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18e00d
0x000000000018e4e6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18e472
0x00000000000966f2 : add edx, 0x60 ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000014121c : add edx, 1 ; syscall
0x000000000013f81e : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000045deb : add edx, dword ptr [rip - 0x3b7cb800] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000af858 : add edx, eax ; jl 0xaf8c7 ; add rax, rdi ; ret
0x00000000000af868 : add edx, eax ; jl 0xaf8c9 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af888 : add edx, eax ; jl 0xaf8c9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af8a8 : add edx, eax ; jl 0xaf8c9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000a67df : add edx, eax ; jmp 0xa6791
0x00000000000a6e5e : add edx, eax ; jmp 0xa6e11
0x00000000000a8990 : add edx, eax ; jmp 0xa8941
0x00000000000a9a30 : add edx, eax ; jmp 0xa99e1
0x00000000000f3ac0 : add edx, eax ; jmp 0xf3ad2
0x00000000000f3fbe : add edx, eax ; jmp 0xf3f51
0x0000000000152a49 : add edx, eax ; jmp rdx
0x0000000000059be2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000448f0 : add edx, ecx ; jmp 0x44902
0x0000000000055fb4 : add edx, ecx ; jmp rdx
0x0000000000043cc2 : add edx, edi ; jmp r10
0x0000000000043b94 : add edx, edi ; jmp rdx
0x0000000000197501 : add edx, edx ; jmp rdx
0x0000000000058280 : add edx, esi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000fca15 : add edx, esi ; jmp rdx
0x00000000000fc36e : add esi, 8 ; mov rdi, r12 ; call 0xf8da8
0x00000000000be199 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009b645 : add esi, dword ptr [rbp + rdi - 0x77] ; ret 0xb48b
0x000000000014b9cf : add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000005648b : add esi, eax ; jmp qword ptr [rax]
0x000000000015a72a : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x00000000001712d3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000bed2e : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000162757 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009bbd3 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dfd : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000018c5d4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18c57f
0x000000000018ccf4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18cc9f
0x000000000018d374 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d31f
0x000000000018d7c4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d75f
0x000000000018e064 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e00f
0x000000000018e4e4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e474
0x0000000000192e7c : add esi, edi ; fadd st(3) ; ret
0x00000000000bf3ec : add esi, edi ; int1 ; mov eax, eax ; ret
0x00000000000f7670 : add esi, esi ; ret
0x000000000014bada : add esi, esi ; ret 0x7402
0x0000000000105e31 : add esi, esi ; ret 0xf01
0x00000000000f906d : add esi, esi ; ret 0xf04
0x00000000000a06c3 : add esp, 0x10 ; mov eax, r12d ; pop r12 ; ret
0x0000000000155596 : add esp, 0x10 ; mov eax, r8d ; pop r12 ; ret
0x00000000001105dc : add esp, 0x10 ; mov eax, r8d ; pop rbp ; ret
0x000000000009c780 : add esp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x000000000009c589 : add esp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x000000000009116a : add esp, 0x10 ; movzx eax, al ; pop rbx ; neg eax ; ret
0x0000000000147c40 : add esp, 0x10 ; pop r12 ; ret
0x0000000000033458 : add esp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000992d1 : add esp, 0x10 ; pop rbp ; ret
0x0000000000094bc5 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000065656 : add esp, 0x10 ; pop rbx ; pop r12 ; pop r13 ; ret
0x0000000000084225 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c75 : add esp, 0x10 ; pop rbx ; ret
0x00000000000beafd : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000065936 : add esp, 0x1010 ; pop rbp ; ret
0x0000000000046402 : add esp, 0x118 ; ret
0x00000000001125a8 : add esp, 0x130 ; pop rbp ; ret
0x00000000000462d2 : add esp, 0x148 ; ret
0x000000000009d94e : add esp, 0x18 ; jmp rax
0x000000000014a376 : add esp, 0x18 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x000000000004a17c : add esp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000a015b : add esp, 0x18 ; mov rax, r8 ; pop rbx ; pop r12 ; ret
0x0000000000065f2a : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000004a9d2 : add esp, 0x18 ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000007d4f8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045dd6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000037a1b : add esp, 0x18 ; ret
0x0000000000097b48 : add esp, 0x20 ; and eax, 0xc ; pop rbx ; ret
0x000000000013b317 : add esp, 0x20 ; mov eax, r8d ; pop rbp ; ret
0x00000000000e2bcf : add esp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x0000000000045e91 : add esp, 0x20 ; movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000045f22 : add esp, 0x20 ; pop rbp ; ret
0x0000000000095321 : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000032d7d : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd296 : add esp, 0x20 ; pop rbx ; ret
0x00000000000957d3 : add esp, 0x20 ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000155e99 : add esp, 0x28 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x0000000000084978 : add esp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000087728 : add esp, 0x28 ; mov edx, r12d ; pop rbx ; pop r12 ; jmp rax
0x000000000008dc5e : add esp, 0x28 ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000006581b : add esp, 0x28 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000001556d5 : add esp, 0x28 ; pop rbx ; pop r12 ; ret
0x0000000000045ab3 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005e14d : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004a756 : add esp, 0x28 ; ret
0x000000000019a548 : add esp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x00000000001162fd : add esp, 0x30 ; pop rbp ; ret
0x00000000000943f9 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a12f : add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000d7449 : add esp, 0x30 ; pop rbx ; ret
0x0000000000029216 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054f7b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005e968 : add esp, 0x38 ; ret
0x0000000000115cf8 : add esp, 0x40 ; pop r12 ; ret
0x000000000009c3ee : add esp, 0x40 ; pop rbp ; ret
0x0000000000046ca9 : add esp, 0x40 ; pop rbx ; ret
0x0000000000125b0c : add esp, 0x40 ; ret
0x000000000011f1ee : add esp, 0x418 ; ret
0x000000000005e6a6 : add esp, 0x450 ; pop rbp ; ret
0x00000000000e82b5 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001551a4 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000090d6b : add esp, 0x48 ; ret
0x0000000000151adf : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000582fd : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000141236 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000112e39 : add esp, 0x58 ; ret
0x0000000000116bef : add esp, 0x60 ; mov eax, r11d ; pop rbx ; ret
0x0000000000117168 : add esp, 0x60 ; mov rax, r12 ; pop r12 ; ret
0x0000000000118378 : add esp, 0x60 ; pop rbp ; ret
0x000000000011100c : add esp, 0x68 ; pop rbp ; pop r12 ; ret
0x00000000000c015e : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010439d : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011177d : add esp, 0x68 ; ret
0x00000000000c02b3 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111187 : add esp, 0x78 ; ret
0x000000000011fd2d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000015ad2c : add esp, 0x90 ; pop rbx ; ret
0x00000000000469d4 : add esp, 0x98 ; pop rbp ; pop r12 ; ret
0x0000000000027373 : add esp, 0x98 ; ret
0x0000000000123fe0 : add esp, 0xa0 ; pop rbx ; ret
0x00000000000e1516 : add esp, 0xa8 ; pop rbp ; pop r12 ; ret
0x0000000000047735 : add esp, 0xa8 ; ret
0x00000000000e786b : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000055e68 : add esp, 0xd8 ; ret
0x00000000000e0a28 : add esp, 0xe0 ; pop rbx ; ret
0x00000000000f12a5 : add esp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013f7b1 : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000008ce9b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000015103a : add esp, 8 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000005ea21 : add esp, 8 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x0000000000085504 : add esp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000011a5af : add esp, 8 ; mov eax, r8d ; ret
0x0000000000105ac9 : add esp, 8 ; mov eax, r9d ; ret
0x000000000004aaaf : add esp, 8 ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x00000000000a3c21 : add esp, 8 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000000862b2 : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000159883 : add esp, 8 ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000008a7b9 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000151073 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x0000000000027b19 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014be90 : add esp, 8 ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000014d357 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000055516 : add esp, 8 ; movzx eax, al ; ret
0x000000000014448e : add esp, 8 ; movzx eax, ax ; ret
0x000000000015af16 : add esp, 8 ; not eax ; shr eax, 0x1f ; ret
0x0000000000158e26 : add esp, 8 ; pop rbp ; pop r12 ; jmp rax
0x00000000000884ba : add esp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000027624 : add esp, 8 ; pop rbx ; pop r14 ; ret
0x000000000014bd67 : add esp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000008e5a7 : add esp, 8 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000058778 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028489 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a5f9 : add esp, 8 ; ret
0x0000000000166275 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012eb2c : add esp, 8 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000096783 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004c01a : add qword ptr [r8 - 0x7d], rcx ; ret
0x000000000004c9bf : add qword ptr [r9 - 0x77], r9 ; xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c1c27 : add qword ptr [r9 - 0x77], rcx ; xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000775b0 : add qword ptr [rax - 0x77], rcx ; retf 0x3948
0x0000000000129ba3 : add qword ptr [rax - 0x7d], rcx ; ret 0x4801
0x00000000000a779e : add qword ptr [rax], r8 ; add byte ptr [rcx - 9], al ; ret
0x00000000000c020c : add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x28 ; call rbx
0x000000000013105a : add qword ptr [rcx + rcx*8 - 0x76b7578b], rax ; clc ; ret
0x000000000002c6b4 : add qword ptr [rdi], 1 ; jmp 0x2c68a
0x000000000017ba7d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000043cc1 : add r10, r15 ; jmp r10
0x00000000000a6e5d : add r10, rax ; jmp 0xa6e12
0x00000000000a898f : add r10, rax ; jmp 0xa8942
0x00000000000a9a2f : add r10, rax ; jmp 0xa99e2
0x00000000000445ef : add r11, qword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x0000000000095876 : add r11b, r13b ; retf 0xf66
0x00000000001713b2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000164efb : add r13, 1 ; mov rdx, rcx ; jmp 0x164ede
0x00000000000e9e5a : add r13, 1 ; mov rdx, rcx ; jmp 0xe9e3e
0x0000000000171342 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001712d2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000004794e : add r15, qword ptr [rsp] ; mov rsi, r15 ; call r14
0x0000000000048bf7 : add r15, r12 ; call rax
0x000000000002deca : add r8, qword ptr [r8] ; add bh, dh ; ret 0
0x0000000000186970 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182e04 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034b0d : add r8, rdx ; jmp r8
0x00000000000aac91 : add r8b, byte ptr [r8] ; add bh, dh ; ret
0x000000000018c647 : add r8b, byte ptr [r8] ; vzeroupper ; ret
0x000000000014e4e6 : add r8b, r13b ; ret
0x0000000000061b27 : add r8d, eax ; mov eax, r8d ; ret
0x000000000016937e : add r9, r11 ; jmp r9
0x000000000004b2db : add r9b, byte ptr [r15] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x000000000002f643 : add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000013ec39 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1072
0x00000000000f0858 : add r9b, byte ptr [r9 + 0x39] ; ret 0x3176
0x000000000018b032 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000017bb03 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000d2cd0 : add rax, 1 ; ret
0x00000000000d2cc7 : add rax, 2 ; ret
0x00000000000d2ce0 : add rax, 3 ; ret
0x000000000002753c : add rax, qword ptr [0] ; ret
0x000000000009b194 : add rax, qword ptr [rax] ; add dh, dh ; ret 0xf01
0x00000000000a5475 : add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa5498
0x000000000002753b : add rax, qword ptr fs:[0] ; ret
0x0000000000093339 : add rax, r10 ; jmp rax
0x000000000009336b : add rax, r11 ; jmp rax
0x000000000010c281 : add rax, r12 ; jmp rax
0x0000000000077193 : add rax, r14 ; jmp rax
0x00000000000abcca : add rax, r8 ; jmp rax
0x0000000000188130 : add rax, r8 ; vzeroupper ; ret
0x000000000007a94f : add rax, rbx ; jmp rax
0x0000000000130eda : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018b857 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000006661c : add rax, rcx ; jmp rax
0x00000000000af118 : add rax, rcx ; ret
0x0000000000186d95 : add rax, rcx ; sub rax, rdi ; ret
0x000000000018bbfc : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000187a85 : add rax, rcx ; vzeroupper ; ret
0x000000000018812d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000af115 : add rax, rdi ; add rax, rcx ; ret
0x0000000000187a82 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000af949 : add rax, rdi ; add rax, rsi ; ret
0x00000000000676f6 : add rax, rdi ; jmp rax
0x00000000000abb48 : add rax, rdi ; ret
0x000000000018bcb4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000187bf9 : add rax, rdi ; vzeroupper ; ret
0x0000000000026ecd : add rax, rdx ; jmp rax
0x00000000000b4f25 : add rax, rdx ; sub rax, rdi ; ret
0x000000000006f9df : add rax, rsi ; jmp rax
0x00000000000af94c : add rax, rsi ; ret
0x00000000000f884c : add rbx, 0x20 ; call 0x25356
0x00000000000393ae : add rbx, 1 ; call 0x255d6
0x00000000001017ed : add rcx, r10 ; jmp rcx
0x0000000000190a45 : add rcx, r11 ; jmp rcx
0x00000000000abb35 : add rcx, r9 ; jmp rcx
0x0000000000083f82 : add rcx, rdi ; jmp rcx
0x00000000000bf2c3 : add rcx, rsi ; jmp rcx
0x0000000000150e10 : add rdi, 0x10 ; jmp rcx
0x000000000014bdae : add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x0000000000153947 : add rdi, 0x58 ; jmp rcx
0x0000000000153007 : add rdi, 0x68 ; jmp rcx
0x000000000015020a : add rdi, 0xc8 ; jmp rcx
0x0000000000197759 : add rdi, r12 ; jmp rdi
0x000000000019a7bf : add rdi, rbp ; call r12
0x000000000016937b : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000013f8c7 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000197500 : add rdx, r10 ; jmp rdx
0x0000000000059be1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000055fb3 : add rdx, r9 ; jmp rdx
0x00000000000af857 : add rdx, rax ; jl 0xaf8c8 ; add rax, rdi ; ret
0x00000000000af856 : add rdx, rax ; jl 0xaf8c9 ; add rax, rdi ; ret
0x00000000000a67de : add rdx, rax ; jmp 0xa6792
0x00000000000f3abf : add rdx, rax ; jmp 0xf3ad3
0x00000000000f3fbd : add rdx, rax ; jmp 0xf3f52
0x0000000000152a48 : add rdx, rax ; jmp rdx
0x00000000000448ef : add rdx, rcx ; jmp 0x44903
0x0000000000083fe6 : add rdx, rcx ; jmp rdx
0x0000000000043b93 : add rdx, rdi ; jmp rdx
0x000000000005827f : add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000fca14 : add rdx, rsi ; jmp rdx
0x00000000000fc36d : add rsi, 8 ; mov rdi, r12 ; call 0xf8da9
0x000000000018c5d3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18c580
0x000000000018ccf3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18cca0
0x000000000018d373 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d320
0x000000000018d7c3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d760
0x000000000018e063 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e010
0x000000000018e4e3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e475
0x00000000000a06c2 : add rsp, 0x10 ; mov eax, r12d ; pop r12 ; ret
0x0000000000155595 : add rsp, 0x10 ; mov eax, r8d ; pop r12 ; ret
0x00000000001105db : add rsp, 0x10 ; mov eax, r8d ; pop rbp ; ret
0x000000000009c77f : add rsp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x000000000009c588 : add rsp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x0000000000147c3f : add rsp, 0x10 ; pop r12 ; ret
0x0000000000033457 : add rsp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000992d0 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000094bc4 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000065655 : add rsp, 0x10 ; pop rbx ; pop r12 ; pop r13 ; ret
0x0000000000084224 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c74 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000065935 : add rsp, 0x1010 ; pop rbp ; ret
0x0000000000046401 : add rsp, 0x118 ; ret
0x00000000001125a7 : add rsp, 0x130 ; pop rbp ; ret
0x00000000000462d1 : add rsp, 0x148 ; ret
0x000000000009d94d : add rsp, 0x18 ; jmp rax
0x000000000004a17b : add rsp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000065f29 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000045dd5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000037a1a : add rsp, 0x18 ; ret
0x0000000000097b47 : add rsp, 0x20 ; and eax, 0xc ; pop rbx ; ret
0x000000000013b316 : add rsp, 0x20 ; mov eax, r8d ; pop rbp ; ret
0x00000000000e2bce : add rsp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x0000000000045e90 : add rsp, 0x20 ; movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000045f21 : add rsp, 0x20 ; pop rbp ; ret
0x0000000000095320 : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000032d7c : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd295 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000957d2 : add rsp, 0x20 ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000084977 : add rsp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000001556d4 : add rsp, 0x28 ; pop rbx ; pop r12 ; ret
0x000000000005e14c : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004a755 : add rsp, 0x28 ; ret
0x000000000019a547 : add rsp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x00000000001162fc : add rsp, 0x30 ; pop rbp ; ret
0x00000000000943f8 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a12e : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000d7448 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000054f7a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005e967 : add rsp, 0x38 ; ret
0x0000000000115cf7 : add rsp, 0x40 ; pop r12 ; ret
0x000000000009c3ed : add rsp, 0x40 ; pop rbp ; ret
0x0000000000046ca8 : add rsp, 0x40 ; pop rbx ; ret
0x0000000000125b0b : add rsp, 0x40 ; ret
0x000000000011f1ed : add rsp, 0x418 ; ret
0x000000000005e6a5 : add rsp, 0x450 ; pop rbp ; ret
0x00000000001551a3 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000090d6a : add rsp, 0x48 ; ret
0x0000000000151ade : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000141235 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000112e38 : add rsp, 0x58 ; ret
0x0000000000116bee : add rsp, 0x60 ; mov eax, r11d ; pop rbx ; ret
0x0000000000117167 : add rsp, 0x60 ; mov rax, r12 ; pop r12 ; ret
0x0000000000118377 : add rsp, 0x60 ; pop rbp ; ret
0x000000000011100b : add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x000000000010439c : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011177c : add rsp, 0x68 ; ret
0x00000000000c02b2 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111186 : add rsp, 0x78 ; ret
0x000000000011fd2c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000015ad2b : add rsp, 0x90 ; pop rbx ; ret
0x0000000000027372 : add rsp, 0x98 ; ret
0x0000000000123fdf : add rsp, 0xa0 ; pop rbx ; ret
0x0000000000047734 : add rsp, 0xa8 ; ret
0x00000000000e786a : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000055e67 : add rsp, 0xd8 ; ret
0x00000000000e0a27 : add rsp, 0xe0 ; pop rbx ; ret
0x00000000000f12a4 : add rsp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013f7b0 : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000008ce9a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000085503 : add rsp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000011a5ae : add rsp, 8 ; mov eax, r8d ; ret
0x0000000000105ac8 : add rsp, 8 ; mov eax, r9d ; ret
0x00000000000862b1 : add rsp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000008a7b8 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000027b18 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014d356 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000055515 : add rsp, 8 ; movzx eax, al ; ret
0x000000000014448d : add rsp, 8 ; movzx eax, ax ; ret
0x000000000015af15 : add rsp, 8 ; not eax ; shr eax, 0x1f ; ret
0x0000000000158e25 : add rsp, 8 ; pop rbp ; pop r12 ; jmp rax
0x00000000000884b9 : add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000027623 : add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000014bd66 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000008e5a6 : add rsp, 8 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000028488 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a5f8 : add rsp, 8 ; ret
0x0000000000166274 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012eb2b : add rsp, 8 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000096782 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001319ce : add sil, sil ; ret 0x7420
0x00000000000e9826 : add sil, sil ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x000000000012515b : add word ptr [rax], 1 ; ret
0x0000000000124e8e : add word ptr [rdx + rax*2], 1 ; ret
0x000000000004552b : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000004559f : addps xmm0, xmm0 ; ret
0x00000000000454b1 : addps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000004552a : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000004559e : addsd xmm0, xmm0 ; ret
0x00000000000454b0 : addsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000045810 : addss xmm0, xmm0 ; ret
0x00000000000a8f9e : and al, 0 ; add bh, dh ; ret
0x00000000000b73f1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a5254 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d7275 : and al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000b21c5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001189ae : and al, 0 ; mov rax, r12 ; pop r12 ; ret
0x000000000012b6f1 : and al, 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015f134 : and al, 0x10 ; call 0x11bb94
0x0000000000132afc : and al, 0x10 ; call 0x8ed74
0x0000000000132afb : and al, 0x10 ; call 0x8ed75
0x000000000009a771 : and al, 0x10 ; call qword ptr [rax]
0x00000000000ce16f : and al, 0x10 ; call r14
0x0000000000150e77 : and al, 0x10 ; call rax
0x00000000000c1025 : and al, 0x10 ; call rbx
0x0000000000163d45 : and al, 0x10 ; call rsi
0x0000000000044f5b : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000e5b90 : and al, 0x10 ; mov eax, 0xf7 ; syscall
0x00000000001162db : and al, 0x10 ; mov edi, dword ptr [rsp + 8] ; syscall
0x00000000000abc1b : and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x0000000000153cd2 : and al, 0x10 ; mov rdi, r15 ; call rcx
0x0000000000159126 : and al, 0x10 ; mov rdi, rbp ; call qword ptr [rax]
0x000000000014c2dd : and al, 0x10 ; mov rdx, rax ; jmp 0x14c276
0x000000000014c2dc : and al, 0x10 ; mov rdx, rax ; jmp 0x14c277
0x0000000000048430 : and al, 0x10 ; mov rdx, rbp ; mov rdi, r12 ; call rbx
0x0000000000123649 : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; syscall
0x00000000001222af : and al, 0x10 ; syscall
0x000000000012ae7e : and al, 0x10 ; xor esi, esi ; mov edi, 0x2000004 ; call rax
0x0000000000116b90 : and al, 0x11 ; syscall
0x0000000000154c3f : and al, 0x14 ; call qword ptr [rax]
0x00000000001183c2 : and al, 0x14 ; syscall
0x00000000000abbd5 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000009d94b : and al, 0x18 ; add rsp, 0x18 ; jmp rax
0x00000000001164d6 : and al, 0x18 ; add rsp, 0x28 ; ret
0x000000000015acfc : and al, 0x18 ; call r8
0x00000000000271df : and al, 0x18 ; call rax
0x00000000000c036b : and al, 0x18 ; call rbx
0x000000000014aba7 : and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000e88a3 : and al, 0x18 ; lea rdi, [r12 + rax] ; call 0x25338
0x00000000000e88a2 : and al, 0x18 ; lea rdi, [r12 + rax] ; call 0x25339
0x00000000001111ea : and al, 0x18 ; mov eax, 0x101 ; syscall
0x00000000001164b7 : and al, 0x18 ; mov eax, 0x115 ; syscall
0x0000000000123d57 : and al, 0x18 ; mov eax, 0x120 ; syscall
0x0000000000124057 : and al, 0x18 ; mov eax, 0x45 ; syscall
0x00000000001183be : and al, 0x18 ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000abb43 : and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000cda43 : and al, 0x18 ; mov rcx, r12 ; mov rdx, r13 ; call rbx
0x000000000009ce5e : and al, 0x18 ; mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000047b2b : and al, 0x18 ; mov rdx, rbp ; mov rsi, r12 ; call rbx
0x000000000014a106 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000163d40 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x000000000009d433 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000158a50 : and al, 0x18 ; xor eax, eax ; call 0x25496
0x0000000000158a4f : and al, 0x18 ; xor eax, eax ; call 0x25497
0x00000000000282c8 : and al, 0x18 ; xor r8d, r8d ; call rbx
0x0000000000056b15 : and al, 0x1c ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x0000000000155683 : and al, 0x1c ; call qword ptr [rax]
0x0000000000114672 : and al, 0x20 ; call 0xe10c4
0x000000000014a691 : and al, 0x20 ; call qword ptr [rax]
0x000000000002c5ec : and al, 0x20 ; call rax
0x00000000000c0714 : and al, 0x20 ; call rbx
0x0000000000118bfa : and al, 0x20 ; mov eax, 0x65 ; syscall
0x000000000009aae3 : and al, 0x20 ; mov qword ptr [rsp + 0x18], r8 ; call rax
0x00000000000c23d2 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc23f0
0x00000000000c23d1 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc23f1
0x00000000000c4d72 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc4d90
0x00000000000c4d71 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc4d91
0x00000000000c7592 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc75b0
0x00000000000c7591 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc75b1
0x00000000000cee22 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xcee40
0x00000000000cee21 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xcee41
0x000000000015073c : and al, 0x20 ; mov rdi, r12 ; call rdx
0x000000000002aa4b : and al, 0x28 ; call rax
0x00000000000c0211 : and al, 0x28 ; call rbx
0x00000000000e1dcd : and al, 0x28 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000150521 : and al, 0x28 ; mov rdi, r12 ; call rcx
0x000000000009eec3 : and al, 0x28 ; mov rdi, r12 ; call rdx
0x00000000001222aa : and al, 0x28 ; movaps xmmword ptr [rsp + 0x10], xmm0 ; syscall
0x000000000014a49c : and al, 0x2c ; call qword ptr [rax]
0x00000000000f9eab : and al, 0x30 ; adc al, 0x83 ; ret
0x00000000000d89e1 : and al, 0x30 ; call 0x25494
0x000000000002b7ee : and al, 0x30 ; call rax
0x00000000000c094f : and al, 0x30 ; call rbx
0x0000000000116b17 : and al, 0x30 ; mov eax, 0x10 ; syscall
0x000000000014b16d : and al, 0x31 ; ror byte ptr [rax - 0x77], 0xdf ; call rcx
0x000000000002edf0 : and al, 0x38 ; call r15
0x000000000002e7fc : and al, 0x38 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000150532 : and al, 0x38 ; mov rdi, r12 ; call 0x14d007
0x00000000000f900e : and al, 0x39 ; ret
0x0000000000155fbe : and al, 0x3a ; call qword ptr [rax]
0x000000000014abac : and al, 0x40 ; call qword ptr [rax]
0x000000000002d86e : and al, 0x40 ; call r14
0x000000000002ddbc : and al, 0x40 ; call rbx
0x000000000002edeb : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000098012 : and al, 0x41 ; mov eax, eax ; mov eax, 0x23 ; syscall
0x0000000000111c68 : and al, 0x41 ; mov eax, eax ; mov eax, 0x55 ; syscall
0x00000000000a5154 : and al, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000094be8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000045dd4 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5d6a : and al, 0x48 ; add esp, 0x18 ; ret
0x00000000001235a2 : and al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000117290 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f436 : and al, 0x48 ; add esp, 0x28 ; ret
0x0000000000123668 : and al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000019a192 : and al, 0x48 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000125aa9 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000125b0a : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000002d17b : and al, 0x48 ; call rbx
0x0000000000162d41 : and al, 0x48 ; mov eax, dword ptr [rax + 0x1b0] ; jmp rax
0x00000000001076b5 : and al, 0x48 ; mov eax, dword ptr [rbp - 0x1e0] ; call rax
0x0000000000091c52 : and al, 0x48 ; mov edi, ebp ; call rax
0x00000000000fb3fc : and al, 0x48 ; mov rcx, rbx ; call 0xf7e17
0x000000000002d869 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002ddb7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000009db9b : and al, 0x48 ; mov rdi, r13 ; call rax
0x000000000015f130 : and al, 0x49 ; mov esi, dword ptr [rsp + 0x10] ; call 0x11bb98
0x000000000013b8b1 : and al, 0x4c ; mov edi, esp ; call rax
0x0000000000048a87 : and al, 0x4c ; mov edx, esi ; mov rax, qword ptr [rsp] ; call rax
0x0000000000047951 : and al, 0x4c ; mov esi, edi ; call r14
0x000000000014b25f : and al, 0x4c ; mov esi, edi ; mov rdi, rbx ; xor eax, eax ; call rcx
0x0000000000048b7e : and al, 0x4c ; mov esi, esp ; mov rdi, r13 ; call rax
0x0000000000048bf3 : and al, 0x4d ; mov ebp, edi ; add r15, r12 ; call rax
0x000000000002fb7a : and al, 0x50 ; call rbx
0x0000000000030e8d : and al, 0x50 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002f790 : and al, 0x50 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002d176 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002acf0 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002c240 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002ba5a : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x00000000000d3665 : and al, 0x50 ; mov rsi, r15 ; mov rdi, rbp ; call rbx
0x0000000000108885 : and al, 0x50 ; shl rdi, 3 ; call 0x25338
0x000000000002acf5 : and al, 0x58 ; call r14
0x000000000002c245 : and al, 0x58 ; call r15
0x000000000002ba5f : and al, 0x58 ; call rbx
0x000000000002bdc0 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e7 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa46 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7e9 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002fb75 : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x000000000002b46f : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x00000000000d3546 : and al, 0x58 ; xor eax, eax ; mov qword ptr [rsp + 0x50], r12 ; call rbx
0x000000000012849c : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a5deb : and al, 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e1b28 : and al, 0x60 ; call r12
0x000000000002b474 : and al, 0x60 ; call r15
0x000000000002b031 : and al, 0x60 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000015acf7 : and al, 0x60 ; movups xmmword ptr [rsp + 0x18], xmm0 ; call r8
0x000000000010e855 : and al, 0x68 ; lea rdi, [rsp + 0x78] ; call 0x10b349
0x00000000000358b5 : and al, 0x6f ; sbb eax, dword ptr [rax] ; ret
0x000000000010e85a : and al, 0x78 ; call 0x10b344
0x0000000000142973 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000139dad : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000563f0 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000056c97 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfde9
0x0000000000116c2b : and al, 0x81 ; retf 0
0x00000000000625c8 : and al, 0x83 ; ret
0x00000000001128b9 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000005462f : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000013a77c : and al, 0x88 ; or dh, dh ; ret 0xf02
0x00000000000c1684 : and al, 0x89 ; ret
0x000000000009b660 : and al, 0x89 ; ret 0xb48b
0x00000000000fb083 : and al, 0x89 ; ret 0xe283
0x000000000009259d : and al, 0x89 ; ror dword ptr [rbp + 0x29], 1 ; in eax, 0x83 ; retf 0x8310
0x000000000009f603 : and al, 0x8b ; je 0x9f596 ; retf 0x4c89
0x000000000010c9c3 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000143464 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x000000000014340c : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301c : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000110884 : and al, 0x98 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x000000000010c8d3 : and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff9
0x0000000000197757 : and al, 0xa7 ; add rdi, r12 ; jmp rdi
0x00000000000ecc40 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000013b77b : and al, 0xa8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000162073 : and al, 0xb5 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000010f4c7 : and al, 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010f417 : and al, 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000130259 : and al, 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x00000000000e5cd5 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000e5baf : and al, 0xc ; add rsp, 0x28 ; ret
0x00000000001182c1 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000e4778 : and al, 0xc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000123eb5 : and al, 0xc ; mov eax, 0x133 ; syscall
0x0000000000123336 : and al, 0xc ; mov eax, 0x2b ; syscall
0x0000000000122665 : and al, 0xc ; mov eax, 0xe8 ; syscall
0x00000000000abbb4 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000001182a7 : and al, 0xc ; syscall
0x0000000000142f5d : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000045a21 : and al, 0xc8 ; ret
0x0000000000138de8 : and al, 0xd0 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000045a1b : and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x0000000000079fdf : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000019a75c : and al, 0xd8 ; ret
0x00000000000abc92 : and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x0000000000126f78 : and al, 0xe4 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008f294 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000001431de : and al, 0xe8 ; and rsi, r13 ; dec dword ptr [rax - 0x77] ; ret
0x000000000003f620 : and al, 0xe8 ; cli ; retf 0xffff
0x000000000004508c : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x000000000003f529 : and al, 0xe8 ; int1 ; retf
0x0000000000132cb6 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x000000000003f676 : and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000005e215 : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x000000000003f5ca : and al, 0xe8 ; push rax ; retf
0x0000000000042657 : and al, 0xe8 ; ret
0x00000000000f6568 : and al, 0xe8 ; ret 0xf2ed
0x0000000000117bc8 : and al, 0xe8 ; ret 0xf7fd
0x0000000000042b88 : and al, 0xe8 ; ret 0xfe27
0x0000000000043758 : and al, 0xe8 ; ret 0xff89
0x0000000000042358 : and al, 0xe8 ; ret 0xff9d
0x000000000003ef58 : and al, 0xe8 ; ret 0xffd1
0x000000000003e84f : and al, 0xe8 ; retf
0x0000000000043450 : and al, 0xe8 ; retf 0xff8c
0x0000000000101258 : and al, 0xe8 ; rol byte ptr [rax - 0xe], cl ; dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x000000000003ee17 : and al, 0xe9 ; ret 0xffed
0x000000000003f4e1 : and al, 0xe9 ; retf
0x0000000000115110 : and al, 0xe9 ; retf 0xfffe
0x000000000010a11c : and al, 0xeb ; adc eax, 0xbe0f4890 ; retf 0x8348
0x000000000012a634 : and al, 0xeb ; retf 0xf66
0x00000000000abc79 : and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000019c643 : and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000119a44 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x119a81
0x0000000000119a43 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x119a82
0x00000000000d910b : and al, 0xf ; ret 0x4c80
0x000000000014c5f4 : and al, 0xf ; retf 0x1089
0x0000000000046c6b : and al, 0xf ; xchg eax, ebp ; ret 0x8948
0x000000000004514b : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000044fc8 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000d347a : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000d3480 : and al, 0xf0 ; ret
0x00000000000abc61 : and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb9c : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc43 : and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb7e : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000c156e : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111ba5 : and al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000047b16 : and al, 1 ; mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000049de9 : and al, 1 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000011738a : and al, 1 ; retf 0x5389
0x00000000001224ab : and al, 4 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000123e2e : and al, 4 ; add rsp, 0x28 ; ret
0x000000000004ab75 : and al, 4 ; jne 0x4abd2 ; add rsp, 0x18 ; ret
0x000000000004ab74 : and al, 4 ; jne 0x4abd3 ; add rsp, 0x18 ; ret
0x0000000000122492 : and al, 4 ; syscall
0x00000000000baa28 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000001014ad : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x0000000000116672 : and al, 8 ; add cl, byte ptr [rbx + 0x750c2444] ; ret 0xd8f7
0x0000000000037a18 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000095355 : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000004b587 : and al, 8 ; add rsp, 0x28 ; ret
0x00000000001162fa : and al, 8 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000124133 : and al, 8 ; add rsp, 0x38 ; ret
0x000000000014c43a : and al, 8 ; call qword ptr [rax]
0x0000000000085bc0 : and al, 8 ; call rax
0x000000000009ab03 : and al, 8 ; call rdx
0x0000000000045182 : and al, 8 ; fadd st(0) ; ret
0x00000000000450de : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000045044 : and al, 8 ; fsubrp st(1) ; ret
0x000000000013fc47 : and al, 8 ; jne 0x13fc81 ; add rsp, 0x38 ; ret
0x0000000000122715 : and al, 8 ; mov eax, 0x114 ; syscall
0x0000000000116566 : and al, 8 ; mov eax, 0x11d ; syscall
0x000000000011784f : and al, 8 ; mov eax, 0x127 ; syscall
0x000000000011790f : and al, 8 ; mov eax, 0x128 ; syscall
0x00000000001176f4 : and al, 8 ; mov eax, 0x13 ; syscall
0x0000000000122932 : and al, 8 ; mov eax, 0x130 ; syscall
0x000000000004b566 : and al, 8 ; mov eax, 0x13e ; syscall
0x0000000000117794 : and al, 8 ; mov eax, 0x14 ; syscall
0x000000000011bc36 : and al, 8 ; mov eax, 0x1a ; syscall
0x0000000000123402 : and al, 8 ; mov eax, 0x2a ; syscall
0x0000000000123844 : and al, 8 ; mov eax, 0x2e ; syscall
0x00000000001236e4 : and al, 8 ; mov eax, 0x2f ; syscall
0x000000000012231c : and al, 8 ; mov eax, 0x38 ; syscall
0x00000000000e5a8d : and al, 8 ; mov eax, 0x3d ; syscall
0x00000000001117de : and al, 8 ; mov eax, 0x48 ; syscall
0x0000000000111356 : and al, 8 ; mov eax, 1 ; syscall
0x0000000000115c36 : and al, 8 ; mov eax, 7 ; syscall
0x000000000003f61b : and al, 8 ; mov qword ptr [rsp], r9 ; call 0x3c128
0x000000000003f61a : and al, 8 ; mov qword ptr [rsp], r9 ; call 0x3c129
0x000000000013feb5 : and al, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011dff0 : and al, 8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000011466d : and al, 8 ; mov rdi, qword ptr [rsp + 0x20] ; call 0xe10c9
0x000000000011ce3b : and al, 8 ; mov rdi, r13 ; call rax
0x000000000008c331 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000149cc5 : and al, 8 ; mov rdi, rbp ; call rcx
0x000000000013ab92 : and al, 8 ; mov rdi, rbx ; call rax
0x00000000000f482e : and al, 8 ; mov rsi, r8 ; call 0xf0ab7
0x00000000000f482d : and al, 8 ; mov rsi, r8 ; call 0xf0ab8
0x0000000000044f5f : and al, 8 ; ret
0x00000000001162df : and al, 8 ; syscall
0x00000000001112b6 : and al, 8 ; xor eax, eax ; syscall
0x000000000009abd7 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000065ddb : and al, 9 ; adc eax, 0x3d8d4800 ; retf 0x1546
0x0000000000045f1d : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000045214 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000005b593 : and al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x198016
0x00000000000e5ca1 : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b236e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000067c99 : and al, byte ptr [rbx - 0x61f43] ; call qword ptr [rax]
0x0000000000122525 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000856eb : and al, byte ptr [rcx] ; add cl, ch ; ret
0x00000000000b9bca : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000010d0e7 : and al, ch ; ret
0x0000000000114673 : and al, ch ; retf 0xfffc
0x00000000000ffb50 : and al, ch ; retf 0xfffd
0x00000000000f884f : and al, ch ; sti ; retf 0xfff2
0x00000000000371d6 : and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000371f6 : and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000037136 : and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000371b6 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000370d6 : and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000037176 : and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000037116 : and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000037156 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00000000000c7252 : and bh, cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bb007 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000008402b : and bl, ch ; retf 0x9066
0x00000000000d434c : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000008c749 : and byte ptr [r11 + rcx*4 + 0x6d], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000008c777 : and byte ptr [r8 + 1], r9b ; ret
0x000000000008f1ba : and byte ptr [r8 - 0x75], r9b ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000be4b6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000122111 : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x000000000008f1bf : and byte ptr [rax + 0x29], cl ; ret 0x6348
0x0000000000187a96 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000009bdad : and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000015bfe6 : and byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000009b6a1 : and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008bd96 : and byte ptr [rax + 0x39], cl ; ret 0x894c
0x000000000015d15d : and byte ptr [rax + 0x39], cl ; ret 0xac74
0x000000000004a3ba : and byte ptr [rax + 0x39], cl ; ret 0xb677
0x000000000004a3ca : and byte ptr [rax + 0x39], cl ; ret 0xe076
0x000000000004a370 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x000000000018b76a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000118bfb : and byte ptr [rax + 0x65], bh ; syscall
0x00000000001539e5 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x0000000000187c0c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000008c778 : and byte ptr [rax + 1], cl ; ret
0x0000000000188096 : and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000af886 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000004a63e : and byte ptr [rax + 9], cl ; clc ; ret
0x000000000005e208 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b4f1d : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b50de : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000002a5db : and byte ptr [rax + rax], bl ; test eax, eax ; je 0x2a5ef ; ret
0x000000000008f1bb : and byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000cdbc6 : and byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000028764 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000138912 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000535a7 : and byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000034fd8 : and byte ptr [rax - 0x77], cl ; std ; test rax, rax ; je 0x34fec ; call rax
0x000000000019b053 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff7
0x000000000019af53 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff8
0x000000000019ae53 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff9
0x000000000019ad53 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfffa
0x00000000000e0289 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000187e5b : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000012451f : and byte ptr [rax - 0x7d], cl ; ret 0x4c14
0x00000000000d7e36 : and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000917f2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000011f910 : and byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x0000000000071508 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e7f1d : and byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7feb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000080314 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000bf3ab : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000111b45 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000b25be : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019918f : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2040
0x00000000001967fe : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2041
0x00000000000bc17c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000be4b7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0544 : and byte ptr [rbp + rcx*4 + 0x60], cl ; xor byte ptr [rax + 0x31], cl ; ret 0x8948
0x000000000018f7ed : and byte ptr [rbp - 0x27], dh ; vzeroupper ; ret
0x00000000000c23d3 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xc23ef
0x00000000000c4d73 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xc4d8f
0x00000000000c7593 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xc75af
0x00000000000cee23 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xcee3f
0x000000000019a8db : and byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf
0x00000000000d4ac7 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d434d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000032d7f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008c74a : and byte ptr [rbx + rcx*4 + 0x6d], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000001902aa : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000002cca1 : and byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000054ef9 : and byte ptr [rcx + 0xfffffe2], al ; add byte ptr [rcx], cl ; ret 0x8f74
0x000000000006217c : and byte ptr [rcx + 9], cl ; ret
0x000000000009aae4 : and byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x18 ; call rax
0x000000000015073d : and byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000011ec97 : and byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r15 ; call r14
0x00000000000e2173 : and byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085dab : and byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000445f2 : and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000013b319 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0x00000000000e2bd1 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000013880b : and byte ptr [rcx - 0x16fbdbbc], cl ; retf
0x0000000000043a39 : and byte ptr [rcx - 0x77], cl ; ret 0x1c74
0x00000000000d9dd9 : and byte ptr [rcx - 0x77], cl ; ret 0xd889
0x0000000000057048 : and byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a29f4 : and byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000123d14 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e5de6 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000d449a : and byte ptr [rcx], al ; ret 0xfac1
0x00000000000de068 : and byte ptr [rcx], al ; retf 0xfac1
0x000000000018cd78 : and byte ptr [rcx], ch ; retf 0x3944
0x000000000018e4e8 : and byte ptr [rcx], ch ; retf 0x81eb
0x000000000018d7c8 : and byte ptr [rcx], ch ; retf 0x8ceb
0x000000000018c5d8 : and byte ptr [rcx], ch ; retf 0x9ceb
0x000000000015e35b : and byte ptr [rcx], cl ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000005e191 : and byte ptr [rcx], cl ; ret 0x9574
0x000000000004b301 : and byte ptr [rcx], cl ; retf 0x948
0x000000000009e925 : and byte ptr [rcx], dh ; imul al ; ret
0x0000000000094b17 : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010f574 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000befa5 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000371b9 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000119706 : and byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000014b87f : and byte ptr [rdi], cl ; retf 0x5089
0x00000000000d758f : and byte ptr [rdi], cl ; test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000bacf9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000010fe49 : and byte ptr [rdi], cl ; test ebp, edi ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000001940d0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000142bf5 : and byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000064c0d : and byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000015f743 : and byte ptr [rip - 0x76b40000], al ; loopne 0x15f795 ; pop rsp ; ret
0x0000000000190ada : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015ec3d : and byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0xf66
0x0000000000045e93 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xc35d
0x000000000012ef51 : and byte ptr [rsp + rcx + 0x5b], dh ; ret
0x00000000000d2cc2 : and ch, 0xf ; je 0xd2ce9 ; add rax, 2 ; ret
0x00000000000bf368 : and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000018ba9b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000187ea3 : and ch, al ; std ; xlatb ; ret
0x000000000018ca04 : and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000011b316 : and ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000d2cad : and cl, 0xf ; je 0xd2cd5 ; ret
0x000000000011fe3a : and cl, byte ptr [rax + 0x39] ; ret
0x000000000009f3cd : and cl, byte ptr [rax - 0x73] ; clc ; ret
0x00000000000a3d5e : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faa78 : and cl, byte ptr [rdi] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x000000000011c3a6 : and cl, byte ptr [rip + 0x415c4100] ; pop rbp ; ret
0x0000000000138736 : and cl, ch ; ret 0
0x000000000006484f : and cl, ch ; retf
0x00000000001133c9 : and cl, dh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000e5fed : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000006461f : and dh, dh ; ret 0x7450
0x0000000000099e47 : and dword ptr [rax + 0x39], ecx ; ret 0x840f
0x0000000000111b75 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000015d461 : and dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000001763de : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006f8fb : and dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000010fa3b : and dword ptr [rax], ecx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000013a766 : and dword ptr [rbp + 1], 0 ; add dh, dh ; ret 0xf04
0x000000000019c033 : and dword ptr [rbp + 5], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008adc0 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008ae1c : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000afa7e : and dword ptr [rcx - 0x77], ecx ; ret
0x00000000001224e8 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edx, 8 ; syscall
0x0000000000163f4a : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000054f9f : and dword ptr [rdi - 0x76b7ffea], esp ; ret 0xc148
0x0000000000091074 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000046ef4 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000008b5d7 : and dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000045e7e : and dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000154849 : and dword ptr [rsi + rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bab2b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000002b1ab : and dword ptr [rsp + rax], 0 ; add byte ptr [rax - 0x77], cl ; retf
0x000000000002753f : and eax, 0 ; ret
0x0000000000097f98 : and eax, 0x10 ; ret
0x0000000000116987 : and eax, 0x100f ; ret
0x0000000000111277 : and eax, 0x18 ; test eax, eax ; jne 0x111299 ; syscall
0x000000000004519e : and eax, 0x200 ; ret
0x0000000000027215 : and eax, 0x30 ; call rax
0x0000000000049bb0 : and eax, 0x30 ; call rdx
0x0000000000027524 : and eax, 0x30 ; jmp rax
0x00000000000e01c7 : and eax, 0x30 ; pop r13 ; pop r14 ; jmp rax
0x00000000000bf2ee : and eax, 0x3fc00 ; ret
0x00000000000bf3e8 : and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x00000000000bf339 : and eax, 0x3fffc00 ; ret
0x00000000000cbe22 : and eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000130c07 : and eax, 0x480005df ; cmove eax, edx ; ret
0x00000000001461f7 : and eax, 0x48000a95 ; test eax, eax ; jne 0x146211 ; ret
0x0000000000116d6e : and eax, 0x48c88944 ; add esp, 0x38 ; ret
0x000000000008a61a : and eax, 0x6e0f4866 ; ret
0x00000000000372e6 : and eax, 0x7f ; ret
0x00000000000bf3d1 : and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x00000000000bf387 : and eax, 0x7ff80000 ; ret
0x0000000000045568 : and eax, 0x80 ; ret
0x000000000008fe16 : and eax, 0x804 ; ret
0x000000000002e179 : and eax, 0x833fe283 ; retf 0x4180
0x0000000000114a47 : and eax, 0x89000d54 ; ret 0x8b64
0x0000000000142d80 : and eax, 0x8948ffee ; ret
0x00000000001090bd : and eax, 0xaab1e ; call 0x25357
0x00000000000979bb : and eax, 0xc ; cmp eax, 4 ; je 0x979cc ; ret
0x0000000000097b4b : and eax, 0xc ; pop rbx ; ret
0x000000000009e924 : and eax, 0xe8f63120 ; ret
0x0000000000105d44 : and eax, 0xf ; ret
0x00000000000a2844 : and eax, 0xf480001 ; ret 0xfc3
0x00000000000a3ac4 : and eax, 0xf48000d ; ret 0xfc3
0x000000000012209a : and eax, 0xfffff000 ; or eax, edx ; ret
0x0000000000132eda : and eax, 0xffffff ; ret
0x000000000011977f : and eax, 0xfffffff0 ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1197c2
0x000000000011995f : and eax, 0xfffffff0 ; mov r14, r8 ; mov rdx, r8 ; jmp 0x1199a0
0x000000000013e7a7 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009f3e1 : and eax, 1 ; cmovne rax, rdx ; ret
0x0000000000125dd0 : and eax, 1 ; mov eax, r8d ; ret
0x0000000000037276 : and eax, 1 ; ret
0x00000000000370f6 : and eax, 2 ; movzx eax, ax ; ret
0x0000000000058cdc : and eax, 2 ; sub eax, 1 ; ret
0x0000000000122ad3 : and eax, 3 ; ret
0x0000000000037196 : and eax, 4 ; movzx eax, ax ; ret
0x00000000000370b6 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000045898 : and eax, 8 ; ret
0x0000000000097fd1 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000176235 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cabc0 : and eax, dword ptr [rax] ; add dh, dh ; ret
0x0000000000116b89 : and eax, dword ptr [rcx + rcx*4 - 0x40] ; movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x0000000000122cf5 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000017bba9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000044ed3 : and eax, ecx ; ret
0x0000000000122113 : and eax, edi ; or rax, rsi ; ret
0x0000000000045253 : and eax, edx ; ret
0x0000000000045294 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000374c1 : and eax, esi ; ret
0x00000000000888e6 : and ebp, 0x8000 ; jne 0x888b7 ; jmp 0x8888a
0x000000000008adc1 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008ae1d : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097956 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x97969 ; ret
0x00000000000889b4 : and ebx, dword ptr [rbx + 0x4c] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000144cdd : and ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000004b086 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x0000000000192055 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000191788 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000119a47 : and ecx, 0xfffffff0 ; mov rdx, r9 ; jmp 0x119a7e
0x000000000002de5d : and ecx, dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000cc7c7 : and ecx, dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000001248f5 : and ecx, dword ptr [rax - 0x77] ; ret 0x2548
0x00000000000a7583 : and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x00000000000d320c : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000000989e5 : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a104 : and ecx, dword ptr [rcx + rcx*4 - 0x40] ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000011a73a : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x000000000011a7fa : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000018d807 : and ecx, ebp ; ret
0x00000000000372f6 : and edi, 0xffffff80 ; sete al ; ret
0x00000000001388d1 : and edx, 0xfffffff0 ; lea r8, [rbp - 0x78] ; call 0xe4b99
0x000000000008de03 : and edx, 1 ; mov eax, edx ; ret
0x000000000004537b : and edx, eax ; mov qword ptr [rdi], rdx ; ret
0x000000000004530c : and edx, eax ; movq xmm0, rdx ; ret
0x0000000000083203 : and edx, edi ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x00000000000456e0 : and esi, 0x80000000 ; mov dword ptr [rdi], esi ; ret
0x00000000000d7e33 : and esi, 0x80402000 ; call qword ptr [rax]
0x00000000001431e1 : and esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f1af : and esi, esi ; call 0x11bc94
0x0000000000163f49 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000046ef3 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000888e5 : and r13d, 0x8000 ; jne 0x888b8 ; jmp 0x8888b
0x000000000011995e : and r8, 0xfffffffffffffff0 ; mov r14, r8 ; mov rdx, r8 ; jmp 0x1199a1
0x0000000000125dcf : and r8d, 1 ; mov eax, r8d ; ret
0x0000000000119a46 : and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x119a7f
0x00000000000a2843 : and rax, 0xf480001 ; ret 0xfc3
0x0000000000122112 : and rax, rdi ; or rax, rsi ; ret
0x000000000004537a : and rdx, rax ; mov qword ptr [rdi], rdx ; ret
0x000000000004530b : and rdx, rax ; movq xmm0, rdx ; ret
0x00000000001431e0 : and rsi, r13 ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f1ae : and rsi, r14 ; call 0x11bc95
0x000000000004566f : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000004566c : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000314a7 : bnd jb 0x314bd ; mov r9, rsi ; mov r10, rcx ; jmp 0x31472
0x00000000000ab9e9 : bnd je 0xab9e3 ; ret
0x00000000000c1198 : bnd je 0xc11a6 ; test edx, edx ; jne 0xc1197 ; ret
0x00000000000af42a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000af340 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000187c71 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000af350 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000af360 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000af330 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000000af28f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b48c7 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000a3899 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00000000000b4dca : bsf eax, edx ; ret
0x00000000000d2917 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000000b4f22 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000b49e0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000000b4e12 : bsf rax, rdx ; ret
0x00000000000d2916 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000188060 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x00000000000af946 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x00000000000af776 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000187f4f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000af820 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000af830 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000af840 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x00000000000b4d7b : bsr eax, esi ; add rax, rdi ; ret
0x00000000000b4c89 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000000b4b85 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000000b4aea : bsr rax, rax ; add rax, rdi ; ret
0x00000000000b4d7a : bsr rax, rsi ; add rax, rdi ; ret
0x00000000000b4c88 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000000b4b84 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x0000000000153a4d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000132e96 : bswap eax ; ret
0x0000000000055d16 : call 0x102812
0x000000000010d7c6 : call 0x10a292
0x000000000010d7c5 : call 0x10a293
0x000000000010e85c : call 0x10b342
0x000000000007a5d6 : call 0x1107a5d8
0x000000000007a774 : call 0x1107a776
0x000000000007a7f2 : call 0x1107a7f4
0x000000000007abb5 : call 0x1107abb7
0x000000000007b146 : call 0x1107b148
0x0000000000115805 : call 0x111ab2
0x0000000000115a32 : call 0x111cf2
0x000000000013919f : call 0x115bf2
0x000000000009a337 : call 0x1165c2
0x0000000000039e83 : call 0x1168e2
0x000000000015f136 : call 0x11bb92
0x000000000009f1b1 : call 0x11bc92
0x00000000000624ba : call 0x1205aed1
0x000000000012def1 : call 0x12a1e2
0x000000000012dda7 : call 0x12a892
0x0000000000046af7 : call 0x132de2
0x0000000000108216 : call 0x144c82
0x0000000000150537 : call 0x14d002
0x000000000014a1d5 : call 0x156442
0x000000000005b597 : call 0x198012
0x0000000000119065 : call 0x25332
0x00000000000290dd : call 0x25352
0x00000000000e8907 : call 0x25353
0x00000000000f88ff : call 0x253a2
0x00000000000d9153 : call 0x253b2
0x0000000000088a12 : call 0x25422
0x0000000000088a11 : call 0x25423
0x0000000000049230 : call 0x25492
0x000000000003923b : call 0x254a2
0x0000000000048a2f : call 0x25502
0x00000000000d9312 : call 0x255a2
0x00000000000393b2 : call 0x255d2
0x0000000000039348 : call 0x25602
0x0000000000122183 : call 0x2e78ec75
0x000000000010a514 : call 0x36fc2
0x000000000014afbe : call 0x37a52
0x000000000003feed : call 0x3c122
0x000000000011fb0f : call 0x4bdf2
0x000000000005d115 : call 0x593b2
0x000000000007a6c2 : call 0x76932
0x000000000007e036 : call 0x8a272
0x0000000000132afe : call 0x8ed72
0x000000000013ae7c : call 0x978f2
0x000000000009beb2 : call 0x98102
0x000000000009c21f : call 0x98492
0x000000000009baab : call 0x984f2
0x000000000009cfb7 : call 0x99292
0x000000000009fa97 : call 0x9bca2
0x000000000009f7e0 : call 0x9c252
0x0000000000145f11 : call 0xa21d2
0x00000000000c0802 : call 0xcd2c2
0x0000000000114674 : call 0xe10c2
0x00000000001388d8 : call 0xe4b92
0x0000000000049ccd : call 0xe5fc2
0x00000000000ef15a : call 0xebb62
0x00000000000f4833 : call 0xf0ab2
0x00000000000f7713 : call 0xf3952
0x00000000000fb401 : call 0xf7e12
0x00000000000fc374 : call 0xf8da2
0x000000000010fecb : call 0xffffffff8b59c151
0x00000000000ba964 : call 0xffffffffc30ba974
0x0000000000125b80 : call 0xffffffffc3143c0c
0x0000000000125c10 : call 0xffffffffc3143c9c
0x0000000000125cb0 : call 0xffffffffc3143d3c
0x0000000000125d40 : call 0xffffffffc3143dcc
0x0000000000125e70 : call 0xffffffffc3143efc
0x0000000000125f10 : call 0xffffffffc3143f9c
0x0000000000125fb0 : call 0xffffffffc314403c
0x0000000000126050 : call 0xffffffffc31440dc
0x00000000001260e0 : call 0xffffffffc314416c
0x000000000012617b : call 0xffffffffc3144207
0x0000000000126210 : call 0xffffffffc314429c
0x000000000012640c : call 0xffffffffc3144498
0x0000000000126562 : call 0xffffffffc31445ee
0x00000000001265f2 : call 0xffffffffc314467e
0x0000000000126682 : call 0xffffffffc314470e
0x0000000000126702 : call 0xffffffffc314478e
0x0000000000126822 : call 0xffffffffc31448ae
0x00000000001268b2 : call 0xffffffffc314493e
0x0000000000126942 : call 0xffffffffc31449ce
0x00000000001269d2 : call 0xffffffffc3144a5e
0x0000000000126a62 : call 0xffffffffc3144aee
0x0000000000126aef : call 0xffffffffc3144b7b
0x0000000000126b72 : call 0xffffffffc3144bfe
0x0000000000126d4c : call 0xffffffffc3144dd8
0x0000000000122ad2 : call 0xffffffffc3160b5e
0x00000000000573f2 : call 0xffffffffc33ebbfc
0x000000000009c552 : call 0xffffffffc3430d5c
0x00000000001194b0 : call 0xffffffffc34adcba
0x00000000000aa933 : call 0xffffffffc38eb840
0x00000000000eb622 : call 0xffffffffc391fe2c
0x00000000000ed373 : call 0xffffffffc3921b7d
0x000000000019bc81 : call 0xffffffffc39d0589
0x000000000017e965 : call 0xffffffffc39df87e
0x000000000017f9e5 : call 0xffffffffc39e08fe
0x00000000000b9cc7 : call 0xffffffffc3dc2618
0x00000000000b9bd7 : call 0xffffffffc4042528
0x00000000000bcd17 : call 0xffffffffc4045668
0x000000000019a266 : call 0xffffffffcb3aeb9f
0x00000000000ba53d : call 0xffffffffcb91b486
0x00000000000889df : call 0xffffffffcbf39d73
0x00000000000e02c8 : call 0xfffffffff45ec5b7
0x0000000000131f1e : call qword ptr [rax - 0x3c0776b8]
0x00000000000453c6 : call qword ptr [rax - 0x3d]
0x0000000000067c9f : call qword ptr [rax]
0x0000000000049cc0 : call qword ptr [rbx]
0x000000000003dbc9 : call qword ptr [rcx]
0x000000000007e89a : call qword ptr [rdx]
0x00000000000b2ee2 : call qword ptr [rsi]
0x00000000001480c7 : call r10
0x00000000000285c7 : call r12
0x0000000000029627 : call r14
0x000000000002b476 : call r15
0x000000000004a2eb : call r8
0x000000000012f61f : call r9
0x00000000000271e1 : call rax
0x00000000000282cd : call rbx
0x00000000000a168e : call rcx
0x000000000002b477 : call rdi
0x0000000000033fa3 : call rdx
0x0000000000028d1e : call rsi
0x00000000000285c8 : call rsp
0x0000000000168077 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004dbc4 : cdq ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000091a3b : cdq ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000083c35 : cdq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x00000000000bfbe3 : cdq ; add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x00000000000cd1b5 : cdq ; add eax, 0x74db8500 ; sbb al, 0x39 ; ret
0x00000000000a29f3 : cdq ; and byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000004a658 : cdq ; idiv rsi ; ret
0x0000000000164263 : cdq ; or byte ptr [rax], al ; ret
0x000000000012ba09 : cdq ; out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000015fa53 : cdq ; ret
0x000000000013dbd3 : cdq ; ret 0xa
0x000000000018f82f : cdq ; vzeroupper ; ret
0x000000000004a606 : cdq ; xor eax, edx ; sub eax, edx ; ret
0x000000000004a618 : cdq ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000d8aa0 : clc ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x255a7
0x0000000000072e9c : clc ; add al, byte ptr [rcx - 9] ; ret
0x000000000013db3c : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001102ed : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000008c63c : clc ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000088d0e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000d2ab2 : clc ; add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x000000000005fe33 : clc ; add cl, ch ; ret 0xfff6
0x00000000000a77d5 : clc ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4105
0x0000000000159011 : clc ; add dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000043975 : clc ; add dword ptr [rbx - 0x7cb60030], eax ; ret
0x00000000000a8a93 : clc ; add dword ptr [rcx - 0x7c2de63f], ecx ; ret 0x8305
0x000000000011075f : clc ; add dword ptr [rdi + 0x2d], esi ; mov eax, 4 ; syscall
0x000000000011081f : clc ; add dword ptr [rdi + 0x2d], esi ; mov eax, 6 ; syscall
0x00000000001107be : clc ; add dword ptr [rdi + 0x2e], esi ; mov eax, 5 ; syscall
0x000000000011ae41 : clc ; add dword ptr [rdi + 1], edi ; ret
0x00000000000a5403 : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107241 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x000000000013e7a9 : clc ; add eax, 0x10 ; ret
0x000000000012ed7d : clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000014b9ce : clc ; add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000018812f : clc ; add rax, r8 ; vzeroupper ; ret
0x00000000000af117 : clc ; add rax, rcx ; ret
0x0000000000187a84 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000000af94b : clc ; add rax, rsi ; ret
0x00000000000372e5 : clc ; and eax, 0x7f ; ret
0x0000000000132ed9 : clc ; and eax, 0xffffff ; ret
0x0000000000132e95 : clc ; bswap eax ; ret
0x00000000000e1c37 : clc ; call rax
0x000000000004a605 : clc ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000058d31 : clc ; clc ; jne 0x58d27 ; mov rax, rdx ; ret
0x000000000013e789 : clc ; cmc ; je 0x13e785 ; pop rbx ; ret
0x0000000000191ff9 : clc ; cmp rcx, rax ; jne 0x19202b ; xor eax, eax ; ret
0x0000000000191ff8 : clc ; cmp rcx, rax ; jne 0x19202c ; xor eax, eax ; ret
0x0000000000192e39 : clc ; cmp rcx, rax ; jne 0x192e6b ; xor eax, eax ; ret
0x0000000000192e38 : clc ; cmp rcx, rax ; jne 0x192e6c ; xor eax, eax ; ret
0x000000000004a656 : clc ; cqo ; idiv rsi ; ret
0x000000000004a616 : clc ; cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000130c70 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009fd74 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000130e6e : clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000078dca : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ce91b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000561d5 : clc ; dec dword ptr [rdi] ; ret 0x8b48
0x0000000000163fc3 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x0000000000077f72 : clc ; idiv bh ; call qword ptr [rax]
0x000000000007908b : clc ; idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000007eaaf : clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x000000000007f229 : clc ; idiv bh ; inc dword ptr [rcx] ; retf
0x000000000007d8dc : clc ; idiv bh ; inc esi ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000018e86d : clc ; ja 0x18e83b ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000013eccd : clc ; jae 0x13eceb ; mov eax, 0xffffffff ; ret
0x000000000005e48f : clc ; jae 0x5e447 ; mov rax, r10 ; pop rbx ; ret
0x0000000000110b58 : clc ; je 0x110b67 ; mov eax, r9d ; ret
0x00000000001229b9 : clc ; je 0x1229fb ; mov eax, r8d ; ret
0x00000000000676f8 : clc ; jmp rax
0x0000000000195faa : clc ; jne 0x1960b7 ; ret
0x0000000000195fa9 : clc ; jne 0x1960b8 ; ret
0x0000000000058d32 : clc ; jne 0x58d26 ; mov rax, rdx ; ret
0x00000000000a3b1c : clc ; lcall [rbp + 0x31] ; rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x00000000000a1ab2 : clc ; lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000a2587 : clc ; lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000018e7ff : clc ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000e651b : clc ; leave ; ret
0x00000000000d8b1a : clc ; mov al, 0 ; add byte ptr [rax], al ; call 0x255a7
0x000000000018cf1f : clc ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x000000000011a085 : clc ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000016add7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016b747 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001706c7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b947 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170637 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016bb47 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001705a7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016adf3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bf222 : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000018f121 : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000193000 : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000bedee : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000006c3ab : clc ; mov r12, r14 ; jmp 0x68dee
0x000000000005e79b : clc ; or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x0000000000132ef3 : clc ; or eax, esi ; bswap eax ; ret
0x0000000000122114 : clc ; or rax, rsi ; ret
0x000000000012a821 : clc ; out 8, al ; add byte ptr [rax + 0x29], cl ; retf 0xd3e8
0x0000000000140d7b : clc ; pcmpeqd mm3, qword ptr [rip + 0x3948c289] ; retf 0x1677
0x0000000000098862 : clc ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000000ac0be : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ab04 : clc ; push qword ptr [rax + rbx*8 - 0x77] ; ret 0xc085
0x000000000006600f : clc ; push qword ptr [rbp + rcx + 0x44] ; mov eax, eax ; ret
0x00000000001568b9 : clc ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000e7df6 : clc ; push rbx ; pop rax ; jne 0xe7e07 ; ret
0x000000000004a641 : clc ; ret
0x0000000000045422 : clc ; retf
0x0000000000132ea5 : clc ; rol ax, 8 ; ret
0x00000000001887c4 : clc ; rol ch, 1 ; jns 0x1887a5 ; retf 0xead3
0x0000000000188914 : clc ; rol ch, 1 ; jns 0x1888f5 ; retf 0xead3
0x0000000000188a64 : clc ; rol ch, 1 ; jns 0x188a45 ; retf 0xead3
0x0000000000188bb4 : clc ; rol ch, 1 ; jns 0x188b95 ; retf 0xead3
0x0000000000188d04 : clc ; rol ch, 1 ; jns 0x188ce5 ; retf 0xead3
0x0000000000188e54 : clc ; rol ch, 1 ; jns 0x188e35 ; retf 0xead3
0x0000000000188fa4 : clc ; rol ch, 1 ; jns 0x188f85 ; retf 0xead3
0x00000000001890f4 : clc ; rol ch, 1 ; jns 0x1890d5 ; retf 0xead3
0x0000000000189244 : clc ; rol ch, 1 ; jns 0x189225 ; retf 0xead3
0x0000000000189394 : clc ; rol ch, 1 ; jns 0x189375 ; retf 0xead3
0x00000000001894e4 : clc ; rol ch, 1 ; jns 0x1894c5 ; retf 0xead3
0x0000000000189634 : clc ; rol ch, 1 ; jns 0x189615 ; retf 0xead3
0x0000000000189784 : clc ; rol ch, 1 ; jns 0x189765 ; retf 0xead3
0x00000000001898d4 : clc ; rol ch, 1 ; jns 0x1898b5 ; retf 0xead3
0x0000000000189a24 : clc ; rol ch, 1 ; jns 0x189a05 ; retf 0xead3
0x0000000000189ea4 : clc ; rol ch, 1 ; jns 0x189e85 ; retf 0xead3
0x000000000018a024 : clc ; rol ch, 1 ; jns 0x18a005 ; retf 0xead3
0x000000000018a1a4 : clc ; rol ch, 1 ; jns 0x18a185 ; retf 0xead3
0x000000000018a324 : clc ; rol ch, 1 ; jns 0x18a305 ; retf 0xead3
0x000000000018a4a4 : clc ; rol ch, 1 ; jns 0x18a485 ; retf 0xead3
0x000000000018a624 : clc ; rol ch, 1 ; jns 0x18a605 ; retf 0xead3
0x000000000018a7a4 : clc ; rol ch, 1 ; jns 0x18a785 ; retf 0xead3
0x000000000018a924 : clc ; rol ch, 1 ; jns 0x18a905 ; retf 0xead3
0x000000000018aaa4 : clc ; rol ch, 1 ; jns 0x18aa85 ; retf 0xead3
0x000000000018ac24 : clc ; rol ch, 1 ; jns 0x18ac05 ; retf 0xead3
0x000000000018ada4 : clc ; rol ch, 1 ; jns 0x18ad85 ; retf 0xead3
0x000000000018af24 : clc ; rol ch, 1 ; jns 0x18af05 ; retf 0xead3
0x000000000018b0a4 : clc ; rol ch, 1 ; jns 0x18b085 ; retf 0xead3
0x000000000018b224 : clc ; rol ch, 1 ; jns 0x18b205 ; retf 0xead3
0x000000000018b3a4 : clc ; rol ch, 1 ; jns 0x18b385 ; retf 0xead3
0x0000000000132d5f : clc ; sar rax, 6 ; ret
0x00000000000ecde5 : clc ; sbb byte ptr [rcx], bh ; ret
0x00000000000d3209 : clc ; sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x00000000000594ba : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000132f69 : clc ; shr eax, 0x18 ; ret
0x00000000000d2a2f : clc ; shr rax, 2 ; ret
0x00000000000332fb : clc ; std ; je 0x3331d ; pop rbx ; ret
0x000000000018bcb6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000033f9d : clc ; test rdx, rdx ; je 0x33fab ; call rdx
0x0000000000187bfb : clc ; vzeroupper ; ret
0x00000000000e7eca : cld ; add byte ptr [rax], al ; ret
0x00000000000bf2f0 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000142944 : cld ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001960a2 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1960b8 ; xor eax, eax ; ret
0x00000000001960a1 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1960b9 ; xor eax, eax ; ret
0x0000000000114677 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000573a1 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000d5cee : cld ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000005e24e : cld ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000100f6a : cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000450db : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000e6dc0 : cld ; in eax, 0xf3 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000bf3ea : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bf33b : cld ; inc dword ptr [rbx] ; ret
0x00000000000ab702 : cld ; jmp 0xa793e
0x0000000000192c46 : cld ; jne 0x192e7f ; xor eax, eax ; ret
0x00000000001960a5 : cld ; jne 0x1960b5 ; xor eax, eax ; ret
0x00000000001960a4 : cld ; jne 0x1960b6 ; xor eax, eax ; ret
0x0000000000195fc5 : cld ; jne 0x1960b7 ; ret
0x0000000000195fc4 : cld ; jne 0x1960b8 ; ret
0x000000000018e7dd : cld ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x000000000018cefd : cld ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x00000000000ab6fd : cld ; mov dword ptr [r9 + rdi - 4], r10d ; jmp 0xa7943
0x000000000016b562 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b765 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b965 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016bb65 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bf22a : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000018f12c : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000193012 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000bedfc : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000bedf6 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015a769 : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x000000000016b196 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170856 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b376 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001707d6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b556 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170756 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016afb6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001708d6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a4d16 : cld ; or byte ptr [rax + 0xf], cl ; ret
0x00000000000d602b : cld ; push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000bed3f : cld ; ret
0x00000000000c3000 : cld ; ret 0xf
0x00000000000a0fe0 : cld ; retf
0x000000000007474a : cld ; retf 0xffff
0x0000000000055cb4 : cld ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000018daad : cld ; vzeroupper ; ret
0x00000000000a8158 : cld ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000d41bb : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000000bffe2 : cli ; add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x00000000001103c7 : cli ; add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000e7c91 : cli ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x00000000000d7aed : cli ; add ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000dc233 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000dc3db : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000008c47c : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000ed292 : cli ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000140dc6 : cli ; add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000000bf215 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xbf225 ; mov byte ptr [rdi], cl ; ret
0x000000000015ab23 : cli ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000054412 : cli ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2040
0x00000000001936ff : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000193030 : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000004dc0a : cli ; add eax, 0x63485374 ; retf
0x00000000000cc655 : cli ; add eax, 0x89490000 ; ret
0x00000000000cdab0 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000cdb04 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000110643 : cli ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000142bf4 : cli ; and byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000011b315 : cli ; and ch, byte ptr [rcx] ; retf 0xc8d
0x0000000000091073 : cli ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000011a7f9 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000000e803b : cli ; cmc ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000000e0103 : cli ; cmp esi, 1 ; je 0xe0118 ; xor eax, eax ; ret
0x0000000000095023 : cli ; cmp qword ptr [rdi + 0x38], 0 ; je 0x95038 ; ret
0x0000000000131b13 : cli ; cmp rdx, rcx ; ja 0x131b4c ; xor eax, eax ; syscall
0x00000000000a7138 : cli ; dec dword ptr [rax + 0xf] ; shr ebx, 1 ; retf 0x3948
0x000000000007e773 : cli ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000007f895 : cli ; dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x000000000007cdfc : cli ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000083204 : cli ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x0000000000081b61 : cli ; emms ; jrcxz 0x81b54 ; ret
0x00000000000bf30f : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x0000000000084fc2 : cli ; inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018ec2d : cli ; jg 0x18ec40 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018f116 : cli ; jg 0x18f126 ; vzeroupper ; ret
0x0000000000192feb : cli ; jg 0x192ffe ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001936ca : cli ; jg 0x1936dc ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001939d5 : cli ; jg 0x1939e8 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000193fec : cli ; jg 0x193ffc ; vzeroupper ; ret
0x0000000000043cc3 : cli ; jmp r10
0x0000000000043b95 : cli ; jmp rdx
0x00000000000272d3 : cli ; lea rax, [rip + 0x18ec2c] ; ret
0x00000000000272e3 : cli ; lea rax, [rip + 0x190a9f] ; ret
0x0000000000154df2 : cli ; lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; syscall
0x00000000000abc44 : cli ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abd0c : cli ; mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000abb7f : cli ; mov byte ptr [rdi + 2], dl ; ret
0x000000000010fa03 : cli ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000016b968 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000117683 : cli ; mov eax, 0x10 ; syscall
0x0000000000110f33 : cli ; mov eax, 0x102 ; syscall
0x0000000000112fa3 : cli ; mov eax, 0x107 ; syscall
0x0000000000112ee3 : cli ; mov eax, 0x10a ; syscall
0x0000000000123023 : cli ; mov eax, 0x110 ; syscall
0x0000000000123083 : cli ; mov eax, 0x11b ; syscall
0x00000000001230e3 : cli ; mov eax, 0x11f ; syscall
0x0000000000122523 : cli ; mov eax, 0x122 ; syscall
0x0000000000122cf3 : cli ; mov eax, 0x123 ; syscall
0x0000000000111ba3 : cli ; mov eax, 0x124 ; syscall
0x0000000000111c03 : cli ; mov eax, 0x125 ; syscall
0x0000000000122e13 : cli ; mov eax, 0x126 ; syscall
0x0000000000123113 : cli ; mov eax, 0x12c ; syscall
0x0000000000122c33 : cli ; mov eax, 0x131 ; syscall
0x00000000001185c3 : cli ; mov eax, 0x132 ; syscall
0x0000000000123173 : cli ; mov eax, 0x134 ; syscall
0x0000000000123203 : cli ; mov eax, 0x13f ; syscall
0x0000000000123233 : cli ; mov eax, 0x14a ; syscall
0x0000000000123263 : cli ; mov eax, 0x14b ; syscall
0x00000000001113e3 : cli ; mov eax, 0x15 ; syscall
0x0000000000111bd3 : cli ; mov eax, 0x16 ; syscall
0x0000000000098053 : cli ; mov eax, 0x18 ; syscall
0x000000000011bcc3 : cli ; mov eax, 0x1b ; syscall
0x000000000011bc93 : cli ; mov eax, 0x1c ; syscall
0x0000000000124313 : cli ; mov eax, 0x1e ; syscall
0x00000000001243b3 : cli ; mov eax, 0x1f ; syscall
0x0000000000111b43 : cli ; mov eax, 0x20 ; syscall
0x0000000000111b73 : cli ; mov eax, 0x21 ; syscall
0x00000000001168b3 : cli ; mov eax, 0x22 ; syscall
0x0000000000116733 : cli ; mov eax, 0x23 ; syscall
0x00000000000d7273 : cli ; mov eax, 0x24 ; syscall
0x00000000000e5bf3 : cli ; mov eax, 0x25 ; syscall
0x00000000000d72a3 : cli ; mov eax, 0x26 ; syscall
0x00000000000e6f73 : cli ; mov eax, 0x27 ; syscall
0x00000000001239d3 : cli ; mov eax, 0x29 ; syscall
0x00000000001239a3 : cli ; mov eax, 0x30 ; syscall
0x0000000000123393 : cli ; mov eax, 0x31 ; syscall
0x00000000001234f3 : cli ; mov eax, 0x32 ; syscall
0x0000000000123493 : cli ; mov eax, 0x33 ; syscall
0x0000000000123463 : cli ; mov eax, 0x34 ; syscall
0x00000000000e6023 : cli ; mov eax, 0x3b ; syscall
0x00000000000466e3 : cli ; mov eax, 0x3e ; syscall
0x00000000000e5913 : cli ; mov eax, 0x3f ; syscall
0x0000000000124203 : cli ; mov eax, 0x40 ; syscall
0x00000000001241d3 : cli ; mov eax, 0x41 ; syscall
0x0000000000124343 : cli ; mov eax, 0x43 ; syscall
0x0000000000124173 : cli ; mov eax, 0x44 ; syscall
0x00000000001241a3 : cli ; mov eax, 0x47 ; syscall
0x0000000000111823 : cli ; mov eax, 0x49 ; syscall
0x0000000000119ef3 : cli ; mov eax, 0x4c ; syscall
0x0000000000119f23 : cli ; mov eax, 0x4d ; syscall
0x0000000000111cc3 : cli ; mov eax, 0x50 ; syscall
0x0000000000111cf3 : cli ; mov eax, 0x51 ; syscall
0x0000000000065f83 : cli ; mov eax, 0x52 ; syscall
0x0000000000110f03 : cli ; mov eax, 0x53 ; syscall
0x0000000000112fd3 : cli ; mov eax, 0x54 ; syscall
0x0000000000112e53 : cli ; mov eax, 0x56 ; syscall
0x0000000000112f73 : cli ; mov eax, 0x57 ; syscall
0x0000000000112eb3 : cli ; mov eax, 0x58 ; syscall
0x0000000000112f13 : cli ; mov eax, 0x59 ; syscall
0x0000000000110e13 : cli ; mov eax, 0x5a ; syscall
0x0000000000110e43 : cli ; mov eax, 0x5b ; syscall
0x0000000000112603 : cli ; mov eax, 0x5c ; syscall
0x0000000000112633 : cli ; mov eax, 0x5d ; syscall
0x0000000000112663 : cli ; mov eax, 0x5e ; syscall
0x0000000000110e03 : cli ; mov eax, 0x5f ; syscall
0x00000000000d4063 : cli ; mov eax, 0x60 ; syscall
0x00000000001170c3 : cli ; mov eax, 0x62 ; syscall
0x0000000000122ff3 : cli ; mov eax, 0x63 ; syscall
0x00000000000e5943 : cli ; mov eax, 0x64 ; syscall
0x00000000000e6f93 : cli ; mov eax, 0x66 ; syscall
0x0000000000122e73 : cli ; mov eax, 0x67 ; syscall
0x00000000000e6fb3 : cli ; mov eax, 0x68 ; syscall
0x00000000000e6fa3 : cli ; mov eax, 0x6b ; syscall
0x00000000000e6fc3 : cli ; mov eax, 0x6c ; syscall
0x00000000000e7253 : cli ; mov eax, 0x6d ; syscall
0x00000000000e6f83 : cli ; mov eax, 0x6e ; syscall
0x00000000000e7283 : cli ; mov eax, 0x6f ; syscall
0x00000000000e72e3 : cli ; mov eax, 0x70 ; syscall
0x00000000000e6fd3 : cli ; mov eax, 0x73 ; syscall
0x00000000000e7313 : cli ; mov eax, 0x76 ; syscall
0x00000000000e7343 : cli ; mov eax, 0x78 ; syscall
0x00000000000e7223 : cli ; mov eax, 0x79 ; syscall
0x00000000001223c3 : cli ; mov eax, 0x7a ; syscall
0x00000000001223f3 : cli ; mov eax, 0x7b ; syscall
0x00000000000e72b3 : cli ; mov eax, 0x7c ; syscall
0x0000000000122bd3 : cli ; mov eax, 0x7d ; syscall
0x0000000000122c03 : cli ; mov eax, 0x7e ; syscall
0x0000000000046cd3 : cli ; mov eax, 0x83 ; syscall
0x0000000000110683 : cli ; mov eax, 0x84 ; syscall
0x0000000000123053 : cli ; mov eax, 0x86 ; syscall
0x00000000001225e3 : cli ; mov eax, 0x87 ; syscall
0x0000000000110cb3 : cli ; mov eax, 0x89 ; syscall
0x0000000000110ce3 : cli ; mov eax, 0x8a ; syscall
0x0000000000117483 : cli ; mov eax, 0x8c ; syscall
0x00000000001174c3 : cli ; mov eax, 0x8d ; syscall
0x0000000000105903 : cli ; mov eax, 0x8e ; syscall
0x0000000000105933 : cli ; mov eax, 0x8f ; syscall
0x0000000000105963 : cli ; mov eax, 0x90 ; syscall
0x0000000000105993 : cli ; mov eax, 0x91 ; syscall
0x00000000001059f3 : cli ; mov eax, 0x92 ; syscall
0x0000000000105a23 : cli ; mov eax, 0x93 ; syscall
0x0000000000105a53 : cli ; mov eax, 0x94 ; syscall
0x000000000011bd23 : cli ; mov eax, 0x95 ; syscall
0x000000000011bd53 : cli ; mov eax, 0x96 ; syscall
0x000000000011bd83 : cli ; mov eax, 0x97 ; syscall
0x000000000011bdb3 : cli ; mov eax, 0x98 ; syscall
0x0000000000118903 : cli ; mov eax, 0x99 ; syscall
0x0000000000122b33 : cli ; mov eax, 0x9a ; syscall
0x0000000000122f33 : cli ; mov eax, 0x9b ; syscall
0x0000000000122b03 : cli ; mov eax, 0x9e ; syscall
0x0000000000122ba3 : cli ; mov eax, 0x9f ; syscall
0x000000000011bbc3 : cli ; mov eax, 0xa ; syscall
0x0000000000118443 : cli ; mov eax, 0xa1 ; syscall
0x0000000000118503 : cli ; mov eax, 0xa2 ; syscall
0x0000000000118413 : cli ; mov eax, 0xa3 ; syscall
0x00000000000d4143 : cli ; mov eax, 0xa4 ; syscall
0x0000000000122363 : cli ; mov eax, 0xa6 ; syscall
0x0000000000118933 : cli ; mov eax, 0xa7 ; syscall
0x0000000000118963 : cli ; mov eax, 0xa8 ; syscall
0x00000000001180c3 : cli ; mov eax, 0xaa ; syscall
0x0000000000118213 : cli ; mov eax, 0xab ; syscall
0x0000000000122223 : cli ; mov eax, 0xac ; syscall
0x00000000001221f3 : cli ; mov eax, 0xad ; syscall
0x0000000000122c63 : cli ; mov eax, 0xae ; syscall
0x000000000011bb93 : cli ; mov eax, 0xb ; syscall
0x0000000000122c93 : cli ; mov eax, 0xb0 ; syscall
0x0000000000122d53 : cli ; mov eax, 0xb1 ; syscall
0x0000000000122f03 : cli ; mov eax, 0xb4 ; syscall
0x0000000000123293 : cli ; mov eax, 0xba ; syscall
0x0000000000122393 : cli ; mov eax, 0xbb ; syscall
0x0000000000117563 : cli ; mov eax, 0xc ; syscall
0x0000000000120093 : cli ; mov eax, 0xc2 ; syscall
0x00000000001200f3 : cli ; mov eax, 0xc3 ; syscall
0x000000000011ffd3 : cli ; mov eax, 0xc4 ; syscall
0x0000000000120183 : cli ; mov eax, 0xc5 ; syscall
0x0000000000120123 : cli ; mov eax, 0xc6 ; syscall
0x0000000000120003 : cli ; mov eax, 0xc7 ; syscall
0x00000000000d3fa3 : cli ; mov eax, 0xc9 ; syscall
0x0000000000105af3 : cli ; mov eax, 0xcb ; syscall
0x0000000000122cc3 : cli ; mov eax, 0xd5 ; syscall
0x0000000000122b63 : cli ; mov eax, 0xe4 ; syscall
0x00000000001300e3 : cli ; mov eax, 0xe5 ; syscall
0x00000000001232a3 : cli ; mov eax, 0xea ; syscall
0x0000000000119cd3 : cli ; mov eax, 0xeb ; syscall
0x0000000000122de3 : cli ; mov eax, 0xfd ; syscall
0x0000000000122db3 : cli ; mov eax, 0xfe ; syscall
0x0000000000122e43 : cli ; mov eax, 0xff ; syscall
0x000000000004ad03 : cli ; mov eax, 0xffffffff ; ret
0x00000000001494d3 : cli ; mov eax, 1 ; ret
0x0000000000116953 : cli ; mov eax, 1 ; syscall
0x000000000014bd03 : cli ; mov eax, 2 ; ret
0x00000000001165c3 : cli ; mov eax, 3 ; syscall
0x00000000001113b3 : cli ; mov eax, 8 ; syscall
0x0000000000096703 : cli ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000015ab33 : cli ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010f9f3 : cli ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000116983 : cli ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008fe43 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008fe13 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000e10b3 : cli ; mov eax, dword ptr [rdi] ; ret
0x0000000000091083 : cli ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000091093 : cli ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000473b3 : cli ; mov eax, dword ptr [rip + 0x1a2dee] ; ret
0x00000000000473a3 : cli ; mov eax, dword ptr [rip + 0x1a2e02] ; ret
0x00000000000372e3 : cli ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000132e93 : cli ; mov eax, edi ; bswap eax ; ret
0x000000000004a603 : cli ; mov eax, edi ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000132ea3 : cli ; mov eax, edi ; rol ax, 8 ; ret
0x000000000013d963 : cli ; mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x0000000000112693 : cli ; mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000065fb3 : cli ; mov r10, rcx ; mov eax, 0x108 ; syscall
0x0000000000112e83 : cli ; mov r10, rcx ; mov eax, 0x109 ; syscall
0x0000000000112f43 : cli ; mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000001230b3 : cli ; mov r10, rcx ; mov eax, 0x11e ; syscall
0x0000000000122b73 : cli ; mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000001225b3 : cli ; mov r10, rcx ; mov eax, 0x12e ; syscall
0x0000000000123143 : cli ; mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000001231a3 : cli ; mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000001231d3 : cli ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x0000000000122ed3 : cli ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000116243 : cli ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x0000000000123a03 : cli ; mov r10, rcx ; mov eax, 0x35 ; syscall
0x0000000000123973 : cli ; mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000001234c3 : cli ; mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000e5b03 : cli ; mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000122f63 : cli ; mov r10, rcx ; mov eax, 0x9d ; syscall
0x0000000000122ea3 : cli ; mov r10, rcx ; mov eax, 0xa5 ; syscall
0x0000000000122d83 : cli ; mov r10, rcx ; mov eax, 0xaf ; syscall
0x0000000000122f93 : cli ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x0000000000122fc3 : cli ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x00000000001201b3 : cli ; mov r10, rcx ; mov eax, 0xbc ; syscall
0x0000000000120153 : cli ; mov r10, rcx ; mov eax, 0xbd ; syscall
0x0000000000120033 : cli ; mov r10, rcx ; mov eax, 0xbe ; syscall
0x0000000000120063 : cli ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000001200c3 : cli ; mov r10, rcx ; mov eax, 0xc0 ; syscall
0x000000000011ffa3 : cli ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000011bcf3 : cli ; mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000001242d3 : cli ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x0000000000122d23 : cli ; mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000110b33 : cli ; mov r10d, ecx ; mov eax, 0x14c ; syscall
0x0000000000115d83 : cli ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x0000000000095a93 : cli ; mov rax, -1 ; ret
0x000000000015a6b3 : cli ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1063 : cli ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000969f3 : cli ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000969d3 : cli ; mov rax, qword ptr [rip + 0x154bc5] ; ret
0x0000000000032af3 : cli ; mov rax, qword ptr [rip + 0x1b9b4d] ; ret
0x0000000000029133 : cli ; mov rax, qword ptr [rip + 0x1c6d7d] ; ret
0x0000000000029123 : cli ; mov rax, qword ptr [rip + 0x1c6d9d] ; ret
0x000000000004a653 : cli ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000096a03 : cli ; mov rax, rdi ; ret
0x00000000000a0b8c : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000137cef : cli ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x0000000000045e03 : cli ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000012f84c : cli ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000010f9c3 : cli ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000afa99 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000003629a : cli ; or al, 0x74 ; cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000000001586a7 : cli ; or al, 6 ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000182656 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002f2c6 : cli ; or byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000013a763 : cli ; or byte ptr [rdi], cl ; and dword ptr [rbp + 1], 0 ; add dh, dh ; ret 0xf04
0x0000000000145d5f : cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000145222 : cli ; or cl, byte ptr [rax + 0xf] ; retf 0xe8c0
0x00000000000a24b3 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x00000000000a2462 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x0000000000142bfa : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd308
0x0000000000045893 : cli ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000005e54e : cli ; pop rbx ; cmovb r10, rdi ; mov rax, r10 ; ret
0x00000000000e5f83 : cli ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000000fb45b : cli ; push qword ptr [rdi + rax + 1] ; retf 0x4801
0x000000000014a1d3 : cli ; push rbp ; call 0x156444
0x0000000000129532 : cli ; push rbp ; or al, 0 ; syscall
0x00000000000e8057 : cli ; push rsp ; push rbx ; setne al ; ret
0x00000000000bf136 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000026f63 : cli ; ret
0x000000000003f622 : cli ; retf 0xffff
0x0000000000097333 : cli ; setae al ; ret
0x00000000000659bd : cli ; sti ; dec dword ptr [rax - 0x77] ; ret 0x12eb
0x00000000000d7366 : cli ; sub byte ptr [rdi + rcx*4 + 2], bl ; jbe 0xd7377 ; ret
0x00000000000bf123 : cli ; test rdx, rdx ; jne 0xbf136 ; mov rax, rdi ; ret
0x00000000000b4f33 : cli ; test rsi, rsi ; jne 0xb4f46 ; xor rax, rax ; ret
0x00000000000d2873 : cli ; test rsi, rsi ; jne 0xd2886 ; xor rax, rax ; ret
0x00000000000e4512 : cli ; wait ; adc byte ptr [rax], al ; syscall
0x00000000000372f3 : cli ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000097fb3 : cli ; xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x0000000000095a13 : cli ; xor eax, eax ; ret
0x00000000001168e3 : cli ; xor eax, eax ; syscall
0x000000000008fe23 : cli ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008fe33 : cli ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000093a43 : cli ; xor eax, eax ; test rdx, rdx ; jne 0x93a58 ; ret
0x0000000000124373 : cli ; xor r10d, r10d ; mov eax, 0x1d ; syscall
0x0000000000116913 : cli ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x000000000019729f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000186bc8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000093517 : cmc ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000014c2d8 : cmc ; dec dword ptr [rax - 0x77] ; and al, 0x10 ; mov rdx, rax ; jmp 0x14c27b
0x0000000000142945 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d2aa8 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000012a62f : cmc ; dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xeb ; retf 0xf66
0x000000000013e78a : cmc ; je 0x13e784 ; pop rbx ; ret
0x00000000000e803c : cmc ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000001707da : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b1ee : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000049cca : cmc ; mov edi, ebp ; call 0xe5fc5
0x00000000001955b3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000010e3f7 : cmc ; retf
0x0000000000055d17 : cmc ; retf 0xa
0x000000000006e280 : cmc ; retf 0xffff
0x00000000000da200 : cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000000da1fb : cmc ; sub byte ptr [rdi + rcx*4 - 0x3e], bl ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000001955b7 : cmc ; sub eax, edx ; ret
0x000000000013021c : cmova eax, edx ; add rsp, 0x28 ; ret
0x0000000000115d9c : cmova eax, edx ; ret
0x00000000000e1081 : cmova edx, eax ; mov eax, 0xd9 ; syscall
0x00000000000e1080 : cmova rdx, rax ; mov eax, 0xd9 ; syscall
0x000000000009703d : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000015880b : cmovae eax, edx ; jmp 0x1587a5
0x000000000015880a : cmovae eax, r10d ; jmp 0x1587a6
0x000000000009703c : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000123f70 : cmovb eax, edx ; ret
0x000000000005e551 : cmovb edx, edi ; mov rax, r10 ; ret
0x000000000005e550 : cmovb r10, rdi ; mov rax, r10 ; ret
0x0000000000123f6f : cmovb rax, rdx ; ret
0x00000000000a253d : cmovbe eax, edx ; ret
0x0000000000105a99 : cmovbe esi, eax ; syscall
0x0000000000105a98 : cmovbe rsi, r8 ; syscall
0x00000000000d2ab8 : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001189ee : cmove eax, ebx ; pop rbx ; ret
0x00000000000bf315 : cmove eax, ecx ; ret
0x00000000000a389c : cmove eax, edx ; add eax, 1 ; ret
0x00000000000d4035 : cmove eax, edx ; add rsp, 0x28 ; ret
0x000000000009fd77 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000004bfb8 : cmove eax, edx ; jmp 0x4bfd2
0x0000000000036c6f : cmove eax, edx ; ret
0x00000000001189ed : cmove rax, rbx ; pop rbx ; ret
0x00000000000bf314 : cmove rax, rcx ; ret
0x00000000000a38bd : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000d4034 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000009fd76 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000004bfb7 : cmove rax, rdx ; jmp 0x4bfd3
0x0000000000036c6e : cmove rax, rdx ; ret
0x0000000000089ebb : cmovg eax, ecx ; test rdx, rdx ; jne 0x89eb8 ; ret
0x0000000000094883 : cmovg eax, ecx ; test rdx, rdx ; jne 0x94880 ; ret
0x00000000000d2376 : cmovg ecx, eax ; mov eax, r9d ; ret
0x00000000000d2375 : cmovg r9d, eax ; mov eax, r9d ; ret
0x0000000000089eba : cmovg rax, rcx ; test rdx, rdx ; jne 0x89eb9 ; ret
0x0000000000094882 : cmovg rax, rcx ; test rdx, rdx ; jne 0x94881 ; ret
0x0000000000131e50 : cmovl ecx, dword ptr [rcx + 0x415d5be0] ; pop rsp ; ret
0x000000000014db84 : cmovl ecx, dword ptr [rcx] ; ror byte ptr [rcx - 0x77], cl ; ret 0xc149
0x00000000000d2354 : cmovl ecx, eax ; mov eax, r9d ; ret
0x00000000000d2353 : cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000000a5a7b : cmovne eax, eax ; mov rax, r8 ; ret
0x000000000008d7e5 : cmovne eax, ecx ; ret
0x00000000000a51d7 : cmovne eax, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a5e1e : cmovne eax, edi ; ret
0x000000000015f79a : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000009f3e5 : cmovne eax, edx ; ret
0x000000000018b634 : cmovne eax, edx ; vzeroupper ; ret
0x000000000012c643 : cmovne eax, esi ; ret
0x000000000008ff20 : cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a5a7a : cmovne r8, rax ; mov rax, r8 ; ret
0x000000000008d7e4 : cmovne rax, rcx ; ret
0x00000000000a5e1d : cmovne rax, rdi ; ret
0x000000000015f799 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000009f3e4 : cmovne rax, rdx ; ret
0x000000000018b633 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000012ac71 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000002be96 : cmovns eax, dword ptr [rbx + 0x394804c7] ; ret 0x2074
0x00000000000e8b1d : cmovns eax, dword ptr [rbx + 0x394810c1] ; ret
0x00000000000a8742 : cmovns eax, dword ptr [rbx + 0x394c01c1] ; retf 0xed75
0x000000000007bcbe : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret
0x000000000008088f : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret 0x8d48
0x0000000000119a45 : cmovns eax, dword ptr [rbx - 0x76b30f1f] ; retf 0x2aeb
0x000000000015c7c6 : cmovns eax, dword ptr [rcx] ; retf 0x8948
0x000000000011749c : cmovns eax, edx ; ret
0x000000000012ac70 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000af0dc : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000082420 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret
0x000000000014a7b8 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x00000000000ead8c : cmovs eax, dword ptr [rbx - 0x76b70f1f] ; retf
0x0000000000107451 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; ret
0x00000000000af610 : cmovs eax, dword ptr [rbx - 0x7cb7ef39] ; ret 0x4810
0x000000000002a880 : cmovs eax, edx ; ret
0x00000000000feed3 : cmovs ebp, dword ptr [rcx] ; ret 0x8348
0x00000000000589f7 : cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x0000000000099b65 : cmovs ecx, dword ptr [rbx - 0x173ef7be] ; add al, 0x39 ; ret
0x0000000000095bb8 : cmovs edi, dword ptr [rcx] ; int1 ; ja 0x95bb9 ; lea eax, [rdx + rdi] ; ret
0x00000000000bf2be : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000bf350 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000187288 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000018700f : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000186fd8 : cmp ah, byte ptr [rbx - 0x2e] ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000011be52 : cmp ah, byte ptr [rdi] ; or eax, 0x5c415d00 ; pop r13 ; ret
0x000000000002723b : cmp al, 0 ; add byte ptr [rax], al ; nop ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000122337 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014396c : cmp al, 0x23 ; jne 0x1438f5 ; jmp 0x14394a
0x0000000000094be7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000011da93 : cmp al, 0x24 ; call rbx
0x000000000010f416 : cmp al, 0x24 ; mov eax, 0x11 ; syscall
0x00000000001227c5 : cmp al, 0x24 ; mov eax, 0x116 ; syscall
0x000000000010f4c6 : cmp al, 0x24 ; mov eax, 0x12 ; syscall
0x0000000000130258 : cmp al, 0x24 ; mov eax, 0xe6 ; syscall
0x0000000000162d40 : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x0000000000048a86 : cmp al, 0x24 ; mov rdx, r14 ; mov rax, qword ptr [rsp] ; call rax
0x000000000015f12f : cmp al, 0x24 ; mov rsi, qword ptr [r12 + 0x10] ; call 0x11bb99
0x0000000000047950 : cmp al, 0x24 ; mov rsi, r15 ; call r14
0x0000000000146ab2 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039da0 : cmp al, 0x2b ; sbb eax, dword ptr [rax] ; syscall
0x00000000000eb0c3 : cmp al, 0x3f ; jne 0xeb102 ; mov eax, 1 ; ret
0x00000000000eb0e4 : cmp al, 0x3f ; jne 0xeb122 ; mov eax, 1 ; ret
0x0000000000119e68 : cmp al, 0x48 ; add esp, 0x38 ; ret
0x000000000015620e : cmp al, 0x4c ; lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013b449 : cmp al, 0xb ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000065c7e : cmp al, 0xc ; ret 0x4489
0x000000000011a880 : cmp al, 0xd ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000115846 : cmp al, 0xe8 ; ret 0xffff
0x0000000000197b96 : cmp al, 0xf ; mov gs, word ptr [rdi - 0x72000006] ; ret
0x00000000000d3ae5 : cmp al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000000e8906 : cmp al, 0xf3 ; call 0x25354
0x00000000001300b1 : cmp al, 0xfd ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000065ffd : cmp al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000192c23 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e88a7 : cmp al, 4 ; call 0x25334
0x00000000000bac10 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000e5f86 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018e6c2 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000195a76 : cmp al, byte ptr [rsi - 1] ; jne 0x195a9c ; xor eax, eax ; ret
0x00000000000e1a0a : cmp al, ch ; adc byte ptr [rax], al ; syscall
0x00000000001337b0 : cmp al, ch ; retf 0x114
0x00000000000af336 : cmp al, dh ; ret
0x00000000000af335 : cmp al, r14b ; ret
0x0000000000044f2a : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000012c5ca : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000186fdb : cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000012c641 : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000000950a7 : cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000d2246 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000095860 : cmp byte ptr [r13 + 0x41], r11b ; pop rsp ; ret
0x000000000012de9a : cmp byte ptr [r13 - 0x77], r9b ; outsd dx, dword ptr [rsi] ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000012ddf0 : cmp byte ptr [r13 - 0x77], r9b ; sbb byte ptr [eax - 0x77], cl ; ret 0x2b49
0x0000000000156eb9 : cmp byte ptr [r14 + 0xf], r12b ; insb byte ptr [rdi], dx ; ret 0x8948
0x000000000012a917 : cmp byte ptr [r8 + 0x39], r9b ; ret
0x00000000000922bc : cmp byte ptr [r8 + 0xf], r9b ; ret 0x110f
0x000000000008bebd : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000012b1fe : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000012da9b : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x000000000012b4b1 : cmp byte ptr [r8 - 0x7d], cl ; ret
0x0000000000101e38 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081929 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000015bdb1 : cmp byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000144820 : cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000010f6b7 : cmp byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000922bd : cmp byte ptr [rax + 0xf], cl ; ret 0x110f
0x000000000011fdfc : cmp byte ptr [rax + 1], 0 ; jne 0x11fe48 ; mov rdx, rax ; jmp 0x11fe21
0x0000000000057424 : cmp byte ptr [rax + 1], 0 ; jne 0x57427 ; pop rbx ; ret
0x00000000000af377 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000002e7fd : cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000008bebe : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000591f2 : cmp byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000008cf74 : cmp byte ptr [rax - 0x75], cl ; xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x000000000009582d : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000012b1ff : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000012da9c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000149592 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014ba84 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000012b4b2 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000441a3 : cmp byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000004416d : cmp byte ptr [rax - 0x7d], cl ; retf 0x480d
0x00000000000441ee : cmp byte ptr [rax - 0x7d], cl ; retf 0xe90c
0x00000000000441d9 : cmp byte ptr [rax - 0x7d], cl ; retf 0xeb0a
0x00000000000573f9 : cmp byte ptr [rax - 1], 0x2f ; jne 0x573f7 ; pop rbx ; ret
0x0000000000119f86 : cmp byte ptr [rax - 1], bh ; ret
0x000000000017fbb8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000af366 : cmp byte ptr [rax], ah ; ret
0x00000000000abdb4 : cmp byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cfc49 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff1
0x00000000000e5de9 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000015bcd9 : cmp byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xf883
0x0000000000095027 : cmp byte ptr [rax], al ; je 0x95034 ; ret
0x0000000000101e39 : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b46a4 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000af846 : cmp byte ptr [rax], dh ; ret
0x00000000000af356 : cmp byte ptr [rax], dl ; ret
0x00000000000af355 : cmp byte ptr [rax], r10b ; ret
0x00000000000af365 : cmp byte ptr [rax], r12b ; ret
0x00000000000af845 : cmp byte ptr [rax], r14b ; ret
0x00000000000b46a3 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d224a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000d2249 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000002df06 : cmp byte ptr [rbp + 0x39], cl ; ret 0x820f
0x0000000000095861 : cmp byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000014dbcd : cmp byte ptr [rbp + 9], cl ; ror dword ptr [rcx - 0x77], 1 ; retf 0xb43
0x000000000011ff92 : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000012de9b : cmp byte ptr [rbp - 0x77], cl ; outsd dx, dword ptr [rsi] ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000012ddf1 : cmp byte ptr [rbp - 0x77], cl ; sbb byte ptr [eax - 0x77], cl ; ret 0x2b49
0x0000000000029218 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000950a8 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000054f7d : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000010aecd : cmp byte ptr [rbx + 0xf6610e3], al ; insb byte ptr [rdi], dx ; ret 0x8948
0x00000000000d2247 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000150533 : cmp byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x14d006
0x00000000000894a6 : cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x000000000008e058 : cmp byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101d70 : cmp byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000095001 : cmp byte ptr [rcx - 0x3b7cb7fd], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f0aff : cmp byte ptr [rcx - 0x6bf0f7b0], cl ; ret 0x8040
0x000000000005319e : cmp byte ptr [rcx - 0x77], al ; ret 0x4489
0x000000000013ce35 : cmp byte ptr [rcx - 0xa], al ; ret
0x00000000001243ea : cmp byte ptr [rcx], 0 ; je 0x1243f5 ; ret
0x00000000000c0478 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000017fbb9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000bc064 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x000000000012ab00 : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000099a5e : cmp byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000004a67c : cmp byte ptr [rdi], 0 ; jne 0x4a68e ; pop rbx ; ret
0x00000000000f364e : cmp byte ptr [rdi], cl ; mov dh, 0x14 ; cmp ch, cl ; ret
0x00000000001914cd : cmp byte ptr [rdi], dl ; ret
0x0000000000191fe0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191fc9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191fb2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000190a6e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f364d : cmp byte ptr [rdi], r9b ; mov dh, 0x14 ; cmp ch, cl ; ret
0x000000000011ac7d : cmp byte ptr [rip + 0x74d28500], cl ; or al, 0xf7 ; ret 0xfc07
0x000000000003590d : cmp byte ptr [rsi + 0x17], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000156eba : cmp byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8948
0x00000000001192a6 : cmp byte ptr [rsi], 0 ; lea rdx, [rsi + 1] ; jne 0x119289 ; ret
0x0000000000187012 : cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000f3652 : cmp ch, cl ; ret
0x00000000000677c1 : cmp cl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f74d : cmp cl, byte ptr [rax + 0x63] ; ret 0xc283
0x000000000014191b : cmp cl, byte ptr [rax - 0x77] ; ret
0x00000000001418dc : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000083e1b : cmp cl, byte ptr [rcx - 0x77] ; ror byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000169992 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000169ae2 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000169c32 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000169d82 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000169ed2 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000016a022 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000016a172 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000016a2c2 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000016a412 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000016a562 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000016a6b2 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000016a802 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000016a952 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000016aaa2 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000016abf2 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000016ebea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000016ed6a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000016eeea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000016f06a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000016f1ea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000016f36a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000016f4ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000016f66a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000016f7ea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000016f96a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000016faea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000016fc6a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000016fdea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000016ff6a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000001700ea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000005757c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000a11a2 : cmp cl, dl ; adc al, 0 ; syscall
0x000000000012c607 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000018b631 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000f3abc : cmp dh, byte ptr [rcx] ; test byte ptr [rax + 1], 0xc2 ; jmp 0xf3ad6
0x0000000000193fce : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000012c678 : cmp dh, cl ; cmovne eax, edx ; ret
0x00000000000fb2cc : cmp dh, dh ; ret
0x00000000000b53b5 : cmp dh, dh ; ret 0x7501
0x00000000000faa7c : cmp dh, dh ; ret 0xf08
0x000000000012c5c9 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000012c640 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000bf214 : cmp dl, 1 ; ja 0xbf237 ; jb 0xbf226 ; mov byte ptr [rdi], cl ; ret
0x000000000019302f : cmp dl, 1 ; jb 0x193041 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001936fe : cmp dl, 1 ; jb 0x19370c ; mov byte ptr [rdi], cl ; ret
0x00000000000a2500 : cmp dl, 3 ; je 0xa2518 ; movsx eax, dl ; ret
0x000000000009f44d : cmp dl, al ; jne 0x9f440 ; sub rax, 0x10 ; ret
0x000000000009f44c : cmp dl, r8b ; jne 0x9f441 ; sub rax, 0x10 ; ret
0x00000000000bfeab : cmp dword ptr [r9], edx ; jne 0xbfe4e ; test edx, edx ; jne 0xbfe99 ; ret
0x000000000008a53c : cmp dword ptr [rax + 0x30], 0 ; je 0x8a54e ; ret
0x000000000012ffea : cmp dword ptr [rax + 8], edi ; jne 0x12ffe9 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000168ed7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182517 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003629d : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000000000481ad : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000001243eb : cmp dword ptr [rax], eax ; je 0x1243f4 ; ret
0x000000000015697d : cmp dword ptr [rax], ebx ; je 0x156998 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004ac5f : cmp dword ptr [rbp + 0x39], ecx ; retf 0xbb75
0x000000000009d12e : cmp dword ptr [rbx + 0x150a1a2d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000097d46 : cmp dword ptr [rbx + 0x1557922d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000886c0 : cmp dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011f24f : cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000170308 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000a5233 : cmp dword ptr [rbx], 0 ; je 0xa5251 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131afc : cmp dword ptr [rbx], ecx ; jne 0x131acd ; jmp 0x131abd
0x0000000000131afb : cmp dword ptr [rcx], 0xb ; jne 0x131ace ; jmp 0x131abe
0x00000000000bfeac : cmp dword ptr [rcx], edx ; jne 0xbfe4d ; test edx, edx ; jne 0xbfe98 ; ret
0x0000000000095025 : cmp dword ptr [rdi + 0x38], 0 ; je 0x95036 ; ret
0x00000000000a20ff : cmp dword ptr [rdi + 8], esi ; jb 0xa2118 ; mov qword ptr [rdi], rsi ; ret
0x00000000000ccdcf : cmp dword ptr [rdi + rcx], edx ; xchg eax, ebx ; ret 0x3948
0x000000000013006c : cmp dword ptr [rdi], 0 ; je 0x130085 ; ret
0x000000000008d7e2 : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000026aaf : cmp dword ptr [rdx + 0xd8], eax ; jne 0x26a83 ; ret
0x00000000000a13d5 : cmp dword ptr [rip + 0x14c80c], 0 ; je 0xa13e9 ; ret
0x000000000019c0af : cmp dword ptr [rip + 5], ebx ; add byte ptr [rax], al ; ret
0x0000000000055359 : cmp dword ptr [rsi + 0x19], 0 ; syscall
0x000000000011c911 : cmp dword ptr [rsi], 0 ; mov rbx, rsi ; je 0x11c929 ; pop rbx ; ret
0x00000000000a3a23 : cmp dword ptr [rsi], esp ; or eax, 0x450f4800 ; ret 0xfc3
0x0000000000131afa : cmp dword ptr fs:[rcx], 0xb ; jne 0x131acf ; jmp 0x131abf
0x0000000000105cbe : cmp dx, 2 ; je 0x105cce ; ret
0x0000000000115fcd : cmp eax, -0x5f ; je 0x115fdf ; neg eax ; ret
0x000000000011621d : cmp eax, -0x5f ; je 0x11622f ; neg eax ; ret
0x000000000013e788 : cmp eax, -0xb ; je 0x13e786 ; pop rbx ; ret
0x000000000006600e : cmp eax, -1 ; je 0x66028 ; mov eax, r8d ; ret
0x0000000000163fc2 : cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000332fa : cmp eax, -3 ; je 0x3331e ; pop rbx ; ret
0x0000000000058d30 : cmp eax, -8 ; jne 0x58d28 ; mov rax, rdx ; ret
0x00000000000e4b79 : cmp eax, 0x109622 ; syscall
0x00000000000e4a39 : cmp eax, 0x109762 ; syscall
0x00000000000e4981 : cmp eax, 0x10981a ; syscall
0x00000000000e48a5 : cmp eax, 0x1098ee ; syscall
0x00000000000e46d5 : cmp eax, 0x109a7e ; syscall
0x00000000000e4511 : cmp eax, 0x109bfa ; syscall
0x00000000000e4157 : cmp eax, 0x109f5c ; syscall
0x00000000000e2c49 : cmp eax, 0x10b3e2 ; syscall
0x00000000000e2b09 : cmp eax, 0x10b522 ; syscall
0x00000000000e2a51 : cmp eax, 0x10b5da ; syscall
0x00000000000e2685 : cmp eax, 0x10b99e ; syscall
0x00000000000e24b5 : cmp eax, 0x10bb2e ; syscall
0x00000000000e22f1 : cmp eax, 0x10bcaa ; syscall
0x00000000000e1a09 : cmp eax, 0x10c53a ; syscall
0x00000000000d5c55 : cmp eax, 0x118206 ; syscall
0x00000000000d5a21 : cmp eax, 0x11843a ; syscall
0x000000000009c21a : cmp eax, 0x11b3ec ; call 0x98497
0x000000000009c239 : cmp eax, 0x11f46a ; call 0x98497
0x000000000009baa6 : cmp eax, 0x11fb8d ; call 0x984f7
0x00000000000cd815 : cmp eax, 0x1226a6 ; syscall
0x000000000009fa92 : cmp eax, 0x14b0e9 ; call 0x9bca7
0x000000000009f9f5 : cmp eax, 0x14b186 ; syscall
0x00000000000a1381 : cmp eax, 0x14c85a ; syscall
0x00000000000a11a1 : cmp eax, 0x14ca3a ; syscall
0x00000000000a0fb5 : cmp eax, 0x14cc26 ; syscall
0x00000000000a0f45 : cmp eax, 0x14cc96 ; syscall
0x00000000000a0d15 : cmp eax, 0x14cec6 ; syscall
0x000000000009cc75 : cmp eax, 0x14df06 ; syscall
0x000000000009cc15 : cmp eax, 0x14df66 ; syscall
0x000000000009c855 : cmp eax, 0x14e326 ; syscall
0x000000000009c5f5 : cmp eax, 0x14e586 ; syscall
0x000000000009f3ac : cmp eax, 0x14e78e ; add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x000000000009bfad : cmp eax, 0x14ebce ; syscall
0x000000000009bf75 : cmp eax, 0x14ec06 ; syscall
0x000000000009dc25 : cmp eax, 0x14ff36 ; syscall
0x000000000009d189 : cmp eax, 0x1509c2 ; syscall
0x0000000000099226 : cmp eax, 0x154925 ; syscall
0x00000000000991f5 : cmp eax, 0x154966 ; syscall
0x0000000000098f75 : cmp eax, 0x154be6 ; syscall
0x0000000000098a51 : cmp eax, 0x15510a ; syscall
0x0000000000097f76 : cmp eax, 0x155565 ; syscall
0x0000000000097da1 : cmp eax, 0x15573a ; syscall
0x0000000000097c05 : cmp eax, 0x1558d6 ; syscall
0x0000000000096ac7 : cmp eax, 0x1569d4 ; syscall
0x0000000000096587 : cmp eax, 0x156f14 ; syscall
0x00000000000961e3 : cmp eax, 0x1572b8 ; syscall
0x0000000000095e77 : cmp eax, 0x157624 ; syscall
0x00000000000947f3 : cmp eax, 0x158ca8 ; syscall
0x0000000000094533 : cmp eax, 0x158f68 ; syscall
0x00000000000941bf : cmp eax, 0x1592dc ; syscall
0x0000000000087404 : cmp eax, 0x166057 ; syscall
0x0000000000087007 : cmp eax, 0x166454 ; syscall
0x0000000000086f5c : cmp eax, 0x1664ff ; syscall
0x00000000000850f5 : cmp eax, 0x16adc6 ; syscall
0x0000000000064199 : cmp eax, 0x189292 ; syscall
0x0000000000063f15 : cmp eax, 0x189512 ; syscall
0x0000000000061d41 : cmp eax, 0x18b6de ; syscall
0x0000000000061c01 : cmp eax, 0x18b81e ; syscall
0x0000000000057e65 : cmp eax, 0x1955a6 ; syscall
0x0000000000057c85 : cmp eax, 0x195786 ; syscall
0x0000000000057755 : cmp eax, 0x195cb6 ; syscall
0x0000000000055d88 : cmp eax, 0x1975d3 ; call 0x102817
0x0000000000055d11 : cmp eax, 0x1976aa ; call 0x102817
0x00000000000554e1 : cmp eax, 0x197cfa ; syscall
0x000000000005538d : cmp eax, 0x197e4e ; syscall
0x0000000000055358 : cmp eax, 0x197e83 ; syscall
0x000000000004abc1 : cmp eax, 0x1a25fa ; syscall
0x000000000004ab01 : cmp eax, 0x1a26ba ; syscall
0x000000000004aa39 : cmp eax, 0x1a2782 ; syscall
0x000000000004a961 : cmp eax, 0x1a285a ; syscall
0x0000000000049a59 : cmp eax, 0x1a2f0a ; syscall
0x0000000000049994 : cmp eax, 0x1a2fcf ; syscall
0x00000000000497f2 : cmp eax, 0x1a3171 ; syscall
0x0000000000049718 : cmp eax, 0x1a324b ; syscall
0x000000000003b722 : cmp eax, 0x1b11f1 ; syscall
0x0000000000039d9f : cmp eax, 0x1b2b3c ; syscall
0x0000000000038a58 : cmp eax, 0x1b3ddb ; syscall
0x0000000000038a2b : cmp eax, 0x1b3e08 ; syscall
0x00000000000388e6 : cmp eax, 0x1b3f4d ; syscall
0x00000000000296c9 : cmp eax, 0x1c67f2 ; syscall
0x000000000002955d : cmp eax, 0x1c695e ; syscall
0x000000000002943d : cmp eax, 0x1c6a7e ; syscall
0x0000000000025888 : cmp eax, 0x1c70a3 ; syscall
0x0000000000098438 : cmp eax, 0x2000000 ; jbe 0x98447 ; ret
0x0000000000110b57 : cmp eax, 0x26 ; je 0x110b68 ; mov eax, r9d ; ret
0x00000000001229b8 : cmp eax, 0x26 ; je 0x1229fc ; mov eax, r8d ; ret
0x000000000016327e : cmp eax, 0x38c48348 ; ret
0x000000000009c3ec : cmp eax, 0x40c48348 ; pop rbp ; ret
0x000000000019bdc1 : cmp eax, 0x50ba2 ; syscall
0x000000000019bf81 : cmp eax, 0x5155a ; syscall
0x000000000019c2b1 : cmp eax, 0x52f62 ; syscall
0x00000000000e7df5 : cmp eax, 0x58465342 ; jne 0xe7e08 ; ret
0x000000000018ba24 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000161581 : cmp eax, 0x8ee32 ; syscall
0x0000000000160399 : cmp eax, 0x9001a ; syscall
0x00000000001602b9 : cmp eax, 0x900fa ; syscall
0x00000000001600d1 : cmp eax, 0x902e2 ; syscall
0x0000000000160031 : cmp eax, 0x90382 ; syscall
0x000000000015ff91 : cmp eax, 0x90422 ; syscall
0x000000000015fee1 : cmp eax, 0x904d2 ; syscall
0x000000000015f961 : cmp eax, 0x90a52 ; syscall
0x0000000000155731 : cmp eax, 0x9a3ba ; syscall
0x00000000001555d1 : cmp eax, 0x9a51a ; syscall
0x00000000001553c5 : cmp eax, 0x9a726 ; syscall
0x0000000000155225 : cmp eax, 0x9a8c6 ; syscall
0x0000000000155091 : cmp eax, 0x9aa5a ; syscall
0x0000000000154f51 : cmp eax, 0x9ab9a ; syscall
0x0000000000154df1 : cmp eax, 0x9acfa ; syscall
0x0000000000154ce1 : cmp eax, 0x9ae0a ; syscall
0x0000000000151831 : cmp eax, 0x9e2b6 ; syscall
0x000000000014fb19 : cmp eax, 0x9ff0a ; syscall
0x000000000014f9d9 : cmp eax, 0xa004a ; syscall
0x000000000014f921 : cmp eax, 0xa0102 ; syscall
0x000000000014f835 : cmp eax, 0xa01e6 ; syscall
0x000000000014f665 : cmp eax, 0xa0386 ; syscall
0x000000000014f4a1 : cmp eax, 0xa0522 ; syscall
0x0000000000149b33 : cmp eax, 0xa5d2c ; syscall
0x0000000000147995 : cmp eax, 0xa7e36 ; syscall
0x000000000014765d : cmp eax, 0xa816e ; syscall
0x00000000001472dd : cmp eax, 0xa84ee ; syscall
0x00000000001470b7 : cmp eax, 0xa8714 ; syscall
0x0000000000146f55 : cmp eax, 0xa8876 ; syscall
0x0000000000146d18 : cmp eax, 0xa8ab3 ; syscall
0x00000000001462c1 : cmp eax, 0xa9452 ; syscall
0x000000000014613f : cmp eax, 0xa95d4 ; syscall
0x0000000000146105 : cmp eax, 0xa960e ; syscall
0x0000000000145fed : cmp eax, 0xa9726 ; syscall
0x00000000001457a9 : cmp eax, 0xa9f6a ; syscall
0x00000000001456e1 : cmp eax, 0xaa032 ; syscall
0x00000000001455c5 : cmp eax, 0xaa14e ; syscall
0x00000000001441f2 : cmp eax, 0xab2c9 ; syscall
0x0000000000140ab1 : cmp eax, 0xae762 ; syscall
0x00000000001407b5 : cmp eax, 0xaea5e ; syscall
0x000000000010a50f : cmp eax, 0xb1ffc ; call 0x36fc7
0x000000000013c485 : cmp eax, 0xb2d7a ; syscall
0x000000000013bf05 : cmp eax, 0xb32de ; syscall
0x000000000013bd41 : cmp eax, 0xb345a ; syscall
0x000000000013bc79 : cmp eax, 0xb34c2 ; syscall
0x000000000013bb39 : cmp eax, 0xb3602 ; syscall
0x000000000013ba81 : cmp eax, 0xb36ba ; syscall
0x000000000013b391 : cmp eax, 0xb3da2 ; syscall
0x000000000013b071 : cmp eax, 0xb40c2 ; syscall
0x000000000013b00b : cmp eax, 0xb40d0 ; call rax
0x000000000013aeb5 : cmp eax, 0xb427e ; syscall
0x000000000013ae77 : cmp eax, 0xb42bc ; call 0x978f7
0x0000000000137b29 : cmp eax, 0xb749a ; syscall
0x00000000001379e9 : cmp eax, 0xb75da ; syscall
0x0000000000137931 : cmp eax, 0xb7692 ; syscall
0x0000000000137851 : cmp eax, 0xb776a ; syscall
0x0000000000137385 : cmp eax, 0xb7bbe ; syscall
0x0000000000136db5 : cmp eax, 0xb812e ; syscall
0x0000000000136895 : cmp eax, 0xb8606 ; syscall
0x00000000001366c9 : cmp eax, 0xb8792 ; syscall
0x0000000000136589 : cmp eax, 0xb88d2 ; syscall
0x00000000001364d1 : cmp eax, 0xb898a ; syscall
0x00000000001363f1 : cmp eax, 0xb8a62 ; syscall
0x0000000000135fd5 : cmp eax, 0xb8e36 ; syscall
0x00000000001359b9 : cmp eax, 0xb93f2 ; syscall
0x0000000000135861 : cmp eax, 0xb954a ; syscall
0x00000000001357a1 : cmp eax, 0xb960a ; syscall
0x00000000001356b9 : cmp eax, 0xb96ea ; syscall
0x00000000001355d5 : cmp eax, 0xb9796 ; syscall
0x0000000000134f75 : cmp eax, 0xb9db6 ; syscall
0x0000000000134d69 : cmp eax, 0xb9f7a ; syscall
0x0000000000134c11 : cmp eax, 0xba0d2 ; syscall
0x0000000000134b51 : cmp eax, 0xba192 ; syscall
0x0000000000134a69 : cmp eax, 0xba272 ; syscall
0x0000000000133e55 : cmp eax, 0xbae0e ; syscall
0x0000000000133be5 : cmp eax, 0xbb03e ; syscall
0x0000000000133465 : cmp eax, 0xbb75e ; syscall
0x0000000000129729 : cmp eax, 0xc5402 ; syscall
0x00000000001295e9 : cmp eax, 0xc5542 ; syscall
0x0000000000129531 : cmp eax, 0xc55fa ; syscall
0x0000000000129157 : cmp eax, 0xc59cc ; syscall
0x0000000000128f55 : cmp eax, 0xc5b96 ; syscall
0x0000000000128d75 : cmp eax, 0xc5d2e ; syscall
0x0000000000128bb1 : cmp eax, 0xc5eaa ; syscall
0x0000000000128ae1 : cmp eax, 0xc5f26 ; syscall
0x0000000000128a17 : cmp eax, 0xc5ff0 ; syscall
0x0000000000128982 : cmp eax, 0xc6085 ; syscall
0x0000000000127c79 : cmp eax, 0xc6d5a ; syscall
0x0000000000127b39 : cmp eax, 0xc6e9a ; syscall
0x0000000000127a81 : cmp eax, 0xc6f52 ; syscall
0x0000000000127487 : cmp eax, 0xc7544 ; syscall
0x0000000000127285 : cmp eax, 0xc76ee ; syscall
0x00000000001270a5 : cmp eax, 0xc7866 ; syscall
0x0000000000126ee1 : cmp eax, 0xc79c2 ; syscall
0x000000000011b92f : cmp eax, 0xcea14 ; ret
0x000000000011b901 : cmp eax, 0xd2c4a ; syscall
0x000000000011b7e5 : cmp eax, 0xd2d66 ; syscall
0x000000000011b385 : cmp eax, 0xd31c6 ; syscall
0x000000000011ae5a : cmp eax, 0xd36f1 ; syscall
0x0000000000109d3a : cmp eax, 0xe4541 ; syscall
0x000000000010f3db : cmp eax, 0xfffff000 ; ja 0x10f447 ; ret
0x000000000010f48b : cmp eax, 0xfffff000 ; ja 0x10f4f7 ; ret
0x000000000011076b : cmp eax, 0xfffff000 ; ja 0x11077f ; ret
0x00000000001107ca : cmp eax, 0xfffff000 ; ja 0x1107df ; ret
0x000000000011082b : cmp eax, 0xfffff000 ; ja 0x11083f ; ret
0x0000000000110bb3 : cmp eax, 0xfffff000 ; ja 0x110bc7 ; ret
0x0000000000110c16 : cmp eax, 0xfffff000 ; ja 0x110c27 ; ret
0x0000000000110c70 : cmp eax, 0xfffff000 ; ja 0x110c87 ; ret
0x0000000000110ea9 : cmp eax, 0xfffff000 ; ja 0x110ebf ; ret
0x0000000000111283 : cmp eax, 0xfffff000 ; ja 0x1112e7 ; ret
0x0000000000111328 : cmp eax, 0xfffff000 ; ja 0x111387 ; ret
0x00000000001113bc : cmp eax, 0xfffff000 ; ja 0x1113cf ; ret
0x00000000001113ec : cmp eax, 0xfffff000 ; ja 0x1113ff ; ret
0x0000000000111ac8 : cmp eax, 0xfffff000 ; ja 0x111b17 ; ret
0x0000000000111c48 : cmp eax, 0xfffff000 ; ja 0x111c97 ; ret
0x0000000000115c08 : cmp eax, 0xfffff000 ; ja 0x115c67 ; ret
0x000000000011628b : cmp eax, 0xfffff000 ; ja 0x11630f ; ret
0x0000000000116354 : cmp eax, 0xfffff000 ; ja 0x116367 ; ret
0x00000000001163a8 : cmp eax, 0xfffff000 ; ja 0x1163b7 ; ret
0x000000000011647b : cmp eax, 0xfffff000 ; ja 0x1164e7 ; ret
0x000000000011652b : cmp eax, 0xfffff000 ; ja 0x116597 ; ret
0x00000000001165cc : cmp eax, 0xfffff000 ; ja 0x1165df ; ret
0x000000000011673c : cmp eax, 0xfffff000 ; ja 0x11674f ; ret
0x00000000001168bc : cmp eax, 0xfffff000 ; ja 0x1168cf ; ret
0x00000000001168e9 : cmp eax, 0xfffff000 ; ja 0x1168ff ; ret
0x000000000011691f : cmp eax, 0xfffff000 ; ja 0x116937 ; ret
0x000000000011695c : cmp eax, 0xfffff000 ; ja 0x11696f ; ret
0x0000000000116e42 : cmp eax, 0xfffff000 ; ja 0x116e9f ; ret
0x0000000000117055 : cmp eax, 0xfffff000 ; ja 0x117067 ; ret
0x0000000000117096 : cmp eax, 0xfffff000 ; ja 0x1170a7 ; ret
0x00000000001176c8 : cmp eax, 0xfffff000 ; ja 0x117727 ; ret
0x0000000000117768 : cmp eax, 0xfffff000 ; ja 0x1177c7 ; ret
0x000000000011780e : cmp eax, 0xfffff000 ; ja 0x11787f ; ret
0x00000000001178ce : cmp eax, 0xfffff000 ; ja 0x11793f ; ret
0x000000000011825b : cmp eax, 0xfffff000 ; ja 0x1182d7 ; ret
0x0000000000118488 : cmp eax, 0xfffff000 ; ja 0x1184d7 ; ret
0x0000000000118548 : cmp eax, 0xfffff000 ; ja 0x118597 ; ret
0x0000000000118608 : cmp eax, 0xfffff000 ; ja 0x118617 ; ret
0x0000000000119cdc : cmp eax, 0xfffff000 ; ja 0x119cef ; ret
0x0000000000119ec1 : cmp eax, 0xfffff000 ; ja 0x119ed7 ; ret
0x0000000000119efc : cmp eax, 0xfffff000 ; ja 0x119f0f ; ret
0x0000000000119f2c : cmp eax, 0xfffff000 ; ja 0x119f3f ; ret
0x000000000011bb07 : cmp eax, 0xfffff000 ; ja 0x11bb79 ; pop rbx ; pop rbp ; ret
0x000000000011bc08 : cmp eax, 0xfffff000 ; ja 0x11bc67 ; ret
0x000000000011f6e3 : cmp eax, 0xfffff000 ; ja 0x11f6f7 ; ret
0x000000000012239c : cmp eax, 0xfffff000 ; ja 0x1223af ; ret
0x0000000000122441 : cmp eax, 0xfffff000 ; ja 0x1224bf ; ret
0x00000000001224f4 : cmp eax, 0xfffff000 ; ja 0x122507 ; ret
0x000000000012262b : cmp eax, 0xfffff000 ; ja 0x122697 ; ret
0x00000000001226db : cmp eax, 0xfffff000 ; ja 0x122747 ; ret
0x000000000012278b : cmp eax, 0xfffff000 ; ja 0x1227f7 ; ret
0x000000000012283b : cmp eax, 0xfffff000 ; ja 0x1228bf ; ret
0x0000000000122908 : cmp eax, 0xfffff000 ; ja 0x122967 ; ret
0x0000000000122a34 : cmp eax, 0xfffff000 ; ja 0x122a47 ; ret
0x0000000000123308 : cmp eax, 0xfffff000 ; ja 0x123367 ; ret
0x00000000001233d8 : cmp eax, 0xfffff000 ; ja 0x123437 ; ret
0x0000000000123541 : cmp eax, 0xfffff000 ; ja 0x1235b7 ; ret
0x00000000001235fb : cmp eax, 0xfffff000 ; ja 0x123677 ; ret
0x00000000001236b8 : cmp eax, 0xfffff000 ; ja 0x123717 ; ret
0x0000000000123761 : cmp eax, 0xfffff000 ; ja 0x1237d7 ; ret
0x0000000000123818 : cmp eax, 0xfffff000 ; ja 0x123877 ; ret
0x00000000001238bb : cmp eax, 0xfffff000 ; ja 0x12393f ; ret
0x0000000000123d1b : cmp eax, 0xfffff000 ; ja 0x123d87 ; ret
0x0000000000123dcb : cmp eax, 0xfffff000 ; ja 0x123e3f ; ret
0x0000000000123e7b : cmp eax, 0xfffff000 ; ja 0x123ee7 ; ret
0x000000000012401b : cmp eax, 0xfffff000 ; ja 0x124087 ; ret
0x00000000001240cb : cmp eax, 0xfffff000 ; ja 0x124147 ; ret
0x000000000012417c : cmp eax, 0xfffff000 ; ja 0x12418f ; ret
0x00000000001241ac : cmp eax, 0xfffff000 ; ja 0x1241bf ; ret
0x00000000001241dc : cmp eax, 0xfffff000 ; ja 0x1241ef ; ret
0x000000000012420c : cmp eax, 0xfffff000 ; ja 0x12421f ; ret
0x00000000001242df : cmp eax, 0xfffff000 ; ja 0x1242f7 ; ret
0x000000000012431c : cmp eax, 0xfffff000 ; ja 0x12432f ; ret
0x000000000012434c : cmp eax, 0xfffff000 ; ja 0x12435f ; ret
0x000000000012437f : cmp eax, 0xfffff000 ; ja 0x124397 ; ret
0x00000000001243bc : cmp eax, 0xfffff000 ; ja 0x1243cf ; ret
0x00000000001300ec : cmp eax, 0xfffff000 ; ja 0x1300ff ; ret
0x00000000001301a6 : cmp eax, 0xfffff000 ; ja 0x1301b7 ; ret
0x0000000000131b1e : cmp eax, 0xfffff000 ; ja 0x131b37 ; ret
0x00000000000466b2 : cmp eax, 0xfffff000 ; ja 0x466c7 ; ret
0x0000000000046721 : cmp eax, 0xfffff000 ; ja 0x46737 ; ret
0x000000000004676d : cmp eax, 0xfffff000 ; ja 0x467c7 ; ret
0x000000000004b538 : cmp eax, 0xfffff000 ; ja 0x4b597 ; ret
0x0000000000065f8c : cmp eax, 0xfffff000 ; ja 0x65f9f ; ret
0x0000000000065fbf : cmp eax, 0xfffff000 ; ja 0x65fd7 ; ret
0x00000000000d406c : cmp eax, 0xfffff000 ; ja 0xd407f ; ret
0x00000000000e108c : cmp eax, 0xfffff000 ; ja 0xe109f ; ret
0x00000000000e59c5 : cmp eax, 0xfffff000 ; ja 0xe5a1f ; ret
0x00000000000e5a5b : cmp eax, 0xfffff000 ; ja 0xe5abf ; ret
0x00000000000e5b4e : cmp eax, 0xfffff000 ; ja 0xe5bc7 ; ret
0x00000000000e5ca8 : cmp eax, 0xfffff000 ; ja 0xe5ce7 ; ret
0x00000000000e5d28 : cmp eax, 0xfffff000 ; ja 0xe5d77 ; ret
0x000000000010590c : cmp eax, 0xfffff001 ; jae 0x10591b ; ret
0x000000000010593c : cmp eax, 0xfffff001 ; jae 0x10594b ; ret
0x000000000010596c : cmp eax, 0xfffff001 ; jae 0x10597b ; ret
0x000000000010599c : cmp eax, 0xfffff001 ; jae 0x1059ab ; ret
0x00000000001059cc : cmp eax, 0xfffff001 ; jae 0x1059db ; ret
0x00000000001059fc : cmp eax, 0xfffff001 ; jae 0x105a0b ; ret
0x0000000000105a2c : cmp eax, 0xfffff001 ; jae 0x105a3b ; ret
0x0000000000105a5c : cmp eax, 0xfffff001 ; jae 0x105a6b ; ret
0x000000000011068c : cmp eax, 0xfffff001 ; jae 0x11069b ; ret
0x0000000000110cbc : cmp eax, 0xfffff001 ; jae 0x110ccb ; ret
0x0000000000110cec : cmp eax, 0xfffff001 ; jae 0x110cfb ; ret
0x0000000000110e1c : cmp eax, 0xfffff001 ; jae 0x110e2b ; ret
0x0000000000110e4c : cmp eax, 0xfffff001 ; jae 0x110e5b ; ret
0x0000000000110f0c : cmp eax, 0xfffff001 ; jae 0x110f1b ; ret
0x0000000000110f3c : cmp eax, 0xfffff001 ; jae 0x110f4b ; ret
0x000000000011182c : cmp eax, 0xfffff001 ; jae 0x11183b ; ret
0x0000000000111b4c : cmp eax, 0xfffff001 ; jae 0x111b5b ; ret
0x0000000000111b7c : cmp eax, 0xfffff001 ; jae 0x111b8b ; ret
0x0000000000111bac : cmp eax, 0xfffff001 ; jae 0x111bbb ; ret
0x0000000000111bdc : cmp eax, 0xfffff001 ; jae 0x111beb ; ret
0x0000000000111c0c : cmp eax, 0xfffff001 ; jae 0x111c1b ; ret
0x0000000000111ccc : cmp eax, 0xfffff001 ; jae 0x111cdb ; ret
0x0000000000111cfc : cmp eax, 0xfffff001 ; jae 0x111d0b ; ret
0x000000000011260c : cmp eax, 0xfffff001 ; jae 0x11261b ; ret
0x000000000011263c : cmp eax, 0xfffff001 ; jae 0x11264b ; ret
0x000000000011266c : cmp eax, 0xfffff001 ; jae 0x11267b ; ret
0x000000000011269f : cmp eax, 0xfffff001 ; jae 0x1126ae ; ret
0x0000000000112e5c : cmp eax, 0xfffff001 ; jae 0x112e6b ; ret
0x0000000000112e8f : cmp eax, 0xfffff001 ; jae 0x112e9e ; ret
0x0000000000112ebc : cmp eax, 0xfffff001 ; jae 0x112ecb ; ret
0x0000000000112eec : cmp eax, 0xfffff001 ; jae 0x112efb ; ret
0x0000000000112f1c : cmp eax, 0xfffff001 ; jae 0x112f2b ; ret
0x0000000000112f4f : cmp eax, 0xfffff001 ; jae 0x112f5e ; ret
0x0000000000112f7c : cmp eax, 0xfffff001 ; jae 0x112f8b ; ret
0x0000000000112fac : cmp eax, 0xfffff001 ; jae 0x112fbb ; ret
0x0000000000112fdc : cmp eax, 0xfffff001 ; jae 0x112feb ; ret
0x000000000011624f : cmp eax, 0xfffff001 ; jae 0x11625e ; ret
0x00000000001170cc : cmp eax, 0xfffff001 ; jae 0x1170db ; ret
0x00000000001174cc : cmp eax, 0xfffff001 ; jae 0x1174db ; ret
0x000000000011768c : cmp eax, 0xfffff001 ; jae 0x11769b ; ret
0x00000000001180cc : cmp eax, 0xfffff001 ; jae 0x1180db ; ret
0x000000000011821c : cmp eax, 0xfffff001 ; jae 0x11822b ; ret
0x000000000011841c : cmp eax, 0xfffff001 ; jae 0x11842b ; ret
0x000000000011844c : cmp eax, 0xfffff001 ; jae 0x11845b ; ret
0x000000000011850c : cmp eax, 0xfffff001 ; jae 0x11851b ; ret
0x00000000001185cc : cmp eax, 0xfffff001 ; jae 0x1185db ; ret
0x000000000011890c : cmp eax, 0xfffff001 ; jae 0x11891b ; ret
0x000000000011893c : cmp eax, 0xfffff001 ; jae 0x11894b ; ret
0x000000000011896c : cmp eax, 0xfffff001 ; jae 0x11897b ; ret
0x000000000011b95e : cmp eax, 0xfffff001 ; jae 0x11b96d ; ret
0x000000000011bb9c : cmp eax, 0xfffff001 ; jae 0x11bbab ; ret
0x000000000011bbcc : cmp eax, 0xfffff001 ; jae 0x11bbdb ; ret
0x000000000011bc9c : cmp eax, 0xfffff001 ; jae 0x11bcab ; ret
0x000000000011bccc : cmp eax, 0xfffff001 ; jae 0x11bcdb ; ret
0x000000000011bcff : cmp eax, 0xfffff001 ; jae 0x11bd0e ; ret
0x000000000011bd2c : cmp eax, 0xfffff001 ; jae 0x11bd3b ; ret
0x000000000011bd5c : cmp eax, 0xfffff001 ; jae 0x11bd6b ; ret
0x000000000011bd8c : cmp eax, 0xfffff001 ; jae 0x11bd9b ; ret
0x000000000011bdbc : cmp eax, 0xfffff001 ; jae 0x11bdcb ; ret
0x000000000011ffaf : cmp eax, 0xfffff001 ; jae 0x11ffbe ; ret
0x000000000011ffdc : cmp eax, 0xfffff001 ; jae 0x11ffeb ; ret
0x000000000012000c : cmp eax, 0xfffff001 ; jae 0x12001b ; ret
0x000000000012003f : cmp eax, 0xfffff001 ; jae 0x12004e ; ret
0x000000000012006f : cmp eax, 0xfffff001 ; jae 0x12007e ; ret
0x000000000012009c : cmp eax, 0xfffff001 ; jae 0x1200ab ; ret
0x00000000001200cf : cmp eax, 0xfffff001 ; jae 0x1200de ; ret
0x00000000001200fc : cmp eax, 0xfffff001 ; jae 0x12010b ; ret
0x000000000012012c : cmp eax, 0xfffff001 ; jae 0x12013b ; ret
0x000000000012015f : cmp eax, 0xfffff001 ; jae 0x12016e ; ret
0x000000000012018c : cmp eax, 0xfffff001 ; jae 0x12019b ; ret
0x00000000001201bf : cmp eax, 0xfffff001 ; jae 0x1201ce ; ret
0x00000000001221fc : cmp eax, 0xfffff001 ; jae 0x12220b ; ret
0x000000000012222c : cmp eax, 0xfffff001 ; jae 0x12223b ; ret
0x000000000012236c : cmp eax, 0xfffff001 ; jae 0x12237b ; ret
0x00000000001223cc : cmp eax, 0xfffff001 ; jae 0x1223db ; ret
0x00000000001223fc : cmp eax, 0xfffff001 ; jae 0x12240b ; ret
0x000000000012252c : cmp eax, 0xfffff001 ; jae 0x12253b ; ret
0x00000000001225bf : cmp eax, 0xfffff001 ; jae 0x1225ce ; ret
0x00000000001225ec : cmp eax, 0xfffff001 ; jae 0x1225fb ; ret
0x0000000000122b0c : cmp eax, 0xfffff001 ; jae 0x122b1b ; ret
0x0000000000122b3c : cmp eax, 0xfffff001 ; jae 0x122b4b ; ret
0x0000000000122b7f : cmp eax, 0xfffff001 ; jae 0x122b8e ; ret
0x0000000000122bac : cmp eax, 0xfffff001 ; jae 0x122bbb ; ret
0x0000000000122bdc : cmp eax, 0xfffff001 ; jae 0x122beb ; ret
0x0000000000122c0c : cmp eax, 0xfffff001 ; jae 0x122c1b ; ret
0x0000000000122c3c : cmp eax, 0xfffff001 ; jae 0x122c4b ; ret
0x0000000000122c6c : cmp eax, 0xfffff001 ; jae 0x122c7b ; ret
0x0000000000122c9c : cmp eax, 0xfffff001 ; jae 0x122cab ; ret
0x0000000000122ccc : cmp eax, 0xfffff001 ; jae 0x122cdb ; ret
0x0000000000122cfc : cmp eax, 0xfffff001 ; jae 0x122d0b ; ret
0x0000000000122d2f : cmp eax, 0xfffff001 ; jae 0x122d3e ; ret
0x0000000000122d5c : cmp eax, 0xfffff001 ; jae 0x122d6b ; ret
0x0000000000122d8f : cmp eax, 0xfffff001 ; jae 0x122d9e ; ret
0x0000000000122dbc : cmp eax, 0xfffff001 ; jae 0x122dcb ; ret
0x0000000000122dec : cmp eax, 0xfffff001 ; jae 0x122dfb ; ret
0x0000000000122e1c : cmp eax, 0xfffff001 ; jae 0x122e2b ; ret
0x0000000000122e4c : cmp eax, 0xfffff001 ; jae 0x122e5b ; ret
0x0000000000122e7c : cmp eax, 0xfffff001 ; jae 0x122e8b ; ret
0x0000000000122eaf : cmp eax, 0xfffff001 ; jae 0x122ebe ; ret
0x0000000000122edf : cmp eax, 0xfffff001 ; jae 0x122eee ; ret
0x0000000000122f0c : cmp eax, 0xfffff001 ; jae 0x122f1b ; ret
0x0000000000122f3c : cmp eax, 0xfffff001 ; jae 0x122f4b ; ret
0x0000000000122f6f : cmp eax, 0xfffff001 ; jae 0x122f7e ; ret
0x0000000000122f9f : cmp eax, 0xfffff001 ; jae 0x122fae ; ret
0x0000000000122fcf : cmp eax, 0xfffff001 ; jae 0x122fde ; ret
0x0000000000122ffc : cmp eax, 0xfffff001 ; jae 0x12300b ; ret
0x000000000012302c : cmp eax, 0xfffff001 ; jae 0x12303b ; ret
0x000000000012305c : cmp eax, 0xfffff001 ; jae 0x12306b ; ret
0x000000000012308c : cmp eax, 0xfffff001 ; jae 0x12309b ; ret
0x00000000001230bf : cmp eax, 0xfffff001 ; jae 0x1230ce ; ret
0x00000000001230ec : cmp eax, 0xfffff001 ; jae 0x1230fb ; ret
0x000000000012311c : cmp eax, 0xfffff001 ; jae 0x12312b ; ret
0x000000000012314f : cmp eax, 0xfffff001 ; jae 0x12315e ; ret
0x000000000012317c : cmp eax, 0xfffff001 ; jae 0x12318b ; ret
0x00000000001231af : cmp eax, 0xfffff001 ; jae 0x1231be ; ret
0x00000000001231df : cmp eax, 0xfffff001 ; jae 0x1231ee ; ret
0x000000000012320c : cmp eax, 0xfffff001 ; jae 0x12321b ; ret
0x000000000012323c : cmp eax, 0xfffff001 ; jae 0x12324b ; ret
0x000000000012326c : cmp eax, 0xfffff001 ; jae 0x12327b ; ret
0x00000000001232ac : cmp eax, 0xfffff001 ; jae 0x1232bb ; ret
0x000000000012339c : cmp eax, 0xfffff001 ; jae 0x1233ab ; ret
0x000000000012346c : cmp eax, 0xfffff001 ; jae 0x12347b ; ret
0x000000000012349c : cmp eax, 0xfffff001 ; jae 0x1234ab ; ret
0x00000000001234cf : cmp eax, 0xfffff001 ; jae 0x1234de ; ret
0x00000000001234fc : cmp eax, 0xfffff001 ; jae 0x12350b ; ret
0x000000000012397f : cmp eax, 0xfffff001 ; jae 0x12398e ; ret
0x00000000001239ac : cmp eax, 0xfffff001 ; jae 0x1239bb ; ret
0x00000000001239dc : cmp eax, 0xfffff001 ; jae 0x1239eb ; ret
0x0000000000123a0f : cmp eax, 0xfffff001 ; jae 0x123a1e ; ret
0x00000000000466ec : cmp eax, 0xfffff001 ; jae 0x466fb ; ret
0x0000000000046cdc : cmp eax, 0xfffff001 ; jae 0x46ceb ; ret
0x0000000000057ff2 : cmp eax, 0xfffff001 ; jae 0x58005 ; xor eax, eax ; ret
0x00000000000d414c : cmp eax, 0xfffff001 ; jae 0xd415b ; ret
0x00000000000d727c : cmp eax, 0xfffff001 ; jae 0xd728b ; ret
0x00000000000d72ac : cmp eax, 0xfffff001 ; jae 0xd72bb ; ret
0x00000000000e591c : cmp eax, 0xfffff001 ; jae 0xe592b ; ret
0x00000000000e5b0f : cmp eax, 0xfffff001 ; jae 0xe5b1e ; ret
0x00000000000e5bfc : cmp eax, 0xfffff001 ; jae 0xe5c0b ; ret
0x00000000000e602c : cmp eax, 0xfffff001 ; jae 0xe603b ; ret
0x00000000000e6fdc : cmp eax, 0xfffff001 ; jae 0xe6feb ; ret
0x00000000000e722c : cmp eax, 0xfffff001 ; jae 0xe723b ; ret
0x00000000000e725c : cmp eax, 0xfffff001 ; jae 0xe726b ; ret
0x00000000000e72bc : cmp eax, 0xfffff001 ; jae 0xe72cb ; ret
0x00000000000e72ec : cmp eax, 0xfffff001 ; jae 0xe72fb ; ret
0x00000000000e731c : cmp eax, 0xfffff001 ; jae 0xe732b ; ret
0x00000000000e734c : cmp eax, 0xfffff001 ; jae 0xe735b ; ret
0x000000000013040f : cmp eax, 0xfffffe7c ; call rax
0x00000000000a5402 : cmp eax, 1 ; ja 0xa53e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ae40 : cmp eax, 1 ; jg 0x11ae4b ; ret
0x0000000000159010 : cmp eax, 1 ; jne 0x15900e ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000bf8d6 : cmp eax, 2 ; je 0xbf8ef ; xor eax, eax ; ret
0x0000000000159005 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000f4e12 : cmp eax, 3 ; je 0xf4e78 ; xor eax, eax ; pop rbp ; ret
0x00000000000979be : cmp eax, 4 ; je 0x979c9 ; ret
0x000000000005e79a : cmp eax, 9 ; ja 0x5e778 ; mov rax, r8 ; ret
0x00000000000e6025 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a5234 : cmp eax, dword ptr [rax] ; je 0xa5250 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116bc4 : cmp eax, dword ptr [rcx - 0x77] ; ret
0x00000000000d216e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xd2269 ; ret
0x00000000000d2183 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xd2269 ; ret
0x00000000000d2198 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xd2269 ; ret
0x00000000000d21b3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xd2269 ; ret
0x00000000000d21ce : cmp eax, dword ptr [rsi + 0x20] ; jne 0xd2269 ; ret
0x00000000000d21e3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xd2265 ; ret
0x00000000000d21f8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xd2265 ; ret
0x00000000000d2203 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xd2265 ; ret
0x00000000000d221e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xd2265 ; ret
0x00000000000d2233 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xd2265 ; ret
0x00000000000d2248 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xd2265 ; ret
0x00000000000d2253 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xd2265 ; ret
0x00000000000d2153 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xd2269 ; ret
0x00000000000d2123 : cmp eax, dword ptr [rsi + 4] ; jne 0xd2269 ; ret
0x00000000000d2138 : cmp eax, dword ptr [rsi + 8] ; jne 0xd2269 ; ret
0x0000000000195f7a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x1960b9 ; ret
0x0000000000195f93 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x1960b9 ; ret
0x00000000001960a3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1960b7 ; xor eax, eax ; ret
0x0000000000195fc3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1960b9 ; ret
0x0000000000195fa8 : cmp eax, dword ptr [rsi - 8] ; jne 0x1960b9 ; ret
0x00000000000d210d : cmp eax, dword ptr [rsi] ; jne 0xd2268 ; ret
0x00000000000e7e07 : cmp eax, eax ; jne 0xe7e86 ; mov eax, 0x7d00 ; ret
0x00000000000aba72 : cmp eax, ecx ; je 0xaba5f ; mov rax, r8 ; ret
0x00000000000d2338 : cmp eax, ecx ; jne 0xd2347 ; mov eax, r9d ; ret
0x0000000000195a93 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000013eccc : cmp eax, edi ; jae 0x13ecec ; mov eax, 0xffffffff ; ret
0x000000000005e48e : cmp eax, edi ; jae 0x5e448 ; mov rax, r10 ; pop rbx ; ret
0x0000000000096b1f : cmp eax, edx ; jae 0x96b4f ; movzx eax, byte ptr [rax] ; ret
0x000000000013ed0a : cmp eax, edx ; jne 0x13ece9 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000ab981 : cmp eax, edx ; jne 0xab977 ; mov rax, r8 ; ret
0x000000000008ae8a : cmp eax, esi ; ja 0x8ae87 ; lea eax, [rdx + rdi] ; ret
0x000000000012a7ed : cmp eax, esi ; jb 0x12a809 ; mov eax, 1 ; ret
0x00000000000ab94d : cmp eax, esi ; jne 0xab947 ; mov rax, r8 ; ret
0x000000000010df47 : cmp ebp, eax ; ret
0x0000000000029180 : cmp ebp, eax ; retf 0xa3
0x00000000000e6881 : cmp ebp, ebx ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000154b4a : cmp ebp, ebx ; ret
0x000000000010905e : cmp ebp, esp ; je 0x108ff5 ; mov rdi, r13 ; call 0x25359
0x000000000010908f : cmp ebp, esp ; je 0x1090a4 ; mov rdi, r13 ; call 0x25359
0x000000000009795a : cmp ebx, 0xa ; je 0x97965 ; ret
0x000000000011fe3c : cmp ebx, eax ; je 0x11fe76 ; mov rdx, rax ; jmp 0x11fe57
0x00000000000983be : cmp ebx, eax ; je 0x983cb ; pop rbx ; pop rbp ; ret
0x00000000000952dc : cmp ebx, eax ; jne 0x952d5 ; jmp 0x952b2
0x000000000010f7cc : cmp ebx, eax ; pop rbx ; setl al ; ret
0x000000000009d08c : cmp ebx, ebp ; jne 0x9d078 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014242d : cmp ebx, ecx ; jg 0x1423ee ; mov byte ptr [r10], 0 ; ret
0x00000000000e05e5 : cmp ebx, esp ; jne 0xe05d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059614 : cmp ecx, -1 ; jne 0x59610 ; mov rax, rdx ; ret
0x0000000000058282 : cmp ecx, 0x2f ; jmp rdx
0x00000000000a47d5 : cmp ecx, 0xd ; je 0xa47e7 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000014c620 : cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x000000000014b634 : cmp ecx, dword ptr [rax - 0x75] ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x0000000000156a54 : cmp ecx, dword ptr [rax - 0x77] ; retf
0x0000000000028408 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000105cec : cmp ecx, dword ptr [rax - 0xc] ; jne 0x105ce8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000018f7ea : cmp ecx, dword ptr [rsi + rdx + 0x20] ; jne 0x18f7d2 ; vzeroupper ; ret
0x000000000018f80a : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x18f7d2 ; vzeroupper ; ret
0x000000000018f82a : cmp ecx, dword ptr [rsi + rdx + 0x60] ; jne 0x18f7d2 ; vzeroupper ; ret
0x000000000018fc66 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x18fc41 ; vzeroupper ; ret
0x0000000000191ffb : cmp ecx, eax ; jne 0x192029 ; xor eax, eax ; ret
0x0000000000192e3b : cmp ecx, eax ; jne 0x192e69 ; xor eax, eax ; ret
0x0000000000192e6f : cmp ecx, eax ; jne 0x192e7c ; xor eax, eax ; ret
0x00000000000aba20 : cmp ecx, edx ; je 0xaba20 ; cmp ecx, esi ; je 0xaba20 ; ret
0x0000000000113024 : cmp ecx, edx ; seta al ; sbb eax, 0 ; ret
0x0000000000095bba : cmp ecx, esi ; ja 0x95bb7 ; lea eax, [rdx + rdi] ; ret
0x00000000000aba24 : cmp ecx, esi ; je 0xaba1c ; ret
0x00000000000abaa0 : cmp ecx, esi ; jne 0xaba94 ; ret
0x0000000000158807 : cmp edi, 0x1a ; cmovae eax, r10d ; jmp 0x1587a9
0x000000000013da21 : cmp edi, dword ptr [rax + 3] ; syscall
0x000000000011757e : cmp edi, eax ; ja 0x1175ae ; xor eax, eax ; ret
0x000000000004b605 : cmp edi, eax ; jb 0x4b5eb ; xor eax, eax ; ret
0x000000000005e423 : cmp edi, eax ; jbe 0x5e421 ; mov rax, r10 ; ret
0x000000000011f6d7 : cmp edi, eax ; jne 0x11f711 ; mov eax, 0x88 ; syscall
0x0000000000061b11 : cmp edi, ecx ; ja 0x61aff ; mov eax, r8d ; ret
0x00000000000bed2b : cmp edi, edx ; jb 0xbed38 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000120216 : cmp edi, edx ; jne 0x120210 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000110469 : cmp edi, esi ; ja 0x11045f ; mov eax, r8d ; ret
0x0000000000097fb7 : cmp edi, esi ; sete al ; ret
0x00000000000ab6fc : cmp edi, esp ; mov dword ptr [r9 + rdi - 4], r10d ; jmp 0xa7944
0x00000000000e806e : cmp edx, 0x1badface ; setne al ; ret
0x00000000000e8089 : cmp edx, 0x1cd1 ; setne al ; ret
0x00000000000d7365 : cmp edx, 0x28f5c28 ; jbe 0xd7378 ; ret
0x00000000000e8056 : cmp edx, 0x5346544e ; setne al ; ret
0x0000000000132ec9 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000e803a : cmp edx, 0xadf5 ; setne al ; ret
0x0000000000105cbf : cmp edx, 2 ; je 0x105ccd ; ret
0x0000000000077d66 : cmp edx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000018f274 : cmp edx, dword ptr [rsi] ; jne 0x18f260 ; ret
0x0000000000110ba7 : cmp edx, eax ; jne 0x110be1 ; mov eax, 0x85 ; syscall
0x0000000000110c0a : cmp edx, eax ; jne 0x110c41 ; mov eax, 0x103 ; syscall
0x000000000013ec4a : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000131b15 : cmp edx, ecx ; ja 0x131b4a ; xor eax, eax ; syscall
0x000000000005e716 : cmp edx, ecx ; jae 0x5e703 ; mov rax, r8 ; ret
0x0000000000031461 : cmp edx, ecx ; jb 0x314b8 ; mov r10, rcx ; jmp 0x31428
0x0000000000186d5a : cmp edx, ecx ; jle 0x186d7b ; movsxd rax, ecx ; ret
0x0000000000186d59 : cmp edx, ecx ; jle 0x186d7c ; movsxd rax, ecx ; ret
0x0000000000186fdc : cmp edx, ecx ; jle 0x187088 ; ret
0x000000000018f0e6 : cmp edx, ecx ; jne 0x18f0d2 ; vzeroupper ; ret
0x0000000000193fa9 : cmp edx, ecx ; jne 0x193f8d ; vzeroupper ; ret
0x00000000000bf1ff : cmp edx, ecx ; jne 0xbf1ec ; ret
0x0000000000097332 : cmp edx, edi ; setae al ; ret
0x00000000000314a6 : cmp edx, esi ; jb 0x314be ; mov r9, rsi ; mov r10, rcx ; jmp 0x31473
0x00000000000ab9e8 : cmp edx, esi ; je 0xab9e4 ; ret
0x00000000000c1197 : cmp edx, esi ; je 0xc11a7 ; test edx, edx ; jne 0xc1198 ; ret
0x000000000013f932 : cmp esi, 0x80 ; cmovb eax, edx ; ret
0x00000000000e0104 : cmp esi, 1 ; je 0xe0117 ; xor eax, eax ; ret
0x000000000008ff1d : cmp esi, 2 ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000332d8 : cmp esi, 3 ; je 0x332e5 ; ret
0x0000000000190170 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000013019b : cmp esi, dword ptr [rdi + 0x2a] ; mov eax, 0xe3 ; syscall
0x000000000014c522 : cmp esi, dword ptr [rdx + 0x28] ; ja 0x14c519 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018ec19 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000013f7f0 : cmp esi, eax ; ja 0x13f7e5 ; mov eax, 0xffffffff ; ret
0x0000000000049cc7 : cmp esp, ebx ; jne 0x49cc8 ; mov edi, ebp ; call 0xe5fc8
0x00000000000ab701 : cmp esp, edi ; jmp 0xa793f
0x000000000008a53b : cmp qword ptr [rax + 0x30], 0 ; je 0x8a54f ; ret
0x000000000015697c : cmp qword ptr [rax], rbx ; je 0x156999 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095024 : cmp qword ptr [rdi + 0x38], 0 ; je 0x95037 ; ret
0x00000000000a20fe : cmp qword ptr [rdi + 8], rsi ; jb 0xa2119 ; mov qword ptr [rdi], rsi ; ret
0x000000000013006b : cmp qword ptr [rdi], 0 ; je 0x130086 ; ret
0x000000000008d7e1 : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x0000000000026aae : cmp qword ptr [rdx + 0xd8], rax ; jne 0x26a84 ; ret
0x0000000000097959 : cmp r11d, 0xa ; je 0x97966 ; ret
0x000000000014242c : cmp r11d, r9d ; jg 0x1423ef ; mov byte ptr [r10], 0 ; ret
0x0000000000049cc6 : cmp r12, rbx ; jne 0x49cc9 ; mov edi, ebp ; call 0xe5fc9
0x0000000000058d2f : cmp r8, -8 ; jne 0x58d29 ; mov rax, rdx ; ret
0x00000000000e7df4 : cmp r8, 0x58465342 ; jne 0xe7e09 ; ret
0x000000000010f3da : cmp rax, -0x1000 ; ja 0x10f448 ; ret
0x000000000010f48a : cmp rax, -0x1000 ; ja 0x10f4f8 ; ret
0x000000000011076a : cmp rax, -0x1000 ; ja 0x110780 ; ret
0x00000000001107c9 : cmp rax, -0x1000 ; ja 0x1107e0 ; ret
0x000000000011082a : cmp rax, -0x1000 ; ja 0x110840 ; ret
0x0000000000110bb2 : cmp rax, -0x1000 ; ja 0x110bc8 ; ret
0x0000000000110c15 : cmp rax, -0x1000 ; ja 0x110c28 ; ret
0x0000000000110c6f : cmp rax, -0x1000 ; ja 0x110c88 ; ret
0x0000000000110ea8 : cmp rax, -0x1000 ; ja 0x110ec0 ; ret
0x0000000000111282 : cmp rax, -0x1000 ; ja 0x1112e8 ; ret
0x0000000000111327 : cmp rax, -0x1000 ; ja 0x111388 ; ret
0x00000000001113bb : cmp rax, -0x1000 ; ja 0x1113d0 ; ret
0x00000000001113eb : cmp rax, -0x1000 ; ja 0x111400 ; ret
0x0000000000111ac7 : cmp rax, -0x1000 ; ja 0x111b18 ; ret
0x0000000000111c47 : cmp rax, -0x1000 ; ja 0x111c98 ; ret
0x0000000000115c07 : cmp rax, -0x1000 ; ja 0x115c68 ; ret
0x000000000011628a : cmp rax, -0x1000 ; ja 0x116310 ; ret
0x0000000000116353 : cmp rax, -0x1000 ; ja 0x116368 ; ret
0x00000000001163a7 : cmp rax, -0x1000 ; ja 0x1163b8 ; ret
0x000000000011647a : cmp rax, -0x1000 ; ja 0x1164e8 ; ret
0x000000000011652a : cmp rax, -0x1000 ; ja 0x116598 ; ret
0x00000000001165cb : cmp rax, -0x1000 ; ja 0x1165e0 ; ret
0x000000000011673b : cmp rax, -0x1000 ; ja 0x116750 ; ret
0x00000000001168bb : cmp rax, -0x1000 ; ja 0x1168d0 ; ret
0x00000000001168e8 : cmp rax, -0x1000 ; ja 0x116900 ; ret
0x000000000011691e : cmp rax, -0x1000 ; ja 0x116938 ; ret
0x000000000011695b : cmp rax, -0x1000 ; ja 0x116970 ; ret
0x0000000000116e41 : cmp rax, -0x1000 ; ja 0x116ea0 ; ret
0x0000000000117054 : cmp rax, -0x1000 ; ja 0x117068 ; ret
0x0000000000117095 : cmp rax, -0x1000 ; ja 0x1170a8 ; ret
0x00000000001176c7 : cmp rax, -0x1000 ; ja 0x117728 ; ret
0x0000000000117767 : cmp rax, -0x1000 ; ja 0x1177c8 ; ret
0x000000000011780d : cmp rax, -0x1000 ; ja 0x117880 ; ret
0x00000000001178cd : cmp rax, -0x1000 ; ja 0x117940 ; ret
0x000000000011825a : cmp rax, -0x1000 ; ja 0x1182d8 ; ret
0x0000000000118487 : cmp rax, -0x1000 ; ja 0x1184d8 ; ret
0x0000000000118547 : cmp rax, -0x1000 ; ja 0x118598 ; ret
0x0000000000118607 : cmp rax, -0x1000 ; ja 0x118618 ; ret
0x0000000000119cdb : cmp rax, -0x1000 ; ja 0x119cf0 ; ret
0x0000000000119ec0 : cmp rax, -0x1000 ; ja 0x119ed8 ; ret
0x0000000000119efb : cmp rax, -0x1000 ; ja 0x119f10 ; ret
0x0000000000119f2b : cmp rax, -0x1000 ; ja 0x119f40 ; ret
0x000000000011bc07 : cmp rax, -0x1000 ; ja 0x11bc68 ; ret
0x000000000011f6e2 : cmp rax, -0x1000 ; ja 0x11f6f8 ; ret
0x000000000012239b : cmp rax, -0x1000 ; ja 0x1223b0 ; ret
0x0000000000122440 : cmp rax, -0x1000 ; ja 0x1224c0 ; ret
0x00000000001224f3 : cmp rax, -0x1000 ; ja 0x122508 ; ret
0x000000000012262a : cmp rax, -0x1000 ; ja 0x122698 ; ret
0x00000000001226da : cmp rax, -0x1000 ; ja 0x122748 ; ret
0x000000000012278a : cmp rax, -0x1000 ; ja 0x1227f8 ; ret
0x000000000012283a : cmp rax, -0x1000 ; ja 0x1228c0 ; ret
0x0000000000122907 : cmp rax, -0x1000 ; ja 0x122968 ; ret
0x0000000000122a33 : cmp rax, -0x1000 ; ja 0x122a48 ; ret
0x0000000000123307 : cmp rax, -0x1000 ; ja 0x123368 ; ret
0x00000000001233d7 : cmp rax, -0x1000 ; ja 0x123438 ; ret
0x0000000000123540 : cmp rax, -0x1000 ; ja 0x1235b8 ; ret
0x00000000001235fa : cmp rax, -0x1000 ; ja 0x123678 ; ret
0x00000000001236b7 : cmp rax, -0x1000 ; ja 0x123718 ; ret
0x0000000000123760 : cmp rax, -0x1000 ; ja 0x1237d8 ; ret
0x0000000000123817 : cmp rax, -0x1000 ; ja 0x123878 ; ret
0x00000000001238ba : cmp rax, -0x1000 ; ja 0x123940 ; ret
0x0000000000123d1a : cmp rax, -0x1000 ; ja 0x123d88 ; ret
0x0000000000123dca : cmp rax, -0x1000 ; ja 0x123e40 ; ret
0x0000000000123e7a : cmp rax, -0x1000 ; ja 0x123ee8 ; ret
0x000000000012401a : cmp rax, -0x1000 ; ja 0x124088 ; ret
0x00000000001240ca : cmp rax, -0x1000 ; ja 0x124148 ; ret
0x000000000012417b : cmp rax, -0x1000 ; ja 0x124190 ; ret
0x00000000001241ab : cmp rax, -0x1000 ; ja 0x1241c0 ; ret
0x00000000001241db : cmp rax, -0x1000 ; ja 0x1241f0 ; ret
0x000000000012420b : cmp rax, -0x1000 ; ja 0x124220 ; ret
0x00000000001242de : cmp rax, -0x1000 ; ja 0x1242f8 ; ret
0x000000000012431b : cmp rax, -0x1000 ; ja 0x124330 ; ret
0x000000000012434b : cmp rax, -0x1000 ; ja 0x124360 ; ret
0x000000000012437e : cmp rax, -0x1000 ; ja 0x124398 ; ret
0x00000000001243bb : cmp rax, -0x1000 ; ja 0x1243d0 ; ret
0x00000000001300eb : cmp rax, -0x1000 ; ja 0x130100 ; ret
0x00000000001301a5 : cmp rax, -0x1000 ; ja 0x1301b8 ; ret
0x0000000000131b1d : cmp rax, -0x1000 ; ja 0x131b38 ; ret
0x00000000000466b1 : cmp rax, -0x1000 ; ja 0x466c8 ; ret
0x0000000000046720 : cmp rax, -0x1000 ; ja 0x46738 ; ret
0x000000000004676c : cmp rax, -0x1000 ; ja 0x467c8 ; ret
0x000000000004b537 : cmp rax, -0x1000 ; ja 0x4b598 ; ret
0x0000000000065f8b : cmp rax, -0x1000 ; ja 0x65fa0 ; ret
0x0000000000065fbe : cmp rax, -0x1000 ; ja 0x65fd8 ; ret
0x00000000000d406b : cmp rax, -0x1000 ; ja 0xd4080 ; ret
0x00000000000e108b : cmp rax, -0x1000 ; ja 0xe10a0 ; ret
0x00000000000e59c4 : cmp rax, -0x1000 ; ja 0xe5a20 ; ret
0x00000000000e5a5a : cmp rax, -0x1000 ; ja 0xe5ac0 ; ret
0x00000000000e5b4d : cmp rax, -0x1000 ; ja 0xe5bc8 ; ret
0x00000000000e5ca7 : cmp rax, -0x1000 ; ja 0xe5ce8 ; ret
0x00000000000e5d27 : cmp rax, -0x1000 ; ja 0xe5d78 ; ret
0x000000000010590b : cmp rax, -0xfff ; jae 0x10591c ; ret
0x000000000010593b : cmp rax, -0xfff ; jae 0x10594c ; ret
0x000000000010596b : cmp rax, -0xfff ; jae 0x10597c ; ret
0x000000000010599b : cmp rax, -0xfff ; jae 0x1059ac ; ret
0x00000000001059cb : cmp rax, -0xfff ; jae 0x1059dc ; ret
0x00000000001059fb : cmp rax, -0xfff ; jae 0x105a0c ; ret
0x0000000000105a2b : cmp rax, -0xfff ; jae 0x105a3c ; ret
0x0000000000105a5b : cmp rax, -0xfff ; jae 0x105a6c ; ret
0x000000000011068b : cmp rax, -0xfff ; jae 0x11069c ; ret
0x0000000000110cbb : cmp rax, -0xfff ; jae 0x110ccc ; ret
0x0000000000110ceb : cmp rax, -0xfff ; jae 0x110cfc ; ret
0x0000000000110e1b : cmp rax, -0xfff ; jae 0x110e2c ; ret
0x0000000000110e4b : cmp rax, -0xfff ; jae 0x110e5c ; ret
0x0000000000110f0b : cmp rax, -0xfff ; jae 0x110f1c ; ret
0x0000000000110f3b : cmp rax, -0xfff ; jae 0x110f4c ; ret
0x000000000011182b : cmp rax, -0xfff ; jae 0x11183c ; ret
0x0000000000111b4b : cmp rax, -0xfff ; jae 0x111b5c ; ret
0x0000000000111b7b : cmp rax, -0xfff ; jae 0x111b8c ; ret
0x0000000000111bab : cmp rax, -0xfff ; jae 0x111bbc ; ret
0x0000000000111bdb : cmp rax, -0xfff ; jae 0x111bec ; ret
0x0000000000111c0b : cmp rax, -0xfff ; jae 0x111c1c ; ret
0x0000000000111ccb : cmp rax, -0xfff ; jae 0x111cdc ; ret
0x0000000000111cfb : cmp rax, -0xfff ; jae 0x111d0c ; ret
0x000000000011260b : cmp rax, -0xfff ; jae 0x11261c ; ret
0x000000000011263b : cmp rax, -0xfff ; jae 0x11264c ; ret
0x000000000011266b : cmp rax, -0xfff ; jae 0x11267c ; ret
0x000000000011269e : cmp rax, -0xfff ; jae 0x1126af ; ret
0x0000000000112e5b : cmp rax, -0xfff ; jae 0x112e6c ; ret
0x0000000000112e8e : cmp rax, -0xfff ; jae 0x112e9f ; ret
0x0000000000112ebb : cmp rax, -0xfff ; jae 0x112ecc ; ret
0x0000000000112eeb : cmp rax, -0xfff ; jae 0x112efc ; ret
0x0000000000112f1b : cmp rax, -0xfff ; jae 0x112f2c ; ret
0x0000000000112f4e : cmp rax, -0xfff ; jae 0x112f5f ; ret
0x0000000000112f7b : cmp rax, -0xfff ; jae 0x112f8c ; ret
0x0000000000112fab : cmp rax, -0xfff ; jae 0x112fbc ; ret
0x0000000000112fdb : cmp rax, -0xfff ; jae 0x112fec ; ret
0x000000000011624e : cmp rax, -0xfff ; jae 0x11625f ; ret
0x00000000001170cb : cmp rax, -0xfff ; jae 0x1170dc ; ret
0x00000000001174cb : cmp rax, -0xfff ; jae 0x1174dc ; ret
0x000000000011768b : cmp rax, -0xfff ; jae 0x11769c ; ret
0x00000000001180cb : cmp rax, -0xfff ; jae 0x1180dc ; ret
0x000000000011821b : cmp rax, -0xfff ; jae 0x11822c ; ret
0x000000000011841b : cmp rax, -0xfff ; jae 0x11842c ; ret
0x000000000011844b : cmp rax, -0xfff ; jae 0x11845c ; ret
0x000000000011850b : cmp rax, -0xfff ; jae 0x11851c ; ret
0x00000000001185cb : cmp rax, -0xfff ; jae 0x1185dc ; ret
0x000000000011890b : cmp rax, -0xfff ; jae 0x11891c ; ret
0x000000000011893b : cmp rax, -0xfff ; jae 0x11894c ; ret
0x000000000011896b : cmp rax, -0xfff ; jae 0x11897c ; ret
0x000000000011b95d : cmp rax, -0xfff ; jae 0x11b96e ; ret
0x000000000011bb9b : cmp rax, -0xfff ; jae 0x11bbac ; ret
0x000000000011bbcb : cmp rax, -0xfff ; jae 0x11bbdc ; ret
0x000000000011bc9b : cmp rax, -0xfff ; jae 0x11bcac ; ret
0x000000000011bccb : cmp rax, -0xfff ; jae 0x11bcdc ; ret
0x000000000011bcfe : cmp rax, -0xfff ; jae 0x11bd0f ; ret
0x000000000011bd2b : cmp rax, -0xfff ; jae 0x11bd3c ; ret
0x000000000011bd5b : cmp rax, -0xfff ; jae 0x11bd6c ; ret
0x000000000011bd8b : cmp rax, -0xfff ; jae 0x11bd9c ; ret
0x000000000011bdbb : cmp rax, -0xfff ; jae 0x11bdcc ; ret
0x000000000011ffae : cmp rax, -0xfff ; jae 0x11ffbf ; ret
0x000000000011ffdb : cmp rax, -0xfff ; jae 0x11ffec ; ret
0x000000000012000b : cmp rax, -0xfff ; jae 0x12001c ; ret
0x000000000012003e : cmp rax, -0xfff ; jae 0x12004f ; ret
0x000000000012006e : cmp rax, -0xfff ; jae 0x12007f ; ret
0x000000000012009b : cmp rax, -0xfff ; jae 0x1200ac ; ret
0x00000000001200ce : cmp rax, -0xfff ; jae 0x1200df ; ret
0x00000000001200fb : cmp rax, -0xfff ; jae 0x12010c ; ret
0x000000000012012b : cmp rax, -0xfff ; jae 0x12013c ; ret
0x000000000012015e : cmp rax, -0xfff ; jae 0x12016f ; ret
0x000000000012018b : cmp rax, -0xfff ; jae 0x12019c ; ret
0x00000000001201be : cmp rax, -0xfff ; jae 0x1201cf ; ret
0x00000000001221fb : cmp rax, -0xfff ; jae 0x12220c ; ret
0x000000000012222b : cmp rax, -0xfff ; jae 0x12223c ; ret
0x000000000012236b : cmp rax, -0xfff ; jae 0x12237c ; ret
0x00000000001223cb : cmp rax, -0xfff ; jae 0x1223dc ; ret
0x00000000001223fb : cmp rax, -0xfff ; jae 0x12240c ; ret
0x000000000012252b : cmp rax, -0xfff ; jae 0x12253c ; ret
0x00000000001225be : cmp rax, -0xfff ; jae 0x1225cf ; ret
0x00000000001225eb : cmp rax, -0xfff ; jae 0x1225fc ; ret
0x0000000000122b0b : cmp rax, -0xfff ; jae 0x122b1c ; ret
0x0000000000122b3b : cmp rax, -0xfff ; jae 0x122b4c ; ret
0x0000000000122b7e : cmp rax, -0xfff ; jae 0x122b8f ; ret
0x0000000000122bab : cmp rax, -0xfff ; jae 0x122bbc ; ret
0x0000000000122bdb : cmp rax, -0xfff ; jae 0x122bec ; ret
0x0000000000122c0b : cmp rax, -0xfff ; jae 0x122c1c ; ret
0x0000000000122c3b : cmp rax, -0xfff ; jae 0x122c4c ; ret
0x0000000000122c6b : cmp rax, -0xfff ; jae 0x122c7c ; ret
0x0000000000122c9b : cmp rax, -0xfff ; jae 0x122cac ; ret
0x0000000000122ccb : cmp rax, -0xfff ; jae 0x122cdc ; ret
0x0000000000122cfb : cmp rax, -0xfff ; jae 0x122d0c ; ret
0x0000000000122d2e : cmp rax, -0xfff ; jae 0x122d3f ; ret
0x0000000000122d5b : cmp rax, -0xfff ; jae 0x122d6c ; ret
0x0000000000122d8e : cmp rax, -0xfff ; jae 0x122d9f ; ret
0x0000000000122dbb : cmp rax, -0xfff ; jae 0x122dcc ; ret
0x0000000000122deb : cmp rax, -0xfff ; jae 0x122dfc ; ret
0x0000000000122e1b : cmp rax, -0xfff ; jae 0x122e2c ; ret
0x0000000000122e4b : cmp rax, -0xfff ; jae 0x122e5c ; ret
0x0000000000122e7b : cmp rax, -0xfff ; jae 0x122e8c ; ret
0x0000000000122eae : cmp rax, -0xfff ; jae 0x122ebf ; ret
0x0000000000122ede : cmp rax, -0xfff ; jae 0x122eef ; ret
0x0000000000122f0b : cmp rax, -0xfff ; jae 0x122f1c ; ret
0x0000000000122f3b : cmp rax, -0xfff ; jae 0x122f4c ; ret
0x0000000000122f6e : cmp rax, -0xfff ; jae 0x122f7f ; ret
0x0000000000122f9e : cmp rax, -0xfff ; jae 0x122faf ; ret
0x0000000000122fce : cmp rax, -0xfff ; jae 0x122fdf ; ret
0x0000000000122ffb : cmp rax, -0xfff ; jae 0x12300c ; ret
0x000000000012302b : cmp rax, -0xfff ; jae 0x12303c ; ret
0x000000000012305b : cmp rax, -0xfff ; jae 0x12306c ; ret
0x000000000012308b : cmp rax, -0xfff ; jae 0x12309c ; ret
0x00000000001230be : cmp rax, -0xfff ; jae 0x1230cf ; ret
0x00000000001230eb : cmp rax, -0xfff ; jae 0x1230fc ; ret
0x000000000012311b : cmp rax, -0xfff ; jae 0x12312c ; ret
0x000000000012314e : cmp rax, -0xfff ; jae 0x12315f ; ret
0x000000000012317b : cmp rax, -0xfff ; jae 0x12318c ; ret
0x00000000001231ae : cmp rax, -0xfff ; jae 0x1231bf ; ret
0x00000000001231de : cmp rax, -0xfff ; jae 0x1231ef ; ret
0x000000000012320b : cmp rax, -0xfff ; jae 0x12321c ; ret
0x000000000012323b : cmp rax, -0xfff ; jae 0x12324c ; ret
0x000000000012326b : cmp rax, -0xfff ; jae 0x12327c ; ret
0x00000000001232ab : cmp rax, -0xfff ; jae 0x1232bc ; ret
0x000000000012339b : cmp rax, -0xfff ; jae 0x1233ac ; ret
0x000000000012346b : cmp rax, -0xfff ; jae 0x12347c ; ret
0x000000000012349b : cmp rax, -0xfff ; jae 0x1234ac ; ret
0x00000000001234ce : cmp rax, -0xfff ; jae 0x1234df ; ret
0x00000000001234fb : cmp rax, -0xfff ; jae 0x12350c ; ret
0x000000000012397e : cmp rax, -0xfff ; jae 0x12398f ; ret
0x00000000001239ab : cmp rax, -0xfff ; jae 0x1239bc ; ret
0x00000000001239db : cmp rax, -0xfff ; jae 0x1239ec ; ret
0x0000000000123a0e : cmp rax, -0xfff ; jae 0x123a1f ; ret
0x00000000000466eb : cmp rax, -0xfff ; jae 0x466fc ; ret
0x0000000000046cdb : cmp rax, -0xfff ; jae 0x46cec ; ret
0x00000000000d414b : cmp rax, -0xfff ; jae 0xd415c ; ret
0x00000000000d727b : cmp rax, -0xfff ; jae 0xd728c ; ret
0x00000000000d72ab : cmp rax, -0xfff ; jae 0xd72bc ; ret
0x00000000000e591b : cmp rax, -0xfff ; jae 0xe592c ; ret
0x00000000000e5b0e : cmp rax, -0xfff ; jae 0xe5b1f ; ret
0x00000000000e5bfb : cmp rax, -0xfff ; jae 0xe5c0c ; ret
0x00000000000e602b : cmp rax, -0xfff ; jae 0xe603c ; ret
0x00000000000e6fdb : cmp rax, -0xfff ; jae 0xe6fec ; ret
0x00000000000e722b : cmp rax, -0xfff ; jae 0xe723c ; ret
0x00000000000e725b : cmp rax, -0xfff ; jae 0xe726c ; ret
0x00000000000e72bb : cmp rax, -0xfff ; jae 0xe72cc ; ret
0x00000000000e72eb : cmp rax, -0xfff ; jae 0xe72fc ; ret
0x00000000000e731b : cmp rax, -0xfff ; jae 0xe732c ; ret
0x00000000000e734b : cmp rax, -0xfff ; jae 0xe735c ; ret
0x0000000000098437 : cmp rax, 0x2000000 ; jbe 0x98448 ; ret
0x000000000005e799 : cmp rax, 9 ; ja 0x5e779 ; mov rax, r8 ; ret
0x000000000005e48d : cmp rax, rdi ; jae 0x5e449 ; mov rax, r10 ; pop rbx ; ret
0x0000000000096b1e : cmp rax, rdx ; jae 0x96b50 ; movzx eax, byte ptr [rax] ; ret
0x000000000008ae89 : cmp rax, rsi ; ja 0x8ae88 ; lea eax, [rdx + rdi] ; ret
0x00000000000e05e4 : cmp rbx, r12 ; jne 0xe05d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fe3b : cmp rbx, rax ; je 0x11fe77 ; mov rdx, rax ; jmp 0x11fe58
0x00000000000983bd : cmp rbx, rax ; je 0x983cc ; pop rbx ; pop rbp ; ret
0x00000000000952db : cmp rbx, rax ; jne 0x952d6 ; jmp 0x952b3
0x000000000010f7cb : cmp rbx, rax ; pop rbx ; setl al ; ret
0x000000000009d08b : cmp rbx, rbp ; jne 0x9d079 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059613 : cmp rcx, -1 ; jne 0x59611 ; mov rax, rdx ; ret
0x0000000000191ffa : cmp rcx, rax ; jne 0x19202a ; xor eax, eax ; ret
0x0000000000192e3a : cmp rcx, rax ; jne 0x192e6a ; xor eax, eax ; ret
0x0000000000113023 : cmp rcx, rdx ; seta al ; sbb eax, 0 ; ret
0x0000000000095bb9 : cmp rcx, rsi ; ja 0x95bb8 ; lea eax, [rdx + rdi] ; ret
0x000000000004b604 : cmp rdi, r8 ; jb 0x4b5ec ; xor eax, eax ; ret
0x000000000011757d : cmp rdi, rax ; ja 0x1175af ; xor eax, eax ; ret
0x000000000005e422 : cmp rdi, rax ; jbe 0x5e422 ; mov rax, r10 ; ret
0x00000000000bed2a : cmp rdi, rdx ; jb 0xbed39 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000120215 : cmp rdi, rdx ; jne 0x120211 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000110468 : cmp rdi, rsi ; ja 0x110460 ; mov eax, r8d ; ret
0x0000000000097fb6 : cmp rdi, rsi ; sete al ; ret
0x0000000000031460 : cmp rdx, r9 ; jb 0x314b9 ; mov r10, rcx ; jmp 0x31429
0x000000000013ec49 : cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000131b14 : cmp rdx, rcx ; ja 0x131b4b ; xor eax, eax ; syscall
0x000000000005e715 : cmp rdx, rcx ; jae 0x5e704 ; mov rax, r8 ; ret
0x000000000018f0e5 : cmp rdx, rcx ; jne 0x18f0d3 ; vzeroupper ; ret
0x0000000000193fa8 : cmp rdx, rcx ; jne 0x193f8e ; vzeroupper ; ret
0x00000000000bf1fe : cmp rdx, rcx ; jne 0xbf1ed ; ret
0x00000000000bf1fd : cmp rdx, rcx ; jne 0xbf1ee ; ret
0x0000000000097331 : cmp rdx, rdi ; setae al ; ret
0x000000000012c606 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000012c677 : cmp sil, cl ; cmovne eax, edx ; ret
0x000000000018a0d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000cd816 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr es:[rax] ; syscall
0x000000000018a3d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fc6b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x728d
0x000000000018b2d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018afd7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000191a79 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000007d9f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ficom word ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001841f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018acd7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a9d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000057e66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rbp ; sbb dword ptr [rax], eax ; syscall
0x000000000014c2a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000115806 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000136336 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0xffff
0x0000000000053675 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000000285c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x00000000000bf5d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x0000000000115840 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x64e83c7d], cl ; ret 0xffff
0x00000000000676f5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000019753f : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rcx, rdi ; jmp rcx
0x0000000000197758 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rdi, r12 ; jmp rdi
0x0000000000098740 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rsp, 8 ; ret
0x00000000000b73f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001553c7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; syscall
0x00000000000a3981 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, 0x450f4800 ; ret 0xfc3
0x000000000010a515 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfff2
0x00000000000256fb : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000eaaf5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; test eax, 0x8948fff3 ; ret
0x00000000001553c6 : cmpsd dword ptr es:[rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; syscall
0x00000000000bf2ac : cpuid ; jmp 0xbf276
0x000000000004a657 : cqo ; idiv rsi ; ret
0x000000000004a617 : cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000156980 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000000e48a7 : cwde ; adc byte ptr [rax], al ; syscall
0x000000000008b9d6 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000008f271 : cwde ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x66
0x00000000000469d6 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000110885 : cwde ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x00000000000f4480 : cwde ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000290e5 : cwde ; call 0x25353
0x0000000000137824 : cwde ; ja 0x137837 ; add al, ch ; ret
0x000000000012e190 : cwde ; lock dec dword ptr [rax - 0x7d] ; ret
0x0000000000124e8b : cwde ; or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e4400 : cwde ; or eax, 0x440f4800 ; ret 0x854d
0x00000000000c001b : cwde ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4073 : cwde ; ret
0x00000000000a19b4 : cwde ; test dword ptr [rax + rax], edx ; call qword ptr [rax]
0x00000000000b8939 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000b6921 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000b893a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b6922 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000193aa1 : dec byte ptr [rax + 0x7f] ; jl 0x193ac6 ; cld ; vzeroupper ; ret
0x00000000000a029f : dec byte ptr [rax + 3] ; push rax ; adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x000000000009b448 : dec byte ptr [rax - 0x73] ; ret
0x00000000000d3669 : dec byte ptr [rax - 0x77] ; out dx, eax ; call rbx
0x000000000003a6bd : dec byte ptr [rax - 0x77] ; ret
0x000000000011d0f6 : dec byte ptr [rax - 0x77] ; retf 0x8b48
0x00000000000cbdcb : dec byte ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x00000000000df19c : dec byte ptr [rax - 0x7d] ; ret
0x00000000000cce52 : dec byte ptr [rax - 0x7d] ; ret 0x4102
0x000000000013eb3a : dec byte ptr [rbp + 0x2c6fe48] ; add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x000000000011cea8 : dec byte ptr [rbp - 0x75] ; pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x00000000001029ba : dec byte ptr [rbp - 0x77] ; ret
0x00000000000d5487 : dec byte ptr [rbp - 0x77] ; retf
0x000000000011d176 : dec byte ptr [rcx + 9] ; retf 0x894c
0x0000000000047b70 : dec byte ptr [rcx + rcx*4 - 0x19] ; call rbx
0x00000000000cc6b4 : dec byte ptr [rcx - 0x76b34eec] ; retf 0x8348
0x000000000011662a : dec byte ptr [rcx] ; je 0x116661 ; mov eax, 0x48 ; syscall
0x00000000001166b9 : dec byte ptr [rcx] ; je 0x1166f1 ; mov eax, 0x48 ; syscall
0x000000000011444d : dec byte ptr [rdi] ; retf 0xc985
0x000000000018e7c1 : dec byte ptr [rdx - 0x73] ; add al, 7 ; vzeroupper ; ret
0x00000000000600e7 : dec dword ptr [r8 - 0x77] ; ret 0xf748
0x000000000009a48e : dec dword ptr [r9 - 0x7b] ; ret 0x850f
0x0000000000197c81 : dec dword ptr [rax + 0x21] ; retf 0x944
0x00000000000987c6 : dec dword ptr [rax + 0x21] ; retf 0x949
0x0000000000027e91 : dec dword ptr [rax + 0x29] ; ret
0x00000000000b8aba : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b6a62 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000e9bb3 : dec dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000104fc1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000098294 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x000000000007eb28 : dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000007f5eb : dec dword ptr [rax + 0x29] ; ret 0xf48
0x0000000000027c30 : dec dword ptr [rax + 0x29] ; retf
0x000000000005a9dd : dec dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0x3948
0x00000000000a013e : dec dword ptr [rax + 0x31] ; ret 0x894c
0x000000000002d359 : dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000111e66 : dec dword ptr [rax + 0x39] ; je 0x111e97 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000000000573cb : dec dword ptr [rax + 0x39] ; ret
0x000000000007da67 : dec dword ptr [rax + 0x39] ; ret 0x2675
0x0000000000091a41 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000070d4a : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000078913 : dec dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000f088f : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000000e551c : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000000481bd : dec dword ptr [rax + 0x39] ; ret 0xe575
0x00000000000f0982 : dec dword ptr [rax + 0x39] ; ret 0xe76
0x0000000000058fd0 : dec dword ptr [rax + 0x39] ; retf
0x000000000002b57a : dec dword ptr [rax + 0x39] ; retf 0x9775
0x00000000000779cb : dec dword ptr [rax + 0x63] ; add al, 0x81 ; add rax, rdx ; jmp rax
0x00000000000815da : dec dword ptr [rax + 0x63] ; add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000001043dd : dec dword ptr [rax + 0x63] ; add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000aa09f : dec dword ptr [rax + 0x63] ; dec dword ptr [rcx - 0x77] ; retf
0x00000000000faf8a : dec dword ptr [rax + 0x63] ; ret
0x00000000000bf439 : dec dword ptr [rax + 0x63] ; ret 0xfac1
0x000000000006680a : dec dword ptr [rax + 0x63] ; retf 0x3948
0x00000000000b4d79 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000000a38b8 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000036c6d : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009fd75 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000125815 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000130e6f : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000479d7 : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000a7139 : dec dword ptr [rax + 0xf] ; shr ebx, 1 ; retf 0x3948
0x00000000000556a9 : dec dword ptr [rax + 1] ; ret
0x000000000006b307 : dec dword ptr [rax + 1] ; ret 0x348
0x00000000000caee2 : dec dword ptr [rax + 1] ; retf
0x00000000000eacf3 : dec dword ptr [rax + 1] ; ror byte ptr [rax + 1], 1 ; ret
0x00000000001569cb : dec dword ptr [rax - 0x2d] ; ret 0x2149
0x0000000000046eef : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000526a8 : dec dword ptr [rax - 0x39] ; ret
0x000000000004d404 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000079b0b : dec dword ptr [rax - 0x55063] ; dec dword ptr [rax - 0x77] ; retf
0x000000000015548b : dec dword ptr [rax - 0x73] ; adc eax, 0x3a2d ; call qword ptr [rax]
0x00000000000c0017 : dec dword ptr [rax - 0x73] ; add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb34f : dec dword ptr [rax - 0x73] ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000000f0855 : dec dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + 0x39] ; ret 0x3176
0x000000000013890e : dec dword ptr [rax - 0x73] ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000eb24f : dec dword ptr [rax - 0x73] ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000071972 : dec dword ptr [rax - 0x73] ; or byte ptr [r8 - 0x77], cl ; ret
0x00000000001698b6 : dec dword ptr [rax - 0x73] ; push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x000000000006e24e : dec dword ptr [rax - 0x75] ; adc ecx, ebp ; pop rsp ; retf 0xffff
0x000000000010f432 : dec dword ptr [rax - 0x75] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x000000000010b93b : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x2e74
0x000000000010b74a : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000a19b0 : dec dword ptr [rax - 0x75] ; add eax, 0x148598 ; call qword ptr [rax]
0x000000000012e3ff : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000290ea : dec dword ptr [rax - 0x75] ; jge 0x29076 ; call 0x25357
0x00000000000290e1 : dec dword ptr [rax - 0x75] ; jge 0x29085 ; call 0x25357
0x00000000000f8854 : dec dword ptr [rax - 0x75] ; jnp 0xf8840 ; call 0x25357
0x00000000000f8853 : dec dword ptr [rax - 0x75] ; jnp 0xf8841 ; call 0x25358
0x000000000004d03b : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a02eb : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000014c2d9 : dec dword ptr [rax - 0x77] ; and al, 0x10 ; mov rdx, rax ; jmp 0x14c27a
0x000000000009aaff : dec dword ptr [rax - 0x77] ; and al, 8 ; call rdx
0x000000000018eaef : dec dword ptr [rax - 0x77] ; clc ; vzeroupper ; ret
0x000000000004d481 : dec dword ptr [rax - 0x77] ; fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000701fb : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0x0000000000038765 : dec dword ptr [rax - 0x77] ; imul eax ; ret 0xfecb
0x000000000005f497 : dec dword ptr [rax - 0x77] ; jrcxz 0x5f42a ; retf 0xfac1
0x0000000000029ec3 : dec dword ptr [rax - 0x77] ; ret
0x00000000000659bf : dec dword ptr [rax - 0x77] ; ret 0x12eb
0x000000000015da91 : dec dword ptr [rax - 0x77] ; ret 0x14c
0x00000000000e9cbc : dec dword ptr [rax - 0x77] ; ret 0x14eb
0x00000000000de8cc : dec dword ptr [rax - 0x77] ; ret 0x2548
0x00000000000d2aa9 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000012d125 : dec dword ptr [rax - 0x77] ; ret 0x2b49
0x0000000000114799 : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000099e50 : dec dword ptr [rax - 0x77] ; ret 0x394c
0x00000000001145a1 : dec dword ptr [rax - 0x77] ; ret 0x3b48
0x00000000000927a4 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015e3b7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000004c25b : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000002a307 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000002d22f : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000010374a : dec dword ptr [rax - 0x77] ; ret 0x8b64
0x000000000011a245 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000ea473 : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000065b30 : dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x0000000000082842 : dec dword ptr [rax - 0x77] ; ret 0xa1e9
0x000000000007e774 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000152dce : dec dword ptr [rax - 0x77] ; ret 0xbeeb
0x0000000000038fab : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000f6061 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000007f896 : dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x000000000003b967 : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000000e5514 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000004f59f : dec dword ptr [rax - 0x77] ; retf
0x00000000000cc077 : dec dword ptr [rax - 0x77] ; retf 0x1f0f
0x000000000012fe73 : dec dword ptr [rax - 0x77] ; retf 0x3948
0x000000000010186f : dec dword ptr [rax - 0x77] ; retf 0x3be9
0x000000000007a892 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000012f75a : dec dword ptr [rax - 0x77] ; retf 0xcee9
0x00000000000f2548 : dec dword ptr [rax - 0x77] ; retf 0xd349
0x00000000000715cb : dec dword ptr [rax - 0x77] ; sbb byte ptr [rax + 1], cl ; retf
0x000000000004a4f2 : dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000d4030 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000130383 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000124711 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000070ec7 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000d5cef : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000085a2d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000010d878 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 3
0x00000000000d602e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000000000018047c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x000000000011fdf1 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x00000000000a5b38 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x89 ; ret 0x894c
0x000000000005fe2e : dec dword ptr [rax - 0x7d] ; adc al, 0xf8 ; add cl, ch ; ret 0xfff6
0x000000000009c54f : dec dword ptr [rax - 0x7d] ; call 0xffffffffc3430d5f
0x0000000000078dc7 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000002c2da : dec dword ptr [rax - 0x7d] ; ret
0x0000000000056e08 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000007b7d7 : dec dword ptr [rax - 0x7d] ; ret 0x4420
0x000000000010de9b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000015d511 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000000000015421c : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x000000000003be92 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000083b9b : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000056d70 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x88 ; or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000056ba8 : dec dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x88 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000011f90b : dec dword ptr [rax - 0x7f] ; ret
0x000000000017030c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009854d : dec dword ptr [rax - 9] ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000a9ec5 : dec dword ptr [rbp + 0x39] ; ret
0x000000000007eab2 : dec dword ptr [rbp + 0x63] ; ret
0x00000000001133cb : dec dword ptr [rbp + rcx*4 + 0x24] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000008b5d3 : dec dword ptr [rbp + rcx*4 + 0x2c] ; and dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000154c3b : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x14 ; call qword ptr [rax]
0x0000000000124779 : dec dword ptr [rbp + rcx*4 + 0x53] ; add dword ptr [rcx + 0x39], ecx ; ret 0x4f73
0x000000000010125d : dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x000000000010891a : dec dword ptr [rbp - 0x75] ; jg 0x10893e ; call 0x25357
0x0000000000196ff8 : dec dword ptr [rbp - 0x76b63fb6] ; ret 0xd349
0x0000000000122180 : dec dword ptr [rbp - 0x77] ; call 0x2e78ec78
0x00000000000690ac : dec dword ptr [rbp - 0x77] ; loopne 0x6909f ; ret 0xffdc
0x00000000000e6369 : dec dword ptr [rbp - 0x77] ; ret
0x000000000002fd67 : dec dword ptr [rbp - 0x77] ; ret 0x2de9
0x0000000000031669 : dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x0000000000158311 : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0x00000000000fd4fa : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000f79a8 : dec dword ptr [rbx + 0x154245c] ; retf
0x0000000000123e2b : dec dword ptr [rbx + 0x48042444] ; add esp, 0x28 ; ret
0x00000000000e5a0a : dec dword ptr [rbx + 0x48082444] ; add esp, 0x18 ; ret
0x0000000000115c52 : dec dword ptr [rbx + 0x48082444] ; add esp, 0x28 ; ret
0x00000000000e5cd2 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x18 ; ret
0x00000000000e5bac : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x28 ; ret
0x00000000001182be : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000001164d3 : dec dword ptr [rbx + 0x48182444] ; add esp, 0x28 ; ret
0x00000000000ffe01 : dec dword ptr [rbx + 0x63] ; add al, 0xba ; add rax, r10 ; jmp rax
0x00000000000ffcaf : dec dword ptr [rbx + 0x63] ; add al, 0xbe ; add rax, r14 ; jmp rax
0x000000000009f28d : dec dword ptr [rbx + 0x9082454] ; ret 0x37e9
0x00000000000f82db : dec dword ptr [rbx + rcx*4 + 0x3c] ; ret 0x2be8
0x000000000003ee13 : dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xe9 ; ret 0xffed
0x000000000012a630 : dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xeb ; retf 0xf66
0x000000000007f225 : dec dword ptr [rbx + rcx*4 - 0x73] ; clc ; idiv bh ; inc dword ptr [rcx] ; retf
0x0000000000081b19 : dec dword ptr [rbx - 0x4df7b] ; inc dword ptr [rcx + 1] ; retf
0x000000000007b303 : dec dword ptr [rbx - 0x4ef7b] ; inc dword ptr [rcx] ; retf
0x0000000000093d9a : dec dword ptr [rbx - 0x7c2e76ed] ; retf 0x8320
0x00000000000f182e : dec dword ptr [rbx - 0x7cb7d3ad] ; rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x000000000007804b : dec dword ptr [rbx - 0x8ef7b] ; inc dword ptr [rcx] ; ret
0x000000000007eb22 : dec dword ptr [rbx - 0x8ff4b] ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000009b3af : dec dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; retf 0xc183
0x00000000001987b5 : dec dword ptr [rcx + 0x21] ; ret
0x00000000000e5cb8 : dec dword ptr [rcx + 0x22b8c7] ; add byte ptr [rax], al ; syscall
0x00000000000e645b : dec dword ptr [rcx + 0x29] ; ret
0x0000000000038293 : dec dword ptr [rcx + 0x29] ; ret 0x8348
0x00000000000f08db : dec dword ptr [rcx + 0x29] ; ret 0x8349
0x000000000019925a : dec dword ptr [rcx + 0x29] ; retf
0x000000000005a954 : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x00000000001441a4 : dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x000000000002facc : dec dword ptr [rcx + 0x3948fc51] ; ret
0x00000000001282f3 : dec dword ptr [rcx + 0x39] ; fimul word ptr [rax + 0xf] ; ret 0x8948
0x0000000000128129 : dec dword ptr [rcx + 0x39] ; fmul qword ptr [rax + 0xf] ; ret 0x8948
0x00000000000f0873 : dec dword ptr [rcx + 0x39] ; ret 0x1776
0x000000000019a46d : dec dword ptr [rcx + 0x39] ; retf
0x00000000000e71c9 : dec dword ptr [rcx + 0x39db01da] ; ret 0x9674
0x000000000003a963 : dec dword ptr [rcx + 0x3c8348c9] ; retf
0x0000000000079033 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000011008f : dec dword ptr [rcx + 0x75b8c6] ; add byte ptr [rax], al ; syscall
0x00000000001100b8 : dec dword ptr [rcx + 0x77b8c6] ; add byte ptr [rax], al ; syscall
0x00000000000cb3cb : dec dword ptr [rcx + 1] ; ret
0x00000000000345b4 : dec dword ptr [rcx + 1] ; ret 0x8d48
0x00000000000ccd80 : dec dword ptr [rcx + 1] ; ror dword ptr [rax + 1], cl ; retf 0x8b41
0x00000000000617d3 : dec dword ptr [rcx + rcx*4 + 0x44] ; ret 0xe9f8
0x000000000006070c : dec dword ptr [rcx + rcx*4 + 4] ; ret 0x85c7
0x00000000000e88d7 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25356
0x00000000000e88d6 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25357
0x0000000000159cb4 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000015a970 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbx ; call rcx
0x000000000011bee7 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000000874a2 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011760d : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015aa9e : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00000000001090a3 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x25356
0x00000000000a19fd : dec dword ptr [rcx + rcx*4 - 9] ; call rax
0x00000000000d70d9 : dec dword ptr [rcx - 0x107cb736] ; adc byte ptr [rcx], ch ; ret 0x5589
0x0000000000105de4 : dec dword ptr [rcx - 0x17f3dbbc] ; ret 0xfffe
0x000000000015d529 : dec dword ptr [rcx - 0x3f7cb739] ; add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000ece29 : dec dword ptr [rcx - 0x3f7cb73f] ; add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000007b37d : dec dword ptr [rcx - 0x4f773] ; ljmp [rcx] ; retf 0xda29
0x0000000000067aff : dec dword ptr [rcx - 0x60f43] ; dec dword ptr [rax + 0x39] ; ret
0x000000000015eefc : dec dword ptr [rcx - 0x73] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x2548
0x000000000002fe1b : dec dword ptr [rcx - 0x73] ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000113ad1 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x00000000000f4c31 : dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x000000000002dbd9 : dec dword ptr [rcx - 0x75] ; add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000012dc8c : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x000000000003fef1 : dec dword ptr [rcx - 0x75] ; jg 0x3ff0d ; call 0x3c127
0x000000000003fefa : dec dword ptr [rcx - 0x75] ; jg 0x3ff0e ; call 0x3c127
0x000000000019a7ba : dec dword ptr [rcx - 0x75] ; jge 0x19a7d8 ; add rdi, rbp ; call r12
0x00000000001078a4 : dec dword ptr [rcx - 0x75] ; or al, 0x24 ; call rax
0x000000000011d159 : dec dword ptr [rcx - 0x75] ; push rdx ; adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000000f84b2 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [r9], al ; retf
0x000000000006971d : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x000000000002fe35 : dec dword ptr [rcx - 0x77] ; mov r10, rcx ; jmp 0x2fdf7
0x000000000002fe85 : dec dword ptr [rcx - 0x77] ; mov r10, rcx ; jmp 0x2fe47
0x000000000005e24f : dec dword ptr [rcx - 0x77] ; ret
0x00000000000a4a43 : dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000007828f : dec dword ptr [rcx - 0x77] ; ret 0x8445
0x0000000000078245 : dec dword ptr [rcx - 0x77] ; ret 0x8548
0x0000000000199758 : dec dword ptr [rcx - 0x77] ; ret 0x8948
0x0000000000080dc0 : dec dword ptr [rcx - 0x77] ; ret 0x894c
0x00000000000ffa3a : dec dword ptr [rcx - 0x77] ; ret 0x8b41
0x00000000000782c5 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000007c877 : dec dword ptr [rcx - 0x77] ; ret 0x8e9
0x0000000000080d80 : dec dword ptr [rcx - 0x77] ; ret 0xbd83
0x000000000007ccb9 : dec dword ptr [rcx - 0x77] ; ret 0xbfe9
0x0000000000196dfe : dec dword ptr [rcx - 0x77] ; ret 0xc148
0x00000000000810c8 : dec dword ptr [rcx - 0x77] ; ret 0xcee9
0x000000000002fc99 : dec dword ptr [rcx - 0x77] ; retf
0x0000000000196caf : dec dword ptr [rcx - 0x77] ; ror dword ptr [rcx + 9], cl ; retf
0x000000000009a48f : dec dword ptr [rcx - 0x7b] ; ret 0x850f
0x000000000007619b : dec dword ptr [rcx - 0x7d] ; in al, dx ; add eax, ebp ; retf
0x0000000000030b44 : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000071e34 : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x000000000013dd2c : dec dword ptr [rcx - 0x8b7b] ; inc dword ptr [rbp - 0x77] ; ret
0x0000000000098182 : dec dword ptr [rcx - 9] ; ret
0x0000000000085d03 : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d43f : dec dword ptr [rcx] ; ret
0x00000000000931ca : dec dword ptr [rcx] ; ret 0x1389
0x0000000000100f6b : dec dword ptr [rcx] ; retf 0x5089
0x00000000001109c0 : dec dword ptr [rcx] ; retf 0x9489
0x0000000000125de7 : dec dword ptr [rcx] ; setbe r8b ; mov eax, r8d ; ret
0x00000000000cbf1c : dec dword ptr [rdi + rcx + 0x46] ; ret 0x8548
0x0000000000045333 : dec dword ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ret 0x574
0x0000000000054efd : dec dword ptr [rdi] ; add byte ptr [rcx], cl ; ret 0x8f74
0x000000000006be64 : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000126695 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x126626 ; loopne 0x1266a6 ; ret
0x000000000003730a : dec dword ptr [rdi] ; mov bh, 4 ; js 0x3729b ; loopne 0x3731b ; ret
0x000000000006e6d7 : dec dword ptr [rdi] ; mov dh, 0x30 ; jmp 0x6b1a8
0x00000000000e9c7c : dec dword ptr [rdi] ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000646a9 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf40
0x00000000000ee174 : dec dword ptr [rdi] ; mov dh, 0x55 ; add bh, byte ptr [rcx] ; retf
0x00000000000608a6 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f203 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000056562 : dec dword ptr [rdi] ; mov esi, 0x89410257 ; ret
0x00000000000ce6e6 : dec dword ptr [rdi] ; mov word ptr [rbx], fs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000005b4c6 : dec dword ptr [rdi] ; mov word ptr [rbx], gs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001081f4 : dec dword ptr [rdi] ; ret
0x000000000002a87f : dec dword ptr [rdi] ; ret 0x66c3
0x00000000000561d6 : dec dword ptr [rdi] ; ret 0x8b48
0x00000000000dddf6 : dec dword ptr [rdi] ; ret 0x8d89
0x000000000013f07a : dec dword ptr [rdi] ; ret 0x90c3
0x00000000000a253c : dec dword ptr [rdi] ; ret 0xfc3
0x000000000003578b : dec dword ptr [rdi] ; retf 0xd88
0x000000000004fb05 : dec dword ptr [rdi] ; test ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a8155 : dec dword ptr [rdi] ; test ah, bh ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x000000000004ccdd : dec dword ptr [rdi] ; test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002d93f : dec dword ptr [rdi] ; test byte ptr [rbp + rax], al ; add bh, dh ; ret 0
0x00000000000ea8c2 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x17fffffb], dh ; ret 0xf3ab
0x00000000000a762b : dec dword ptr [rdi] ; test byte ptr [rdx], bh ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x000000000007271c : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; add eax, 0x83480000 ; ret
0x00000000000a8f9a : dec dword ptr [rdi] ; test byte ptr [rsp], dh ; add bh, dh ; ret
0x0000000000051331 : dec dword ptr [rdi] ; test cl, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000013c777 : dec dword ptr [rdi] ; test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000141712 : dec dword ptr [rdi] ; test dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000195920 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007025d : dec dword ptr [rdi] ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000196980 : dec dword ptr [rdi] ; test ecx, ebp ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000116b25 : dec dword ptr [rdi] ; xchg dword ptr [rcx + rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000000a795b : dec dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000116b99 : dec dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x000000000006d580 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000163fc4 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x000000000006710d : dec dword ptr [rdx + 0x63] ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000009e920 : dec dword ptr [rdx - 0x73] ; jl 0x9e953 ; and byte ptr [rcx], dh ; imul al ; ret
0x00000000000fedae : dec dword ptr gs:[rax - 0x77] ; ret 0x8548
0x00000000000b8ab9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000b6a61 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000000987c5 : dec qword ptr [rax + 0x21] ; retf 0x949
0x000000000002d358 : dec qword ptr [rax + 0x3948074a] ; ret
0x000000000003be91 : dec qword ptr [rax - 0x7d] ; ret 0x4901
0x000000000004cd03 : div bh ; ret 0
0x00000000000332d5 : div byte ptr [rax + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x332e8 ; ret
0x000000000011db80 : div byte ptr [rbp + 0x1d] ; mov rdi, qword ptr [r13] ; call rbx
0x000000000011d983 : div byte ptr [rbp + 0xa] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046019 : div byte ptr [rbp + 0xc] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000b4f36 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000ab7ee : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x00000000000a59cc : div byte ptr [rcx + rsi*2 - 0x70] ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59fe
0x00000000000faa76 : div byte ptr [rdx + 0xf] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x000000000012e7dd : div byte ptr [rdx + rsi - 0x80] ; retf 0xa880
0x0000000000116349 : div byte ptr [rsi - 0x48] ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000011046a : div dword ptr [rdi - 0x15] ; mov eax, r8d ; ret
0x0000000000061b25 : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000bf3ed : div ecx ; mov eax, eax ; ret
0x00000000000bf3d6 : div esi ; mov eax, eax ; ret
0x0000000000081b62 : emms ; jrcxz 0x81b53 ; ret
0x0000000000091070 : endbr64 ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000010fa00 : endbr64 ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000117680 : endbr64 ; mov eax, 0x10 ; syscall
0x0000000000110f30 : endbr64 ; mov eax, 0x102 ; syscall
0x0000000000112fa0 : endbr64 ; mov eax, 0x107 ; syscall
0x0000000000112ee0 : endbr64 ; mov eax, 0x10a ; syscall
0x0000000000123020 : endbr64 ; mov eax, 0x110 ; syscall
0x0000000000123080 : endbr64 ; mov eax, 0x11b ; syscall
0x00000000001230e0 : endbr64 ; mov eax, 0x11f ; syscall
0x0000000000122520 : endbr64 ; mov eax, 0x122 ; syscall
0x0000000000122cf0 : endbr64 ; mov eax, 0x123 ; syscall
0x0000000000111ba0 : endbr64 ; mov eax, 0x124 ; syscall
0x0000000000111c00 : endbr64 ; mov eax, 0x125 ; syscall
0x0000000000122e10 : endbr64 ; mov eax, 0x126 ; syscall
0x0000000000123110 : endbr64 ; mov eax, 0x12c ; syscall
0x0000000000122c30 : endbr64 ; mov eax, 0x131 ; syscall
0x00000000001185c0 : endbr64 ; mov eax, 0x132 ; syscall
0x0000000000123170 : endbr64 ; mov eax, 0x134 ; syscall
0x0000000000123200 : endbr64 ; mov eax, 0x13f ; syscall
0x0000000000123230 : endbr64 ; mov eax, 0x14a ; syscall
0x0000000000123260 : endbr64 ; mov eax, 0x14b ; syscall
0x00000000001113e0 : endbr64 ; mov eax, 0x15 ; syscall
0x0000000000111bd0 : endbr64 ; mov eax, 0x16 ; syscall
0x0000000000098050 : endbr64 ; mov eax, 0x18 ; syscall
0x000000000011bcc0 : endbr64 ; mov eax, 0x1b ; syscall
0x000000000011bc90 : endbr64 ; mov eax, 0x1c ; syscall
0x0000000000124310 : endbr64 ; mov eax, 0x1e ; syscall
0x00000000001243b0 : endbr64 ; mov eax, 0x1f ; syscall
0x0000000000111b40 : endbr64 ; mov eax, 0x20 ; syscall
0x0000000000111b70 : endbr64 ; mov eax, 0x21 ; syscall
0x00000000001168b0 : endbr64 ; mov eax, 0x22 ; syscall
0x0000000000116730 : endbr64 ; mov eax, 0x23 ; syscall
0x00000000000d7270 : endbr64 ; mov eax, 0x24 ; syscall
0x00000000000e5bf0 : endbr64 ; mov eax, 0x25 ; syscall
0x00000000000d72a0 : endbr64 ; mov eax, 0x26 ; syscall
0x00000000000e6f70 : endbr64 ; mov eax, 0x27 ; syscall
0x00000000001239d0 : endbr64 ; mov eax, 0x29 ; syscall
0x00000000001239a0 : endbr64 ; mov eax, 0x30 ; syscall
0x0000000000123390 : endbr64 ; mov eax, 0x31 ; syscall
0x00000000001234f0 : endbr64 ; mov eax, 0x32 ; syscall
0x0000000000123490 : endbr64 ; mov eax, 0x33 ; syscall
0x0000000000123460 : endbr64 ; mov eax, 0x34 ; syscall
0x00000000000e6020 : endbr64 ; mov eax, 0x3b ; syscall
0x00000000000466e0 : endbr64 ; mov eax, 0x3e ; syscall
0x00000000000e5910 : endbr64 ; mov eax, 0x3f ; syscall
0x0000000000124200 : endbr64 ; mov eax, 0x40 ; syscall
0x00000000001241d0 : endbr64 ; mov eax, 0x41 ; syscall
0x0000000000124340 : endbr64 ; mov eax, 0x43 ; syscall
0x0000000000124170 : endbr64 ; mov eax, 0x44 ; syscall
0x00000000001241a0 : endbr64 ; mov eax, 0x47 ; syscall
0x0000000000111820 : endbr64 ; mov eax, 0x49 ; syscall
0x0000000000119ef0 : endbr64 ; mov eax, 0x4c ; syscall
0x0000000000119f20 : endbr64 ; mov eax, 0x4d ; syscall
0x0000000000111cc0 : endbr64 ; mov eax, 0x50 ; syscall
0x0000000000111cf0 : endbr64 ; mov eax, 0x51 ; syscall
0x0000000000065f80 : endbr64 ; mov eax, 0x52 ; syscall
0x0000000000110f00 : endbr64 ; mov eax, 0x53 ; syscall
0x0000000000112fd0 : endbr64 ; mov eax, 0x54 ; syscall
0x0000000000112e50 : endbr64 ; mov eax, 0x56 ; syscall
0x0000000000112f70 : endbr64 ; mov eax, 0x57 ; syscall
0x0000000000112eb0 : endbr64 ; mov eax, 0x58 ; syscall
0x0000000000112f10 : endbr64 ; mov eax, 0x59 ; syscall
0x0000000000110e10 : endbr64 ; mov eax, 0x5a ; syscall
0x0000000000110e40 : endbr64 ; mov eax, 0x5b ; syscall
0x0000000000112600 : endbr64 ; mov eax, 0x5c ; syscall
0x0000000000112630 : endbr64 ; mov eax, 0x5d ; syscall
0x0000000000112660 : endbr64 ; mov eax, 0x5e ; syscall
0x0000000000110e00 : endbr64 ; mov eax, 0x5f ; syscall
0x00000000000d4060 : endbr64 ; mov eax, 0x60 ; syscall
0x00000000001170c0 : endbr64 ; mov eax, 0x62 ; syscall
0x0000000000122ff0 : endbr64 ; mov eax, 0x63 ; syscall
0x00000000000e5940 : endbr64 ; mov eax, 0x64 ; syscall
0x00000000000e6f90 : endbr64 ; mov eax, 0x66 ; syscall
0x0000000000122e70 : endbr64 ; mov eax, 0x67 ; syscall
0x00000000000e6fb0 : endbr64 ; mov eax, 0x68 ; syscall
0x00000000000e6fa0 : endbr64 ; mov eax, 0x6b ; syscall
0x00000000000e6fc0 : endbr64 ; mov eax, 0x6c ; syscall
0x00000000000e7250 : endbr64 ; mov eax, 0x6d ; syscall
0x00000000000e6f80 : endbr64 ; mov eax, 0x6e ; syscall
0x00000000000e7280 : endbr64 ; mov eax, 0x6f ; syscall
0x00000000000e72e0 : endbr64 ; mov eax, 0x70 ; syscall
0x00000000000e6fd0 : endbr64 ; mov eax, 0x73 ; syscall
0x00000000000e7310 : endbr64 ; mov eax, 0x76 ; syscall
0x00000000000e7340 : endbr64 ; mov eax, 0x78 ; syscall
0x00000000000e7220 : endbr64 ; mov eax, 0x79 ; syscall
0x00000000001223c0 : endbr64 ; mov eax, 0x7a ; syscall
0x00000000001223f0 : endbr64 ; mov eax, 0x7b ; syscall
0x00000000000e72b0 : endbr64 ; mov eax, 0x7c ; syscall
0x0000000000122bd0 : endbr64 ; mov eax, 0x7d ; syscall
0x0000000000122c00 : endbr64 ; mov eax, 0x7e ; syscall
0x0000000000046cd0 : endbr64 ; mov eax, 0x83 ; syscall
0x0000000000110680 : endbr64 ; mov eax, 0x84 ; syscall
0x0000000000123050 : endbr64 ; mov eax, 0x86 ; syscall
0x00000000001225e0 : endbr64 ; mov eax, 0x87 ; syscall
0x0000000000110cb0 : endbr64 ; mov eax, 0x89 ; syscall
0x0000000000110ce0 : endbr64 ; mov eax, 0x8a ; syscall
0x0000000000117480 : endbr64 ; mov eax, 0x8c ; syscall
0x00000000001174c0 : endbr64 ; mov eax, 0x8d ; syscall
0x0000000000105900 : endbr64 ; mov eax, 0x8e ; syscall
0x0000000000105930 : endbr64 ; mov eax, 0x8f ; syscall
0x0000000000105960 : endbr64 ; mov eax, 0x90 ; syscall
0x0000000000105990 : endbr64 ; mov eax, 0x91 ; syscall
0x00000000001059f0 : endbr64 ; mov eax, 0x92 ; syscall
0x0000000000105a20 : endbr64 ; mov eax, 0x93 ; syscall
0x0000000000105a50 : endbr64 ; mov eax, 0x94 ; syscall
0x000000000011bd20 : endbr64 ; mov eax, 0x95 ; syscall
0x000000000011bd50 : endbr64 ; mov eax, 0x96 ; syscall
0x000000000011bd80 : endbr64 ; mov eax, 0x97 ; syscall
0x000000000011bdb0 : endbr64 ; mov eax, 0x98 ; syscall
0x0000000000118900 : endbr64 ; mov eax, 0x99 ; syscall
0x0000000000122b30 : endbr64 ; mov eax, 0x9a ; syscall
0x0000000000122f30 : endbr64 ; mov eax, 0x9b ; syscall
0x0000000000122b00 : endbr64 ; mov eax, 0x9e ; syscall
0x0000000000122ba0 : endbr64 ; mov eax, 0x9f ; syscall
0x000000000011bbc0 : endbr64 ; mov eax, 0xa ; syscall
0x0000000000118440 : endbr64 ; mov eax, 0xa1 ; syscall
0x0000000000118500 : endbr64 ; mov eax, 0xa2 ; syscall
0x0000000000118410 : endbr64 ; mov eax, 0xa3 ; syscall
0x00000000000d4140 : endbr64 ; mov eax, 0xa4 ; syscall
0x0000000000122360 : endbr64 ; mov eax, 0xa6 ; syscall
0x0000000000118930 : endbr64 ; mov eax, 0xa7 ; syscall
0x0000000000118960 : endbr64 ; mov eax, 0xa8 ; syscall
0x00000000001180c0 : endbr64 ; mov eax, 0xaa ; syscall
0x0000000000118210 : endbr64 ; mov eax, 0xab ; syscall
0x0000000000122220 : endbr64 ; mov eax, 0xac ; syscall
0x00000000001221f0 : endbr64 ; mov eax, 0xad ; syscall
0x0000000000122c60 : endbr64 ; mov eax, 0xae ; syscall
0x000000000011bb90 : endbr64 ; mov eax, 0xb ; syscall
0x0000000000122c90 : endbr64 ; mov eax, 0xb0 ; syscall
0x0000000000122d50 : endbr64 ; mov eax, 0xb1 ; syscall
0x0000000000122f00 : endbr64 ; mov eax, 0xb4 ; syscall
0x0000000000123290 : endbr64 ; mov eax, 0xba ; syscall
0x0000000000122390 : endbr64 ; mov eax, 0xbb ; syscall
0x0000000000117560 : endbr64 ; mov eax, 0xc ; syscall
0x0000000000120090 : endbr64 ; mov eax, 0xc2 ; syscall
0x00000000001200f0 : endbr64 ; mov eax, 0xc3 ; syscall
0x000000000011ffd0 : endbr64 ; mov eax, 0xc4 ; syscall
0x0000000000120180 : endbr64 ; mov eax, 0xc5 ; syscall
0x0000000000120120 : endbr64 ; mov eax, 0xc6 ; syscall
0x0000000000120000 : endbr64 ; mov eax, 0xc7 ; syscall
0x00000000000d3fa0 : endbr64 ; mov eax, 0xc9 ; syscall
0x0000000000105af0 : endbr64 ; mov eax, 0xcb ; syscall
0x0000000000122cc0 : endbr64 ; mov eax, 0xd5 ; syscall
0x0000000000122b60 : endbr64 ; mov eax, 0xe4 ; syscall
0x00000000001300e0 : endbr64 ; mov eax, 0xe5 ; syscall
0x00000000001232a0 : endbr64 ; mov eax, 0xea ; syscall
0x0000000000119cd0 : endbr64 ; mov eax, 0xeb ; syscall
0x0000000000122de0 : endbr64 ; mov eax, 0xfd ; syscall
0x0000000000122db0 : endbr64 ; mov eax, 0xfe ; syscall
0x0000000000122e40 : endbr64 ; mov eax, 0xff ; syscall
0x000000000004ad00 : endbr64 ; mov eax, 0xffffffff ; ret
0x00000000001494d0 : endbr64 ; mov eax, 1 ; ret
0x0000000000116950 : endbr64 ; mov eax, 1 ; syscall
0x000000000014bd00 : endbr64 ; mov eax, 2 ; ret
0x00000000001165c0 : endbr64 ; mov eax, 3 ; syscall
0x00000000001113b0 : endbr64 ; mov eax, 8 ; syscall
0x000000000015ab30 : endbr64 ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e10b0 : endbr64 ; mov eax, dword ptr [rdi] ; ret
0x00000000000372e0 : endbr64 ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000132e90 : endbr64 ; mov eax, edi ; bswap eax ; ret
0x00000000000e1060 : endbr64 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000969f0 : endbr64 ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000096a00 : endbr64 ; mov rax, rdi ; ret
0x000000000014a1d0 : endbr64 ; push rbp ; call 0x156447
0x0000000000026f60 : endbr64 ; ret
0x0000000000095a10 : endbr64 ; xor eax, eax ; ret
0x00000000001168e0 : endbr64 ; xor eax, eax ; syscall
0x0000000000095bca : enter -0x177d, 1 ; ret
0x00000000000aba73 : enter -0x1d8c, 0x4c ; mov eax, eax ; ret
0x0000000000055ba7 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x0000000000187ca7 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000000b53b1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000c9d2c : enter -0x3ca5, 0x45 ; xor ecx, ecx ; mov eax, r9d ; ret
0x000000000014d84f : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x0000000000038009 : enter -0x3f77, 0xf ; retf 0x149
0x0000000000039fb8 : enter -0x3f77, 0xf ; retf 0xd289
0x000000000003a7c4 : enter -0x3fcf, -0x77 ; retf 0xeac1
0x0000000000195a94 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000058da3 : enter -0x72b4, 0x34 ; ret 0x8d4a
0x00000000000b8936 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b691e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000b8ab6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b6a5e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000987c2 : enter -0x72b8, 0x4a ; dec dword ptr [rax + 0x21] ; retf 0x949
0x00000000001873e0 : enter -0x73b, 0x77 ; ret
0x000000000004560e : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000011b955 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x000000000005893a : enter -0x76b7, 4 ; leave ; xor eax, eax ; ret
0x0000000000045362 : enter -0x76b8, 7 ; subsd xmm0, xmm1 ; ret
0x00000000000d2356 : enter -0x76bc, -0x38 ; ret
0x0000000000064cb6 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x00000000000a8b1f : enter -0x7780, 0x45 ; ret 0xd889
0x000000000010543d : enter -0x7bf1, -0x24 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1874
0x000000000019c9b8 : enter -0x7bf1, -0x52 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000105303 : enter -0x7bf1, 0x6e ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0xe74
0x000000000014943f : enter -0x7cb8, -0x16 ; add dword ptr [rbp - 0x7e], esi ; ret
0x0000000000130424 : enter -0x7cb8, 0x7c ; retf 0x1f8
0x000000000002b1a9 : enter -0x7cf1, 0x24 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001883d4 : enter -2, -1 ; ret
0x000000000007a6be : enter -6, -1 ; call 0x76936
0x0000000000121fa1 : enter 0, 0 ; add dh, byte ptr [rax + rcx - 0x77] ; ret 0xeac1
0x000000000015025c : enter 0, 0 ; call rax
0x000000000015020d : enter 0, 0 ; jmp rcx
0x00000000000a13d8 : enter 0x14, 0 ; je 0xa13e6 ; ret
0x00000000000f3fbc : enter 0x148, -0x3e ; jmp 0xf3f53
0x000000000018b859 : enter 0x148, -8 ; vzeroupper ; ret
0x00000000000a6e5c : enter 0x149, -0x3e ; jmp 0xa6e13
0x00000000000a898e : enter 0x149, -0x3e ; jmp 0xa8943
0x00000000000a9a2e : enter 0x149, -0x3e ; jmp 0xa99e3
0x00000000001974ff : enter 0x14c, -0x2e ; jmp rdx
0x00000000001873c1 : enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000187891 : enter 0x2275, -0x7d ; ret 0x8101
0x00000000000456d1 : enter 0x280f, -0x3f ; ret
0x000000000005ad06 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018bbfe : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000004b5ec : enter 0x2948, -2 ; syscall
0x0000000000186d97 : enter 0x2948, -8 ; ret
0x000000000018faf1 : enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000ad55d : enter 0x31c3, -0x40 ; ret
0x000000000008b0df : enter 0x373, 0x44 ; mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x000000000007d1c8 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000153a8b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000153993 : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000a8227 : enter 0x4480, -0x78 ; ret 0x8945
0x00000000000a861b : enter 0x4480, -0x78 ; ret 0xb841
0x00000000000d2339 : enter 0x475, 0x44 ; mov eax, ecx ; ret
0x000000000013fd94 : enter 0x480f, -0x3e ; ret
0x000000000011a780 : enter 0x4866, 0xf ; outsb dx, byte ptr [rsi] ; ret
0x00000000000d55ef : enter 0x5c29, -0x71 ; ret 0x8141
0x00000000000d53c0 : enter 0x5c29, -0x71 ; ret 0xc181
0x000000000003bec9 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000000d4502 : enter 0x6b74, -0x77 ; ret 0x408d
0x0000000000133bb1 : enter 0xb, 0 ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000062774 : enter 0xf41, -0x6c ; ret
0x00000000001020fb : enter 0xf41, -0x6d ; ret
0x000000000002a981 : enter 0xf49, 0x4f ; ret 0x8548
0x00000000000fc56a : enter 0xf66, -0x11 ; ret 0xf41
0x0000000000191b26 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b46f9 : enter 0xf66, -0x15 ; ret
0x000000000015b1fd : enter 0xf66, -0x3b ; retf 0x6600
0x000000000012539e : enter 0xf66, -0xc ; ret 0xf66
0x00000000000bc3d4 : enter 5, 0 ; ret
0x0000000000157115 : fadd dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000000000026ab1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; jne 0x26a81 ; ret
0x0000000000055e6a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bcf8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011302a : fadd dword ptr [rax] ; ret
0x00000000000a81d5 : fadd dword ptr [rbp - 0x77] ; retf 0xc141
0x0000000000065898 : fadd dword ptr [rbp - 0x7b] ; sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000015bb24 : fadd dword ptr [rbx + 0x14807e0] ; ret
0x000000000007860f : fadd dword ptr [rbx - 0x1f3efe20] ; add al, 0x89 ; ret 0xf41
0x000000000015d7d4 : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000000d9dc8 : fadd dword ptr [rbx - 0x76b7f840] ; ret
0x00000000000ef6fb : fadd dword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cafe2 : fadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000004d484 : fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000081b2b : fadd dword ptr [rcx - 0x77] ; ret
0x000000000014dfff : fadd dword ptr [rcx - 0x77] ; retf
0x00000000000d5634 : fadd dword ptr [rdi - 0x76baffef] ; ret 0x8341
0x00000000000d7644 : fadd dword ptr [rip - 0x76b80000] ; ret
0x00000000000478d0 : fadd qword ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000001242d8 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000130c29 : fadd qword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000451d8 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000045184 : fadd st(0) ; ret
0x00000000001960b8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000192e7e : fadd st(3) ; ret
0x00000000000bf983 : fadd st(3), st(0) ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000bfeb3 : fadd st(3), st(0) ; ret
0x000000000018715d : faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x000000000018f84e : faddp st(5) ; in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000191671 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000abafd : fcmovb st(0), st(3) ; nop ; ret
0x000000000018bd1b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000000256b4 : fcom dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009dfc5 : fcom dword ptr [rcx] ; add al, ch ; ret
0x00000000000941c0 : fcom qword ptr [rdx + 0x50f0015] ; ret
0x00000000000d7577 : fcomip st(4) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a5e1b : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x00000000000cd1db : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd0e7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000090a15 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008ce9f : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000a5876 : fcos ; dec dword ptr [rax - 0x77] ; ret
0x000000000015e3b4 : fdiv dword ptr [rax - 0x14] ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x00000000000f8860 : fdiv qword ptr [rbp - 0x1b] ; mov rdi, qword ptr [rbp - 0x70] ; call 0x25359
0x0000000000049cc8 : fdiv qword ptr [rbp - 0xb] ; mov edi, ebp ; call 0xe5fc7
0x00000000000608ac : fdiv st(6) ; ret
0x00000000000714ec : fdiv st(7), st(0) ; inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7d], al ; retf
0x0000000000130def : fdivp st(0) ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009336d : fdivr dword ptr [rsi] ; jmp rax
0x000000000012d43d : fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000017fbbd : fdivr st(7) ; ret
0x00000000000b97ee : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000f33a5 : fdivrp st(6) ; ret
0x00000000000a76b7 : ffreep st(1) ; call qword ptr [rdx]
0x0000000000187161 : ffreep st(5) ; std ; xlatb ; retf
0x000000000004c094 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000004e78f : fiadd dword ptr [rbp + 0x450f48ed] ; ret 0x8948
0x00000000000a6022 : fiadd dword ptr [rbx + 0x634901c0] ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x00000000000a7966 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000006f053 : fiadd dword ptr [rcx + 1] ; retf 0x8948
0x000000000018e722 : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000e71cb : fiadd dword ptr [rcx] ; fstp xword ptr [rcx] ; ret 0x9674
0x00000000000841ad : fiadd dword ptr [rcx] ; rol byte ptr [rcx + rbp - 0x36], 0x39 ; ret 0x2b7c
0x00000000000a71c3 : fiadd dword ptr [rdi + rcx - 0x4a] ; add byte ptr [r9 + 0xf], 0x93 ; ret
0x00000000000cc63d : fiadd word ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000009031a : fiadd word ptr [rcx + rcx*4 - 1] ; mov eax, r9d ; syscall
0x000000000018d9ee : fiadd word ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000130cc8 : fiadd word ptr [rip + 0x440f4800] ; ret 0xf6c3
0x0000000000130cc7 : fiadd word ptr gs:[rip + 0x440f4800] ; ret 0xf6c3
0x000000000007d9f7 : ficom word ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000013bf06 : fidiv word ptr [rdx] ; or eax, dword ptr [rax] ; syscall
0x000000000007ed63 : fidivr dword ptr [rcx] ; ret 0x820f
0x0000000000078668 : fidivr dword ptr [rcx] ; ret 0x830f
0x0000000000057578 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00000000000790f8 : fild dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a6bda : fild dword ptr [rbp - 0x77] ; ret 0x8948
0x0000000000130da9 : fild dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000df709 : fild dword ptr [rcx + 0xf] ; ret
0x000000000015d466 : fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000000a80fd : fild dword ptr [rcx - 0x7d] ; ret
0x00000000000a769a : fild word ptr [rbp - 0x77] ; retf 0xffc1
0x00000000000ec491 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xf883
0x0000000000197b6f : fild word ptr [rcx - 0x73] ; ret
0x00000000000f1a05 : fild word ptr [rdi + rcx - 0x359cb800] ; jmp 0xf1a39
0x0000000000130c08 : fild word ptr [rip + 0x440f4800] ; ret 0xf6c3
0x00000000000999a2 : fimul dword ptr [rax + 0x21] ; ret 0x8949
0x000000000002ad0a : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000614e5 : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000000614aa : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000010c1fc : fimul dword ptr [rax + 0x63] ; add al, 0x91 ; add rax, rcx ; jmp rax
0x0000000000045988 : fimul dword ptr [rax + 9] ; ret 0x8948
0x0000000000182476 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002cefb : fimul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000011bafb : fimul dword ptr [rax - 0x77] ; out dx, eax ; mov eax, 9 ; syscall
0x00000000000701fe : fimul dword ptr [rax - 0x77] ; ret
0x0000000000048f0c : fimul dword ptr [rax - 0x77] ; retf 0x4866
0x0000000000044a39 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000155beb : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000013911b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000a80d8 : fimul dword ptr [rbp + 0x29] ; fld qword ptr [rbp + 1] ; ret 0x8341
0x000000000019720d : fimul dword ptr [rbp - 0x77] ; retf
0x00000000000cc619 : fimul dword ptr [rcx + 0x29] ; ret 0xc149
0x00000000000aaf2f : fimul dword ptr [rcx + 0x39] ; retf 0xf41
0x0000000000039e7c : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov edi, r12d ; call 0x1168e9
0x000000000017e962 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39df881
0x000000000017f9e2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39e0901
0x00000000000f72fb : fimul dword ptr [rcx] ; ret 0x840f
0x0000000000044f06 : fimul dword ptr [rcx] ; ret 0xc889
0x000000000004d10a : fimul word ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x00000000001282f6 : fimul word ptr [rax + 0xf] ; ret 0x8948
0x0000000000156ff1 : fimul word ptr [rax - 0x77] ; out dx, eax ; call qword ptr [rax]
0x0000000000067925 : fimul word ptr [rax - 0x77] ; ret
0x0000000000069912 : fimul word ptr [rax - 0x7d] ; ret
0x00000000000fff81 : fimul word ptr [rax - 0x7f] ; retf 0
0x0000000000058c3c : fimul word ptr [rbp + 0x11] ; retf
0x000000000009eb0a : fimul word ptr [rcx + rcx*4 - 0x3e] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ab9c1 : fimul word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000f3718 : fimul word ptr [rdi] ; mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000009cc17 : fist word ptr [rax + rax] ; syscall
0x00000000000e2447 : fist word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000009e022 : fistp qword ptr [rax + 0xca] ; syscall
0x0000000000098550 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000197864 : fisttp dword ptr [rax + 0x39] ; retf
0x00000000000f2de4 : fisttp dword ptr [rax + 0x63] ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000004d4f4 : fisttp dword ptr [rax + 0xf] ; retf 0xf48
0x000000000013ea74 : fisttp dword ptr [rax + 1] ; ret
0x000000000019a112 : fisttp dword ptr [rax + 9] ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000059b45 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000124c77 : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc56e1 ; pop rbx ; ret
0x0000000000124c5d : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc56fb ; pop rbx ; ret
0x00000000000c40cf : fisttp dword ptr [rcx - 0x77] ; ret 0x48e9
0x0000000000059b5f : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000054961 : fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x00000000000c93f9 : fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000e949b : fisttp dword ptr [rcx - 0x77] ; test byte ptr [rdi], 0x94 ; ret
0x000000000016260b : fisttp dword ptr [rcx] ; ret
0x000000000009345a : fisttp dword ptr [rcx] ; retf 0x8948
0x000000000004db68 : fisttp dword ptr [rdi] ; mov dl, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000140190 : fisttp dword ptr [rdi] ; ret 0x8b48
0x000000000013e851 : fisttp dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000006a374 : fisttp dword ptr [rdi] ; test dword ptr [rsi], edx ; retf 0xffff
0x00000000000a36c9 : fisttp qword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000011d214 : fisttp qword ptr [rax - 0x77] ; out dx, eax ; call r12
0x00000000000e6230 : fisttp qword ptr [rax - 0x7d] ; ret 0x4901
0x00000000001620ce : fisttp qword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x4fe9
0x00000000000ee450 : fisttp qword ptr [rcx - 0x77] ; ret
0x00000000000ee406 : fisttp qword ptr [rcx - 0x7d] ; ret
0x000000000014f0f3 : fisttp qword ptr [rdi] ; xchg eax, ebx ; ret 0x841
0x000000000005728f : fisttp word ptr [rax - 0x77] ; ret 0x8949
0x000000000003c06a : fisttp word ptr [rax - 0x7d] ; ret
0x000000000003beb3 : fisttp word ptr [rax - 0x7d] ; ret 0x4001
0x0000000000059bdf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000001480c3 : fisttp word ptr [rcx + rcx*4 - 0x17] ; call r10
0x000000000003b241 : fisttp word ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cc0eb : fisttp word ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000a9248 : fisttp word ptr [rdi] ; xchg eax, ebx ; ret 0x841
0x0000000000188d8d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000191a41 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f766b : fisub dword ptr [rsi - 0x7f] ; loope 0xf7676 ; add esi, esi ; ret
0x00000000001988b6 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x0000000000191741 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012aab2 : fisubr dword ptr [rcx - 0x76b70011] ; ret
0x000000000018ffe1 : fisubr word ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000e1085 : fld dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000caff1 : fld dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000000a8618 : fld dword ptr [rcx - 0x7d] ; enter 0x4480, -0x78 ; ret 0xb841
0x00000000000d5481 : fld dword ptr [rdi + 0xf] ; mov bh, 0x4c ; dec byte ptr [rbp - 0x77] ; retf
0x000000000011dca7 : fld dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000115d88 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a80db : fld qword ptr [rbp + 1] ; ret 0x8341
0x0000000000130d88 : fld qword ptr [rip + 0x440f4800] ; ret 0xf6c3
0x000000000004436e : fld st(3) ; ret
0x000000000018b9f6 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x000000000018ba52 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000012e608 : fld xword ptr [rcx - 0x76b7fff8] ; ret 0x57e9
0x00000000000d9dc4 : fld xword ptr [rcx] ; ret
0x0000000000045180 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x00000000000450dc : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000045042 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000044f5d : fld xword ptr [rsp + 8] ; ret
0x0000000000044fcc : fld xword ptr [rsp - 0x18] ; ret
0x00000000000d1469 : fldenv [rsi + 0xf] ; jbe 0xd14c6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af279 : fldenv [rsi + 0xf] ; je 0xaf2d6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af567 : fldenv [rsi + 0xf] ; je 0xaf5c4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000191ac1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000af171 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000d264c : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000058ca4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000be877 : fmul dword ptr [rax + 9] ; retf 0x4466
0x00000000000529b8 : fmul dword ptr [rax - 0x39] ; ret
0x000000000008d2fe : fmul dword ptr [rax - 0x77] ; ret
0x00000000000eb066 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000106587 : fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x000000000015bb21 : fmul dword ptr [rax - 9] ; fadd dword ptr [rbx + 0x14807e0] ; ret
0x000000000006f001 : fmul dword ptr [rbx + 0xf660446] ; insb byte ptr [rdi], dx ; ret
0x00000000000a6e59 : fmul dword ptr [rcx + rbp - 0x38] ; add r10, rax ; jmp 0xa6e16
0x000000000011fe5c : fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x00000000000ef156 : fmul dword ptr [rcx + rcx*4 - 1] ; call 0xebb66
0x00000000000cb74a : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000012812c : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x0000000000069720 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000ecf0a : fmul qword ptr [rax - 0x77] ; retf
0x00000000000e15a3 : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000ac319 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000b017f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a3920 : fmul qword ptr [rdi + 0xf48000d] ; ret 0xfc3
0x00000000000ee1bf : fmul qword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000133bb0 : fmul st(0) ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133b8e
0x000000000019c05e : fnsave dword ptr [rbp - 0x11] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018b9f4 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000169380 : fnstcw word ptr [rsi] ; jmp r9
0x0000000000190a47 : fnstcw word ptr [rsi] ; jmp rcx
0x000000000007b5e1 : fnstenv [rcx] ; fucomi st(1) ; ret 0xfff1
0x000000000004519a : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000191841 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000450e0 : fscale ; fstp st(1) ; ret
0x00000000000e2617 : fst qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000144d8e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a5406 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013b74f : fstp qword ptr [rbx - 0x76b70012] ; ret
0x000000000004519c : fstp st(0) ; and eax, 0x200 ; ret
0x00000000000450e2 : fstp st(1) ; ret
0x00000000000eca82 : fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xeca66
0x00000000000e71cd : fstp xword ptr [rcx] ; ret 0x9674
0x0000000000045040 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x000000000004508e : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000044fca : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000466fc : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000466c8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000004519d : fsub dword ptr [rip + 0x200] ; ret
0x0000000000066ebf : fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000090754 : fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0xf66
0x0000000000191b41 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b5794 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000be9bb : fsub qword ptr [rsi + 0xf] ; jmp 0xbe987
0x0000000000191941 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b481c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000019c4ac : fsub st(3), st(0) ; mov cl, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6747 : fsubp st(0) ; ret
0x00000000000a0da8 : fsubp st(0) ; ret 0xc1b
0x0000000000119be2 : fsubp st(1) ; retf
0x00000000001878b3 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000045046 : fsubrp st(1) ; ret
0x00000000000f2643 : fucomi st(1) ; ret
0x000000000007b5e3 : fucomi st(1) ; ret 0xfff1
0x000000000011ff1d : fucomi st(3) ; or al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000013b7a6 : fucomip st(0) ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x13b7b6 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000001431c7 : fucomip st(0) ; ret
0x000000000008fba8 : fucomip st(0) ; ret 0x36
0x00000000000f9ab8 : fucomip st(0) ; ret 0xfff4
0x000000000008b94f : fucomip st(0) ; retf
0x00000000000855d0 : fucomip st(0) ; retf 0x20
0x00000000000f83b9 : fucomip st(0) ; sal r10d, 1 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000a4ea3 : fyl2xp1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000001859c9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009c23b : hlt ; adc dword ptr [rax], eax ; call 0x98495
0x000000000002dcd2 : hlt ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000001868c9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aba23 : hlt ; cmp ecx, esi ; je 0xaba1d ; ret
0x00000000000d7578 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e238a : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011bee6 : hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x0000000000135ea8 : hlt ; hlt ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000006c3ae : hlt ; jmp 0x68deb
0x0000000000105cee : hlt ; jne 0x105ce6 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000105ced : hlt ; jne 0x105ce7 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000195f95 : hlt ; jne 0x1960b7 ; ret
0x0000000000195f94 : hlt ; jne 0x1960b8 ; ret
0x000000000011c42b : hlt ; lcall [rax + 0x4c] ; mov eax, esp ; pop rdx ; pop r12 ; ret
0x00000000000abc62 : hlt ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abd3a : hlt ; mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000abb9d : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000017075a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b3de : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e5fee : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000001955a3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000000e45a8 : hlt ; or eax, 0x8948fff4 ; ret 0x8548
0x0000000000135ea9 : hlt ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000ab9eb : hlt ; ret
0x0000000000125373 : hlt ; ret 0x4566
0x00000000001253a1 : hlt ; ret 0xf66
0x0000000000039058 : hlt ; ret 0xfffe
0x0000000000073744 : hlt ; retf
0x00000000001253a5 : hlt ; retf 0x4166
0x000000000012536e : hlt ; retf 0x4466
0x00000000001955a7 : hlt ; sub eax, edx ; ret
0x0000000000077f73 : idiv bh ; call qword ptr [rax]
0x000000000007f5e9 : idiv bh ; dec dword ptr [rax + 0x29] ; ret 0xf48
0x000000000007908c : idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000007e8a2 : idiv bh ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000000d6747 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000056e06 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000007eab0 : idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x00000000001999c8 : idiv bh ; dec dword ptr [rbp - 0x76b63fb6] ; ret 0xd349
0x000000000007828d : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8445
0x0000000000078243 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x00000000000782c3 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000007f22a : idiv bh ; inc dword ptr [rcx] ; retf
0x000000000007917d : idiv bh ; inc edi ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000007d8dd : idiv bh ; inc esi ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000007d8e3 : idiv bh ; jmp qword ptr [rax]
0x00000000000bfafb : idiv bh ; pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011639f : idiv byte ptr [rax + 0x118] ; syscall
0x000000000015d85e : idiv byte ptr [rcx] ; retf 0x850f
0x000000000012ae81 : idiv byte ptr [rdi + 0x2000004] ; call rax
0x000000000002a87a : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000049c3e : idiv dword ptr [rax + 0xca] ; syscall
0x00000000000ac000 : idiv edi ; add rsp, 8 ; ret
0x0000000000131f1c : idiv edi ; call qword ptr [rax - 0x3c0776b8]
0x000000000007eb26 : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000007da65 : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x2675
0x0000000000078911 : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000dbc75 : idiv edi ; dec dword ptr [rax + 1] ; ret
0x000000000010b939 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x2e74
0x000000000010b748 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000010b4c5 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007dfdc : idiv edi ; dec dword ptr [rax - 0x77] ; retf
0x000000000007f2ba : idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000012470f : idiv edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000078dc5 : idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000078441 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000078072 : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x0000000000124703 : idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x0000000000078c4d : idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000007804f : idiv edi ; inc dword ptr [rcx] ; ret
0x0000000000077ee1 : idiv edi ; jmp qword ptr [rax]
0x000000000004a65a : idiv esi ; ret
0x0000000000078c4c : idiv rdi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000004a659 : idiv rsi ; ret
0x000000000009e927 : imul al ; ret
0x000000000007f5a5 : imul cl ; or eax, 0xf6fffff8 ; ret 0xf10
0x00000000000c377c : imul cl ; ret
0x0000000000061945 : imul cl ; ret 0xfffb
0x00000000000b8fe8 : imul cl ; ret 8
0x00000000000dffed : imul cl ; retf 0xffef
0x00000000000f9179 : imul dword ptr [rcx] ; ret
0x0000000000197a97 : imul dword ptr [rcx] ; ret 0xd189
0x00000000000e6dbe : imul eax ; cld ; in eax, 0xf3 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e687f : imul eax ; cmp ebp, ebx ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001642aa : imul eax ; loopne 0x1642c7 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8b64
0x00000000001090a6 : imul eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff1
0x000000000004ba37 : imul eax ; ret
0x0000000000038768 : imul eax ; ret 0xfecb
0x000000000011397f : imul eax ; retf
0x00000000000ca277 : imul eax, dword ptr [rax + rbp*8], 0x22 ; retf
0x00000000000e0f65 : imul eax, dword ptr [rcx + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e100c : imul eax, dword ptr [rcx + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000004c3c1 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x0000000000194101 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000000a7223 : imul eax, dword ptr [rcx], 0x634c0000 ; ret 0x7a8d
0x00000000000aef07 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000d5474 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi + rcx - 0x49], al ; retf
0x00000000000d9cb4 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi], cl ; ret
0x0000000000198f43 : imul eax, dword ptr [rdi], 0x89480000 ; ret 0x8949
0x00000000000ae907 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000196136 : imul eax, edi ; shr rax, 0x38 ; ret
0x000000000015abb1 : imul ebp, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000008398a : imul ebp, dword ptr [rsp + rcx*2], -0x77 ; ret 0x8348
0x000000000014ce7b : imul ebx, dword ptr [rax + 0x48], -0x77 ; ret 0x2948
0x000000000012ac24 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090676 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bff41 : imul ebx, dword ptr [rbx + 0xd], 0 ; cmovne rax, rdx ; ret
0x000000000012ab84 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001687a7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000008c774 : imul ecx, dword ptr [rcx + 0x2b], 0x47 ; and byte ptr [rax + 1], cl ; ret
0x00000000001827e7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000ae607 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000012aa95 : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000199755 : imul edi, ebx, -1 ; dec dword ptr [rcx - 0x77] ; ret 0x8948
0x0000000000098291 : imul edi, edi, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8d49
0x00000000000a916f : imul edi, esp, 0x894cffff ; ret 0xf41
0x000000000012abd4 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ae007 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000000add07 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000000ada07 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000048a2c : imul edx, ebp ; call 0x25505
0x0000000000071724 : imul esi, edx, -1 ; inc dword ptr [rcx - 9] ; ret
0x0000000000096609 : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000176234 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000005495c : imul esp, edx, -1 ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x000000000013ac51 : imul esp, esp, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000196135 : imul rax, rdi ; shr rax, 0x38 ; ret
0x0000000000048a2b : imul rdx, rbp ; call 0x25506
0x000000000013ac52 : in al, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000195fc8 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e0148 : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000002cf9f : in al, 0x29 ; ret
0x000000000019a67a : in al, 0x38 ; retf 0x840f
0x0000000000142388 : in al, 0x44 ; mov eax, edx ; ret
0x000000000014c436 : in al, 0x48 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x00000000000676f1 : in al, 0x4a ; movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x00000000000d3252 : in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x0000000000033504 : in al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000143dc8 : in al, 0x53 ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001104ca : in al, 0x5b ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000037b75 : in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000a3576 : in al, 0x5d ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000067c97 : in al, 0x74 ; and al, byte ptr [rbx - 0x61f43] ; call qword ptr [rax]
0x00000000000b9bcc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000158c83 : in al, 0x74 ; ret
0x00000000000a5cd1 : in al, 0x74 ; ret 0x1f0f
0x000000000011f24d : in al, 0x75 ; cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000c16d3 : in al, 0x75 ; ret 0x894c
0x000000000011da4d : in al, 0x75 ; sub byte ptr [rax - 0x75], cl ; jge 0x11da5b ; call rbx
0x00000000000e0e9b : in al, 0xeb ; retf
0x0000000000126f79 : in al, 0xef ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000078077 : in al, 0xf ; lahf ; ret
0x0000000000158314 : in al, 0xf ; xchg eax, esp ; ret 0x854d
0x000000000017073a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000bf202 : in al, 0xf3 ; ret
0x000000000019b9c1 : in al, 4 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000130ce8 : in al, 6 ; add al, 0 ; cmovne rax, rdx ; ret
0x00000000000baa68 : in al, 6 ; add byte ptr [rax], al ; ret
0x000000000009bf0f : in al, dx ; adc al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x000000000009bf77 : in al, dx ; adc al, 0 ; syscall
0x000000000009c63a : in al, dx ; adc byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000098494 : in al, dx ; adc byte ptr [rcx - 0x77], al ; ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x0000000000154db9 : in al, dx ; add byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0x0000000000077f21 : in al, dx ; add dword ptr [rax - 0x8ff43], eax ; jmp qword ptr [rax]
0x0000000000181b40 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000007619e : in al, dx ; add eax, ebp ; retf
0x000000000015d6ea : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000015e3b6 : in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x00000000001642ae : in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8b64
0x0000000000158310 : in al, dx ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0x000000000009c21b : in al, dx ; mov bl, 0x11 ; add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x000000000011a0eb : in al, dx ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000016b3da : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000abc7a : in al, dx ; mov word ptr [rax + 4], dx ; ret
0x0000000000170b3a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d2aa3 : in al, dx ; or al, ch ; jbe 0xd2adb ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000055cb0 : in al, dx ; or al, ch ; or esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000460ce : in al, dx ; or al, ch ; retf
0x0000000000131ccb : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x976
0x000000000012b1fa : in al, dx ; or byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x0000000000182864 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000131bb6 : in al, dx ; or byte ptr [rcx - 0x77], cl ; retf 0x8944
0x0000000000136769 : in al, dx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000091332 : in al, dx ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000abaa3 : in al, dx ; ret
0x000000000009df90 : in al, dx ; retf
0x00000000000272d8 : in al, dx ; sbb byte ptr [rax], al ; ret
0x0000000000110d69 : in al, dx ; sbb byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000009d9d0 : in al, dx ; sbb byte ptr [rbx + rcx*4 + 0x25], cl ; lahf ; ret
0x00000000000c23d6 : in al, dx ; setne dl ; jmp 0xc23ec
0x00000000000c4d76 : in al, dx ; setne dl ; jmp 0xc4d8c
0x00000000000c7596 : in al, dx ; setne dl ; jmp 0xc75ac
0x00000000000cee26 : in al, dx ; setne dl ; jmp 0xcee3c
0x00000000000888e7 : in eax, 0 ; add byte ptr [rax], 0 ; jne 0x888b6 ; jmp 0x88889
0x00000000001300e5 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f8862 : in eax, 0x48 ; mov edi, dword ptr [rbp - 0x70] ; call 0x25357
0x000000000018715f : in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x000000000010905f : in eax, 0x74 ; mov cl, byte ptr [rcx + rcx*4 - 0x11] ; call 0x25358
0x0000000000109090 : in eax, 0x74 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x25358
0x000000000018f850 : in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x00000000000925a2 : in eax, 0x83 ; retf 0x8310
0x0000000000151773 : in eax, 0x89 ; ret
0x0000000000162d1a : in eax, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000624ae : in eax, 0xdf ; loopne 0x6243f ; ret
0x00000000000d2cc3 : in eax, 0xf ; je 0xd2ce8 ; add rax, 2 ; ret
0x00000000000bf369 : in eax, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000000e6dc1 : in eax, 0xf3 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001707ba : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000c40cb : in eax, 0xff ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0x48e9
0x0000000000110e9d : in eax, 1 ; jne 0x110ef1 ; mov eax, 0x10c ; syscall
0x00000000000e83d2 : in eax, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016bd9f : in eax, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000012a9d4 : in eax, 8 ; add byte ptr [rax + 0x29], cl ; retf 0x21e8
0x0000000000060ad2 : in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000011c863 : in eax, dx ; add ecx, ebx ; ret
0x0000000000149f78 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000014f53a : in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011da8e : in eax, dx ; jne 0x11dae7 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011dabe : in eax, dx ; jne 0x11db47 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000019bbb5 : in eax, dx ; jne 0x19bba7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a5ea : in eax, dx ; jne 0x4a5b9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097dfb : in eax, dx ; jne 0x97e33 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be8d2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000000be299 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be2af : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2d1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2ef : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be30f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be335 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be351 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be371 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be391 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be3b7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3d9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3f7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be417 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be433 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be453 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be473 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be493 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be4b9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be509 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be1df : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1fd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be21d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be23f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be25f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be27f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000be115 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000be127 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be13d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be155 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be16b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be17d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000be19b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be1a7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000be1bd : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be101 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000016b1ea : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000eb2f2 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000170bba : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001863d0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012232e : in eax, dx ; pop rax ; pop rdi ; call rax
0x0000000000089ec2 : in eax, dx ; ret
0x0000000000072c2d : in eax, dx ; ret 0xffff
0x00000000000bea22 : in eax, dx ; sub rax, 1 ; ret
0x0000000000197209 : in eax, dx ; xor cl, byte ptr [rbp + 0x21] ; fimul dword ptr [rbp - 0x77] ; retf
0x00000000000a1a32 : in eax, dx ; xor eax, eax ; ret
0x00000000001936fc : inc bl ; cmp dl, 1 ; jb 0x19370e ; mov byte ptr [rdi], cl ; ret
0x0000000000056cbf : inc byte ptr [r11 - 0x6bf00220] ; ret 0xf983
0x000000000013f933 : inc byte ptr [rax + 0xf000000] ; ret 0xfc3
0x0000000000122db5 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000056cc0 : inc byte ptr [rbx - 0x6bf00220] ; ret 0xf983
0x00000000000332d9 : inc byte ptr [rbx] ; je 0x332e4 ; ret
0x00000000000c2b7d : inc byte ptr [rcx + 0x29] ; ret
0x00000000000c7d58 : inc byte ptr [rcx + 0x29] ; sar dword ptr [rcx], cl ; ret 0x1d74
0x00000000000e0105 : inc byte ptr [rcx] ; je 0xe0116 ; xor eax, eax ; ret
0x000000000013951e : inc byte ptr [rdi] ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000008ff1e : inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000ab7f9 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x0000000000033bd2 : inc dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000038c72 : inc dword ptr [rax - 0x76b7bcc8] ; ret
0x00000000000eb308 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000000e841b : inc dword ptr [rax - 0x7af0f506] ; ret
0x00000000000788ca : inc dword ptr [rax - 0x8ff43] ; jmp qword ptr [rax]
0x000000000007f086 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x00000000001988b2 : inc dword ptr [rax] ; add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x000000000019749b : inc dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000078443 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000066d06 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000bf310 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000c9c79 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xc9c8c ; mov eax, r8d ; ret
0x00000000000e7ff9 : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000192057 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000122e45 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000198764 : inc dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000198831 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000198950 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000100f68 : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001248c8 : inc dword ptr [rax] ; mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x0000000000132ef0 : inc dword ptr [rax] ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x00000000000ab7fa : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x000000000011a088 : inc dword ptr [rax] ; mov rax, r8 ; ret
0x0000000000045c58 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000011a10a : inc dword ptr [rax] ; ret
0x00000000000e0e98 : inc dword ptr [rbp + 0x31] ; in al, 0xeb ; retf
0x00000000000718e3 : inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x71904
0x0000000000073d64 : inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x73d85
0x00000000001387ba : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x000000000011a592 : inc dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x77], 5 ; retf
0x000000000002f4b9 : inc dword ptr [rbp + 0x31] ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x00000000000f0915 : inc dword ptr [rbp + 0x31] ; shl byte ptr [rsi + 0xf], cl ; outsb dx, byte ptr [rsi] ; ret
0x0000000000156b64 : inc dword ptr [rbp + 0x5b0775db] ; pop rbp ; pop r12 ; ret
0x00000000000a6a5e : inc dword ptr [rbp + rcx*4 + 0x60] ; add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x000000000010f847 : inc dword ptr [rbp - 0x74f38a40] ; push rbx ; add al, 0xeb ; ret
0x000000000006c3a8 : inc dword ptr [rbp - 0x77] ; clc ; mov r12, r14 ; jmp 0x68df1
0x000000000013dd32 : inc dword ptr [rbp - 0x77] ; ret
0x00000000000a7df9 : inc dword ptr [rbp - 0x77] ; ret 0x8d4e
0x00000000000df706 : inc dword ptr [rbp - 0x7b] ; fild dword ptr [rcx + 0xf] ; ret
0x0000000000078074 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x00000000000ddede : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf
0x000000000011abcc : inc dword ptr [rbp - 0x7cc08b40] ; ret
0x00000000000714ee : inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7d], al ; retf
0x00000000000714da : inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7f], al ; retf
0x000000000002b588 : inc dword ptr [rbx - 0x16feeb93] ; retf
0x000000000007a76e : inc dword ptr [rbx - 0x427cfe20] ; call 0x1107a77c
0x0000000000081ccf : inc dword ptr [rbx - 0x4f743] ; jmp qword ptr [rax]
0x00000000001301f1 : inc dword ptr [rbx - 0x76b6fd01] ; retf 0x440f
0x00000000000ab53d : inc dword ptr [rbx - 0x76be071f] ; retf
0x0000000000074282 : inc dword ptr [rbx - 0x78f0d008] ; ret
0x0000000000082d61 : inc dword ptr [rbx - 0x78f0d008] ; ret 3
0x0000000000042a62 : inc dword ptr [rbx - 0x7af0fe08] ; jmp rbx
0x0000000000042e5c : inc dword ptr [rbx - 0x7af0fe08] ; ret 0xfff2
0x000000000003ea03 : inc dword ptr [rbx - 0x7af0fe08] ; retf
0x000000000009368b : inc dword ptr [rbx - 0x7ebf8bb3] ; retf 0
0x0000000000078314 : inc dword ptr [rbx - 0x90743] ; call qword ptr [rax]
0x000000000013e787 : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000004b088 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000bf3eb : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bf33c : inc dword ptr [rbx] ; ret
0x000000000015fd69 : inc dword ptr [rcx + 0x5c] ; pop r13 ; ret
0x00000000000d9212 : inc dword ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000162bdc : inc dword ptr [rcx + 0xf] ; mov dh, 0x4a ; add al, 0x89 ; retf 0xeac0
0x000000000007fa35 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000006f820 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x000000000006231d : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8545
0x0000000000152659 : inc dword ptr [rcx + 0xfffb] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x0000000000112bd6 : inc dword ptr [rcx + 0xfffe1] ; add byte ptr [rcx], cl ; retf 0xea81
0x000000000007b5de : inc dword ptr [rcx + 1] ; fnstenv [rcx] ; fucomi st(1) ; ret 0xfff1
0x0000000000081b1f : inc dword ptr [rcx + 1] ; retf
0x0000000000124705 : inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x0000000000115a2e : inc dword ptr [rcx + rcx*4 - 0x11] ; call 0x111cf6
0x00000000000ebb03 : inc dword ptr [rcx + rcx*4 - 0x17] ; jmp 0xebad1
0x00000000000ed834 : inc dword ptr [rcx + rcx*4 - 0x17] ; jmp 0xed802
0x00000000000e5e7e : inc dword ptr [rcx + rcx*4 - 0x18] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084fc3 : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9d29 : inc dword ptr [rcx + rcx*4 - 0x38] ; pop rbx ; ret
0x000000000009031d : inc dword ptr [rcx + rcx*4 - 0x38] ; syscall
0x00000000000884d1 : inc dword ptr [rcx + rcx*4 - 0x40] ; pop rbp ; pop r12 ; ret
0x0000000000057ea5 : inc dword ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000003dbc0 : inc dword ptr [rcx - 0x75] ; add byte ptr [rbx - 0x7bf0fd08], al ; call qword ptr [rcx]
0x0000000000040794 : inc dword ptr [rcx - 0x75] ; add byte ptr [rbx - 0x7bf0fd08], al ; retf 8
0x0000000000067922 : inc dword ptr [rcx - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0x0000000000105f2b : inc dword ptr [rcx - 0x77] ; ret 0xce0f
0x000000000005b8a2 : inc dword ptr [rcx - 0x77] ; retf 0xd348
0x00000000000a78ce : inc dword ptr [rcx - 0x7d] ; ret
0x000000000006f510 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000011bb4e : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000006f6e2 : inc dword ptr [rcx - 0x7f] ; retf
0x00000000000705c7 : inc dword ptr [rcx - 0xa] ; ret
0x0000000000078c4f : inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000006ffd4 : inc dword ptr [rcx - 9] ; ret
0x00000000000801c0 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000015d78a : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000816b3 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x00000000000eaac9 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000078051 : inc dword ptr [rcx] ; ret
0x000000000007b1b9 : inc dword ptr [rcx] ; retf
0x0000000000196280 : inc dword ptr [rdi] ; add byte ptr [rax + 0x21], cl ; ret 0x8548
0x000000000018956d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000044f2d : inc eax ; shr eax, 0x1f ; ret
0x00000000001884fc : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000164277 : inc ebx ; mov eax, 0xfffffffe ; ret
0x0000000000195a99 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ddb4e : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000deb45 : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000de7e0 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007917f : inc edi ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x0000000000119311 : inc esi ; jmp qword ptr [r8]
0x0000000000140bd5 : inc esi ; rol byte ptr [r8], 0xc6 ; ret
0x0000000000077edd : inc esi ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000007d8df : inc esi ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000182fe4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000154efd : insb byte ptr [rdi], dx ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000108884 : insb byte ptr [rdi], dx ; and al, 0x50 ; shl rdi, 3 ; call 0x25339
0x000000000004508b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000044fcd : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000045181 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000450dd : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000045043 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x0000000000044f5e : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000007e772 : insb byte ptr [rdi], dx ; cli ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000d9f1e : insb byte ptr [rdi], dx ; jl 0xd9f34 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000143f53 : insb byte ptr [rdi], dx ; mov ch, 0xa ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000150338 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000028e83 : insb byte ptr [rdi], dx ; ret
0x000000000005ae28 : insb byte ptr [rdi], dx ; ret 0x110f
0x000000000014dfc2 : insb byte ptr [rdi], dx ; ret 0x290f
0x0000000000163aba : insb byte ptr [rdi], dx ; ret 0x44c7
0x000000000008ce0d : insb byte ptr [rdi], dx ; ret 0x7589
0x00000000000551fd : insb byte ptr [rdi], dx ; ret 0x7c89
0x000000000010aed3 : insb byte ptr [rdi], dx ; ret 0x8948
0x0000000000163706 : insb byte ptr [rdi], dx ; ret 0x8d48
0x0000000000028a13 : insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000090757 : insb byte ptr [rdi], dx ; ret 0xf66
0x000000000009c220 : insb byte ptr [rdi], dx ; ret 0xffff
0x000000000008cde7 : insb byte ptr [rdi], dx ; retf
0x0000000000153c02 : insb byte ptr [rdi], dx ; retf 0x290f
0x000000000015ac87 : insb byte ptr [rdi], dx ; retf 0x4866
0x000000000004aff6 : insb byte ptr [rdi], dx ; rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; adc dword ptr [rdi], eax ; ret
0x000000000008cf91 : insb byte ptr [rdi], dx ; ror byte ptr [rdi], 0x11 ; add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000009900b : insb byte ptr [rdi], dx ; ror byte ptr [rdi], 0x11 ; add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x000000000002a7fc : insb byte ptr [rdi], dx ; ror dword ptr [rdi], 0x11 ; ret
0x0000000000185c50 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001126ff : insd dword ptr [rdi], dx ; add al, ch ; retf 0x45
0x000000000004a2e3 : insd dword ptr [rdi], dx ; add byte ptr [rcx], al ; xor esi, esi ; mov rdi, r9 ; call r8
0x0000000000186b50 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000db5fe : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], al ; ret 0x8944
0x00000000000d42fc : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000fe5ae : insd dword ptr [rdi], dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000dab2f : insd dword ptr [rdi], dx ; jo 0xdab45 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000127c7b : insd dword ptr [rdi], dx ; or al, 0 ; syscall
0x000000000010bfbf : insd dword ptr [rdi], dx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000132aff : insd dword ptr [rdi], dx ; ret 0xfff5
0x000000000015636f : insd dword ptr [rdi], dx ; retf 0xfffd
0x0000000000029128 : insd dword ptr [rdi], dx ; sbb al, 0 ; ret
0x0000000000109005 : insd dword ptr [rdi], dx ; sbb al, ch ; ret
0x000000000008c74d : insd dword ptr [rdi], dx ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000874d7 : insd dword ptr [rdi], dx ; sub dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001488e2 : int 0x80
0x000000000002d0ad : int1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000061b26 : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000105ceb : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x105ce9 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000114798 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000001145a0 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000108f69 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000010d877 : int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 3
0x00000000001133ca : int1 ; dec dword ptr [rbp + rcx*4 + 0x24] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000113ad0 : int1 ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x0000000000095bbb : int1 ; ja 0x95bb6 ; lea eax, [rdx + rdi] ; ret
0x00000000000aba25 : int1 ; je 0xaba1b ; ret
0x000000000019367f : int1 ; jl 0x1936d0 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001936a0 : int1 ; jl 0x1936f1 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001936b3 : int1 ; jl 0x193704 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000193788 : int1 ; jl 0x1937d9 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001937e0 : int1 ; jl 0x193831 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000019387d : int1 ; jl 0x1938ce ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000816ba : int1 ; jmp rax
0x00000000000bf2c5 : int1 ; jmp rcx
0x00000000000abaa1 : int1 ; jne 0xaba93 ; ret
0x000000000018e153 : int1 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000000bf2a6 : int1 ; mov eax, 0x80000006 ; cpuid ; jmp 0xbf27c
0x00000000000bf3ee : int1 ; mov eax, eax ; ret
0x00000000001705ab : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b9af : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c500 : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000003119f : int1 ; mov r10, rcx ; jmp 0x31154
0x00000000000313ff : int1 ; mov r10, rcx ; jmp 0x313b4
0x00000000000314ac : int1 ; mov r10, rcx ; jmp 0x3146d
0x000000000012ffee : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000147ccb : int1 ; mov rdi, r13 ; call r12
0x000000000008d8c1 : int1 ; mov rdi, r15 ; call r12
0x00000000000282c4 : int1 ; mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x0000000000081077 : int1 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001502a5 : int1 ; movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x00000000000db4e7 : int1 ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000195573 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000126363 : int1 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000573fe : int1 ; pop rbx ; ret
0x000000000009d98b : int1 ; ret
0x000000000003f52b : int1 ; retf
0x0000000000195577 : int1 ; sub eax, edx ; ret
0x000000000018c6a3 : int1 ; vzeroupper ; ret
0x00000000001693b4 : invd ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000007f37d : iretd ; call qword ptr [rbx]
0x000000000004a2ea : iretd ; call r8
0x000000000011008e : iretd ; dec dword ptr [rcx + 0x75b8c6] ; add byte ptr [rax], al ; syscall
0x00000000001100b7 : iretd ; dec dword ptr [rcx + 0x77b8c6] ; add byte ptr [rax], al ; syscall
0x0000000000162f44 : iretd ; or byte ptr [rax], al ; call qword ptr [rax]
0x0000000000122135 : iretd ; sub rsp, 8 ; call rsi
0x000000000012217d : iretd ; xor eax, esi ; dec dword ptr [rbp - 0x77] ; call 0x2e78ec7b
0x0000000000105b7f : ja 0x105b8f ; setne al ; movzx eax, al ; ret
0x000000000010f3e0 : ja 0x10f442 ; ret
0x000000000010f490 : ja 0x10f4f2 ; ret
0x000000000010fa05 : ja 0x10fa0f ; xor eax, eax ; ret
0x00000000001100bc : ja 0x1100c2 ; add byte ptr [rax], al ; syscall
0x000000000011046b : ja 0x11045d ; mov eax, r8d ; ret
0x00000000001104b7 : ja 0x1104a9 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110668 : ja 0x110638 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000110770 : ja 0x11077a ; ret
0x0000000000110761 : ja 0x110797 ; mov eax, 4 ; syscall
0x00000000001107cf : ja 0x1107da ; ret
0x00000000001107c0 : ja 0x1107f7 ; mov eax, 5 ; syscall
0x0000000000110830 : ja 0x11083a ; ret
0x0000000000110821 : ja 0x110857 ; mov eax, 6 ; syscall
0x0000000000110bb8 : ja 0x110bc2 ; ret
0x0000000000110c1b : ja 0x110c22 ; ret
0x0000000000110c75 : ja 0x110c82 ; ret
0x0000000000110c66 : ja 0x110c9f ; mov eax, 0x106 ; syscall
0x0000000000110eae : ja 0x110eba ; ret
0x0000000000111288 : ja 0x1112e2 ; ret
0x000000000011132d : ja 0x111382 ; ret
0x00000000001113c1 : ja 0x1113ca ; ret
0x00000000001113f1 : ja 0x1113fa ; ret
0x0000000000111acd : ja 0x111b12 ; ret
0x0000000000111c4d : ja 0x111c92 ; ret
0x0000000000115a87 : ja 0x115a98 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000115c0d : ja 0x115c62 ; ret
0x0000000000116290 : ja 0x11630a ; ret
0x0000000000116359 : ja 0x116362 ; ret
0x00000000001163ad : ja 0x1163b2 ; ret
0x0000000000116480 : ja 0x1164e2 ; ret
0x0000000000116530 : ja 0x116592 ; ret
0x00000000001165d1 : ja 0x1165da ; ret
0x0000000000116741 : ja 0x11674a ; ret
0x00000000001168c1 : ja 0x1168ca ; ret
0x00000000001168ee : ja 0x1168fa ; ret
0x0000000000116924 : ja 0x116932 ; ret
0x0000000000116961 : ja 0x11696a ; ret
0x00000000001169d7 : ja 0x1169e3 ; ret
0x0000000000116a20 : ja 0x116a2c ; ret
0x0000000000116e47 : ja 0x116e9a ; ret
0x000000000011705a : ja 0x117062 ; ret
0x000000000011709b : ja 0x1170a2 ; ret
0x0000000000117580 : ja 0x1175ac ; xor eax, eax ; ret
0x00000000001176cd : ja 0x117722 ; ret
0x000000000011776d : ja 0x1177c2 ; ret
0x0000000000117813 : ja 0x11787a ; ret
0x00000000001178d3 : ja 0x11793a ; ret
0x0000000000117e78 : ja 0x117e7e ; add byte ptr [rax], al ; syscall
0x0000000000118260 : ja 0x1182d2 ; ret
0x000000000011848d : ja 0x1184d2 ; ret
0x000000000011854d : ja 0x118592 ; ret
0x000000000011860d : ja 0x118612 ; ret
0x0000000000119ce1 : ja 0x119cea ; ret
0x0000000000119ec6 : ja 0x119ed2 ; ret
0x0000000000119f01 : ja 0x119f0a ; ret
0x0000000000119f31 : ja 0x119f3a ; ret
0x000000000011bb0c : ja 0x11bb74 ; pop rbx ; pop rbp ; ret
0x000000000011bc0d : ja 0x11bc62 ; ret
0x000000000011f6e8 : ja 0x11f6f2 ; ret
0x00000000001223a1 : ja 0x1223aa ; ret
0x0000000000122446 : ja 0x1224ba ; ret
0x00000000001224f9 : ja 0x122502 ; ret
0x0000000000122630 : ja 0x122692 ; ret
0x00000000001226e0 : ja 0x122742 ; ret
0x0000000000122790 : ja 0x1227f2 ; ret
0x0000000000122840 : ja 0x1228ba ; ret
0x000000000012290d : ja 0x122962 ; ret
0x00000000001229d5 : ja 0x122a10 ; mov r8d, eax ; mov eax, r8d ; ret
0x0000000000122a39 : ja 0x122a42 ; ret
0x000000000012330d : ja 0x123362 ; ret
0x00000000001233dd : ja 0x123432 ; ret
0x0000000000123546 : ja 0x1235b2 ; ret
0x0000000000123600 : ja 0x123672 ; ret
0x00000000001236bd : ja 0x123712 ; ret
0x0000000000123766 : ja 0x1237d2 ; ret
0x000000000012381d : ja 0x123872 ; ret
0x00000000001238c0 : ja 0x12393a ; ret
0x0000000000123d20 : ja 0x123d82 ; ret
0x0000000000123dd0 : ja 0x123e3a ; ret
0x0000000000123e80 : ja 0x123ee2 ; ret
0x0000000000124020 : ja 0x124082 ; ret
0x00000000001240d0 : ja 0x124142 ; ret
0x0000000000124181 : ja 0x12418a ; ret
0x00000000001241b1 : ja 0x1241ba ; ret
0x00000000001241e1 : ja 0x1241ea ; ret
0x0000000000124211 : ja 0x12421a ; ret
0x00000000001242e4 : ja 0x1242f2 ; ret
0x0000000000124321 : ja 0x12432a ; ret
0x0000000000124351 : ja 0x12435a ; ret
0x0000000000124384 : ja 0x124392 ; ret
0x00000000001243c1 : ja 0x1243ca ; ret
0x0000000000127217 : ja 0x12722a ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000128d07 : ja 0x128d1a ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000001300f1 : ja 0x1300fa ; ret
0x0000000000130185 : ja 0x130155 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000001301ab : ja 0x1301b2 ; ret
0x000000000013019c : ja 0x1301cf ; mov eax, 0xe3 ; syscall
0x0000000000131b23 : ja 0x131b32 ; ret
0x0000000000131b17 : ja 0x131b48 ; xor eax, eax ; syscall
0x0000000000132d5b : ja 0x132d6e ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000137825 : ja 0x137836 ; add al, ch ; ret
0x000000000013f536 : ja 0x13f53b ; ret
0x000000000013f7f2 : ja 0x13f7e3 ; mov eax, 0xffffffff ; ret
0x00000000001494a5 : ja 0x1494f8 ; mov rdi, r8 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000014a6ef : ja 0x14a740 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014c525 : ja 0x14c516 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015a6f6 : ja 0x15a715 ; mov eax, r8d ; ret
0x000000000015a72e : ja 0x15a74d ; mov rax, r8 ; ret
0x000000000018e86e : ja 0x18e83a ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000018ec18 : ja 0x18ec5e ; jb 0x18ec2a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018f105 : ja 0x18f13c ; jb 0x18f114 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000190959 : ja 0x190927 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000193457 : ja 0x19345b ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000001939a8 : ja 0x193a06 ; jb 0x1939ba ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000193fcd : ja 0x194012 ; jb 0x193fdc ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000466b7 : ja 0x466c2 ; ret
0x0000000000046726 : ja 0x46732 ; ret
0x0000000000046772 : ja 0x467c2 ; ret
0x000000000004b53d : ja 0x4b592 ; ret
0x0000000000055cbe : ja 0x55cde ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005e79d : ja 0x5e775 ; mov rax, r8 ; ret
0x0000000000061b13 : ja 0x61afd ; mov eax, r8d ; ret
0x0000000000065f91 : ja 0x65f9a ; ret
0x0000000000065fc4 : ja 0x65fd2 ; ret
0x000000000008ae8c : ja 0x8ae85 ; lea eax, [rdx + rdi] ; ret
0x0000000000090a11 : ja 0x90a29 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000956f0 : ja 0x95677 ; retf 0x6601
0x0000000000095bbc : ja 0x95bb5 ; lea eax, [rdx + rdi] ; ret
0x00000000000a2100 : ja 0xa2111 ; jb 0xa2117 ; mov qword ptr [rdi], rsi ; ret
0x00000000000a5405 : ja 0xa53e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba057 : ja 0xba05d ; ret
0x00000000000ba073 : ja 0xba07d ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba0b4 : ja 0xba0c3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba139 : ja 0xba14d ; ret
0x00000000000ba18f : ja 0xba1a7 ; ret
0x00000000000ba211 : ja 0xba22d ; ret
0x00000000000bb697 : ja 0xbb6a1 ; lea rax, [rdi + 2] ; ret
0x00000000000bb6b3 : ja 0xbb6c1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000bb704 : ja 0xbb717 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000bb7e9 : ja 0xbb801 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb85f : ja 0xbb87b ; lea rax, [rdi + 0x14] ; ret
0x00000000000bb8e1 : ja 0xbb901 ; lea rax, [rdi + 0x18] ; ret
0x00000000000bd367 : ja 0xbd36d ; ret
0x00000000000bd383 : ja 0xbd38d ; mov dword ptr [rdi], ecx ; ret
0x00000000000bd3c4 : ja 0xbd3d3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000bd449 : ja 0xbd45d ; ret
0x00000000000bd49f : ja 0xbd4b7 ; ret
0x00000000000bd521 : ja 0xbd53d ; ret
0x00000000000bde57 : ja 0xbde5d ; ret
0x00000000000bde73 : ja 0xbde7d ; mov dword ptr [rdi], ecx ; ret
0x00000000000bdeb4 : ja 0xbdec3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000bdf39 : ja 0xbdf4d ; ret
0x00000000000bdf8f : ja 0xbdfa7 ; ret
0x00000000000be011 : ja 0xbe02d ; ret
0x00000000000bedd8 : ja 0xbee09 ; jb 0xbedea ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf217 : ja 0xbf234 ; jb 0xbf223 ; mov byte ptr [rdi], cl ; ret
0x00000000000d2529 : ja 0xd2549 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000d4071 : ja 0xd407a ; ret
0x00000000000d669c : ja 0xd66b3 ; add bl, ch ; retf 0x8948
0x00000000000e1091 : ja 0xe109a ; ret
0x00000000000e59ca : ja 0xe5a1a ; ret
0x00000000000e5a60 : ja 0xe5aba ; ret
0x00000000000e5b53 : ja 0xe5bc2 ; ret
0x00000000000e5cad : ja 0xe5ce2 ; ret
0x00000000000e5d2d : ja 0xe5d72 ; ret
0x00000000000e5fec : ja 0xe6018 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e7443 : ja 0xe7449 ; add byte ptr [rax], al ; syscall
0x00000000000f764a : ja 0xf75dc ; pop rax ; or bh, dh ; ret
0x0000000000105911 : jae 0x105916 ; ret
0x0000000000105941 : jae 0x105946 ; ret
0x0000000000105971 : jae 0x105976 ; ret
0x00000000001059a1 : jae 0x1059a6 ; ret
0x00000000001059d1 : jae 0x1059d6 ; ret
0x0000000000105a01 : jae 0x105a06 ; ret
0x0000000000105a31 : jae 0x105a36 ; ret
0x0000000000105a61 : jae 0x105a66 ; ret
0x0000000000110691 : jae 0x110696 ; ret
0x0000000000110cc1 : jae 0x110cc6 ; ret
0x0000000000110cf1 : jae 0x110cf6 ; ret
0x0000000000110e21 : jae 0x110e26 ; ret
0x0000000000110e51 : jae 0x110e56 ; ret
0x0000000000110f11 : jae 0x110f16 ; ret
0x0000000000110f41 : jae 0x110f46 ; ret
0x0000000000111831 : jae 0x111836 ; ret
0x0000000000111b51 : jae 0x111b56 ; ret
0x0000000000111b81 : jae 0x111b86 ; ret
0x0000000000111bb1 : jae 0x111bb6 ; ret
0x0000000000111be1 : jae 0x111be6 ; ret
0x0000000000111c11 : jae 0x111c16 ; ret
0x0000000000111cd1 : jae 0x111cd6 ; ret
0x0000000000111d01 : jae 0x111d06 ; ret
0x0000000000112611 : jae 0x112616 ; ret
0x0000000000112641 : jae 0x112646 ; ret
0x0000000000112671 : jae 0x112676 ; ret
0x00000000001126a4 : jae 0x1126a9 ; ret
0x0000000000112e61 : jae 0x112e66 ; ret
0x0000000000112e94 : jae 0x112e99 ; ret
0x0000000000112ec1 : jae 0x112ec6 ; ret
0x0000000000112ef1 : jae 0x112ef6 ; ret
0x0000000000112f21 : jae 0x112f26 ; ret
0x0000000000112f54 : jae 0x112f59 ; ret
0x0000000000112f81 : jae 0x112f86 ; ret
0x0000000000112fb1 : jae 0x112fb6 ; ret
0x0000000000112fe1 : jae 0x112fe6 ; ret
0x0000000000116254 : jae 0x116259 ; ret
0x0000000000116e09 : jae 0x116e1b ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000001170d1 : jae 0x1170d6 ; ret
0x00000000001174d1 : jae 0x1174d6 ; ret
0x0000000000117691 : jae 0x117696 ; ret
0x00000000001180d1 : jae 0x1180d6 ; ret
0x0000000000118221 : jae 0x118226 ; ret
0x0000000000118421 : jae 0x118426 ; ret
0x0000000000118451 : jae 0x118456 ; ret
0x0000000000118511 : jae 0x118516 ; ret
0x00000000001185d1 : jae 0x1185d6 ; ret
0x0000000000118911 : jae 0x118916 ; ret
0x0000000000118941 : jae 0x118946 ; ret
0x0000000000118971 : jae 0x118976 ; ret
0x000000000011b963 : jae 0x11b968 ; ret
0x000000000011bba1 : jae 0x11bba6 ; ret
0x000000000011bbd1 : jae 0x11bbd6 ; ret
0x000000000011bca1 : jae 0x11bca6 ; ret
0x000000000011bcd1 : jae 0x11bcd6 ; ret
0x000000000011bd04 : jae 0x11bd09 ; ret
0x000000000011bd31 : jae 0x11bd36 ; ret
0x000000000011bd61 : jae 0x11bd66 ; ret
0x000000000011bd91 : jae 0x11bd96 ; ret
0x000000000011bdc1 : jae 0x11bdc6 ; ret
0x000000000011ec96 : jae 0x11ecc1 ; mov rsi, r12 ; mov rdi, r15 ; call r14
0x000000000011ffb4 : jae 0x11ffb9 ; ret
0x000000000011ffe1 : jae 0x11ffe6 ; ret
0x0000000000120011 : jae 0x120016 ; ret
0x0000000000120044 : jae 0x120049 ; ret
0x0000000000120074 : jae 0x120079 ; ret
0x00000000001200a1 : jae 0x1200a6 ; ret
0x00000000001200d4 : jae 0x1200d9 ; ret
0x0000000000120101 : jae 0x120106 ; ret
0x0000000000120131 : jae 0x120136 ; ret
0x0000000000120164 : jae 0x120169 ; ret
0x0000000000120191 : jae 0x120196 ; ret
0x00000000001201c4 : jae 0x1201c9 ; ret
0x0000000000122201 : jae 0x122206 ; ret
0x0000000000122231 : jae 0x122236 ; ret
0x0000000000122371 : jae 0x122376 ; ret
0x00000000001223d1 : jae 0x1223d6 ; ret
0x0000000000122401 : jae 0x122406 ; ret
0x0000000000122531 : jae 0x122536 ; ret
0x00000000001225c4 : jae 0x1225c9 ; ret
0x00000000001225f1 : jae 0x1225f6 ; ret
0x0000000000122b11 : jae 0x122b16 ; ret
0x0000000000122b41 : jae 0x122b46 ; ret
0x0000000000122b84 : jae 0x122b89 ; ret
0x0000000000122bb1 : jae 0x122bb6 ; ret
0x0000000000122be1 : jae 0x122be6 ; ret
0x0000000000122c11 : jae 0x122c16 ; ret
0x0000000000122c41 : jae 0x122c46 ; ret
0x0000000000122c71 : jae 0x122c76 ; ret
0x0000000000122ca1 : jae 0x122ca6 ; ret
0x0000000000122cd1 : jae 0x122cd6 ; ret
0x0000000000122d01 : jae 0x122d06 ; ret
0x0000000000122d34 : jae 0x122d39 ; ret
0x0000000000122d61 : jae 0x122d66 ; ret
0x0000000000122d94 : jae 0x122d99 ; ret
0x0000000000122dc1 : jae 0x122dc6 ; ret
0x0000000000122df1 : jae 0x122df6 ; ret
0x0000000000122e21 : jae 0x122e26 ; ret
0x0000000000122e51 : jae 0x122e56 ; ret
0x0000000000122e81 : jae 0x122e86 ; ret
0x0000000000122eb4 : jae 0x122eb9 ; ret
0x0000000000122ee4 : jae 0x122ee9 ; ret
0x0000000000122f11 : jae 0x122f16 ; ret
0x0000000000122f41 : jae 0x122f46 ; ret
0x0000000000122f74 : jae 0x122f79 ; ret
0x0000000000122fa4 : jae 0x122fa9 ; ret
0x0000000000122fd4 : jae 0x122fd9 ; ret
0x0000000000123001 : jae 0x123006 ; ret
0x0000000000123031 : jae 0x123036 ; ret
0x0000000000123061 : jae 0x123066 ; ret
0x0000000000123091 : jae 0x123096 ; ret
0x00000000001230c4 : jae 0x1230c9 ; ret
0x00000000001230f1 : jae 0x1230f6 ; ret
0x0000000000123121 : jae 0x123126 ; ret
0x0000000000123154 : jae 0x123159 ; ret
0x0000000000123181 : jae 0x123186 ; ret
0x00000000001231b4 : jae 0x1231b9 ; ret
0x00000000001231e4 : jae 0x1231e9 ; ret
0x0000000000123211 : jae 0x123216 ; ret
0x0000000000123241 : jae 0x123246 ; ret
0x0000000000123271 : jae 0x123276 ; ret
0x00000000001232b1 : jae 0x1232b6 ; ret
0x00000000001233a1 : jae 0x1233a6 ; ret
0x0000000000123471 : jae 0x123476 ; ret
0x00000000001234a1 : jae 0x1234a6 ; ret
0x00000000001234d4 : jae 0x1234d9 ; ret
0x0000000000123501 : jae 0x123506 ; ret
0x0000000000123984 : jae 0x123989 ; ret
0x00000000001239b1 : jae 0x1239b6 ; ret
0x00000000001239e1 : jae 0x1239e6 ; ret
0x0000000000123a14 : jae 0x123a19 ; ret
0x0000000000129101 : jae 0x129114 ; add byte ptr [rax - 0x77], cl ; ret 0xcce9
0x000000000013ecce : jae 0x13ecea ; mov eax, 0xffffffff ; ret
0x000000000014d049 : jae 0x14d073 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000154c86 : jae 0x154cd7 ; add esp, 0x10 ; pop r12 ; ret
0x000000000015a849 : jae 0x15a860 ; xor r8d, r8d ; mov eax, r8d ; ret
0x0000000000162d19 : jae 0x162d07 ; mov eax, 1 ; ret
0x000000000004601d : jae 0x46064 ; xor eax, eax ; pop rbx ; ret
0x0000000000046040 : jae 0x46085 ; pop rbx ; ret
0x00000000000466f1 : jae 0x466f6 ; ret
0x0000000000046ce1 : jae 0x46ce6 ; ret
0x0000000000057ff7 : jae 0x58000 ; xor eax, eax ; ret
0x0000000000059522 : jae 0x59574 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005e490 : jae 0x5e446 ; mov rax, r10 ; pop rbx ; ret
0x000000000005e718 : jae 0x5e701 ; mov rax, r8 ; ret
0x000000000008b0e0 : jae 0x8b0ed ; mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000096b21 : jae 0x96b4d ; movzx eax, byte ptr [rax] ; ret
0x000000000009f3cc : jae 0x9f3f6 ; lea rax, [rax - 8] ; ret
0x00000000000a29b1 : jae 0xa29c6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000d4151 : jae 0xd4156 ; ret
0x00000000000d7281 : jae 0xd7286 ; ret
0x00000000000d72b1 : jae 0xd72b6 ; ret
0x00000000000e5921 : jae 0xe5926 ; ret
0x00000000000e5b14 : jae 0xe5b19 ; ret
0x00000000000e5c01 : jae 0xe5c06 ; ret
0x00000000000e6031 : jae 0xe6036 ; ret
0x00000000000e6fd5 : jae 0xe6fdb ; add byte ptr [rax], al ; syscall
0x00000000000e6fe1 : jae 0xe6fe6 ; ret
0x00000000000e7231 : jae 0xe7236 ; ret
0x00000000000e7261 : jae 0xe7266 ; ret
0x00000000000e72c1 : jae 0xe72c6 ; ret
0x00000000000e72f1 : jae 0xe72f6 ; ret
0x00000000000e7321 : jae 0xe7326 ; ret
0x00000000000e7351 : jae 0xe7356 ; ret
0x0000000000117cf3 : jb 0x117cf9 ; add byte ptr [rax], al ; syscall
0x000000000012629b : jb 0x1262b6 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000126303 : jb 0x12631e ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000126beb : jb 0x126c06 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000126c4b : jb 0x126c66 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012a7ef : jb 0x12a807 ; mov eax, 1 ; ret
0x0000000000130e4a : jb 0x130e34 ; add eax, 0x58d4800 ; retf
0x0000000000134a6a : jb 0x134a12 ; or eax, dword ptr [rax] ; syscall
0x000000000013f893 : jb 0x13f885 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000014c529 : jb 0x14c54d ; ret
0x000000000014c523 : jb 0x14c555 ; ja 0x14c518 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001699bb : jb 0x1699cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169b0b : jb 0x169b1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169c5b : jb 0x169c6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169dab : jb 0x169dbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169efb : jb 0x169f0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a04b : jb 0x16a05d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a19b : jb 0x16a1ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a2eb : jb 0x16a2fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a43b : jb 0x16a44d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a58b : jb 0x16a59d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a6db : jb 0x16a6ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a82b : jb 0x16a83d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a97b : jb 0x16a98d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016aacb : jb 0x16aadd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ac1b : jb 0x16ac2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c39b : jb 0x16c3ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c4eb : jb 0x16c4fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c63b : jb 0x16c64d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c78b : jb 0x16c79d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c8db : jb 0x16c8ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ca2b : jb 0x16ca3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016cb7b : jb 0x16cb8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016cccb : jb 0x16ccdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ce1b : jb 0x16ce2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016cf6b : jb 0x16cf7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d0bb : jb 0x16d0cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d20b : jb 0x16d21d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d35b : jb 0x16d36d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d4ab : jb 0x16d4bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d5fb : jb 0x16d60d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000018ec1a : jb 0x18ec28 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018f107 : jb 0x18f112 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000193032 : jb 0x19303e ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001936e9 : jb 0x1936f8 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001936f4 : jb 0x193707 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000193701 : jb 0x193709 ; mov byte ptr [rdi], cl ; ret
0x00000000001939aa : jb 0x1939b8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000193fcf : jb 0x193fda ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000002fcca : jb 0x2fcd1 ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000002fcc9 : jb 0x2fcd2 ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000031463 : jb 0x314b6 ; mov r10, rcx ; jmp 0x31426
0x00000000000314a8 : jb 0x314bc ; mov r9, rsi ; mov r10, rcx ; jmp 0x31471
0x000000000004b607 : jb 0x4b5e9 ; xor eax, eax ; ret
0x000000000005c193 : jb 0x5c120 ; retf 0x703d
0x000000000005c192 : jb 0x5c121 ; retf 0x703d
0x000000000005e24d : jb 0x5e250 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000005e24c : jb 0x5e251 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000089165 : jb 0x8918b ; mov dword ptr [rcx], eax ; ret
0x000000000008930c : jb 0x89332 ; mov dword ptr [rcx], eax ; ret
0x00000000000a2102 : jb 0xa2115 ; mov qword ptr [rdi], rsi ; ret
0x00000000000a2143 : jb 0xa2154 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a294a : jb 0xa29a6 ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000a47db : jb 0xa47ef ; sub al, bl ; ret
0x00000000000bc02a : jb 0xbc039 ; add byte ptr [rax], al ; ret
0x00000000000bed2d : jb 0xbed36 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000bedda : jb 0xbede8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bedd9 : jb 0xbede9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf219 : jb 0xbf221 ; mov byte ptr [rdi], cl ; ret
0x00000000000cf085 : jb 0xcf012 ; retf 0x703d
0x00000000000cf084 : jb 0xcf013 ; retf 0x703d
0x0000000000115fcb : jbe 0x115ff1 ; cmp eax, -0x5f ; je 0x115fe1 ; neg eax ; ret
0x000000000011621b : jbe 0x116241 ; cmp eax, -0x5f ; je 0x116231 ; neg eax ; ret
0x000000000012dc8a : jbe 0x12dc84 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x0000000000137c1b : jbe 0x137b92 ; xor eax, eax ; pop rbx ; ret
0x0000000000146f56 : jbe 0x146ee4 ; or al, byte ptr [rax] ; syscall
0x000000000014b9d0 : jbe 0x14b9e7 ; mov eax, 2 ; ret
0x000000000014cb37 : jbe 0x14cb89 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000001556d3 : jbe 0x155725 ; add esp, 0x28 ; pop rbx ; pop r12 ; ret
0x000000000015abae : jbe 0x15abc9 ; add dword ptr [rbx + 0x28], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187bf7 : jbe 0x187c68 ; add rax, rdi ; vzeroupper ; ret
0x000000000018e786 : jbe 0x18e790 ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018f6a7 : jbe 0x18f718 ; add rax, rdi ; vzeroupper ; ret
0x000000000003590e : jbe 0x3592e ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000055d13 : jbe 0x55d33 ; add al, ch ; cmc ; retf 0xa
0x0000000000055d39 : jbe 0x55d59 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000055d38 : jbe 0x55d5a ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005e425 : jbe 0x5e41f ; mov rax, r10 ; ret
0x000000000009843d : jbe 0x98442 ; ret
0x000000000009873f : jbe 0x986ee ; add rsp, 8 ; ret
0x00000000000a51bd : jbe 0xa51e9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000af376 : jbe 0xaf3b5 ; add rax, rdi ; ret
0x00000000000af386 : jbe 0xaf3b7 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af396 : jbe 0xaf3b7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af3a6 : jbe 0xaf3b7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b53c9 : jbe 0xb53c3 ; ret 0xf10
0x00000000000b6fe9 : jbe 0xb6fe3 ; ret 0xf10
0x00000000000d146c : jbe 0xd14c3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000d1566 : jbe 0xd15a5 ; add rax, rdi ; ret
0x00000000000d1576 : jbe 0xd15a7 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000d1586 : jbe 0xd15a7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000d1596 : jbe 0xd15a7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d2aa6 : jbe 0xd2ad8 ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000d6466 : jbe 0xd641c ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d736b : jbe 0xd7372 ; ret
0x00000000000e7315 : jbe 0xe731b ; add byte ptr [rax], al ; syscall
0x000000000010285d : je 0x10288b ; adc byte ptr [rbx - 0x76f3dbb4], cl ; ret 0x8b4c
0x00000000001041b9 : je 0x1041cb ; mov rdi, rbx ; call r15
0x0000000000105cc2 : je 0x105cca ; ret
0x0000000000109060 : je 0x108ff3 ; mov rdi, r13 ; call 0x25357
0x0000000000109091 : je 0x1090a2 ; mov rdi, r13 ; call 0x25357
0x000000000010a22b : je 0x10a28e ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001103c9 : je 0x1103db ; mov eax, 0x1c ; syscall
0x0000000000110575 : je 0x1105b1 ; xor edx, edx ; xor esi, esi ; mov rdi, rbp ; call rax
0x0000000000110618 : je 0x110654 ; xor edx, edx ; call rax
0x0000000000110b5a : je 0x110b65 ; mov eax, r9d ; ret
0x0000000000110b59 : je 0x110b66 ; mov eax, r9d ; ret
0x0000000000111e69 : je 0x111e94 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x000000000011510a : je 0x115138 ; sub byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xe9 ; retf 0xfffe
0x0000000000115fd0 : je 0x115fdc ; neg eax ; ret
0x0000000000116220 : je 0x11622c ; neg eax ; ret
0x000000000011634a : je 0x116379 ; mov eax, 0x118 ; syscall
0x000000000011662c : je 0x11665f ; mov eax, 0x48 ; syscall
0x00000000001166bb : je 0x1166ef ; mov eax, 0x48 ; syscall
0x0000000000116841 : je 0x116877 ; mov eax, 0x101 ; syscall
0x000000000011784e : je 0x11787c ; or byte ptr [rax + 0x127], bh ; syscall
0x000000000011790e : je 0x11793c ; or byte ptr [rax + 0x128], bh ; syscall
0x0000000000117f22 : je 0x117f27 ; ret
0x0000000000119eb7 : je 0x119eef ; mov eax, 0x105 ; syscall
0x0000000000119fe7 : je 0x119ff1 ; mov qword ptr [rax], rdx ; ret
0x000000000011a0ea : je 0x11a0e1 ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000011b92c : je 0x11b93c ; mov dword ptr [rip + 0xcea14], edi ; ret
0x000000000011c917 : je 0x11c923 ; pop rbx ; ret
0x000000000011c916 : je 0x11c924 ; pop rbx ; ret
0x000000000011cc82 : je 0x11ccbd ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011cd12 : je 0x11cd4d ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011d8f9 : je 0x11d932 ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011d9aa : je 0x11d9e5 ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011f31c : je 0x11f382 ; call rax
0x000000000011f4fd : je 0x11f5f6 ; call rax
0x000000000011fe39 : je 0x11fe66 ; cmp rbx, rax ; je 0x11fe79 ; mov rdx, rax ; jmp 0x11fe5a
0x000000000011fe3e : je 0x11fe74 ; mov rdx, rax ; jmp 0x11fe55
0x0000000000122169 : je 0x122182 ; mov rsi, r8 ; mov rdi, rbp ; call r12
0x000000000012232a : je 0x12232f ; ret
0x0000000000122996 : je 0x1229cf ; mov eax, 0x145 ; syscall
0x00000000001229bb : je 0x1229f9 ; mov eax, r8d ; ret
0x00000000001229ba : je 0x1229fa ; mov eax, r8d ; ret
0x0000000000122a2a : je 0x122a5f ; mov eax, 0x149 ; syscall
0x00000000001243ed : je 0x1243f2 ; ret
0x0000000000125100 : je 0x125177 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000125140 : je 0x125178 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000128484 : je 0x12849e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ee6f : je 0x12ee9a ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012ef27 : je 0x12ef37 ; mov eax, 7 ; ret
0x000000000012ef52 : je 0x12ef63 ; pop rbx ; ret
0x000000000012ef41 : je 0x12ef79 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000013006f : je 0x130082 ; ret
0x0000000000130137 : je 0x130172 ; call rax
0x00000000001302e8 : je 0x130306 ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000131c30 : je 0x131c46 ; add rsp, 8 ; ret
0x000000000013ac1f : je 0x13ac2b ; mov rdi, rbx ; call rax
0x000000000013af3f : je 0x13af4b ; mov rdi, rbx ; call rax
0x000000000013b007 : je 0x13b01b ; lea rdi, [rip + 0xb40d0] ; call rax
0x000000000013e78b : je 0x13e783 ; pop rbx ; ret
0x000000000013f6e9 : je 0x13f701 ; test eax, eax ; jne 0x13f711 ; mov eax, r8d ; ret
0x0000000000143f40 : je 0x143f4a ; ret
0x0000000000144dc6 : je 0x144dd6 ; add rsp, 8 ; ret
0x0000000000145a6a : je 0x145a4e ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000149596 : je 0x1495a2 ; mov rdi, rbp ; call rax
0x0000000000149eed : je 0x149ef9 ; mov rdi, rbp ; call rax
0x000000000014a21c : je 0x14a222 ; ret
0x000000000014af1c : je 0x14af28 ; mov rdi, rbx ; call rax
0x000000000014b184 : je 0x14b017 ; mov rdi, rbx ; call rax
0x000000000014b279 : je 0x14b285 ; mov rdi, rbx ; call rax
0x000000000014b497 : je 0x14b4a4 ; xor eax, eax ; ret
0x000000000014ba88 : je 0x14ba94 ; mov rdi, r13 ; call rax
0x000000000014bff3 : je 0x14c12a ; mov rdi, r12 ; call qword ptr [rbx]
0x000000000014e242 : je 0x14e258 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014e302 : je 0x14e318 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014e402 : je 0x14e418 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000150257 : je 0x15026b ; lea rdi, [rbp + 0xc8] ; call rax
0x0000000000150531 : je 0x15055f ; cmp byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x14d008
0x0000000000150c8d : je 0x150c99 ; mov rdi, rbp ; call rax
0x0000000000150e72 : je 0x150e82 ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000152131 : je 0x15213d ; mov rdi, rbp ; call rax
0x0000000000152216 : je 0x152222 ; mov rdi, r13 ; call rax
0x0000000000153044 : je 0x153052 ; lea rdi, [rbp + 0x68] ; call rax
0x000000000015377c : je 0x153788 ; mov rdi, rbp ; call rax
0x0000000000153ae4 : je 0x153af2 ; lea rdi, [rbp + 0x58] ; call rax
0x00000000001564d2 : je 0x15645c ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000156453 : je 0x156463 ; pop rbx ; ret
0x0000000000156506 : je 0x156514 ; mov r8, rax ; mov rax, r8 ; pop rbx ; ret
0x000000000015697f : je 0x156996 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000157552 : je 0x157562 ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000157c9b : je 0x157cab ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000159125 : je 0x159151 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159155 : je 0x159180 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000159215 : je 0x159241 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159245 : je 0x159270 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000159305 : je 0x159331 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159335 : je 0x159360 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001593f5 : je 0x159421 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159425 : je 0x159450 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015a3d5 : je 0x15a405 ; mov eax, r8d ; ret
0x000000000015a425 : je 0x15a455 ; mov eax, r8d ; ret
0x000000000015f133 : je 0x15f15e ; adc al, ch ; push rbp ; retf 0xfffb
0x0000000000164ef9 : je 0x164f2d ; add r13, 1 ; mov rdx, rcx ; jmp 0x164ee0
0x0000000000181473 : je 0x18143e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000182145 : je 0x18214d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000182243 : je 0x18220e ; lea r10, [r10 + r9] ; jmp r10
0x000000000018312a : je 0x183132 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000183283 : je 0x18324e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000184e53 : je 0x184e1e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000186ee8 : je 0x186ecc ; xor eax, eax ; ret
0x0000000000187ea1 : je 0x187f08 ; and ch, al ; std ; xlatb ; ret
0x0000000000187f8f : je 0x187ff6 ; and ch, al ; std ; xlatb ; ret
0x00000000001882e5 : je 0x1882f7 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000188673 : je 0x18863e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000189d13 : je 0x189cde ; lea r10, [r10 + r9] ; jmp r10
0x000000000018c5af : je 0x18c638 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018ca02 : je 0x18ca63 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018d34f : je 0x18d3d8 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018d4c5 : je 0x18d526 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018ddaa : je 0x18da69 ; vzeroupper ; ret
0x000000000018dc86 : je 0x18db49 ; vzeroupper ; ret
0x000000000018e1d2 : je 0x18e233 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018e9b6 : je 0x18e879 ; vzeroupper ; ret
0x0000000000191db7 : je 0x191dc1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019a1a6 : je 0x19a15f ; xor r10d, r10d ; jmp 0x19a17e
0x000000000019a24f : je 0x19a27a ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000019b95e : je 0x19b964 ; call rax
0x000000000019ba5b : je 0x19ba66 ; call rax
0x000000000019c61e : je 0x19c611 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002726e : je 0x2727a ; mov rdi, rbp ; call rax
0x000000000002a5e0 : je 0x2a5ea ; ret
0x000000000002acef : je 0x2ad1e ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002b46e : je 0x2b49d ; pop rax ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x000000000002ba59 : je 0x2ba87 ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002c23f : je 0x2c26e ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002c856 : je 0x2c884 ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002d175 : je 0x2d1a3 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002d868 : je 0x2d897 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002ddb6 : je 0x2dde4 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002edea : je 0x2ee19 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002fb74 : je 0x2fba2 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x00000000000306f5 : je 0x30723 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000000312d9 : je 0x31307 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000031e58 : je 0x31e86 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000000326a2 : je 0x326d1 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000332db : je 0x332e2 ; ret
0x00000000000332d6 : je 0x332e7 ; cmp esi, 3 ; je 0x332e7 ; ret
0x00000000000332fd : je 0x3331b ; pop rbx ; ret
0x0000000000033d24 : je 0x33d2a ; call rax
0x0000000000033fa1 : je 0x33fa7 ; call rdx
0x0000000000034fdf : je 0x34fe5 ; call rax
0x000000000003522a : je 0x3524c ; add byte ptr [rax - 0x77], cl ; retf 0x850f
0x000000000003bb4e : je 0x3bb5e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000448e9 : je 0x44ca8 ; add rdx, rcx ; jmp 0x44909
0x00000000000450bb : je 0x4500e ; ret
0x00000000000450ba : je 0x4500f ; ret
0x0000000000045339 : je 0x45342 ; ret
0x0000000000045709 : je 0x45712 ; ret
0x000000000004a774 : je 0x4a785 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000004b61d : je 0x4b5e7 ; mov eax, 0xffffffff ; ret
0x0000000000055ba4 : je 0x55bbc ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000005734a : je 0x57376 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000573f7 : je 0x57408 ; cmp byte ptr [rax - 1], 0x2f ; jne 0x573f9 ; pop rbx ; ret
0x00000000000579ee : je 0x57a1a ; or byte ptr [rax + 0xf], cl ; retf 0x854d
0x0000000000057b1d : je 0x57b49 ; sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x000000000005ba65 : je 0x5ba93 ; or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x000000000005e078 : je 0x5e007 ; adc eax, 0x3d8d4800 ; lodsd eax, dword ptr [rsi] ; ret 0x15
0x0000000000066011 : je 0x66025 ; mov eax, r8d ; ret
0x0000000000065ffa : je 0x66047 ; mov eax, 0x13c ; syscall
0x000000000006c108 : je 0x68b0e ; jmp 0x68beb
0x0000000000085b2b : je 0x85b3f ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000085c0b : je 0x85c29 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000886bf : je 0x88703 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000089f9c : je 0x89fed ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000089f9b : je 0x89fee ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008a540 : je 0x8a54a ; ret
0x000000000008a633 : je 0x8a5f6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008a5a0 : je 0x8a602 ; pop rbp ; pop r12 ; ret
0x000000000008a64e : je 0x8a63d ; retf 0x1f0f
0x000000000008a64d : je 0x8a63e ; retf 0x1f0f
0x000000000008df6a : je 0x8df81 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8df81 ; ret
0x000000000008e866 : je 0x8e890 ; adc al, ch ; ret 0xf96a
0x0000000000090485 : je 0x90492 ; ret
0x00000000000908e5 : je 0x908f2 ; ret
0x0000000000091723 : je 0x91733 ; pop rbx ; ret
0x0000000000095029 : je 0x95032 ; ret
0x000000000009795d : je 0x97962 ; ret
0x00000000000979c1 : je 0x979c6 ; ret
0x0000000000097e1c : je 0x97e22 ; call rax
0x0000000000097ea5 : je 0x97eab ; call rax
0x0000000000097f15 : je 0x97f1b ; call rax
0x00000000000983c0 : je 0x983c9 ; pop rbx ; pop rbp ; ret
0x000000000009c14c : je 0x9c158 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009c3cf : je 0x9c3d5 ; call rax
0x000000000009d432 : je 0x9d45f ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000009db89 : je 0x9dbb3 ; or cl, ch ; ret 0xfffe
0x000000000009db9a : je 0x9dbc6 ; mov rdi, r13 ; call rax
0x000000000009eec2 : je 0x9eeee ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000009f606 : je 0x9f593 ; retf 0x4c89
0x000000000009f605 : je 0x9f594 ; retf 0x4c89
0x000000000009ff97 : je 0xa0076 ; call rax
0x00000000000a00cf : je 0xa01a6 ; call rax
0x00000000000a02db : je 0xa0348 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a13dc : je 0xa13e2 ; ret
0x00000000000a14d7 : je 0xa1539 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000a19cf : je 0xa1a07 ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r14 ; call rax
0x00000000000a2503 : je 0xa2515 ; movsx eax, dl ; ret
0x00000000000a25f6 : je 0xa2606 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a32b7 : je 0xa32cd ; adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x00000000000a3656 : je 0xa3617 ; ret
0x00000000000a47d8 : je 0xa47e4 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000a5224 : je 0xa5233 ; add byte ptr [rax - 0x77], cl ; adc ecx, dword ptr [rax + 0x29] ; retf 0x2ee8
0x00000000000a5236 : je 0xa524e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5473 : je 0xa54de ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa549a
0x00000000000a59cd : je 0xa5a48 ; nop ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59fd
0x00000000000a6450 : je 0xa6469 ; add eax, 0x3949eb74 ; ret 0x1674
0x00000000000ab94b : je 0xab95a ; cmp eax, esi ; jne 0xab949 ; mov rax, r8 ; ret
0x00000000000ab97f : je 0xab98e ; cmp eax, edx ; jne 0xab979 ; mov rax, r8 ; ret
0x00000000000ab9ea : je 0xab9e2 ; ret
0x00000000000aba26 : je 0xaba1a ; ret
0x00000000000aba22 : je 0xaba1e ; cmp ecx, esi ; je 0xaba1e ; ret
0x00000000000aba74 : je 0xaba5d ; mov rax, r8 ; ret
0x00000000000aba9e : je 0xabaae ; cmp ecx, esi ; jne 0xaba96 ; ret
0x00000000000af27c : je 0xaf2d3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af56a : je 0xaf5c1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af8ec : je 0xaf8c8 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000b48c5 : je 0xb48d9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000b4dc8 : je 0xb4dd3 ; bsf eax, edx ; ret
0x00000000000b4e6d : je 0xb4e86 ; bsf rax, rdx ; ret
0x00000000000b4e10 : je 0xb4e96 ; bsf rax, rdx ; ret
0x00000000000b503c : je 0xb5066 ; bsf rax, rdx ; ret
0x00000000000ba35d : je 0xba3ae ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bba2a : je 0xbba7b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bd92a : je 0xbd97b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bee67 : je 0xbee88 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000bf8d4 : je 0xbf8e9 ; cmp eax, 2 ; je 0xbf8f1 ; xor eax, eax ; ret
0x00000000000bf8d9 : je 0xbf8ec ; xor eax, eax ; ret
0x00000000000bf924 : je 0xbf90a ; ret
0x00000000000bf982 : je 0xbf962 ; ret
0x00000000000bfaa7 : je 0xbfa99 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bff66 : je 0xbff27 ; ret
0x00000000000c1199 : je 0xc11a5 ; test edx, edx ; jne 0xc1196 ; ret
0x00000000000c2092 : je 0xc2092 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c9c7d : je 0xc9c88 ; mov eax, r8d ; ret
0x00000000000cda42 : je 0xcda71 ; sbb byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdx, r13 ; call rbx
0x00000000000cec75 : je 0xceca3 ; or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x00000000000d27f6 : je 0xd2866 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d2ca9 : je 0xd2cc9 ; mov cl, dl ; and cl, 0xf ; je 0xd2cd9 ; ret
0x00000000000d2cb0 : je 0xd2cd2 ; ret
0x00000000000d2cc5 : je 0xd2ce6 ; add rax, 2 ; ret
0x00000000000d3cf2 : je 0xd3d20 ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000d3ee3 : je 0xd3f11 ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000e0107 : je 0xe0114 ; xor eax, eax ; ret
0x00000000000e012b : je 0xe0149 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000e0287 : je 0xe02b2 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000e0567 : je 0xe059a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1666 : je 0xe1686 ; mov rbx, r13 ; mov rdi, rbp ; call r12
0x00000000000e21c3 : je 0xe21c9 ; add byte ptr [rax], al ; syscall
0x00000000000e91e9 : je 0xe91fb ; mov rdi, rbx ; call r15
0x00000000000e9e58 : je 0xe9e8d ; add r13, 1 ; mov rdx, rcx ; jmp 0xe9e40
0x00000000000efa13 : je 0xefa3d ; sbb al, 0x89 ; ret 0x8348
0x00000000000f0e9d : je 0xf0eda ; ret
0x00000000000f125b : je 0xf12a3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3abb : je 0xf3afd ; xor esi, esi ; add rdx, rax ; jmp 0xf3ad7
0x00000000000f4e15 : je 0xf4e75 ; xor eax, eax ; pop rbp ; ret
0x000000000010891d : jg 0x10893b ; call 0x25354
0x0000000000109bb6 : jg 0x109bca ; ret 0x8589
0x000000000010f967 : jg 0x10f9e7 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9bb : jg 0x10fa37 ; ret
0x0000000000115cf6 : jg 0x115d47 ; add esp, 0x40 ; pop r12 ; ret
0x000000000011ae43 : jg 0x11ae48 ; ret
0x000000000011dac0 : jg 0x11db10 ; mov edi, dword ptr [rsp] ; call rbx
0x000000000011dd28 : jg 0x11dd34 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000013fd92 : jg 0x13fd9b ; enter 0x480f, -0x3e ; ret
0x000000000014242f : jg 0x1423ec ; mov byte ptr [r10], 0 ; ret
0x0000000000151056 : jg 0x1510a0 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151068 ; ret
0x0000000000157716 : jg 0x157760 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157728 ; ret
0x000000000016b599 : jg 0x16b5ec ; ret
0x000000000016b5e0 : jg 0x16b630 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000016b5e5 : jg 0x16b638 ; retf
0x000000000016b61f : jg 0x16b66a ; ret
0x000000000016b65f : jg 0x16b6aa ; retf
0x000000000016b799 : jg 0x16b7ec ; ret 0x894c
0x000000000016b7e0 : jg 0x16b830 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000016b7e5 : jg 0x16b838 ; retf 0x894c
0x000000000016b81f : jg 0x16b86a ; ret 0x894c
0x000000000016b85b : jg 0x16b8a6 ; retf 0x894c
0x000000000016df79 : jg 0x16dfcc ; ret
0x000000000016dfc0 : jg 0x16e010 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000016dfc5 : jg 0x16e018 ; retf
0x000000000016dfff : jg 0x16e04a ; ret
0x000000000016e03f : jg 0x16e08a ; retf
0x000000000016e179 : jg 0x16e1cc ; ret 0x894c
0x000000000016e1c0 : jg 0x16e210 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000016e1c5 : jg 0x16e218 ; retf 0x894c
0x000000000016e1ff : jg 0x16e24a ; ret 0x894c
0x000000000016e23b : jg 0x16e286 ; retf 0x894c
0x0000000000170588 : jg 0x1705d9 ; loope 0x170587 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001705ff : jg 0x17064a ; ret 0xff2
0x0000000000170618 : jg 0x170669 ; loop 0x170617 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017068f : jg 0x1706da ; ret
0x00000000001706a8 : jg 0x1706f9 ; jrcxz 0x1706a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170738 : jg 0x170789 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001707b8 : jg 0x170809 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170838 : jg 0x170889 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001708b8 : jg 0x170909 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170a15 : jg 0x170a65 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000170a1f : jg 0x170a6a ; retf 0xff2
0x0000000000170a95 : jg 0x170ae5 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000170a9f : jg 0x170aea ; retf
0x0000000000170b38 : jg 0x170b89 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170bb8 : jg 0x170c09 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170c48 : jg 0x170c99 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170cc8 : jg 0x170d19 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170d3c : jg 0x170d47 ; ret
0x0000000000170d96 : jg 0x170da9 ; ret
0x0000000000170d91 : jg 0x170de1 ; psllq mm1, qword ptr [rdi] ; jg 0x170dae ; ret
0x0000000000170e06 : jg 0x170e19 ; ret
0x0000000000170e76 : jg 0x170e89 ; ret
0x0000000000170e71 : jg 0x170ec1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000170ee6 : jg 0x170ef9 ; ret
0x0000000000170ee1 : jg 0x170f31 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170f56 : jg 0x170f69 ; ret
0x0000000000170f51 : jg 0x170fa1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170fc6 : jg 0x170fd9 ; ret
0x0000000000170fc1 : jg 0x171011 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171036 : jg 0x171049 ; ret
0x0000000000171031 : jg 0x171081 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001710a6 : jg 0x1710b9 ; ret
0x00000000001710a1 : jg 0x1710f1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171116 : jg 0x171129 ; ret
0x0000000000171186 : jg 0x171199 ; ret
0x00000000001711f6 : jg 0x171209 ; ret
0x00000000001711f1 : jg 0x171241 ; add eax, 0xf7f0ff3 ; ret
0x0000000000171266 : jg 0x171279 ; ret
0x0000000000171261 : jg 0x1712b1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001712d6 : jg 0x1712e9 ; ret
0x00000000001712d1 : jg 0x171321 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171346 : jg 0x171359 ; ret
0x0000000000171341 : jg 0x171391 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001713b6 : jg 0x1713c9 ; ret
0x00000000001713b1 : jg 0x171401 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001730b8 : jg 0x173109 ; loope 0x1730b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017312f : jg 0x17317a ; ret 0xff2
0x0000000000173148 : jg 0x173199 ; loop 0x173147 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001731bf : jg 0x17320a ; ret
0x00000000001731d8 : jg 0x173229 ; jrcxz 0x1731d7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173268 : jg 0x1732b9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001732e8 : jg 0x173339 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173368 : jg 0x1733b9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001733e8 : jg 0x173439 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173545 : jg 0x173595 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000017354f : jg 0x17359a ; retf 0xff2
0x00000000001735c5 : jg 0x173615 ; mov ebx, 0x46f00ff2 ; retf
0x00000000001735cf : jg 0x17361a ; retf
0x0000000000173668 : jg 0x1736b9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001736e8 : jg 0x173739 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173778 : jg 0x1737c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001737f8 : jg 0x173849 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000017386c : jg 0x173877 ; ret
0x00000000001738c6 : jg 0x1738d9 ; ret
0x00000000001738c1 : jg 0x173911 ; psllq mm1, qword ptr [rdi] ; jg 0x1738de ; ret
0x0000000000173936 : jg 0x173949 ; ret
0x00000000001739a6 : jg 0x1739b9 ; ret
0x00000000001739a1 : jg 0x1739f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000173a16 : jg 0x173a29 ; ret
0x0000000000173a11 : jg 0x173a61 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173a86 : jg 0x173a99 ; ret
0x0000000000173a81 : jg 0x173ad1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173af6 : jg 0x173b09 ; ret
0x0000000000173af1 : jg 0x173b41 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173b66 : jg 0x173b79 ; ret
0x0000000000173b61 : jg 0x173bb1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173bd6 : jg 0x173be9 ; ret
0x0000000000173bd1 : jg 0x173c21 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173c46 : jg 0x173c59 ; ret
0x0000000000173cb6 : jg 0x173cc9 ; ret
0x0000000000173d26 : jg 0x173d39 ; ret
0x0000000000173d21 : jg 0x173d71 ; add eax, 0xf7f0ff3 ; ret
0x0000000000173d96 : jg 0x173da9 ; ret
0x0000000000173d91 : jg 0x173de1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173e06 : jg 0x173e19 ; ret
0x0000000000173e01 : jg 0x173e51 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173e76 : jg 0x173e89 ; ret
0x0000000000173e71 : jg 0x173ec1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173ee6 : jg 0x173ef9 ; ret
0x0000000000173ee1 : jg 0x173f31 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000018c442 : jg 0x18c45e ; pextrw edi, mm5, 0x74 ; retf
0x000000000018cb1d : jg 0x18cb39 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018d1e2 : jg 0x18d1fe ; pextrw edi, mm5, 0x74 ; retf
0x000000000018d5dd : jg 0x18d5f9 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018dcd9 : jg 0x18dd40 ; vzeroupper ; ret
0x000000000018ded2 : jg 0x18deee ; pextrw edi, mm5, 0x74 ; retf
0x000000000018e2ed : jg 0x18e309 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018ec2e : jg 0x18ec3f ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018edbf : jg 0x18ede9 ; vzeroupper ; ret
0x000000000018ee66 : jg 0x18ee70 ; vzeroupper ; ret
0x000000000018eef2 : jg 0x18ef1c ; vzeroupper ; ret
0x000000000018ef82 : jg 0x18ef8c ; vzeroupper ; ret
0x000000000018eff8 : jg 0x18f006 ; vzeroupper ; ret
0x000000000018f058 : jg 0x18f066 ; vzeroupper ; ret
0x000000000018f117 : jg 0x18f125 ; vzeroupper ; ret
0x0000000000192fd8 : jg 0x192fe9 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000192fec : jg 0x192ffd ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000019345e : jg 0x19345a ; ret
0x00000000001936cb : jg 0x1936db ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001936c1 : jg 0x1936e1 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000001939d6 : jg 0x1939e7 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000193bba : jg 0x193be4 ; vzeroupper ; ret
0x0000000000193bb9 : jg 0x193be5 ; vzeroupper ; ret
0x0000000000193c80 : jg 0x193c8a ; vzeroupper ; ret
0x0000000000193c7f : jg 0x193c8b ; vzeroupper ; ret
0x0000000000193d45 : jg 0x193d6f ; vzeroupper ; ret
0x0000000000193d44 : jg 0x193d70 ; vzeroupper ; ret
0x0000000000193e0a : jg 0x193e14 ; vzeroupper ; ret
0x0000000000193e09 : jg 0x193e15 ; vzeroupper ; ret
0x0000000000193e89 : jg 0x193e97 ; vzeroupper ; ret
0x0000000000193e88 : jg 0x193e98 ; vzeroupper ; ret
0x0000000000193ef5 : jg 0x193f03 ; vzeroupper ; ret
0x0000000000193ef4 : jg 0x193f04 ; vzeroupper ; ret
0x0000000000193fdf : jg 0x193fed ; vzeroupper ; ret
0x0000000000193fed : jg 0x193ffb ; vzeroupper ; ret
0x00000000001960b5 : jg 0x1960c4 ; neg eax ; ret
0x0000000000196643 : jg 0x19664a ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000197c3b : jg 0x197bc8 ; ror byte ptr [rax + 0xf], cl ; retf
0x0000000000198fd7 : jg 0x198fde ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003feeb : jg 0x3ff09 ; call 0x3c124
0x000000000003fef4 : jg 0x3ff0a ; call 0x3c124
0x000000000003fefd : jg 0x3ff0b ; call 0x3c124
0x00000000000450b8 : jg 0x450cc ; je 0x45011 ; ret
0x0000000000045707 : jg 0x4570d ; je 0x45714 ; ret
0x00000000000459a4 : jg 0x459f6 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000004671a : jg 0x46720 ; add byte ptr [rax], al ; syscall
0x000000000004afac : jg 0x4af3f ; adc byte ptr [rcx - 0x3f76bbea], cl ; ret
0x0000000000055413 : jg 0x55427 ; syscall
0x000000000005acd9 : jg 0x5ad58 ; loopne 0x5ac9d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000783d3 : jg 0x78400 ; retf 0xc239
0x0000000000078666 : jg 0x78695 ; fidivr dword ptr [rcx] ; ret 0x830f
0x000000000007ebd7 : jg 0x7ebf0 ; test byte ptr [rbp - 0x7c000012], dh ; ret
0x000000000007ed61 : jg 0x7ed90 ; fidivr dword ptr [rcx] ; ret 0x820f
0x000000000008ff1c : jg 0x8feaa ; inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a182e : jg 0xa187d ; mov rsi, rbp ; call rax
0x00000000000ba126 : jg 0xba131 ; ret
0x00000000000ba136 : jg 0xba144 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba14a : jg 0xba159 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba169 : jg 0xba177 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba179 : jg 0xba187 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba189 : jg 0xba19a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000ba1aa : jg 0xba1b9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba1ca : jg 0xba1d9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba1ea : jg 0xba1f9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba20a : jg 0xba21c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba24d : jg 0xba25f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba26d : jg 0xba27f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba28b : jg 0xba29b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba2ab : jg 0xba2bb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba2cb : jg 0xba2db ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba2eb : jg 0xba2fb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba898 : jg 0xba8a3 ; jne 0xbb158 ; ret
0x00000000000ba8bc : jg 0xba8c8 ; jne 0xbb158 ; ret
0x00000000000ba8df : jg 0xba8ec ; jne 0xbb158 ; ret
0x00000000000ba8fa : jg 0xba908 ; jne 0xbb158 ; ret
0x00000000000ba91d : jg 0xba92c ; jne 0xbb158 ; ret
0x00000000000ba942 : jg 0xba952 ; jne 0xbb158 ; ret
0x00000000000ba960 : jg 0xba971 ; jne 0xbb158 ; ret
0x00000000000ba97c : jg 0xba98e ; jne 0xbb158 ; ret
0x00000000000ba99f : jg 0xba9b2 ; jne 0xbb158 ; ret
0x00000000000ba9c4 : jg 0xba9d8 ; jne 0xbb158 ; ret
0x00000000000ba9e2 : jg 0xba9f7 ; jne 0xbb158 ; ret
0x00000000000baa02 : jg 0xbaa18 ; jne 0xbb158 ; ret
0x00000000000baa24 : jg 0xbaa3b ; jne 0xbb158 ; ret
0x00000000000baa44 : jg 0xbaa5c ; jne 0xbb158 ; ret
0x00000000000baa64 : jg 0xbaa7d ; jne 0xbb158 ; ret
0x00000000000baa7e : jg 0xbaa98 ; jne 0xbb158 ; ret
0x00000000000baaa1 : jg 0xbaabc ; jne 0xbb158 ; ret
0x00000000000baac6 : jg 0xbaae2 ; jne 0xbb158 ; ret
0x00000000000baae4 : jg 0xbab01 ; jne 0xbb158 ; ret
0x00000000000bab04 : jg 0xbab22 ; jne 0xbb158 ; ret
0x00000000000bab27 : jg 0xbab46 ; jne 0xbb158 ; ret
0x00000000000bab46 : jg 0xbab66 ; jne 0xbb158 ; ret
0x00000000000bab66 : jg 0xbab87 ; jne 0xbb158 ; ret
0x00000000000bab86 : jg 0xbaba8 ; jne 0xbb158 ; ret
0x00000000000baba9 : jg 0xbabcc ; jne 0xbb158 ; ret
0x00000000000babde : jg 0xbac02 ; jne 0xbb158 ; ret
0x00000000000bac0c : jg 0xbac31 ; jne 0xbb158 ; ret
0x00000000000bac3c : jg 0xbac62 ; jne 0xbb158 ; ret
0x00000000000bac68 : jg 0xbac8f ; jne 0xbb158 ; ret
0x00000000000bac98 : jg 0xbacc0 ; jne 0xbb158 ; ret
0x00000000000bacc8 : jg 0xbacf1 ; jne 0xbb158 ; ret
0x00000000000bacf8 : jg 0xbad22 ; jne 0xbb158 ; ret
0x00000000000bae16 : jg 0xbae21 ; ret
0x00000000000bae29 : jg 0xbae37 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000bae3a : jg 0xbae49 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bae59 : jg 0xbae67 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bae69 : jg 0xbae77 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bae7c : jg 0xbae8d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000bae9a : jg 0xbaea9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000baeba : jg 0xbaec9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000baeda : jg 0xbaee9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000baefd : jg 0xbaf0f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000baf3d : jg 0xbaf4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000baf5d : jg 0xbaf6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000baf7b : jg 0xbaf8b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000baf9b : jg 0xbafab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000bafbb : jg 0xbafcb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000bafdb : jg 0xbafeb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bb112 : jg 0xbb11d ; ret
0x00000000000bb256 : jg 0xbb28a ; ret
0x00000000000bb7d6 : jg 0xbb7e5 ; lea rax, [rdi + 0xf] ; ret
0x00000000000bb7e6 : jg 0xbb7f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb819 : jg 0xbb82b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bb839 : jg 0xbb84b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bb95f : jg 0xbb9bf ; or eax, 0x1c478d48 ; ret
0x00000000000bbf7b : jg 0xbbf86 ; jne 0xbc9a8 ; ret
0x00000000000bbfa0 : jg 0xbbfac ; jne 0xbc9a8 ; ret
0x00000000000bbfc3 : jg 0xbbfd0 ; jne 0xbc9a8 ; ret
0x00000000000bbfde : jg 0xbbfec ; jne 0xbc9a8 ; ret
0x00000000000bc001 : jg 0xbc010 ; jne 0xbc9a8 ; ret
0x00000000000bc026 : jg 0xbc036 ; jne 0xbc9a8 ; ret
0x00000000000bc044 : jg 0xbc055 ; jne 0xbc9a8 ; ret
0x00000000000bc060 : jg 0xbc072 ; jne 0xbc9a8 ; ret
0x00000000000bc083 : jg 0xbc096 ; jne 0xbc9a8 ; ret
0x00000000000bc0a8 : jg 0xbc0bc ; jne 0xbc9a8 ; ret
0x00000000000bc0d6 : jg 0xbc0eb ; jne 0xbc9a8 ; ret
0x00000000000bc0f6 : jg 0xbc10c ; jne 0xbc9a8 ; ret
0x00000000000bc118 : jg 0xbc12f ; jne 0xbc9a8 ; ret
0x00000000000bc148 : jg 0xbc160 ; jne 0xbc9a8 ; ret
0x00000000000bc178 : jg 0xbc191 ; jne 0xbc9a8 ; ret
0x00000000000bc1a2 : jg 0xbc1bc ; jne 0xbc9a8 ; ret
0x00000000000bc1c5 : jg 0xbc1e0 ; jne 0xbc9a8 ; ret
0x00000000000bc1ea : jg 0xbc206 ; jne 0xbc9a8 ; ret
0x00000000000bc218 : jg 0xbc235 ; jne 0xbc9a8 ; ret
0x00000000000bc248 : jg 0xbc266 ; jne 0xbc9a8 ; ret
0x00000000000bc27b : jg 0xbc29a ; jne 0xbc9a8 ; ret
0x00000000000bc2aa : jg 0xbc2ca ; jne 0xbc9a8 ; ret
0x00000000000bc2da : jg 0xbc2fb ; jne 0xbc9a8 ; ret
0x00000000000bc30a : jg 0xbc32c ; jne 0xbc9a8 ; ret
0x00000000000bc33d : jg 0xbc360 ; jne 0xbc9a8 ; ret
0x00000000000bc372 : jg 0xbc396 ; jne 0xbc9a8 ; ret
0x00000000000bc3a0 : jg 0xbc3c5 ; jne 0xbc9a8 ; ret
0x00000000000bc3d0 : jg 0xbc3f6 ; jne 0xbc9a8 ; ret
0x00000000000bc3fc : jg 0xbc423 ; jne 0xbc9a8 ; ret
0x00000000000bc42c : jg 0xbc454 ; jne 0xbc9a8 ; ret
0x00000000000bc45c : jg 0xbc485 ; jne 0xbc9a8 ; ret
0x00000000000bc48c : jg 0xbc4b6 ; jne 0xbc9a8 ; ret
0x00000000000bc636 : jg 0xbc645 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bc649 : jg 0xbc65b ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc689 : jg 0xbc69b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc6a9 : jg 0xbc6bb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000bc7cf : jg 0xbc82f ; or eax, 0x1d478d48 ; ret
0x00000000000bc962 : jg 0xbc96d ; ret
0x00000000000bcaa6 : jg 0xbcade ; lea rax, [rdi + 0x40] ; ret
0x00000000000bcaa5 : jg 0xbcb2d ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000bd436 : jg 0xbd441 ; ret
0x00000000000bd446 : jg 0xbd454 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bd45a : jg 0xbd469 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bd479 : jg 0xbd487 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd489 : jg 0xbd497 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bd499 : jg 0xbd4aa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bd4ba : jg 0xbd4c9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bd4da : jg 0xbd4e9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bd4fa : jg 0xbd509 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bd51a : jg 0xbd52c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000bd55d : jg 0xbd56f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000bd57d : jg 0xbd58f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000bd59b : jg 0xbd5ab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000bd5bb : jg 0xbd5cb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000bd5db : jg 0xbd5eb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000bd5fb : jg 0xbd60b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bdf26 : jg 0xbdf31 ; ret
0x00000000000bdf36 : jg 0xbdf44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bdf4a : jg 0xbdf59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bdf69 : jg 0xbdf77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdf79 : jg 0xbdf87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bdf89 : jg 0xbdf9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bdfaa : jg 0xbdfb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bdfca : jg 0xbdfd9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bdfea : jg 0xbdff9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000be00a : jg 0xbe01c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000be04d : jg 0xbe05f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000be06d : jg 0xbe07f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000be08b : jg 0xbe09b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000be0ab : jg 0xbe0bb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000be0cb : jg 0xbe0db ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000be0eb : jg 0xbe0fb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000be296 : jg 0xbe2a6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be46f : jg 0xbe4d0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be48f : jg 0xbe4f0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be506 : jg 0xbe53f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be505 : jg 0xbe58e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000befa8 : jg 0xbefe0 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bf076 : jg 0xbf0ae ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bf104 : jg 0xbf10f ; ret
0x00000000000bf180 : jg 0xbf18b ; ret
0x00000000000bf1f7 : jg 0xbf243 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000bf38b : jg 0xbf359 ; nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000000d2265 : jg 0xd226d ; neg eax ; ret
0x00000000000d320b : jg 0xd3237 ; mov rax, r12 ; pop r12 ; ret
0x00000000000e6424 : jg 0xe643e ; test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e65f4 : jg 0xe660e ; test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e6905 : jg 0xe691f ; test ah, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e6afd : jg 0xe6b17 ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e7e33 : jg 0xe7e3d ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7e4d : jg 0xe7e57 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7e8a : jg 0xe7e94 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7e9b : jg 0xe7ea5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e7ebb : jg 0xe7ec5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000fe5ad : jg 0xfe622 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000fedad : jg 0xfee1a ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000115845 : jge 0x115887 ; call 0x111ab4
0x000000000011cda1 : jge 0x11cda5 ; call rbx
0x000000000011da52 : jge 0x11da56 ; call rbx
0x000000000011dafd : jge 0x11db01 ; call rbx
0x000000000011db2d : jge 0x11db31 ; call rbx
0x000000000011db5d : jge 0x11db61 ; call rbx
0x000000000011db85 : jge 0x11db89 ; call rbx
0x000000000011dfbf : jge 0x11e00e ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000122bd5 : jge 0x122bdb ; add byte ptr [rax], al ; syscall
0x000000000012f6f0 : jge 0x12f67c ; call rcx
0x000000000012fb45 : jge 0x12fad1 ; call rax
0x000000000012fd2d : jge 0x12fcb9 ; call rax
0x000000000012fe5b : jge 0x12fde7 ; call rax
0x000000000013dc0a : jge 0x13dbae ; syscall
0x0000000000153048 : jge 0x1530b4 ; call rax
0x0000000000153ae8 : jge 0x153b44 ; call rax
0x000000000015d6e9 : jge 0x15d6dc ; dec dword ptr [rax - 0x77] ; ret
0x000000000015e7a9 : jge 0x15e7af ; add al, 0x75 ; retf 0xbd49
0x000000000018fa2d : jge 0x18fa6c ; ret 0xe2c4
0x000000000018fedd : jge 0x18ff1c ; ret 0xe2c4
0x000000000019a7bd : jge 0x19a7d5 ; add rdi, rbp ; call r12
0x00000000000290ed : jge 0x29073 ; call 0x25354
0x00000000000290e4 : jge 0x29082 ; call 0x25354
0x0000000000029137 : jge 0x291aa ; sbb al, 0 ; ret
0x000000000004a5cb : jge 0x4a5d7 ; call rax
0x000000000005546e : jge 0x5548e ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000005739f : jge 0x57389 ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005757a : jge 0x57581 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000059408 : jge 0x5945a ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005a9b4 : jge 0x5a9bb ; add byte ptr [rax], al ; leave ; ret
0x000000000005b893 : jge 0x5b89a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000a1618 : jge 0xa1630 ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000cd0bf : jge 0xcd05b ; add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x00000000000ceaa3 : jge 0xceaaa ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000d6190 : jge 0xd61a8 ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000e76b3 : jge 0xe76b9 ; add cl, ch ; ret
0x00000000000e7c2e : jge 0xe7c36 ; add byte ptr [rax + 0xf], cl ; ret 0x19e9
0x00000000000e7c48 : jge 0xe7c50 ; add byte ptr [rax + 0xf], cl ; ret 0xffe9
0x00000000000f5249 : jge 0xf5281 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8865 : jge 0xf87fb ; call 0x25354
0x000000000010069e : jl 0x1006db ; ret 0x8f0f
0x00000000001111e9 : jl 0x111217 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000111355 : jl 0x111383 ; or byte ptr [rax + 1], bh ; syscall
0x00000000001117dd : jl 0x11180b ; or byte ptr [rax + 0x48], bh ; syscall
0x0000000000114671 : jl 0x11469c ; and al, ch ; retf 0xfffc
0x0000000000115c35 : jl 0x115c63 ; or byte ptr [rax + 7], bh ; syscall
0x00000000001164b6 : jl 0x1164e4 ; sbb byte ptr [rax + 0x115], bh ; syscall
0x0000000000116565 : jl 0x116593 ; or byte ptr [rax + 0x11d], bh ; syscall
0x00000000001176f3 : jl 0x117721 ; or byte ptr [rax + 0x13], bh ; syscall
0x0000000000117793 : jl 0x1177c1 ; or byte ptr [rax + 0x14], bh ; syscall
0x000000000011bc35 : jl 0x11bc63 ; or byte ptr [rax + 0x1a], bh ; syscall
0x0000000000122328 : jl 0x122341 ; je 0x122331 ; ret
0x0000000000122714 : jl 0x122742 ; or byte ptr [rax + 0x114], bh ; syscall
0x0000000000122931 : jl 0x12295f ; or byte ptr [rax + 0x130], bh ; syscall
0x0000000000123335 : jl 0x123363 ; or al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000123401 : jl 0x12342f ; or byte ptr [rax + 0x2a], bh ; syscall
0x00000000001236e3 : jl 0x123711 ; or byte ptr [rax + 0x2f], bh ; syscall
0x0000000000123843 : jl 0x123871 ; or byte ptr [rax + 0x2e], bh ; syscall
0x0000000000123d56 : jl 0x123d84 ; sbb byte ptr [rax + 0x120], bh ; syscall
0x0000000000123eb4 : jl 0x123ee2 ; or al, 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000124056 : jl 0x124084 ; sbb byte ptr [rax + 0x45], bh ; syscall
0x00000000001337ae : jl 0x1337d8 ; cmp al, ch ; retf 0x114
0x000000000014aba6 : jl 0x14abd4 ; sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x000000000014e4e1 : jl 0x14e50f ; or byte ptr [rax - 0x77], cl ; add r8b, r13b ; ret
0x00000000001607d6 : jl 0x160801 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000018d805 : jl 0x18d822 ; and ecx, ebp ; ret
0x000000000018d950 : jl 0x18d95b ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000192e7b : jl 0x192e84 ; neg eax ; ret
0x0000000000192f58 : jl 0x192fa7 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000192f94 : jl 0x192fe3 ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000193192 : jl 0x1931e1 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001932f9 : jl 0x193348 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000019345b : jl 0x1934aa ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000193680 : jl 0x1936cf ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001936a1 : jl 0x1936f0 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001936b4 : jl 0x193703 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000193789 : jl 0x1937d8 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001937e1 : jl 0x193830 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000019387e : jl 0x1938cd ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000193aa4 : jl 0x193ac3 ; cld ; vzeroupper ; ret
0x0000000000199fd2 : jl 0x199ffd ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000025715 : jl 0x2573f ; or cl, ch ; retf
0x000000000002aa45 : jl 0x2aa73 ; pop rax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002acf4 : jl 0x2ad1e ; pop rax ; call r14
0x000000000002b7e8 : jl 0x2b816 ; pop rax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002ba5e : jl 0x2ba87 ; pop rax ; call rbx
0x000000000002bdbf : jl 0x2bded ; pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c244 : jl 0x2c26e ; pop rax ; call r15
0x000000000002c5e6 : jl 0x2c614 ; pop rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002c85b : jl 0x2c884 ; pop rax ; call rbx
0x000000000002d17a : jl 0x2d1a3 ; call rbx
0x000000000002d86d : jl 0x2d897 ; call r14
0x000000000002ddbb : jl 0x2dde4 ; call rbx
0x000000000002e7fb : jl 0x2e829 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000002f78f : jl 0x2f7bd ; push rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002fb00 : jl 0x2fb2b ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000002fb79 : jl 0x2fba2 ; push rax ; call rbx
0x00000000000306fa : jl 0x30723 ; call rbx
0x0000000000030e8c : jl 0x30eba ; push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000312de : jl 0x31307 ; push rax ; call rbx
0x0000000000031e5d : jl 0x31e86 ; call rbx
0x000000000003baa6 : jl 0x3bab7 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000004b565 : jl 0x4b593 ; or byte ptr [rax + 0x13e], bh ; syscall
0x0000000000058393 : jl 0x58320 ; retf 0xc183
0x00000000000624aa : jl 0x624d8 ; adc cl, bl ; in eax, 0xdf ; loopne 0x62443 ; ret
0x000000000009e923 : jl 0x9e950 ; and byte ptr [rcx], dh ; imul al ; ret
0x00000000000a22d0 : jl 0xa2308 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000a4c42 : jl 0xa4c80 ; adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x00000000000a76b2 : jl 0xa76d0 ; rol dword ptr [rcx + rcx*4 - 0x21], 0xc1 ; call qword ptr [rdx]
0x00000000000a809a : jl 0xa80bb ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a85da : jl 0xa85f9 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a8637 : jl 0xa8658 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a9541 : jl 0xa9563 ; add eax, 0x3948ea74 ; retf 0x1474
0x00000000000af85a : jl 0xaf8c5 ; add rax, rdi ; ret
0x00000000000af86a : jl 0xaf8c7 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af88a : jl 0xaf8c7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af8aa : jl 0xaf8c7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ccdce : jl 0xcce0e ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x00000000000d02b5 : jl 0xd02e0 ; or byte ptr [rcx - 0x77], al ; ret 0x7b75
0x00000000000d03e6 : jl 0xd0411 ; or byte ptr [rcx - 0x77], al ; ret 0x2a74
0x00000000000d913a : jl 0xd9165 ; sbb al, ch ; ret
0x00000000000d9ebf : jl 0xd9ed3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9ecf : jl 0xd9ee3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9edf : jl 0xd9ef3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9eef : jl 0xd9f03 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9eff : jl 0xd9f13 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f0f : jl 0xd9f23 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f1f : jl 0xd9f33 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f2f : jl 0xd9f43 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f3f : jl 0xd9f53 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f4f : jl 0xd9f63 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f4e : jl 0xd9f64 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f5f : jl 0xd9f73 ; add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x00000000000dbe4b : jl 0xdbe76 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000e3811 : jl 0xe381a ; add ecx, ebp ; retf 0xfffd
0x00000000000e5a8c : jl 0xe5aba ; or byte ptr [rax + 0x3d], bh ; syscall
0x00000000000e72b5 : jl 0xe72bb ; add byte ptr [rax], al ; syscall
0x00000000000fae4e : jl 0xfae62 ; pushfq ; ret 0x5c3b
0x00000000000fb3fb : jl 0xfb429 ; mov rcx, rbx ; call 0xf7e18
0x000000000010f96b : jle 0x10f9df ; ret
0x000000000010f9b7 : jle 0x10fa2f ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000001102f3 : jle 0x110367 ; ret
0x000000000011037c : jle 0x1103f7 ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x000000000011abca : jle 0x11abd3 ; inc dword ptr [rbp - 0x7cc08b40] ; ret
0x0000000000122c05 : jle 0x122c0b ; add byte ptr [rax], al ; syscall
0x0000000000130dee : jle 0x130dd5 ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000013aeb6 : jle 0x13aefe ; or eax, dword ptr [rax] ; syscall
0x00000000001518c1 : jle 0x1518cc ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000155dec : jle 0x155e00 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000186d5c : jle 0x186d79 ; movsxd rax, ecx ; ret
0x0000000000186fde : jle 0x187086 ; ret
0x000000000002943e : jle 0x294ae ; sbb al, 0 ; syscall
0x000000000003330a : jle 0x33339 ; sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000008dbe2 : jle 0x8dbf4 ; ret 0x15
0x000000000009af49 : jle 0x9aed6 ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000a2a86 : jle 0xa2a41 ; adc al, 0 ; add rsp, 8 ; ret
0x00000000000b4e11 : jle 0xb4e60 ; bsf eax, edx ; ret
0x00000000000e46d6 : jle 0xe4676 ; adc byte ptr [rax], al ; syscall
0x00000000000e7ed1 : jle 0xe7ed7 ; add byte ptr [rax], al ; ret
0x00000000000ed4f8 : jle 0xed4f2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000efa11 : jle 0xef9a4 ; je 0xefa3f ; sbb al, 0x89 ; ret 0x8348
0x000000000010ac4c : jmp 0x10ac12
0x000000000010f84f : jmp 0x10f815
0x000000000010f86c : jmp 0x10f832
0x00000000001153a0 : jmp 0x11536e
0x0000000000116503 : jmp 0x1164c9
0x0000000000116d92 : jmp 0x116d60
0x0000000000120781 : jmp 0x120747
0x0000000000123c65 : jmp 0x123c2b
0x0000000000123da3 : jmp 0x123d69
0x0000000000123e5b : jmp 0x123e21
0x00000000001240a3 : jmp 0x124069
0x000000000012e83d : jmp 0x12e803
0x0000000000133bb8 : jmp 0x133b86
0x0000000000133e28 : jmp 0x133df6
0x000000000013ee48 : jmp 0x13ee16
0x0000000000143974 : jmp 0x143942
0x0000000000154b4b : jmp 0x154b11
0x000000000015974e : jmp 0x159714
0x0000000000162f49 : jmp 0x162f17
0x0000000000166797 : jmp 0x16675d
0x0000000000190ec8 : jmp 0x190e96
0x0000000000190f46 : jmp 0x190f14
0x00000000001913d8 : jmp 0x1913a6
0x0000000000191456 : jmp 0x191424
0x00000000001924f8 : jmp 0x1924c6
0x0000000000192576 : jmp 0x192544
0x0000000000192a08 : jmp 0x1929d6
0x0000000000192a86 : jmp 0x192a54
0x000000000019a1ab : jmp 0x19a179
0x0000000000048a5e : jmp 0x25502
0x000000000002c6b8 : jmp 0x2c686
0x000000000013fcfe : jmp 0x3baec705
0x0000000000046dc4 : jmp 0x46d8a
0x000000000006c10e : jmp 0x68be5
0x000000000006c3af : jmp 0x68dea
0x000000000006e1b5 : jmp 0x6acb2
0x000000000006e252 : jmp 0x6acb5
0x000000000006e27f : jmp 0x6ad7b
0x000000000006e6db : jmp 0x6b1a4
0x0000000000072c2c : jmp 0x6ef20
0x00000000000735b0 : jmp 0x6f7f8
0x0000000000074370 : jmp 0x70606
0x0000000000074749 : jmp 0x7124c
0x000000000007672b : jmp 0x72943
0x000000000008272a : jmp 0x826f0
0x00000000000843eb : jmp 0x843b9
0x00000000000889e2 : jmp 0x889b0
0x000000000008eb73 : jmp 0x8eb39
0x0000000000132b37 : jmp 0x8ed72
0x00000000000952e0 : jmp 0x952ae
0x000000000009577f : jmp 0x9574d
0x00000000000a5180 : jmp 0xa514e
0x00000000000ab703 : jmp 0xa793d
0x00000000000ab6a1 : jmp 0xa81a3
0x00000000000b46fc : jmp 0xb46c2
0x00000000000b491c : jmp 0xb48e2
0x00000000000be87e : jmp 0xbe844
0x00000000000be94f : jmp 0xbe915
0x00000000000be9be : jmp 0xbe984
0x00000000000bf2ae : jmp 0xbf274
0x00000000000bf70f : jmp 0xbf6dd
0x00000000000e0e9c : jmp 0xe0e6a
0x00000000000e60fe : jmp 0xe60c4
0x000000000015c1c0 : jmp 0xe8caf
0x00000000000ebb07 : jmp 0xebacd
0x00000000000ed838 : jmp 0xed7fe
0x00000000000c7d0b : jmp 0xffffffff8d573f9b
0x00000000000457bb : jmp 0xffffffffc3046f62
0x00000000000d2173 : jmp 0xffffffffc30d217c
0x0000000000059525 : jmp 0xffffffffc3151e7a
0x00000000001998cc : jmp 0xffffffffcba2e5d8
0x0000000000151da9 : jmp 0xffffffffead6e039
0x0000000000104ac6 : jmp 0xfffffffffafa14ce
0x0000000000119313 : jmp qword ptr [r8]
0x0000000000048eb2 : jmp qword ptr [rax]
0x00000000000d9ba4 : jmp qword ptr [rbx]
0x000000000010e39c : jmp qword ptr [rcx]
0x000000000010bd82 : jmp qword ptr [rdi]
0x00000000000ffdf6 : jmp qword ptr [rdx]
0x00000000001551ed : jmp qword ptr [rsi]
0x0000000000043cc5 : jmp r10
0x0000000000034b11 : jmp r8
0x0000000000169382 : jmp r9
0x0000000000026ed1 : jmp rax
0x000000000003dd1d : jmp rbx
0x0000000000083f86 : jmp rcx
0x00000000000c327d : jmp rdi
0x0000000000043b97 : jmp rdx
0x000000000003b805 : jmp rsi
0x00000000000f6e4d : jmp rsp
0x0000000000105c51 : jne 0x105cac ; add rsp, 0x38 ; ret
0x0000000000105cef : jne 0x105ce5 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000109e03 : jne 0x109df0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f3d1 : jne 0x10f3ef ; mov eax, 0x11 ; syscall
0x000000000010f481 : jne 0x10f49f ; mov eax, 0x12 ; syscall
0x000000000010f84a : jne 0x10f85e ; mov edx, dword ptr [rbx + 4] ; jmp 0x10f81a
0x000000000010f9de : jne 0x10f9ec ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000110093 : jne 0x110099 ; add byte ptr [rax], al ; syscall
0x000000000011041b : jne 0x110437 ; add rsp, 0x28 ; ret
0x00000000001106f0 : jne 0x1106fd ; add rsp, 0x18 ; ret
0x0000000000110742 : jne 0x11074f ; add rsp, 0x18 ; ret
0x0000000000110ba9 : jne 0x110bdf ; mov eax, 0x85 ; syscall
0x0000000000110c0c : jne 0x110c3f ; mov eax, 0x103 ; syscall
0x0000000000110e9f : jne 0x110eef ; mov eax, 0x10c ; syscall
0x000000000011115d : jne 0x1111c7 ; mov eax, 0x101 ; syscall
0x000000000011127e : jne 0x111292 ; syscall
0x000000000011131e : jne 0x111337 ; mov eax, 1 ; syscall
0x0000000000111792 : jne 0x1117c7 ; mov eax, 0x48 ; syscall
0x0000000000111abe : jne 0x111ad7 ; mov eax, 3 ; syscall
0x0000000000111c3e : jne 0x111c57 ; mov eax, 0x55 ; syscall
0x0000000000112e33 : jne 0x112e46 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000115bfe : jne 0x115c17 ; mov eax, 7 ; syscall
0x0000000000115cf5 : jne 0x115d7e ; add rsp, 0x40 ; pop r12 ; ret
0x0000000000116281 : jne 0x11629f ; mov eax, 0x146 ; syscall
0x0000000000116471 : jne 0x11648f ; mov eax, 0x115 ; syscall
0x0000000000116521 : jne 0x11653f ; mov eax, 0x11d ; syscall
0x000000000011664b : jne 0x116699 ; add rsp, 0x68 ; ret
0x00000000001166da : jne 0x116729 ; add rsp, 0x18 ; ret
0x00000000001167c2 : jne 0x116811 ; add rsp, 0x58 ; ret
0x0000000000116860 : jne 0x1168b1 ; add rsp, 0x58 ; ret
0x0000000000116d6d : jne 0x116d9d ; mov eax, r9d ; add rsp, 0x38 ; ret
0x0000000000116ddd : jne 0x116df1 ; add rsp, 0x18 ; ret
0x00000000001176be : jne 0x1176d7 ; mov eax, 0x13 ; syscall
0x000000000011775e : jne 0x117777 ; mov eax, 0x14 ; syscall
0x0000000000117c50 : jne 0x117c87 ; mov eax, 0x71 ; syscall
0x0000000000117c6f : jne 0x117cd1 ; add rsp, 0x38 ; ret
0x0000000000117cf0 : jne 0x117d27 ; mov eax, 0x72 ; syscall
0x0000000000117d0f : jne 0x117d71 ; add rsp, 0x38 ; ret
0x0000000000117da8 : jne 0x117dae ; add byte ptr [rax], al ; syscall
0x0000000000117dc5 : jne 0x117e14 ; add esp, 0x38 ; ret
0x0000000000117dc4 : jne 0x117e41 ; add rsp, 0x38 ; ret
0x0000000000117e95 : jne 0x117ee4 ; add esp, 0x38 ; ret
0x0000000000117e94 : jne 0x117f11 ; add rsp, 0x38 ; ret
0x0000000000117f8e : jne 0x117f9b ; add rsp, 0x28 ; ret
0x0000000000118251 : jne 0x11826f ; mov eax, 0x17 ; syscall
0x0000000000118352 : jne 0x118387 ; mov eax, 0x10e ; syscall
0x000000000011847e : jne 0x118497 ; mov eax, 0x4a ; syscall
0x000000000011853e : jne 0x118557 ; mov eax, 0x4b ; syscall
0x0000000000118889 : jne 0x1188dd ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000118ad4 : jne 0x118aed ; add rsp, 0x58 ; ret
0x0000000000118b4d : jne 0x118b5a ; add rsp, 0x28 ; ret
0x0000000000118c24 : jne 0x118c63 ; add rsp, 0x68 ; ret
0x000000000011900a : jne 0x118fe8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001190eb : jne 0x1190c8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000119252 : jne 0x119207 ; xor eax, eax ; pop rbp ; ret
0x00000000001192ad : jne 0x119282 ; ret
0x0000000000119d98 : jne 0x119ddb ; add rsp, 0x38 ; ret
0x0000000000119e67 : jne 0x119eab ; add rsp, 0x38 ; ret
0x000000000011a5ce : jne 0x11a5e7 ; mov eax, 1 ; ret
0x000000000011ae2a : jne 0x11ae41 ; sub dword ptr [rip + 0xd371d], 1 ; ret
0x000000000011b4b8 : jne 0x11b4cb ; add rsp, 0xd8 ; ret
0x000000000011b591 : jne 0x11b5a4 ; add rsp, 0xd8 ; ret
0x000000000011bbfe : jne 0x11bc17 ; mov eax, 0x1a ; syscall
0x000000000011c8d9 : jne 0x11c8e6 ; add rsp, 0x18 ; ret
0x000000000011cd9d : jne 0x11cdcc ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011d8d6 : jne 0x11d8e9 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000011d984 : jne 0x11d997 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011da4e : jne 0x11da7e ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011da8f : jne 0x11dae6 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011dabf : jne 0x11db46 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011db81 : jne 0x11dba6 ; mov rdi, qword ptr [r13] ; call rbx
0x000000000011dcd1 : jne 0x11dd16 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcfd : jne 0x11dd6d ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dbb5 : jne 0x11ddcb ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc75 : jne 0x11de25 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc45 : jne 0x11de7f ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc15 : jne 0x11ded9 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dbe5 : jne 0x11df33 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dca5 : jne 0x11df8d ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011df95 : jne 0x11dfd7 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfbe : jne 0x11e042 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd26 : jne 0x11e0b4 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de8b : jne 0x11e122 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ddaa : jne 0x11e190 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011df3f : jne 0x11e1fe ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de04 : jne 0x11e26c ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ddd7 : jne 0x11e2da ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de5e : jne 0x11e348 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dee5 : jne 0x11e3b6 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd50 : jne 0x11e424 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de31 : jne 0x11e492 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011df12 : jne 0x11e500 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd7d : jne 0x11e56e ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011deb8 : jne 0x11e5dc ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011df6c : jne 0x11e64a ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ef4d : jne 0x11ef60 ; add rsp, 0xd8 ; ret
0x000000000011f00d : jne 0x11f020 ; add rsp, 0xd8 ; ret
0x000000000011f1eb : jne 0x11f1fe ; add rsp, 0x418 ; ret
0x000000000011f24e : jne 0x11f28f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f454 : jne 0x11f467 ; add rsp, 0xd8 ; ret
0x000000000011f6c1 : jne 0x11f6d4 ; add rsp, 0xd8 ; ret
0x000000000011f6d9 : jne 0x11f70f ; mov eax, 0x88 ; syscall
0x000000000011fe00 : jne 0x11fe44 ; mov rdx, rax ; jmp 0x11fe1d
0x0000000000120218 : jne 0x12020e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001222c9 : jne 0x1222e9 ; add rsp, 0x68 ; ret
0x0000000000122621 : jne 0x12263f ; mov eax, 0xe8 ; syscall
0x00000000001226d1 : jne 0x1226ef ; mov eax, 0x114 ; syscall
0x0000000000122781 : jne 0x12279f ; mov eax, 0x116 ; syscall
0x0000000000122831 : jne 0x12284f ; mov eax, 0x113 ; syscall
0x00000000001228fe : jne 0x122917 ; mov eax, 0x130 ; syscall
0x00000000001232fe : jne 0x123317 ; mov eax, 0x2b ; syscall
0x00000000001233ce : jne 0x1233e7 ; mov eax, 0x2a ; syscall
0x00000000001235f1 : jne 0x12360f ; mov eax, 0x2d ; syscall
0x00000000001236ae : jne 0x1236c7 ; mov eax, 0x2f ; syscall
0x000000000012380e : jne 0x123827 ; mov eax, 0x2e ; syscall
0x00000000001238b1 : jne 0x1238cf ; mov eax, 0x2c ; syscall
0x0000000000123cee : jne 0x123cfb ; add rsp, 0x18 ; ret
0x0000000000123d11 : jne 0x123d2f ; mov eax, 0x120 ; syscall
0x0000000000123dc1 : jne 0x123ddf ; mov eax, 0x12b ; syscall
0x0000000000123e71 : jne 0x123e8f ; mov eax, 0x133 ; syscall
0x0000000000124011 : jne 0x12402f ; mov eax, 0x45 ; syscall
0x00000000001240c1 : jne 0x1240df ; mov eax, 0x46 ; syscall
0x0000000000124264 : jne 0x124291 ; mov eax, 0x42 ; syscall
0x0000000000124283 : jne 0x1242d1 ; add rsp, 0x58 ; ret
0x0000000000126291 : jne 0x12629a ; ret
0x00000000001262fa : jne 0x126302 ; ret
0x00000000001264e3 : jne 0x1264f2 ; ret
0x0000000000126be1 : jne 0x126bea ; ret
0x0000000000126c3e : jne 0x126c4a ; ret
0x0000000000126e13 : jne 0x126e22 ; ret
0x000000000012aabe : jne 0x12aace ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccdf : jne 0x12ccf2 ; add rsp, 0xd8 ; ret
0x000000000012e810 : jne 0x12e848 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ea08 : jne 0x12ea1b ; add rsp, 0xd8 ; ret
0x000000000012eaa6 : jne 0x12ea96 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fa77 : jne 0x12fa03 ; call rax
0x000000000012ffed : jne 0x12ffe6 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000130069 : jne 0x130080 ; cmp qword ptr [rdi], 0 ; je 0x130088 ; ret
0x0000000000130205 : jne 0x130237 ; mov eax, 0xe6 ; syscall
0x000000000013040b : jne 0x1303f6 ; lea rdi, [rip - 0x184] ; call rax
0x0000000000130444 : jne 0x130524 ; leave ; ret
0x000000000013105e : jne 0x13100d ; mov rax, rdi ; ret
0x00000000001311c9 : jne 0x1311e1 ; add rsp, 0xd8 ; ret
0x00000000001312bf : jne 0x1312de ; add rsp, 0xd8 ; ret
0x00000000001313d9 : jne 0x1313ec ; add rsp, 0xd8 ; ret
0x00000000001314a1 : jne 0x1314b4 ; add rsp, 0xd8 ; ret
0x0000000000131afe : jne 0x131acb ; jmp 0x131abb
0x0000000000131e4f : jne 0x131e69 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013213e : jne 0x1320ee ; mov rax, rdi ; ret
0x00000000001322df : jne 0x1322fe ; add rsp, 0xd8 ; ret
0x00000000001323f9 : jne 0x13240c ; add rsp, 0xd8 ; ret
0x00000000001324c1 : jne 0x1324d4 ; add rsp, 0xd8 ; ret
0x0000000000132908 : jne 0x13291b ; add rsp, 0x28 ; ret
0x0000000000132968 : jne 0x13297b ; add rsp, 0x28 ; ret
0x0000000000132a31 : jne 0x132a44 ; add rsp, 0xd8 ; ret
0x0000000000132b11 : jne 0x132b24 ; add rsp, 0xd8 ; ret
0x0000000000132bf1 : jne 0x132c04 ; add rsp, 0xd8 ; ret
0x000000000013999f : jne 0x1399cf ; add rsp, 0x38 ; ret
0x0000000000139a3c : jne 0x139a49 ; add rsp, 0x38 ; ret
0x0000000000139aa9 : jne 0x139ab6 ; add rsp, 0x28 ; ret
0x000000000013af23 : jne 0x13af13 ; pop rbx ; ret
0x000000000013b7a9 : jne 0x13b7b3 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000013da0d : jne 0x13da3f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013ed0c : jne 0x13ece7 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013f6ed : jne 0x13f70d ; mov eax, r8d ; ret
0x000000000013fab2 : jne 0x13fac6 ; add rsp, 0x18 ; ret
0x000000000013fbad : jne 0x13fbfd ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013fc49 : jne 0x13fc7f ; add rsp, 0x38 ; ret
0x000000000014007b : jne 0x1400d9 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001414d9 : jne 0x1414fc ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014152e : jne 0x14153b ; add rsp, 0x18 ; ret
0x0000000000141581 : jne 0x14158e ; add rsp, 0x28 ; ret
0x0000000000141e10 : jne 0x141e1d ; add rsp, 0x18 ; ret
0x0000000000142387 : jne 0x142372 ; mov eax, r10d ; ret
0x000000000014396e : jne 0x1438f3 ; jmp 0x143948
0x0000000000144390 : jne 0x14439a ; ret
0x00000000001443d4 : jne 0x1443c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001444be : jne 0x1444ce ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000144477 : jne 0x1444dc ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000001461fe : jne 0x14620a ; ret
0x0000000000147c3d : jne 0x147c4e ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000149444 : jne 0x1493ca ; ret
0x00000000001495ab : jne 0x1495ba ; add rsp, 0x40 ; pop rbp ; ret
0x000000000014a747 : jne 0x14a739 ; add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000014a6ee : jne 0x14a76f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014a95f : jne 0x14a99d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014b537 : jne 0x14b548 ; mov dword ptr [rsi], 0 ; ret
0x000000000014c381 : jne 0x14c3ca ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c8f4 : jne 0x14c929 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c992 : jne 0x14c9cc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014d5a5 : jne 0x14d5be ; add rsp, 0x40 ; pop rbx ; ret
0x000000000015105c : jne 0x151062 ; ret
0x00000000001517d7 : jne 0x151842 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000154933 : jne 0x154958 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154c85 : jne 0x154d02 ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000154efc : jne 0x154f71 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000015503c : jne 0x1550b1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001554c3 : jne 0x1554db ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001556d2 : jne 0x155753 ; add rsp, 0x28 ; pop rbx ; pop r12 ; ret
0x0000000000156b67 : jne 0x156b76 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000156bf5 : jne 0x156c02 ; add rsp, 0x78 ; ret
0x0000000000156c6b : jne 0x156c78 ; add rsp, 0x78 ; ret
0x0000000000156cdb : jne 0x156ce8 ; add rsp, 0x78 ; ret
0x0000000000156d4b : jne 0x156d58 ; add rsp, 0x78 ; ret
0x0000000000156dac : jne 0x156db9 ; add rsp, 0x78 ; ret
0x0000000000156e10 : jne 0x156e1d ; add rsp, 0x78 ; ret
0x0000000000156e7b : jne 0x156e88 ; add rsp, 0x78 ; ret
0x0000000000156efe : jne 0x156f0b ; add rsp, 0x78 ; ret
0x0000000000157433 : jne 0x15745e ; add rsp, 0x28 ; ret
0x000000000015771c : jne 0x157722 ; ret
0x0000000000158ea6 : jne 0x158eb3 ; add rsp, 0x48 ; ret
0x0000000000158f11 : jne 0x158f5a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000158fa1 : jne 0x158fe9 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159013 : jne 0x15900b ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000159071 : jne 0x1590bc ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001594c1 : jne 0x15950b ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159551 : jne 0x15959a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001595e0 : jne 0x159638 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000159680 : jne 0x1596d8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000159721 : jne 0x159770 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001597b1 : jne 0x1597fa ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159efb : jne 0x159ed9 ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000015a4a1 : jne 0x15a4ec ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a531 : jne 0x15a57c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a5c1 : jne 0x15a60c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a651 : jne 0x15a69c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015ad9d : jne 0x15adb0 ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015adfe : jne 0x15ae11 ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015ae6a : jne 0x15ae79 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015aedd : jne 0x15aeec ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015fc72 : jne 0x15fcaa ; add rsp, 0x18 ; ret
0x000000000015fe20 : jne 0x15fe35 ; xor eax, eax ; pop rbp ; ret
0x0000000000160129 : jne 0x160163 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001601b9 : jne 0x1601f3 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000160f22 : jne 0x160f66 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000161e38 : jne 0x161e57 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000162f24 : jne 0x162f64 ; add rsp, 0x58 ; ret
0x000000000016301b : jne 0x16306a ; add rsp, 0x68 ; ret
0x00000000001631b4 : jne 0x16320a ; add rsp, 0x68 ; ret
0x000000000016327d : jne 0x1632c2 ; add rsp, 0x38 ; ret
0x0000000000163ebf : jne 0x163eda ; add rsp, 0x38 ; ret
0x0000000000163fb2 : jne 0x163fc3 ; pop rbx ; ret
0x0000000000163fe2 : jne 0x163ff3 ; pop rbx ; ret
0x0000000000164135 : jne 0x164153 ; mov eax, 0x27 ; syscall
0x000000000016686b : jne 0x16687a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001668f1 : jne 0x166900 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017b821 : jne 0x17bdd6 ; ret
0x0000000000186ee4 : jne 0x186f58 ; test esi, esi ; je 0x186ed0 ; xor eax, eax ; ret
0x00000000001873dd : jne 0x1873c7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001878b2 : jne 0x187897 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000187be3 : jne 0x187c07 ; xor eax, eax ; vzeroupper ; ret
0x000000000018829a : jne 0x1882a5 ; vzeroupper ; ret
0x0000000000188394 : jne 0x1882a6 ; ret
0x00000000001884df : jne 0x1882a9 ; vzeroupper ; ret
0x000000000018bf23 : jne 0x18bf58 ; mov rax, r8 ; vzeroupper ; ret
0x000000000018d7a0 : jne 0x18dbd9 ; vzeroupper ; ret
0x000000000018e4b8 : jne 0x18e909 ; vzeroupper ; ret
0x000000000018f0e8 : jne 0x18f0d0 ; vzeroupper ; ret
0x000000000018f24a : jne 0x18f255 ; vzeroupper ; ret
0x000000000018f2d2 : jne 0x18f256 ; ret
0x000000000018f41f : jne 0x18f259 ; vzeroupper ; ret
0x000000000018f276 : jne 0x18f25e ; ret
0x000000000018f693 : jne 0x18f6b7 ; xor eax, eax ; vzeroupper ; ret
0x000000000018f7ee : jne 0x18f7ce ; vzeroupper ; ret
0x000000000018f80d : jne 0x18f7cf ; vzeroupper ; ret
0x000000000018f959 : jne 0x18f7d2 ; vzeroupper ; ret
0x000000000018f902 : jne 0x18f941 ; retf
0x000000000018fa32 : jne 0x18fa71 ; retf
0x000000000018fb0b : jne 0x18faf7 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018fc69 : jne 0x18fc3e ; vzeroupper ; ret
0x000000000018fddf : jne 0x18fc42 ; vzeroupper ; ret
0x000000000018fd7f : jne 0x18fdbe ; retf
0x000000000018fee2 : jne 0x18ff21 ; retf
0x000000000018ffe0 : jne 0x18ffc7 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000191ffd : jne 0x192027 ; xor eax, eax ; ret
0x00000000001915f1 : jne 0x19202b ; xor eax, eax ; ret
0x0000000000191619 : jne 0x192037 ; xor eax, eax ; ret
0x0000000000192e3d : jne 0x192e67 ; xor eax, eax ; ret
0x0000000000192c21 : jne 0x192e6b ; xor eax, eax ; ret
0x0000000000192e71 : jne 0x192e7a ; xor eax, eax ; ret
0x0000000000192c47 : jne 0x192e7e ; xor eax, eax ; ret
0x0000000000193fab : jne 0x193f8b ; vzeroupper ; ret
0x0000000000194115 : jne 0x1940a6 ; lea rax, [rdi + 3] ; ret
0x00000000001940e7 : jne 0x1940a6 ; lea rax, [rdi + 7] ; ret
0x00000000001940e6 : jne 0x1940a7 ; lea rax, [rdi + 7] ; ret
0x0000000000195874 : jne 0x195a88 ; xor eax, eax ; ret
0x0000000000195a79 : jne 0x195a99 ; xor eax, eax ; ret
0x0000000000195921 : jne 0x195a9d ; xor eax, eax ; ret
0x0000000000195a91 : jne 0x195a9e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001960a6 : jne 0x1960b4 ; xor eax, eax ; ret
0x0000000000195f7d : jne 0x1960b6 ; ret
0x000000000019a865 : jne 0x19a850 ; pop rbx ; ret
0x000000000019bade : jne 0x19bac6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019bbb6 : jne 0x19bba6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019bc09 : jne 0x19bbe8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019be2b : jne 0x19be18 ; pop rbx ; ret
0x000000000019becd : jne 0x19beb3 ; pop rbx ; ret
0x000000000019c05f : jne 0x19c058 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000026ab5 : jne 0x26a7d ; ret
0x0000000000028d19 : jne 0x28cb0 ; mov rdi, rbx ; call rsi
0x0000000000036dcf : jne 0x36ddd ; mov eax, r8d ; ret
0x000000000004436d : jne 0x4434a ; ret
0x00000000000451d6 : jne 0x451e8 ; fadd st(0) ; add rsp, 8 ; ret
0x000000000004559c : jne 0x455ae ; addsd xmm0, xmm0 ; ret
0x0000000000045702 : jne 0x45719 ; test eax, 0x7fffff ; je 0x45719 ; ret
0x00000000000458c8 : jne 0x458d6 ; addss xmm0, xmm0 ; ret
0x0000000000045f75 : jne 0x45f82 ; add rsp, 0x18 ; ret
0x000000000004601a : jne 0x46030 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000462cf : jne 0x462e2 ; add rsp, 0x148 ; ret
0x00000000000468d4 : jne 0x468ee ; add rsp, 0x118 ; ret
0x0000000000046957 : jne 0x46971 ; add rsp, 0x118 ; ret
0x0000000000046a62 : jne 0x46a75 ; add rsp, 0x98 ; ret
0x0000000000046ca6 : jne 0x46cc9 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000047002 : jne 0x47015 ; add rsp, 0x148 ; ret
0x0000000000047732 : jne 0x47745 ; add rsp, 0xa8 ; ret
0x0000000000049cc9 : jne 0x49cc6 ; mov edi, ebp ; call 0xe5fc6
0x000000000004a5eb : jne 0x4a5b8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a67f : jne 0x4a68b ; pop rbx ; ret
0x000000000004a753 : jne 0x4a760 ; add rsp, 0x28 ; ret
0x000000000004a843 : jne 0x4a850 ; add rsp, 0x28 ; ret
0x000000000004ab77 : jne 0x4abd0 ; add rsp, 0x18 ; ret
0x000000000004b0cd : jne 0x4b0da ; add rsp, 0x18 ; ret
0x000000000004b11a : jne 0x4b127 ; add rsp, 0x18 ; ret
0x000000000004b16c : jne 0x4b179 ; add rsp, 0x18 ; ret
0x000000000004b1b9 : jne 0x4b1c6 ; add rsp, 0x18 ; ret
0x000000000004b20c : jne 0x4b219 ; add rsp, 0x18 ; ret
0x000000000004b259 : jne 0x4b266 ; add rsp, 0x18 ; ret
0x000000000004b52e : jne 0x4b547 ; mov eax, 0x13e ; syscall
0x0000000000054dfa : jne 0x54e34 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000054eaa : jne 0x54f13 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000054f78 : jne 0x54fdc ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000055e65 : jne 0x55e78 ; add rsp, 0xd8 ; ret
0x000000000005723f : jne 0x57252 ; add rsp, 0xd8 ; ret
0x00000000000573fd : jne 0x573f3 ; pop rbx ; ret
0x0000000000057428 : jne 0x57423 ; pop rbx ; ret
0x000000000005812e : jne 0x58137 ; push r10 ; ret
0x0000000000058637 : jne 0x58640 ; push r10 ; ret
0x000000000005871c : jne 0x58707 ; mov eax, 1 ; ret
0x0000000000058964 : jne 0x5894f ; mov eax, 1 ; ret
0x0000000000058d33 : jne 0x58d25 ; mov rax, rdx ; ret
0x0000000000059617 : jne 0x5960d ; mov rax, rdx ; ret
0x000000000005a9b2 : jne 0x5aa3c ; leave ; ret
0x000000000005acda : jne 0x5acc3 ; mov eax, 1 ; ret
0x000000000005e14a : jne 0x5e1a5 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005e965 : jne 0x5e98b ; add rsp, 0x38 ; ret
0x0000000000064d68 : jne 0x64d7b ; add rsp, 0xd8 ; ret
0x0000000000064e3d : jne 0x64e50 ; add rsp, 0xd8 ; ret
0x0000000000064ef4 : jne 0x64f07 ; add rsp, 0xd8 ; ret
0x0000000000064fc6 : jne 0x64fd9 ; add rsp, 0xd8 ; ret
0x0000000000065088 : jne 0x6509b ; add rsp, 0xd8 ; ret
0x0000000000065148 : jne 0x6515b ; add rsp, 0xd8 ; ret
0x0000000000065236 : jne 0x65249 ; add rsp, 0xd8 ; ret
0x000000000006530d : jne 0x65320 ; add rsp, 0xd8 ; ret
0x000000000006589c : jne 0x658a3 ; pop rbx ; ret
0x0000000000065ee7 : jne 0x65efd ; add rsp, 0x18 ; ret
0x0000000000066188 : jne 0x66195 ; sub dword ptr [rdi], 1 ; ret
0x0000000000066270 : jne 0x66283 ; add rsp, 0xd8 ; ret
0x000000000006634b : jne 0x6635e ; add rsp, 0xd8 ; ret
0x00000000000792d1 : jne 0x792dc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e031 : jne 0x7dfef ; mov rdi, r13 ; call 0x8a277
0x0000000000086fda : jne 0x86ff1 ; sub dword ptr [rip + 0x16647d], 1 ; ret
0x00000000000888ec : jne 0x888b1 ; jmp 0x88884
0x0000000000089568 : jne 0x8957b ; add rsp, 0xd8 ; ret
0x0000000000089624 : jne 0x89637 ; add rsp, 0xd8 ; ret
0x000000000008971d : jne 0x89730 ; add rsp, 0xd8 ; ret
0x00000000000897ed : jne 0x89800 ; add rsp, 0xd8 ; ret
0x00000000000898a6 : jne 0x898b9 ; add rsp, 0xd8 ; ret
0x0000000000089ec1 : jne 0x89eb2 ; ret
0x0000000000090d68 : jne 0x90d81 ; add rsp, 0x48 ; ret
0x00000000000912f2 : jne 0x91309 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093a49 : jne 0x93a52 ; ret
0x000000000009418e : jne 0x941a9 ; sub dword ptr [rip + 0x159309], 1 ; ret
0x0000000000094889 : jne 0x9487a ; ret
0x00000000000952de : jne 0x952d3 ; jmp 0x952b0
0x00000000000958c6 : jne 0x958ba ; ret
0x0000000000095b81 : jne 0x95b4b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000966ee : jne 0x966e2 ; ret
0x0000000000096a9a : jne 0x96ab1 ; sub dword ptr [rip + 0x1569fd], 1 ; ret
0x0000000000097dfc : jne 0x97e32 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097fce : jne 0x97fff ; mov eax, 0x23 ; syscall
0x000000000009884d : jne 0x98841 ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000009c3eb : jne 0x9c431 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000009d08e : jne 0x9d076 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f44f : jne 0x9f43e ; sub rax, 0x10 ; ret
0x00000000000a1a31 : jne 0xa1a24 ; xor eax, eax ; ret
0x00000000000a1a9b : jne 0xa1a75 ; mov rdi, rsi ; call rax
0x00000000000a1b0b : jne 0xa1b02 ; ret
0x00000000000a45d4 : jne 0xa45c2 ; ret
0x00000000000a4617 : jne 0xa462d ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a4fd7 : jne 0xa4fc9 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab7ef : jne 0xab7e5 ; mov qword ptr [rdx], rcx ; ret
0x00000000000ab94f : jne 0xab945 ; mov rax, r8 ; ret
0x00000000000ab983 : jne 0xab975 ; mov rax, r8 ; ret
0x00000000000ab9c0 : jne 0xab9a5 ; mov rax, r8 ; ret
0x00000000000aba70 : jne 0xaba61 ; cmp eax, ecx ; je 0xaba61 ; mov rax, r8 ; ret
0x00000000000abaa2 : jne 0xaba92 ; ret
0x00000000000abafc : jne 0xabada ; ret
0x00000000000ad81c : jne 0xad806 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000af327 : jne 0xaf384 ; xor eax, eax ; ret
0x00000000000af2f7 : jne 0xaf3a8 ; xor eax, eax ; ret
0x00000000000af7da : jne 0xaf854 ; xor eax, eax ; ret
0x00000000000af809 : jne 0xaf884 ; xor eax, eax ; ret
0x00000000000b4f37 : jne 0xb4f42 ; xor rax, rax ; ret
0x00000000000ba89a : jne 0xbb156 ; ret
0x00000000000bbf7d : jne 0xbc9a6 ; ret
0x00000000000be6b1 : jne 0xbe6a2 ; ret
0x00000000000be761 : jne 0xbe752 ; ret
0x00000000000be8d1 : jne 0xbe8c6 ; lea rax, [rcx - 1] ; ret
0x00000000000bea21 : jne 0xbea16 ; sub rax, 1 ; ret
0x00000000000bf127 : jne 0xbf132 ; mov rax, rdi ; ret
0x00000000000bf201 : jne 0xbf1ea ; ret
0x00000000000bf709 : jne 0xbf5cc ; jmp 0xbf6e3
0x00000000000bfd21 : jne 0xbfcfd ; mov rax, r8 ; ret
0x00000000000bfe18 : jne 0xbfe0c ; xor eax, eax ; ret
0x00000000000bfeae : jne 0xbfe4b ; test edx, edx ; jne 0xbfe96 ; ret
0x00000000000bfeb2 : jne 0xbfe92 ; ret
0x00000000000c119d : jne 0xc1192 ; ret
0x00000000000c99eb : jne 0xc9a54 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c9ac9 : jne 0xc9b2d ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c9b9b : jne 0xc9bd5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cd293 : jne 0xcd2bb ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cdd70 : jne 0xcdd83 ; add rsp, 0xd8 ; ret
0x00000000000cde4b : jne 0xcde5e ; add rsp, 0xd8 ; ret
0x00000000000d119b : jne 0xd11f6 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d1517 : jne 0xd1574 ; xor eax, eax ; ret
0x00000000000d14e7 : jne 0xd1598 ; xor eax, eax ; ret
0x00000000000d21e6 : jne 0xd2262 ; ret
0x00000000000d210f : jne 0xd2266 ; ret
0x00000000000d20ee : jne 0xd2268 ; xor eax, eax ; ret
0x00000000000d233a : jne 0xd2345 ; mov eax, r9d ; ret
0x00000000000d27db : jne 0xd2836 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d2877 : jne 0xd2882 ; xor rax, rax ; ret
0x00000000000d33d3 : jne 0xd33ef ; add rsp, 0x28 ; ret
0x00000000000d344d : jne 0xd345c ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000d7315 : jne 0xd7337 ; add rsp, 0x28 ; ret
0x00000000000d7446 : jne 0xd745c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d7bed : jne 0xd7c09 ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000dd81c : jne 0xdd829 ; add rsp, 0x18 ; ret
0x00000000000e00ec : jne 0xe00f9 ; add rsp, 0x18 ; ret
0x00000000000e05e7 : jne 0xe05d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e21c0 : jne 0xe21f7 ; mov eax, 0x74 ; syscall
0x00000000000e21df : jne 0xe2239 ; add rsp, 0x38 ; ret
0x00000000000e43db : jne 0xe4454 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5c75 : jne 0xe5c8d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e5c9e : jne 0xe5cb7 ; mov eax, 0x22 ; syscall
0x00000000000e5d1e : jne 0xe5d37 ; mov eax, 0x23 ; syscall
0x00000000000e6516 : jne 0xe6560 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e66e6 : jne 0xe6730 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e7020 : jne 0xe7057 ; mov eax, 0x69 ; syscall
0x00000000000e703f : jne 0xe7099 ; add rsp, 0x38 ; ret
0x00000000000e70c0 : jne 0xe70f7 ; mov eax, 0x6a ; syscall
0x00000000000e70df : jne 0xe7139 ; add rsp, 0x38 ; ret
0x00000000000e7393 : jne 0xe7399 ; add byte ptr [rax], al ; syscall
0x00000000000e7390 : jne 0xe73c7 ; mov eax, 0x75 ; syscall
0x00000000000e73af : jne 0xe7419 ; add rsp, 0x38 ; ret
0x00000000000e7440 : jne 0xe7477 ; mov eax, 0x77 ; syscall
0x00000000000e745f : jne 0xe74c9 ; add rsp, 0x38 ; ret
0x00000000000e7dfb : jne 0xe7e02 ; ret
0x00000000000e7e09 : jne 0xe7e84 ; mov eax, 0x7d00 ; ret
0x00000000000e7e75 : jne 0xe7e9a ; mov eax, 0xfffa ; ret
0x00000000000e7f96 : jne 0xe7fa7 ; mov eax, 0x40 ; ret
0x00000000000eb103 : jne 0xeb0b5 ; xor eax, eax ; ret
0x00000000000eb0c5 : jne 0xeb100 ; mov eax, 1 ; ret
0x00000000000eb0e6 : jne 0xeb120 ; mov eax, 1 ; ret
0x00000000000eb1f0 : jne 0xeb1e9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb2f1 : jne 0xeb2e9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1d00 : jne 0xf1d61 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000f8861 : jne 0xf8850 ; mov rdi, qword ptr [rbp - 0x70] ; call 0x25358
0x0000000000117c53 : jno 0x117c59 ; add byte ptr [rax], al ; syscall
0x00000000001918ae : jno 0x1918bd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000192f54 : jno 0x192f5d ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000019318e : jno 0x193197 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000001932f5 : jno 0x193306 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000019345a : jno 0x1934de ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000497f3 : jno 0x4982a ; sbb al, byte ptr [rax] ; syscall
0x0000000000089161 : jno 0x8916f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000089308 : jno 0x89316 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000a59ce : jno 0xa5967 ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59fc
0x00000000000d930b : jno 0xd9300 ; adc byte ptr [rax], al ; mov rdi, r13 ; call 0x255a9
0x000000000010d876 : jnp 0x10d871 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 3
0x00000000001223f5 : jnp 0x1223fb ; add byte ptr [rax], al ; syscall
0x000000000013af1e : jnp 0x13af70 ; test rdi, rdi ; jne 0x13af18 ; pop rbx ; ret
0x00000000001568bc : jnp 0x156843 ; ret 0x3901
0x00000000000a19d3 : jnp 0xa1a22 ; mov rsi, r14 ; call rax
0x00000000000a1a72 : jnp 0xa1abe ; call rax
0x00000000000c7251 : jnp 0xc727b ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000d89dc : jnp 0xd8a47 ; mov qword ptr [rsp + 0x30], rdi ; call 0x25499
0x00000000000f1361 : jnp 0xf13ce ; add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x00000000000f1950 : jnp 0xf19bc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000f8857 : jnp 0xf883d ; call 0x25354
0x00000000000f884a : jnp 0xf8864 ; add rbx, 0x20 ; call 0x25358
0x0000000000062070 : jnp 0xffffffff8947b793 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000621d4 : jnp 0xffffffff8947b7f7 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000062789 : jnp 0xffffffff8947b8ac ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000081b51 : jnp 0xffffffff8949ac74 ; adc cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000151c13 : jns 0x151c66 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001887c7 : jns 0x1887a2 ; retf 0xead3
0x0000000000188917 : jns 0x1888f2 ; retf 0xead3
0x0000000000188a67 : jns 0x188a42 ; retf 0xead3
0x0000000000188bb7 : jns 0x188b92 ; retf 0xead3
0x0000000000188d07 : jns 0x188ce2 ; retf 0xead3
0x0000000000188e57 : jns 0x188e32 ; retf 0xead3
0x0000000000188fa7 : jns 0x188f82 ; retf 0xead3
0x00000000001890f7 : jns 0x1890d2 ; retf 0xead3
0x0000000000189247 : jns 0x189222 ; retf 0xead3
0x0000000000189397 : jns 0x189372 ; retf 0xead3
0x00000000001894e7 : jns 0x1894c2 ; retf 0xead3
0x0000000000189637 : jns 0x189612 ; retf 0xead3
0x0000000000189787 : jns 0x189762 ; retf 0xead3
0x00000000001898d7 : jns 0x1898b2 ; retf 0xead3
0x0000000000189a27 : jns 0x189a02 ; retf 0xead3
0x0000000000189ea7 : jns 0x189e82 ; retf 0xead3
0x000000000018a027 : jns 0x18a002 ; retf 0xead3
0x000000000018a1a7 : jns 0x18a182 ; retf 0xead3
0x000000000018a327 : jns 0x18a302 ; retf 0xead3
0x000000000018a4a7 : jns 0x18a482 ; retf 0xead3
0x000000000018a627 : jns 0x18a602 ; retf 0xead3
0x000000000018a7a7 : jns 0x18a782 ; retf 0xead3
0x000000000018a927 : jns 0x18a902 ; retf 0xead3
0x000000000018aaa7 : jns 0x18aa82 ; retf 0xead3
0x000000000018ac27 : jns 0x18ac02 ; retf 0xead3
0x000000000018ada7 : jns 0x18ad82 ; retf 0xead3
0x000000000018af27 : jns 0x18af02 ; retf 0xead3
0x000000000018b0a7 : jns 0x18b082 ; retf 0xead3
0x000000000018b227 : jns 0x18b202 ; retf 0xead3
0x000000000018b3a7 : jns 0x18b382 ; retf 0xead3
0x0000000000192f5b : jns 0x192f5e ; ret
0x0000000000193195 : jns 0x193198 ; ret
0x00000000001932fc : jns 0x193307 ; ret
0x000000000004acd9 : jns 0x4ac9d ; xor eax, eax ; ret
0x00000000000a17d3 : jns 0xa1760 ; adc al, 0 ; call qword ptr [rax]
0x00000000000bfa33 : jns 0xbfa58 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000bfcd3 : jns 0xbfd05 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000e7225 : jns 0xe722b ; add byte ptr [rax], al ; syscall
0x00000000000eca83 : jns 0xeca73 ; lea rax, [rdx + rax*8] ; jmp 0xeca65
0x00000000000be196 : jns 0xffffffffed3be4fc ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be1f8 : jns 0xffffffffed3be95e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be218 : jns 0xffffffffed3bea7e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010f9b8 : jo 0x10f9ce ; adc dword ptr [rdi + 0x78], edi ; ret
0x000000000011037d : jo 0x110396 ; adc dword ptr [rdi + 0xf8], edi ; ret
0x000000000011f840 : jo 0x11f846 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000120955 : jo 0x1208e2 ; ret 0xeac1
0x0000000000120954 : jo 0x1208e3 ; ret 0xeac1
0x0000000000133e20 : jo 0x133df1 ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133dfe
0x000000000015626c : jo 0x1562d2 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015e3b5 : jo 0x15e3a8 ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000002ff52 : jo 0x2ff59 ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000003568f : jo 0x356b2 ; add byte ptr [rcx + rcx*4 + 0x25], al ; ret
0x0000000000037487 : jo 0x374d8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037486 : jo 0x374d9 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000006e27e : jo 0x6e26c ; cmc ; retf 0xffff
0x000000000008affe : jo 0x8b047 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000a2924 : jo 0xa291f ; ret 0
0x00000000000c02b5 : jo 0xc0317 ; pop rbp ; pop r12 ; ret
0x00000000000c07ac : jo 0xc080e ; pop rbp ; pop r12 ; ret
0x00000000000dab00 : jo 0xdab14 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab10 : jo 0xdab24 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab20 : jo 0xdab34 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab30 : jo 0xdab44 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab40 : jo 0xdab54 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab50 : jo 0xdab64 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab60 : jo 0xdab74 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab5f : jo 0xdab75 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab70 : jo 0xdab84 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab80 : jo 0xdab94 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab90 : jo 0xdaba4 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000daba0 : jo 0xdabb4 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000e72e5 : jo 0xe72eb ; add byte ptr [rax], al ; syscall
0x00000000000f8aa8 : jo 0xf8a2f ; ret 0x4801
0x00000000000f8aa7 : jo 0xf8a30 ; ret 0x4801
0x00000000000f8b08 : jo 0xf8a8f ; ret 0x4801
0x00000000000f8b07 : jo 0xf8a90 ; ret 0x4801
0x00000000000fc41f : jo 0xfc428 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x00000000001082d2 : jp 0x10827c ; stc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000001223c5 : jp 0x1223cb ; add byte ptr [rax], al ; syscall
0x0000000000128e22 : jp 0x128def ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012ef45 : jp 0x12ef9c ; mov rsi, rdx ; call rax
0x0000000000134d6a : jp 0x134d0f ; or eax, dword ptr [rax] ; syscall
0x000000000013c486 : jp 0x13c4b9 ; or eax, dword ptr [rax] ; syscall
0x000000000014c503 : jp 0x14c563 ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014f25d : jp 0x14f1ea ; retf 0x148
0x000000000018da52 : jp 0x18da5c ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000003590c : jp 0x3594f ; jbe 0x35930 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000004559a : jp 0x455b0 ; jne 0x455b0 ; addsd xmm0, xmm0 ; ret
0x00000000000458c6 : jp 0x458d8 ; jne 0x458d8 ; addss xmm0, xmm0 ; ret
0x0000000000056cd0 : jp 0x56cdc ; ret 0x1d74
0x0000000000109e04 : jrcxz 0x109e55 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f907 : jrcxz 0x11f910 ; loop 0x11f911 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000013019f : jrcxz 0x1301a5 ; add byte ptr [rax], al ; syscall
0x000000000015176e : jrcxz 0x151780 ; add byte ptr [rax - 0x77], cl ; in eax, 0x89 ; ret
0x00000000001706aa : jrcxz 0x1706a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001706a9 : jrcxz 0x1706a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001731da : jrcxz 0x1731d5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001731d9 : jrcxz 0x1731d6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000018fb0c : jrcxz 0x18fb3d ; enter -0x73b, 0x77 ; ret
0x000000000002fc89 : jrcxz 0x2fcb6 ; ret
0x000000000005f49a : jrcxz 0x5f427 ; retf 0xfac1
0x0000000000061b14 : jrcxz 0x61b5e ; mov eax, eax ; ret
0x00000000000624b4 : jrcxz 0x624bf ; add al, byte ptr [rax] ; add bh, bl ; call 0x1205aed7
0x000000000006f8f9 : jrcxz 0x6f902 ; and dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000081b64 : jrcxz 0x81b51 ; ret
0x0000000000097957 : jrcxz 0x9791c ; cmp r11d, 0xa ; je 0x97968 ; ret
0x00000000000a2cd9 : jrcxz 0xa2ca1 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000c93f5 : jrcxz 0xc93fd ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000e05e6 : jrcxz 0xe0664 ; out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x000000000010f7c9 : js 0x10f7e9 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x000000000010f968 : js 0x10f97e ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000117653 : js 0x117610 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fdfd : js 0x11fe07 ; add byte ptr [rbp + 0x3e], dh ; mov rdx, rax ; jmp 0x11fe20
0x0000000000125b98 : js 0x125b24 ; loopne 0x125bab ; movzx eax, ax ; ret
0x0000000000125cc8 : js 0x125c51 ; loopne 0x125cd1 ; ret
0x0000000000125d58 : js 0x125ce4 ; loopne 0x125d65 ; movzx eax, ax ; ret
0x0000000000126068 : js 0x125ff4 ; loopne 0x126077 ; movzx eax, ax ; ret
0x0000000000126579 : js 0x126505 ; loopne 0x12658c ; movzx eax, ax ; ret
0x0000000000126699 : js 0x126622 ; loopne 0x1266a2 ; ret
0x0000000000126719 : js 0x1266a5 ; loopne 0x126726 ; movzx eax, ax ; ret
0x00000000001269e9 : js 0x126975 ; loopne 0x1269f8 ; movzx eax, ax ; ret
0x000000000012ffeb : js 0x12fffd ; jne 0x12ffe8 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000013fd10 : js 0x13fd28 ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x00000000001519a0 : js 0x1519b3 ; retf 0x5489
0x000000000015199f : js 0x1519b4 ; retf 0x5489
0x00000000001568b8 : js 0x1568b8 ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x000000000015fbc8 : js 0x15fbe1 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000018e684 : js 0x18e68f ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000019bc8b : js 0x19bd06 ; ret 0x8b49
0x000000000002e13a : js 0x2e0c1 ; retf 0x4180
0x00000000000370b5 : js 0x37041 ; loopne 0x370c8 ; movzx eax, ax ; ret
0x00000000000370f5 : js 0x37081 ; loopne 0x37102 ; movzx eax, ax ; ret
0x0000000000037195 : js 0x37121 ; loopne 0x371a4 ; movzx eax, ax ; ret
0x0000000000037275 : js 0x371fe ; loopne 0x3727e ; ret
0x000000000003730e : js 0x37297 ; loopne 0x37317 ; ret
0x000000000003732e : js 0x372ba ; loopne 0x37341 ; movzx eax, ax ; ret
0x000000000003736e : js 0x372fa ; loopne 0x3737b ; movzx eax, ax ; ret
0x000000000003740e : js 0x3739a ; loopne 0x3741d ; movzx eax, ax ; ret
0x0000000000037497 : js 0x374e8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037496 : js 0x374e9 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000043a9c : js 0x43abd ; add byte ptr [rdi], cl ; mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x0000000000057425 : js 0x5742e ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000781da : js 0x781a9 ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x0000000000079007 : js 0x78fd6 ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000008df71 : js 0x8df7a ; ret
0x00000000000d6627 : js 0xd663f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d6626 : js 0xd6640 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d6649 : js 0xd6663 ; add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e7345 : js 0xe734b ; add byte ptr [rax], al ; syscall
0x00000000000e80cb : js 0xe80d2 ; ret
0x00000000000be138 : js 0xffffffffed3be39e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be166 : js 0xffffffffed3be5cc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be1b8 : js 0xffffffffed3bea1e ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000e4159 : lahf ; adc byte ptr [rax], al ; syscall
0x00000000001457ab : lahf ; or al, byte ptr [rax] ; syscall
0x00000000001892cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000134d6b : lahf ; or eax, dword ptr [rax] ; syscall
0x0000000000078079 : lahf ; ret
0x0000000000071c9d : lahf ; ret 0x2941
0x0000000000097148 : lahf ; ret 0x3949
0x000000000006a722 : lahf ; ret 0xd129
0x00000000000f0b14 : lahf ; ret 0xd189
0x0000000000097272 : lahf ; ret 0xd1e9
0x0000000000068934 : lahf ; ret 0xd629
0x000000000006be66 : lahf ; ret 0xd729
0x00000000000fc3dd : lahf ; retf
0x0000000000132b33 : lahf ; rol dword ptr [rcx], 0xc9 ; jmp 0x8ed76
0x0000000000047405 : lahf ; sub eax, 0xd089001a ; ret
0x000000000011d01b : lahf ; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x000000000018995d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011cedd : lar eax, word ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000011c42c : lcall [rax + 0x4c] ; mov eax, esp ; pop rdx ; pop r12 ; ret
0x00000000000a3b1d : lcall [rbp + 0x31] ; rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x000000000013e8f5 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000049852 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000008a65d : lcall [rbp + 0x41] ; pop rsp ; ret
0x00000000000f5287 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e0527 : lcall [rbx + 0x5d] ; lea rax, [rax + rdx*8] ; ret
0x00000000000e60e5 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d175 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a1ab3 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000863f0 : lcall [rbx + 0x5d] ; ret
0x000000000004a6ab : lcall [rbx - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x000000000010002c : lcall [rdi + 0xf] ; xchg eax, esp ; ret 0xd009
0x00000000000a2588 : lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000158808 : lcall [rdx] ; cmovae eax, r10d ; jmp 0x1587a8
0x0000000000170d36 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013f5ff : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000d1276 : lea eax, [rax + rax - 1] ; ret
0x0000000000105d5b : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000c0019 : lea eax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af354 : lea eax, [rax + rdi + 0x10] ; ret
0x00000000000af364 : lea eax, [rax + rdi + 0x20] ; ret
0x00000000000af844 : lea eax, [rax + rdi + 0x30] ; ret
0x00000000000af334 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000e052b : lea eax, [rax + rdx*8] ; ret
0x000000000009f3cf : lea eax, [rax - 8] ; ret
0x000000000008abb2 : lea eax, [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001174c5 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x000000000007f2b8 : lea eax, [rax] ; idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000001388d5 : lea eax, [rbp - 0x78] ; call 0xe4b95
0x00000000000eb351 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb251 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f7b4 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000013f600 : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x00000000000f16e7 : lea eax, [rcx + rax - 0x76bc0000] ; retf 0x8944
0x00000000000b4c8d : lea eax, [rcx + rsi] ; ret
0x0000000000054752 : lea eax, [rcx - 0x43] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000008ae9f : lea eax, [rcx - 1] ; ret
0x00000000000bb7ec : lea eax, [rdi + 0x10] ; ret
0x00000000000bb801 : lea eax, [rdi + 0x11] ; ret
0x00000000000bb81f : lea eax, [rdi + 0x12] ; ret
0x00000000000bb83f : lea eax, [rdi + 0x13] ; ret
0x00000000000bb862 : lea eax, [rdi + 0x14] ; ret
0x00000000000bb881 : lea eax, [rdi + 0x15] ; ret
0x00000000000bb8a1 : lea eax, [rdi + 0x16] ; ret
0x00000000000bb8c1 : lea eax, [rdi + 0x17] ; ret
0x00000000000bb8e4 : lea eax, [rdi + 0x18] ; ret
0x00000000000bb909 : lea eax, [rdi + 0x19] ; ret
0x00000000000bb927 : lea eax, [rdi + 0x1a] ; ret
0x00000000000bb947 : lea eax, [rdi + 0x1b] ; ret
0x00000000000bb963 : lea eax, [rdi + 0x1c] ; ret
0x00000000000bb983 : lea eax, [rdi + 0x1d] ; ret
0x00000000000bb9a3 : lea eax, [rdi + 0x1e] ; ret
0x00000000000bb9c3 : lea eax, [rdi + 0x1f] ; ret
0x00000000000bc833 : lea eax, [rdi + 0x20] ; ret
0x00000000000bcaa9 : lea eax, [rdi + 0x40] ; ret
0x000000000018e869 : lea eax, [rdi + 0x41] ; vzeroupper ; ret
0x000000000018ea0c : lea eax, [rdi + 0x80] ; vzeroupper ; ret
0x00000000000bb73d : lea eax, [rdi + 0xa] ; ret
0x00000000000bb75d : lea eax, [rdi + 0xb] ; ret
0x00000000000bb77f : lea eax, [rdi + 0xc] ; ret
0x00000000000bb79f : lea eax, [rdi + 0xd] ; ret
0x00000000000bb7bf : lea eax, [rdi + 0xe] ; ret
0x00000000000bb7d9 : lea eax, [rdi + 0xf] ; ret
0x00000000000bb687 : lea eax, [rdi + 1] ; ret
0x000000000018e0c7 : lea eax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bb69a : lea eax, [rdi + 2] ; ret
0x000000000018e0db : lea eax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb6a5 : lea eax, [rdi + 3] ; ret
0x000000000018e0f5 : lea eax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bb6b8 : lea eax, [rdi + 4] ; ret
0x00000000000bb6cd : lea eax, [rdi + 5] ; ret
0x00000000000bb6eb : lea eax, [rdi + 6] ; ret
0x00000000000bb6f7 : lea eax, [rdi + 7] ; ret
0x00000000000bb70a : lea eax, [rdi + 8] ; ret
0x000000000013e7a4 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000bb71f : lea eax, [rdi + 9] ; ret
0x00000000000af389 : lea eax, [rdi + rax + 0x10] ; ret
0x00000000000af399 : lea eax, [rdi + rax + 0x20] ; ret
0x00000000000af293 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000013ec45 : lea eax, [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000018bb15 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b48cb : lea eax, [rdi + rax] ; ret
0x000000000018e7c3 : lea eax, [rdi + rax] ; vzeroupper ; ret
0x00000000000abcd9 : lea eax, [rdi + rdx - 1] ; ret
0x000000000018e10d : lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000013fb27 : lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x00000000000b4b89 : lea eax, [rdi + rsi] ; ret
0x00000000000d26ce : lea eax, [rdi - 0x10] ; ret
0x00000000000d2831 : lea eax, [rdi - 0xc] ; ret
0x00000000000d2851 : lea eax, [rdi - 4] ; ret
0x00000000000d2841 : lea eax, [rdi - 8] ; ret
0x00000000000bb673 : lea eax, [rdi] ; ret
0x000000000018e045 : lea eax, [rdi] ; vzeroupper ; ret
0x000000000017e07d : lea eax, [rdx + 0xa] ; ret
0x000000000017e09d : lea eax, [rdx + 0xb] ; ret
0x000000000017e0bf : lea eax, [rdx + 0xc] ; ret
0x000000000017e0df : lea eax, [rdx + 0xd] ; ret
0x000000000017e0ff : lea eax, [rdx + 0xe] ; ret
0x000000000017df8f : lea eax, [rdx + 0xf] ; ret
0x000000000017dfb7 : lea eax, [rdx + 1] ; ret
0x000000000017dfcd : lea eax, [rdx + 2] ; ret
0x000000000017dfe5 : lea eax, [rdx + 3] ; ret
0x000000000017dffb : lea eax, [rdx + 4] ; ret
0x000000000017e00d : lea eax, [rdx + 5] ; ret
0x000000000017e02b : lea eax, [rdx + 6] ; ret
0x000000000017df37 : lea eax, [rdx + 7] ; ret
0x000000000017e03d : lea eax, [rdx + 8] ; ret
0x000000000017e05d : lea eax, [rdx + 9] ; ret
0x00000000000eca86 : lea eax, [rdx + rax*8] ; jmp 0xeca62
0x000000000014c5bd : lea eax, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000008ae8e : lea eax, [rdx + rdi] ; ret
0x00000000000bf383 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000009f3f1 : lea eax, [rdx - 0x10] ; ret
0x000000000017dfa5 : lea eax, [rdx] ; ret
0x0000000000035921 : lea eax, [rip + 0x180aac] ; ret
0x00000000000272d5 : lea eax, [rip + 0x18ec2c] ; ret
0x00000000000272e5 : lea eax, [rip + 0x190a9f] ; ret
0x0000000000123f23 : lea eax, [rip + 0x90797] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000149633 : lea eax, [rip + 0xa61c7] ; ret
0x000000000007e594 : lea eax, [rsi + rsi*8 - 0x76b30001] ; ret 0x894c
0x0000000000032810 : lea eax, [rsp + 0xa0] ; call r15
0x000000000007b7d3 : lea ebx, [rdx + rdi*8 - 0x7cb70001] ; ret 0x4420
0x00000000000c020b : lea ecx, [rax + 1] ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000c0365 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x18] ; call rbx
0x00000000000c077e : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000001693e0 : lea ecx, [rbx + rcx] ; jmp r9
0x00000000000b9eee : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000122ace : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000017b886 : lea ecx, [rdx + 0x10] ; jne 0x17bdd9 ; ret
0x000000000017bb84 : lea ecx, [rdx + 0xa] ; jne 0x17bdd9 ; ret
0x000000000017bba4 : lea ecx, [rdx + 0xb] ; jne 0x17bdd9 ; ret
0x000000000017bbc4 : lea ecx, [rdx + 0xc] ; jne 0x17bdd9 ; ret
0x000000000017bbe6 : lea ecx, [rdx + 0xd] ; jne 0x17bdd9 ; ret
0x000000000017bc06 : lea ecx, [rdx + 0xe] ; jne 0x17bdd9 ; ret
0x000000000017bc26 : lea ecx, [rdx + 0xf] ; jne 0x17bdd9 ; ret
0x000000000017ba7c : lea ecx, [rdx + 1] ; jne 0x17bdd9 ; ret
0x000000000017ba9e : lea ecx, [rdx + 2] ; jne 0x17bdd9 ; ret
0x000000000017bac4 : lea ecx, [rdx + 3] ; jne 0x17bdd9 ; ret
0x000000000017badc : lea ecx, [rdx + 4] ; jne 0x17bdd9 ; ret
0x000000000008862a : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000017bb02 : lea ecx, [rdx + 5] ; jne 0x17bdd9 ; ret
0x000000000017bb24 : lea ecx, [rdx + 6] ; jne 0x17bdd9 ; ret
0x000000000017bb42 : lea ecx, [rdx + 7] ; jne 0x17bdd9 ; ret
0x000000000017b81e : lea ecx, [rdx + 8] ; jne 0x17bdd9 ; ret
0x000000000017bb64 : lea ecx, [rdx + 9] ; jne 0x17bdd9 ; ret
0x00000000000a0a79 : lea ecx, [rip + 0x115954] ; mov rdx, rcx ; jmp 0xa0a40
0x00000000001264f6 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000163a29 : lea ecx, [rsi + rdx] ; mov rdx, r14 ; mov esi, r12d ; call rax
0x0000000000163678 : lea ecx, [rsi + rdx] ; mov rdx, rbp ; mov esi, r12d ; call rax
0x0000000000154c3d : lea ecx, [rsp + 0x14] ; call qword ptr [rax]
0x00000000000c0369 : lea ecx, [rsp + 0x18] ; call rbx
0x0000000000155681 : lea ecx, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000014a68f : lea ecx, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000c0712 : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000c020f : lea ecx, [rsp + 0x28] ; call rbx
0x000000000014a49a : lea ecx, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000c094d : lea ecx, [rsp + 0x30] ; call rbx
0x0000000000155fbc : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014abaa : lea ecx, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000153ae7 : lea edi, [rbp + 0x58] ; call rax
0x0000000000153047 : lea edi, [rbp + 0x68] ; call rax
0x000000000015025a : lea edi, [rbp + 0xc8] ; call rax
0x000000000012f778 : lea edi, [rbx - 0x76ffffff] ; ret 0x2944
0x00000000000baa7d : lea edi, [rdi + 0x10] ; jne 0xbb159 ; ret
0x00000000000bc1a1 : lea edi, [rdi + 0x10] ; jne 0xbc9a9 ; ret
0x00000000000baaa0 : lea edi, [rdi + 0x11] ; jne 0xbb159 ; ret
0x00000000000bc1c4 : lea edi, [rdi + 0x11] ; jne 0xbc9a9 ; ret
0x00000000000baac5 : lea edi, [rdi + 0x12] ; jne 0xbb159 ; ret
0x00000000000bc1e9 : lea edi, [rdi + 0x12] ; jne 0xbc9a9 ; ret
0x00000000000baae3 : lea edi, [rdi + 0x13] ; jne 0xbb159 ; ret
0x00000000000bc217 : lea edi, [rdi + 0x13] ; jne 0xbc9a9 ; ret
0x00000000000bab03 : lea edi, [rdi + 0x14] ; jne 0xbb159 ; ret
0x00000000000bc247 : lea edi, [rdi + 0x14] ; jne 0xbc9a9 ; ret
0x00000000000bab26 : lea edi, [rdi + 0x15] ; jne 0xbb159 ; ret
0x00000000000bc27a : lea edi, [rdi + 0x15] ; jne 0xbc9a9 ; ret
0x00000000000bab45 : lea edi, [rdi + 0x16] ; jne 0xbb159 ; ret
0x00000000000bc2a9 : lea edi, [rdi + 0x16] ; jne 0xbc9a9 ; ret
0x00000000000bab65 : lea edi, [rdi + 0x17] ; jne 0xbb159 ; ret
0x00000000000bc2d9 : lea edi, [rdi + 0x17] ; jne 0xbc9a9 ; ret
0x00000000000bab85 : lea edi, [rdi + 0x18] ; jne 0xbb159 ; ret
0x00000000000bc309 : lea edi, [rdi + 0x18] ; jne 0xbc9a9 ; ret
0x00000000000baba8 : lea edi, [rdi + 0x19] ; jne 0xbb159 ; ret
0x00000000000bc33c : lea edi, [rdi + 0x19] ; jne 0xbc9a9 ; ret
0x00000000000babdd : lea edi, [rdi + 0x1a] ; jne 0xbb159 ; ret
0x00000000000bc371 : lea edi, [rdi + 0x1a] ; jne 0xbc9a9 ; ret
0x00000000000bac0b : lea edi, [rdi + 0x1b] ; jne 0xbb159 ; ret
0x00000000000bc39f : lea edi, [rdi + 0x1b] ; jne 0xbc9a9 ; ret
0x00000000000bac3b : lea edi, [rdi + 0x1c] ; jne 0xbb159 ; ret
0x00000000000bc3cf : lea edi, [rdi + 0x1c] ; jne 0xbc9a9 ; ret
0x00000000000bac67 : lea edi, [rdi + 0x1d] ; jne 0xbb159 ; ret
0x00000000000bc3fb : lea edi, [rdi + 0x1d] ; jne 0xbc9a9 ; ret
0x00000000000bac97 : lea edi, [rdi + 0x1e] ; jne 0xbb159 ; ret
0x00000000000bc42b : lea edi, [rdi + 0x1e] ; jne 0xbc9a9 ; ret
0x00000000000bacc7 : lea edi, [rdi + 0x1f] ; jne 0xbb159 ; ret
0x00000000000bc45b : lea edi, [rdi + 0x1f] ; jne 0xbc9a9 ; ret
0x00000000000bacf7 : lea edi, [rdi + 0x20] ; jne 0xbb159 ; ret
0x00000000000bc48b : lea edi, [rdi + 0x20] ; jne 0xbc9a9 ; ret
0x00000000000ba9c3 : lea edi, [rdi + 0xa] ; jne 0xbb159 ; ret
0x00000000000bc0a7 : lea edi, [rdi + 0xa] ; jne 0xbc9a9 ; ret
0x00000000000ba9e1 : lea edi, [rdi + 0xb] ; jne 0xbb159 ; ret
0x00000000000bc0d5 : lea edi, [rdi + 0xb] ; jne 0xbc9a9 ; ret
0x00000000000baa01 : lea edi, [rdi + 0xc] ; jne 0xbb159 ; ret
0x00000000000bc0f5 : lea edi, [rdi + 0xc] ; jne 0xbc9a9 ; ret
0x00000000000baa23 : lea edi, [rdi + 0xd] ; jne 0xbb159 ; ret
0x00000000000bc117 : lea edi, [rdi + 0xd] ; jne 0xbc9a9 ; ret
0x00000000000baa43 : lea edi, [rdi + 0xe] ; jne 0xbb159 ; ret
0x00000000000bc147 : lea edi, [rdi + 0xe] ; jne 0xbc9a9 ; ret
0x00000000000baa63 : lea edi, [rdi + 0xf] ; jne 0xbb159 ; ret
0x00000000000bc177 : lea edi, [rdi + 0xf] ; jne 0xbc9a9 ; ret
0x00000000000ba897 : lea edi, [rdi + 1] ; jne 0xbb159 ; ret
0x00000000000bbf7a : lea edi, [rdi + 1] ; jne 0xbc9a9 ; ret
0x00000000000ba8bb : lea edi, [rdi + 2] ; jne 0xbb159 ; ret
0x00000000000bbf9f : lea edi, [rdi + 2] ; jne 0xbc9a9 ; ret
0x00000000000ba8de : lea edi, [rdi + 3] ; jne 0xbb159 ; ret
0x00000000000bbfc2 : lea edi, [rdi + 3] ; jne 0xbc9a9 ; ret
0x00000000000ba8f9 : lea edi, [rdi + 4] ; jne 0xbb159 ; ret
0x00000000000bbfdd : lea edi, [rdi + 4] ; jne 0xbc9a9 ; ret
0x00000000000ba91c : lea edi, [rdi + 5] ; jne 0xbb159 ; ret
0x00000000000bc000 : lea edi, [rdi + 5] ; jne 0xbc9a9 ; ret
0x00000000000ba941 : lea edi, [rdi + 6] ; jne 0xbb159 ; ret
0x00000000000bc025 : lea edi, [rdi + 6] ; jne 0xbc9a9 ; ret
0x00000000000ba95f : lea edi, [rdi + 7] ; jne 0xbb159 ; ret
0x00000000000bc043 : lea edi, [rdi + 7] ; jne 0xbc9a9 ; ret
0x00000000000ba97b : lea edi, [rdi + 8] ; jne 0xbb159 ; ret
0x00000000000bc05f : lea edi, [rdi + 8] ; jne 0xbc9a9 ; ret
0x00000000000ba99e : lea edi, [rdi + 9] ; jne 0xbb159 ; ret
0x00000000000bc082 : lea edi, [rdi + 9] ; jne 0xbc9a9 ; ret
0x00000000000345b0 : lea edi, [rdi + rdi*8 - 1] ; dec dword ptr [rcx + 1] ; ret 0x8d48
0x00000000001300b0 : lea edi, [rdi*8 + 2] ; syscall
0x00000000000e4b78 : lea edi, [rip + 0x109622] ; syscall
0x00000000000e4a38 : lea edi, [rip + 0x109762] ; syscall
0x00000000000e4980 : lea edi, [rip + 0x10981a] ; syscall
0x00000000000e48a4 : lea edi, [rip + 0x1098ee] ; syscall
0x00000000000e46d4 : lea edi, [rip + 0x109a7e] ; syscall
0x00000000000e4510 : lea edi, [rip + 0x109bfa] ; syscall
0x00000000000e4156 : lea edi, [rip + 0x109f5c] ; syscall
0x00000000000e2c48 : lea edi, [rip + 0x10b3e2] ; syscall
0x00000000000e2b08 : lea edi, [rip + 0x10b522] ; syscall
0x00000000000e2a50 : lea edi, [rip + 0x10b5da] ; syscall
0x00000000000e2684 : lea edi, [rip + 0x10b99e] ; syscall
0x00000000000e24b4 : lea edi, [rip + 0x10bb2e] ; syscall
0x00000000000e22f0 : lea edi, [rip + 0x10bcaa] ; syscall
0x00000000000e1a08 : lea edi, [rip + 0x10c53a] ; syscall
0x00000000000d5c54 : lea edi, [rip + 0x118206] ; syscall
0x00000000000d5a20 : lea edi, [rip + 0x11843a] ; syscall
0x000000000009c219 : lea edi, [rip + 0x11b3ec] ; call 0x98498
0x000000000009c238 : lea edi, [rip + 0x11f46a] ; call 0x98498
0x000000000009baa5 : lea edi, [rip + 0x11fb8d] ; call 0x984f8
0x00000000000cd814 : lea edi, [rip + 0x1226a6] ; syscall
0x000000000009fa91 : lea edi, [rip + 0x14b0e9] ; call 0x9bca8
0x000000000009f9f4 : lea edi, [rip + 0x14b186] ; syscall
0x00000000000a1380 : lea edi, [rip + 0x14c85a] ; syscall
0x00000000000a11a0 : lea edi, [rip + 0x14ca3a] ; syscall
0x00000000000a0fb4 : lea edi, [rip + 0x14cc26] ; syscall
0x00000000000a0f44 : lea edi, [rip + 0x14cc96] ; syscall
0x00000000000a0d14 : lea edi, [rip + 0x14cec6] ; syscall
0x000000000009cc74 : lea edi, [rip + 0x14df06] ; syscall
0x000000000009cc14 : lea edi, [rip + 0x14df66] ; syscall
0x000000000009c854 : lea edi, [rip + 0x14e326] ; syscall
0x000000000009c5f4 : lea edi, [rip + 0x14e586] ; syscall
0x000000000009bfac : lea edi, [rip + 0x14ebce] ; syscall
0x000000000009bf74 : lea edi, [rip + 0x14ec06] ; syscall
0x000000000009dc24 : lea edi, [rip + 0x14ff36] ; syscall
0x000000000009d188 : lea edi, [rip + 0x1509c2] ; syscall
0x0000000000099225 : lea edi, [rip + 0x154925] ; syscall
0x00000000000991f4 : lea edi, [rip + 0x154966] ; syscall
0x0000000000098f74 : lea edi, [rip + 0x154be6] ; syscall
0x0000000000098a50 : lea edi, [rip + 0x15510a] ; syscall
0x0000000000097f75 : lea edi, [rip + 0x155565] ; syscall
0x0000000000097da0 : lea edi, [rip + 0x15573a] ; syscall
0x0000000000097c04 : lea edi, [rip + 0x1558d6] ; syscall
0x0000000000096ac6 : lea edi, [rip + 0x1569d4] ; syscall
0x0000000000096586 : lea edi, [rip + 0x156f14] ; syscall
0x00000000000961e2 : lea edi, [rip + 0x1572b8] ; syscall
0x0000000000095e76 : lea edi, [rip + 0x157624] ; syscall
0x00000000000947f2 : lea edi, [rip + 0x158ca8] ; syscall
0x0000000000094532 : lea edi, [rip + 0x158f68] ; syscall
0x00000000000941be : lea edi, [rip + 0x1592dc] ; syscall
0x0000000000087403 : lea edi, [rip + 0x166057] ; syscall
0x0000000000087006 : lea edi, [rip + 0x166454] ; syscall
0x0000000000086f5b : lea edi, [rip + 0x1664ff] ; syscall
0x00000000000850f4 : lea edi, [rip + 0x16adc6] ; syscall
0x0000000000064198 : lea edi, [rip + 0x189292] ; syscall
0x0000000000063f14 : lea edi, [rip + 0x189512] ; syscall
0x0000000000061d40 : lea edi, [rip + 0x18b6de] ; syscall
0x0000000000061c00 : lea edi, [rip + 0x18b81e] ; syscall
0x0000000000057e64 : lea edi, [rip + 0x1955a6] ; syscall
0x0000000000057c84 : lea edi, [rip + 0x195786] ; syscall
0x0000000000057754 : lea edi, [rip + 0x195cb6] ; syscall
0x0000000000055d87 : lea edi, [rip + 0x1975d3] ; call 0x102818
0x0000000000055d10 : lea edi, [rip + 0x1976aa] ; call 0x102818
0x00000000000554e0 : lea edi, [rip + 0x197cfa] ; syscall
0x000000000005538c : lea edi, [rip + 0x197e4e] ; syscall
0x0000000000055357 : lea edi, [rip + 0x197e83] ; syscall
0x000000000004abc0 : lea edi, [rip + 0x1a25fa] ; syscall
0x000000000004ab00 : lea edi, [rip + 0x1a26ba] ; syscall
0x000000000004aa38 : lea edi, [rip + 0x1a2782] ; syscall
0x000000000004a960 : lea edi, [rip + 0x1a285a] ; syscall
0x0000000000049a58 : lea edi, [rip + 0x1a2f0a] ; syscall
0x0000000000049993 : lea edi, [rip + 0x1a2fcf] ; syscall
0x00000000000497f1 : lea edi, [rip + 0x1a3171] ; syscall
0x0000000000049717 : lea edi, [rip + 0x1a324b] ; syscall
0x000000000003b721 : lea edi, [rip + 0x1b11f1] ; syscall
0x0000000000039d9e : lea edi, [rip + 0x1b2b3c] ; syscall
0x0000000000038a57 : lea edi, [rip + 0x1b3ddb] ; syscall
0x0000000000038a2a : lea edi, [rip + 0x1b3e08] ; syscall
0x00000000000388e5 : lea edi, [rip + 0x1b3f4d] ; syscall
0x00000000000296c8 : lea edi, [rip + 0x1c67f2] ; syscall
0x000000000002955c : lea edi, [rip + 0x1c695e] ; syscall
0x000000000002943c : lea edi, [rip + 0x1c6a7e] ; syscall
0x0000000000025887 : lea edi, [rip + 0x1c70a3] ; syscall
0x000000000019bdc0 : lea edi, [rip + 0x50ba2] ; syscall
0x000000000019bf80 : lea edi, [rip + 0x5155a] ; syscall
0x000000000019c2b0 : lea edi, [rip + 0x52f62] ; syscall
0x0000000000161580 : lea edi, [rip + 0x8ee32] ; syscall
0x0000000000160398 : lea edi, [rip + 0x9001a] ; syscall
0x00000000001602b8 : lea edi, [rip + 0x900fa] ; syscall
0x00000000001600d0 : lea edi, [rip + 0x902e2] ; syscall
0x0000000000160030 : lea edi, [rip + 0x90382] ; syscall
0x000000000015ff90 : lea edi, [rip + 0x90422] ; syscall
0x000000000015fee0 : lea edi, [rip + 0x904d2] ; syscall
0x000000000015f960 : lea edi, [rip + 0x90a52] ; syscall
0x0000000000155730 : lea edi, [rip + 0x9a3ba] ; syscall
0x00000000001555d0 : lea edi, [rip + 0x9a51a] ; syscall
0x00000000001553c4 : lea edi, [rip + 0x9a726] ; syscall
0x0000000000155224 : lea edi, [rip + 0x9a8c6] ; syscall
0x0000000000155090 : lea edi, [rip + 0x9aa5a] ; syscall
0x0000000000154f50 : lea edi, [rip + 0x9ab9a] ; syscall
0x0000000000154df0 : lea edi, [rip + 0x9acfa] ; syscall
0x0000000000154ce0 : lea edi, [rip + 0x9ae0a] ; syscall
0x0000000000151830 : lea edi, [rip + 0x9e2b6] ; syscall
0x000000000014fb18 : lea edi, [rip + 0x9ff0a] ; syscall
0x000000000014f9d8 : lea edi, [rip + 0xa004a] ; syscall
0x000000000014f920 : lea edi, [rip + 0xa0102] ; syscall
0x000000000014f834 : lea edi, [rip + 0xa01e6] ; syscall
0x000000000014f664 : lea edi, [rip + 0xa0386] ; syscall
0x000000000014f4a0 : lea edi, [rip + 0xa0522] ; syscall
0x0000000000149b32 : lea edi, [rip + 0xa5d2c] ; syscall
0x0000000000147994 : lea edi, [rip + 0xa7e36] ; syscall
0x000000000014765c : lea edi, [rip + 0xa816e] ; syscall
0x00000000001472dc : lea edi, [rip + 0xa84ee] ; syscall
0x00000000001470b6 : lea edi, [rip + 0xa8714] ; syscall
0x0000000000146f54 : lea edi, [rip + 0xa8876] ; syscall
0x0000000000146d17 : lea edi, [rip + 0xa8ab3] ; syscall
0x00000000001462c0 : lea edi, [rip + 0xa9452] ; syscall
0x000000000014613e : lea edi, [rip + 0xa95d4] ; syscall
0x0000000000146104 : lea edi, [rip + 0xa960e] ; syscall
0x0000000000145fec : lea edi, [rip + 0xa9726] ; syscall
0x00000000001457a8 : lea edi, [rip + 0xa9f6a] ; syscall
0x00000000001456e0 : lea edi, [rip + 0xaa032] ; syscall
0x00000000001455c4 : lea edi, [rip + 0xaa14e] ; syscall
0x00000000001441f1 : lea edi, [rip + 0xab2c9] ; syscall
0x0000000000140ab0 : lea edi, [rip + 0xae762] ; syscall
0x00000000001407b4 : lea edi, [rip + 0xaea5e] ; syscall
0x000000000010a50e : lea edi, [rip + 0xb1ffc] ; call 0x36fc8
0x000000000013c484 : lea edi, [rip + 0xb2d7a] ; syscall
0x000000000013bf04 : lea edi, [rip + 0xb32de] ; syscall
0x000000000013bd40 : lea edi, [rip + 0xb345a] ; syscall
0x000000000013bc78 : lea edi, [rip + 0xb34c2] ; syscall
0x000000000013bb38 : lea edi, [rip + 0xb3602] ; syscall
0x000000000013ba80 : lea edi, [rip + 0xb36ba] ; syscall
0x000000000013b390 : lea edi, [rip + 0xb3da2] ; syscall
0x000000000013b070 : lea edi, [rip + 0xb40c2] ; syscall
0x000000000013b00a : lea edi, [rip + 0xb40d0] ; call rax
0x000000000013aeb4 : lea edi, [rip + 0xb427e] ; syscall
0x000000000013ae76 : lea edi, [rip + 0xb42bc] ; call 0x978f8
0x0000000000137b28 : lea edi, [rip + 0xb749a] ; syscall
0x00000000001379e8 : lea edi, [rip + 0xb75da] ; syscall
0x0000000000137930 : lea edi, [rip + 0xb7692] ; syscall
0x0000000000137850 : lea edi, [rip + 0xb776a] ; syscall
0x0000000000137384 : lea edi, [rip + 0xb7bbe] ; syscall
0x0000000000136db4 : lea edi, [rip + 0xb812e] ; syscall
0x0000000000136894 : lea edi, [rip + 0xb8606] ; syscall
0x00000000001366c8 : lea edi, [rip + 0xb8792] ; syscall
0x0000000000136588 : lea edi, [rip + 0xb88d2] ; syscall
0x00000000001364d0 : lea edi, [rip + 0xb898a] ; syscall
0x00000000001363f0 : lea edi, [rip + 0xb8a62] ; syscall
0x0000000000135fd4 : lea edi, [rip + 0xb8e36] ; syscall
0x00000000001359b8 : lea edi, [rip + 0xb93f2] ; syscall
0x0000000000135860 : lea edi, [rip + 0xb954a] ; syscall
0x00000000001357a0 : lea edi, [rip + 0xb960a] ; syscall
0x00000000001356b8 : lea edi, [rip + 0xb96ea] ; syscall
0x00000000001355d4 : lea edi, [rip + 0xb9796] ; syscall
0x0000000000134f74 : lea edi, [rip + 0xb9db6] ; syscall
0x0000000000134d68 : lea edi, [rip + 0xb9f7a] ; syscall
0x0000000000134c10 : lea edi, [rip + 0xba0d2] ; syscall
0x0000000000134b50 : lea edi, [rip + 0xba192] ; syscall
0x0000000000134a68 : lea edi, [rip + 0xba272] ; syscall
0x0000000000133e54 : lea edi, [rip + 0xbae0e] ; syscall
0x0000000000133be4 : lea edi, [rip + 0xbb03e] ; syscall
0x0000000000133464 : lea edi, [rip + 0xbb75e] ; syscall
0x0000000000129728 : lea edi, [rip + 0xc5402] ; syscall
0x00000000001295e8 : lea edi, [rip + 0xc5542] ; syscall
0x0000000000129530 : lea edi, [rip + 0xc55fa] ; syscall
0x0000000000129156 : lea edi, [rip + 0xc59cc] ; syscall
0x0000000000128f54 : lea edi, [rip + 0xc5b96] ; syscall
0x0000000000128d74 : lea edi, [rip + 0xc5d2e] ; syscall
0x0000000000128bb0 : lea edi, [rip + 0xc5eaa] ; syscall
0x0000000000128ae0 : lea edi, [rip + 0xc5f26] ; syscall
0x0000000000128a16 : lea edi, [rip + 0xc5ff0] ; syscall
0x0000000000128981 : lea edi, [rip + 0xc6085] ; syscall
0x0000000000127c78 : lea edi, [rip + 0xc6d5a] ; syscall
0x0000000000127b38 : lea edi, [rip + 0xc6e9a] ; syscall
0x0000000000127a80 : lea edi, [rip + 0xc6f52] ; syscall
0x0000000000127486 : lea edi, [rip + 0xc7544] ; syscall
0x0000000000127284 : lea edi, [rip + 0xc76ee] ; syscall
0x00000000001270a4 : lea edi, [rip + 0xc7866] ; syscall
0x0000000000126ee0 : lea edi, [rip + 0xc79c2] ; syscall
0x000000000011b900 : lea edi, [rip + 0xd2c4a] ; syscall
0x000000000011b7e4 : lea edi, [rip + 0xd2d66] ; syscall
0x000000000011b384 : lea edi, [rip + 0xd31c6] ; syscall
0x000000000011ae59 : lea edi, [rip + 0xd36f1] ; syscall
0x0000000000109d39 : lea edi, [rip + 0xe4541] ; syscall
0x000000000013040e : lea edi, [rip - 0x184] ; call rax
0x0000000000150e75 : lea edi, [rsp + 0x10] ; call rax
0x000000000010e858 : lea edi, [rsp + 0x78] ; call 0x10b346
0x00000000000e88a6 : lea edi, [rsp + rax] ; call 0x25335
0x00000000000473dd : lea edx, [rax + 1] ; mov dword ptr [rip + 0x1a2dc6], edx ; ret
0x000000000008afc4 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000006dc5b : lea edx, [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000006d9af : lea edx, [rax - 0x7c000005] ; ret 0x4830
0x00000000001694b4 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000000e0525 : lea edx, [rdi + rdi*8] ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000ac1c6 : lea edx, [rdx + rcx] ; jmp r10
0x000000000012629e : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001698b8 : lea edx, [rdx - 0x40] ; jmp r9
0x000000000015548d : lea edx, [rip + 0x3a2d] ; call qword ptr [rax]
0x000000000007e297 : lea edx, [rip - 0x4d4] ; add rax, rdx ; jmp rax
0x00000000001192aa : lea edx, [rsi + 1] ; jne 0x119285 ; ret
0x0000000000116b15 : lea edx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x000000000004a4ef : lea esi, [rax - 0x76b70003] ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000007f698 : lea esi, [rax] ; idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x0000000000089160 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007a685 : lea esi, [rdx + rdi*8 - 0x76b60001] ; ret
0x00000000000bed38 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015998d : lea esi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159124 : lea esi, [rsp + 0x10] ; mov rdi, rbp ; call qword ptr [rax]
0x000000000014c438 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000085bbe : lea esi, [rsp + 8] ; call rax
0x0000000000132cb4 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000e4277 : lea esp, [rbp - 0x10] ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000049380 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000049cb9 : lea esp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000047b15 : lea esp, [rcx + rax] ; mov r13, rax ; mov rdi, r12 ; call rbx
0x00000000001090bc : lea esp, [rip + 0xaab1e] ; call 0x25358
0x00000000000ac1c5 : lea r10, [r10 + r9] ; jmp r10
0x0000000000049cb8 : lea r12, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001090bb : lea r12, [rip + 0xaab1e] ; call 0x25359
0x00000000001388d4 : lea r8, [rbp - 0x78] ; call 0xe4b96
0x000000000013fb26 : lea r8, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000003280f : lea r8, [rsp + 0xa0] ; call r15
0x000000000014c5bc : lea r8d, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000001693df : lea r9, [r11 + r9] ; jmp r9
0x0000000000154c3c : lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x00000000000c0368 : lea r9, [rsp + 0x18] ; call rbx
0x0000000000155680 : lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000014a68e : lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000c0711 : lea r9, [rsp + 0x20] ; call rbx
0x00000000000c020e : lea r9, [rsp + 0x28] ; call rbx
0x000000000014a499 : lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000c094c : lea r9, [rsp + 0x30] ; call rbx
0x0000000000155fbb : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014aba9 : lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000e80b1 : lea rax, [rax + rax - 1] ; ret
0x00000000000c0018 : lea rax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af353 : lea rax, [rax + rdi + 0x10] ; ret
0x00000000000af363 : lea rax, [rax + rdi + 0x20] ; ret
0x00000000000af843 : lea rax, [rax + rdi + 0x30] ; ret
0x00000000000af333 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000e052a : lea rax, [rax + rdx*8] ; ret
0x000000000009f3ce : lea rax, [rax - 8] ; ret
0x00000000000eb350 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb250 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4c8c : lea rax, [rcx + rsi] ; ret
0x00000000000be8d3 : lea rax, [rcx - 1] ; ret
0x00000000000bb7eb : lea rax, [rdi + 0x10] ; ret
0x00000000000bb800 : lea rax, [rdi + 0x11] ; ret
0x00000000000bb81e : lea rax, [rdi + 0x12] ; ret
0x00000000000bb83e : lea rax, [rdi + 0x13] ; ret
0x00000000000bb861 : lea rax, [rdi + 0x14] ; ret
0x00000000000bb880 : lea rax, [rdi + 0x15] ; ret
0x00000000000bb8a0 : lea rax, [rdi + 0x16] ; ret
0x00000000000bb8c0 : lea rax, [rdi + 0x17] ; ret
0x00000000000bb8e3 : lea rax, [rdi + 0x18] ; ret
0x00000000000bb908 : lea rax, [rdi + 0x19] ; ret
0x00000000000bb926 : lea rax, [rdi + 0x1a] ; ret
0x00000000000bb946 : lea rax, [rdi + 0x1b] ; ret
0x00000000000bb962 : lea rax, [rdi + 0x1c] ; ret
0x00000000000bb982 : lea rax, [rdi + 0x1d] ; ret
0x00000000000bb9a2 : lea rax, [rdi + 0x1e] ; ret
0x00000000000bb9c2 : lea rax, [rdi + 0x1f] ; ret
0x00000000000bc832 : lea rax, [rdi + 0x20] ; ret
0x00000000000bcaa8 : lea rax, [rdi + 0x40] ; ret
0x000000000018e868 : lea rax, [rdi + 0x41] ; vzeroupper ; ret
0x00000000000bb73c : lea rax, [rdi + 0xa] ; ret
0x00000000000bb75c : lea rax, [rdi + 0xb] ; ret
0x00000000000bb77e : lea rax, [rdi + 0xc] ; ret
0x00000000000bb79e : lea rax, [rdi + 0xd] ; ret
0x00000000000bb7be : lea rax, [rdi + 0xe] ; ret
0x00000000000bb7d8 : lea rax, [rdi + 0xf] ; ret
0x00000000000bb686 : lea rax, [rdi + 1] ; ret
0x000000000018e0c6 : lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bb699 : lea rax, [rdi + 2] ; ret
0x000000000018e0da : lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb6a4 : lea rax, [rdi + 3] ; ret
0x000000000018e0f4 : lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bb6b7 : lea rax, [rdi + 4] ; ret
0x00000000000bb6cc : lea rax, [rdi + 5] ; ret
0x00000000000bb6ea : lea rax, [rdi + 6] ; ret
0x00000000000bb6f6 : lea rax, [rdi + 7] ; ret
0x00000000000bb709 : lea rax, [rdi + 8] ; ret
0x00000000000bb71e : lea rax, [rdi + 9] ; ret
0x000000000018e7c2 : lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000af388 : lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af398 : lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af292 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000018bb14 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b48ca : lea rax, [rdi + rax] ; ret
0x00000000000abcd8 : lea rax, [rdi + rdx - 1] ; ret
0x000000000018e10c : lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000000b4b88 : lea rax, [rdi + rsi] ; ret
0x00000000000d26cd : lea rax, [rdi - 0x10] ; ret
0x00000000000d2830 : lea rax, [rdi - 0xc] ; ret
0x00000000000d2850 : lea rax, [rdi - 4] ; ret
0x00000000000d2840 : lea rax, [rdi - 8] ; ret
0x00000000000bb672 : lea rax, [rdi] ; ret
0x000000000018e044 : lea rax, [rdi] ; vzeroupper ; ret
0x000000000017e07c : lea rax, [rdx + 0xa] ; ret
0x000000000017e09c : lea rax, [rdx + 0xb] ; ret
0x000000000017e0be : lea rax, [rdx + 0xc] ; ret
0x000000000017e0de : lea rax, [rdx + 0xd] ; ret
0x000000000017e0fe : lea rax, [rdx + 0xe] ; ret
0x000000000017df8e : lea rax, [rdx + 0xf] ; ret
0x000000000017dfb6 : lea rax, [rdx + 1] ; ret
0x000000000017dfcc : lea rax, [rdx + 2] ; ret
0x000000000017dfe4 : lea rax, [rdx + 3] ; ret
0x000000000017dffa : lea rax, [rdx + 4] ; ret
0x000000000017e00c : lea rax, [rdx + 5] ; ret
0x000000000017e02a : lea rax, [rdx + 6] ; ret
0x000000000017df36 : lea rax, [rdx + 7] ; ret
0x000000000017e03c : lea rax, [rdx + 8] ; ret
0x000000000017e05c : lea rax, [rdx + 9] ; ret
0x00000000000eca85 : lea rax, [rdx + rax*8] ; jmp 0xeca63
0x000000000009f3f0 : lea rax, [rdx - 0x10] ; ret
0x000000000017dfa4 : lea rax, [rdx] ; ret
0x0000000000035920 : lea rax, [rip + 0x180aac] ; ret
0x00000000000272d4 : lea rax, [rip + 0x18ec2c] ; ret
0x00000000000272e4 : lea rax, [rip + 0x190a9f] ; ret
0x0000000000149632 : lea rax, [rip + 0xa61c7] ; ret
0x00000000000d2809 : lea rax, es:[rdi - 0x10] ; ret
0x00000000000b9eed : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000c020a : lea rcx, [rax + 1] ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000c0364 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x18] ; call rbx
0x00000000000c077d : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000088629 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000a0a78 : lea rcx, [rip + 0x115954] ; mov rdx, rcx ; jmp 0xa0a41
0x00000000001264f5 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000150e74 : lea rdi, [r12 + 0x10] ; call rax
0x00000000000e88a5 : lea rdi, [r12 + rax] ; call 0x25336
0x0000000000153ae6 : lea rdi, [rbp + 0x58] ; call rax
0x0000000000153046 : lea rdi, [rbp + 0x68] ; call rax
0x0000000000150259 : lea rdi, [rbp + 0xc8] ; call rax
0x00000000000e4b77 : lea rdi, [rip + 0x109622] ; syscall
0x00000000000e4a37 : lea rdi, [rip + 0x109762] ; syscall
0x00000000000e497f : lea rdi, [rip + 0x10981a] ; syscall
0x00000000000e48a3 : lea rdi, [rip + 0x1098ee] ; syscall
0x00000000000e46d3 : lea rdi, [rip + 0x109a7e] ; syscall
0x00000000000e450f : lea rdi, [rip + 0x109bfa] ; syscall
0x00000000000e4155 : lea rdi, [rip + 0x109f5c] ; syscall
0x00000000000e2c47 : lea rdi, [rip + 0x10b3e2] ; syscall
0x00000000000e2b07 : lea rdi, [rip + 0x10b522] ; syscall
0x00000000000e2a4f : lea rdi, [rip + 0x10b5da] ; syscall
0x00000000000e2683 : lea rdi, [rip + 0x10b99e] ; syscall
0x00000000000e24b3 : lea rdi, [rip + 0x10bb2e] ; syscall
0x00000000000e22ef : lea rdi, [rip + 0x10bcaa] ; syscall
0x00000000000e1a07 : lea rdi, [rip + 0x10c53a] ; syscall
0x00000000000d5c53 : lea rdi, [rip + 0x118206] ; syscall
0x00000000000d5a1f : lea rdi, [rip + 0x11843a] ; syscall
0x000000000009c218 : lea rdi, [rip + 0x11b3ec] ; call 0x98499
0x000000000009c237 : lea rdi, [rip + 0x11f46a] ; call 0x98499
0x000000000009baa4 : lea rdi, [rip + 0x11fb8d] ; call 0x984f9
0x00000000000cd813 : lea rdi, [rip + 0x1226a6] ; syscall
0x000000000009fa90 : lea rdi, [rip + 0x14b0e9] ; call 0x9bca9
0x000000000009f9f3 : lea rdi, [rip + 0x14b186] ; syscall
0x00000000000a137f : lea rdi, [rip + 0x14c85a] ; syscall
0x00000000000a119f : lea rdi, [rip + 0x14ca3a] ; syscall
0x00000000000a0fb3 : lea rdi, [rip + 0x14cc26] ; syscall
0x00000000000a0f43 : lea rdi, [rip + 0x14cc96] ; syscall
0x00000000000a0d13 : lea rdi, [rip + 0x14cec6] ; syscall
0x000000000009cc73 : lea rdi, [rip + 0x14df06] ; syscall
0x000000000009cc13 : lea rdi, [rip + 0x14df66] ; syscall
0x000000000009c853 : lea rdi, [rip + 0x14e326] ; syscall
0x000000000009c5f3 : lea rdi, [rip + 0x14e586] ; syscall
0x000000000009bfab : lea rdi, [rip + 0x14ebce] ; syscall
0x000000000009bf73 : lea rdi, [rip + 0x14ec06] ; syscall
0x000000000009dc23 : lea rdi, [rip + 0x14ff36] ; syscall
0x000000000009d187 : lea rdi, [rip + 0x1509c2] ; syscall
0x0000000000099224 : lea rdi, [rip + 0x154925] ; syscall
0x00000000000991f3 : lea rdi, [rip + 0x154966] ; syscall
0x0000000000098f73 : lea rdi, [rip + 0x154be6] ; syscall
0x0000000000098a4f : lea rdi, [rip + 0x15510a] ; syscall
0x0000000000097f74 : lea rdi, [rip + 0x155565] ; syscall
0x0000000000097d9f : lea rdi, [rip + 0x15573a] ; syscall
0x0000000000097c03 : lea rdi, [rip + 0x1558d6] ; syscall
0x0000000000096ac5 : lea rdi, [rip + 0x1569d4] ; syscall
0x0000000000096585 : lea rdi, [rip + 0x156f14] ; syscall
0x00000000000961e1 : lea rdi, [rip + 0x1572b8] ; syscall
0x0000000000095e75 : lea rdi, [rip + 0x157624] ; syscall
0x00000000000947f1 : lea rdi, [rip + 0x158ca8] ; syscall
0x0000000000094531 : lea rdi, [rip + 0x158f68] ; syscall
0x00000000000941bd : lea rdi, [rip + 0x1592dc] ; syscall
0x0000000000087402 : lea rdi, [rip + 0x166057] ; syscall
0x0000000000087005 : lea rdi, [rip + 0x166454] ; syscall
0x0000000000086f5a : lea rdi, [rip + 0x1664ff] ; syscall
0x00000000000850f3 : lea rdi, [rip + 0x16adc6] ; syscall
0x0000000000064197 : lea rdi, [rip + 0x189292] ; syscall
0x0000000000063f13 : lea rdi, [rip + 0x189512] ; syscall
0x0000000000061d3f : lea rdi, [rip + 0x18b6de] ; syscall
0x0000000000061bff : lea rdi, [rip + 0x18b81e] ; syscall
0x0000000000057e63 : lea rdi, [rip + 0x1955a6] ; syscall
0x0000000000057c83 : lea rdi, [rip + 0x195786] ; syscall
0x0000000000057753 : lea rdi, [rip + 0x195cb6] ; syscall
0x0000000000055d86 : lea rdi, [rip + 0x1975d3] ; call 0x102819
0x0000000000055d0f : lea rdi, [rip + 0x1976aa] ; call 0x102819
0x00000000000554df : lea rdi, [rip + 0x197cfa] ; syscall
0x000000000005538b : lea rdi, [rip + 0x197e4e] ; syscall
0x0000000000055356 : lea rdi, [rip + 0x197e83] ; syscall
0x000000000004abbf : lea rdi, [rip + 0x1a25fa] ; syscall
0x000000000004aaff : lea rdi, [rip + 0x1a26ba] ; syscall
0x000000000004aa37 : lea rdi, [rip + 0x1a2782] ; syscall
0x000000000004a95f : lea rdi, [rip + 0x1a285a] ; syscall
0x0000000000049a57 : lea rdi, [rip + 0x1a2f0a] ; syscall
0x0000000000049992 : lea rdi, [rip + 0x1a2fcf] ; syscall
0x00000000000497f0 : lea rdi, [rip + 0x1a3171] ; syscall
0x0000000000049716 : lea rdi, [rip + 0x1a324b] ; syscall
0x000000000003b720 : lea rdi, [rip + 0x1b11f1] ; syscall
0x0000000000039d9d : lea rdi, [rip + 0x1b2b3c] ; syscall
0x0000000000038a56 : lea rdi, [rip + 0x1b3ddb] ; syscall
0x0000000000038a29 : lea rdi, [rip + 0x1b3e08] ; syscall
0x00000000000388e4 : lea rdi, [rip + 0x1b3f4d] ; syscall
0x00000000000296c7 : lea rdi, [rip + 0x1c67f2] ; syscall
0x000000000002955b : lea rdi, [rip + 0x1c695e] ; syscall
0x000000000002943b : lea rdi, [rip + 0x1c6a7e] ; syscall
0x0000000000025886 : lea rdi, [rip + 0x1c70a3] ; syscall
0x000000000019bdbf : lea rdi, [rip + 0x50ba2] ; syscall
0x000000000019bf7f : lea rdi, [rip + 0x5155a] ; syscall
0x000000000019c2af : lea rdi, [rip + 0x52f62] ; syscall
0x000000000016157f : lea rdi, [rip + 0x8ee32] ; syscall
0x0000000000160397 : lea rdi, [rip + 0x9001a] ; syscall
0x00000000001602b7 : lea rdi, [rip + 0x900fa] ; syscall
0x00000000001600cf : lea rdi, [rip + 0x902e2] ; syscall
0x000000000016002f : lea rdi, [rip + 0x90382] ; syscall
0x000000000015ff8f : lea rdi, [rip + 0x90422] ; syscall
0x000000000015fedf : lea rdi, [rip + 0x904d2] ; syscall
0x000000000015f95f : lea rdi, [rip + 0x90a52] ; syscall
0x000000000015572f : lea rdi, [rip + 0x9a3ba] ; syscall
0x00000000001555cf : lea rdi, [rip + 0x9a51a] ; syscall
0x00000000001553c3 : lea rdi, [rip + 0x9a726] ; syscall
0x0000000000155223 : lea rdi, [rip + 0x9a8c6] ; syscall
0x000000000015508f : lea rdi, [rip + 0x9aa5a] ; syscall
0x0000000000154f4f : lea rdi, [rip + 0x9ab9a] ; syscall
0x0000000000154def : lea rdi, [rip + 0x9acfa] ; syscall
0x0000000000154cdf : lea rdi, [rip + 0x9ae0a] ; syscall
0x000000000015182f : lea rdi, [rip + 0x9e2b6] ; syscall
0x000000000014fb17 : lea rdi, [rip + 0x9ff0a] ; syscall
0x000000000014f9d7 : lea rdi, [rip + 0xa004a] ; syscall
0x000000000014f91f : lea rdi, [rip + 0xa0102] ; syscall
0x000000000014f833 : lea rdi, [rip + 0xa01e6] ; syscall
0x000000000014f663 : lea rdi, [rip + 0xa0386] ; syscall
0x000000000014f49f : lea rdi, [rip + 0xa0522] ; syscall
0x0000000000149b31 : lea rdi, [rip + 0xa5d2c] ; syscall
0x0000000000147993 : lea rdi, [rip + 0xa7e36] ; syscall
0x000000000014765b : lea rdi, [rip + 0xa816e] ; syscall
0x00000000001472db : lea rdi, [rip + 0xa84ee] ; syscall
0x00000000001470b5 : lea rdi, [rip + 0xa8714] ; syscall
0x0000000000146f53 : lea rdi, [rip + 0xa8876] ; syscall
0x0000000000146d16 : lea rdi, [rip + 0xa8ab3] ; syscall
0x00000000001462bf : lea rdi, [rip + 0xa9452] ; syscall
0x000000000014613d : lea rdi, [rip + 0xa95d4] ; syscall
0x0000000000146103 : lea rdi, [rip + 0xa960e] ; syscall
0x0000000000145feb : lea rdi, [rip + 0xa9726] ; syscall
0x00000000001457a7 : lea rdi, [rip + 0xa9f6a] ; syscall
0x00000000001456df : lea rdi, [rip + 0xaa032] ; syscall
0x00000000001455c3 : lea rdi, [rip + 0xaa14e] ; syscall
0x00000000001441f0 : lea rdi, [rip + 0xab2c9] ; syscall
0x0000000000140aaf : lea rdi, [rip + 0xae762] ; syscall
0x00000000001407b3 : lea rdi, [rip + 0xaea5e] ; syscall
0x000000000010a50d : lea rdi, [rip + 0xb1ffc] ; call 0x36fc9
0x000000000013c483 : lea rdi, [rip + 0xb2d7a] ; syscall
0x000000000013bf03 : lea rdi, [rip + 0xb32de] ; syscall
0x000000000013bd3f : lea rdi, [rip + 0xb345a] ; syscall
0x000000000013bc77 : lea rdi, [rip + 0xb34c2] ; syscall
0x000000000013bb37 : lea rdi, [rip + 0xb3602] ; syscall
0x000000000013ba7f : lea rdi, [rip + 0xb36ba] ; syscall
0x000000000013b38f : lea rdi, [rip + 0xb3da2] ; syscall
0x000000000013b06f : lea rdi, [rip + 0xb40c2] ; syscall
0x000000000013b009 : lea rdi, [rip + 0xb40d0] ; call rax
0x000000000013aeb3 : lea rdi, [rip + 0xb427e] ; syscall
0x000000000013ae75 : lea rdi, [rip + 0xb42bc] ; call 0x978f9
0x0000000000137b27 : lea rdi, [rip + 0xb749a] ; syscall
0x00000000001379e7 : lea rdi, [rip + 0xb75da] ; syscall
0x000000000013792f : lea rdi, [rip + 0xb7692] ; syscall
0x000000000013784f : lea rdi, [rip + 0xb776a] ; syscall
0x0000000000137383 : lea rdi, [rip + 0xb7bbe] ; syscall
0x0000000000136db3 : lea rdi, [rip + 0xb812e] ; syscall
0x0000000000136893 : lea rdi, [rip + 0xb8606] ; syscall
0x00000000001366c7 : lea rdi, [rip + 0xb8792] ; syscall
0x0000000000136587 : lea rdi, [rip + 0xb88d2] ; syscall
0x00000000001364cf : lea rdi, [rip + 0xb898a] ; syscall
0x00000000001363ef : lea rdi, [rip + 0xb8a62] ; syscall
0x0000000000135fd3 : lea rdi, [rip + 0xb8e36] ; syscall
0x00000000001359b7 : lea rdi, [rip + 0xb93f2] ; syscall
0x000000000013585f : lea rdi, [rip + 0xb954a] ; syscall
0x000000000013579f : lea rdi, [rip + 0xb960a] ; syscall
0x00000000001356b7 : lea rdi, [rip + 0xb96ea] ; syscall
0x00000000001355d3 : lea rdi, [rip + 0xb9796] ; syscall
0x0000000000134f73 : lea rdi, [rip + 0xb9db6] ; syscall
0x0000000000134d67 : lea rdi, [rip + 0xb9f7a] ; syscall
0x0000000000134c0f : lea rdi, [rip + 0xba0d2] ; syscall
0x0000000000134b4f : lea rdi, [rip + 0xba192] ; syscall
0x0000000000134a67 : lea rdi, [rip + 0xba272] ; syscall
0x0000000000133e53 : lea rdi, [rip + 0xbae0e] ; syscall
0x0000000000133be3 : lea rdi, [rip + 0xbb03e] ; syscall
0x0000000000133463 : lea rdi, [rip + 0xbb75e] ; syscall
0x0000000000129727 : lea rdi, [rip + 0xc5402] ; syscall
0x00000000001295e7 : lea rdi, [rip + 0xc5542] ; syscall
0x000000000012952f : lea rdi, [rip + 0xc55fa] ; syscall
0x0000000000129155 : lea rdi, [rip + 0xc59cc] ; syscall
0x0000000000128f53 : lea rdi, [rip + 0xc5b96] ; syscall
0x0000000000128d73 : lea rdi, [rip + 0xc5d2e] ; syscall
0x0000000000128baf : lea rdi, [rip + 0xc5eaa] ; syscall
0x0000000000128adf : lea rdi, [rip + 0xc5f26] ; syscall
0x0000000000128a15 : lea rdi, [rip + 0xc5ff0] ; syscall
0x0000000000128980 : lea rdi, [rip + 0xc6085] ; syscall
0x0000000000127c77 : lea rdi, [rip + 0xc6d5a] ; syscall
0x0000000000127b37 : lea rdi, [rip + 0xc6e9a] ; syscall
0x0000000000127a7f : lea rdi, [rip + 0xc6f52] ; syscall
0x0000000000127485 : lea rdi, [rip + 0xc7544] ; syscall
0x0000000000127283 : lea rdi, [rip + 0xc76ee] ; syscall
0x00000000001270a3 : lea rdi, [rip + 0xc7866] ; syscall
0x0000000000126edf : lea rdi, [rip + 0xc79c2] ; syscall
0x000000000011b8ff : lea rdi, [rip + 0xd2c4a] ; syscall
0x000000000011b7e3 : lea rdi, [rip + 0xd2d66] ; syscall
0x000000000011b383 : lea rdi, [rip + 0xd31c6] ; syscall
0x000000000011ae58 : lea rdi, [rip + 0xd36f1] ; syscall
0x0000000000109d38 : lea rdi, [rip + 0xe4541] ; syscall
0x000000000013040d : lea rdi, [rip - 0x184] ; call rax
0x000000000010e857 : lea rdi, [rsp + 0x78] ; call 0x10b347
0x00000000001694b3 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000008afc3 : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000012629d : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001698b7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000015548c : lea rdx, [rip + 0x3a2d] ; call qword ptr [rax]
0x00000000001192a9 : lea rdx, [rsi + 1] ; jne 0x119286 ; ret
0x00000000000bed37 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015998c : lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159123 : lea rsi, [rsp + 0x10] ; mov rdi, rbp ; call qword ptr [rax]
0x000000000014c437 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000085bbd : lea rsi, [rsp + 8] ; call rax
0x00000000000e4276 : lea rsp, [rbp - 0x10] ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000169047 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e9d7f : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000182d87 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000186d94 : leave ; add rax, rcx ; sub rax, rdi ; ret
0x0000000000105ac7 : leave ; add rsp, 8 ; mov eax, r9d ; ret
0x0000000000045529 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000bebb6 : leave ; cmove rax, rdx ; ret
0x00000000000d2337 : leave ; cmp eax, ecx ; jne 0xd2348 ; mov eax, r9d ; ret
0x00000000000aba9d : leave ; je 0xabaaf ; cmp ecx, esi ; jne 0xaba97 ; ret
0x0000000000132b36 : leave ; jmp 0x8ed73
0x00000000000abb37 : leave ; jmp rcx
0x0000000000126290 : leave ; jne 0x12629b ; ret
0x00000000001262f9 : leave ; jne 0x126303 ; ret
0x0000000000126be0 : leave ; jne 0x126beb ; ret
0x0000000000126c3d : leave ; jne 0x126c4b ; ret
0x000000000013105d : leave ; jne 0x13100e ; mov rax, rdi ; ret
0x00000000000be6b0 : leave ; jne 0xbe6a3 ; ret
0x00000000000be760 : leave ; jne 0xbe753 ; ret
0x00000000000bea20 : leave ; jne 0xbea17 ; sub rax, 1 ; ret
0x00000000000bfd20 : leave ; jne 0xbfcfe ; mov rax, r8 ; ret
0x00000000000b97f1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000c9d31 : leave ; mov eax, r9d ; ret
0x00000000000718e6 : leave ; mov edx, r8d ; jmp 0x71901
0x0000000000073d67 : leave ; mov edx, r8d ; jmp 0x73d82
0x000000000009b8fc : leave ; mov esp, 0x8be80011 ; retf
0x00000000000ef153 : leave ; mov r8d, ebx ; mov rdi, r15 ; call 0xebb69
0x000000000003bef2 : leave ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000005a9b8 : leave ; ret
0x00000000000bf9f3 : leave ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000005893e : leave ; xor eax, eax ; ret
0x0000000000123755 : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000123535 : leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000001874d8 : ljmp [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000609c4 : ljmp [rcx] ; ret
0x00000000000faac2 : ljmp [rcx] ; ret 0x6348
0x00000000000ecdbf : ljmp [rcx] ; ret 0x8b48
0x000000000007b383 : ljmp [rcx] ; retf 0xda29
0x00000000000573fb : ljmp [rdi] ; jne 0x573f5 ; pop rbx ; ret
0x0000000000116b9c : lock add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x0000000000190e00 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a20ea : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000011644c : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000011951e : lock dec dword ptr [rax + 1] ; ret
0x0000000000118e98 : lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011a244 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000011fdf0 : lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x000000000012e191 : lock dec dword ptr [rax - 0x7d] ; ret
0x000000000012217f : lock dec dword ptr [rbp - 0x77] ; call 0x2e78ec79
0x0000000000181e80 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000195520 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000139dac : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000ecc3f : lodsb al, byte ptr [rsi] ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001824a4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000154df3 : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; syscall
0x000000000010fad9 : lodsb al, byte ptr [rsi] ; ret 0x8207
0x00000000000eb104 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000000e803d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000000f68df : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3941
0x0000000000142d7f : lodsd eax, dword ptr [rsi] ; and eax, 0x8948ffee ; ret
0x0000000000186010 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a3b99 : lodsd eax, dword ptr [rsi] ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000059582 : lodsd eax, dword ptr [rsi] ; ret
0x000000000005e07f : lodsd eax, dword ptr [rsi] ; ret 0x15
0x0000000000100f67 : loop 0x100f6e ; add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x0000000000116cf2 : loop 0x116cb2 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000011dd7f : loop 0x11dd8f ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011f909 : loop 0x11f90f ; dec dword ptr [rax - 0x7f] ; ret
0x000000000012714c : loop 0x127142 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000130e6d : loop 0x130e6d ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000133aba : loop 0x133ada ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001388d2 : loop 0x1388cc ; lea r8, [rbp - 0x78] ; call 0xe4b98
0x000000000014d252 : loop 0x14d2a3 ; mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000014e110 : loop 0x14e19a ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000159d46 : loop 0x159ccd ; ret 0x7401
0x00000000001600d2 : loop 0x1600da ; or dword ptr [rax], eax ; syscall
0x000000000017061a : loop 0x170615 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170619 : loop 0x170616 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017314a : loop 0x173145 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173149 : loop 0x173146 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000005495d : loop 0x54965 ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x0000000000054efb : loop 0x54f02 ; dec dword ptr [rdi] ; add byte ptr [rcx], cl ; ret 0x8f74
0x00000000000573a0 : loop 0x573a3 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005871d : loop 0x586dd ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000058965 : loop 0x58925 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005e719 : loop 0x5e76b ; mov eax, eax ; ret
0x000000000006693f : loop 0x6696c ; ret 0xc031
0x000000000008772d : loop 0x8778e ; pop r12 ; jmp rax
0x000000000008de04 : loop 0x8de0b ; mov eax, edx ; ret
0x000000000008df04 : loop 0x8df0b ; mov eax, edx ; ret
0x00000000000a21aa : loop 0xa21f2 ; pop rsp ; pop r13 ; ret
0x00000000000a21bf : loop 0xa2207 ; pop rsp ; pop r13 ; ret
0x00000000000aba75 : loop 0xabac7 ; mov eax, eax ; ret
0x00000000000ad81d : loop 0xad855 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000bab6a : loop 0xbab75 ; add byte ptr [rax], al ; ret
0x00000000000bf857 : loop 0xbf843 ; ret
0x00000000000c9a3c : loop 0xc9a43 ; dec dword ptr [rdi] ; add byte ptr [rcx], cl ; ret 0x8f74
0x00000000000e2c4a : loop 0xe2c03 ; adc byte ptr [rax], al ; syscall
0x00000000001185fe : loope 0x118605 ; mov eax, 0xa9 ; syscall
0x0000000000119a48 : loope 0x119a3e ; mov rdx, r9 ; jmp 0x119a7d
0x0000000000124c7b : loope 0x124cd8 ; or al, 0 ; pop rbx ; ret
0x0000000000130e52 : loope 0x130e5f ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000155cef : loope 0x155d40 ; mov edx, ebp ; mov rsi, rbx ; call rax
0x0000000000162cf6 : loope 0x162cff ; sub rdx, rcx ; jmp 0x162d0d
0x000000000017058a : loope 0x170585 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170589 : loope 0x170586 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001730ba : loope 0x1730b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001730b9 : loope 0x1730b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017bbeb : loope 0x17bbf2 ; add byte ptr [rax], al ; ret
0x00000000001873de : loope 0x18740f ; enter -0x73b, 0x77 ; ret
0x000000000018e173 : loope 0x18e1c5 ; lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000019424b : loope 0x194255 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000019bece : loope 0x19bf2d ; ret
0x0000000000038c70 : loope 0x38c79 ; inc dword ptr [rax - 0x76b7bcc8] ; ret
0x0000000000055c5b : loope 0x55cdb ; sbb dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x000000000005940b : loope 0x5945d ; mov dword ptr [rdi], ecx ; ret
0x000000000005943c : loope 0x5948f ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000000594bd : loope 0x59510 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000071120 : loope 0x71126 ; inc dword ptr [rcx - 0xa] ; ret
0x0000000000078aa2 : loope 0x78aa9 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009d5bd : loope 0x9d5d4 ; add al, ch ; retf
0x00000000000cda47 : loope 0xcda99 ; mov edx, ebp ; call rbx
0x00000000000d2cae : loope 0xd2cc3 ; je 0xd2cd4 ; ret
0x00000000000f766e : loope 0xf7673 ; add esi, esi ; ret
0x00000000000f906b : loope 0xf9070 ; add esi, esi ; ret 0xf04
0x00000000000fa6e2 : loope 0xfa6e7 ; add esi, esi ; ret 0xf04
0x00000000000fb858 : loope 0xfb85d ; add esi, esi ; ret 0xf04
0x000000000010259d : loopne 0x102604 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001025f2 : loopne 0x10263c ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000102670 : loopne 0x1026d4 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105d45 : loopne 0x105d58 ; ret
0x000000000010a026 : loopne 0x10a08c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c283 : loopne 0x10c2c5 ; jmp rax
0x000000000010dd90 : loopne 0x10ddd2 ; jmp rax
0x000000000010fdfc : loopne 0x10fdf6 ; ret 0x7504
0x000000000010feab : loopne 0x10feed ; jmp rax
0x00000000001104cf : loopne 0x110515 ; pop rsp ; ret
0x00000000001104bb : loopne 0x11051d ; pop rbp ; pop r12 ; ret
0x0000000000111695 : loopne 0x1116f9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001124f6 : loopne 0x11255b ; pop r12 ; pop r13 ; ret
0x000000000011716d : loopne 0x1171b3 ; pop rsp ; ret
0x000000000011745e : loopne 0x1174c0 ; pop rbp ; pop r12 ; ret
0x0000000000117610 : loopne 0x117672 ; pop rbp ; pop r12 ; ret
0x0000000000117657 : loopne 0x1176b9 ; pop rbp ; pop r12 ; ret
0x00000000001189b2 : loopne 0x1189f8 ; pop rsp ; ret
0x0000000000118cbd : loopne 0x118d1f ; pop rbp ; pop r12 ; ret
0x0000000000119780 : loopne 0x11977a ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1197c1
0x0000000000119960 : loopne 0x119959 ; mov r14, r8 ; mov rdx, r8 ; jmp 0x11999f
0x000000000011a4b7 : loopne 0x11a519 ; pop rbp ; pop r12 ; ret
0x000000000011abf6 : loopne 0x11ac5a ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000011ac7c : loopne 0x11acbf ; or eax, 0x74d28500 ; or al, 0xf7 ; ret 0xfc07
0x000000000011b9f0 : loopne 0x11ba52 ; pop rbp ; pop r12 ; ret
0x000000000011beea : loopne 0x11bf30 ; pop rsp ; ret
0x000000000011c430 : loopne 0x11c490 ; pop r12 ; ret
0x000000000011ccba : loopne 0x11cd1f ; pop r12 ; pop r13 ; jmp rax
0x000000000011cd4a : loopne 0x11cdaf ; pop r12 ; pop r13 ; jmp rax
0x000000000011d933 : loopne 0x11d996 ; pop r12 ; jmp rax
0x000000000011d9e2 : loopne 0x11da47 ; pop r12 ; pop r13 ; jmp rax
0x000000000011d9e9 : loopne 0x11da58 ; nop dword ptr [rax + rax] ; ret
0x000000000011fc8e : loopne 0x11fcf2 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000122110 : loopne 0x12213a ; and rax, rdi ; or rax, rsi ; ret
0x0000000000122ad4 : loopne 0x122adb ; ret
0x0000000000125b82 : loopne 0x125b87 ; ret
0x0000000000125b9a : loopne 0x125ba9 ; movzx eax, ax ; ret
0x0000000000125c12 : loopne 0x125c17 ; ret
0x0000000000125cb2 : loopne 0x125cb7 ; ret
0x0000000000125cca : loopne 0x125ccf ; ret
0x0000000000125d42 : loopne 0x125d47 ; ret
0x0000000000125d5a : loopne 0x125d63 ; movzx eax, ax ; ret
0x0000000000125dd1 : loopne 0x125dd9 ; mov eax, r8d ; ret
0x0000000000125e72 : loopne 0x125e77 ; ret
0x0000000000125f12 : loopne 0x125f17 ; ret
0x0000000000125fb2 : loopne 0x125fb7 ; ret
0x0000000000126052 : loopne 0x126057 ; ret
0x000000000012606a : loopne 0x126075 ; movzx eax, ax ; ret
0x00000000001260e2 : loopne 0x1260e7 ; ret
0x000000000012617d : loopne 0x126182 ; ret
0x0000000000126212 : loopne 0x126217 ; ret
0x000000000012640e : loopne 0x126413 ; ret
0x0000000000126564 : loopne 0x126569 ; ret
0x000000000012657b : loopne 0x12658a ; movzx eax, ax ; ret
0x00000000001265f4 : loopne 0x1265f9 ; ret
0x0000000000126684 : loopne 0x126689 ; ret
0x000000000012669b : loopne 0x1266a0 ; ret
0x0000000000126704 : loopne 0x126709 ; ret
0x000000000012671b : loopne 0x126724 ; movzx eax, ax ; ret
0x0000000000126793 : loopne 0x12679b ; mov eax, r8d ; ret
0x0000000000126824 : loopne 0x126829 ; ret
0x00000000001268b4 : loopne 0x1268b9 ; ret
0x0000000000126944 : loopne 0x126949 ; ret
0x00000000001269d4 : loopne 0x1269d9 ; ret
0x00000000001269eb : loopne 0x1269f6 ; movzx eax, ax ; ret
0x0000000000126a64 : loopne 0x126a69 ; ret
0x0000000000126af1 : loopne 0x126af6 ; ret
0x0000000000126b74 : loopne 0x126b79 ; ret
0x0000000000126d4e : loopne 0x126d53 ; ret
0x0000000000128919 : loopne 0x12897e ; pop r12 ; pop r13 ; ret
0x000000000012a1cc : loopne 0x12a22e ; pop rbp ; pop r12 ; ret
0x000000000012b305 : loopne 0x12b366 ; pop r12 ; ret
0x000000000013004f : loopne 0x130054 ; ret
0x000000000013040c : loopne 0x13045e ; lea edi, [rip - 0x184] ; call rax
0x0000000000130c6f : loopne 0x130c6f ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000131e53 : loopne 0x131eb5 ; pop rbp ; pop r12 ; ret
0x0000000000131e7f : loopne 0x131ec5 ; pop rsp ; ret
0x0000000000131ea7 : loopne 0x131eed ; pop rsp ; ret
0x0000000000132fbe : loopne 0x13301e ; pop r12 ; ret
0x0000000000137fa8 : loopne 0x138008 ; pop r12 ; ret
0x00000000001381ae : loopne 0x138212 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e7a8 : loopne 0x13e7a7 ; add eax, 0x10 ; ret
0x000000000013fadf : loopne 0x13faed ; shr rax, 4 ; and eax, 0x7f ; ret
0x000000000013fae6 : loopne 0x13fb69 ; ret
0x000000000013feb9 : loopne 0x13ff1b ; pop rbp ; pop r12 ; ret
0x000000000013fed5 : loopne 0x13ff37 ; pop rbp ; pop r12 ; ret
0x0000000000143793 : loopne 0x1437f7 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001437b2 : loopne 0x143816 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000143957 : loopne 0x1439bd ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001442ac : loopne 0x1442c5 ; out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000144c79 : loopne 0x144cdc ; pop r12 ; ret
0x000000000014546f : loopne 0x1454d1 ; pop rbp ; pop r12 ; ret
0x000000000014577b : loopne 0x1457de ; pop r12 ; ret
0x0000000000148c2a : loopne 0x148c8e ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014a37b : loopne 0x14a3dc ; pop r12 ; ret
0x000000000014bf19 : loopne 0x14bf5f ; pop rsp ; ret
0x000000000014e523 : loopne 0x14e587 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015091e : loopne 0x150982 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015103f : loopne 0x1510a2 ; pop r12 ; ret
0x00000000001516d1 : loopne 0x151738 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000152233 : loopne 0x152299 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000155e9e : loopne 0x155f01 ; pop r12 ; ret
0x000000000015682b : loopne 0x156834 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001576ff : loopne 0x157762 ; pop r12 ; ret
0x0000000000157806 : loopne 0x15786a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000157a09 : loopne 0x157a6f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000157bc1 : loopne 0x157c28 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000158093 : loopne 0x15810c ; retf 0x8348
0x0000000000158805 : loopne 0x158813 ; cmp edi, 0x1a ; cmovae eax, r10d ; jmp 0x1587ab
0x000000000015ccd9 : loopne 0x15cd1f ; pop rsp ; ret
0x000000000015cd29 : loopne 0x15cd8b ; pop rbp ; pop r12 ; ret
0x000000000015eb43 : loopne 0x15eb8d ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015eb6c : loopne 0x15ebd3 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015f37a : loopne 0x15f3e0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015f3b6 : loopne 0x15f41d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015f749 : loopne 0x15f78f ; pop rsp ; ret
0x000000000015f823 : loopne 0x15f889 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016153a : loopne 0x16159f ; pop r12 ; pop r13 ; ret
0x0000000000161757 : loopne 0x1617ba ; pop r12 ; ret
0x0000000000163d88 : loopne 0x163dce ; pop rsp ; ret
0x00000000001642ac : loopne 0x1642c5 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8b64
0x0000000000169912 : loopne 0x16992a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169911 : loopne 0x16992b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169a62 : loopne 0x169a7a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169a61 : loopne 0x169a7b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169bb2 : loopne 0x169bca ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169bb1 : loopne 0x169bcb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169d02 : loopne 0x169d1a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169d01 : loopne 0x169d1b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169e52 : loopne 0x169e6a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169e51 : loopne 0x169e6b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169fa2 : loopne 0x169fba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169fa1 : loopne 0x169fbb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a0f2 : loopne 0x16a10a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a0f1 : loopne 0x16a10b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a240 : loopne 0x16a258 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a23f : loopne 0x16a259 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a392 : loopne 0x16a3aa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a391 : loopne 0x16a3ab ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a4e2 : loopne 0x16a4fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a4e1 : loopne 0x16a4fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a632 : loopne 0x16a64a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a631 : loopne 0x16a64b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a782 : loopne 0x16a79a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a781 : loopne 0x16a79b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a8d2 : loopne 0x16a8ea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a8d1 : loopne 0x16a8eb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016aa22 : loopne 0x16aa3a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016aa21 : loopne 0x16aa3b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ab72 : loopne 0x16ab8a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ab71 : loopne 0x16ab8b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c2f2 : loopne 0x16c30a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c2f1 : loopne 0x16c30b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c442 : loopne 0x16c45a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c441 : loopne 0x16c45b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c592 : loopne 0x16c5aa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c591 : loopne 0x16c5ab ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c6e2 : loopne 0x16c6fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c6e1 : loopne 0x16c6fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c832 : loopne 0x16c84a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c831 : loopne 0x16c84b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c982 : loopne 0x16c99a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c981 : loopne 0x16c99b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cad2 : loopne 0x16caea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cad1 : loopne 0x16caeb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cc20 : loopne 0x16cc38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cc1f : loopne 0x16cc39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cd72 : loopne 0x16cd8a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cd71 : loopne 0x16cd8b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cec2 : loopne 0x16ceda ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cec1 : loopne 0x16cedb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d012 : loopne 0x16d02a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d011 : loopne 0x16d02b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d162 : loopne 0x16d17a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d161 : loopne 0x16d17b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d2b2 : loopne 0x16d2ca ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d2b1 : loopne 0x16d2cb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d402 : loopne 0x16d41a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d401 : loopne 0x16d41b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d552 : loopne 0x16d56a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d551 : loopne 0x16d56b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000018cf65 : loopne 0x18cfb2 ; mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000018e845 : loopne 0x18e899 ; lea eax, [rdi + rax] ; vzeroupper ; ret
0x000000000019a54d : loopne 0x19a593 ; pop rsp ; ret
0x000000000019a5d0 : loopne 0x19a616 ; pop rsp ; ret
0x000000000019badf : loopne 0x19bb41 ; pop rbp ; pop r12 ; ret
0x0000000000033485 : loopne 0x334ea ; pop r12 ; pop r13 ; ret
0x0000000000033507 : loopne 0x3356c ; pop r12 ; pop r13 ; ret
0x0000000000033d20 : loopne 0x33d70 ; test eax, eax ; je 0x33d2e ; call rax
0x00000000000370b7 : loopne 0x370c6 ; movzx eax, ax ; ret
0x00000000000370f7 : loopne 0x37100 ; movzx eax, ax ; ret
0x0000000000037197 : loopne 0x371a2 ; movzx eax, ax ; ret
0x0000000000037277 : loopne 0x3727c ; ret
0x0000000000037310 : loopne 0x37315 ; ret
0x0000000000037330 : loopne 0x3733f ; movzx eax, ax ; ret
0x00000000000372e7 : loopne 0x3736a ; ret
0x0000000000037370 : loopne 0x37379 ; movzx eax, ax ; ret
0x0000000000037410 : loopne 0x3741b ; movzx eax, ax ; ret
0x0000000000037adc : loopne 0x37b3e ; pop rbp ; pop r12 ; ret
0x0000000000037b7a : loopne 0x37bc0 ; pop rsp ; ret
0x000000000003b7d6 : loopne 0x3b83b ; pop r12 ; pop r13 ; ret
0x00000000000443e4 : loopne 0x44430 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004519b : loopne 0x45182 ; fsub dword ptr [rip + 0x200] ; ret
0x000000000004576d : loopne 0x4578e ; or esi, eax ; movd xmm0, esi ; ret
0x0000000000045899 : loopne 0x458a5 ; ret
0x0000000000045e08 : loopne 0x45e14 ; ret
0x0000000000046ea0 : loopne 0x46ef0 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000047467 : loopne 0x474c9 ; pop rbp ; pop r12 ; ret
0x000000000004747d : loopne 0x474df ; pop rbp ; pop r12 ; ret
0x000000000004a9d8 : loopne 0x4aa1e ; pop rsp ; ret
0x000000000004aab4 : loopne 0x4ab17 ; pop r12 ; ret
0x0000000000055ba9 : loopne 0x55bcd ; or eax, edx ; ret
0x0000000000058cdd : loopne 0x58ce6 ; sub eax, 1 ; ret
0x000000000005acdb : loopne 0x5ac9b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005ea26 : loopne 0x5ea87 ; pop r12 ; ret
0x000000000005eabe : loopne 0x5eb1f ; pop r12 ; ret
0x000000000005eae5 : loopne 0x5eb46 ; pop r12 ; ret
0x000000000005eb02 : loopne 0x5eb63 ; pop r12 ; ret
0x00000000000624b0 : loopne 0x6243d ; ret
0x0000000000065749 : loopne 0x657ac ; pop r12 ; ret
0x0000000000065820 : loopne 0x65881 ; pop r12 ; ret
0x00000000000690af : loopne 0x6909c ; ret 0xffdc
0x000000000007bb9e : loopne 0x7bb35 ; mov r10, rdx ; jmp rax
0x000000000007d0d3 : loopne 0x7d139 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e592 : loopne 0x7e526 ; lea eax, [rsi + rsi*8 - 0x76b30001] ; ret 0x894c
0x000000000007fa33 : loopne 0x7fa3d ; inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000008227e : loopne 0x82215 ; mov r9, rsi ; jmp rax
0x00000000000835e2 : loopne 0x83648 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000083bd2 : loopne 0x83c36 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000843de : loopne 0x84440 ; pop rbp ; pop r12 ; ret
0x0000000000084fc6 : loopne 0x85028 ; pop rbp ; pop r12 ; ret
0x0000000000085b30 : loopne 0x85b36 ; add byte ptr [rax], al ; jmp rax
0x0000000000085ad3 : loopne 0x85b37 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085af9 : loopne 0x85b5d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085b6c : loopne 0x85b72 ; add byte ptr [rax], al ; call rax
0x0000000000085b35 : loopne 0x85b87 ; mov eax, 0xffffffff ; ret
0x0000000000085bb9 : loopne 0x85bc4 ; add byte ptr [rax], al ; lea rsi, [rsp + 8] ; call rax
0x0000000000085c10 : loopne 0x85c16 ; add byte ptr [rax], al ; jmp rax
0x0000000000085d46 : loopne 0x85dab ; pop r12 ; pop r13 ; ret
0x0000000000085dae : loopne 0x85e13 ; pop r12 ; pop r13 ; ret
0x0000000000087486 : loopne 0x874eb ; pop r12 ; pop r13 ; ret
0x00000000000874a5 : loopne 0x8750a ; pop r12 ; pop r13 ; ret
0x0000000000088ab4 : loopne 0x88b1b ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088b96 : loopne 0x88be0 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000088bdb : loopne 0x88c42 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089954 : loopne 0x899b8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008dc63 : loopne 0x8dcc6 ; pop r12 ; ret
0x000000000008e270 : loopne 0x8e2d6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008e923 : loopne 0x8e986 ; pop r12 ; ret
0x000000000008ef9e : loopne 0x8f002 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f177 : loopne 0x8f1de ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f1d3 : loopne 0x8f235 ; pop rbp ; pop r12 ; ret
0x000000000008fc39 : loopne 0x8fc9f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009067a : loopne 0x906dc ; pop rbp ; pop r12 ; ret
0x000000000009108a : loopne 0x9108f ; ret
0x000000000009109a : loopne 0x9109f ; ret
0x00000000000912f6 : loopne 0x91358 ; pop rbp ; pop r12 ; ret
0x0000000000091328 : loopne 0x9136e ; pop rsp ; ret
0x0000000000091337 : loopne 0x9137d ; pop rsp ; ret
0x00000000000913bd : loopne 0x91421 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000913d7 : loopne 0x9143c ; pop r12 ; pop r14 ; ret
0x000000000009307e : loopne 0x930e0 ; pop rbp ; pop r12 ; ret
0x00000000000979bc : loopne 0x979d1 ; cmp eax, 4 ; je 0x979cb ; ret
0x0000000000097b4c : loopne 0x97b5d ; pop rbx ; ret
0x0000000000098628 : loopne 0x9868c ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009865c : loopne 0x986c1 ; pop r12 ; pop r13 ; ret
0x00000000000989f7 : loopne 0x98a3d ; pop rsp ; ret
0x00000000000989e8 : loopne 0x98a4a ; pop rbp ; pop r12 ; ret
0x0000000000098e57 : loopne 0x98ebb ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009d08f : loopne 0x9d0f1 ; pop rbp ; pop r12 ; ret
0x000000000009f3e2 : loopne 0x9f3eb ; cmovne rax, rdx ; ret
0x00000000000a06c8 : loopne 0xa070e ; pop rsp ; ret
0x00000000000a08fb : loopne 0xa0941 ; pop rsp ; ret
0x00000000000a20b3 : loopne 0xa211a ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a357a : loopne 0xa35c2 ; pop rsp ; pop r13 ; ret
0x00000000000a3563 : loopne 0xa35c8 ; pop r12 ; pop r13 ; ret
0x00000000000a3c26 : loopne 0xa3c87 ; pop r12 ; ret
0x00000000000a3c3d : loopne 0xa3c9e ; pop r12 ; ret
0x00000000000a4fef : loopne 0xa5035 ; pop rsp ; ret
0x00000000000a4fdb : loopne 0xa503d ; pop rbp ; pop r12 ; ret
0x00000000000ab857 : loopne 0xab8b8 ; pop r12 ; ret
0x00000000000ab86d : loopne 0xab8ce ; pop r12 ; ret
0x00000000000ab91e : loopne 0xab964 ; pop rsp ; ret
0x00000000000abf53 : loopne 0xabfb7 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abfcf : loopne 0xac017 ; pop rsp ; pop r13 ; ret
0x00000000000ac055 : loopne 0xac0bc ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bac6c : loopne 0xbac76 ; add byte ptr [rax], al ; ret
0x00000000000bf9b8 : loopne 0xbfa1b ; pop r12 ; ret
0x00000000000bfaab : loopne 0xbfb0d ; pop rbp ; pop r12 ; ret
0x00000000000bfb98 : loopne 0xbfbff ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d320f : loopne 0xd3255 ; pop rsp ; ret
0x00000000000d3243 : loopne 0xd3289 ; pop rsp ; ret
0x00000000000d3255 : loopne 0xd329b ; pop rsp ; ret
0x00000000000d4260 : loopne 0xd426a ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000d4d97 : loopne 0xd4de1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d4d7e : loopne 0xd4de5 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e0666 : loopne 0xe06c8 ; pop rbp ; pop r12 ; ret
0x00000000000e06c7 : loopne 0xe070d ; pop rsp ; ret
0x00000000000e0759 : loopne 0xe07c0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e0827 : loopne 0xe0871 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e0a2a : loopne 0xe0a31 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e0abe : loopne 0xe0ac5 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e0bc7 : loopne 0xe0c2b ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0d47 : loopne 0xe0dab ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0e6f : loopne 0xe0ed3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e2176 : loopne 0xe21d8 ; pop rbp ; pop r12 ; ret
0x00000000000f0fb9 : loopne 0xf101d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f770f : loopne 0xf7763 ; mov ecx, ebp ; call 0xf3956
0x00000000001503f0 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000122f05 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x000000000009c194 : mov ah, 0x11 ; add al, ch ; push rsp ; ret
0x000000000009c1a4 : mov ah, 0x11 ; add al, ch ; ret
0x000000000009f6c5 : mov ah, 0x14 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010c9c2 : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000012ba08 : mov ah, 0x99 ; out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000130c28 : mov ah, 0xdc ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000a36a8 : mov ah, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x000000000011a590 : mov ah, 0xf6 ; inc dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x77], 5 ; retf
0x00000000000a386f : mov ah, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000d8b1b : mov al, 0 ; add byte ptr [rax], al ; call 0x255a6
0x0000000000122c95 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014bdb1 : mov al, 0x23 ; add byte ptr [rax], al ; pop rbp ; jmp rcx
0x0000000000119785 : mov al, 0x48 ; mov edx, eax ; jmp 0x1197bc
0x00000000000cadf0 : mov al, 0x89 ; ret 0xff25
0x00000000000a3829 : mov al, 0xc ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000018b7af : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000004a4f0 : mov al, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000a34ed : mov al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000162d45 : mov al, 1 ; add byte ptr [rax], al ; jmp rax
0x0000000000047242 : mov al, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000011df41 : mov al, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000000bac9c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000ba89c : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000110ce5 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b6bcb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b6bf9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b6c7d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000017dfa0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b6ba5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000156a48 : mov al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000b6bb5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000008016f : mov bh, 0x16 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000171351 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000018c631 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000036e2a : mov bh, 0x44 ; mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x000000000004b2de : mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000e1115 : mov bh, 0x48 ; adc byte ptr [rax + 1], cl ; retf 0x8b49
0x00000000000fff68 : mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000000db4eb : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x00000000001940e8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000000d5484 : mov bh, 0x4c ; dec byte ptr [rbp - 0x77] ; retf
0x000000000004b2da : mov bh, 0x4d ; add cl, byte ptr [rdi] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000abbb2 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc77 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000008c9cf : mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000008b9d5 : mov bh, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000370ba : mov bh, 0xc0 ; ret
0x0000000000132f0c : mov bh, 0xf6 ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000125b96 : mov bh, 4 ; js 0x125b26 ; loopne 0x125bad ; movzx eax, ax ; ret
0x0000000000125cc6 : mov bh, 4 ; js 0x125c53 ; loopne 0x125cd3 ; ret
0x0000000000125d56 : mov bh, 4 ; js 0x125ce6 ; loopne 0x125d67 ; movzx eax, ax ; ret
0x0000000000126066 : mov bh, 4 ; js 0x125ff6 ; loopne 0x126079 ; movzx eax, ax ; ret
0x0000000000126577 : mov bh, 4 ; js 0x126507 ; loopne 0x12658e ; movzx eax, ax ; ret
0x0000000000126697 : mov bh, 4 ; js 0x126624 ; loopne 0x1266a4 ; ret
0x0000000000126717 : mov bh, 4 ; js 0x1266a7 ; loopne 0x126728 ; movzx eax, ax ; ret
0x00000000001269e7 : mov bh, 4 ; js 0x126977 ; loopne 0x1269fa ; movzx eax, ax ; ret
0x00000000000370b3 : mov bh, 4 ; js 0x37043 ; loopne 0x370ca ; movzx eax, ax ; ret
0x00000000000370f3 : mov bh, 4 ; js 0x37083 ; loopne 0x37104 ; movzx eax, ax ; ret
0x0000000000037193 : mov bh, 4 ; js 0x37123 ; loopne 0x371a6 ; movzx eax, ax ; ret
0x0000000000037273 : mov bh, 4 ; js 0x37200 ; loopne 0x37280 ; ret
0x000000000003730c : mov bh, 4 ; js 0x37299 ; loopne 0x37319 ; ret
0x000000000003732c : mov bh, 4 ; js 0x372bc ; loopne 0x37343 ; movzx eax, ax ; ret
0x000000000003736c : mov bh, 4 ; js 0x372fc ; loopne 0x3737d ; movzx eax, ax ; ret
0x000000000003740c : mov bh, 4 ; js 0x3739c ; loopne 0x3741f ; movzx eax, ax ; ret
0x00000000000d5632 : mov bh, 5 ; fadd dword ptr [rdi - 0x76baffef] ; ret 0x8341
0x00000000000d9f1c : mov bh, 5 ; insb byte ptr [rdi], dx ; jl 0xd9f36 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab2d : mov bh, 5 ; insd dword ptr [rdi], dx ; jo 0xdab47 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f4c : mov bh, 5 ; jl 0xd9f66 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab5d : mov bh, 5 ; jo 0xdab77 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab0d : mov bh, 5 ; mov dword ptr [rax + 0xd], esi ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9edc : mov bh, 5 ; movsb byte ptr [rdi], byte ptr [rsi] ; jl 0xd9ef6 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab9d : mov bh, 5 ; or esi, dword ptr [rax + 0xd] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab3d : mov bh, 5 ; pop rdi ; jo 0xdab57 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f2c : mov bh, 5 ; pop rsi ; jl 0xd9f46 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f3c : mov bh, 5 ; push rax ; jl 0xd9f56 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab4d : mov bh, 5 ; push rcx ; jo 0xdab67 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab8d : mov bh, 5 ; sbb dword ptr [rax + 0xd], esi ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000daafd : mov bh, 5 ; xchg eax, edi ; jo 0xdab17 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9eec : mov bh, 5 ; xchg eax, esi ; jl 0xd9f06 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000010f9c5 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a1617 : mov bh, byte ptr [rbp + 0x11] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000ede58 : mov bh, byte ptr [rcx] ; ret 0x840f
0x0000000000111182 : mov bl, 0 ; add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000122fc8 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x00000000001959de : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009c21c : mov bl, 0x11 ; add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x00000000000f8b88 : mov bl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xf66
0x0000000000146d19 : mov bl, 0x8a ; or al, byte ptr [rax] ; syscall
0x00000000000ce919 : mov bl, 0xab ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a3808 : mov bl, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x0000000000154b79 : mov bl, 7 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000034b6b : mov bl, ch ; retf 0x8348
0x0000000000142431 : mov byte ptr [r10], 0 ; ret
0x000000000013f99c : mov byte ptr [r8 + 2], 0 ; ret
0x00000000000a1703 : mov byte ptr [r8 + rax], dl ; call qword ptr [rax]
0x0000000000029d62 : mov byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000038344 : mov byte ptr [r8 - 0x7d], r9b ; ret 0x481a
0x000000000013f99d : mov byte ptr [rax + 2], 0 ; ret
0x00000000000abc45 : mov byte ptr [rax + 2], dl ; ret
0x00000000000abc63 : mov byte ptr [rax + 4], dl ; ret
0x00000000000abc94 : mov byte ptr [rax + 6], dl ; ret
0x0000000000038004 : mov byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x00000000000a1704 : mov byte ptr [rax + rax], dl ; call qword ptr [rax]
0x0000000000055c5f : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000029d63 : mov byte ptr [rax - 0x7d], cl ; ret
0x0000000000038345 : mov byte ptr [rax - 0x7d], cl ; ret 0x481a
0x00000000000ab8b8 : mov byte ptr [rax], 0 ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000abc28 : mov byte ptr [rax], 0 ; ret
0x000000000012b255 : mov byte ptr [rax], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b23a : mov byte ptr [rax], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fae3b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x000000000011fd2f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011f6dc : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000058158 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e057 : mov byte ptr [rax], bh ; mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000894a5 : mov byte ptr [rax], bh ; mov eax, r9d ; ret
0x0000000000066acf : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000066ad0 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b97f2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000894a4 : mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x000000000006e278 : mov byte ptr [rbp - 0x620], 0x70 ; jmp 0x6ad82
0x00000000001248ca : mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x000000000007e5aa : mov byte ptr [rbp - 0x960], cl ; call rax
0x000000000007e5a9 : mov byte ptr [rbp - 0x960], r9b ; call rax
0x000000000017bc63 : mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc82 : mov byte ptr [rcx + 4], dl ; ret
0x000000000017bcc3 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000ab7f8 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a242a : mov byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x000000000010cf45 : mov byte ptr [rcx], 0xe8 ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000eb54a : mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017bc40 : mov byte ptr [rcx], dl ; ret
0x00000000000be29a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bc64b : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000bae2b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000be2ab : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb7e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000ba138 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000be2b0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2d2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2f0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be310 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb85e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000ba18e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bc6d1 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000bae81 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000be331 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be336 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be352 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be372 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be392 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bc753 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000baf03 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000be3b3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb8e0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba210 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000be3b8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3da : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3f8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be418 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be434 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be454 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be474 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be494 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bb005 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000be4b5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be4ba : mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000103701 : mov byte ptr [rdi + 0x38], al ; mov dword ptr [rsi], edx ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000be50a : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000018db35 : mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x000000000018cf88 : mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x00000000000be1e0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1fe : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be21e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be240 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be260 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be280 : mov byte ptr [rdi + 0xf], ch ; ret
0x000000000018ceb5 : mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000be116 : mov byte ptr [rdi + 1], ch ; ret
0x000000000013f535 : mov byte ptr [rdi + 1], dh ; ret
0x000000000013f534 : mov byte ptr [rdi + 1], sil ; ret
0x000000000018c646 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000abd0d : mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be128 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000bb696 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000ba056 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc4d9 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000abb80 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000be139 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be13e : mov byte ptr [rdi + 3], ch ; ret
0x00000000000abd3b : mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be156 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000bb6b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000ba072 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000bc507 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000abb9e : mov byte ptr [rdi + 4], dl ; ret
0x00000000000be167 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be16c : mov byte ptr [rdi + 5], ch ; ret
0x00000000000abd74 : mov byte ptr [rdi + 6], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be17e : mov byte ptr [rdi + 6], ch ; ret
0x00000000000abbd7 : mov byte ptr [rdi + 6], dl ; ret
0x000000000014e116 : mov byte ptr [rdi + 7], al ; ret
0x00000000000be19c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000ef370 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000ef325 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000ef2f4 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ef3a0 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000ef3b0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000ef3c5 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000ef30d : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ef330 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000be1a8 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000ba0b3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000bc559 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000bada9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000be1b9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be1be : mov byte ptr [rdi + 9], ch ; ret
0x000000000018cee2 : mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x000000000018cee3 : mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000013f6fe : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000016af3b : mov byte ptr [rdi - 1], dl ; ret
0x00000000000abce0 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018e041 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x000000000018c5b1 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ef365 : mov byte ptr [rdi], 0x5b ; ret
0x00000000000ef38e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000be102 : mov byte ptr [rdi], ch ; ret
0x00000000000beddf : mov byte ptr [rdi], cl ; ret
0x000000000018f109 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000abb51 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000bb670 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000ba030 : mov byte ptr [rdi], dh ; ret
0x00000000000bc4b2 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000018e793 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x000000000018ceb3 : mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000bad22 : mov byte ptr [rdi], dl ; ret
0x000000000018da63 : mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000be112 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000abb50 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b997a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000017dfc9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b6bce : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000017dff7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b6bfc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b9910 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b6c80 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000137f1a : mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x0000000000142432 : mov byte ptr [rdx], 0 ; ret
0x000000000011de8d : mov byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000017dfa2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000910bf : mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x00000000000b6ba7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000358b3 : mov byte ptr [rip + 0x1b6f24], dl ; ret
0x0000000000137c3e : mov byte ptr [rsi + 5], dl ; mov rax, rsi ; pop rbx ; ret
0x00000000000a45d0 : mov byte ptr [rsi + rdx + 1], al ; jne 0xa45c6 ; ret
0x00000000000a45cd : mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jne 0xa45c9 ; ret
0x000000000011a086 : mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000011a108 : mov byte ptr [rsi - 1], 0 ; ret
0x000000000002d935 : mov byte ptr [rsi], cl ; add al, 0 ; add bh, dh ; ret 0xf800
0x00000000000bf981 : mov byte ptr [rsp + rbx*8 - 0x3d], dh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001189ac : mov byte ptr [rsp], 0 ; mov rax, r12 ; pop r12 ; ret
0x000000000007eb24 : mov ch, 0 ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x0000000000142430 : mov ch, 0x41 ; mov byte ptr [rdx], 0 ; ret
0x000000000007e032 : mov ch, 0x4c ; mov edi, ebp ; call 0x8a276
0x0000000000143f54 : mov ch, 0xa ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000a370f : mov ch, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000011dc17 : mov ch, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000191976 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000027f92 : mov ch, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002debd : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000102f1e : mov ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0x8c0f
0x0000000000122d55 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x000000000014564f : mov cl, 0x15 ; ret
0x0000000000129568 : mov cl, 0x15 ; ret 0xc55
0x0000000000128944 : mov cl, 0x15 ; ret 0xc60
0x000000000011b088 : mov cl, 0x15 ; ret 0xd34
0x000000000014f958 : mov cl, 0x15 ; retf 0xa00
0x000000000008718f : mov cl, 0x35 ; retf
0x000000000019a1a7 : mov cl, 0x45 ; xor edx, edx ; jmp 0x19a17d
0x00000000001493b0 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000019c4ae : mov cl, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000162754 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000005fb3c : mov cl, 0xeb ; retf 0x4c90
0x00000000000448eb : mov cl, 3 ; add byte ptr [rax], al ; add rdx, rcx ; jmp 0x44907
0x0000000000035668 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000d9afa : mov cl, byte ptr [rax + 1] ; ret 0x8d48
0x000000000012628b : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x1262a0 ; ret
0x00000000001262f4 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x126308 ; ret
0x0000000000126bdb : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x126bf0 ; ret
0x0000000000126c38 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x126c50 ; ret
0x00000000000b1fc5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000034b0c : mov cl, byte ptr [rcx + 1] ; sar byte ptr [rsi], 1 ; jmp r8
0x00000000001017ec : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0x0000000000109061 : mov cl, byte ptr [rcx + rcx*4 - 0x11] ; call 0x25356
0x00000000001513b4 : mov cl, byte ptr [rcx] ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000000ac1c4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000188314 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000105828 : mov cl, byte ptr [rsi] ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000193034 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000d2cab : mov cl, dl ; and cl, 0xf ; je 0xd2cd7 ; ret
0x000000000012ed7a : mov cs, word ptr [rax - 0x3f] ; clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000000f371a : mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001264dd : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x1264f8 ; ret
0x0000000000126e0d : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x126e28 ; ret
0x00000000000fca10 : mov cs, word ptr [rcx - 0x77] ; std ; add rdx, rsi ; jmp rdx
0x0000000000188dde : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000ba050 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000094ce1 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008e704 : mov dh, 0 ; pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x00000000000910e7 : mov dh, 0 ; ret
0x00000000000e2a25 : mov dh, 0x10 ; add al, ch ; ret
0x0000000000044369 : mov dh, 0x11 ; test dl, dl ; jne 0x4434e ; ret
0x00000000000f35dd : mov dh, 0x14 ; adc al, 0xf6 ; ret 0x7580
0x00000000000f42b1 : mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000f3650 : mov dh, 0x14 ; cmp ch, cl ; ret
0x00000000001713c1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018da61 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000afa75 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000006e6d9 : mov dh, 0x30 ; jmp 0x6b1a6
0x00000000000f55ca : mov dh, 0x40 ; or al, byte ptr [rcx - 0x77] ; retf 0xe8c0
0x00000000000e9d7b : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000129d40 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x000000000003b291 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e9d91 : mov dh, 0x42 ; add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xe901
0x00000000000ed491 : mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ee682 : mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000005e4b2 : mov dh, 0x43 ; add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x000000000003b243 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ee4c8 : mov dh, 0x43 ; add dword ptr [rcx - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000ed36e : mov dh, 0x43 ; add dword ptr [rcx - 0x7d], eax ; call 0xffffffffc3921b82
0x000000000019c641 : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006979e : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000066f52 : mov dh, 0x45 ; add dword ptr [rax - 0x7d], ecx ; ret 0xbe02
0x0000000000077634 : mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000001955b1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000001955a1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000195571 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000195591 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000195581 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000002d357 : mov dh, 0x48 ; dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000162bdf : mov dh, 0x4a ; add al, 0x89 ; retf 0xeac0
0x000000000004c019 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a71c6 : mov dh, 0x4d ; add byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000000f6d47 : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000013f8a1 : mov dh, 0x51 ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0xc639
0x000000000013f802 : mov dh, 0x52 ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0x8041
0x000000000013f81a : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000003b261 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000064491 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7401
0x0000000000062499 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf01
0x0000000000084261 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000646ab : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf40
0x00000000000abbd3 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc90 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abc5f : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb9a : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc41 : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb7c : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000187286 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ee176 : mov dh, 0x55 ; add bh, byte ptr [rcx] ; retf
0x00000000000eed6c : mov dh, 0x55 ; add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x0000000000124da2 : mov dh, 0x55 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001955b5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000001955a5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000195575 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000007de8a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000195585 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000faa7a : mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x00000000000fb2ca : mov dh, 0x58 ; cmp dh, dh ; ret
0x00000000000608a8 : mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f205 : mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000057756 : mov dh, 0x5c ; sbb dword ptr [rax], eax ; syscall
0x000000000006b1f6 : mov dh, 0x6b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d801b : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fc976 : mov dh, 0x89 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000134f76 : mov dh, 0x9d ; or eax, dword ptr [rax] ; syscall
0x000000000013a77a : mov dh, 0xc ; and al, 0x88 ; or dh, dh ; ret 0xf02
0x00000000000efae1 : mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000043aa0 : mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x000000000002833b : mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x0000000000151077 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015ada0 : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000112e36 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000014d3c5 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1274 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000e80af : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x0000000000065f6c : mov dh, 0xc0 ; neg eax ; pop rbp ; ret
0x0000000000027b1d : mov dh, 0xc0 ; neg eax ; ret
0x000000000014cfee : mov dh, 0xc0 ; pop r12 ; ret
0x000000000014be94 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000009116e : mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000014d35b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000046f40 : mov dh, 0xc0 ; ret
0x00000000000bf321 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000142821 : mov dh, 0xc3 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093f84 : mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001974fe : mov dh, 0xc8 ; add rdx, r10 ; jmp rdx
0x00000000000afa9b : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000beddd : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000ad571 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000188324 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000151832 : mov dh, 0xe2 ; or dword ptr [rax], eax ; syscall
0x0000000000149f77 : mov dh, 0xed ; dec dword ptr [rax - 0x77] ; ret
0x0000000000132f29 : mov dh, 0xf6 ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x000000000015b017 : mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000029ec1 : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f4012 : mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000edf08 : mov dh, 4 ; adc byte ptr [rcx], bh ; retf
0x0000000000188321 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000afa72 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ad574 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000001878d4 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000000fc8c7 : mov dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000001118b9 : mov dl, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000122f98 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000103225 : mov dl, 0x39 ; retf
0x00000000000e7966 : mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000117654 : mov dl, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010095f : mov dl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000014b6ad : mov dl, 0x8b ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000026a92 : mov dl, 0x95 ; sbb al, 0 ; ret
0x00000000000256fa : mov dl, 0xa7 ; sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000011a243 : mov dl, 0xf0 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001262a0 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000034a1a : mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x00000000001262c8 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000ed291 : mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fc1b2 : mov dl, byte ptr [rcx - 0x76b70001] ; ret
0x00000000000bad43 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000bad62 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bada3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000016afc0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bc4b0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000bad20 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000be110 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000007debb : mov dl, cl ; sbb al, 0 ; add dh, dh ; ret 0xf40
0x000000000004db6a : mov dl, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000983e3 : mov dword ptr [r11 + 0x14], 0 ; ret
0x000000000004ae03 : mov dword ptr [r11], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000139198 : mov dword ptr [r15], 0 ; call 0x115bf9
0x0000000000153130 : mov dword ptr [r8 + 0x48], eax ; mov eax, 1 ; ret
0x000000000015318d : mov dword ptr [r8 + 0x54], eax ; mov eax, 1 ; ret
0x000000000015315d : mov dword ptr [r8 + 0x58], eax ; mov eax, 1 ; ret
0x000000000013f821 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000013f8e8 : mov dword ptr [r8], r11d ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000134af6 : mov dword ptr [r8], r9d ; add rsp, 0x18 ; ret
0x00000000000e2a00 : mov dword ptr [r8], r9d ; add rsp, 8 ; ret
0x00000000000ab6fe : mov dword ptr [r9 + rdi - 4], r10d ; jmp 0xa7942
0x000000000019302a : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000193015 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000e22a8 : mov dword ptr [r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x0000000000089efd : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008a6cc : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000098b17 : mov dword ptr [rax + 0x20], edx ; add rsp, 8 ; ret
0x000000000008fe80 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000894a1 : mov dword ptr [rax + 0x28], edx ; mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x0000000000089f01 : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000089f3f : mov dword ptr [rax + 0x40], edx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008affd : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000153131 : mov dword ptr [rax + 0x48], eax ; mov eax, 1 ; ret
0x000000000015318e : mov dword ptr [rax + 0x54], eax ; mov eax, 1 ; ret
0x000000000015315e : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x00000000000dab0f : mov dword ptr [rax + 0xd], esi ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000abc7c : mov dword ptr [rax + 4], edx ; ret
0x0000000000095935 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000f27e3 : mov dword ptr [rax + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015b031 : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000cd5f2 : mov dword ptr [rax], 0x14c0000 ; ret 0x2de9
0x00000000000e60f8 : mov dword ptr [rax], 0x16 ; jmp 0xe60ca
0x000000000011c9f8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000d3358 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000016417c : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000044608 : mov dword ptr [rax], 0x2a ; mov rax, r11 ; ret
0x0000000000085934 : mov dword ptr [rax], 0x89480000 ; ret
0x000000000009b29b : mov dword ptr [rax], 0xc ; mov rax, r8 ; ret
0x000000000011c9b1 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x00000000000a1b3c : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000011759c : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x0000000000120228 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000d21d3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000110cb5 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001698a2 : mov dword ptr [rax], ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000006eca3 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f8e9 : mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000134af7 : mov dword ptr [rax], ecx ; add rsp, 0x18 ; ret
0x00000000000e2a01 : mov dword ptr [rax], ecx ; add rsp, 8 ; ret
0x000000000008862e : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000abc50 : mov dword ptr [rax], ecx ; ret
0x0000000000119f85 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000101d6f : mov dword ptr [rax], edi ; mov rax, r8 ; ret
0x000000000009d2b0 : mov dword ptr [rax], edi ; ret
0x00000000001221d7 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013f5fd : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000004afad : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000013f822 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000036d48 : mov dword ptr [rax], edx ; ret
0x000000000008afc8 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000abc31 : mov dword ptr [rax], esi ; ret
0x00000000000f5310 : mov dword ptr [rbp + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5248 : mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f530f : mov dword ptr [rbp + 0x30], r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8996 : mov dword ptr [rbp - 0x38], eax ; xor eax, eax ; call 0x25497
0x00000000000735aa : mov dword ptr [rbp - 0x4d0], edx ; jmp 0x6f7fe
0x0000000000079bdf : mov dword ptr [rbp - 0x500], esi ; jmp rax
0x0000000000119783 : mov dword ptr [rbp - 0x50], eax ; mov rdx, rax ; jmp 0x1197be
0x000000000007a6bc : mov dword ptr [rbp - 0x538], edx ; call 0x76938
0x0000000000076725 : mov dword ptr [rbp - 0x598], eax ; jmp 0x72949
0x000000000006e1af : mov dword ptr [rbp - 0x5a0], ecx ; jmp 0x6acb8
0x000000000012f470 : mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm2 ; call rcx
0x000000000012f618 : mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm3 ; call r9
0x0000000000124700 : mov dword ptr [rbp - 0x830], eax ; mov eax, r14d ; syscall
0x00000000000f88f9 : mov dword ptr [rbp - 0x88], eax ; call 0x253a8
0x00000000000f88f8 : mov dword ptr [rbp - 0x88], r8d ; call 0x253a9
0x0000000000077ad2 : mov dword ptr [rbp - 0x948], ebx ; call rax
0x0000000000077ad1 : mov dword ptr [rbp - 0x948], r11d ; call rax
0x000000000012deeb : mov dword ptr [rbp - 0xb8], ebx ; call 0x12a1e8
0x000000000012deea : mov dword ptr [rbp - 0xb8], r11d ; call 0x12a1e9
0x00000000000604e0 : mov dword ptr [rbp - 0xe8], eax ; call rax
0x00000000000a5179 : mov dword ptr [rbp], 0 ; jmp 0xa5155
0x00000000001157fe : mov dword ptr [rbp], 2 ; call 0x111ab9
0x000000000013d5e2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d5e1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033327 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000162e1a : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012abd3 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000983e4 : mov dword ptr [rbx + 0x14], 0 ; ret
0x000000000015ab86 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000162dd2 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012ac23 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014d048 : mov dword ptr [rbx + 0x20], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001026cf : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008fe99 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000843e4 : mov dword ptr [rbx + 0x34], 3 ; jmp 0x843c0
0x00000000001209dd : mov dword ptr [rbx + 0x38], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004603f : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000004601c : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000008aeee : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000096608 : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000092f1e : mov dword ptr [rbx + 0x70], 0xffffffff ; pop rbx ; ret
0x0000000000089f9a : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008a59e : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f643 : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f76b : mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000332f7 : mov dword ptr [rbx + 8], eax ; cmp eax, -3 ; je 0x33321 ; pop rbx ; ret
0x000000000012ab83 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011c9e6 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000095002 : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000159747 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x15971b
0x0000000000163305 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a1b95 : mov dword ptr [rbx], eax ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000a02ed : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001564d6 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000011c98c : mov dword ptr [rbx], eax ; pop rbx ; setne al ; movzx eax, al ; ret
0x0000000000115399 : mov dword ptr [rbx], ebp ; mov eax, 0xffffffff ; jmp 0x115375
0x0000000000063fe6 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004ae04 : mov dword ptr [rbx], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a6d1 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000a168c : mov dword ptr [rbx], edi ; call rcx
0x00000000000bfef3 : mov dword ptr [rbx], edx ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000066acd : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eca1 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a5c7 : mov dword ptr [rbx], edx ; mov rdi, qword ptr [rbp + 8] ; call rax
0x0000000000163fc8 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000a1763 : mov dword ptr [rbx], esi ; call rcx
0x0000000000085d06 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000989e4 : mov dword ptr [rbx], esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000889b3 : mov dword ptr [rbx], esp ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000144cdc : mov dword ptr [rbx], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000144cdb : mov dword ptr [rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e5ba : mov dword ptr [rcx + 0x3a8], edi ; mov rsp, rdx ; ret
0x000000000015c1bb : mov dword ptr [rcx + 0x55], 0xe8e98949 ; retf 0xfff8
0x000000000017bca2 : mov dword ptr [rcx + 3], edx ; ret
0x000000000017bc93 : mov dword ptr [rcx + 4], edx ; ret
0x000000000017bd04 : mov dword ptr [rcx + 5], edx ; ret
0x000000000017bd14 : mov dword ptr [rcx + 6], edx ; ret
0x000000000017bce3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000017bcd4 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000abb34 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x000000000005893c : mov dword ptr [rcx + rcx*8], eax ; xor eax, eax ; ret
0x00000000000ab6ff : mov dword ptr [rcx + rdi - 4], edx ; jmp 0xa7941
0x000000000009c76e : mov dword ptr [rcx - 0x78], 0x29481004 ; ret 0x3948
0x00000000000abaf8 : mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x000000000019302b : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000193016 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000193005 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000137ef2 : mov dword ptr [rcx], 0x83480288 ; ret 0xf01
0x00000000000eb0ff : mov dword ptr [rcx], 0xac75c084 ; xor eax, eax ; ret
0x00000000000466fe : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000089167 : mov dword ptr [rcx], eax ; ret
0x000000000008dada : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000e22a9 : mov dword ptr [rcx], ebx ; mov rax, r8 ; pop rbx ; ret
0x000000000013f8ed : mov dword ptr [rcx], ecx ; ret
0x000000000013f8cb : mov dword ptr [rcx], edi ; ret
0x000000000017bc61 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc80 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000017bcc1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017bca0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017bce1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017bcf1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017bd01 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd11 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd21 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd31 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017bc90 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017bcd1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013f825 : mov dword ptr [rcx], edx ; ret
0x00000000001103b6 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000bb7fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc66d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bb83b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc6ab : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000bb8bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000bc72d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba18b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bae7e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000ba20d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000595cf : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000be2cd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be30b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be38d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baf00 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000ba250 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba270 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba231 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000011039e : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000116f6c : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000bb923 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000bc793 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000ba253 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000be3f3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000015a76b : mov dword ptr [rdi + 0x18], eax ; mov eax, r8d ; ret
0x0000000000094a67 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009049f : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000bb905 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000bc775 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000bb943 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000bc7b3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000ba235 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000be3d5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be413 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000015a82d : mov dword ptr [rdi + 0x18], edx ; mov eax, r8d ; ret
0x000000000015a6f5 : mov dword ptr [rdi + 0x18], esi ; mov eax, r8d ; ret
0x000000000015a72d : mov dword ptr [rdi + 0x18], esi ; mov rax, r8 ; ret
0x000000000015affd : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000000d434b : mov dword ptr [rdi + 0x20], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015a8fa : mov dword ptr [rdi + 0x28], edx ; movups xmmword ptr [rdi + 0x18], xmm0 ; ret
0x0000000000094a98 : mov dword ptr [rdi + 0x48], eax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013e7ce : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000bb87d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000bc6ed : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000ba1ad : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000be34d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb81b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bc68b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bb89d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000bc70d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000ba16b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000be2eb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be36d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000171205 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171048 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000001712e8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000171195 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170fd8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb6e7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000bc537 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x0000000000171125 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170f68 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba097 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000be197 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000abd54 : mov dword ptr [rdi + 4], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000004b4f9 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; ret
0x00000000000bb6c9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000bc519 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x0000000000170ef8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000abbb7 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000be179 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000010fa04 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000bb77b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bc5db : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000170e88 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0fb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000be23b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb79b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000bc5fb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000170e18 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba10b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000be25b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb739 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bc599 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bb7bb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000bc61b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x0000000000170da8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0d9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000be1f9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be27b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000005ae56 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000094a6b : mov dword ptr [rdi + 8], eax ; ret
0x0000000000059558 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000bc57b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bb759 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bc5b9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bb71b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000058b68 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000910e3 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000ba0cb : mov dword ptr [rdi + 8], edx ; ret
0x00000000000be1db : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be219 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000001169d6 : mov dword ptr [rdi + 8], esi ; ret
0x000000000018da8d : mov dword ptr [rdi + r8 - 2], edx ; vzeroupper ; ret
0x000000000018daa9 : mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000018da8e : mov dword ptr [rdi + rax - 2], edx ; vzeroupper ; ret
0x000000000018daaa : mov dword ptr [rdi + rax - 4], edx ; vzeroupper ; ret
0x000000000018dacc : mov dword ptr [rdi + rax - 8], edx ; vzeroupper ; ret
0x00000000000bf22f : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000bee09 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000018c668 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000bf227 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000018f129 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000bedf9 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000018c67c : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x00000000000bf21f : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bedeb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000016ac85 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016acc3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000594bf : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000016b00c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170858 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b1ec : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001707d8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b3dc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170758 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b5ad : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001706c9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b7ad : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170639 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b9ad : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001705a9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000bb040 : mov dword ptr [rdi - 1], edx ; ret
0x000000000016b38d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000016b1a5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000016b389 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000016b769 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ae3f : mov dword ptr [rdi - 4], edx ; ret
0x000000000016b766 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b966 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016bb66 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000005943e : mov dword ptr [rdi - 8], ecx ; ret
0x000000000016acc7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000016ae3c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af38 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae84 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001708d8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139199 : mov dword ptr [rdi], 0 ; call 0x115bf8
0x000000000004a776 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000000abb89 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x00000000000abcd6 : mov dword ptr [rdi], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000014d87f : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ab91a : mov dword ptr [rdi], eax ; mov rax, r12 ; pop r12 ; ret
0x00000000000ab8bc : mov dword ptr [rdi], eax ; mov rax, r9 ; ret
0x000000000005e60f : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000059438 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000059552 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000045364 : mov dword ptr [rdi], eax ; subsd xmm0, xmm1 ; ret
0x0000000000116a36 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000bfb43 : mov dword ptr [rdi], ebp ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000bb6b5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000bb707 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000abd20 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018c644 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000bb694 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000ba054 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc4d7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000bad47 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000bc505 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000bad65 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bc557 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000bada7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb6e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000bc535 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000ba095 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000bb737 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bc597 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000ba0d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb757 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bc5b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000ba0e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000001936eb : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000ba0f8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000ba108 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000ba118 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000ba086 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ba0c8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001936f7 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000004552e : mov dword ptr [rdi], ecx ; ret
0x000000000018f123 : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000abb46 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000008dd13 : mov dword ptr [rdi], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb684 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000018e0c4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bc4c4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x000000000018e7a4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb6a2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018e0f2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bc4f2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000bb6f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000bc544 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x000000000018cec4 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000bb060 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb0a1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb0c1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb0d1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb0e1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb0f1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb070 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000bb0b1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000045879 : mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x000000000004537e : mov dword ptr [rdi], edx ; ret
0x00000000000456cc : mov dword ptr [rdi], edx ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000018c634 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000be124 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be152 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be1a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000abcf1 : mov dword ptr [rdi], esi ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000193013 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005ac66 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000193002 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000193027 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000456e6 : mov dword ptr [rdi], esi ; ret
0x000000000010f9e1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000000abb88 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x0000000000153a8c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000089164 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000014c528 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000014c502 : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c506 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000150336 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000153994 : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000009174d : mov dword ptr [rdx + 0xf0], ecx ; pop rbx ; ret
0x00000000000858fb : mov dword ptr [rdx + 0xf0], ecx ; ret
0x000000000017e027 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b6c3c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000006611d : mov dword ptr [rdx + 4], 1 ; ret
0x000000000017e009 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000ce366 : mov dword ptr [rdx + 4], eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000b6c1e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000ce365 : mov dword ptr [rdx + 4], r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000017e0bb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000017e039 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000179ce9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000017e0db : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000017e059 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000179cf9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000017e079 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000017e0fb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000b6cc0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000017e099 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000017df8b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000b6ca2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000003330f : mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000001602da : mov dword ptr [rdx], 0 ; ret
0x000000000005b591 : mov dword ptr [rdx], 0x22 ; call 0x198018
0x000000000005ad22 : mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000011757b : mov dword ptr [rdx], eax ; cmp rdi, rax ; ja 0x1175b1 ; xor eax, eax ; ret
0x0000000000116d90 : mov dword ptr [rdx], eax ; jmp 0x116d62
0x000000000017dfb4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000017dfe2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000017df34 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000001164fc : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x1164d0
0x0000000000123d9c : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x123d70
0x0000000000123e54 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x123e28
0x000000000012409c : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x124070
0x00000000000466ca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000005ac68 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005ae97 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000105b40 : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x0000000000105ae0 : mov dword ptr [rdx], eax ; mov eax, r9d ; ret
0x000000000004b59a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000d7c0a : mov dword ptr [rdx], eax ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000b6bb9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000037581 : mov dword ptr [rdx], eax ; ret
0x00000000000ce369 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000008a24c : mov dword ptr [rdx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010582b : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000ab7f2 : mov dword ptr [rdx], ecx ; ret
0x00000000001300d0 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x00000000000884b7 : mov dword ptr [rdx], esp ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000a3d5d : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2a46 : mov dword ptr [rip + 0x14b1bc], eax ; ret
0x000000000009a331 : mov dword ptr [rip + 0x14ff29], ecx ; call 0x1165c8
0x0000000000098472 : mov dword ptr [rip + 0x151e34], eax ; ret
0x000000000009844c : mov dword ptr [rip + 0x151e3e], eax ; ret
0x0000000000098423 : mov dword ptr [rip + 0x151e5f], eax ; ret
0x0000000000098403 : mov dword ptr [rip + 0x151e77], eax ; ret
0x00000000000980e9 : mov dword ptr [rip + 0x1521f9], eax ; ret
0x00000000000980d1 : mov dword ptr [rip + 0x152209], eax ; ret
0x00000000000980b7 : mov dword ptr [rip + 0x152213], edx ; ret
0x0000000000098079 : mov dword ptr [rip + 0x152219], eax ; ret
0x0000000000098069 : mov dword ptr [rip + 0x152231], eax ; ret
0x0000000000098488 : mov dword ptr [rip + 0x1556d6], eax ; ret
0x0000000000047403 : mov dword ptr [rip + 0x1a2d9f], eax ; mov eax, edx ; ret
0x00000000000473e0 : mov dword ptr [rip + 0x1a2dc6], edx ; ret
0x0000000000026a90 : mov dword ptr [rip + 0x1c95b2], eax ; ret
0x00000000000256f8 : mov dword ptr [rip + 0x1ca7b2], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000164260 : mov dword ptr [rip + 0x89902], esi ; ret
0x000000000013038c : mov dword ptr [rip + 0xbe7e6], eax ; pop rbp ; ret
0x0000000000124c79 : mov dword ptr [rip + 0xc56e1], ebx ; pop rbx ; ret
0x0000000000124c5f : mov dword ptr [rip + 0xc56fb], ebx ; pop rbx ; ret
0x000000000011b92e : mov dword ptr [rip + 0xcea14], edi ; ret
0x000000000011a87d : mov dword ptr [rip + 0xd3c0d], eax ; mov rax, r8 ; ret
0x000000000014b58b : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000004b469 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000004af40 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000004af44 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000910bc : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x000000000011644f : mov dword ptr [rsi + 0x48], eax ; ret
0x0000000000115a8a : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x000000000004b41f : mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x000000000004b4ab : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000014b527 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000586f4 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; ret
0x00000000001936fa : mov dword ptr [rsi - 2], ecx ; ret
0x00000000001936ed : mov dword ptr [rsi - 4], ecx ; ret
0x000000000014b539 : mov dword ptr [rsi], 0 ; ret
0x000000000014b5d4 : mov dword ptr [rsi], 0xa ; ret
0x000000000014b5db : mov dword ptr [rsi], 0xb ; ret
0x000000000014b5b0 : mov dword ptr [rsi], 0xc ; ret
0x000000000014b593 : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x000000000014b5cd : mov dword ptr [rsi], 8 ; ret
0x000000000015a82a : mov dword ptr [rsi], eax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x00000000000904a3 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000013e7d2 : mov dword ptr [rsi], edi ; ret
0x000000000013ed0f : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000004afaf : mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000015a7a7 : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000103704 : mov dword ptr [rsi], edx ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000016a1d2 : mov dword ptr [rsi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000132afa : mov dword ptr [rsp + 0x10], eax ; call 0x8ed76
0x0000000000044f59 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000014c2db : mov dword ptr [rsp + 0x10], eax ; mov rdx, rax ; jmp 0x14c278
0x000000000009a76f : mov dword ptr [rsp + 0x10], edx ; call qword ptr [rax]
0x000000000009aae6 : mov dword ptr [rsp + 0x18], eax ; call rax
0x0000000000158a4e : mov dword ptr [rsp + 0x18], eax ; xor eax, eax ; call 0x25498
0x000000000014aba5 : mov dword ptr [rsp + 0x18], edi ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000118bf8 : mov dword ptr [rsp + 0x20], eax ; mov eax, 0x65 ; syscall
0x000000000009aae1 : mov dword ptr [rsp + 0x20], ebx ; mov qword ptr [rsp + 0x18], r8 ; call rax
0x00000000001222a8 : mov dword ptr [rsp + 0x28], ecx ; movaps xmmword ptr [rsp + 0x10], xmm0 ; syscall
0x00000000000d89df : mov dword ptr [rsp + 0x30], edi ; call 0x25496
0x00000000000d354b : mov dword ptr [rsp + 0x50], esp ; call rbx
0x000000000009ab01 : mov dword ptr [rsp + 8], eax ; call rdx
0x000000000011dfee : mov dword ptr [rsp + 8], eax ; mov rdi, qword ptr [r8] ; call rbx
0x000000000009abd5 : mov dword ptr [rsp + 8], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000008c32f : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x00000000000f482c : mov dword ptr [rsp + 8], ecx ; mov rsi, r8 ; call 0xf0ab9
0x0000000000045149 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005adbc : mov dword ptr [rsp - 0x10], esi ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000140056 : mov dword ptr [rsp], 0 ; call rax
0x0000000000158e8e : mov dword ptr [rsp], 2 ; call r8
0x000000000003f61e : mov dword ptr [rsp], ecx ; call 0x3c125
0x0000000000091c50 : mov dword ptr [rsp], ecx ; mov rdi, rbp ; call rax
0x00000000000a5152 : mov dword ptr [rsp], esi ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000134af5 : mov dword ptr fs:[r8], r9d ; add rsp, 0x18 ; ret
0x00000000000e29ff : mov dword ptr fs:[r8], r9d ; add rsp, 8 ; ret
0x00000000000e22a7 : mov dword ptr fs:[r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x00000000000e60f7 : mov dword ptr fs:[rax], 0x16 ; jmp 0xe60cb
0x000000000011c9f7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000d3357 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000016417b : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x00000000000a1b3b : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000120227 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000119f84 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x000000000013d5e0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115398 : mov dword ptr fs:[rbx], ebp ; mov eax, 0xffffffff ; jmp 0x115376
0x0000000000144cda : mov dword ptr fs:[rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000466fd : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000005b590 : mov dword ptr fs:[rdx], 0x22 ; call 0x198019
0x0000000000116d8f : mov dword ptr fs:[rdx], eax ; jmp 0x116d63
0x00000000001164fb : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x1164d1
0x0000000000123d9b : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x123d71
0x0000000000123e53 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x123e29
0x000000000012409b : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x124071
0x00000000000466c9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000105b3f : mov dword ptr fs:[rdx], eax ; mov eax, r8d ; ret
0x0000000000105adf : mov dword ptr fs:[rdx], eax ; mov eax, r9d ; ret
0x00000000000bedf8 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000016b1a0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000ba040 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000115d97 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000058129 : mov eax, 0 ; jne 0x5813c ; push r10 ; ret
0x0000000000058632 : mov eax, 0 ; jne 0x58645 ; push r10 ; ret
0x0000000000149c14 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000bf3b1 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000066128 : mov eax, 0x10 ; ret
0x0000000000116b19 : mov eax, 0x10 ; syscall
0x000000000014c195 : mov eax, 0x100 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000116f66 : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013f0c9 : mov eax, 0x100 ; ret
0x000000000013f0c0 : mov eax, 0x101 ; ret
0x0000000000110fe4 : mov eax, 0x101 ; syscall
0x000000000013f0b7 : mov eax, 0x102 ; cmovne eax, edx ; ret
0x0000000000110f34 : mov eax, 0x102 ; syscall
0x0000000000110c0e : mov eax, 0x103 ; syscall
0x0000000000112697 : mov eax, 0x104 ; syscall
0x0000000000119eb9 : mov eax, 0x105 ; syscall
0x0000000000110c68 : mov eax, 0x106 ; syscall
0x0000000000112fa4 : mov eax, 0x107 ; syscall
0x0000000000065fb7 : mov eax, 0x108 ; syscall
0x0000000000112e87 : mov eax, 0x109 ; syscall
0x0000000000112ee4 : mov eax, 0x10a ; syscall
0x0000000000112f47 : mov eax, 0x10b ; syscall
0x0000000000110ea1 : mov eax, 0x10c ; syscall
0x0000000000111663 : mov eax, 0x10d ; syscall
0x0000000000118354 : mov eax, 0x10e ; syscall
0x0000000000115cd8 : mov eax, 0x10f ; syscall
0x000000000010f3d3 : mov eax, 0x11 ; syscall
0x0000000000123024 : mov eax, 0x110 ; syscall
0x0000000000122833 : mov eax, 0x113 ; syscall
0x00000000001226d3 : mov eax, 0x114 ; syscall
0x0000000000116473 : mov eax, 0x115 ; syscall
0x0000000000122783 : mov eax, 0x116 ; syscall
0x000000000011634c : mov eax, 0x118 ; syscall
0x000000000012248b : mov eax, 0x119 ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000122439 : mov eax, 0x119 ; syscall
0x0000000000123084 : mov eax, 0x11b ; syscall
0x0000000000116523 : mov eax, 0x11d ; syscall
0x00000000001230b7 : mov eax, 0x11e ; syscall
0x00000000001230e4 : mov eax, 0x11f ; syscall
0x000000000010f483 : mov eax, 0x12 ; syscall
0x0000000000123d13 : mov eax, 0x120 ; syscall
0x0000000000122524 : mov eax, 0x122 ; syscall
0x0000000000122cf4 : mov eax, 0x123 ; syscall
0x0000000000111ba4 : mov eax, 0x124 ; syscall
0x0000000000111c04 : mov eax, 0x125 ; syscall
0x0000000000122e14 : mov eax, 0x126 ; syscall
0x0000000000117806 : mov eax, 0x127 ; syscall
0x00000000001178c6 : mov eax, 0x128 ; syscall
0x0000000000123e0d : mov eax, 0x12b ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000123dc3 : mov eax, 0x12b ; syscall
0x0000000000123114 : mov eax, 0x12c ; syscall
0x0000000000122b77 : mov eax, 0x12d ; syscall
0x00000000001225b7 : mov eax, 0x12e ; syscall
0x000000000011704b : mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000123147 : mov eax, 0x12f ; syscall
0x00000000001176c0 : mov eax, 0x13 ; syscall
0x0000000000122900 : mov eax, 0x130 ; syscall
0x0000000000122c34 : mov eax, 0x131 ; syscall
0x00000000001185c4 : mov eax, 0x132 ; syscall
0x0000000000123e73 : mov eax, 0x133 ; syscall
0x0000000000123174 : mov eax, 0x134 ; syscall
0x00000000001105af : mov eax, 0x135 ; syscall
0x00000000001231a7 : mov eax, 0x136 ; syscall
0x00000000001231d7 : mov eax, 0x137 ; syscall
0x0000000000065ffc : mov eax, 0x13c ; syscall
0x000000000004b530 : mov eax, 0x13e ; syscall
0x0000000000123204 : mov eax, 0x13f ; syscall
0x0000000000141217 : mov eax, 0x14 ; add edx, 1 ; syscall
0x0000000000117760 : mov eax, 0x14 ; syscall
0x00000000000e60a3 : mov eax, 0x142 ; syscall
0x0000000000122998 : mov eax, 0x145 ; syscall
0x0000000000116283 : mov eax, 0x146 ; syscall
0x00000000001179a6 : mov eax, 0x147 ; syscall
0x0000000000117b06 : mov eax, 0x148 ; syscall
0x00000000000d302e : mov eax, 0x148051e ; ret 0xb848
0x0000000000122a2c : mov eax, 0x149 ; syscall
0x0000000000123234 : mov eax, 0x14a ; syscall
0x0000000000123264 : mov eax, 0x14b ; syscall
0x0000000000110b37 : mov eax, 0x14c ; syscall
0x00000000001113e4 : mov eax, 0x15 ; syscall
0x000000000009fd40 : mov eax, 0x16 ; ret
0x0000000000111bd4 : mov eax, 0x16 ; syscall
0x00000000001182a0 : mov eax, 0x17 ; mov edi, dword ptr [rsp + 0xc] ; syscall
0x0000000000118253 : mov eax, 0x17 ; syscall
0x0000000000098054 : mov eax, 0x18 ; syscall
0x0000000000122ed7 : mov eax, 0x19 ; syscall
0x000000000011bc00 : mov eax, 0x1a ; syscall
0x000000000011bcc4 : mov eax, 0x1b ; syscall
0x00000000001103cb : mov eax, 0x1c ; syscall
0x0000000000124377 : mov eax, 0x1d ; syscall
0x0000000000124314 : mov eax, 0x1e ; syscall
0x00000000001243b4 : mov eax, 0x1f ; syscall
0x00000000000e7f1c : mov eax, 0x20 ; cmove rax, rdx ; ret
0x00000000000e7fea : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000bf3aa : mov eax, 0x20 ; pop rbx ; ret
0x0000000000111b44 : mov eax, 0x20 ; syscall
0x000000000003729b : mov eax, 0x200 ; ret
0x0000000000111b74 : mov eax, 0x21 ; syscall
0x00000000000e5ca0 : mov eax, 0x22 ; syscall
0x0000000000097fd0 : mov eax, 0x23 ; syscall
0x00000000000d7274 : mov eax, 0x24 ; syscall
0x00000000000e5bf4 : mov eax, 0x25 ; syscall
0x00000000000d72a4 : mov eax, 0x26 ; syscall
0x00000000000e6f74 : mov eax, 0x27 ; syscall
0x0000000000116247 : mov eax, 0x28 ; syscall
0x00000000001239d4 : mov eax, 0x29 ; syscall
0x00000000001233d0 : mov eax, 0x2a ; syscall
0x0000000000123300 : mov eax, 0x2b ; syscall
0x0000000000123759 : mov eax, 0x2c ; syscall
0x0000000000123539 : mov eax, 0x2d ; syscall
0x0000000000123810 : mov eax, 0x2e ; syscall
0x00000000001236b0 : mov eax, 0x2f ; syscall
0x00000000000bf3a3 : mov eax, 0x30 ; pop rbx ; ret
0x00000000001239a4 : mov eax, 0x30 ; syscall
0x0000000000123394 : mov eax, 0x31 ; syscall
0x00000000001234f4 : mov eax, 0x32 ; syscall
0x0000000000123494 : mov eax, 0x33 ; syscall
0x0000000000123464 : mov eax, 0x34 ; syscall
0x0000000000123a07 : mov eax, 0x35 ; syscall
0x0000000000123977 : mov eax, 0x36 ; syscall
0x00000000001234c7 : mov eax, 0x37 ; syscall
0x00000000000e5de8 : mov eax, 0x38 ; syscall
0x00000000000e5f85 : mov eax, 0x3a ; syscall
0x00000000000e6024 : mov eax, 0x3b ; syscall
0x0000000000122336 : mov eax, 0x3c ; syscall
0x00000000000e59bd : mov eax, 0x3d ; syscall
0x000000000005540d : mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x00000000000466e4 : mov eax, 0x3e ; syscall
0x00000000000e5914 : mov eax, 0x3f ; syscall
0x00000000000bf39c : mov eax, 0x40 ; pop rbx ; ret
0x00000000000e7f98 : mov eax, 0x40 ; ret
0x0000000000124204 : mov eax, 0x40 ; syscall
0x00000000001241d4 : mov eax, 0x41 ; syscall
0x0000000000124266 : mov eax, 0x42 ; syscall
0x0000000000124344 : mov eax, 0x43 ; syscall
0x0000000000124174 : mov eax, 0x44 ; syscall
0x0000000000124013 : mov eax, 0x45 ; syscall
0x0000000000124110 : mov eax, 0x46 ; mov edi, dword ptr [rsp + 8] ; syscall
0x00000000001240c3 : mov eax, 0x46 ; syscall
0x00000000001241a4 : mov eax, 0x47 ; syscall
0x0000000000111794 : mov eax, 0x48 ; syscall
0x0000000000111824 : mov eax, 0x49 ; syscall
0x00000000000313f9 : mov eax, 0x49000000 ; mov ecx, esi ; mov r10, rcx ; jmp 0x313ba
0x0000000000118480 : mov eax, 0x4a ; syscall
0x0000000000118540 : mov eax, 0x4b ; syscall
0x0000000000119ef4 : mov eax, 0x4c ; syscall
0x0000000000119f24 : mov eax, 0x4d ; syscall
0x0000000000111d9b : mov eax, 0x4f ; syscall
0x0000000000111cc4 : mov eax, 0x50 ; syscall
0x0000000000111cf4 : mov eax, 0x51 ; syscall
0x0000000000065f84 : mov eax, 0x52 ; syscall
0x0000000000110f04 : mov eax, 0x53 ; syscall
0x0000000000112fd4 : mov eax, 0x54 ; syscall
0x0000000000111c40 : mov eax, 0x55 ; syscall
0x0000000000112e54 : mov eax, 0x56 ; syscall
0x0000000000112f74 : mov eax, 0x57 ; syscall
0x0000000000112eb4 : mov eax, 0x58 ; syscall
0x0000000000112f14 : mov eax, 0x59 ; syscall
0x0000000000110e14 : mov eax, 0x5a ; syscall
0x0000000000110e44 : mov eax, 0x5b ; syscall
0x00000000000e786d : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000112604 : mov eax, 0x5c ; syscall
0x0000000000112634 : mov eax, 0x5d ; syscall
0x0000000000112664 : mov eax, 0x5e ; syscall
0x0000000000110e04 : mov eax, 0x5f ; syscall
0x00000000000bf395 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000d4064 : mov eax, 0x60 ; syscall
0x00000000001170c4 : mov eax, 0x62 ; syscall
0x0000000000122ff4 : mov eax, 0x63 ; syscall
0x00000000000e5944 : mov eax, 0x64 ; syscall
0x0000000000118bfc : mov eax, 0x65 ; syscall
0x00000000000e6f94 : mov eax, 0x66 ; syscall
0x0000000000122e74 : mov eax, 0x67 ; syscall
0x00000000000e6fb4 : mov eax, 0x68 ; syscall
0x00000000000e7022 : mov eax, 0x69 ; syscall
0x00000000000e70c2 : mov eax, 0x6a ; syscall
0x00000000000e6fa4 : mov eax, 0x6b ; syscall
0x00000000000e6fc4 : mov eax, 0x6c ; syscall
0x00000000000e7254 : mov eax, 0x6d ; syscall
0x00000000000e6f84 : mov eax, 0x6e ; syscall
0x00000000000e7284 : mov eax, 0x6f ; syscall
0x00000000000e72e4 : mov eax, 0x70 ; syscall
0x0000000000117c52 : mov eax, 0x71 ; syscall
0x0000000000117cf2 : mov eax, 0x72 ; syscall
0x00000000000e6fd4 : mov eax, 0x73 ; syscall
0x00000000000e21c2 : mov eax, 0x74 ; syscall
0x00000000000e7392 : mov eax, 0x75 ; syscall
0x00000000000e7314 : mov eax, 0x76 ; syscall
0x00000000000e7442 : mov eax, 0x77 ; syscall
0x00000000000e7344 : mov eax, 0x78 ; syscall
0x00000000000e7224 : mov eax, 0x79 ; syscall
0x00000000001223c4 : mov eax, 0x7a ; syscall
0x00000000001223f4 : mov eax, 0x7b ; syscall
0x00000000000e72b4 : mov eax, 0x7c ; syscall
0x0000000000122bd4 : mov eax, 0x7d ; syscall
0x00000000000e7e0b : mov eax, 0x7d00 ; ret
0x00000000000e7ed0 : mov eax, 0x7e ; ret
0x0000000000122c04 : mov eax, 0x7e ; syscall
0x00000000000e7e32 : mov eax, 0x7f ; cmove rax, rdx ; ret
0x00000000000e7eba : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x0000000000046719 : mov eax, 0x7f ; syscall
0x000000000013fda0 : mov eax, 0x7fffffff ; ret
0x00000000000bf3bf : mov eax, 0x80 ; pop rbx ; ret
0x0000000000047438 : mov eax, 0x80 ; syscall
0x00000000000bf2a7 : mov eax, 0x80000006 ; cpuid ; jmp 0xbf27b
0x0000000000047584 : mov eax, 0x81 ; syscall
0x0000000000046765 : mov eax, 0x82 ; syscall
0x0000000000046cd4 : mov eax, 0x83 ; syscall
0x0000000000110684 : mov eax, 0x84 ; syscall
0x0000000000110bab : mov eax, 0x85 ; syscall
0x0000000000123054 : mov eax, 0x86 ; syscall
0x00000000001225e4 : mov eax, 0x87 ; syscall
0x000000000011f6db : mov eax, 0x88 ; syscall
0x0000000000110cb4 : mov eax, 0x89 ; syscall
0x00000000000fc09b : mov eax, 0x89000000 ; ret
0x00000000000d5662 : mov eax, 0x8945051e ; retf 0xc141
0x0000000000130782 : mov eax, 0x89483e74 ; ret
0x0000000000110ce4 : mov eax, 0x8a ; syscall
0x0000000000155bae : mov eax, 0x8bda8948 ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000117484 : mov eax, 0x8c ; syscall
0x00000000001174c4 : mov eax, 0x8d ; syscall
0x0000000000105904 : mov eax, 0x8e ; syscall
0x0000000000105934 : mov eax, 0x8f ; syscall
0x0000000000105964 : mov eax, 0x90 ; syscall
0x0000000000105994 : mov eax, 0x91 ; syscall
0x00000000001059f4 : mov eax, 0x92 ; syscall
0x0000000000105a24 : mov eax, 0x93 ; syscall
0x0000000000105a54 : mov eax, 0x94 ; syscall
0x000000000011bd24 : mov eax, 0x95 ; syscall
0x000000000011bd54 : mov eax, 0x96 ; syscall
0x000000000011bd84 : mov eax, 0x97 ; syscall
0x000000000011bdb4 : mov eax, 0x98 ; syscall
0x0000000000118904 : mov eax, 0x99 ; syscall
0x0000000000122b34 : mov eax, 0x9a ; syscall
0x0000000000122f34 : mov eax, 0x9b ; syscall
0x0000000000122f67 : mov eax, 0x9d ; syscall
0x0000000000057f7e : mov eax, 0x9e ; syscall
0x0000000000122ba4 : mov eax, 0x9f ; syscall
0x000000000013a23a : mov eax, 0xa ; pop rbx ; pop rbp ; ret
0x000000000011bbc4 : mov eax, 0xa ; syscall
0x0000000000118444 : mov eax, 0xa1 ; syscall
0x0000000000118504 : mov eax, 0xa2 ; syscall
0x0000000000118414 : mov eax, 0xa3 ; syscall
0x00000000000d4144 : mov eax, 0xa4 ; syscall
0x0000000000122ea7 : mov eax, 0xa5 ; syscall
0x0000000000122364 : mov eax, 0xa6 ; syscall
0x0000000000118934 : mov eax, 0xa7 ; syscall
0x0000000000118964 : mov eax, 0xa8 ; syscall
0x0000000000118600 : mov eax, 0xa9 ; syscall
0x00000000001180c4 : mov eax, 0xaa ; syscall
0x0000000000118214 : mov eax, 0xab ; syscall
0x0000000000122224 : mov eax, 0xac ; syscall
0x00000000001221f4 : mov eax, 0xad ; syscall
0x0000000000122c64 : mov eax, 0xae ; syscall
0x0000000000122d87 : mov eax, 0xaf ; syscall
0x000000000011bb94 : mov eax, 0xb ; syscall
0x0000000000122c94 : mov eax, 0xb0 ; syscall
0x0000000000122d54 : mov eax, 0xb1 ; syscall
0x0000000000122f97 : mov eax, 0xb2 ; syscall
0x0000000000122fc7 : mov eax, 0xb3 ; syscall
0x0000000000122f04 : mov eax, 0xb4 ; syscall
0x00000000001503c0 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000463b6 : mov eax, 0xba ; syscall
0x0000000000122394 : mov eax, 0xbb ; syscall
0x00000000001201b7 : mov eax, 0xbc ; syscall
0x0000000000120157 : mov eax, 0xbd ; syscall
0x0000000000120037 : mov eax, 0xbe ; syscall
0x0000000000120067 : mov eax, 0xbf ; syscall
0x000000000010f867 : mov eax, 0xc ; jmp 0x10f837
0x00000000000f5251 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000f5320 : mov eax, 0xc ; ret
0x0000000000117564 : mov eax, 0xc ; syscall
0x00000000001200c7 : mov eax, 0xc0 ; syscall
0x000000000011ffa7 : mov eax, 0xc1 ; syscall
0x0000000000120094 : mov eax, 0xc2 ; syscall
0x00000000001200f4 : mov eax, 0xc3 ; syscall
0x000000000011ffd4 : mov eax, 0xc4 ; syscall
0x0000000000120184 : mov eax, 0xc5 ; syscall
0x0000000000120124 : mov eax, 0xc6 ; syscall
0x0000000000120004 : mov eax, 0xc7 ; syscall
0x00000000000d3fa4 : mov eax, 0xc9 ; syscall
0x0000000000025a36 : mov eax, 0xca ; syscall
0x0000000000105af4 : mov eax, 0xcb ; syscall
0x0000000000105a93 : mov eax, 0xcc ; cmovbe rsi, r8 ; syscall
0x000000000004653f : mov eax, 0xd ; syscall
0x0000000000122cc4 : mov eax, 0xd5 ; syscall
0x000000000011bcf7 : mov eax, 0xd8 ; syscall
0x00000000000e1084 : mov eax, 0xd9 ; syscall
0x00000000001242d7 : mov eax, 0xdc ; syscall
0x0000000000115d87 : mov eax, 0xdd ; syscall
0x00000000000463e4 : mov eax, 0xe ; syscall
0x000000000015682a : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013019e : mov eax, 0xe3 ; syscall
0x00000000000e0147 : mov eax, 0xe4 ; syscall
0x00000000001300e4 : mov eax, 0xe5 ; syscall
0x0000000000130207 : mov eax, 0xe6 ; syscall
0x0000000000122623 : mov eax, 0xe8 ; syscall
0x000000000007fff4 : mov eax, 0xe80013a6 ; ret
0x0000000000122d27 : mov eax, 0xe9 ; syscall
0x00000000000463c2 : mov eax, 0xea ; syscall
0x0000000000119cd4 : mov eax, 0xeb ; syscall
0x0000000000046471 : mov eax, 0xf ; syscall
0x00000000000a3772 : mov eax, 0xf48000e ; ret 0x66c3
0x000000000009eda8 : mov eax, 0xf60014ed ; ret 0x7402
0x00000000000e5b46 : mov eax, 0xf7 ; syscall
0x00000000000e7ec8 : mov eax, 0xfc17 ; ret
0x0000000000122de4 : mov eax, 0xfd ; syscall
0x00000000000cb747 : mov eax, 0xfd83949 ; xchg eax, ebx ; ret
0x0000000000122db4 : mov eax, 0xfe ; syscall
0x00000000000e7ff8 : mov eax, 0xff ; ret
0x0000000000122e44 : mov eax, 0xff ; syscall
0x00000000000e7e77 : mov eax, 0xfffa ; ret
0x0000000000164279 : mov eax, 0xfffffffe ; ret
0x000000000013f076 : mov eax, 0xffffffff ; cmove eax, edx ; ret
0x000000000011539b : mov eax, 0xffffffff ; jmp 0x115373
0x00000000001164fe : mov eax, 0xffffffff ; jmp 0x1164ce
0x0000000000123d9e : mov eax, 0xffffffff ; jmp 0x123d6e
0x0000000000123e56 : mov eax, 0xffffffff ; jmp 0x123e26
0x000000000012409e : mov eax, 0xffffffff ; jmp 0x12406e
0x0000000000046dbf : mov eax, 0xffffffff ; jmp 0x46d8f
0x0000000000082725 : mov eax, 0xffffffff ; jmp 0x826f5
0x0000000000057ea1 : mov eax, 0xffffffff ; mov eax, r8d ; ret
0x000000000015fd65 : mov eax, 0xffffffff ; pop r12 ; pop r13 ; ret
0x000000000008a659 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000004466e : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000863ec : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000917f3 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000027b36 : mov eax, 0xffffffff ; ret
0x000000000009047e : mov eax, 0xffffffff ; test edx, edx ; je 0x90499 ; ret
0x00000000000908de : mov eax, 0xffffffff ; test edx, edx ; je 0x908f9 ; ret
0x0000000000118d73 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001960b0 : mov eax, 1 ; jg 0x1960c9 ; neg eax ; ret
0x00000000000d2260 : mov eax, 1 ; jg 0xd2272 ; neg eax ; ret
0x0000000000192e76 : mov eax, 1 ; jl 0x192e89 ; neg eax ; ret
0x0000000000159749 : mov eax, 1 ; jmp 0x159719
0x00000000000ef360 : mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x000000000008fe01 : mov eax, 1 ; mov eax, r8d ; ret
0x000000000005ac45 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000001502ce : mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530d6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539e6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539c6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm4 ; ret
0x000000000008a634 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000a1cf3 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000863ca : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010f7e0 : mov eax, 1 ; pop rbx ; ret
0x000000000005871e : mov eax, 1 ; ret
0x0000000000111320 : mov eax, 1 ; syscall
0x00000000000e80c4 : mov eax, 1 ; test edi, edi ; js 0xe80d9 ; ret
0x000000000005ae44 : mov eax, 2 ; ret
0x00000000001300c7 : mov eax, 3 ; cmovne eax, edx ; ret
0x000000000013dc04 : mov eax, 3 ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000d2d21 : mov eax, 3 ; ret
0x0000000000111ac0 : mov eax, 3 ; syscall
0x00000000000d2d31 : mov eax, 4 ; ret
0x0000000000110763 : mov eax, 4 ; syscall
0x00000000001302ff : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x000000000010a287 : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000d2d41 : mov eax, 5 ; ret
0x00000000001107c2 : mov eax, 5 ; syscall
0x00000000000d2d51 : mov eax, 6 ; ret
0x0000000000110823 : mov eax, 6 ; syscall
0x00000000000d2d61 : mov eax, 7 ; ret
0x0000000000115c00 : mov eax, 7 ; syscall
0x00000000000bf3b8 : mov eax, 8 ; pop rbx ; ret
0x00000000001113b4 : mov eax, 8 ; syscall
0x000000000010f779 : mov eax, 9 ; pop rbp ; pop r12 ; ret
0x000000000011baff : mov eax, 9 ; syscall
0x0000000000097f96 : mov eax, dword ptr [0x10] ; ret
0x0000000000128499 : mov eax, dword ptr [r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097e9f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x97eb1 ; call rax
0x0000000000125168 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000125158 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000001494ab : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000014438b : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x14439f ; ret
0x0000000000117f1c : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x117f2d ; ret
0x0000000000120241 : mov eax, dword ptr [rax + 0x1a0] ; ret
0x0000000000162d43 : mov eax, dword ptr [rax + 0x1b0] ; jmp rax
0x000000000008ca05 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000012fff0 : mov eax, dword ptr [rax + 0x30] ; ret
0x0000000000125a4b : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011ff90 : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000152fe1 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000153921 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004a6de : mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000958c0 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x958c0 ; ret
0x0000000000035952 : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000fcc60 : mov eax, dword ptr [rax + 0xf000000] ; xchg eax, esp ; ret 0xc283
0x000000000012021b : mov eax, dword ptr [rax + 8] ; ret
0x0000000000097f0f : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x97f21 ; call rax
0x00000000000bf97b : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbf969 ; ret
0x000000000019b958 : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x19b96a ; call rax
0x0000000000058938 : mov eax, dword ptr [rax + rcx*8] ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x0000000000037299 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000003748b : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000036d93 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000126408 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000166795 : mov eax, dword ptr [rax] ; jmp 0x16675f
0x0000000000150341 : mov eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000035950 : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000008b0e3 : mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000101d6c : mov eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x0000000000037270 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000004a6db : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014447d : mov eax, dword ptr [rax] ; ret
0x000000000011f317 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x11f387 ; call rax
0x0000000000033d1e : mov eax, dword ptr [rax] ; test rax, rax ; je 0x33d30 ; call rax
0x0000000000097e17 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x97e27 ; call rax
0x000000000009c3ca : mov eax, dword ptr [rax] ; test rax, rax ; je 0x9c3da ; call rax
0x00000000000966e9 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x966e7 ; ret
0x00000000000f12b0 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c443 : mov eax, dword ptr [rbp + 8] ; mov rsi, r12 ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000156fec : mov eax, dword ptr [rbp + 8] ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000159d9e : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000001076b7 : mov eax, dword ptr [rbp - 0x1e0] ; call rax
0x000000000011d2df : mov eax, dword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000094bc1 : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008fe95 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000009531d : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000015644e : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x156468 ; pop rbx ; ret
0x00000000000b6c39 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000179ce6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000179cf6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000b6cbd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b6cdd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001833ea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bf91d : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbf911 ; ret
0x0000000000184cc2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000008a7ef : mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017dfe0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000b6be5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000017df31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000179c01 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000017dfb1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b6bb6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000096704 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000009672c : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000015a6b5 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1065 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000019ba55 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x19ba6c ; call rax
0x00000000000d21e0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xd2268 ; ret
0x00000000000d21f5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xd2268 ; ret
0x000000000015ab34 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008fee9 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000d2200 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xd2268 ; ret
0x00000000000d221b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xd2268 ; ret
0x00000000000d2230 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xd2268 ; ret
0x00000000000d2245 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xd2268 ; ret
0x00000000000d2250 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xd2268 ; ret
0x000000000008fdb9 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000969f5 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000008df6c : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8df7f ; ret
0x000000000010f9f4 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000116984 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000159016 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000159989 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159111 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x00000000000979fc : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, r8 ; jmp rax
0x000000000014c391 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000008fe44 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008fe14 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000966f6 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000097a00 : mov eax, dword ptr [rdi] ; mov rdi, r8 ; jmp rax
0x0000000000098485 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x1556d6], eax ; ret
0x00000000000e10b4 : mov eax, dword ptr [rdi] ; ret
0x0000000000091084 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000091094 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000151058 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151066 ; ret
0x0000000000151057 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151067 ; ret
0x0000000000157718 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157726 ; ret
0x0000000000157717 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157727 ; ret
0x000000000008d7df : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000105cf1 : mov eax, dword ptr [rdx + 8] ; ret
0x0000000000037227 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000b1fc6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000036e2c : mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000035911 : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000007436e : mov eax, dword ptr [rdx] ; jmp 0x70608
0x0000000000088630 : mov eax, dword ptr [rdx] ; ret
0x00000000000a19b2 : mov eax, dword ptr [rip + 0x148598] ; call qword ptr [rax]
0x00000000000a17d1 : mov eax, dword ptr [rip + 0x148779] ; call qword ptr [rax]
0x00000000000a1701 : mov eax, dword ptr [rip + 0x148849] ; call qword ptr [rax]
0x000000000009d2a9 : mov eax, dword ptr [rip + 0x14cc31] ; mov qword ptr [rax], rdi ; ret
0x000000000009aab9 : mov eax, dword ptr [rip + 0x14f301] ; xor edi, edi ; call qword ptr [rax]
0x000000000009aa73 : mov eax, dword ptr [rip + 0x14f347] ; call qword ptr [rax]
0x00000000000993df : mov eax, dword ptr [rip + 0x150afb] ; mov qword ptr [rax], rdx ; ret
0x00000000000969d5 : mov eax, dword ptr [rip + 0x154bc5] ; ret
0x00000000000473b4 : mov eax, dword ptr [rip + 0x1a2dee] ; ret
0x00000000000473a4 : mov eax, dword ptr [rip + 0x1a2e02] ; ret
0x0000000000036d41 : mov eax, dword ptr [rip + 0x1b30a1] ; mov qword ptr [rax], rdx ; ret
0x0000000000032af5 : mov eax, dword ptr [rip + 0x1b9b4d] ; ret
0x0000000000029135 : mov eax, dword ptr [rip + 0x1c6d7d] ; ret
0x0000000000029125 : mov eax, dword ptr [rip + 0x1c6d9d] ; ret
0x000000000015fe71 : mov eax, dword ptr [rip + 0x8b619] ; call qword ptr [rax]
0x000000000015f864 : mov eax, dword ptr [rip + 0x8bc26] ; call qword ptr [rax]
0x0000000000162f41 : mov eax, dword ptr [rip + 0x8cf41] ; call qword ptr [rax]
0x0000000000125a45 : mov eax, dword ptr [rip + 0xc4415] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001018f2 : mov eax, dword ptr [rip + 0xe85f0] ; movsxd rcx, edx ; jmp 0x10190d
0x0000000000037485 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037495 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035931 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000001164d4 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000000271dd : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000002c5ea : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000002aa49 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000002b7ec : mov eax, dword ptr [rsp + 0x30] ; call rax
0x00000000000e5cd3 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000e5bad : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x00000000001182bf : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000001224a9 : mov eax, dword ptr [rsp + 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000123e2c : mov eax, dword ptr [rsp + 4] ; add rsp, 0x28 ; ret
0x0000000000037a16 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000004b585 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000001162f8 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000124131 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x000000000011ce39 : mov eax, dword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x000000000013ab90 : mov eax, dword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x00000000000e5d68 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000001235a0 : mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f434 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000123666 : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000125aa7 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000125b08 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000048a8c : mov eax, dword ptr [rsp] ; call rax
0x0000000000048bf1 : mov eax, dword ptr [rsp] ; mov r13, r15 ; add r15, r12 ; call rax
0x000000000013b8af : mov eax, dword ptr [rsp] ; mov rdi, r12 ; call rax
0x0000000000048b7c : mov eax, dword ptr [rsp] ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000012849a : mov eax, dword ptr [rsp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128498 : mov eax, dword ptr fs:[r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000463ff : mov eax, eax ; add rsp, 0x118 ; ret
0x0000000000098046 : mov eax, eax ; add rsp, 0x18 ; ret
0x00000000000d7bf0 : mov eax, eax ; add rsp, 8 ; ret
0x000000000013f99a : mov eax, eax ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000013f6fc : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000011a106 : mov eax, eax ; mov byte ptr [rsi - 1], 0 ; ret
0x0000000000116e6c : mov eax, eax ; mov eax, 0x10 ; syscall
0x0000000000098014 : mov eax, eax ; mov eax, 0x23 ; syscall
0x00000000001184a2 : mov eax, eax ; mov eax, 0x4a ; syscall
0x0000000000118562 : mov eax, eax ; mov eax, 0x4b ; syscall
0x0000000000111c6a : mov eax, eax ; mov eax, 0x55 ; syscall
0x0000000000046791 : mov eax, eax ; mov eax, 0x82 ; syscall
0x0000000000111ae2 : mov eax, eax ; mov eax, 3 ; syscall
0x00000000001229d8 : mov eax, eax ; mov eax, r8d ; ret
0x0000000000116bb5 : mov eax, eax ; mov ebx, dword ptr fs:[r10] ; syscall
0x00000000001112b2 : mov eax, eax ; mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000001602d7 : mov eax, eax ; mov qword ptr [rdx], 0 ; ret
0x0000000000156509 : mov eax, eax ; mov rax, r8 ; pop rbx ; ret
0x000000000004aff9 : mov eax, eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000116b8b : mov eax, eax ; movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x00000000000e28f6 : mov eax, eax ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d67b : mov eax, eax ; pop r12 ; pop r13 ; ret
0x000000000008e709 : mov eax, eax ; pop r12 ; ret
0x000000000009d6e7 : mov eax, eax ; pop r13 ; ret
0x0000000000087603 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013eaf1 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032c56 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009c784 : mov eax, eax ; pop rbp ; ret
0x00000000000a015f : mov eax, eax ; pop rbx ; pop r12 ; ret
0x0000000000049910 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a041 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049f9c : mov eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000046c00 : mov eax, eax ; pop rbx ; ret
0x0000000000036dd2 : mov eax, eax ; ret
0x0000000000190894 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000000e5ff2 : mov eax, eax ; syscall
0x000000000018bef1 : mov eax, eax ; vzeroupper ; ret
0x00000000000889de : mov eax, ebp ; mov edx, dword ptr [rbx] ; jmp 0x889b4
0x0000000000147cc7 : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000a21a6 : mov eax, ebp ; mov rdx, r12 ; pop r12 ; pop r13 ; ret
0x0000000000144a51 : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2bc9 : mov eax, ebp ; pop r12 ; pop r13 ; ret
0x00000000000859ce : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bfde1 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bfd86 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009269e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008de27 : mov eax, ebp ; ret
0x0000000000058ca3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000090acf : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011fe5b : mov eax, ebx ; mov rax, r8 ; pop rbx ; ret
0x00000000000ef155 : mov eax, ebx ; mov rdi, r15 ; call 0xebb67
0x00000000000a5e1a : mov eax, ebx ; pop rbx ; cmovne rax, rdi ; ret
0x00000000000cd0e6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000090a14 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ce9e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000116bf3 : mov eax, ebx ; pop rbx ; ret
0x00000000000445f4 : mov eax, ebx ; ret
0x00000000000a6e58 : mov eax, ebx ; sub rax, r9 ; add r10, rax ; jmp 0xa6e17
0x000000000009d157 : mov eax, ebx ; syscall
0x0000000000065897 : mov eax, ebx ; test r8d, r8d ; jne 0x658a8 ; pop rbx ; ret
0x0000000000058b6b : mov eax, ecx ; adc eax, eax ; ret
0x0000000000046613 : mov eax, ecx ; add rsp, 0x148 ; ret
0x0000000000116d70 : mov eax, ecx ; add rsp, 0x38 ; ret
0x000000000011b954 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x000000000003bef6 : mov eax, ecx ; pop r12 ; ret
0x000000000007d278 : mov eax, ecx ; pop r14 ; ret
0x000000000007d1c7 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003bec8 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9d2b : mov eax, ecx ; pop rbx ; ret
0x00000000000894a8 : mov eax, ecx ; ret
0x0000000000055ba6 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000004b5eb : mov eax, ecx ; sub rsi, rdi ; syscall
0x00000000000463af : mov eax, ecx ; syscall
0x00000000000372e4 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000132ed8 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000132e94 : mov eax, edi ; bswap eax ; ret
0x00000000000e1c36 : mov eax, edi ; call rax
0x000000000004a604 : mov eax, edi ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x000000000004a655 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000011a084 : mov eax, edi ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000006c3aa : mov eax, edi ; mov r12, r14 ; jmp 0x68def
0x0000000000132ef2 : mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000098861 : mov eax, edi ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000000ac0bd : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005e612 : mov eax, edi ; ret
0x0000000000132ea4 : mov eax, edi ; rol ax, 8 ; ret
0x0000000000132d5e : mov eax, edi ; sar rax, 6 ; ret
0x0000000000132f68 : mov eax, edi ; shr eax, 0x18 ; ret
0x000000000018ddc1 : mov eax, edi ; vzeroupper ; ret
0x000000000012c5cc : mov eax, edx ; cmove eax, ecx ; ret
0x000000000013fd13 : mov eax, edx ; movsxd rdx, ecx ; ret
0x0000000000059be5 : mov eax, edx ; pop rbx ; ret
0x0000000000047409 : mov eax, edx ; ret
0x0000000000027242 : mov eax, edx ; syscall
0x0000000000046195 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000001539a4 : mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x00000000001502bc : mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000010a332 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137c42 : mov eax, esi ; pop rbx ; ret
0x00000000000e5fe2 : mov eax, esi ; syscall
0x00000000000f770e : mov eax, esp ; mov rcx, r13 ; call 0xf3957
0x0000000000088b95 : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a3579 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x0000000000037b79 : mov eax, esp ; pop r12 ; ret
0x000000000011d932 : mov eax, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000011ccb9 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000088ab3 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033484 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913d6 : mov eax, esp ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000004aab3 : mov eax, esp ; pop rbp ; pop r12 ; ret
0x000000000011abf5 : mov eax, esp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000005ea25 : mov eax, esp ; pop rbx ; pop r12 ; ret
0x0000000000083bd1 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913bc : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000037adb : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c42f : mov eax, esp ; pop rdx ; pop r12 ; ret
0x0000000000142389 : mov eax, r10d ; ret
0x0000000000116bf2 : mov eax, r11d ; pop rbx ; ret
0x0000000000088b94 : mov eax, r12d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a06c6 : mov eax, r12d ; pop r12 ; ret
0x0000000000128917 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015103d : mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000011abf4 : mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000005ea24 : mov eax, r12d ; pop rbx ; pop r12 ; ret
0x0000000000089952 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047465 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5e7f : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011804a : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000124706 : mov eax, r14d ; syscall
0x0000000000098045 : mov eax, r8d ; add rsp, 0x18 ; ret
0x000000000011a56f : mov eax, r8d ; add rsp, 8 ; ret
0x000000000013f6fb : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000116bb4 : mov eax, r8d ; mov ebx, dword ptr fs:[r10] ; syscall
0x000000000004aff8 : mov eax, r8d ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000116b8a : mov eax, r8d ; movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x00000000000e28f5 : mov eax, r8d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008e708 : mov eax, r8d ; pop r12 ; ret
0x0000000000153530 : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032c55 : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000001105df : mov eax, r8d ; pop rbp ; ret
0x000000000004990f : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a040 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a17f : mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000046bff : mov eax, r8d ; pop rbx ; ret
0x0000000000036dd1 : mov eax, r8d ; ret
0x00000000000e5ff1 : mov eax, r8d ; syscall
0x0000000000116d6f : mov eax, r9d ; add rsp, 0x38 ; ret
0x00000000000c9d2a : mov eax, r9d ; pop rbx ; ret
0x00000000000894a7 : mov eax, r9d ; ret
0x000000000004b5ea : mov eax, r9d ; sub rsi, rdi ; syscall
0x000000000009005b : mov eax, r9d ; syscall
0x00000000000af831 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af841 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000af821 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000032a8f : mov ebp, 0x48001302 ; mov edi, ebx ; call r12
0x0000000000188061 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x00000000000e4667 : mov ebp, 0x89480010 ; ret 0x8548
0x000000000015025b : mov ebp, 0xc8 ; call rax
0x00000000000af8a1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000188091 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000af881 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000af861 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000af947 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x00000000000af777 : mov ebp, 0xf80148c0 ; ret
0x0000000000187f50 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000b4d7c : mov ebp, 0xf80148c6 ; ret
0x00000000000791af : mov ebp, 0xfffff6e8 ; call 0x25497
0x000000000007373c : mov ebp, 0xfffffa68 ; add byte ptr [rdi], cl ; test esp, esi ; retf
0x0000000000164d58 : mov ebp, 0xfffffb28 ; mov rdx, rax ; jmp 0x164d7d
0x00000000000e9cb8 : mov ebp, 0xfffffb28 ; mov rdx, rax ; jmp 0xe9cdd
0x0000000000108211 : mov ebp, 0xfffffe78 ; call 0x144c87
0x0000000000039052 : mov ebp, 0xffffff70 ; call 0x25357
0x0000000000049078 : mov ebp, 0xffffff78 ; call 0x25357
0x000000000014afb9 : mov ebp, 3 ; call 0x37a57
0x0000000000123c60 : mov ebp, 5 ; jmp 0x123c30
0x000000000006c7a8 : mov ebp, ds ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000047b19 : mov ebp, eax ; mov rdi, r12 ; call rbx
0x000000000011d213 : mov ebp, ebx ; mov rdi, rbp ; call r12
0x000000000004619b : mov ebp, ecx ; nop ; jmp rdx
0x0000000000048bf5 : mov ebp, edi ; add r15, r12 ; call rax
0x00000000000fca12 : mov ebp, edi ; add rdx, rsi ; jmp rdx
0x0000000000088a0c : mov ebp, edi ; push rbx ; mov rbx, rsi ; call 0x25428
0x0000000000034fda : mov ebp, edi ; test rax, rax ; je 0x34fea ; call rax
0x000000000010ac4a : mov ebp, edx ; jmp 0x10ac14
0x0000000000085b67 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000001392ff : mov ebx, 0x310007fc ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000bfe5e : mov ebx, 0x39f88948 ; retf 0xe375
0x0000000000170a97 : mov ebx, 0x46f00ff2 ; retf
0x00000000000a3771 : mov ebx, 0x48000eb8 ; cmove eax, edx ; ret
0x00000000000a6594 : mov ebx, 0x4bb ; add byte ptr [rax + 0x29], cl ; ret
0x000000000016b5c4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000016b5e2 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000012f779 : mov ebx, 0x89000001 ; ret 0x2944
0x000000000007bdb5 : mov ebx, 0x89000005 ; ret 0xc083
0x00000000000e4837 : mov ebx, 0x89480010 ; ret 0x8548
0x00000000000f0b0d : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x0000000000097958 : mov ebx, 0xafb8341 ; je 0x97967 ; ret
0x00000000001573a0 : mov ebx, 0xbc0f48eb ; ret
0x0000000000116bb8 : mov ebx, dword ptr [r10] ; syscall
0x00000000000e6519 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000116bb9 : mov ebx, dword ptr [rdx] ; syscall
0x0000000000116bb7 : mov ebx, dword ptr fs:[r10] ; syscall
0x00000000001588cf : mov ebx, eax ; call 0x25334
0x00000000000d9151 : mov ebx, eax ; call 0x253b4
0x00000000000e1669 : mov ebx, ebp ; mov rdi, rbp ; call r12
0x0000000000122131 : mov ebx, edi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x0000000000088a10 : mov ebx, esi ; call 0x25424
0x000000000011c915 : mov ebx, esi ; je 0x11c925 ; pop rbx ; ret
0x000000000002fe37 : mov ebx, esi ; mov r10, rcx ; jmp 0x2fdf5
0x000000000002fe87 : mov ebx, esi ; mov r10, rcx ; jmp 0x2fe45
0x00000000000463aa : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000016e971 : mov ecx, 0x39480007 ; retf 0x830f
0x000000000005e5bb : mov ecx, 0x3a8 ; mov rsp, rdx ; ret
0x00000000000db471 : mov ecx, 0x3eca014c ; jmp rdx
0x00000000000a3ac3 : mov ecx, 0x48000d25 ; cmovne eax, edx ; ret
0x00000000000a6e56 : mov ecx, 0x4cd88948 ; sub eax, ecx ; add r10, rax ; jmp 0xa6e19
0x00000000000ccf12 : mov ecx, 0x83480e8b ; ret 0x4804
0x00000000000e263c : mov ecx, 0x840f0010 ; retf 0xfffe
0x00000000000335e3 : mov ecx, 0x85ffff1f ; ror byte ptr [rdi], 0x94 ; ret
0x000000000007c764 : mov ecx, 0x89000002 ; ret 0xc083
0x000000000013b799 : mov ecx, 0x89480000 ; ret
0x00000000000e9aea : mov ecx, 0x8948fff3 ; ret
0x00000000001582d3 : mov ecx, 0x89fffcb1 ; ret
0x00000000000a378d : mov ecx, 0xf480001 ; ret 0xfc3
0x0000000000116d8a : mov ecx, 0xffffffff ; mov dword ptr fs:[rdx], eax ; jmp 0x116d68
0x00000000000c9d25 : mov ecx, 0xffffffff ; mov eax, r9d ; pop rbx ; ret
0x00000000000a70ff : mov ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x39], cl ; ret 0xffff
0x000000000016e98e : mov ecx, dword ptr [rbp + 1] ; fnstcw word ptr [rsi] ; jmp r9
0x0000000000082471 : mov ecx, dword ptr [rbp - 0x508] ; jmp rax
0x000000000012628c : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12629f ; ret
0x00000000001262f5 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126307 ; ret
0x0000000000126bdc : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126bef ; ret
0x0000000000126c39 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126c4f ; ret
0x0000000000193010 : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000001693de : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000000b1fc3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000f1a03 : mov ecx, dword ptr [rip + 0xf84df] ; movsxd rcx, edx ; jmp 0xf1a3b
0x000000000016b763 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b963 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016bb63 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000ba070 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba0b1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000171203 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171193 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171123 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171045 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170fd5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170f65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170ef5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170e85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170e15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170da5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001712e5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000ba051 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000ce16d : mov ecx, dword ptr [rsp + 0x10] ; call r14
0x0000000000153cd0 : mov ecx, dword ptr [rsp + 0x10] ; mov rdi, r15 ; call rcx
0x00000000000c23d0 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xc23f2
0x00000000000c4d70 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xc4d92
0x00000000000c7590 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xc75b2
0x00000000000cee20 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xcee42
0x000000000015051f : mov ecx, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rcx
0x0000000000149cc3 : mov ecx, dword ptr [rsp + 8] ; mov rdi, rbp ; call rcx
0x000000000011b957 : mov ecx, dword ptr [rsp + 8] ; syscall
0x00000000001078a6 : mov ecx, dword ptr [rsp] ; call rax
0x000000000014b16b : mov ecx, dword ptr [rsp] ; xor eax, eax ; mov rdi, rbx ; call rcx
0x000000000010d7c1 : mov ecx, eax ; mov rdi, qword ptr [r14] ; call 0x10a297
0x00000000000ab809 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f7711 : mov ecx, ebp ; call 0xf3954
0x00000000001480c5 : mov ecx, ebp ; call r10
0x00000000000ebb05 : mov ecx, ebp ; jmp 0xebacf
0x00000000000ed836 : mov ecx, ebp ; jmp 0xed800
0x0000000000154d71 : mov ecx, ebp ; mov esi, 9 ; call qword ptr [rax]
0x00000000000fb3ff : mov ecx, ebx ; call 0xf7e14
0x00000000000a59d1 : mov ecx, ebx ; mov rdx, r8 ; jmp 0xa59f9
0x0000000000149c04 : mov ecx, ebx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000125b7d : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000bedc6 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000816b9 : mov ecx, esi ; jmp rax
0x000000000003119e : mov ecx, esi ; mov r10, rcx ; jmp 0x31155
0x00000000000313fe : mov ecx, esi ; mov r10, rcx ; jmp 0x313b5
0x00000000000314ab : mov ecx, esi ; mov r10, rcx ; jmp 0x3146e
0x0000000000147cca : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000008d8c0 : mov ecx, esi ; mov rdi, r15 ; call r12
0x0000000000081076 : mov ecx, esi ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cda46 : mov ecx, esp ; mov rdx, r13 ; call rbx
0x0000000000155cee : mov ecx, esp ; mov rdx, rbp ; mov rsi, rbx ; call rax
0x00000000000ebb04 : mov ecx, r13d ; jmp 0xebad0
0x00000000000ed835 : mov ecx, r13d ; jmp 0xed801
0x0000000000119060 : mov edi, 0x1fc0 ; call 0x25337
0x000000000012ae82 : mov edi, 0x2000004 ; call rax
0x00000000001290f3 : mov edi, 0x400 ; call 0x25337
0x000000000011bead : mov edi, 0x48000d26 ; add esp, 8 ; ret
0x000000000015af2d : mov edi, 0x48fff2b2 ; add esp, 8 ; ret
0x0000000000073ac9 : mov edi, 0x89000009 ; ret 0xc083
0x0000000000085b6b : mov edi, 0xe0 ; call rax
0x0000000000085b2f : mov edi, 0xe0 ; jmp rax
0x00000000000e227d : mov edi, 0xe8000008 ; retf 0x659
0x00000000001102ec : mov edi, 0xf8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000110380 : mov edi, 0xf8 ; ret
0x00000000000ab6b2 : mov edi, 3 ; jmp 0xa81a8
0x00000000000ab69c : mov edi, 4 ; jmp 0xa81a8
0x00000000000d8a9e : mov edi, dword ptr [rax + rdi*8 + 0x110] ; call 0x255a9
0x00000000000d8b18 : mov edi, dword ptr [rax + rdi*8 + 0xb0] ; call 0x255a9
0x000000000011dff3 : mov edi, dword ptr [rax] ; call rbx
0x000000000019a7bc : mov edi, dword ptr [rbp + 0x10] ; add rdi, rbp ; call r12
0x0000000000115844 : mov edi, dword ptr [rbp + 0x3c] ; call 0x111ab5
0x000000000004a5ca : mov edi, dword ptr [rbp + 8] ; call rax
0x0000000000108210 : mov edi, dword ptr [rbp - 0x188] ; call 0x144c88
0x0000000000164d57 : mov edi, dword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0x164d7e
0x00000000000e9cb7 : mov edi, dword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0xe9cde
0x000000000013dc09 : mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000290e3 : mov edi, dword ptr [rbp - 0x68] ; call 0x25355
0x00000000000f8864 : mov edi, dword ptr [rbp - 0x70] ; call 0x25355
0x00000000000290ec : mov edi, dword ptr [rbp - 0x80] ; call 0x25355
0x0000000000049077 : mov edi, dword ptr [rbp - 0x88] ; call 0x25358
0x0000000000039051 : mov edi, dword ptr [rbp - 0x90] ; call 0x25358
0x00000000000791ae : mov edi, dword ptr [rbp - 0x918] ; call 0x25498
0x000000000011cda0 : mov edi, dword ptr [rbp] ; call rbx
0x00000000000f8849 : mov edi, dword ptr [rbx + 0x10] ; add rbx, 0x20 ; call 0x25359
0x00000000000a1a71 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x00000000000a19d2 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r14 ; call rax
0x000000000013af1d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x13af19 ; pop rbx ; ret
0x00000000000e8905 : mov edi, dword ptr [rbx + rsi*8] ; call 0x25355
0x00000000000f8856 : mov edi, dword ptr [rbx - 0x20] ; call 0x25355
0x0000000000154b49 : mov edi, dword ptr [rbx] ; jmp 0x154b13
0x000000000013da20 : mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x000000000003fef3 : mov edi, dword ptr [rdi + 0x10] ; call 0x3c125
0x0000000000055412 : mov edi, dword ptr [rdi + 0x10] ; syscall
0x000000000010891c : mov edi, dword ptr [rdi + 0x18] ; call 0x25355
0x000000000003feea : mov edi, dword ptr [rdi + 0x18] ; call 0x3c125
0x0000000000151055 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151069 ; ret
0x0000000000157715 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157729 ; ret
0x00000000000a182d : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000085b6a : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x0000000000085b2e : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000003fefc : mov edi, dword ptr [rdi + 8] ; call 0x3c125
0x000000000011dd2d : mov edi, dword ptr [rdi] ; call rbx
0x000000000013d964 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x000000000012ef44 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000010d7c4 : mov edi, dword ptr [rsi] ; call 0x10a294
0x000000000011dbbc : mov edi, dword ptr [rsi] ; call rbx
0x00000000001183c0 : mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000001111e8 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000001164b5 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x115 ; syscall
0x0000000000123d55 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x120 ; syscall
0x0000000000124055 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x45 ; syscall
0x0000000000163d3e : mov edi, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x0000000000114670 : mov edi, dword ptr [rsp + 0x20] ; call 0xe10c6
0x000000000002edee : mov edi, dword ptr [rsp + 0x38] ; call r15
0x000000000002e7fa : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002d86c : mov edi, dword ptr [rsp + 0x40] ; call r14
0x000000000002ddba : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x000000000002d179 : mov edi, dword ptr [rsp + 0x48] ; call rbx
0x00000000000fb3fa : mov edi, dword ptr [rsp + 0x48] ; mov rcx, rbx ; call 0xf7e19
0x000000000002fb78 : mov edi, dword ptr [rsp + 0x50] ; call rbx
0x0000000000030e8b : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002f78e : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002acf3 : mov edi, dword ptr [rsp + 0x58] ; call r14
0x000000000002c243 : mov edi, dword ptr [rsp + 0x58] ; call r15
0x000000000002ba5d : mov edi, dword ptr [rsp + 0x58] ; call rbx
0x000000000002bdbe : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e5 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa44 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7e7 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002b472 : mov edi, dword ptr [rsp + 0x60] ; call r15
0x000000000002b02f : mov edi, dword ptr [rsp + 0x60] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000123eb3 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x133 ; syscall
0x0000000000123334 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x2b ; syscall
0x0000000000122663 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0xe8 ; syscall
0x00000000001182a5 : mov edi, dword ptr [rsp + 0xc] ; syscall
0x0000000000122490 : mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000095353 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000122713 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x114 ; syscall
0x0000000000116564 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x11d ; syscall
0x00000000001176f2 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x13 ; syscall
0x0000000000122930 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x130 ; syscall
0x000000000004b564 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x13e ; syscall
0x0000000000117792 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x14 ; syscall
0x000000000011bc34 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x1a ; syscall
0x0000000000123400 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x2a ; syscall
0x0000000000123842 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x2e ; syscall
0x00000000001236e2 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x2f ; syscall
0x00000000000e5a8b : mov edi, dword ptr [rsp + 8] ; mov eax, 0x3d ; syscall
0x00000000001117dc : mov edi, dword ptr [rsp + 8] ; mov eax, 0x48 ; syscall
0x0000000000111354 : mov edi, dword ptr [rsp + 8] ; mov eax, 1 ; syscall
0x0000000000115c34 : mov edi, dword ptr [rsp + 8] ; mov eax, 7 ; syscall
0x00000000001162dd : mov edi, dword ptr [rsp + 8] ; syscall
0x00000000001112b4 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000094be6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000011da92 : mov edi, dword ptr [rsp] ; call rbx
0x000000000010f415 : mov edi, dword ptr [rsp] ; mov eax, 0x11 ; syscall
0x00000000001227c4 : mov edi, dword ptr [rsp] ; mov eax, 0x116 ; syscall
0x000000000010f4c5 : mov edi, dword ptr [rsp] ; mov eax, 0x12 ; syscall
0x0000000000130257 : mov edi, dword ptr [rsp] ; mov eax, 0xe6 ; syscall
0x0000000000097a03 : mov edi, eax ; jmp rax
0x00000000000e5cb9 : mov edi, eax ; mov eax, 0x22 ; syscall
0x0000000000122334 : mov edi, eax ; mov eax, 0x3c ; syscall
0x0000000000164143 : mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000463b4 : mov edi, eax ; mov eax, 0xba ; syscall
0x00000000001494a8 : mov edi, eax ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000001588cc : mov edi, eax ; mov rbx, rax ; call 0x25337
0x0000000000145f0b : mov edi, eax ; mov rdx, qword ptr [rdx + r14*8] ; call 0xa21d8
0x000000000005d110 : mov edi, eax ; mov rsi, rax ; call 0x593b7
0x0000000000115a30 : mov edi, ebp ; call 0x111cf4
0x0000000000109063 : mov edi, ebp ; call 0x25354
0x0000000000039239 : mov edi, ebp ; call 0x254a4
0x00000000000d9310 : mov edi, ebp ; call 0x255a4
0x000000000007e034 : mov edi, ebp ; call 0x8a274
0x000000000009beb0 : mov edi, ebp ; call 0x98104
0x0000000000049ccb : mov edi, ebp ; call 0xe5fc4
0x000000000014c44a : mov edi, ebp ; call qword ptr [rax]
0x00000000000e166c : mov edi, ebp ; call r12
0x0000000000027271 : mov edi, ebp ; call rax
0x0000000000047b57 : mov edi, ebp ; call rbx
0x0000000000149cc8 : mov edi, ebp ; call rcx
0x000000000014a68c : mov edi, ebp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001105ad : mov edi, ebp ; mov eax, 0x135 ; syscall
0x0000000000117a4c : mov edi, ebp ; mov eax, 0x147 ; syscall
0x0000000000117bac : mov edi, ebp ; mov eax, 0x148 ; syscall
0x0000000000111d99 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000004a08b : mov edi, ebp ; mov eax, 0xca ; syscall
0x0000000000130173 : mov edi, ebp ; mov eax, 0xe4 ; syscall
0x000000000011bafd : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000009a76c : mov edi, ebp ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x000000000011d92f : mov edi, ebp ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000a129c : mov edi, ebp ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000000cdbc8 : mov edi, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008a2b4 : mov edi, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000009d6f4 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a7bd : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000009ce61 : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014b3ad : mov edi, ebp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000159c9f : mov edi, ebp ; xor eax, eax ; call r14
0x0000000000159cb9 : mov edi, ebp ; xor eax, eax ; call rcx
0x0000000000087a57 : mov edi, ebp ; xor edx, edx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011cc85 : mov edi, ebp ; xor esi, esi ; call r12
0x00000000000c0800 : mov edi, ebx ; call 0xcd2c4
0x00000000000285c5 : mov edi, ebx ; call r12
0x0000000000029625 : mov edi, ebx ; call r14
0x00000000000e91ec : mov edi, ebx ; call r15
0x0000000000084348 : mov edi, ebx ; call r8
0x0000000000083d52 : mov edi, ebx ; call rax
0x000000000014b171 : mov edi, ebx ; call rcx
0x0000000000028d1c : mov edi, ebx ; call rsi
0x000000000009e021 : mov edi, ebx ; mov eax, 0xca ; syscall
0x00000000001480c2 : mov edi, ebx ; mov rcx, r13 ; call r10
0x000000000014b264 : mov edi, ebx ; xor eax, eax ; call rcx
0x000000000004a2e9 : mov edi, ecx ; call r8
0x0000000000122134 : mov edi, ecx ; sub rsp, 8 ; call rsi
0x000000000012dfc1 : mov edi, edi ; call 0x12a1e4
0x0000000000048b98 : mov edi, edi ; call 0x255d4
0x000000000011fb0d : mov edi, edi ; call 0x4bdf4
0x00000000000ef158 : mov edi, edi ; call 0xebb64
0x000000000008d8c3 : mov edi, edi ; call r12
0x000000000011ec9c : mov edi, edi ; call r14
0x000000000008c334 : mov edi, edi ; call rax
0x0000000000153cd5 : mov edi, edi ; call rcx
0x0000000000048a29 : mov edi, edi ; imul rdx, rbp ; call 0x25508
0x000000000009f31c : mov edi, edi ; mov eax, 0xca ; syscall
0x000000000009031c : mov edi, edi ; mov eax, r9d ; syscall
0x0000000000108919 : mov edi, edi ; mov r15, qword ptr [r15 + 0x18] ; call 0x25358
0x000000000012dda0 : mov edi, edi ; mov rdx, rax ; xor eax, eax ; call 0x12a899
0x00000000000e1b23 : mov edi, edi ; mov rsi, qword ptr [rsp + 0x60] ; call r12
0x0000000000126694 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e5fe0 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000e5fef : mov edi, edx ; mov eax, r8d ; syscall
0x000000000004a639 : mov edi, edx ; shl rdi, 0x20 ; or rax, rdi ; ret
0x00000000001090a5 : mov edi, esi ; call 0x25354
0x00000000000a19ff : mov edi, esi ; call rax
0x0000000000049c3d : mov edi, esi ; mov eax, 0xca ; syscall
0x000000000011d2dc : mov edi, esi ; mov rax, qword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000039e81 : mov edi, esp ; call 0x1168e4
0x0000000000150535 : mov edi, esp ; call 0x14d004
0x00000000001193a6 : mov edi, esp ; call 0x255d4
0x00000000000fc372 : mov edi, esp ; call 0xf8da4
0x000000000014bffa : mov edi, esp ; call qword ptr [rbx]
0x00000000000489fb : mov edi, esp ; call rax
0x0000000000047b1c : mov edi, esp ; call rbx
0x0000000000150524 : mov edi, esp ; call rcx
0x000000000009eec6 : mov edi, esp ; call rdx
0x00000000000c094a : mov edi, esp ; lea r9, [rsp + 0x30] ; call rbx
0x000000000012460e : mov edi, esp ; mov eax, 0x14 ; syscall
0x0000000000047582 : mov edi, esp ; mov eax, 0x81 ; syscall
0x0000000000049e34 : mov edi, esp ; mov eax, 0xca ; syscall
0x0000000000124791 : mov edi, esp ; mov eax, r14d ; syscall
0x0000000000090059 : mov edi, esp ; mov eax, r9d ; syscall
0x00000000000604dd : mov edi, esp ; mov qword ptr [rbp - 0xe8], r8 ; call rax
0x00000000000c1020 : mov edi, esp ; mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x00000000000c0aa0 : mov edi, esp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000009cfb2 : mov edi, esp ; mov rsi, rbp ; call 0x99297
0x0000000000039e80 : mov edi, r12d ; call 0x1168e5
0x000000000012460d : mov edi, r12d ; mov eax, 0x14 ; syscall
0x0000000000047581 : mov edi, r12d ; mov eax, 0x81 ; syscall
0x0000000000124790 : mov edi, r12d ; mov eax, r14d ; syscall
0x0000000000090058 : mov edi, r12d ; mov eax, r9d ; syscall
0x0000000000115a2f : mov edi, r13d ; call 0x111cf5
0x000000000009031b : mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000123f6a : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a5ab6 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000015e6f2 : mov edx, 0x100091c ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000013f08d : mov edx, 0x104 ; cmove eax, edx ; ret
0x0000000000104315 : mov edx, 0x3ed00148 ; jmp rax
0x00000000000ffe05 : mov edx, 0x3ed0014c ; jmp rax
0x0000000000170a17 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000130dd2 : mov edx, 0x4800062a ; cmove eax, edx ; ret
0x000000000016b7c4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000016b7e2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000000a1ab0 : mov edx, 0x5bfff84c ; pop rbp ; pop r12 ; ret
0x00000000000e7e9a : mov edx, 0x7f ; cmovne rax, rdx ; ret
0x000000000010747e : mov edx, 0x83000002 ; stc ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x0000000000058312 : mov edx, 0x89000000 ; retf 0xc183
0x000000000008c612 : mov edx, 0x89000011 ; ret 0x3948
0x0000000000102777 : mov edx, 0x8948000e ; ret 0x8b48
0x0000000000045bdd : mov edx, 0x9483ff2 ; ret 0x840f
0x00000000001987da : mov edx, 0x94d3ff3 ; ret
0x00000000000a35e4 : mov edx, 0xf480000 ; ret 0xfc3
0x00000000000a2538 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x000000000002a87b : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000013fd28 : mov edx, 0xffffffff ; ret
0x00000000000470ed : mov edx, 1 ; cmove eax, edx ; ret
0x0000000000105d34 : mov edx, 2 ; cmove eax, edx ; ret
0x00000000001224ec : mov edx, 8 ; syscall
0x000000000008fe7c : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000586f0 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000033f9b : mov edx, dword ptr [rax + rdi*8] ; test rdx, rdx ; je 0x33fad ; call rdx
0x00000000000271da : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007bbd9 : mov edx, dword ptr [rbp - 0x518] ; jmp rax
0x000000000010f84c : mov edx, dword ptr [rbx + 4] ; jmp 0x10f818
0x00000000000889e0 : mov edx, dword ptr [rbx] ; jmp 0x889b2
0x000000000009577d : mov edx, dword ptr [rbx] ; jmp 0x9574f
0x0000000000184cbf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001833ed : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001264de : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x1264f7 ; ret
0x0000000000126e0e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x126e27 ; ret
0x000000000006e250 : mov edx, dword ptr [rcx] ; jmp 0x6acb7
0x000000000018f272 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18f262 ; ret
0x00000000000c03ee : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000058156 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000a1b05 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0xa1b08 ; ret
0x0000000000145f0e : mov edx, dword ptr [rdx + rsi*8] ; call 0xa21d5
0x000000000019bcc1 : mov edx, dword ptr [rsi + 0x1f0fffe8] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba092 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000ba083 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ba0d3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba0e3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016b1a1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000016b560 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016adf1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bb6a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000bc4f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000ba060 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000018c650 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000be150 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000bb6f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000bc541 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000ba0a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000bb681 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000bc4c1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000ba041 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000e5b8e : mov edx, dword ptr [rsp + 0x10] ; mov eax, 0xf7 ; syscall
0x00000000000abc19 : mov edx, dword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x0000000000123647 : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; syscall
0x000000000014a104 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000015073a : mov edx, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call rdx
0x00000000000e1dcb : mov edx, dword ptr [rsp + 0x28] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000012231a : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x0000000000119787 : mov edx, eax ; jmp 0x1197ba
0x0000000000119966 : mov edx, eax ; jmp 0x119999
0x000000000011fe03 : mov edx, eax ; jmp 0x11fe1a
0x000000000011fe41 : mov edx, eax ; jmp 0x11fe52
0x000000000014c2e0 : mov edx, eax ; jmp 0x14c273
0x0000000000152dd0 : mov edx, eax ; jmp 0x152d93
0x0000000000164d5e : mov edx, eax ; jmp 0x164d77
0x00000000000659c1 : mov edx, eax ; jmp 0x659d8
0x00000000000718e8 : mov edx, eax ; jmp 0x718ff
0x0000000000073d69 : mov edx, eax ; jmp 0x73d80
0x00000000000a547a : mov edx, eax ; jmp 0xa5493
0x00000000000a59d4 : mov edx, eax ; jmp 0xa59f6
0x00000000000e9cbe : mov edx, eax ; jmp 0xe9cd7
0x0000000000142441 : mov edx, eax ; mov byte ptr [r10], 0 ; ret
0x00000000000463c0 : mov edx, eax ; mov eax, 0xea ; syscall
0x00000000000d914e : mov edx, eax ; mov rbx, rax ; call 0x253b7
0x000000000009eb0c : mov edx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000012dda3 : mov edx, eax ; xor eax, eax ; call 0x12a896
0x00000000000cda49 : mov edx, ebp ; call rbx
0x0000000000111661 : mov edx, ebp ; mov eax, 0x10d ; syscall
0x000000000011cc9a : mov edx, ebp ; mov esi, 1 ; call r12
0x000000000016367c : mov edx, ebp ; mov esi, r12d ; call rax
0x00000000000a04b2 : mov edx, ebp ; mov rdi, r12 ; call rax
0x0000000000048433 : mov edx, ebp ; mov rdi, r12 ; call rbx
0x00000000000a129f : mov edx, ebp ; mov rsi, r12 ; call rax
0x0000000000047b2e : mov edx, ebp ; mov rsi, r12 ; call rbx
0x0000000000047b51 : mov edx, ebp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x000000000014d116 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000047b6c : mov edx, ebp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000155cf1 : mov edx, ebp ; mov rsi, rbx ; call rax
0x000000000012f563 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012fa73 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012fb41 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x0000000000119a4b : mov edx, ecx ; jmp 0x119a7a
0x0000000000164f00 : mov edx, ecx ; jmp 0x164ed9
0x000000000002fe3a : mov edx, ecx ; jmp 0x2fdf2
0x000000000002fe8a : mov edx, ecx ; jmp 0x2fe42
0x00000000000311a1 : mov edx, ecx ; jmp 0x31152
0x0000000000031401 : mov edx, ecx ; jmp 0x313b2
0x0000000000031466 : mov edx, ecx ; jmp 0x31423
0x00000000000314ae : mov edx, ecx ; jmp 0x3146b
0x00000000000a0a80 : mov edx, ecx ; jmp 0xa0a39
0x00000000000e9e5f : mov edx, ecx ; jmp 0xe9e39
0x0000000000112695 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x0000000000065fb5 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x0000000000112e85 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x0000000000112f45 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000001230b5 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x0000000000122b75 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000001225b5 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x0000000000123145 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000001231a5 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000001231d5 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x0000000000110b35 : mov edx, ecx ; mov eax, 0x14c ; syscall
0x0000000000122ed5 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000116245 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x0000000000123a05 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x0000000000123975 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000001234c5 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000e5b05 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x0000000000122f65 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x0000000000122ea5 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x0000000000122d85 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x0000000000122f95 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x0000000000122fc5 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x00000000001201b5 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x0000000000120155 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x0000000000120035 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x0000000000120065 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000001200c5 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x000000000011ffa5 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x000000000011bcf5 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000001242d5 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x0000000000115d85 : mov edx, ecx ; mov eax, 0xdd ; syscall
0x0000000000122d25 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000a0b8b : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000137cee : mov edx, edi ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x000000000012f84b : mov edx, edi ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x00000000000bf135 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000007b04c : mov edx, edx ; jmp rax
0x00000000000fc977 : mov edx, esi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000117a4a : mov edx, esi ; mov edi, ebp ; mov eax, 0x147 ; syscall
0x0000000000117baa : mov edx, esi ; mov edi, ebp ; mov eax, 0x148 ; syscall
0x0000000000163a2d : mov edx, esi ; mov esi, r12d ; call rax
0x0000000000048a89 : mov edx, esi ; mov rax, qword ptr [rsp] ; call rax
0x00000000000489f5 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000012f4fe : mov edx, esi ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x0000000000115fc0 : mov edx, esi ; xor esi, esi ; syscall
0x0000000000116cf1 : mov edx, esp ; mov eax, 0x10 ; syscall
0x0000000000115cd6 : mov edx, esp ; mov eax, 0x10f ; syscall
0x0000000000146339 : mov edx, esp ; mov eax, 0x81 ; syscall
0x000000000014d251 : mov edx, esp ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000a21a9 : mov edx, esp ; pop r12 ; pop r13 ; ret
0x000000000008772c : mov edx, esp ; pop rbx ; pop r12 ; jmp rax
0x000000000008772b : mov edx, r12d ; pop rbx ; pop r12 ; jmp rax
0x0000000000111660 : mov edx, r13d ; mov eax, 0x10d ; syscall
0x000000000011cc99 : mov edx, r13d ; mov esi, 1 ; call r12
0x00000000000718e7 : mov edx, r8d ; jmp 0x71900
0x0000000000073d68 : mov edx, r8d ; jmp 0x73d81
0x00000000000463bf : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000105905 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001264f8 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000017146c : mov es, word ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000bc30e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000011951d : mov esi, 0x148fff0 ; ret
0x00000000000a029d : mov esi, 0x348feda ; push rax ; adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x00000000000bf28c : mov esi, 0x3ef00148 ; jmp rax
0x00000000000ffcb3 : mov esi, 0x3ef0014c ; jmp rax
0x00000000001628db : mov esi, 0x40 ; mov rdi, rbx ; call rax
0x00000000000d276e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x00000000000a3bde : mov esi, 0x480001b0 ; cmove eax, edx ; ret
0x00000000000c9aed : mov esi, 0x5bd005d9 ; str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000061b0f : mov esi, 0x77cf390e ; jrcxz 0x61b63 ; mov eax, eax ; ret
0x00000000000979dc : mov esi, 0x80 ; syscall
0x000000000009d152 : mov esi, 0x81 ; mov eax, ebx ; syscall
0x00000000001086f2 : mov esi, 0x83480142 ; ret 0x8401
0x000000000002a40a : mov esi, 0x83480142 ; ret 0xf01
0x000000000004be62 : mov esi, 0x83480143 ; ret
0x0000000000129ba2 : mov esi, 0x8348014a ; ret 0x4801
0x000000000012d632 : mov esi, 0x8348014b ; ret
0x00000000000e371a : mov esi, 0x83480153 ; ret
0x000000000004d495 : mov esi, 0x8348016b ; ret
0x00000000000f9e8e : mov esi, 0x89000000 ; retf 0xc239
0x000000000010c741 : mov esi, 0x89003d44 ; ret
0x0000000000056564 : mov esi, 0x89410257 ; ret
0x00000000001085fe : mov esi, 0x89480045 ; ret 0xb70f
0x00000000000f972f : mov esi, 0x8948fff2 ; ret 0x8548
0x00000000000e3984 : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000012ab34 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c080c : mov esi, 0xe8fffffe ; retf
0x00000000000ab9e5 : mov esi, 0xf2390714 ; je 0xab9e7 ; ret
0x00000000000a2cda : mov esi, 0xf480001 ; ret 0x66c3
0x000000000010875c : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000011cc9c : mov esi, 1 ; call r12
0x0000000000084342 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000083d4c : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000154d73 : mov esi, 9 ; call qword ptr [rax]
0x0000000000028d18 : mov esi, dword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x000000000011d210 : mov esi, dword ptr [rbx] ; mov r13, rbx ; mov rdi, rbp ; call r12
0x00000000000bedf7 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015f132 : mov esi, dword ptr [rsp + 0x10] ; call 0x11bb96
0x000000000014a109 : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000c1023 : mov esi, dword ptr [rsp + 0x10] ; call rbx
0x0000000000163d43 : mov esi, dword ptr [rsp + 0x10] ; call rsi
0x00000000001162d9 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 8] ; syscall
0x000000000009d949 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x18 ; jmp rax
0x00000000000c0aa3 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000001183bc : mov esi, dword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x000000000009d431 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000282c6 : mov esi, dword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x000000000009eec1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rdx
0x0000000000150530 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, r12 ; call 0x14d009
0x000000000002ddb5 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000009db99 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, r13 ; call rax
0x000000000002d174 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002ba58 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002fb73 : mov esi, dword ptr [rsp + 0x58] ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x00000000000e1b26 : mov esi, dword ptr [rsp + 0x60] ; call r12
0x000000000011784d : mov esi, dword ptr [rsp + 8] ; mov eax, 0x127 ; syscall
0x000000000011790d : mov esi, dword ptr [rsp + 8] ; mov eax, 0x128 ; syscall
0x000000000012364c : mov esi, dword ptr [rsp + 8] ; syscall
0x000000000005d113 : mov esi, eax ; call 0x593b4
0x00000000000f4831 : mov esi, eax ; call 0xf0ab4
0x0000000000074747 : mov esi, eax ; jmp 0x7124e
0x0000000000110090 : mov esi, eax ; mov eax, 0x75 ; syscall
0x00000000001100b9 : mov esi, eax ; mov eax, 0x77 ; syscall
0x000000000012216c : mov esi, eax ; mov rdi, rbp ; call r12
0x0000000000119963 : mov esi, eax ; mov rdx, r8 ; jmp 0x11999c
0x0000000000162753 : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009cfb5 : mov esi, ebp ; call 0x99294
0x00000000000a1831 : mov esi, ebp ; call rax
0x0000000000039e7e : mov esi, ebp ; mov edi, r12d ; call 0x1168e7
0x0000000000090056 : mov esi, ebp ; mov edi, r12d ; mov eax, r9d ; syscall
0x0000000000149c01 : mov esi, ebp ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000489f8 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000159c9c : mov esi, ebp ; mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159cb6 : mov esi, ebp ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000014d254 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000e0143 : mov esi, ebp ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000155cf4 : mov esi, ebx ; call rax
0x0000000000090319 : mov esi, ebx ; mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000156ff0 : mov esi, ebx ; mov rdi, rbp ; call qword ptr [rax]
0x000000000009eb09 : mov esi, ebx ; mov rdx, r8 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000012478e : mov esi, ecx ; mov edi, r12d ; mov eax, r14d ; syscall
0x0000000000047953 : mov esi, edi ; call r14
0x0000000000117049 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000047b6f : mov esi, edi ; mov rdi, r12 ; call rbx
0x00000000000d3668 : mov esi, edi ; mov rdi, rbp ; call rbx
0x000000000014b261 : mov esi, edi ; mov rdi, rbx ; xor eax, eax ; call rcx
0x00000000000e012e : mov esi, edi ; xor edi, edi ; call rax
0x0000000000150e0e : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000012ef48 : mov esi, edx ; call rax
0x00000000000393ac : mov esi, esi ; add rbx, 1 ; call 0x255d8
0x00000000000a19d6 : mov esi, esi ; call rax
0x00000000000a0b8e : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000011fb0a : mov esi, esi ; mov rdi, r15 ; call 0x4bdf7
0x000000000015aaa0 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000137cf1 : mov esi, esi ; mov rdi, rbx ; call rax
0x000000000014c395 : mov esi, esp ; call qword ptr [rax]
0x000000000009fb51 : mov esi, esp ; call rax
0x0000000000047b31 : mov esi, esp ; call rbx
0x0000000000130171 : mov esi, esp ; mov edi, ebp ; mov eax, 0xe4 ; syscall
0x0000000000048b80 : mov esi, esp ; mov rdi, r13 ; call rax
0x0000000000047b54 : mov esi, esp ; mov rdi, r13 ; call rbx
0x0000000000048b95 : mov esi, esp ; mov rdi, r15 ; call 0x255d7
0x000000000011ec99 : mov esi, esp ; mov rdi, r15 ; call r14
0x000000000014c447 : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a02de : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000015a972 : mov esi, esp ; mov rdi, rbx ; call rcx
0x00000000001480bf : mov esi, esp ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x00000000001193a3 : mov esi, esp ; mov rdi, rsp ; call 0x255d7
0x000000000009e812 : mov esi, esp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a2b0 : mov esi, esp ; pop rbx ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000016367e : mov esi, r12d ; call rax
0x00000000000a38bb : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000af331 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000af361 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af351 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000014dc3b : mov esp, 0x70088 ; add byte ptr [rdi + rcx - 0x49], al ; retf 0xc148
0x000000000002ce03 : mov esp, 0x8514 ; add byte ptr [rax + 0x39], cl ; retf
0x000000000009b8fd : mov esp, 0x8be80011 ; retf
0x000000000008ce99 : mov esp, 0x8c48348 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a389a : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000ba785 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x000000000018c5d1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18c582
0x000000000018ccf1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18cca2
0x000000000018d371 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d322
0x000000000018d7c1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d762
0x000000000018e061 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e012
0x000000000018e4e1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e477
0x00000000000b4f23 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000013ae78 : mov esp, 0xe8000b42 ; outsd dx, dword ptr [rsi] ; retf 0xfff5
0x00000000000af42b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000af341 : mov esp, 0xf80148c0 ; ret
0x0000000000187c72 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000091324 : mov esp, eax ; mov rax, r12 ; pop r12 ; ret
0x0000000000046198 : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000091331 : mov esp, ebp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000c23d5 : mov esp, ebp ; setne dl ; jmp 0xc23ed
0x00000000000c4d75 : mov esp, ebp ; setne dl ; jmp 0xc4d8d
0x00000000000c7595 : mov esp, ebp ; setne dl ; jmp 0xc75ad
0x00000000000cee25 : mov esp, ebp ; setne dl ; jmp 0xcee3d
0x000000000005e5c1 : mov esp, edx ; ret
0x000000000006c3ad : mov esp, esi ; jmp 0x68dec
0x000000000014c435 : mov esp, esp ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000009f3ad : mov fs, edi ; adc al, 0 ; add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x00000000000ff09e : mov fs, word ptr [rdx - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000197b98 : mov gs, word ptr [rdi - 0x72000006] ; ret
0x000000000005893b : mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x0000000000193004 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000013f824 : mov qword ptr [r9], r10 ; ret
0x000000000013f8ec : mov qword ptr [r9], rcx ; ret
0x000000000013f8ca : mov qword ptr [r9], rdi ; ret
0x0000000000089efc : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008a6cb : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000098b16 : mov qword ptr [rax + 0x20], rdx ; add rsp, 8 ; ret
0x000000000008fe7f : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000089f00 : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000089f3e : mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008affc : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000095934 : mov qword ptr [rax + 8], 0 ; ret
0x000000000011759b : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000013f5fc : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000008862d : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000101d6e : mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x000000000009d2af : mov qword ptr [rax], rdi ; ret
0x00000000001221d6 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036d47 : mov qword ptr [rax], rdx ; ret
0x000000000008afc7 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000e8995 : mov qword ptr [rbp - 0x38], rax ; xor eax, eax ; call 0x25498
0x00000000000735a9 : mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x6f7ff
0x0000000000079bde : mov qword ptr [rbp - 0x500], rsi ; jmp rax
0x0000000000119782 : mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1197bf
0x000000000007a6bb : mov qword ptr [rbp - 0x538], r10 ; call 0x76939
0x0000000000076724 : mov qword ptr [rbp - 0x598], rax ; jmp 0x7294a
0x000000000006e1ae : mov qword ptr [rbp - 0x5a0], rcx ; jmp 0x6acb9
0x00000000000604df : mov qword ptr [rbp - 0xe8], r8 ; call rax
0x00000000000a5178 : mov qword ptr [rbp], 0 ; jmp 0xa5156
0x0000000000033326 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000162e19 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015ab85 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000162dd1 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001026ce : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008fe98 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000096607 : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c9e5 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000063fe5 : mov qword ptr [rbx], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000163304 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a02ec : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001564d5 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000a168b : mov qword ptr [rbx], rdi ; call rcx
0x000000000006eca0 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a5c6 : mov qword ptr [rbx], rdx ; mov rdi, qword ptr [rbp + 8] ; call rax
0x00000000000a1762 : mov qword ptr [rbx], rsi ; call rcx
0x000000000017bd03 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd13 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd23 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd33 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000008dad9 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000017bcc0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017bce0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017bcf0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017bd00 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd10 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd20 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd30 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017bcd0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017bcb0 : mov qword ptr [rcx], rdx ; ret
0x00000000000595ce : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000bb8bc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000bc72c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba20c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba1ec : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000be38c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baeff : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000ba24f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba26f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba230 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000015a76a : mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000094a66 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009049e : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000015a82c : mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x000000000015a6f4 : mov qword ptr [rdi + 0x18], rsi ; mov eax, r8d ; ret
0x000000000015a72c : mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x000000000015affc : mov qword ptr [rdi + 0x20], 0 ; ret
0x0000000000094a97 : mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000000bb87c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000bc6ec : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000ba1ac : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000be34c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb89c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000bc70c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000ba1cc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000be36c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000171047 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170fd7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170f67 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170ef7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb77a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bc5da : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000170e87 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0fa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000be23a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb79a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000bc5fa : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000170e17 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba10a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000be25a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb7ba : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000bc61a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x0000000000170da7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba11a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000be27a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000058b67 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000059557 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000005ae55 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000094a6a : mov qword ptr [rdi + 8], rax ; ret
0x00000000000910e2 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000018dacb : mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x000000000018c67b : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000bf21e : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bedea : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000016ac84 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016acc2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000594be : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000016b00b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170857 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b1eb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001707d7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b3db : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170757 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b5ac : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001706c8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b7ac : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170638 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b9ac : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001705a8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000bb080 : mov qword ptr [rdi - 1], rdx ; ret
0x000000000005943d : mov qword ptr [rdi - 8], r9 ; ret
0x000000000016ac88 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016acc6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000016ae3b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af37 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae83 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001708d7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014d87e : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ab919 : mov qword ptr [rdi], r8 ; mov rax, r12 ; pop r12 ; ret
0x000000000005940c : mov qword ptr [rdi], r9 ; ret
0x00000000000abcd5 : mov qword ptr [rdi], rax ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000ab8bb : mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x000000000005e60e : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000045363 : mov qword ptr [rdi], rax ; subsd xmm0, xmm1 ; ret
0x00000000000bb706 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000bada6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000ba0d6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba0e6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000ba0f7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000ba107 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000ba117 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000ba0c7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000ba0b6 : mov qword ptr [rdi], rcx ; ret
0x000000000018f122 : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000abb45 : mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000bb6f3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000bc543 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000bb0a0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb0c0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb0d0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb0e0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb0f0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb0b0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000004537d : mov qword ptr [rdi], rdx ; ret
0x00000000000be1a3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000193001 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000005ac4a : mov qword ptr [rdi], rsi ; ret
0x0000000000089163 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000014c527 : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014c501 : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c505 : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000009174c : mov qword ptr [rdx + 0xf0], rcx ; pop rbx ; ret
0x00000000000858fa : mov qword ptr [rdx + 0xf0], rcx ; ret
0x000000000017e0ba : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000179d2a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000017e0da : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000179d4a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000017e0fa : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000179d6a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000017df8a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000179c5a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000001602d9 : mov qword ptr [rdx], 0 ; ret
0x000000000017df33 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001243f3 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000179c03 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000037580 : mov qword ptr [rdx], rax ; ret
0x000000000008a24b : mov qword ptr [rdx], rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ab7f1 : mov qword ptr [rdx], rcx ; ret
0x00000000000a2a45 : mov qword ptr [rip + 0x14b1bc], rax ; ret
0x000000000009844b : mov qword ptr [rip + 0x151e3e], rax ; ret
0x0000000000098422 : mov qword ptr [rip + 0x151e5f], rax ; ret
0x0000000000098402 : mov qword ptr [rip + 0x151e77], rax ; ret
0x00000000000980e8 : mov qword ptr [rip + 0x1521f9], rax ; ret
0x00000000000980d0 : mov qword ptr [rip + 0x152209], rax ; ret
0x00000000000980b6 : mov qword ptr [rip + 0x152213], rdx ; ret
0x0000000000098078 : mov qword ptr [rip + 0x152219], rax ; ret
0x0000000000098068 : mov qword ptr [rip + 0x152231], rax ; ret
0x0000000000026a8f : mov qword ptr [rip + 0x1c95b2], rax ; ret
0x000000000016425f : mov qword ptr [rip + 0x89902], rsi ; ret
0x000000000013038b : mov qword ptr [rip + 0xbe7e6], rax ; pop rbp ; ret
0x0000000000124c78 : mov qword ptr [rip + 0xc56e1], rbx ; pop rbx ; ret
0x0000000000124c5e : mov qword ptr [rip + 0xc56fb], rbx ; pop rbx ; ret
0x000000000014b58a : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004b468 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000004af43 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000910bb : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x000000000011644e : mov qword ptr [rsi + 0x48], rax ; ret
0x000000000014b526 : mov qword ptr [rsi + 8], rax ; ret
0x00000000000586f3 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000904a2 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013e7d1 : mov qword ptr [rsi], rdi ; ret
0x000000000013ed0e : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000009a76e : mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x0000000000132af9 : mov qword ptr [rsp + 0x10], rax ; call 0x8ed77
0x000000000014c2da : mov qword ptr [rsp + 0x10], rax ; mov rdx, rax ; jmp 0x14c279
0x000000000009aae5 : mov qword ptr [rsp + 0x18], r8 ; call rax
0x0000000000158a4d : mov qword ptr [rsp + 0x18], rax ; xor eax, eax ; call 0x25499
0x00000000000d89de : mov qword ptr [rsp + 0x30], rdi ; call 0x25497
0x00000000000d354a : mov qword ptr [rsp + 0x50], r12 ; call rbx
0x000000000011dfed : mov qword ptr [rsp + 8], r8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000009abd4 : mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000009ab00 : mov qword ptr [rsp + 8], rax ; call rdx
0x000000000008c32e : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000140055 : mov qword ptr [rsp], 0 ; call rax
0x000000000003f61d : mov qword ptr [rsp], r9 ; call 0x3c126
0x0000000000091c4f : mov qword ptr [rsp], rcx ; mov rdi, rbp ; call rax
0x0000000000156392 : mov qword ptr fs:[rax], rdx ; ret
0x00000000001564d4 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000004a5c5 : mov qword ptr fs:[rbx], rdx ; mov rdi, qword ptr [rbp + 8] ; call rax
0x000000000003757f : mov qword ptr fs:[rdx], rax ; ret
0x00000000000bede9 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000007bbd8 : mov r10, qword ptr [rbp - 0x518] ; jmp rax
0x0000000000142440 : mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000002fe39 : mov r10, rcx ; jmp 0x2fdf3
0x000000000002fe38 : mov r10, rcx ; jmp 0x2fdf4
0x000000000002fe89 : mov r10, rcx ; jmp 0x2fe43
0x000000000002fe88 : mov r10, rcx ; jmp 0x2fe44
0x00000000000311a0 : mov r10, rcx ; jmp 0x31153
0x0000000000031400 : mov r10, rcx ; jmp 0x313b3
0x0000000000031465 : mov r10, rcx ; jmp 0x31424
0x0000000000031464 : mov r10, rcx ; jmp 0x31425
0x00000000000314ad : mov r10, rcx ; jmp 0x3146c
0x0000000000112694 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000065fb4 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x0000000000112e84 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x0000000000112f44 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000001230b4 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x0000000000122b74 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000001225b4 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x0000000000123144 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000001231a4 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000001231d4 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x0000000000122ed4 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000116244 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x0000000000123a04 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x0000000000123974 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000001234c4 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000e5b04 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000122f64 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x0000000000122ea4 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x0000000000122d84 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x0000000000122f94 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x0000000000122fc4 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x00000000001201b4 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x0000000000120154 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x0000000000120034 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x0000000000120064 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000001200c4 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x000000000011ffa4 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000011bcf4 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000001242d4 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x0000000000122d24 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x000000000007b04b : mov r10, rdx ; jmp rax
0x0000000000170a16 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000016b7e1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000110b34 : mov r10d, ecx ; mov eax, 0x14c ; syscall
0x0000000000115d84 : mov r10d, ecx ; mov eax, 0xdd ; syscall
0x000000000002fe36 : mov r11, rsi ; mov r10, rcx ; jmp 0x2fdf6
0x000000000002fe86 : mov r11, rsi ; mov r10, rcx ; jmp 0x2fe46
0x0000000000170a96 : mov r11d, 0x46f00ff2 ; retf
0x000000000016b5e1 : mov r11d, 0x4f7f0ff3 ; retf
0x00000000000c23d4 : mov r12, r13 ; setne dl ; jmp 0xc23ee
0x00000000000c4d74 : mov r12, r13 ; setne dl ; jmp 0xc4d8e
0x00000000000c7594 : mov r12, r13 ; setne dl ; jmp 0xc75ae
0x00000000000cee24 : mov r12, r13 ; setne dl ; jmp 0xcee3e
0x000000000006c3ac : mov r12, r14 ; jmp 0x68ded
0x0000000000091323 : mov r12, rax ; mov rax, r12 ; pop r12 ; ret
0x000000000014c434 : mov r12, rsp ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000048bf4 : mov r13, r15 ; add r15, r12 ; call rax
0x0000000000047b18 : mov r13, rax ; mov rdi, r12 ; call rbx
0x000000000011d212 : mov r13, rbx ; mov rdi, rbp ; call r12
0x00000000000fca11 : mov r13, rdi ; add rdx, rsi ; jmp rdx
0x000000000014afb8 : mov r13d, 3 ; call 0x37a58
0x0000000000119962 : mov r14, r8 ; mov rdx, r8 ; jmp 0x11999d
0x0000000000074746 : mov r14d, eax ; jmp 0x7124f
0x000000000010891b : mov r15, qword ptr [r15 + 0x18] ; call 0x25356
0x0000000000145f0a : mov r15, rax ; mov rdx, qword ptr [rdx + r14*8] ; call 0xa21d9
0x000000000011d2e2 : mov r15d, r13d ; call rax
0x0000000000101d6b : mov r8, qword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x00000000001018f1 : mov r8, qword ptr [rip + 0xe85f0] ; movsxd rcx, edx ; jmp 0x10190e
0x000000000011b953 : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000156508 : mov r8, rax ; mov rax, r8 ; pop rbx ; ret
0x00000000000889dd : mov r8, rbp ; mov edx, dword ptr [rbx] ; jmp 0x889b5
0x000000000011fe5a : mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x0000000000119784 : mov r8b, 0x48 ; mov edx, eax ; jmp 0x1197bd
0x0000000000110ea0 : mov r8d, 0x10c ; syscall
0x00000000000cb746 : mov r8d, 0xfd83949 ; xchg eax, ebx ; ret
0x0000000000057ea0 : mov r8d, 0xffffffff ; mov eax, r8d ; ret
0x000000000008fe00 : mov r8d, 1 ; mov eax, r8d ; ret
0x0000000000166794 : mov r8d, dword ptr [rax] ; jmp 0x166760
0x000000000008b0e2 : mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000036e2b : mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000166793 : mov r8d, dword ptr fs:[rax] ; jmp 0x166761
0x0000000000116e6b : mov r8d, eax ; mov eax, 0x10 ; syscall
0x0000000000098013 : mov r8d, eax ; mov eax, 0x23 ; syscall
0x00000000001184a1 : mov r8d, eax ; mov eax, 0x4a ; syscall
0x0000000000118561 : mov r8d, eax ; mov eax, 0x4b ; syscall
0x0000000000111c69 : mov r8d, eax ; mov eax, 0x55 ; syscall
0x0000000000046790 : mov r8d, eax ; mov eax, 0x82 ; syscall
0x0000000000111ae1 : mov r8d, eax ; mov eax, 3 ; syscall
0x00000000001229d7 : mov r8d, eax ; mov eax, r8d ; ret
0x00000000001112b1 : mov r8d, eax ; mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000000ef154 : mov r8d, ebx ; mov rdi, r15 ; call 0xebb68
0x00000000000f770d : mov r8d, r12d ; mov rcx, r13 ; call 0xf3958
0x000000000006c3a9 : mov r8d, r15d ; mov r12, r14 ; jmp 0x68df0
0x0000000000082470 : mov r9, qword ptr [rbp - 0x508] ; jmp rax
0x00000000000f1a02 : mov r9, qword ptr [rip + 0xf84df] ; movsxd rcx, edx ; jmp 0xf1a3c
0x00000000000ce16c : mov r9, qword ptr [rsp + 0x10] ; call r14
0x000000000011b956 : mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000154d70 : mov r9, rbp ; mov esi, 9 ; call qword ptr [rax]
0x00000000000816b8 : mov r9, rsi ; jmp rax
0x000000000003119d : mov r9, rsi ; mov r10, rcx ; jmp 0x31156
0x00000000000313fd : mov r9, rsi ; mov r10, rcx ; jmp 0x313b6
0x00000000000314aa : mov r9, rsi ; mov r10, rcx ; jmp 0x3146f
0x000000000004630e : mov rax, -1 ; ret
0x0000000000046470 : mov rax, 0xf ; syscall
0x00000000000d2d00 : mov rax, 1 ; ret
0x00000000000d2d10 : mov rax, 2 ; ret
0x00000000000d2d20 : mov rax, 3 ; ret
0x00000000000d2d30 : mov rax, 4 ; ret
0x00000000000d2d40 : mov rax, 5 ; ret
0x00000000000d2d50 : mov rax, 6 ; ret
0x00000000000d2d60 : mov rax, 7 ; ret
0x0000000000097f95 : mov rax, qword ptr [0x10] ; ret
0x0000000000097e9e : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x97eb2 ; call rax
0x0000000000125167 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000125157 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000001494aa : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000117f1b : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x117f2e ; ret
0x0000000000120240 : mov rax, qword ptr [rax + 0x1a0] ; ret
0x0000000000162d42 : mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x000000000008ca04 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000012ffef : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000152fe0 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000153920 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120238 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000958bf : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x958c1 ; ret
0x000000000012021a : mov rax, qword ptr [rax + 8] ; ret
0x0000000000097f0e : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x97f22 ; call rax
0x0000000000033d1d : mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x33d31 ; call rax
0x000000000019b957 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x19b96b ; call rax
0x00000000000372c8 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000036d92 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000003594f : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004a6da : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014447c : mov rax, qword ptr [rax] ; ret
0x000000000011f316 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x11f388 ; call rax
0x0000000000097e16 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x97e28 ; call rax
0x000000000009c3c9 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x9c3db ; call rax
0x00000000000966e8 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x966e8 ; ret
0x00000000001076b6 : mov rax, qword ptr [rbp - 0x1e0] ; call rax
0x000000000011d2de : mov rax, qword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000094bc0 : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008fe94 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000009531c : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000015644d : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x156469 ; pop rbx ; ret
0x0000000000179c00 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015a6b4 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1064 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000019ba54 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x19ba6d ; call rax
0x000000000008fee8 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008fdb8 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000969f4 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000159015 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000159988 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159110 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000014c390 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000966f5 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000979ff : mov rax, qword ptr [rdi] ; mov rdi, r8 ; jmp rax
0x0000000000037256 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000035910 : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000007436d : mov rax, qword ptr [rdx] ; jmp 0x70609
0x00000000000a19b1 : mov rax, qword ptr [rip + 0x148598] ; call qword ptr [rax]
0x00000000000a17d0 : mov rax, qword ptr [rip + 0x148779] ; call qword ptr [rax]
0x00000000000a1700 : mov rax, qword ptr [rip + 0x148849] ; call qword ptr [rax]
0x000000000009aab8 : mov rax, qword ptr [rip + 0x14f301] ; xor edi, edi ; call qword ptr [rax]
0x000000000009aa72 : mov rax, qword ptr [rip + 0x14f347] ; call qword ptr [rax]
0x00000000000969d4 : mov rax, qword ptr [rip + 0x154bc5] ; ret
0x0000000000032af4 : mov rax, qword ptr [rip + 0x1b9b4d] ; ret
0x0000000000029134 : mov rax, qword ptr [rip + 0x1c6d7d] ; ret
0x0000000000029124 : mov rax, qword ptr [rip + 0x1c6d9d] ; ret
0x000000000015fe70 : mov rax, qword ptr [rip + 0x8b619] ; call qword ptr [rax]
0x000000000015f863 : mov rax, qword ptr [rip + 0x8bc26] ; call qword ptr [rax]
0x0000000000162f40 : mov rax, qword ptr [rip + 0x8cf41] ; call qword ptr [rax]
0x0000000000035930 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000271dc : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e9 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa48 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7eb : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000037a15 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000004b584 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000124130 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x000000000011ce38 : mov rax, qword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x000000000013ab8f : mov rax, qword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x000000000012359f : mov rax, qword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f433 : mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000123665 : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000125aa6 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000125b07 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000048a8b : mov rax, qword ptr [rsp] ; call rax
0x000000000013b8ae : mov rax, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x0000000000097f94 : mov rax, qword ptr fs:[0x10] ; ret
0x000000000014447b : mov rax, qword ptr fs:[rax] ; ret
0x000000000011ce37 : mov rax, qword ptr ss:[rsp + 8] ; mov rdi, r13 ; call rax
0x000000000005e492 : mov rax, r10 ; pop rbx ; ret
0x000000000005e427 : mov rax, r10 ; ret
0x00000000000a3d5f : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000445f3 : mov rax, r11 ; ret
0x00000000000d4d95 : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a3578 : mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000037b78 : mov rax, r12 ; pop r12 ; ret
0x000000000011d931 : mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000011ccb8 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000033483 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913d5 : mov rax, r12 ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000004aab2 : mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000006581e : mov rax, r12 ; pop rbx ; pop r12 ; ret
0x0000000000083bd0 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913bb : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000037ada : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c42e : mov rax, r12 ; pop rdx ; pop r12 ; ret
0x0000000000144a50 : mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2bc8 : mov rax, r13 ; pop r12 ; pop r13 ; ret
0x00000000000bfde0 : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bfd85 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1c35 : mov rax, r15 ; call rax
0x00000000000d7bef : mov rax, r8 ; add rsp, 8 ; ret
0x000000000013f999 : mov rax, r8 ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000011a105 : mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000009d67a : mov rax, r8 ; pop r12 ; pop r13 ; ret
0x0000000000098865 : mov rax, r8 ; pop r12 ; ret
0x000000000009d6e6 : mov rax, r8 ; pop r13 ; ret
0x000000000013eaf0 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000889b6 : mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000009c783 : mov rax, r8 ; pop rbp ; ret
0x00000000000a015e : mov rax, r8 ; pop rbx ; pop r12 ; ret
0x0000000000085814 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009ce91 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049f9b : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000009c58c : mov rax, r8 ; pop rbx ; ret
0x0000000000049f90 : mov rax, r8 ; ret
0x000000000018bef0 : mov rax, r8 ; vzeroupper ; ret
0x000000000003bef5 : mov rax, r9 ; pop r12 ; ret
0x000000000007d277 : mov rax, r9 ; pop r14 ; ret
0x000000000003bec7 : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab8be : mov rax, r9 ; ret
0x000000000009269d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090ace : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a5e19 : mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000090a13 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6e57 : mov rax, rbx ; sub rax, r9 ; add r10, rax ; jmp 0xa6e18
0x0000000000065896 : mov rax, rbx ; test r8d, r8d ; jne 0x658a9 ; pop rbx ; ret
0x000000000004a654 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000ac0bc : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005e611 : mov rax, rdi ; ret
0x0000000000132d5d : mov rax, rdi ; sar rax, 6 ; ret
0x000000000018ddc0 : mov rax, rdi ; vzeroupper ; ret
0x000000000013fd12 : mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000059be4 : mov rax, rdx ; pop rbx ; ret
0x0000000000058d35 : mov rax, rdx ; ret
0x0000000000137c41 : mov rax, rsi ; pop rbx ; ret
0x000000000004619a : mov rbp, r9 ; nop ; jmp rdx
0x0000000000088a0b : mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x25429
0x0000000000034fd9 : mov rbp, rdi ; test rax, rax ; je 0x34feb ; call rax
0x000000000010ac49 : mov rbp, rdx ; jmp 0x10ac15
0x00000000000e6518 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e1668 : mov rbx, r13 ; mov rdi, rbp ; call r12
0x00000000001588ce : mov rbx, rax ; call 0x25335
0x00000000000d9150 : mov rbx, rax ; call 0x253b5
0x0000000000088a0f : mov rbx, rsi ; call 0x25425
0x000000000011c914 : mov rbx, rsi ; je 0x11c926 ; pop rbx ; ret
0x00000000001078a5 : mov rcx, qword ptr [r12] ; call rax
0x00000000000ba0b0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000153ccf : mov rcx, qword ptr [rsp + 0x10] ; mov rdi, r15 ; call rcx
0x000000000015051e : mov rcx, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rcx
0x0000000000149cc2 : mov rcx, qword ptr [rsp + 8] ; mov rdi, rbp ; call rcx
0x000000000014b16a : mov rcx, qword ptr [rsp] ; xor eax, eax ; mov rdi, rbx ; call rcx
0x00000000000a59d0 : mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59fa
0x00000000000cda45 : mov rcx, r12 ; mov rdx, r13 ; call rbx
0x0000000000155ced : mov rcx, r12 ; mov rdx, rbp ; mov rsi, rbx ; call rax
0x00000000000f7710 : mov rcx, r13 ; call 0xf3955
0x00000000001480c4 : mov rcx, r13 ; call r10
0x0000000000147cc9 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008d8bf : mov rcx, r14 ; mov rdi, r15 ; call r12
0x000000000010d7c0 : mov rcx, rax ; mov rdi, qword ptr [r14] ; call 0x10a298
0x00000000000ab808 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000fb3fe : mov rcx, rbx ; call 0xf7e15
0x00000000000fb3fd : mov rcx, rbx ; call 0xf7e16
0x0000000000149c03 : mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000bedc5 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011da91 : mov rdi, qword ptr [r12] ; call rbx
0x000000000019a7bb : mov rdi, qword ptr [r13 + 0x10] ; add rdi, rbp ; call r12
0x000000000011dafb : mov rdi, qword ptr [r13] ; call rbx
0x000000000010d7c3 : mov rdi, qword ptr [r14] ; call 0x10a295
0x000000000011dbbb : mov rdi, qword ptr [r14] ; call rbx
0x000000000003fef2 : mov rdi, qword ptr [r15 + 0x10] ; call 0x3c126
0x000000000003fee9 : mov rdi, qword ptr [r15 + 0x18] ; call 0x3c126
0x000000000003fefb : mov rdi, qword ptr [r15 + 8] ; call 0x3c126
0x000000000011dd2c : mov rdi, qword ptr [r15] ; call rbx
0x000000000011dff2 : mov rdi, qword ptr [r8] ; call rbx
0x000000000004a5c9 : mov rdi, qword ptr [rbp + 8] ; call rax
0x000000000010820f : mov rdi, qword ptr [rbp - 0x188] ; call 0x144c89
0x0000000000164d56 : mov rdi, qword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0x164d7f
0x00000000000e9cb6 : mov rdi, qword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0xe9cdf
0x00000000000290e2 : mov rdi, qword ptr [rbp - 0x68] ; call 0x25356
0x00000000000f8863 : mov rdi, qword ptr [rbp - 0x70] ; call 0x25356
0x00000000000290eb : mov rdi, qword ptr [rbp - 0x80] ; call 0x25356
0x0000000000049076 : mov rdi, qword ptr [rbp - 0x88] ; call 0x25359
0x0000000000039050 : mov rdi, qword ptr [rbp - 0x90] ; call 0x25359
0x00000000000791ad : mov rdi, qword ptr [rbp - 0x918] ; call 0x25499
0x000000000011cd9f : mov rdi, qword ptr [rbp] ; call rbx
0x00000000000a1a70 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000a19d1 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r14 ; call rax
0x00000000000e8904 : mov rdi, qword ptr [rbx + r14*8] ; call 0x25356
0x00000000000f8855 : mov rdi, qword ptr [rbx - 0x20] ; call 0x25356
0x0000000000154b48 : mov rdi, qword ptr [rbx] ; jmp 0x154b14
0x00000000000a182c : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000085b69 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000085b2d : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000012ef43 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000011466f : mov rdi, qword ptr [rsp + 0x20] ; call 0xe10c7
0x000000000002eded : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002d86b : mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002ddb9 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002d178 : mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002fb77 : mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x000000000002acf2 : mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002c242 : mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002ba5c : mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002b471 : mov rdi, qword ptr [rsp + 0x60] ; call r15
0x0000000000094be5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000011dcd2 : mov rdi, qword ptr ds:[r14] ; call rbx
0x0000000000150534 : mov rdi, r12 ; call 0x14d005
0x00000000000fc371 : mov rdi, r12 ; call 0xf8da5
0x000000000014bff9 : mov rdi, r12 ; call qword ptr [rbx]
0x00000000000489fa : mov rdi, r12 ; call rax
0x0000000000047b1b : mov rdi, r12 ; call rbx
0x0000000000150523 : mov rdi, r12 ; call rcx
0x000000000009eec5 : mov rdi, r12 ; call rdx
0x00000000000c0949 : mov rdi, r12 ; lea r9, [rsp + 0x30] ; call rbx
0x0000000000049e33 : mov rdi, r12 ; mov eax, 0xca ; syscall
0x00000000000c101f : mov rdi, r12 ; mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x00000000000c0a9f : mov rdi, r12 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000009cfb1 : mov rdi, r12 ; mov rsi, rbp ; call 0x99298
0x0000000000109062 : mov rdi, r13 ; call 0x25355
0x0000000000039238 : mov rdi, r13 ; call 0x254a5
0x00000000000d930f : mov rdi, r13 ; call 0x255a5
0x000000000007e033 : mov rdi, r13 ; call 0x8a275
0x0000000000147ccc : mov rdi, r13 ; call r12
0x0000000000048b82 : mov rdi, r13 ; call rax
0x0000000000047b56 : mov rdi, r13 ; call rbx
0x000000000004a41c : mov rdi, r13 ; mov eax, 0xca ; syscall
0x000000000009a76b : mov rdi, r13 ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x00000000000a129b : mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000001090a4 : mov rdi, r14 ; call 0x25355
0x00000000000a19fe : mov rdi, r14 ; call rax
0x0000000000049c3c : mov rdi, r14 ; mov eax, 0xca ; syscall
0x000000000012dfc0 : mov rdi, r15 ; call 0x12a1e5
0x0000000000048b97 : mov rdi, r15 ; call 0x255d5
0x000000000011fb0c : mov rdi, r15 ; call 0x4bdf5
0x00000000000ef157 : mov rdi, r15 ; call 0xebb65
0x000000000008d8c2 : mov rdi, r15 ; call r12
0x000000000011ec9b : mov rdi, r15 ; call r14
0x000000000008c333 : mov rdi, r15 ; call rax
0x0000000000153cd4 : mov rdi, r15 ; call rcx
0x0000000000048a28 : mov rdi, r15 ; imul rdx, rbp ; call 0x25509
0x000000000009f31b : mov rdi, r15 ; mov eax, 0xca ; syscall
0x0000000000108918 : mov rdi, r15 ; mov r15, qword ptr [r15 + 0x18] ; call 0x25359
0x00000000000e1b22 : mov rdi, r15 ; mov rsi, qword ptr [rsp + 0x60] ; call r12
0x0000000000097a02 : mov rdi, r8 ; jmp rax
0x00000000001494a7 : mov rdi, r8 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000004a2e8 : mov rdi, r9 ; call r8
0x0000000000122333 : mov rdi, rax ; mov eax, 0x3c ; syscall
0x00000000000463b3 : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000005d10f : mov rdi, rax ; mov rsi, rax ; call 0x593b8
0x000000000009beaf : mov rdi, rbp ; call 0x98105
0x000000000014c449 : mov rdi, rbp ; call qword ptr [rax]
0x00000000000e166b : mov rdi, rbp ; call r12
0x0000000000027270 : mov rdi, rbp ; call rax
0x00000000000d366a : mov rdi, rbp ; call rbx
0x0000000000149cc7 : mov rdi, rbp ; call rcx
0x000000000014a68b : mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001105ac : mov rdi, rbp ; mov eax, 0x135 ; syscall
0x0000000000111d98 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000004a08a : mov rdi, rbp ; mov eax, 0xca ; syscall
0x000000000011bafc : mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000011d92e : mov rdi, rbp ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000cdbc7 : mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008a2b3 : mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000009d6f3 : mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a7bc : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000009ce60 : mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014b3ac : mov rdi, rbp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000159c9e : mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159cb8 : mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000011cc84 : mov rdi, rbp ; xor esi, esi ; call r12
0x00000000000c07ff : mov rdi, rbx ; call 0xcd2c5
0x00000000000285c4 : mov rdi, rbx ; call r12
0x0000000000029624 : mov rdi, rbx ; call r14
0x00000000000e91eb : mov rdi, rbx ; call r15
0x0000000000084347 : mov rdi, rbx ; call r8
0x0000000000083d51 : mov rdi, rbx ; call rax
0x000000000014b170 : mov rdi, rbx ; call rcx
0x0000000000028d1b : mov rdi, rbx ; call rsi
0x000000000009e020 : mov rdi, rbx ; mov eax, 0xca ; syscall
0x00000000001480c1 : mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000014b263 : mov rdi, rbx ; xor eax, eax ; call rcx
0x0000000000122133 : mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000000a1a9d : mov rdi, rsi ; call rax
0x00000000001193a5 : mov rdi, rsp ; call 0x255d5
0x000000000013fd27 : mov rdx, -1 ; ret
0x000000000008fe7b : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000033f9a : mov rdx, qword ptr [rax + r15*8] ; test rdx, rdx ; je 0x33fae ; call rdx
0x00000000000271d9 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000006e24f : mov rdx, qword ptr [rcx] ; jmp 0x6acb8
0x0000000000058155 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000a1b04 : mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0xa1b09 ; ret
0x0000000000145f0d : mov rdx, qword ptr [rdx + r14*8] ; call 0xa21d6
0x000000000016adf0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000ba0a0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000abc18 : mov rdx, qword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x0000000000150739 : mov rdx, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call rdx
0x0000000000115cd5 : mov rdx, r12 ; mov eax, 0x10f ; syscall
0x0000000000146338 : mov rdx, r12 ; mov eax, 0x81 ; syscall
0x000000000014d250 : mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000a21a8 : mov rdx, r12 ; pop r12 ; pop r13 ; ret
0x00000000000cda48 : mov rdx, r13 ; call rbx
0x000000000011cd29 : mov rdx, r13 ; mov esi, 1 ; call r12
0x00000000000a04b1 : mov rdx, r13 ; mov rdi, r12 ; call rax
0x000000000014d115 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012f562 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012fa72 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012fb40 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x0000000000163a2c : mov rdx, r14 ; mov esi, r12d ; call rax
0x0000000000048a88 : mov rdx, r14 ; mov rax, qword ptr [rsp] ; call rax
0x00000000000489f4 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000012f4fd : mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x00000000000a0b8a : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000137ced : mov rdx, r15 ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x000000000012f84a : mov rdx, r15 ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x0000000000119965 : mov rdx, r8 ; jmp 0x11999a
0x00000000000a59d3 : mov rdx, r8 ; jmp 0xa59f7
0x000000000009eb0b : mov rdx, r8 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000119a4a : mov rdx, r9 ; jmp 0x119a7b
0x0000000000119786 : mov rdx, rax ; jmp 0x1197bb
0x000000000011fe02 : mov rdx, rax ; jmp 0x11fe1b
0x000000000011fe01 : mov rdx, rax ; jmp 0x11fe1c
0x000000000011fe40 : mov rdx, rax ; jmp 0x11fe53
0x000000000014c2df : mov rdx, rax ; jmp 0x14c274
0x0000000000152dcf : mov rdx, rax ; jmp 0x152d94
0x0000000000164d5d : mov rdx, rax ; jmp 0x164d78
0x00000000000659c0 : mov rdx, rax ; jmp 0x659d9
0x00000000000a5479 : mov rdx, rax ; jmp 0xa5494
0x00000000000e9cbd : mov rdx, rax ; jmp 0xe9cd8
0x00000000000d914d : mov rdx, rax ; mov rbx, rax ; call 0x253b8
0x000000000012dda2 : mov rdx, rax ; xor eax, eax ; call 0x12a897
0x000000000016367b : mov rdx, rbp ; mov esi, r12d ; call rax
0x0000000000048432 : mov rdx, rbp ; mov rdi, r12 ; call rbx
0x00000000000a129e : mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000047b2d : mov rdx, rbp ; mov rsi, r12 ; call rbx
0x0000000000047b50 : mov rdx, rbp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000047b6b : mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000155cf0 : mov rdx, rbp ; mov rsi, rbx ; call rax
0x0000000000164eff : mov rdx, rcx ; jmp 0x164eda
0x00000000000a0a7f : mov rdx, rcx ; jmp 0xa0a3a
0x00000000000e9e5e : mov rdx, rcx ; jmp 0xe9e3a
0x00000000000bf134 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000115fbf : mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000116cf0 : mov rdx, rsp ; mov eax, 0x10 ; syscall
0x000000000015f131 : mov rsi, qword ptr [r12 + 0x10] ; call 0x11bb97
0x0000000000028d17 : mov rsi, qword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x000000000014a108 : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000c1022 : mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x0000000000163d42 : mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x00000000001162d8 : mov rsi, qword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 8] ; syscall
0x000000000009d948 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 0x18 ; jmp rax
0x00000000000c0aa2 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000001183bb : mov rsi, qword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x000000000009d430 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000282c5 : mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x000000000009eec0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rdx
0x000000000009db98 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, r13 ; call rax
0x00000000000e1b25 : mov rsi, qword ptr [rsp + 0x60] ; call r12
0x000000000012364b : mov rsi, qword ptr [rsp + 8] ; syscall
0x000000000009fb50 : mov rsi, r12 ; call rax
0x0000000000047b30 : mov rsi, r12 ; call rbx
0x0000000000048b7f : mov rsi, r12 ; mov rdi, r13 ; call rax
0x0000000000047b53 : mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000048b94 : mov rsi, r12 ; mov rdi, r15 ; call 0x255d8
0x000000000011ec98 : mov rsi, r12 ; mov rdi, r15 ; call r14
0x000000000014c446 : mov rsi, r12 ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a02dd : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000015a971 : mov rsi, r12 ; mov rdi, rbx ; call rcx
0x00000000001193a2 : mov rsi, r12 ; mov rdi, rsp ; call 0x255d8
0x00000000001193a1 : mov rsi, r12 ; mov rdi, rsp ; call 0x255d9
0x000000000009e811 : mov rsi, r12 ; pop r12 ; pop r13 ; jmp rax
0x0000000000039e7d : mov rsi, r13 ; mov edi, r12d ; call 0x1168e8
0x0000000000090055 : mov rsi, r13 ; mov edi, r12d ; mov eax, r9d ; syscall
0x00000000000489f7 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000159c9b : mov rsi, r13 ; mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159cb5 : mov rsi, r13 ; mov rdi, rbp ; xor eax, eax ; call rcx
0x00000000000393ab : mov rsi, r14 ; add rbx, 1 ; call 0x255d9
0x00000000000a19d5 : mov rsi, r14 ; call rax
0x00000000000a0b8d : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011fb09 : mov rsi, r14 ; mov rdi, r15 ; call 0x4bdf8
0x000000000015aa9f : mov rsi, r14 ; mov rdi, rbp ; call r12
0x0000000000137cf0 : mov rsi, r14 ; mov rdi, rbx ; call rax
0x0000000000047952 : mov rsi, r15 ; call r14
0x0000000000047b6e : mov rsi, r15 ; mov rdi, r12 ; call rbx
0x00000000000d3667 : mov rsi, r15 ; mov rdi, rbp ; call rbx
0x000000000014b260 : mov rsi, r15 ; mov rdi, rbx ; xor eax, eax ; call rcx
0x00000000000f4830 : mov rsi, r8 ; call 0xf0ab5
0x000000000012216b : mov rsi, r8 ; mov rdi, rbp ; call r12
0x000000000012478d : mov rsi, r9 ; mov edi, r12d ; mov eax, r14d ; syscall
0x000000000005d112 : mov rsi, rax ; call 0x593b5
0x0000000000162752 : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009cfb4 : mov rsi, rbp ; call 0x99295
0x00000000000a1830 : mov rsi, rbp ; call rax
0x00000000000a10b8 : mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000014d253 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000155cf3 : mov rsi, rbx ; call rax
0x0000000000090318 : mov rsi, rbx ; mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000156fef : mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000e012d : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000150e0d : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000012ef47 : mov rsi, rdx ; call rax
0x000000000014c394 : mov rsi, rsp ; call qword ptr [rax]
0x0000000000159da1 : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000046197 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000005e5c0 : mov rsp, rdx ; ret
0x0000000000193029 : mov word ptr [r9 - 2], cx ; ret
0x00000000000abc7b : mov word ptr [rax + 4], dx ; ret
0x00000000000ba8c0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000117485 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x00000000000abc30 : mov word ptr [rax], si ; ret
0x0000000000045c16 : mov word ptr [rbp - 0x7f000000], es ; sti ; push rax ; ret
0x00000000000ce6e8 : mov word ptr [rbx], fs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000005b4c8 : mov word ptr [rbx], gs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000017bc92 : mov word ptr [rcx + 4], dx ; ret
0x000000000017bcd3 : mov word ptr [rcx + 8], dx ; ret
0x00000000000a28e0 : mov word ptr [rcx + rax], es ; cmovne rax, rdx ; ret
0x000000000017bc60 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc50 : mov word ptr [rcx], dx ; ret
0x00000000000bb7fc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc66c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000ba14c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000be2cc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000116f6b : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000bb904 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000bc774 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000ba234 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000be3d4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a3980 : mov word ptr [rdi + 0xf48000d], fs ; ret 0xfc3
0x00000000001712e7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000abd53 : mov word ptr [rdi + 4], ax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000004b4f8 : mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000000bb6c8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000bc518 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000abbb6 : mov word ptr [rdi + 4], dx ; ret
0x00000000000be178 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bc57a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bb71a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000ba0ca : mov word ptr [rdi + 8], dx ; ret
0x00000000000be1da : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000018da8c : mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x00000000000bf22e : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000bee08 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000016b38c : mov word ptr [rdi - 2], cx ; ret
0x000000000016b1a4 : mov word ptr [rdi - 2], dx ; ret
0x000000000016b388 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000ba053 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bad46 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001936f6 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bf233 : mov word ptr [rdi], cx ; ret
0x000000000018f138 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000abb60 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000bb683 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000bc4c3 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000ba043 : mov word ptr [rdi], dx ; ret
0x000000000018c633 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000be123 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000abcf0 : mov word ptr [rdi], si ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000193026 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000bee0d : mov word ptr [rdi], si ; ret
0x000000000010f9e0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000150335 : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000017e008 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b6c1d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b6ca1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000017dfb3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b6bb8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000125145 : mov word ptr [rdx], ax ; ret
0x0000000000115a89 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000004b4aa : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001936f9 : mov word ptr [rsi - 2], cx ; ret
0x000000000010f9c7 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000045148 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005adbb : mov word ptr [rsp - 0x10], si ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bee07 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000018edbb : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000063024 : movabs al, byte ptr [0x8304768b41000000] ; ret
0x0000000000063050 : movabs al, byte ptr [0x8324348b41000000] ; ret
0x00000000000715ae : movabs al, byte ptr [0x8948c08548fffffa] ; ret
0x00000000000aa95a : movabs al, byte ptr [0x8949c9634dfffffc] ; retf
0x000000000015a943 : movabs al, byte ptr [0x8c48348c031fff2] ; ret
0x00000000000f62bd : movabs al, byte ptr [0xf6000000c8928b48] ; ret 0x7540
0x0000000000074742 : movabs al, byte ptr [0xfce9c68941fffffa] ; retf 0xffff
0x0000000000152cf9 : movabs dword ptr [0x3c39001f0f00062e], eax ; ret 0x2b74
0x00000000000d3037 : movabs dword ptr [0xc14800a3d70a3d70], eax ; retf 0x4804
0x00000000000392b5 : movabs eax, dword ptr [0x148cf8948fffffe] ; retf
0x000000000018db10 : movabs eax, dword ptr [0x77f8c5e0075c7f7e] ; ret
0x000000000018db95 : movabs eax, dword ptr [0x77f8c5f007447f7a] ; ret
0x000000000018daf0 : movabs eax, dword ptr [0x77f8c5f0075c7f7a] ; ret
0x0000000000199d1f : movabs eax, dword ptr [0x8948f88945fffff5] ; retf
0x00000000001872f5 : movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x000000000015183b : movabs eax, dword ptr [0xfa1e0ff390fffe15] ; ret
0x00000000000454b4 : movapd xmm0, xmm1 ; ret
0x00000000000454b5 : movaps xmm0, xmm1 ; ret
0x00000000000d4e82 : movaps xmmword ptr [rax], xmm0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000169913 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001699bd : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001222ac : movaps xmmword ptr [rsp + 0x10], xmm0 ; syscall
0x000000000010fbd6 : movaps xmmword ptr [rsp + 0xa0], xmm0 ; syscall
0x00000000000463a0 : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x000000000004551f : movd mm0, eax ; ret
0x00000000000453f6 : movd mm0, ecx ; ret
0x0000000000045310 : movd mm0, edx ; ret
0x00000000000456b8 : movd mm0, esi ; ret
0x000000000004551e : movd mm0, rax ; ret
0x00000000000453f5 : movd mm0, rcx ; ret
0x000000000004530f : movd mm0, rdx ; ret
0x000000000004587b : movd xmm0, eax ; ret
0x00000000000456b7 : movd xmm0, esi ; ret
0x0000000000045e94 : movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000045a1d : movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x00000000000ba120 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013f9df : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000010f964 : movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9b4 : movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000bb9bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000bc82d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000bb000 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000ba2ed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bcaa3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000bb253 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x0000000000170fbf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170f4f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170edf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170e6f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb95d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000bc7cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000ba28d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000170dff : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb97d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000bc7ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000ba2ad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000170d8f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb99d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000bc80d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000ba2cd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000001713af : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017133f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001712cf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017125f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001711ef : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017117f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017110f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017109f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017102f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bf1a1 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000017051b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000017058b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000bb100 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000bc634 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb7d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000bae27 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba134 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba177 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba167 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba1e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba1a8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba1c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba148 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba2e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba289 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba2a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba2c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba124 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000be294 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000170d94 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d02 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b6d22 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b6d42 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b8c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b36 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b6d03 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b6d23 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b6d43 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b8d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b37 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000045e04 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x0000000000096728 : movntps xmmword ptr [rax + 0x18], xmm2 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000045e95 : movq mm0, mm2 ; pop rbp ; ret
0x00000000000ba121 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013f9e0 : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x0000000000045a1e : movq mm0, qword ptr [rsp - 0x38] ; ret
0x000000000010f965 : movq mm7, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9b5 : movq mm7, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000bb9be : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000bc82e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000bb001 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000ba2ee : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000be48e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bcaa4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000bb254 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000be504 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000170fc0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170f50 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170ee0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170e70 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb95e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000bc7ce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000ba28e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000be42e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000170e00 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb97e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000bc7ee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000ba2ae : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000be44e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000170d90 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb99e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000bc80e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000ba2ce : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000be46e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000001713b0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171340 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001712d0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171260 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001711f0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171180 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171110 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001710a0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171030 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bf0fd : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bf1a2 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000017051c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000017058c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170cc7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170c47 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170bb7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170b37 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170ab7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170a37 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001709b7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170937 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001708b7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170837 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001707b7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170737 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001706a7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170617 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170587 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000bb101 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000bc635 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb7d5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000bae28 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba135 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba188 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bae7b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000ba178 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba168 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba1e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba1a9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba1c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba149 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba2ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba28a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba2aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba2ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba125 : movq qword ptr [rdi], mm0 ; ret
0x00000000000be295 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000170d95 : movq qword ptr [rdi], mm1 ; ret
0x000000000004551d : movq xmm0, rax ; ret
0x00000000000453f4 : movq xmm0, rcx ; ret
0x000000000004530e : movq xmm0, rdx ; ret
0x00000000000bed3e : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015d6e8 : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x15d6dd ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d9ede : movsb byte ptr [rdi], byte ptr [rsi] ; jl 0xd9ef4 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000013b7a8 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x13b7b4 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000c93f4 : movsb byte ptr [rdi], byte ptr [rsi] ; jrcxz 0xc93fe ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000a3828 : movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xc ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000bed30 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001090a8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff1
0x000000000003f678 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000011db57 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11db67 ; call rbx
0x00000000000a4e64 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000007eaae : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x00000000001555d3 : movsd dword ptr [rdi], dword ptr [rsi] ; or dword ptr [rax], eax ; syscall
0x0000000000059472 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000012f4ff : movsd qword ptr [rbp - 0x78], xmm5 ; call rax
0x00000000000d347c : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000162759 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000456b3 : movss dword ptr [rdi], xmm0 ; movd xmm0, esi ; ret
0x000000000019a758 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000012ab33 : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a2505 : movsx eax, dl ; ret
0x00000000000ab9e4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xab9e8 ; ret
0x0000000000043cbd : movsxd r10, dword ptr [r15 + r10*4] ; add r10, r15 ; jmp r10
0x0000000000197755 : movsxd r12, dword ptr [rdi + r12*4] ; add rdi, r12 ; jmp rdi
0x0000000000034b09 : movsxd r8, dword ptr [rdx + r9*4] ; add r8, rdx ; jmp r8
0x000000000016e98b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00000000000ffe02 : movsxd rax, dword ptr [r10 + r15*4] ; add rax, r10 ; jmp rax
0x0000000000093335 : movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x0000000000093367 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000010c27d : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000000ffcb0 : movsxd rax, dword ptr [r14 + r15*4] ; add rax, r14 ; jmp rax
0x000000000007718f : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000abcc6 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x00000000000abcc7 : movsxd rax, dword ptr [rax + rax*4] ; add rax, r8 ; jmp rax
0x000000000007a94c : movsxd rax, dword ptr [rax + rcx*4] ; add rax, rbx ; jmp rax
0x000000000008111b : movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000007a9a7 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rbx ; jmp rax
0x0000000000122ff5 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000093368 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, r11 ; jmp rax
0x000000000006710e : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x0000000000066619 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000779cd : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000067a2c : movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000104a2c : movsxd rax, dword ptr [rcx - 0x77] ; retf
0x000000000013d1e9 : movsxd rax, dword ptr [rcx - 0x7cb70012] ; ret
0x00000000000d26c9 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000bedc1 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000006710f : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x00000000000676f2 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000007ac6a : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rbx ; jmp rax
0x0000000000083ee3 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000001502a7 : movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x00000000000fff66 : movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000676f3 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000010c454 : movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000000f2f36 : movsxd rax, dword ptr [rdx + r14*4] ; add rax, rdx ; jmp rax
0x0000000000093336 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, r10 ; jmp rax
0x0000000000026eca : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000019812b : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e82f8 : movsxd rax, dword ptr [rdx + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000f2de6 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000034b0a : movsxd rax, dword ptr [rdx + rcx*4] ; add r8, rdx ; jmp r8
0x00000000000ffe03 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, r10 ; jmp rax
0x0000000000104313 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000e7964 : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000017bb69 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000077190 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000007ac0c : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rbx ; jmp rax
0x00000000000822ba : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x000000000008372b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006f9dc : movsxd rax, dword ptr [rsi + rcx*4] ; add rax, rsi ; jmp rax
0x00000000000ffcb1 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, r14 ; jmp rax
0x00000000000bf28a : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000bf352 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000010c27e : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x0000000000186f51 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000186d5f : movsxd rax, ecx ; ret
0x0000000000187010 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001017e9 : movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x00000000000ba76a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000190a41 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b9ee9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000abb31 : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000000ba76b : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000016e98c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x00000000001693dc : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x0000000000190a42 : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b9eea : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a02dc : movsxd rcx, dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000abb32 : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000019753c : movsxd rcx, dword ptr [rdi + r12*4] ; add rcx, rdi ; jmp rcx
0x0000000000083f7f : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000019753d : movsxd rcx, dword ptr [rdi] ; add rcx, rdi ; jmp rcx
0x00000000001017ea : movsxd rcx, dword ptr [rdx + rcx*4] ; add rcx, r10 ; jmp rcx
0x00000000000ac1c2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000bf2c0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000186d93 : movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x00000000001018f9 : movsxd rcx, edx ; jmp 0x101906
0x00000000001018f8 : movsxd rcx, edx ; jmp 0x101907
0x00000000000f1a0a : movsxd rcx, edx ; jmp 0xf1a34
0x00000000000f1a09 : movsxd rcx, edx ; jmp 0xf1a35
0x00000000000e9ae9 : movsxd rdi, dword ptr [rcx - 0x76b7000d] ; ret
0x0000000000037489 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037309 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000a1689 : movsxd rdi, esi ; mov qword ptr [rbx], rdi ; call rcx
0x00000000001694af : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000db46e : movsxd rdx, dword ptr [r9 + rdi*4] ; add rdx, r9 ; jmp rdx
0x0000000000055faf : movsxd rdx, dword ptr [r9 + rdx*4] ; add rdx, r9 ; jmp rdx
0x0000000000152a45 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000001694b0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000db46f : movsxd rdx, dword ptr [rcx + rdi*4] ; add rdx, r9 ; jmp rdx
0x0000000000055fb0 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, r9 ; jmp rdx
0x0000000000083fe3 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000043cbe : movsxd rdx, dword ptr [rdi + rdx*4] ; add r10, r15 ; jmp r10
0x0000000000043b90 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000db4e9 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000013f8c5 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000013fd16 : movsxd rdx, ecx ; ret
0x0000000000186fd9 : movsxd rdx, edx ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000013f6f9 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000a175c : movsxd rsi, esi ; movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rsi ; call rcx
0x000000000019553c : movsxd rsi, esi ; ret 0x7520
0x0000000000197756 : movsxd rsp, dword ptr [rdi] ; add rdi, r12 ; jmp rdi
0x00000000000d347d : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000bef23 : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000befaa : movups xmmword ptr [r11], xmm8 ; ret
0x00000000001539d9 : movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x00000000001539a6 : movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x00000000001502be : movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000001539da : movups xmmword ptr [rax + 0x20], xmm2 ; ret
0x00000000001539a7 : movups xmmword ptr [rax + 0x30], xmm0 ; ret
0x000000000008ad69 : movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x00000000001502bf : movups xmmword ptr [rax + 8], xmm0 ; ret
0x0000000000144df7 : movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x0000000000089f42 : movups xmmword ptr [rax], xmm0 ; ret
0x000000000009585e : movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x000000000012f84d : movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012f473 : movups xmmword ptr [rbp - 0x78], xmm2 ; call rcx
0x000000000012f61b : movups xmmword ptr [rbp - 0x78], xmm3 ; call r9
0x000000000012f565 : movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012f500 : movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x000000000012fa75 : movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012fb43 : movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000012f6ee : movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x00000000000916e2 : movups xmmword ptr [rbx + 0x18], xmm0 ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000a1ae0 : movups xmmword ptr [rbx + 0x18], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000916e6 : movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000a175e : movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rsi ; call rcx
0x00000000000950a5 : movups xmmword ptr [rbx + 0x38], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094b65 : movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x00000000000917e5 : movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x000000000004b317 : movups xmmword ptr [rbx], xmm0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000befab : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000bef24 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000bef1f : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000bef1e : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000015a8fd : movups xmmword ptr [rdi + 0x18], xmm0 ; ret
0x000000000010f575 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000befa6 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010f579 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000046e58 : movups xmmword ptr [rdi + 0x58], xmm0 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000046e5c : movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x000000000010f9b9 : movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000011037e : movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x0000000000094a9b : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013f9e3 : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000becc6 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000bee8d : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bee6a : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000456b4 : movups xmmword ptr [rdi], xmm0 ; movd xmm0, esi ; ret
0x00000000000becc3 : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000047245 : movups xmmword ptr [rdi], xmm0 ; ret
0x000000000002a7fe : movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x00000000001502d3 : movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530db : movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539eb : movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539cb : movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010f969 : movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000103706 : movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000014b5ab : movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000116b8d : movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x000000000015acf9 : movups xmmword ptr [rsp + 0x18], xmm0 ; call r8
0x00000000001571a5 : movups xmmword ptr [rsp + 0xb8], xmm5 ; call rax
0x0000000000157111 : movups xmmword ptr [rsp + 0xd8], xmm0 ; call rax
0x000000000019a759 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000002833a : movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x0000000000151076 : movzx eax, al ; add eax, 1 ; ret
0x000000000015ad9f : movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000112e35 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000014d3c4 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1273 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000e80ae : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x0000000000065f6b : movzx eax, al ; neg eax ; pop rbp ; ret
0x0000000000027b1c : movzx eax, al ; neg eax ; ret
0x000000000014cfed : movzx eax, al ; pop r12 ; ret
0x000000000014be93 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000009116d : movzx eax, al ; pop rbx ; neg eax ; ret
0x000000000014d35a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000046f3f : movzx eax, al ; ret
0x00000000000370b9 : movzx eax, ax ; ret
0x0000000000142820 : movzx eax, bl ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093f83 : movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014e112 : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000094ce0 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000910e6 : movzx eax, byte ptr [rax] ; ret
0x0000000000105d40 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000ad558 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000188320 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000afa71 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ad573 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000001878d3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x00000000000bf320 : movzx eax, cl ; pop rbx ; ret
0x0000000000037272 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010f9c4 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001974fd : movzx ecx, al ; add rdx, r10 ; jmp rdx
0x00000000000be6aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbe6a9 ; ret
0x00000000000be75a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbe759 ; ret
0x00000000001918f4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000beddc : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ad570 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000188323 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000001974fc : movzx ecx, r8b ; add rdx, r10 ; jmp rdx
0x0000000000044368 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x4434f ; ret
0x00000000000ad731 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000018725b : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000018770b : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x00000000001814ff : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000001882a8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ad5c7 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000001870de : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000195564 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000001955c4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000001955b4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000001955a4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000195594 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000195584 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000195574 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000170ce0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001916a7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000019554b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000001713c0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000018da60 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000afa74 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000abbd2 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc8f : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abc5e : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb99 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc40 : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb7b : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000afa9a : movzx edx, dl ; sub eax, edx ; ret
0x0000000000170c60 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000171350 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000018c630 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000abbb1 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc76 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rax + 4], dx ; ret
0x000000000006e6d8 : movzx esi, byte ptr [rax] ; jmp 0x6b1a7
0x0000000000132f28 : movzx esi, dh ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000132f0b : movzx esi, si ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x00000000000b4bc7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000045419 : mulps xmm0, xmm1 ; ret
0x000000000004549e : mulps xmm0, xmmword ptr [rip + 0x179b6b] ; ret
0x0000000000045803 : mulps xmm0, xmmword ptr [rip + 0x179ea6] ; ret
0x00000000000457b8 : mulps xmm0, xmmword ptr [rip + 0x179ee9] ; ret
0x0000000000045793 : mulps xmm0, xmmword ptr [rip + 0x179f12] ; ret
0x000000000004549d : mulsd xmm0, qword ptr [rip + 0x179b6b] ; ret
0x0000000000045418 : mulsd xmm0, xmm1 ; ret
0x0000000000045802 : mulss xmm0, dword ptr [rip + 0x179ea6] ; ret
0x00000000000457b7 : mulss xmm0, dword ptr [rip + 0x179ee9] ; ret
0x0000000000045792 : mulss xmm0, dword ptr [rip + 0x179f12] ; ret
0x0000000000124e4e : neg byte ptr [rax - 0x76b7fff4] ; ret 0xc148
0x0000000000055d9a : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000466fb : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000018f25f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x0000000000065f6e : neg eax ; pop rbp ; ret
0x0000000000142823 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000027b1f : neg eax ; ret
0x000000000010c9c4 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000f762e : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000170407 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000004685f : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008bb29 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000143465 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x000000000014340d : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301d : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000190d5e : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c9d0 : nop ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000d99e1 : nop ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x29], al ; shr dword ptr [rcx], cl ; ret 0x8945
0x00000000001181a5 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006612f : nop ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000007a9a9 : nop ; add rax, rbx ; jmp rax
0x0000000000152a47 : nop ; add rdx, rax ; jmp rdx
0x000000000014bd6f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000af80f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000f8866 : nop ; call 0x25353
0x000000000012873f : nop ; endbr64 ; ret
0x0000000000095a0f : nop ; endbr64 ; xor eax, eax ; ret
0x000000000011bee5 : nop ; hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x000000000004619d : nop ; jmp rdx
0x000000000019426f : nop ; lea rax, [rdi + 1] ; ret
0x000000000019425f : nop ; lea rax, [rdi] ; ret
0x000000000017df9f : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000ef32f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000abcdf : nop ; mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000016afbf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bc4af : nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000017bc7f : nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bb03f : nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bb05f : nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb04f : nop ; mov dword ptr [rdi], edx ; ret
0x0000000000098487 : nop ; mov dword ptr [rip + 0x1556d6], eax ; ret
0x000000000016b19f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000ba03f : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000009fd3f : nop ; mov eax, 0x16 ; ret
0x00000000000e7ecf : nop ; mov eax, 0x7e ; ret
0x000000000013ec4f : nop ; mov eax, 0xffffffff ; ret
0x00000000000d21ff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xd2269 ; ret
0x00000000000d222f : nop ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xd2269 ; ret
0x00000000000d224f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xd2269 ; ret
0x000000000016b55f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000bb69f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018c64f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000008afc6 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000017bcbf : nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000bb09f : nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000980e7 : nop ; mov qword ptr [rip + 0x1521f9], rax ; ret
0x00000000000980cf : nop ; mov qword ptr [rip + 0x152209], rax ; ret
0x0000000000098077 : nop ; mov qword ptr [rip + 0x152219], rax ; ret
0x0000000000098067 : nop ; mov qword ptr [rip + 0x152231], rax ; ret
0x000000000007bb9f : nop ; mov r10, rdx ; jmp rax
0x000000000008227f : nop ; mov r9, rsi ; jmp rax
0x00000000000d2cff : nop ; mov rax, 1 ; ret
0x00000000000a17cf : nop ; mov rax, qword ptr [rip + 0x148779] ; call qword ptr [rax]
0x0000000000131f1f : nop ; mov rax, rdi ; ret
0x000000000018ddbf : nop ; mov rax, rdi ; vzeroupper ; ret
0x00000000000a59cf : nop ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59fb
0x000000000009cfb0 : nop ; mov rdi, r12 ; mov rsi, rbp ; call 0x99299
0x00000000000a199f : nop ; mov rdi, rbp ; call rax
0x0000000000028d1a : nop ; mov rdi, rbx ; call rsi
0x000000000017bc5f : nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc4f : nop ; mov word ptr [rcx], dx ; ret
0x00000000000bb02f : nop ; mov word ptr [rdi], dx ; ret
0x00000000000ba11f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b3a8d : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014a1ff : nop ; pop rbp ; ret
0x000000000019c4af : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124dc8 : nop ; push rbp ; or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000143e1c : nop ; push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000034a1f : nop ; ret
0x00000000000e4178 : nop ; ret 0x10
0x000000000010b2e9 : nop ; retf
0x000000000012c8ef : nop ; sub eax, edx ; ret
0x0000000000187c5f : nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000be0ff : nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000118eef : nop ; xor eax, eax ; add rsp, 8 ; ret
0x000000000014b65f : nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055baf : nop ; xor eax, eax ; ret
0x000000000002723f : nop ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000290d6 : nop ; xor r14d, r14d ; xor r15d, r15d ; call 0x25359
0x000000000013270f : nop ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d253f : nop ; xor rax, rax ; ret
0x000000000004580b : nop dword ptr [rax + rax] ; addss xmm0, xmm0 ; ret
0x000000000004922b : nop dword ptr [rax + rax] ; call 0x25497
0x000000000019bff8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000099a2b : nop dword ptr [rax + rax] ; call rax
0x00000000000969bb : nop dword ptr [rax + rax] ; endbr64 ; ret
0x0000000000128aeb : nop dword ptr [rax + rax] ; mov eax, r8d ; ret
0x00000000000e5fdb : nop dword ptr [rax + rax] ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000ba05b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011fe63 : nop dword ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000bb2fb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a15e3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000000332b3 : nop dword ptr [rax + rax] ; ret
0x00000000000bf293 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000058ce3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d226b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000d2ccc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000009f7d9 : nop dword ptr [rax] ; call 0x9c259
0x0000000000049cbd : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000016359c : nop dword ptr [rax] ; call rax
0x0000000000026f5c : nop dword ptr [rax] ; endbr64 ; ret
0x000000000010f90d : nop dword ptr [rax] ; endbr64 ; xor eax, eax ; ret
0x000000000017bc3c : nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000bb01c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000018db3c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000bad1c : nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000abc49 : nop dword ptr [rax] ; mov dword ptr [rax], ecx ; ret
0x0000000000066125 : nop dword ptr [rax] ; mov eax, 0x10 ; ret
0x0000000000130224 : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x00000000000e7ec4 : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x00000000000e7ff4 : nop dword ptr [rax] ; mov eax, 0xff ; ret
0x0000000000093edc : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000097364 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000132f64 : nop dword ptr [rax] ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000bad4d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b998c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000bf38d : nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x0000000000154b45 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx] ; jmp 0x154b17
0x000000000012dfcd : nop dword ptr [rax] ; mov rdi, r15 ; call 0x12a1e8
0x00000000000abc2c : nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x0000000000186f4d : nop dword ptr [rax] ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000009e52c : nop dword ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000095a75 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000003c174 : nop dword ptr [rax] ; ret
0x00000000000d3345 : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000044371 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018bb8d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000014238d : nop dword ptr [rax] ; xor r10d, r10d ; mov eax, r10d ; ret
0x000000000008584d : nop dword ptr [rax] ; xor r8d, r8d ; mov rax, r8 ; ret
0x000000000008ff27 : nop dword ptr cs:[rax + rax] ; ret
0x000000000004922a : nop word ptr [rax + rax] ; call 0x25498
0x0000000000099a2a : nop word ptr [rax + rax] ; call rax
0x0000000000128aea : nop word ptr [rax + rax] ; mov eax, r8d ; ret
0x000000000011fe62 : nop word ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000a15e2 : nop word ptr [rax + rax] ; pop rbp ; ret
0x00000000000461c7 : nop word ptr [rax + rax] ; ret
0x000000000008d35a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d226a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x000000000012aaaf : not dword ptr [rbx - 0x18] ; fisubr dword ptr [rcx - 0x76b70011] ; ret
0x0000000000044ed1 : not eax ; and eax, ecx ; ret
0x0000000000045251 : not eax ; and eax, edx ; ret
0x0000000000163f47 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000015af19 : not eax ; shr eax, 0x1f ; ret
0x0000000000163f46 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000164b8a : or ah, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124dca : or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000182477 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186089 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001824a5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000124da4 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010f868 : or al, 0 ; add byte ptr [rax], al ; jmp 0x10f836
0x000000000004b340 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009b29d : or al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x00000000000f5252 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f5321 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000117565 : or al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011c9b3 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000a1b3e : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000168638 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007d833 : or al, 0 ; add byte ptr [rbx - 0x78f0f808], al ; ret 8
0x000000000004006a : or al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000005ef26 : or al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000124e8c : or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000a2382 : or al, 0 ; cmovne rax, rdx ; ret
0x000000000011c9f5 : or al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000125a49 : or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000125165 : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000124c63 : or al, 0 ; pop rbx ; ret
0x000000000011b932 : or al, 0 ; ret
0x0000000000126ee4 : or al, 0 ; syscall
0x000000000009a7c4 : or al, 0x15 ; add byte ptr [rbp + 0x39], cl ; ret 0x850f
0x000000000018fc67 : or al, 0x16 ; jne 0x18fc40 ; vzeroupper ; ret
0x00000000000a45ce : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jne 0xa45c8 ; ret
0x0000000000163a2a : or al, 0x16 ; mov rdx, r14 ; mov esi, r12d ; call rax
0x0000000000163679 : or al, 0x16 ; mov rdx, rbp ; mov esi, r12d ; call rax
0x00000000000ad556 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000003f61f : or al, 0x24 ; call 0x3c124
0x00000000001078a7 : or al, 0x24 ; call rax
0x0000000000091c51 : or al, 0x24 ; mov rdi, rbp ; call rax
0x000000000014b16c : or al, 0x24 ; xor eax, eax ; mov rdi, rbx ; call rcx
0x0000000000162609 : or al, 0x30 ; fisttp dword ptr [rcx] ; ret
0x00000000001220be : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x000000000012628d : or al, 0x31 ; test ecx, ecx ; jne 0x12629e ; ret
0x00000000001262f6 : or al, 0x31 ; test ecx, ecx ; jne 0x126306 ; ret
0x0000000000126bdd : or al, 0x31 ; test ecx, ecx ; jne 0x126bee ; ret
0x0000000000126c3a : or al, 0x31 ; test ecx, ecx ; jne 0x126c4e ; ret
0x0000000000122acf : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x00000000001184a0 : or al, 0x41 ; mov eax, eax ; mov eax, 0x4a ; syscall
0x0000000000118560 : or al, 0x41 ; mov eax, eax ; mov eax, 0x4b ; syscall
0x0000000000111ae0 : or al, 0x41 ; mov eax, eax ; mov eax, 3 ; syscall
0x00000000000e5cd6 : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000e5bb0 : or al, 0x48 ; add esp, 0x28 ; ret
0x00000000001182c2 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000014e243 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014b2c3 : or al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000a2103 : or al, 0x48 ; mov dword ptr [rdi], esi ; ret
0x000000000013e7d0 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000087483 : or al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000912f3 : or al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097b4d : or al, 0x5b ; ret
0x00000000000abbb5 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000001488ca : or al, 0x66 ; test r13d, 0x840f1000 ; ret 0xfffe
0x00000000000a7581 : or al, 0x74 ; and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x000000000003629b : or al, 0x74 ; cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000036936 : or al, 0x74 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004559b : or al, 0x75 ; or dh, dl ; addps xmm0, xmm0 ; ret
0x0000000000116678 : or al, 0x75 ; ret 0xd8f7
0x000000000007c2ba : or al, 0x7e ; ret
0x0000000000082e5f : or al, 0x7e ; retf
0x000000000008461b : or al, 0x7e ; retf 0x8948
0x0000000000083cab : or al, 0x7e ; retf 0xffb8
0x00000000000ba76c : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000077636 : or al, 0x83 ; ret
0x00000000000bf2c1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000000bfd1d : or al, 0x87 ; test ecx, ecx ; jne 0xbfd01 ; mov rax, r8 ; ret
0x00000000000abb33 : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x00000000000608aa : or al, 0x89 ; fdiv st(6) ; ret
0x000000000004601b : or al, 0x89 ; jae 0x46066 ; xor eax, eax ; pop rbx ; ret
0x0000000000102863 : or al, 0x89 ; ret 0x8b4c
0x00000000000bf34b : or al, 0x89 ; ret 0xe283
0x00000000000e7555 : or al, 0x89 ; retf 0x8948
0x00000000001017eb : or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000ac1c3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000b1fc4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012628a : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1262a1 ; ret
0x00000000001262f3 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126309 ; ret
0x0000000000126bda : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126bf1 ; ret
0x0000000000126c37 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126c51 ; ret
0x000000000016e98d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000130256 : or al, 0x8b ; cmp al, 0x24 ; mov eax, 0xe6 ; syscall
0x000000000014481d : or al, 0x8b ; cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000001693dd : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000010f84b : or al, 0x8b ; push rbx ; add al, 0xeb ; ret
0x000000000011ff1f : or al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001264f7 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000001264dc : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x1264f9 ; ret
0x0000000000126e0c : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x126e29 ; ret
0x0000000000083f80 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x0000000000190a43 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000b9eeb : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000019753e : or al, 0xa7 ; add rcx, rdi ; jmp rcx
0x00000000001693e1 : or al, 0xb ; jmp r9
0x00000000000b9eef : or al, 0xb ; jmp rcx
0x0000000000153996 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000123337 : or al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000123eb6 : or al, 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000105de8 : or al, 0xe8 ; ret 0xfffe
0x0000000000151a3e : or al, 0xf ; retf 0x5089
0x000000000014b6c0 : or al, 0xf ; retf 0xd189
0x00000000000d2155 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000baa03 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000114797 : or al, 0xf1 ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000170ee3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e4779 : or al, 0xf4 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000005f207 : or al, 0xf6 ; ret
0x0000000000064493 : or al, 0xf6 ; ret 0x7401
0x000000000006249b : or al, 0xf6 ; ret 0xf01
0x0000000000084263 : or al, 0xf6 ; ret 0xf04
0x000000000007de8c : or al, 0xf6 ; ret 0xf08
0x00000000000646ad : or al, 0xf6 ; ret 0xf40
0x000000000011b60c : or al, 0xf7 ; ret
0x000000000011ac83 : or al, 0xf7 ; ret 0xfc07
0x000000000014d54c : or al, 1 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x0000000000110306 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000110ea2 : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001103a0 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086bf7 : or al, 1 ; add cl, ch ; retf
0x000000000019ba96 : or al, 5 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bac40 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000001586a8 : or al, 6 ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000055b54 : or al, 9 ; retf 0xbe0f
0x0000000000051335 : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000010bfc0 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000018164d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184261 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181671 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015567c : or al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a23b : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000014b5d6 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bbc5 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ae608 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014960b : or al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001090c0 : or al, byte ptr [rax] ; call 0x25354
0x0000000000144389 : or al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x1443a1 ; ret
0x0000000000144479 : or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000149637 : or al, byte ptr [rax] ; ret
0x00000000001407b8 : or al, byte ptr [rax] ; syscall
0x0000000000143f3c : or al, byte ptr [rax] ; test eax, eax ; je 0x143f4e ; ret
0x000000000014a218 : or al, byte ptr [rax] ; test eax, eax ; je 0x14a226 ; ret
0x00000000001461f9 : or al, byte ptr [rax] ; test rax, rax ; jne 0x14620f ; ret
0x00000000000bf8d5 : or al, byte ptr [rbx + 0xd7402f8] ; xor eax, eax ; ret
0x0000000000064ae2 : or al, byte ptr [rbx + 2] ; add byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000000f55cc : or al, byte ptr [rcx - 0x77] ; retf 0xe8c0
0x00000000000f6d49 : or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x0000000000112ee5 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000018ab57 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d2aa4 : or al, ch ; jbe 0xd2ada ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000fc974 : or al, ch ; mov dh, 0x89 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000055cb1 : or al, ch ; or esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000090f67 : or al, ch ; ret
0x000000000011cbd8 : or al, ch ; ret 0xf089
0x00000000000460cf : or al, ch ; retf
0x00000000000d7f55 : or al, ch ; test dword ptr [rbp - 0x76b80000], eax ; ret 0x8548
0x00000000000d7da9 : or al, ch ; xor dword ptr [rdi - 0x76b80000], eax ; ret 0x8548
0x000000000014fb1a : or bh, bh ; or dword ptr [rax], eax ; syscall
0x00000000000ac1c8 : or bh, byte ptr [rsi] ; jmp r10
0x00000000000f764d : or bh, dh ; ret
0x000000000014b5ae : or bl, al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000134be1 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x0000000000119187 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000000e2ade : or bl, al ; ret
0x000000000011d985 : or bl, byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000155ded : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010582c : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00000000001710a3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014b5ad : or bl, r8b ; mov dword ptr [rsi], 0xc ; ret
0x00000000000ef3a1 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000ef331 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000332f8 : or byte ptr [r11 + 0x1974fdf8], al ; pop rbx ; ret
0x00000000000eb252 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000445af : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f39fe : or byte ptr [r13 + 0x63], cl ; ror byte ptr [rcx + 1], 1 ; ret 0x8948
0x00000000000b6c9f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ef326 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000ef3c6 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000058841 : or byte ptr [r15], r9b ; xchg eax, edx ; ret 0x8948
0x000000000005ae57 : or byte ptr [r8 + 2], r15b ; ret
0x00000000000ef3b1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b6c7e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000179c58 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071975 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000011d18c : or byte ptr [r8 - 0x77], cl ; ret 0xe083
0x000000000008bf26 : or byte ptr [r8 - 0x77], cl ; sbb r9b, bpl ; retf
0x0000000000156fed : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rax - 0x77] ; out dx, eax ; call qword ptr [rax]
0x0000000000159d9f : or byte ptr [r8 - 0x77], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000006f67b : or byte ptr [r8 - 0x7d], cl ; ret
0x00000000000c3788 : or byte ptr [r8], al ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000018ad32 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005e60b : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000014c444 : or byte ptr [r9 + rcx*4 - 0x1a], r9b ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000b6cde : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000ef2f5 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000ef30e : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000149c13 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000122716 : or byte ptr [rax + 0x114], bh ; syscall
0x0000000000116567 : or byte ptr [rax + 0x11d], bh ; syscall
0x0000000000117850 : or byte ptr [rax + 0x127], bh ; syscall
0x0000000000117910 : or byte ptr [rax + 0x128], bh ; syscall
0x0000000000122933 : or byte ptr [rax + 0x130], bh ; syscall
0x00000000001176f5 : or byte ptr [rax + 0x13], bh ; syscall
0x000000000004b567 : or byte ptr [rax + 0x13e], bh ; syscall
0x0000000000117795 : or byte ptr [rax + 0x14], bh ; syscall
0x000000000011bc37 : or byte ptr [rax + 0x1a], bh ; syscall
0x0000000000045379 : or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x0000000000045349 : or byte ptr [rax + 0x21], 0xc2 ; movq xmm0, rdx ; ret
0x00000000000e3ceb : or byte ptr [rax + 0x29], cl ; ret
0x00000000000a6548 : or byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x0000000000056329 : or byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000004af53 : or byte ptr [rax + 0x29], cl ; retf 0xc148
0x0000000000123403 : or byte ptr [rax + 0x2a], bh ; syscall
0x0000000000123845 : or byte ptr [rax + 0x2e], bh ; syscall
0x00000000001236e5 : or byte ptr [rax + 0x2f], bh ; syscall
0x000000000012231d : or byte ptr [rax + 0x38], bh ; syscall
0x000000000009b31e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000164213 : or byte ptr [rax + 0x39], cl ; ret 0x5776
0x00000000000a7a9f : or byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000131ccc : or byte ptr [rax + 0x39], cl ; ret 0x976
0x0000000000051fc3 : or byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000002b210 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000096b1d : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e5a8e : or byte ptr [rax + 0x3d], bh ; syscall
0x00000000000e7f97 : or byte ptr [rax + 0x40], bh ; ret
0x00000000001117df : or byte ptr [rax + 0x48], bh ; syscall
0x00000000000efae3 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000f18be : or byte ptr [rax + 0x63], cl ; retf 0xc283
0x000000000013a239 : or byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; ret
0x00000000000ec99a : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000a4d17 : or byte ptr [rax + 0xf], cl ; ret
0x00000000000579f0 : or byte ptr [rax + 0xf], cl ; retf 0x854d
0x00000000000d6356 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000001502cd : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001539c5 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000158e33 : or byte ptr [rax + 1], bh ; pop rbp ; pop r12 ; ret
0x00000000000863c9 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000111357 : or byte ptr [rax + 1], bh ; syscall
0x0000000000162ba1 : or byte ptr [rax + 1], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x000000000005ae58 : or byte ptr [rax + 2], bh ; ret
0x0000000000059814 : or byte ptr [rax + 3], cl ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8948
0x0000000000115c37 : or byte ptr [rax + 7], bh ; syscall
0x00000000000e3985 : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000ef3b2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000004cc87 : or byte ptr [rax - 0x39], cl ; ret
0x0000000000045c5a : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x00000000000da051 : or byte ptr [rax - 0x3f], 0xe1 ; add cl, byte ptr [rax - 0x77] ; retf 0xc148
0x000000000017bde7 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x0000000000149631 : or byte ptr [rax - 0x73], cl ; add eax, 0xa61c7 ; ret
0x0000000000159122 : or byte ptr [rax - 0x73], cl ; je 0x159154 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159212 : or byte ptr [rax - 0x73], cl ; je 0x159244 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159302 : or byte ptr [rax - 0x73], cl ; je 0x159334 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x00000000001593f2 : or byte ptr [rax - 0x73], cl ; je 0x159424 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x000000000005883e : or byte ptr [rax - 0x73], cl ; or byte ptr [r15], r9b ; xchg eax, edx ; ret 0x8948
0x000000000005a19c : or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000005a84c : or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000104e3b : or byte ptr [rax - 0x75], 4 ; ret 0x8948
0x0000000000125aa5 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000125b06 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000012b1fb : or byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000011466e : or byte ptr [rax - 0x75], cl ; jl 0x11469f ; and al, ch ; retf 0xfffc
0x0000000000162c51 : or byte ptr [rax - 0x75], cl ; or byte ptr [rax + 1], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x000000000009038b : or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b6c7f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000014e4e3 : or byte ptr [rax - 0x77], cl ; add r8b, r13b ; ret
0x00000000000b6b90 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000132d5c : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x000000000002fbe0 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000156fee : or byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call qword ptr [rax]
0x0000000000179c59 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000159da0 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x0000000000149cc6 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x0000000000159885 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbp ; pop r12 ; jmp rax
0x000000000008a7bb : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000014b3ab : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000106583 : or byte ptr [rax - 0x77], cl ; push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x0000000000071976 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012de9f : or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000014d828 : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000012b419 : or byte ptr [rax - 0x77], cl ; ret 0x4b8b
0x000000000009b5de : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000159157 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000152cd9 : or byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000d6e1f : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000011d18d : or byte ptr [rax - 0x77], cl ; ret 0xe083
0x00000000000fe575 : or byte ptr [rax - 0x77], cl ; retf
0x000000000005cb31 : or byte ptr [rax - 0x77], cl ; retf 0x44f6
0x000000000002fb02 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000008bf27 : or byte ptr [rax - 0x77], cl ; sbb r9b, bpl ; retf
0x0000000000099a63 : or byte ptr [rax - 0x77], r9b ; ret
0x00000000000a1b07 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000002ab5a : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000aaead : or byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000009ad78 : or byte ptr [rax - 0x7d], cl ; ret 0x4110
0x000000000004c9c5 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004acb0 : or byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4804
0x00000000000f1a5f : or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; ret 0xc775
0x000000000015fd06 : or byte ptr [rax - 1], bh ; pop rbp ; pop r12 ; ret
0x00000000000863eb : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001818ac : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000445ed : or byte ptr [rax], 0x4c ; add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x00000000000e227e : or byte ptr [rax], al ; add al, ch ; retf 0x659
0x00000000000a6172 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc019
0x00000000000c3789 : or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000062c22 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001818ad : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184401 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001818d1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009a122 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000144553 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001981cd : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x0000000000155548 : or byte ptr [rax], al ; add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x0000000000122435 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000046715 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x0000000000047434 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x80 ; syscall
0x0000000000046761 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000004653b : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xd ; syscall
0x00000000000466a6 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000bf3b9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000014b5cf : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001113b5 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000ae788 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003ef27 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x00000000000e9bfd : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d8017 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008ce08 : or byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x7589
0x000000000015fcce : or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000015f868 : or byte ptr [rax], al ; call qword ptr [rax]
0x00000000000e1ab5 : or byte ptr [rax], al ; call rbx
0x0000000000123c5e : or byte ptr [rax], al ; mov ebp, 5 ; jmp 0x123c32
0x000000000005e60c : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000e1c33 : or byte ptr [rax], al ; mov rax, r15 ; call rax
0x0000000000164264 : or byte ptr [rax], al ; ret
0x0000000000161584 : or byte ptr [rax], al ; syscall
0x000000000015fe1c : or byte ptr [rax], al ; test eax, eax ; jne 0x15fe39 ; xor eax, eax ; pop rbp ; ret
0x00000000000be1dd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be21b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be1bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000018931e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013fc48 : or byte ptr [rbp + 0x2e], dh ; add rsp, 0x38 ; ret
0x000000000005ba67 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x0000000000049f97 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x0000000000158e28 : or byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000000884bc : or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000013f7b3 : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x00000000000f39ff : or byte ptr [rbp + 0x63], cl ; ror byte ptr [rcx + 1], 1 ; ret 0x8948
0x00000000000f1084 : or byte ptr [rbp + 1], al ; ret 0x428d
0x00000000000458c7 : or byte ptr [rbp + 6], dh ; addss xmm0, xmm0 ; ret
0x000000000014b6a9 : or byte ptr [rbp - 0x744d8a2e], al ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x000000000012ffec : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000332f9 : or byte ptr [rbx + 0x1974fdf8], al ; pop rbx ; ret
0x00000000000332d7 : or byte ptr [rbx + 0x37403fe], al ; ret
0x0000000000027626 : or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000000926ee : or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000014bd69 : or byte ptr [rbx + 0x5d], bl ; jmp rcx
0x000000000008e5a9 : or byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; ret
0x00000000000a1c27 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005877a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a25f7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002848b : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001568b6 : or byte ptr [rbx + 0x74fff878], al ; jnp 0x156849 ; ret 0x3901
0x000000000011d830 : or byte ptr [rbx + 0x94801e2], al ; retf 0x8948
0x000000000009f3e0 : or byte ptr [rbx + 0xf4801e0], al ; ret 0xfc3
0x00000000000445ee : or byte ptr [rbx + rax + 0x5f], cl ; and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x00000000000445b0 : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000003f4dd : or byte ptr [rbx + rcx*4 + 0xc], cl ; and al, 0xe9 ; retf
0x0000000000092a53 : or byte ptr [rbx + rcx*4 + 4], cl ; and al, 0xe9 ; retf
0x000000000012b416 : or byte ptr [rbx - 0x76b7f78d], cl ; ret 0x4b8b
0x0000000000085018 : or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x00000000000979d8 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000014c5a6 : or byte ptr [rcx + 0x29], al ; rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000a6353 : or byte ptr [rcx + 0x29], cl ; ret
0x000000000005abcb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000014e971 : or byte ptr [rcx + 0x39], al ; sbb byte ptr [r15], r9b ; xchg eax, edi ; ret 0xd284
0x000000000002ad83 : or byte ptr [rcx + 0x39], cl ; retf
0x000000000002d896 : or byte ptr [rcx + 0x39], cl ; retf 0x850f
0x000000000014edd1 : or byte ptr [rcx + 0x3b], al ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000001017e8 : or byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x000000000013f931 : or byte ptr [rcx + 0x80fe], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000015d85b : or byte ptr [rcx + 1], cl ; idiv byte ptr [rcx] ; retf 0x850f
0x0000000000058c9b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000059e11 : or byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000099553 : or byte ptr [rcx + 1], cl ; ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000059be0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000000abcc9 : or byte ptr [rcx + rax - 0x40], 0x3e ; jmp rax
0x000000000003f61c : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; cli ; retf 0xffff
0x000000000003f525 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; int1 ; retf
0x000000000003f672 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000003f5c6 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; push rax ; retf
0x0000000000042c53 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x0000000000042354 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret 0xff9d
0x000000000003e84b : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf
0x000000000004344c : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xff8c
0x0000000000043754 : or byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xff89
0x0000000000109092 : or byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x25356
0x000000000011ce3c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000012fb3f : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012fa71 : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012f561 : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esp ; call rax
0x00000000000a2bc7 : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop r12 ; pop r13 ; ret
0x00000000000fc370 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xf8da6
0x000000000014c445 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000115d2b : or byte ptr [rcx + rcx*4 - 0x1e], cl ; mov eax, 0x10f ; syscall
0x000000000015103c : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000005ea23 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x000000000004aab1 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x00000000000a3c23 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000013feb6 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105acb : or byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x00000000000f482f : or byte ptr [rcx + rcx*4 - 0x3a], cl ; call 0xf0ab6
0x0000000000085506 : or byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000011a5b1 : or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000862b4 : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; ret
0x000000000013fb2a : or byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000012f4fc : or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000008c332 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000012f849 : or byte ptr [rcx + rcx*4 - 6], 0xf ; adc dword ptr [rbp - 0x78], ecx ; call rax
0x0000000000058ca2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000005b53c : or byte ptr [rcx - 0x39], cl ; ret 0xc001
0x0000000000100f65 : or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x000000000015d50d : or byte ptr [rcx - 0x73], al ; push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000000000011d782 : or byte ptr [rcx - 0x75], cl ; add dword ptr [rbx + 0x94901e0], eax ; ret
0x000000000010314b : or byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x63], cl ; retf
0x000000000010314a : or byte ptr [rcx - 0x75], r9b ; push rsi ; adc byte ptr [rax + 0x63], cl ; retf
0x00000000000b6cdf : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000073fff : or byte ptr [rcx - 0x77], al ; ret
0x00000000000d03e8 : or byte ptr [rcx - 0x77], al ; ret 0x2a74
0x00000000000d02b7 : or byte ptr [rcx - 0x77], al ; ret 0x7b75
0x000000000014c433 : or byte ptr [rcx - 0x77], cl ; in al, 0x48 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x00000000000822cf : or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; ret
0x0000000000131bb7 : or byte ptr [rcx - 0x77], cl ; retf 0x8944
0x0000000000125b7c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125b8d ; ret
0x0000000000125c0c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125c1d ; ret
0x0000000000125cac : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125cbd ; ret
0x0000000000125d3c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125d4d ; ret
0x0000000000125e6c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125e7d ; ret
0x0000000000125f0c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125f1d ; ret
0x0000000000125fac : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125fbd ; ret
0x000000000012604c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12605d ; ret
0x00000000001260dc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1260ed ; ret
0x0000000000126177 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126188 ; ret
0x000000000012620c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12621d ; ret
0x000000000012655e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12656f ; ret
0x00000000001265ee : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1265ff ; ret
0x000000000012667e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12668f ; ret
0x00000000001266fe : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12670f ; ret
0x000000000012681e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12682f ; ret
0x00000000001268ae : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1268bf ; ret
0x000000000012693e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12694f ; ret
0x00000000001269ce : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1269df ; ret
0x0000000000126a5e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126a6f ; ret
0x0000000000126aeb : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126afc ; ret
0x0000000000126b6e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126b7f ; ret
0x00000000000714f2 : or byte ptr [rcx - 0x7d], al ; retf
0x000000000005e4b8 : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000714de : or byte ptr [rcx - 0x7f], al ; retf
0x0000000000070250 : or byte ptr [rcx - 0xa], al ; ret
0x00000000000ede73 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000110316 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000065fb8 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001103b8 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ef38c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000ef30f : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000aba9f : or byte ptr [rcx], bh ; int1 ; jne 0xaba95 ; ret
0x00000000000ef2f6 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000cd0e3 : or byte ptr [rcx], ch ; ret
0x00000000000f0f1e : or byte ptr [rcx], ch ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x000000000009f291 : or byte ptr [rcx], cl ; ret 0x37e9
0x000000000012eb2e : or byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000004a557 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000101e3a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010f54c : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000002f2c7 : or byte ptr [rdi], 0x85 ; retf 0xfff5
0x00000000000bf2ab : or byte ptr [rdi], 0xa2 ; jmp 0xbf277
0x00000000000a9920 : or byte ptr [rdi], cl ; add dword ptr [rbp + 0x19], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000013a764 : or byte ptr [rdi], cl ; and dword ptr [rbp + 1], 0 ; add dh, dh ; ret 0xf04
0x00000000000370b8 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000910e5 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000efadf : or byte ptr [rdi], cl ; mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000151075 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015ad9e : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000112e34 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000027b1b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014be92 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000014d359 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000055518 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000014b63e : or byte ptr [rdi], cl ; retf 0x5089
0x000000000014b6b0 : or byte ptr [rdi], cl ; retf 0xd189
0x00000000000f806f : or byte ptr [rdi], cl ; test dword ptr [rdx - 0x9ffffff], ebp ; ret 0x7420
0x00000000000d70d3 : or byte ptr [rdi], cl ; test dword ptr [rsi - 0x76000003], eax ; retf 0x8348
0x000000000006f7b3 : or byte ptr [rdi], cl ; test edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000000000007063a : or byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000111e6b : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x0000000000105b60 : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000001251e8 : or byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000058842 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8948
0x00000000000f0b02 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8040
0x0000000000027232 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000a2101 : or byte ptr [rdx + 0xc], dh ; mov qword ptr [rdi], rsi ; ret
0x00000000000ef332 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000ef3a2 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x0000000000116986 : or byte ptr [rip + 0x100f], ah ; ret
0x0000000000116985 : or byte ptr [rip + 0x100f], r12b ; ret
0x0000000000116c31 : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9b75
0x00000000000b9891 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000b6ca0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000038a2c : or byte ptr [rsi], bh ; sbb eax, dword ptr [rax] ; syscall
0x00000000000ef3c7 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ef327 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000049a5a : or ch, byte ptr [rdi] ; sbb al, byte ptr [rax] ; syscall
0x00000000000450df : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000a7ad5 : or cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000145d60 : or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000145223 : or cl, byte ptr [rax + 0xf] ; retf 0xe8c0
0x000000000008bb39 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000092066 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000043aa2 : or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x00000000000fea59 : or cl, byte ptr [rax - 0x77] ; retf 0xd348
0x000000000018065c : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x00000000000875b9 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000066674 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000012b501 : or cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000056d76 : or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000014c969 : or cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x000000000017bb86 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000152c42 : or cl, byte ptr [rsi - 0x12] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000822d3 : or cl, ch ; ret
0x000000000009db8b : or cl, ch ; ret 0xfffe
0x0000000000025717 : or cl, ch ; retf
0x00000000000de170 : or cl, ch ; retf 0xfffa
0x00000000000bebb5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000170fc3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000451d5 : or dh, byte ptr [rbp + 8] ; fadd st(0) ; add rsp, 8 ; ret
0x00000000000f125a : or dh, byte ptr [rsi + rdi + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014480b : or dh, dh ; ret 0x7401
0x000000000009c49b : or dh, dh ; ret 0xf02
0x000000000004559d : or dh, dl ; addps xmm0, xmm0 ; ret
0x00000000000993e2 : or dl, byte ptr [rip + 0x10894800] ; ret
0x00000000001103ca : or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000162531 : or dword ptr [rax + 0x39], ecx ; ret
0x00000000000fdc9b : or dword ptr [rax + 0x39], ecx ; ret 0x850f
0x00000000000a7aba : or dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000100ff6 : or dword ptr [rax + 0x39], ecx ; retf 0x850f
0x000000000003579e : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x0000000000167f07 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000116e36 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x000000000013b008 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0xb40d0 ; call rax
0x0000000000150258 : or dword ptr [rax - 0x73], ecx ; mov ebp, 0xc8 ; call rax
0x00000000000cadec : or dword ptr [rax - 0x75], 0x5d ; mov al, 0x89 ; ret 0xff25
0x0000000000085b2c : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x00000000000659d3 : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000011cec3 : or dword ptr [rax - 0x77], ecx ; retf
0x00000000000f5d76 : or dword ptr [rax - 0x77], ecx ; retf 0xd348
0x00000000001194ad : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34adcbd
0x00000000000d664d : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000035146 : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000009bd45 : or dword ptr [rax - 0x7d], ecx ; retf 0xb804
0x00000000000b9bce : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000156484 : or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aac9e : or dword ptr [rax], eax ; add bh, dh ; ret
0x000000000016455a : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001817dd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001891cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181737 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000154d74 : or dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000027b32 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014b561 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000010f77a : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000011bb00 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000b3cde : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000fce66 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8341
0x00000000001969ad : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000010e53e : or dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000b8de5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000015ffe0 : or dword ptr [rax], eax ; add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x0000000000123f27 : or dword ptr [rax], eax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000156390 : or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000015fe6e : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x8b619] ; call qword ptr [rax]
0x000000000015f861 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x8bc26] ; call qword ptr [rax]
0x000000000014fb1c : or dword ptr [rax], eax ; syscall
0x0000000000191e76 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000085b77 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000917f0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000009701c : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000137bde : or dword ptr [rcx + 0xf], eax ; retf
0x000000000009336a : or dword ptr [rcx + rax - 0x28], 0x3e ; jmp rax
0x00000000000ba76d : or dword ptr [rcx - 0x73], 0xc ; or edi, dword ptr [rsi] ; jmp rcx
0x000000000012505c : or dword ptr [rcx - 0x77], ecx ; ret 0x3948
0x000000000012bf02 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe901
0x000000000006f4ff : or dword ptr [rcx - 1], 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000112e88 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000163f27 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000142c2e : or dword ptr [rdi + rbp*8 - 0x7c], esi ; ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x000000000005e79c : or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x0000000000046ea2 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001699bc : or dword ptr [rdi], ecx ; sub dword ptr [rdi], esp ; jmp r9
0x000000000017bb66 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000a24b4 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x00000000000a2463 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x0000000000142bfb : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd308
0x00000000000a2537 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x0000000000049502 : or dword ptr [rdx], ebx ; add byte ptr [rax + 1], cl ; retf
0x0000000000113b38 : or dword ptr [rdx], ecx ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000065ddc : or dword ptr [rip + 0x3d8d4800], edx ; retf 0x1546
0x000000000009d18b : or dword ptr [rip + 0x5b050f00], edx ; ret
0x000000000018ac4f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a0a7a : or eax, 0x115954 ; mov rdx, rcx ; jmp 0xa0a3f
0x00000000000e60a1 : or eax, 0x142b800 ; add byte ptr [rax], al ; syscall
0x0000000000117492 : or eax, 0x14ba ; add byte ptr [rcx], ch ; ret 0xc085
0x000000000009a332 : or eax, 0x14ff29 ; call 0x1165c7
0x0000000000045439 : or eax, 0x1795f2 ; mulsd xmm0, xmm1 ; ret
0x0000000000045413 : or eax, 0x179628 ; mulsd xmm0, xmm1 ; ret
0x00000000000452af : or eax, 0x17975c ; orpd xmm0, xmm1 ; ret
0x000000000013f6ea : or eax, 0x1975c085 ; mov eax, r8d ; ret
0x00000000000bb961 : or eax, 0x1c478d48 ; ret
0x00000000000bc7d1 : or eax, 0x1d478d48 ; ret
0x000000000017bbe8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000011ae3e : or eax, 0x1f88300 ; jg 0x11ae4d ; ret
0x000000000011923f : or eax, 0x200 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d7447 : or eax, 0x30c48348 ; pop rbx ; ret
0x000000000013006a : or eax, 0x3f8348 ; je 0x130087 ; ret
0x000000000008373a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011c3a7 : or eax, 0x415c4100 ; pop rbp ; ret
0x000000000011c36e : or eax, 0x415d5900 ; pop rsp ; pop r13 ; ret
0x00000000001383ee : or eax, 0x42b60f90 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e4402 : or eax, 0x440f4800 ; ret 0x854d
0x000000000015a84a : or eax, 0x44c03145 ; mov eax, eax ; ret
0x00000000000bff43 : or eax, 0x450f4800 ; ret 0x66c3
0x00000000000a2402 : or eax, 0x450f4800 ; ret 0xfc3
0x000000000011a87f : or eax, 0x4c000d3c ; mov eax, eax ; ret
0x000000000010fad1 : or eax, 0x528b4800 ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x0000000000090a12 : or eax, 0x5bd88948 ; pop rbp ; pop r12 ; ret
0x000000000011be54 : or eax, 0x5c415d00 ; pop r13 ; ret
0x00000000000baa25 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000011ac7e : or eax, 0x74d28500 ; or al, 0xf7 ; ret 0xfc07
0x000000000011b607 : or eax, 0x74db8500 ; or al, 0xf7 ; ret
0x0000000000116a31 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000071e71 : or eax, 0x83480000 ; ret 0x4904
0x0000000000182387 : or eax, 0x83480000 ; ret 0x4910
0x0000000000183f21 : or eax, 0x83480000 ; ret 0xe910
0x00000000001823b5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000bc119 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00000000000501d5 : or eax, 0x89410000 ; ret 0xd231
0x000000000014f7c7 : or eax, 0x8948000a ; ret 0x8548
0x00000000000e45a9 : or eax, 0x8948fff4 ; ret 0x8548
0x00000000000cc10a : or eax, 0x89490000 ; ret
0x00000000000ae308 : or eax, 0x894d0000 ; retf
0x00000000000c80ce : or eax, 0xb8480000 ; ret 0xffff
0x0000000000044647 : or eax, 0xc031fffe ; pop rbp ; ret
0x000000000011a8b1 : or eax, 0xc0894c00 ; add rsp, 8 ; ret
0x000000000011a881 : or eax, 0xc0894c00 ; ret
0x00000000000d2992 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000000a3632 : or eax, 0xf48000f ; ret 0x66c3
0x000000000007f5a7 : or eax, 0xf6fffff8 ; ret 0xf10
0x0000000000170e73 : or eax, 0xf7f0ff3 ; ret
0x00000000000f1a04 : or eax, 0xf84df ; movsxd rcx, edx ; jmp 0xf1a3a
0x0000000000046701 : or eax, 0xffffffff ; ret
0x00000000001882e9 : or eax, 1 ; ret
0x000000000018f261 : or eax, 1 ; vzeroupper ; ret
0x000000000013adcc : or eax, dword ptr [r8] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x000000000018157d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001840c1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001815a1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000133bb2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133b8c
0x0000000000133e22 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133dfc
0x000000000014b5dd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bb95 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ae488 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000198b99 : or eax, dword ptr [rax] ; add byte ptr [rbx - 0x70f08b06], al ; retf
0x0000000000080dde : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000004b422 : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; ret
0x000000000013adcd : or eax, dword ptr [rax] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x000000000013b8f7 : or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000010a512 : or eax, dword ptr [rax] ; call 0x36fc4
0x000000000013ae7a : or eax, dword ptr [rax] ; call 0x978f4
0x000000000013ae79 : or eax, dword ptr [rax] ; call 0x978f5
0x000000000013b00e : or eax, dword ptr [rax] ; call rax
0x0000000000130390 : or eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000133468 : or eax, dword ptr [rax] ; syscall
0x00000000001337a9 : or eax, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; jl 0x1337dd ; cmp al, ch ; retf 0x114
0x0000000000112f48 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000013ba83 : or eax, dword ptr ss:[rax] ; syscall
0x000000000004560d : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000004a640 : or eax, edi ; ret
0x000000000004551b : or eax, edx ; movq xmm0, rax ; ret
0x0000000000055bab : or eax, edx ; ret
0x0000000000132ef4 : or eax, esi ; bswap eax ; ret
0x000000000005ad90 : or eax, esi ; movq xmm0, rax ; ret
0x0000000000122116 : or eax, esi ; ret
0x000000000019a1a4 : or ebx, edi ; je 0x19a161 ; xor r10d, r10d ; jmp 0x19a180
0x0000000000171033 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000114b3a : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000000a7af0 : or ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000009f874 : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000000e3eeb : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012c81d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x000000000009701d : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000d21f4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000d2244 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000314a9 : or ecx, dword ptr [rcx - 0x77] ; int1 ; mov r10, rcx ; jmp 0x31470
0x000000000014b6a4 : or ecx, dword ptr [rdi] ; retf 0x5389
0x00000000000ba9e3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a3631 : or ecx, dword ptr [rip + 0xf48000f] ; ret 0x66c3
0x00000000000453f2 : or ecx, eax ; movq xmm0, rcx ; ret
0x000000000013f08c : or edi, dword ptr [rdx + 0x104] ; cmove eax, edx ; ret
0x00000000001693e2 : or edi, dword ptr [rsi] ; jmp r9
0x00000000000b9ef0 : or edi, dword ptr [rsi] ; jmp rcx
0x000000000011bb50 : or edx, 0x40 ; mov eax, ecx ; syscall
0x00000000000450b9 : or edx, esi ; je 0x45010 ; ret
0x00000000000dab9f : or esi, dword ptr [rax + 0xd] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000131afd : or esi, dword ptr [rbp - 0x36] ; jmp 0x131abc
0x000000000004576f : or esi, eax ; movd xmm0, esi ; ret
0x000000000005ad49 : or esi, eax ; or esi, edx ; movd xmm0, esi ; ret
0x00000000001169d2 : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000085d04 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000170f53 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000005ad4b : or esi, edx ; movd xmm0, esi ; ret
0x0000000000085b78 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000917f1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000142943 : or esp, edi ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000055cb3 : or esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000163f26 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000046ea1 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000017bb65 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000011bb4f : or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000001710a2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171032 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170fc2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170f52 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000013b8f6 : or r8, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000102e3e : or r9b, bpl ; retf
0x00000000000822d2 : or r9b, r13b ; ret
0x000000000017bbe7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000083739 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005be54 : or rax, 0xffffffff89410000 ; ret 0xd231
0x0000000000046700 : or rax, 0xffffffffffffffff ; ret
0x000000000018aa32 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182607 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004a63f : or rax, rdi ; ret
0x000000000004551a : or rax, rdx ; movq xmm0, rax ; ret
0x000000000005ad8f : or rax, rsi ; movq xmm0, rax ; ret
0x0000000000122115 : or rax, rsi ; ret
0x000000000019a1a3 : or rbx, rdi ; je 0x19a162 ; xor r10d, r10d ; jmp 0x19a181
0x00000000000453f1 : or rcx, rax ; movq xmm0, rcx ; ret
0x00000000000452b4 : orpd xmm0, xmm1 ; ret
0x00000000000452b5 : orps xmm0, xmm1 ; ret
0x0000000000045672 : orps xmm0, xmm3 ; ret
0x0000000000130208 : out 0, al ; add byte ptr [rax], al ; syscall
0x00000000000d7e34 : out 0, al ; and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x000000000014a748 : out 0, eax ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x000000000009f3c9 : out 0x14, eax ; add byte ptr [rbx + 0x22], dh ; lea rax, [rax - 8] ; ret
0x000000000004a63d : out 0x20, eax ; or rax, rdi ; ret
0x00000000000aba71 : out 0x39, al ; enter -0x1d8c, 0x4c ; mov eax, eax ; ret
0x000000000019775b : out 0x3e, eax ; jmp rdi
0x000000000009e813 : out 0x41, al ; pop rsp ; pop r13 ; jmp rax
0x000000000009005a : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000124792 : out 0x44, eax ; mov eax, esi ; syscall
0x00000000001104b8 : out 0x44, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0c4a : out 0x45, eax ; xor eax, eax ; lea r9, [rsp + 0x28] ; call rbx
0x000000000012eaa7 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148b81 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000014c448 : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x00000000000a02df : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000110654 : out 0x48, al ; mov edi, ebp ; mov eax, 0x135 ; syscall
0x000000000015a973 : out 0x48, al ; mov edi, ebx ; call rcx
0x00000000001480c0 : out 0x48, al ; mov edi, ebx ; mov rcx, r13 ; call r10
0x00000000001193a4 : out 0x48, al ; mov edi, esp ; call 0x255d6
0x00000000000d914c : out 0x48, al ; mov edx, eax ; mov rbx, rax ; call 0x253b9
0x00000000000d917e : out 0x48, eax ; mov edx, eax ; mov rbx, rax ; call 0x253b9
0x00000000000c1021 : out 0x48, eax ; mov esi, dword ptr [rsp + 0x10] ; call rbx
0x00000000000c0aa1 : out 0x48, eax ; mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000009cfb3 : out 0x48, eax ; mov esi, ebp ; call 0x99296
0x000000000009f450 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000048b81 : out 0x4c, al ; mov edi, ebp ; call rax
0x0000000000047b55 : out 0x4c, al ; mov edi, ebp ; call rbx
0x0000000000048b96 : out 0x4c, al ; mov edi, edi ; call 0x255d6
0x000000000011ec9a : out 0x4c, al ; mov edi, edi ; call r14
0x00000000000c094b : out 0x4c, eax ; lea ecx, [rsp + 0x30] ; call rbx
0x00000000000604de : out 0x4c, eax ; mov dword ptr [rbp - 0xe8], eax ; call rax
0x00000000000a4fd8 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5faa : out 0x57, eax ; ret
0x000000000008a2b1 : out 0x5b, al ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000019a866 : out 0x5b, al ; ret
0x00000000000e05e8 : out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000000372f7 : out 0x80, eax ; sete al ; ret
0x00000000000776d3 : out 0x83, al ; ret
0x0000000000130172 : out 0x89, al ; out dx, eax ; mov eax, 0xe4 ; syscall
0x00000000000cd13d : out 0x89, al ; ret
0x00000000000f71d5 : out 0x89, eax ; ret
0x00000000000d895f : out 0x89, eax ; ret 0x44c7
0x0000000000064144 : out 0x92, eax ; sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x000000000012460f : out 0xb8, eax ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000049e35 : out 0xb8, eax ; retf 0
0x000000000006549a : out 0xba, al ; add byte ptr [rax + rax], al ; add al, ch ; retf
0x0000000000158e8d : out 0xc7, eax ; add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r8
0x000000000013038e : out 0xe7, al ; or eax, dword ptr [rax] ; pop rbp ; ret
0x000000000011f83d : out 0xe8, al ; popfq ; jo 0x11f849 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ed6c8 : out 0xe8, al ; ret 1
0x0000000000117f6f : out 0xe8, al ; retf
0x00000000000eb990 : out 0xe8, al ; retf 1
0x000000000013ac4f : out 0xe8, eax ; imul esp, esp, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d6464 : out 0xe8, eax ; jbe 0xd641e ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000008c610 : out 0xe8, eax ; mov edx, 0x89000011 ; ret 0x3948
0x0000000000039e82 : out 0xe8, eax ; pop rax ; retf 0xd
0x000000000012c1b9 : out 0xe8, eax ; rcl dword ptr [rdx - 0x76b70011], 1 ; ret
0x00000000000d9277 : out 0xe8, eax ; ret
0x000000000004e868 : out 0xe8, eax ; ret 0xad
0x000000000019b088 : out 0xe8, eax ; ret 0xe8a2
0x000000000019af88 : out 0xe8, eax ; ret 0xe8a3
0x000000000019ae88 : out 0xe8, eax ; ret 0xe8a4
0x000000000019ad88 : out 0xe8, eax ; ret 0xe8a5
0x00000000000e93cf : out 0xe8, eax ; retf
0x000000000019ac80 : out 0xe8, eax ; retf 0xe8a6
0x000000000019ab80 : out 0xe8, eax ; retf 0xe8a7
0x000000000007f891 : out 0xe8, eax ; stc ; pop rbx ; cli ; dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x0000000000126ca3 : out 0xef, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000017083a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001708ba : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000096f53 : out 0xf8, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000081926 : out 0xff, eax ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000014f836 : out 1, al ; or al, byte ptr [rax] ; syscall
0x0000000000108889 : out 3, eax ; call 0x25334
0x000000000012a822 : out 8, al ; add byte ptr [rax + 0x29], cl ; retf 0xd3e8
0x0000000000139143 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000062de9 : out dx, al ; adc byte ptr [rcx + 0x39], cl ; ret
0x000000000013f532 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x13f53f ; ret
0x000000000004e4c0 : out dx, al ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc220
0x00000000000e8902 : out dx, al ; add dword ptr [rdx - 0x75], ecx ; cmp al, 0xf3 ; call 0x25358
0x000000000009cfb6 : out dx, al ; call 0x99293
0x00000000000a1832 : out dx, al ; call rax
0x00000000000e48a6 : out dx, al ; cwde ; adc byte ptr [rax], al ; syscall
0x00000000001442ae : out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f6739 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000013549a : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000152d8d : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000152dcd : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0xbeeb
0x000000000013d1eb : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001441a3 : out dx, al ; dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x000000000013fed1 : out dx, al ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2616 : out dx, al ; fst qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000e5fa8 : out dx, al ; jmp rdi
0x0000000000122acd : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x0000000000085d05 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4836 : out dx, al ; mov ebx, 0x89480010 ; ret 0x8548
0x0000000000039e7f : out dx, al ; mov edi, r12d ; call 0x1168e6
0x0000000000090057 : out dx, al ; mov edi, r12d ; mov eax, r9d ; syscall
0x000000000016b00a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000120219 : out dx, al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000eb1f1 : out dx, al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149c02 : out dx, al ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000489f9 : out dx, al ; mov rdi, r12 ; call rax
0x000000000009d6f2 : out dx, al ; mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000159c9d : out dx, al ; mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159cb7 : out dx, al ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000014d255 : out dx, al ; mov rdi, rbx ; call rax
0x0000000000170c4a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000018907e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003ef26 : out dx, al ; or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x0000000000161583 : out dx, al ; or byte ptr [rax], al ; syscall
0x000000000002ec0f : out dx, al ; ret 0
0x0000000000049cce : out dx, al ; ret 9
0x000000000015387c : out dx, al ; sub eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bfe19 : out dx, al ; xor eax, eax ; ret
0x00000000000e0144 : out dx, al ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000d252d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000d70de : out dx, eax ; adc byte ptr [rcx], ch ; ret 0x5589
0x0000000000199a1a : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007eb89 : out dx, eax ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000013e05a : out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x000000000008adc2 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008ae1e : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115a31 : out dx, eax ; call 0x111cf3
0x0000000000109064 : out dx, eax ; call 0x25353
0x000000000003923a : out dx, eax ; call 0x254a3
0x00000000000d9311 : out dx, eax ; call 0x255a3
0x000000000007e035 : out dx, eax ; call 0x8a273
0x000000000009beb1 : out dx, eax ; call 0x98103
0x0000000000049ccc : out dx, eax ; call 0xe5fc3
0x000000000014c44b : out dx, eax ; call qword ptr [rax]
0x00000000000e166d : out dx, eax ; call r12
0x0000000000027272 : out dx, eax ; call rax
0x0000000000047b58 : out dx, eax ; call rbx
0x0000000000149cc9 : out dx, eax ; call rcx
0x0000000000126364 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000126f7a : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012eb4d : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000012dc8b : out dx, eax ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000fc569 : out dx, eax ; enter 0xf66, -0x11 ; ret 0xf41
0x000000000012ba0a : out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000014a68d : out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001105ae : out dx, eax ; mov eax, 0x135 ; syscall
0x0000000000117a4d : out dx, eax ; mov eax, 0x147 ; syscall
0x0000000000117bad : out dx, eax ; mov eax, 0x148 ; syscall
0x0000000000111d9a : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000004a08c : out dx, eax ; mov eax, 0xca ; syscall
0x0000000000130174 : out dx, eax ; mov eax, 0xe4 ; syscall
0x000000000011bafe : out dx, eax ; mov eax, 9 ; syscall
0x0000000000105cf0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000016ae3a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af36 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae82 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ab7f0 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000009a76d : out dx, eax ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x000000000011d930 : out dx, eax ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000011ccb7 : out dx, eax ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000ab950 : out dx, eax ; mov rax, r8 ; ret
0x0000000000059618 : out dx, eax ; mov rax, rdx ; ret
0x00000000000a129d : out dx, eax ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000000cdbc9 : out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000170cca : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000018917d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000080ddd : out dx, eax ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000008a2b5 : out dx, eax ; pop rbp ; pop r12 ; jmp rax
0x000000000009d6f5 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a7be : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000009ce62 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014b3ae : out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000190ec3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190e9b
0x0000000000190f41 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190f19
0x00000000001913d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1913ab
0x0000000000191451 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191429
0x00000000001924f3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1924cb
0x0000000000192571 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192549
0x0000000000192a03 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1929db
0x0000000000192a81 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192a59
0x0000000000190ac3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190ad8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190aed : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fc56d : out dx, eax ; ret 0xf41
0x00000000000be7f3 : out dx, eax ; ret 0xf66
0x00000000000be7d6 : out dx, eax ; retf 0x4466
0x0000000000096807 : out dx, eax ; ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x0000000000138cf2 : out dx, eax ; ror byte ptr [rdi], 0xb7 ; retf
0x00000000000ac15e : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000191fdc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191fc5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191fae : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000190a6a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000159ca0 : out dx, eax ; xor eax, eax ; call r14
0x0000000000159cba : out dx, eax ; xor eax, eax ; call rcx
0x0000000000122a92 : out dx, eax ; xor eax, eax ; ret
0x000000000011d90f : out dx, eax ; xor edx, edx ; mov esi, 1 ; call r12
0x0000000000087a58 : out dx, eax ; xor edx, edx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011cc86 : out dx, eax ; xor esi, esi ; call r12
0x000000000018382e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000dcebb : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx + 1], al ; ret 0x8944
0x000000000019410e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000125101 : outsb dx, byte ptr [rsi] ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000105306 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0xe74
0x0000000000045361 : outsb dx, byte ptr [rsi] ; enter -0x76b8, 7 ; subsd xmm0, xmm1 ; ret
0x000000000011a77f : outsb dx, byte ptr [rsi] ; enter 0x4866, 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000048f0b : outsb dx, byte ptr [rsi] ; fimul dword ptr [rax - 0x77] ; retf 0x4866
0x000000000006f000 : outsb dx, byte ptr [rsi] ; fmul dword ptr [rbx + 0xf660446] ; insb byte ptr [rdi], dx ; ret
0x0000000000066ebe : outsb dx, byte ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000090753 : outsb dx, byte ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0xf66
0x000000000016bd9e : outsb dx, byte ptr [rsi] ; in eax, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000128d06 : outsb dx, byte ptr [rsi] ; ja 0x128d1b ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000005546d : outsb dx, byte ptr [rsi] ; jge 0x5548f ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000127b3b : outsb dx, byte ptr [rsi] ; or al, 0 ; syscall
0x000000000014f7c6 : outsb dx, byte ptr [rsi] ; or eax, 0x8948000a ; ret 0x8548
0x000000000002898d : outsb dx, byte ptr [rsi] ; ret
0x00000000001629c0 : outsb dx, byte ptr [rsi] ; ret 0x160f
0x00000000000456ca : outsb dx, byte ptr [rsi] ; ret 0x1789
0x0000000000098b28 : outsb dx, byte ptr [rsi] ; ret 0x4866
0x0000000000092313 : outsb dx, byte ptr [rsi] ; ret 0x4d83
0x00000000000d5063 : outsb dx, byte ptr [rsi] ; ret 0x8948
0x00000000000286f2 : outsb dx, byte ptr [rsi] ; ret 0x8d48
0x000000000011c116 : outsb dx, byte ptr [rsi] ; ret 0xc931
0x00000000000940a4 : outsb dx, byte ptr [rsi] ; ret 0xde9
0x0000000000091eb6 : outsb dx, byte ptr [rsi] ; ret 0xe083
0x0000000000097194 : outsb dx, byte ptr [rsi] ; ret 0xe480
0x0000000000092e5b : outsb dx, byte ptr [rsi] ; ret 0xf66
0x0000000000045311 : outsb dx, byte ptr [rsi] ; ret 0xfc3
0x00000000000290de : outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000096f90 : outsb dx, byte ptr [rsi] ; retf
0x000000000012ea6e : outsb dx, byte ptr [rsi] ; retf 0x4866
0x00000000000f6052 : outsb dx, byte ptr [rsi] ; retf 0x8b48
0x0000000000091c76 : outsb dx, byte ptr [rsi] ; retf 0x8d4a
0x0000000000093fc0 : outsb dx, byte ptr [rsi] ; retf 0xc189
0x000000000004accd : outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000004587d : outsb dx, byte ptr [rsi] ; rol bl, 0xf3 ; addps xmm0, xmm0 ; ret
0x00000000000358b0 : outsb dx, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b6f24], dl ; ret
0x000000000004acc8 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000005ae24 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000551f9 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x7c89
0x0000000000039c38 : outsb dx, byte ptr [rsi] ; shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x000000000015fa16 : outsb dx, byte ptr [rsi] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000005ef02 : outsd dx, dword ptr [rsi] ; adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000015b116 : outsd dx, dword ptr [rsi] ; adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000061f98 : outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000045dd2 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a4722 : outsd dx, dword ptr [rsi] ; add cl, byte ptr [rax - 0x7d] ; ret 0x6610
0x00000000000e43dc : outsd dx, dword ptr [rsi] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000045a1f : outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x000000000005e213 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000000ac318 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000b017e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000010f966 : outsd dx, dword ptr [rsi] ; jg 0x10f9e8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9b6 : outsd dx, dword ptr [rsi] ; jle 0x10fa30 ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000016b5c2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000016b7c2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000127a83 : outsd dx, dword ptr [rsi] ; or al, 0 ; syscall
0x000000000012de9e : outsd dx, dword ptr [rsi] ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000191ddd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000191e7d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000001919a2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x0000000000191a22 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x00000000000b4bca : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000046a6d : outsd dx, dword ptr [rsi] ; ret
0x000000000005ef0a : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000005fc95 : outsd dx, dword ptr [rsi] ; ret 0x2be
0x000000000008cf98 : outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000008cf7b : outsd dx, dword ptr [rsi] ; ret 0x4866
0x0000000000045ea4 : outsd dx, dword ptr [rsi] ; ret 0x5e8
0x000000000006433f : outsd dx, dword ptr [rsi] ; ret 0x8349
0x0000000000198dc2 : outsd dx, dword ptr [rsi] ; ret 0x8545
0x000000000008b4d2 : outsd dx, dword ptr [rsi] ; ret 0x8948
0x000000000016b777 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000045e85 : outsd dx, dword ptr [rsi] ; ret 0xb4e8
0x0000000000191e82 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000045e96 : outsd dx, dword ptr [rsi] ; ret 0xc35d
0x0000000000045f18 : outsd dx, dword ptr [rsi] ; ret 0xc764
0x0000000000196444 : outsd dx, dword ptr [rsi] ; ret 0xed85
0x0000000000045e6a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000008d04d : outsd dx, dword ptr [rsi] ; ret 0xff3
0x0000000000045b2f : outsd dx, dword ptr [rsi] ; retf
0x000000000004dda4 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000016b842 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x0000000000045e81 : outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000190eba : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000013ae7d : outsd dx, dword ptr [rsi] ; retf 0xfff5
0x00000000000358b6 : outsd dx, dword ptr [rsi] ; sbb eax, dword ptr [rax] ; ret
0x0000000000154db6 : outsd dx, dword ptr [rsi] ; sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x0000000000146830 : outsd dx, dword ptr [rsi] ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0x0000000000181472 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000d2cc4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000d2caf : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000140d7c : pcmpeqd mm3, qword ptr [rip + 0x3948c289] ; retf 0x1677
0x00000000000af765 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x000000000018f10a : pextrw edi, mm0, 0x77 ; ret
0x000000000018c444 : pextrw edi, mm5, 0x74 ; retf
0x000000000005e218 : pinsrw mm0, eax, 6 ; ret
0x000000000005e217 : pinsrw xmm0, eax, 6 ; ret
0x0000000000045565 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000045895 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00000000000af773 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000af322 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaf389 ; xor eax, eax ; ret
0x00000000000af7d5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaf859 ; xor eax, eax ; ret
0x00000000000af804 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaf889 ; xor eax, eax ; ret
0x00000000000d1512 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xd1579 ; xor eax, eax ; ret
0x0000000000045564 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000045894 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000105935 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000d7369 : pop qword ptr [rdx] ; jbe 0xd7374 ; ret
0x000000000014cb38 : pop r11 ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000008772f : pop r12 ; jmp rax
0x000000000009d6e4 : pop r12 ; mov rax, r8 ; pop r13 ; ret
0x0000000000087a5c : pop r12 ; pop r13 ; jmp rax
0x000000000007d273 : pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x0000000000037726 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027097 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2014 : pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000049384 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002921b : pop r12 ; pop r13 ; ret
0x00000000000913c0 : pop r12 ; pop r14 ; ret
0x00000000001302ed : pop r12 ; pop rbp ; ret
0x0000000000032c59 : pop r12 ; ret
0x0000000000087a5e : pop r13 ; jmp rax
0x000000000007d275 : pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000e01cc : pop r13 ; pop r14 ; jmp rax
0x0000000000048a58 : pop r13 ; pop r14 ; pop r15 ; jmp 0x25508
0x0000000000037728 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bad : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027099 : pop r13 ; pop r14 ; ret
0x00000000000f2016 : pop r13 ; pop r15 ; ret
0x0000000000049386 : pop r13 ; pop rbp ; ret
0x000000000002921d : pop r13 ; ret
0x00000000000e01ce : pop r14 ; jmp rax
0x0000000000048a5a : pop r14 ; pop r15 ; jmp 0x25506
0x000000000003772a : pop r14 ; pop r15 ; jmp rax
0x00000000000277e6 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026baf : pop r14 ; pop r15 ; ret
0x000000000002709b : pop r14 ; ret
0x0000000000048a5c : pop r15 ; jmp 0x25504
0x000000000003772c : pop r15 ; jmp rax
0x00000000000277e8 : pop r15 ; pop rbp ; ret
0x0000000000026bb1 : pop r15 ; ret
0x0000000000046e5a : pop r8 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000153942 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000000c3c55 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x000000000002acf6 : pop rax ; call r14
0x000000000002c246 : pop rax ; call r15
0x0000000000153ae9 : pop rax ; call rax
0x000000000002ba60 : pop rax ; call rbx
0x00000000000fb2cb : pop rax ; cmp dh, dh ; ret
0x00000000000a4a42 : pop rax ; dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000015394a : pop rax ; jmp rcx
0x00000000000e7dfa : pop rax ; jne 0xe7e03 ; ret
0x00000000000e7df9 : pop rax ; jne 0xe7e04 ; ret
0x000000000009c193 : pop rax ; mov ah, 0x11 ; add al, ch ; push rsp ; ret
0x0000000000153160 : pop rax ; mov eax, 1 ; ret
0x0000000000037298 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000037226 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000014c504 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000002bdc1 : pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e8 : pop rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa47 : pop rax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7ea : pop rax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000011c42d : pop rax ; mov rax, r12 ; pop rdx ; pop r12 ; ret
0x000000000002fb76 : pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x000000000002b470 : pop rax ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x0000000000046e5b : pop rax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x00000000000608a9 : pop rax ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f206 : pop rax ; or al, 0xf6 ; ret
0x00000000000f764c : pop rax ; or bh, dh ; ret
0x00000000000b8de4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000582ff : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000256fe : pop rax ; pop rbx ; pop rbp ; ret
0x000000000012232f : pop rax ; pop rdi ; call rax
0x0000000000162dd5 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000028ff4 : pop rax ; ret
0x000000000010bc21 : pop rax ; ret 0xa
0x00000000000d9154 : pop rax ; ret 0xfff4
0x000000000009ee54 : pop rax ; retf
0x00000000000a1184 : pop rax ; retf 0x14
0x0000000000039e84 : pop rax ; retf 0xd
0x0000000000146384 : pop rax ; retf 0xfffe
0x00000000001510e0 : pop rax ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d3547 : pop rax ; xor eax, eax ; mov qword ptr [rsp + 0x50], r12 ; call rbx
0x00000000000a7621 : pop rbp ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x000000000013eaa4 : pop rbp ; add dh, dh ; ret
0x00000000000e651a : pop rbp ; clc ; leave ; ret
0x000000000012aaff : pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000087a5f : pop rbp ; jmp rax
0x0000000000149c09 : pop rbp ; jmp rcx
0x000000000014b3b2 : pop rbp ; jmp rdx
0x00000000000e0529 : pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000cadef : pop rbp ; mov al, 0x89 ; ret 0xff25
0x0000000000137f19 : pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x0000000000130781 : pop rbp ; mov eax, 0x89483e74 ; ret
0x00000000001104cc : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008e707 : pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008e5ab : pop rbp ; mov eax, r8d ; ret
0x0000000000091322 : pop rbp ; mov r12, rax ; mov rax, r12 ; pop r12 ; ret
0x00000000000a3577 : pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000037b77 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009d679 : pop rbp ; mov rax, r8 ; pop r12 ; pop r13 ; ret
0x0000000000098864 : pop rbp ; mov rax, r8 ; pop r12 ; ret
0x000000000003bef4 : pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000007d276 : pop rbp ; mov rax, r9 ; pop r14 ; ret
0x000000000009e810 : pop rbp ; mov rsi, r12 ; pop r12 ; pop r13 ; jmp rax
0x000000000014cfec : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000128d77 : pop rbp ; or al, 0 ; syscall
0x0000000000149b35 : pop rbp ; or al, byte ptr [rax] ; syscall
0x000000000008a2b6 : pop rbp ; pop r12 ; jmp rax
0x000000000009d6e3 : pop rbp ; pop r12 ; mov rax, r8 ; pop r13 ; ret
0x0000000000087a5b : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000009ddb3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000026baa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027096 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2013 : pop rbp ; pop r12 ; pop r13 ; pop r15 ; ret
0x000000000002921a : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913bf : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000032c58 : pop rbp ; pop r12 ; ret
0x00000000001397ee : pop rbp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e01cd : pop rbp ; pop r14 ; jmp rax
0x0000000000048a59 : pop rbp ; pop r14 ; pop r15 ; jmp 0x25507
0x0000000000037729 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bae : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002709a : pop rbp ; pop r14 ; ret
0x00000000000f2017 : pop rbp ; pop r15 ; ret
0x0000000000049387 : pop rbp ; pop rbp ; ret
0x0000000000058ca8 : pop rbp ; pop rbx ; ret
0x0000000000025700 : pop rbp ; ret
0x000000000009ee67 : pop rbp ; retf 0x11
0x00000000000e0153 : pop rbp ; setbe al ; movzx eax, al ; ret
0x00000000000a3b1e : pop rbp ; xor eax, eax ; pop r12 ; pop r13 ; ret
0x0000000000114085 : pop rbx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000014bdad : pop rbx ; add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x00000000000bf386 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000007f894 : pop rbx ; cli ; dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x000000000005e54f : pop rbx ; cmovb r10, rdi ; mov rax, r10 ; ret
0x00000000000bf2db : pop rbx ; cmove rax, rdx ; ret
0x00000000000a5e1c : pop rbx ; cmovne rax, rdi ; ret
0x00000000000bf36b : pop rbx ; cmovne rax, rdx ; ret
0x0000000000094bc8 : pop rbx ; jmp rax
0x00000000000f5250 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000008a658 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000014be28 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000001302fe : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x000000000010a286 : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000010f778 : pop rbx ; mov eax, 9 ; pop rbp ; pop r12 ; ret
0x000000000004a6dd : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000015352f : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000049deb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000013f8eb : pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000098659 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913d4 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bfddf : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013eaef : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000889b5 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000008a2b2 : pop rbx ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000091170 : pop rbx ; neg eax ; ret
0x0000000000128f57 : pop rbx ; or al, 0 ; syscall
0x0000000000144478 : pop rbx ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000000bff42 : pop rbx ; or eax, 0x450f4800 ; ret 0x66c3
0x000000000008772e : pop rbx ; pop r12 ; jmp rax
0x0000000000113150 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000049383 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000065659 : pop rbx ; pop r12 ; pop r13 ; ret
0x000000000005ea27 : pop rbx ; pop r12 ; ret
0x0000000000027627 : pop rbx ; pop r14 ; ret
0x000000000008a7bf : pop rbx ; pop rbp ; jmp rax
0x0000000000149c08 : pop rbx ; pop rbp ; jmp rcx
0x00000000000e0528 : pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000001104cb : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008e706 : pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008e5aa : pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000000abfcb : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000037b76 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000098863 : pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x000000000003bef3 : pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000014cfeb : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x000000000009ce63 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000044307 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2012 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000029219 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913be : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000032d80 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001397ed : pop rbx ; pop rbp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000019a132 : pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000256ff : pop rbx ; pop rbp ; ret
0x00000000000332ff : pop rbx ; ret
0x0000000000049231 : pop rbx ; ret 0xfffd
0x000000000006d060 : pop rbx ; retf
0x000000000010f7ce : pop rbx ; setl al ; ret
0x000000000011c98e : pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000bf2ea : pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x00000000000bf335 : pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x00000000000c9af1 : pop rbx ; str word ptr [rax - 0x77] ; ret 0xc148
0x00000000000926ef : pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004a6ac : pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x00000000001302ea : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000014b3af : pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000093240 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014d8a6 : pop rcx ; adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x00000000000a0a7c : pop rcx ; adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0xa0a3d
0x000000000009bcb3 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000001691b7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004549f : pop rcx ; add eax, 0x179b6b ; ret
0x0000000000045804 : pop rcx ; add eax, 0x179ea6 ; ret
0x00000000000457b9 : pop rcx ; add eax, 0x179ee9 ; ret
0x0000000000045794 : pop rcx ; add eax, 0x179f12 ; ret
0x00000000000b21c4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001693b3 : pop rcx ; invd ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000000a4e63 : pop rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000129159 : pop rcx ; or al, 0 ; syscall
0x00000000001826f7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011c370 : pop rcx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015b9e3 : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010582e : pop rcx ; pop rbx ; ret
0x000000000010a22c : pop rcx ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011bf6f : pop rcx ; ret 0xf66
0x000000000009d413 : pop rcx ; retf 0x14
0x0000000000147411 : pop rcx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000f4e16 : pop rcx ; xor eax, eax ; pop rbp ; ret
0x00000000001699b9 : pop rdi ; adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000110ef2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000196582 : pop rdi ; add dword ptr [rcx - 9], eax ; ret
0x000000000018980d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000054eab : pop rdi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000445f1 : pop rdi ; and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x0000000000187ea2 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x0000000000122330 : pop rdi ; call rax
0x000000000016b3d9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b1e9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000048a5d : pop rdi ; jmp 0x25503
0x000000000003772d : pop rdi ; jmp rax
0x00000000000dab3f : pop rdi ; jo 0xdab55 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000e5f84 : pop rdi ; mov eax, 0x3a ; syscall
0x0000000000128a19 : pop rdi ; or al, 0 ; syscall
0x0000000000085017 : pop rdi ; or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x000000000016b009 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ae39 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af35 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae81 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000277e9 : pop rdi ; pop rbp ; ret
0x0000000000124df9 : pop rdi ; push rbp ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000026bb2 : pop rdi ; ret
0x0000000000065b2d : pop rdi ; stc ; sti ; dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x000000000009ae0c : pop rdi ; xor byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000019bf82 : pop rdx ; adc eax, 0x50f0005 ; pop rbx ; ret
0x0000000000182bf6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000054f79 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000117c70 : pop rdx ; add rsp, 0x38 ; ret
0x00000000000da1fe : pop rdx ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000000bfafa : pop rdx ; idiv bh ; pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000127c7a : pop rdx ; insd dword ptr [rdi], dx ; or al, 0 ; syscall
0x000000000011a242 : pop rdx ; mov dl, 0xf0 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000011ceab : pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x00000000000aaca9 : pop rdx ; or dword ptr [rax], eax ; add bh, dh ; ret
0x000000000011c431 : pop rdx ; pop r12 ; ret
0x0000000000162dd6 : pop rdx ; pop rbx ; ret
0x000000000010582d : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000001588d2 : pop rdx ; retf 0xffec
0x0000000000155092 : pop rdx ; stosb byte ptr [rdi], al ; or dword ptr [rax], eax ; syscall
0x0000000000130c52 : pop rdx ; sub al, 6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000d2805 : pop rdx ; test al, 0xf0 ; jne 0xd2839 ; lea rax, [rdi - 0x10] ; ret
0x00000000000a2589 : pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000190ec4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190e9a
0x0000000000190f42 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190f18
0x00000000001913d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1913aa
0x0000000000191452 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191428
0x00000000001924f4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1924ca
0x0000000000192572 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192548
0x0000000000192a04 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1929da
0x0000000000192a82 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192a58
0x000000000018970e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f539 : pop rsi ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d9f2e : pop rsi ; jl 0xd9f44 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000e01cf : pop rsi ; jmp rax
0x0000000000128bb3 : pop rsi ; or al, 0 ; syscall
0x0000000000048a5b : pop rsi ; pop r15 ; jmp 0x25505
0x000000000003772b : pop rsi ; pop r15 ; jmp rax
0x00000000000277e7 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000026bb0 : pop rsi ; pop r15 ; ret
0x000000000002709c : pop rsi ; ret
0x000000000005cdfe : pop rsi ; retf
0x0000000000183a40 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182ef4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184740 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000009aae2 : pop rsp ; and al, 0x20 ; mov qword ptr [rsp + 0x18], r8 ; call rax
0x00000000000d3479 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000015d460 : pop rsp ; and dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000000456d0 : pop rsp ; enter 0x280f, -0x3f ; ret
0x000000000014f709 : pop rsp ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000087730 : pop rsp ; jmp rax
0x00000000000e4158 : pop rsp ; lahf ; adc byte ptr [rax], al ; syscall
0x000000000009d6e5 : pop rsp ; mov rax, r8 ; pop r13 ; ret
0x00000000001818d0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d7368 : pop rsp ; pop qword ptr [rdx] ; jbe 0xd7375 ; ret
0x0000000000087a5d : pop rsp ; pop r13 ; jmp rax
0x000000000007d274 : pop rsp ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x0000000000048a57 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x25509
0x0000000000037727 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027098 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f2015 : pop rsp ; pop r13 ; pop r15 ; ret
0x0000000000049385 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000002921c : pop rsp ; pop r13 ; ret
0x00000000000913c1 : pop rsp ; pop r14 ; ret
0x00000000001302ee : pop rsp ; pop rbp ; ret
0x00000000000da1fd : pop rsp ; pop rdx ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000032c5a : pop rsp ; ret
0x00000000000290f0 : pop rsp ; ret 0xffff
0x0000000000058b89 : pop rsp ; retf 0x4df0
0x000000000006e253 : pop rsp ; retf 0xffff
0x0000000000057757 : pop rsp ; sbb dword ptr [rax], eax ; syscall
0x00000000000a8835 : pop rsp ; syscall
0x000000000007c3d0 : pop rsp ; test al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e1bb9 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000119b42 : pop rsp ; xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000119b02 : pop rsp ; xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x0000000000041ccc : popfq ; adc byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x0000000000029127 : popfq ; insd dword ptr [rdi], dx ; sbb al, 0 ; ret
0x000000000011f83f : popfq ; jo 0x11f847 ; dec dword ptr [rax - 0x77] ; ret
0x000000000007111f : popfq ; loope 0x71127 ; inc dword ptr [rcx - 0xa] ; ret
0x0000000000134f77 : popfq ; or eax, dword ptr [rax] ; syscall
0x0000000000059f0e : popfq ; ret 0x3948
0x00000000000c7cf4 : popfq ; ret 0x840
0x00000000000d5bb7 : popfq ; ret 0xd089
0x000000000014ce17 : popfq ; retf
0x000000000009e0df : popfq ; retf 0x14
0x0000000000048a5f : popfq ; retf 0xfffd
0x00000000000dddf2 : popfq ; sar dh, 0xff ; dec dword ptr [rdi] ; ret 0x8d89
0x0000000000185120 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012a62d : por mm6, mm5 ; dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xeb ; retf 0xf66
0x0000000000170d92 : psllq mm1, qword ptr [r15] ; jg 0x170dad ; ret
0x00000000001738c2 : psllq mm1, qword ptr [r15] ; jg 0x1738dd ; ret
0x0000000000170d93 : psllq mm1, qword ptr [rdi] ; jg 0x170dac ; ret
0x00000000001738c3 : psllq mm1, qword ptr [rdi] ; jg 0x1738dc ; ret
0x00000000000ba166 : psllq mm1, qword ptr [rdi] ; jg 0xba17a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba165 : psllq mm1, qword ptr [rdi] ; jg 0xba17b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba1c7 : psllq mm1, qword ptr [rdi] ; jg 0xba1dc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bae56 : psllq mm1, qword ptr [rdi] ; jg 0xbae6a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bae55 : psllq mm1, qword ptr [rdi] ; jg 0xbae6b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000baeb7 : psllq mm1, qword ptr [rdi] ; jg 0xbaecc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bd476 : psllq mm1, qword ptr [rdi] ; jg 0xbd48a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd475 : psllq mm1, qword ptr [rdi] ; jg 0xbd48b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd4d7 : psllq mm1, qword ptr [rdi] ; jg 0xbd4ec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bdf66 : psllq mm1, qword ptr [rdi] ; jg 0xbdf7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdf65 : psllq mm1, qword ptr [rdi] ; jg 0xbdf7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdfc7 : psllq mm1, qword ptr [rdi] ; jg 0xbdfdc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000d7642 : psubsb mm3, mm0 ; add eax, 0x89480000 ; ret
0x00000000000917e1 : punpcklqdq xmm0, xmm0 ; movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x0000000000119fb2 : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000002a7fa : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x000000000012eb4c : push -0x11 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001122e4 : push -0x16000ed0 ; retf
0x0000000000033060 : push -0x1605feb4 ; ret 0xfffe
0x00000000001248f0 : push -0x3f7cb7ec ; and ecx, dword ptr [rax - 0x77] ; ret 0x2548
0x00000000001457aa : push -0x61 ; or al, byte ptr [rax] ; syscall
0x00000000000e5512 : push -0x76b7000a ; ret 0xffb8
0x00000000001940f4 : push -0x9ffffff ; ret 0x7501
0x000000000009c23a : push -0xc ; adc dword ptr [rax], eax ; call 0x98496
0x00000000000d27f7 : push -0xfb872b8 ; ret
0x00000000000e70c3 : push 0 ; add byte ptr [rax], al ; syscall
0x00000000000ce16a : push 0 ; mov r9, qword ptr [rsp + 0x10] ; call r14
0x000000000015620b : push 0 ; push 0x3c ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013adcb : push 0x1000b43 ; mov eax, r8d ; pop rbp ; ret
0x0000000000096a49 : push 0x15 ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000eec6a : push 0x1f0f10eb ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002d891 : push 0x244c8b48 ; or byte ptr [rcx + 0x39], cl ; retf 0x850f
0x000000000015620d : push 0x3c ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000d5ff9 : push 0x45334861 ; add byte ptr [rax + 9], cl ; ret 0x850f
0x00000000000c0160 : push 0x5c415d5b ; pop r13 ; ret
0x000000000009b59e : push 0x6e0f4966 ; ret
0x0000000000104a27 : push 0x7601fb83 ; movsxd rax, dword ptr [rcx - 0x77] ; retf
0x0000000000137852 : push 0x77 ; or eax, dword ptr [rax] ; syscall
0x00000000000c070f : push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000153002 : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000babe2 : push 5 ; add byte ptr [rax], al ; ret
0x000000000010ab05 : push qword ptr [rax + rbx*8 - 0x77] ; ret 0xc085
0x000000000006e27d : push qword ptr [rax - 0x17] ; cmc ; retf 0xffff
0x00000000000b97ef : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000011a5cd : push qword ptr [rbp + 0x10] ; mov eax, 1 ; ret
0x0000000000195a78 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000011cd9c : push qword ptr [rbp + 0x27] ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011dcd0 : push qword ptr [rbp + 0x3e] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcfc : push qword ptr [rbp + 0x69] ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000188299 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000010f9dd : push qword ptr [rbp + 5] ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000019b056 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff7
0x000000000019af56 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff8
0x000000000019ae56 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff9
0x000000000019ad56 : push qword ptr [rbp + rax - 0x18] ; ret 0xfffa
0x000000000008a581 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000066010 : push qword ptr [rbp + rcx + 0x44] ; mov eax, eax ; ret
0x000000000015ab7d : push qword ptr [rbp + rcx - 0x18] ; retf
0x000000000019b14d : push qword ptr [rbp + rdx - 0x18] ; retf
0x0000000000059616 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000013af22 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00000000001443d3 : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012eaa5 : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000095b80 : push qword ptr [rbp - 0x40] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000466f0 : push qword ptr [rbx + 1] ; ret
0x0000000000057ff6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000001568ba : push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000d602c : push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000c40cd : push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0x48e9
0x000000000005495f : push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x00000000000c93f7 : push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000dffeb : push qword ptr [rcx] ; imul cl ; retf 0xffef
0x00000000000718e1 : push qword ptr [rcx] ; inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x71906
0x0000000000073d62 : push qword ptr [rcx] ; inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x73d87
0x000000000011536a : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000915f3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000006b68e : push qword ptr [rcx] ; shr cl, 0xb5 ; retf
0x00000000000e5feb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000001229d4 : push qword ptr [rdi + 0x31] ; mov r8d, eax ; mov eax, r8d ; ret
0x00000000000e5cac : push qword ptr [rdi + 0x31] ; ret
0x00000000000e5d2c : push qword ptr [rdi + 0x41] ; ret
0x0000000000046771 : push qword ptr [rdi + 0x4c] ; ret
0x0000000000116e46 : push qword ptr [rdi + 0x4f] ; ret
0x000000000004b53c : push qword ptr [rdi + 0x51] ; ret
0x00000000000e5a5f : push qword ptr [rdi + 0x56] ; ret
0x000000000010f3df : push qword ptr [rdi + 0x5e] ; ret
0x000000000011bb0b : push qword ptr [rdi + 0x62] ; pop rbx ; pop rbp ; ret
0x0000000000117812 : push qword ptr [rdi + 0x63] ; ret
0x0000000000123dcf : push qword ptr [rdi + 0x66] ; ret
0x0000000000123545 : push qword ptr [rdi + 0x68] ; ret
0x00000000000e5b52 : push qword ptr [rdi + 0x6b] ; ret
0x000000000011825f : push qword ptr [rdi + 0x6e] ; ret
0x0000000000122445 : push qword ptr [rdi + 0x70] ; ret
0x000000000011628f : push qword ptr [rdi + 0x76] ; ret
0x0000000000065fc3 : push qword ptr [rdi + 0xa] ; ret
0x0000000000131b22 : push qword ptr [rdi + 0xb] ; ret
0x00000000001163ac : push qword ptr [rdi + 1] ; ret
0x0000000000110c1a : push qword ptr [rdi + 3] ; ret
0x0000000000117059 : push qword ptr [rdi + 4] ; ret
0x0000000000065f90 : push qword ptr [rdi + 5] ; ret
0x000000000011076f : push qword ptr [rdi + 6] ; ret
0x00000000000466b6 : push qword ptr [rdi + 7] ; ret
0x0000000000046725 : push qword ptr [rdi + 8] ; ret
0x0000000000110c74 : push qword ptr [rdi + 9] ; ret
0x00000000000fb45c : push qword ptr [rdi + rax + 1] ; retf 0x4801
0x00000000001445ee : push qword ptr [rdi + rcx - 0x18] ; retf 0xfd1f
0x00000000000e91e8 : push qword ptr [rdx + rcx + 0x48] ; mov edi, ebx ; call r15
0x000000000011b92b : push qword ptr [rsi + rax - 0x77] ; cmp eax, 0xcea14 ; ret
0x000000000012513f : push qword ptr [rsi + rbp - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000094fe0 : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x00000000000956ea : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x0000000000058130 : push r10 ; ret
0x0000000000155fb9 : push r12 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000155fb7 : push r13 ; push r12 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014a22b : push r14 ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000a1a98 : push r8 ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x000000000014b895 : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000014b6d5 : push rax ; adc al, 0xf ; retf 0xd189
0x00000000000a02a2 : push rax ; adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x000000000014b88c : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000089efe : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000009afda : push rax ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001538e6 : push rax ; adc byte ptr [rbx + 0x78ff853b], cl ; ret 0xbde8
0x0000000000096739 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000014b6ca : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x000000000014a306 : push rax ; adc dh, dh ; ret 0x7401
0x00000000000b43cd : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000151fdf : push rax ; add cl, byte ptr [rax + 0xf] ; ret 0x8944
0x00000000000980b4 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0x152213 ; ret
0x00000000000910e0 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000c000e : push rax ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000c8f05 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001052cc : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b4d
0x00000000000a1a99 : push rax ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x0000000000028340 : push rax ; call rbx
0x000000000015a768 : push rax ; cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x00000000000589f6 : push rax ; cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x0000000000081928 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000012d43c : push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x0000000000077edc : push rax ; inc esi ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x00000000000d9f3e : push rax ; jl 0xd9f54 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000130e6c : push rax ; loop 0x130e6e ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000d5661 : push rax ; mov eax, 0x8945051e ; retf 0xc141
0x0000000000153923 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000030e8e : push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002f791 : push rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000153cce : push rax ; mov rcx, qword ptr [rsp + 0x10] ; mov rdi, r15 ; call rcx
0x000000000002d177 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002acf1 : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002c241 : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002ba5b : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x00000000000d3666 : push rax ; mov rsi, r15 ; mov rdi, rbp ; call rbx
0x000000000012ef46 : push rax ; mov rsi, rdx ; call rax
0x0000000000089f40 : push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000014b6bf : push rax ; or al, 0xf ; retf 0xd189
0x00000000000f6d48 : push rax ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000011d82f : push rax ; or byte ptr [rbx + 0x94801e2], al ; retf 0x8948
0x0000000000100f64 : push rax ; or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x000000000014b6af : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x00000000000f0b01 : push rax ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8040
0x000000000009c49a : push rax ; or dh, dh ; ret 0xf02
0x00000000001817dc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000501d4 : push rax ; or eax, 0x89410000 ; ret 0xd231
0x0000000000151ae1 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115368 : push rax ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000453c7 : push rax ; ret
0x0000000000064579 : push rax ; ret 0xb60f
0x000000000012cd42 : push rax ; ret 8
0x000000000003f5cc : push rax ; retf
0x0000000000133a3b : push rax ; retf 0xb
0x000000000012d93c : push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x000000000009672a : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000014b6e0 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000012bca9 : push rax ; sbb dh, dh ; ret 0x7508
0x0000000000108886 : push rax ; shl rdi, 3 ; call 0x25337
0x0000000000130049 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000894a2 : push rax ; sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x0000000000114b3d : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000114aef : push rax ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000116449 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000014466b : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000008d049 : push rbp ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xff3
0x00000000000f1124 : push rbp ; add al, 1 ; ret 0x341
0x00000000000ee177 : push rbp ; add bh, byte ptr [rcx] ; retf
0x000000000004ccea : push rbp ; add bh, dh ; ret 0
0x000000000004d03e : push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a80c1 : push rbp ; add byte ptr [rbp - 0x77], cl ; adc eax, dword ptr [rbp - 0x77] ; ret 0x8b4b
0x00000000000eed6d : push rbp ; add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x000000000008ce4f : push rbp ; add dh, dh ; ret 0x7402
0x000000000019a12d : push rbp ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000009b6a0 : push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000014a1d4 : push rbp ; call 0x156443
0x0000000000124dc9 : push rbp ; or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000124da3 : push rbp ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000129533 : push rbp ; or al, 0 ; syscall
0x0000000000186268 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000104e3a : push rbp ; or byte ptr [rax - 0x75], 4 ; ret 0x8948
0x000000000012fb3e : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012fa70 : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012f560 : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esp ; call rax
0x000000000012f4fb : push rbp ; or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012f848 : push rbp ; or byte ptr [rcx + rcx*4 - 6], 0xf ; adc dword ptr [rbp - 0x78], ecx ; call rax
0x0000000000155fb8 : push rbp ; push r12 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000069047 : push rbp ; ret
0x00000000000a904c : push rbp ; ret 0xda89
0x000000000015f137 : push rbp ; retf 0xfffb
0x00000000000ef8ba : push rbp ; sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000057e67 : push rbp ; sbb dword ptr [rax], eax ; syscall
0x000000000014cdac : push rbp ; sub byte ptr [rax + 1], cl ; ret 0x5d89
0x000000000005546a : push rbp ; sub dword ptr [rip + 0x197d6e], 1 ; pop rbx ; ret
0x000000000008bec1 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000142471 : push rbx ; adc byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8348
0x000000000014b64d : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x000000000010f644 : push rbx ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f76c : push rbx ; add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000010f84d : push rbx ; add al, 0xeb ; ret
0x00000000000a8f91 : push rbx ; add al, byte ptr [rax] ; add bh, dh ; ret
0x000000000011fe72 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000003b262 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012477c : push rbx ; add dword ptr [rcx + 0x39], ecx ; ret 0x4f73
0x00000000000ee4cd : push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x0000000000105c52 : push rbx ; add rsp, 0x38 ; ret
0x00000000000a8fa9 : push rbx ; and al, 0 ; add bh, dh ; ret
0x000000000008f1be : push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000014b887 : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000000a6a5d : push rbx ; inc dword ptr [rbp + rcx*4 + 0x60] ; add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x00000000001939a9 : push rbx ; jb 0x1939b9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008a59f : push rbx ; je 0x8a603 ; pop rbp ; pop r12 ; ret
0x00000000000d27dc : push rbx ; lea rax, [rdi - 0x10] ; ret
0x0000000000143dc9 : push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000088a0e : push rbx ; mov rbx, rsi ; call 0x25426
0x00000000000bb252 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000064492 : push rbx ; or al, 0xf6 ; ret 0x7401
0x000000000006249a : push rbx ; or al, 0xf6 ; ret 0xf01
0x0000000000084262 : push rbx ; or al, 0xf6 ; ret 0xf04
0x00000000000646ac : push rbx ; or al, 0xf6 ; ret 0xf40
0x000000000009038a : push rbx ; or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011d1fa : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000014b63d : push rbx ; or byte ptr [rdi], cl ; retf 0x5089
0x00000000000e7df8 : push rbx ; pop rax ; jne 0xe7e05 ; ret
0x00000000000e7df7 : push rbx ; pop rax ; jne 0xe7e06 ; ret
0x0000000000073516 : push rbx ; retf
0x0000000000066abc : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014b87a : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000012f6b9 : push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000e805b : push rbx ; setne al ; ret
0x000000000014b890 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000008457e : push rbx ; xor al, 0xe9 ; ret 0xfffc
0x000000000014b898 : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000de453 : push rcx ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000151db9 : push rcx ; add cl, byte ptr [rax + 0xf] ; retf 0xc689
0x000000000013f8a2 : push rcx ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0xc639
0x00000000000bf638 : push rcx ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000004ab78 : push rcx ; add rsp, 0x18 ; ret
0x000000000005e14b : push rcx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000193191 : push rcx ; jl 0x1931e2 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001932f8 : push rcx ; jl 0x193349 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a2923 : push rcx ; jo 0xa2920 ; ret 0
0x00000000000dab4f : push rcx ; jo 0xdab65 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000012714b : push rcx ; loop 0x127143 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d302d : push rcx ; mov eax, 0x148051e ; ret 0xb848
0x000000000009b31d : push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000017bde6 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000011923e : push rcx ; or eax, 0x200 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004b53e : push rcx ; ret
0x000000000006b9a6 : push rcx ; retf
0x000000000009955d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000014d8a2 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; pop rcx ; adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x000000000006560b : push rcx ; xor al, 0x18 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000be332 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bc6d2 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000be490 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000097da3 : push rdi ; adc eax, 0x5b050f00 ; ret
0x00000000000be168 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be17a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bb6ca : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000bc51a : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x0000000000170ef9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000056565 : push rdi ; add al, byte ptr [rcx - 0x77] ; ret
0x00000000000be13a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000005a19f : push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000bb77c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000bc5dc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000be198 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a14d8 : push rdi ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000009bdac : push rdi ; and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000011c3a5 : push rdi ; and cl, byte ptr [rip + 0x415c4100] ; pop rbp ; ret
0x000000000016acc8 : push rdi ; clc ; ret
0x000000000016ae40 : push rdi ; cld ; ret
0x000000000016b967 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001707d9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008cf73 : push rdi ; cmp byte ptr [rax - 0x75], cl ; xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000faa7b : push rdi ; cmp dh, dh ; ret 0xf08
0x00000000000a53ef : push rdi ; dec dword ptr [rax + 0x29] ; ret
0x000000000015d510 : push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x0000000000170759 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001705aa : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000faac1 : push rdi ; ljmp [rcx] ; ret 0x6348
0x000000000017063a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000005ef25 : push rdi ; or al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000013e7cf : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000013a0e1 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000be1dc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be21a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be1ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000926ed : push rdi ; or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000005abca : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000015d85a : push rdi ; or byte ptr [rcx + 1], cl ; idiv byte ptr [rcx] ; retf 0x850f
0x0000000000058c9a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000058ca1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000910e4 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000d70d2 : push rdi ; or byte ptr [rdi], cl ; test dword ptr [rsi - 0x76000003], eax ; retf 0x8348
0x000000000014480a : push rdi ; or dh, dh ; ret 0x7401
0x00000000000bb960 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000bc7d0 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000096a48 : push rdi ; push 0x15 ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000e5fab : push rdi ; ret
0x0000000000191e7e : push rdi ; ret 0xff3
0x00000000000f87f5 : push rdi ; retf
0x0000000000191a23 : push rdi ; retf 0xcab2
0x000000000015a82e : push rdi ; sbb byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000057c87 : push rdi ; sbb dword ptr [rax], eax ; syscall
0x000000000016bb67 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b38a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000016b767 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ab25 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000015a8fb : push rdi ; sub byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; ret
0x0000000000077680 : push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ea203 : push rdi ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000000be470 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b4bcb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000af328 : push rdi ; xor eax, eax ; ret
0x000000000012c598 : push rdx ; adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; retf 0xed75
0x000000000011d15c : push rdx ; adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000013f803 : push rdx ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0x8041
0x0000000000124752 : push rdx ; add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x000000000013f81b : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000e21e0 : push rdx ; add rsp, 0x38 ; ret
0x000000000015e35a : push rdx ; and byte ptr [rcx], cl ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000000f08da : push rdx ; dec dword ptr [rcx + 0x29] ; ret 0x8349
0x0000000000106586 : push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x0000000000037255 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000a294b : push rdx ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000a1b06 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000127a82 : push rdx ; outsd dx, dword ptr [rsi] ; or al, 0 ; syscall
0x0000000000037225 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000058131 : push rdx ; ret
0x00000000001698b9 : push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x0000000000095e9a : push rdx ; sbb al, byte ptr [rax] ; add cl, ch ; retf
0x000000000010fad5 : push rdx ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000009999e : push rdx ; sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8949
0x00000000001462c2 : push rdx ; xchg eax, esp ; or al, byte ptr [rax] ; syscall
0x0000000000140dd6 : push rsi ; adc al, 0xf ; xchg eax, ebp ; ret 0x2144
0x000000000010314e : push rsi ; adc byte ptr [rax + 0x63], cl ; retf
0x0000000000190ac4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001937dd : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x193834 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000171191 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000113ad4 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x00000000001192ab : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000171201 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000005a84f : push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000ba0f5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000137c3f : push rsi ; add eax, 0x5bf08948 ; ret
0x0000000000171121 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba093 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000002a5da : push rsi ; and byte ptr [rax + rax], bl ; test eax, eax ; je 0x2a5f0 ; ret
0x0000000000190ad9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018ca03 : push rsi ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000009bb16 : push rsi ; call qword ptr [rcx]
0x000000000016adf2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016b561 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b195 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b375 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b555 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016afb5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001955b6 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000000feed2 : push rsi ; cmovs ebp, dword ptr [rcx] ; ret 0x8348
0x0000000000087596 : push rsi ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001955a6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000195576 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000127216 : push rsi ; ja 0x12722b ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000012ef26 : push rsi ; je 0x12ef38 ; mov eax, 7 ; ret
0x000000000015b016 : push rsi ; mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000124c62 : push rsi ; or al, 0 ; pop rbx ; ret
0x000000000007de8b : push rsi ; or al, 0xf6 ; ret 0xf08
0x000000000014a22c : push rsi ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000014a217 : push rsi ; or al, byte ptr [rax] ; test eax, eax ; je 0x14a227 ; ret
0x000000000004af52 : push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000009b5dd : push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f1d01 : push rsi ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000045673 : push rsi ; ret
0x000000000007f5aa : push rsi ; ret 0xf10
0x00000000000c9a1e : push rsi ; str word ptr [rax + 0x21] ; ret 0x8948
0x0000000000195586 : push rsi ; sub eax, edx ; ret
0x0000000000115a8b : push rsi ; xor ax, ax ; ret
0x0000000000190aee : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009873c : push rsp ; adc eax, 0x48a77600 ; add esp, 8 ; ret
0x0000000000116e37 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000a7392 : push rsp ; add cl, byte ptr cs:[rax - 0x77] ; retf
0x00000000000a7de6 : push rsp ; add cl, byte ptr ss:[rax - 0x77] ; retf
0x00000000001589cb : push rsp ; add dword ptr [r8 - 0x77], r9d ; ret 0x4c88
0x000000000014007c : push rsp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a770 : push rsp ; and al, 0x10 ; call qword ptr [rax]
0x00000000000e5b8f : push rsp ; and al, 0x10 ; mov eax, 0xf7 ; syscall
0x00000000000abc1a : push rsp ; and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x0000000000123648 : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; syscall
0x00000000000abbd4 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abb42 : push rsp ; and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x000000000014a105 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000015073b : push rsp ; and al, 0x20 ; mov rdi, r12 ; call rdx
0x00000000000e1dcc : push rsp ; and al, 0x28 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000116b16 : push rsp ; and al, 0x30 ; mov eax, 0x10 ; syscall
0x00000000000abbb3 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x0000000000045a1a : push rsp ; and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x00000000000abc91 : push rsp ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abc78 : push rsp ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x00000000000abc60 : push rsp ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb9b : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc42 : push rsp ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb7d : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000013fc46 : push rsp ; and al, 8 ; jne 0x13fc82 ; add rsp, 0x38 ; ret
0x000000000012231b : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000187287 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ab700 : push rsp ; cmp esp, edi ; jmp 0xa7940
0x00000000000d6648 : push rsp ; js 0xd6664 ; add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000155fba : push rsp ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000af86b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000a3b98 : push rsp ; lodsd eax, dword ptr [rsi] ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000153190 : push rsp ; mov eax, 1 ; ret
0x000000000013b798 : push rsp ; mov ecx, 0x89480000 ; ret
0x000000000012972b : push rsp ; or al, 0 ; syscall
0x0000000000185f69 : push rsp ; or eax, 0x894d0000 ; retf
0x00000000000a0a7b : push rsp ; pop rcx ; adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0xa0a3e
0x00000000000e8059 : push rsp ; push rbx ; setne al ; ret
0x000000000004566d : push rsp ; ret
0x0000000000125b38 : push rsp ; ret 0x8940
0x000000000011c1cf : push rsp ; retf
0x0000000000058b24 : push rsp ; retf 0x48f8
0x00000000000590f2 : push rsp ; retf 0x4cf0
0x00000000001262cf : push rsp ; retf 0x8b40
0x0000000000183700 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000029065 : pushfq ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000002f688 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000105624 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x63482c53], cl ; ret 0x2de9
0x000000000005462e : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000013b77a : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000792d0 : pushfq ; jne 0x792dd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000184400 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001823b4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000000d52df : pushfq ; ret 0x394c
0x00000000000fae50 : pushfq ; ret 0x5c3b
0x00000000000f8900 : pushfq ; retf 0xfff2
0x00000000000d6840 : pushfq ; stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000096806 : pxor mm0, mm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000119fc1 : pxor mm0, mm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000096805 : pxor xmm0, xmm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000119fc0 : pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000d99e0 : rcl byte ptr [rax + 0x45000001], 0x29 ; shr dword ptr [rcx], cl ; ret 0x8945
0x00000000000b314d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000026a8d : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x1c95b2], eax ; ret
0x000000000013395d : rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x000000000007e888 : rcl byte ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000012c1bb : rcl dword ptr [rdx - 0x76b70011], 1 ; ret
0x000000000009a6d8 : rcl dword ptr [rip + 0x14fbca], 0x83 ; ret 0x8b01
0x000000000004503f : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x00000000001468a8 : rcr byte ptr [rax + rcx*2], 0x89 ; ret 0x2548
0x0000000000176cdd : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009d6e2 : rcr byte ptr [rbp + 0x41], 0x5c ; mov rax, r8 ; pop r13 ; ret
0x0000000000029698 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000013eaf2 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x0000000000032c57 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000926f2 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000087a5a : rcr byte ptr [rbp + 0x41], cl ; pop rsp ; pop r13 ; jmp rax
0x0000000000058ca7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000137f18 : rcr byte ptr [rbp - 0x3a], 2 ; add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000000a0160 : rcr byte ptr [rbx + 0x41], 0x5c ; ret
0x0000000000087ec8 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000049911 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000004a042 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f1caf : rcr byte ptr [rbx + 0x5d], 0x44 ; mov eax, eax ; pop r12 ; ret
0x000000000009ce72 : rcr byte ptr [rbx + 0x5d], 0x4c ; mov eax, eax ; pop r12 ; ret
0x000000000014cfea : rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x000000000014c5a9 : rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000c9af0 : rcr byte ptr [rbx + 0xf], 1 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000bf392 : rcr byte ptr [rbx - 0x3d], 1 ; mov eax, 0x60 ; pop rbx ; ret
0x000000000009116f : rcr byte ptr [rbx - 9], 0xd8 ; ret
0x00000000000b2a5d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001190ec : rcr dword ptr [rbx + 0x31], cl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000058cd9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000e7eab : rcr dword ptr [rdi], 0x10 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001545a9 : rcr dword ptr [rsi], 6 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000149658 : rdtsc ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bed3d : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000bed2f : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000162758 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000bf137 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000009bbd4 : rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dfe : rep stosq qword ptr [rdi], rax ; ret
0x00000000000256b9 : ret
0x0000000000026be0 : ret 0
0x00000000000bba0e : ret 0x10
0x000000000008423f : ret 0x107
0x000000000013ec3d : ret 0x1072
0x00000000000e743a : ret 0x108d
0x00000000000e4762 : ret 0x10bc
0x00000000000e2542 : ret 0x10de
0x00000000000ba341 : ret 0x11
0x000000000009b4aa : ret 0x110
0x0000000000048f3b : ret 0x110f
0x00000000000bff3a : ret 0x112
0x0000000000058c7c : ret 0x114d
0x00000000000fe81a : ret 0x1172
0x00000000000d69c2 : ret 0x1174
0x0000000000084fb0 : ret 0x1175
0x000000000002ddc4 : ret 0x11e9
0x000000000007aa5a : ret 0x12
0x0000000000091067 : ret 0x1263
0x00000000000659c2 : ret 0x12eb
0x00000000000b572a : ret 0x13
0x000000000011a804 : ret 0x1374
0x00000000000931cc : ret 0x1389
0x00000000000832ea : ret 0x13a9
0x000000000004bfba : ret 0x13eb
0x000000000009da8a : ret 0x14
0x00000000000db843 : ret 0x144
0x00000000000798aa : ret 0x1443
0x000000000019a071 : ret 0x145
0x00000000000fb535 : ret 0x1474
0x00000000000af8a9 : ret 0x147c
0x0000000000095ba6 : ret 0x148
0x00000000000b75bd : ret 0x149
0x0000000000066ac0 : ret 0x14c
0x00000000000f158a : ret 0x14d
0x00000000000a547b : ret 0x14eb
0x000000000005ded5 : ret 0x15
0x000000000009d18a : ret 0x1509
0x00000000000c0c88 : ret 0x1572
0x000000000009064e : ret 0x1576
0x000000000005df2a : ret 0x1586
0x0000000000108762 : ret 0x1589
0x0000000000092cda : ret 0x158b
0x0000000000092642 : ret 0x159f
0x00000000000528b4 : ret 0x16
0x0000000000094ff8 : ret 0x160f
0x00000000000a6457 : ret 0x1674
0x0000000000054c2a : ret 0x168f
0x0000000000083542 : ret 0x1690
0x000000000003a1c3 : ret 0x17
0x00000000000622a6 : ret 0x1773
0x00000000000f0876 : ret 0x1776
0x00000000000456cb : ret 0x1789
0x0000000000045aca : ret 0x178f
0x00000000000db57f : ret 0x17e
0x0000000000074cb3 : ret 0x17e8
0x0000000000049131 : ret 0x17e9
0x0000000000063e0a : ret 0x18
0x0000000000193490 : ret 0x180f
0x0000000000036ef8 : ret 0x1820
0x0000000000105445 : ret 0x1874
0x00000000000af395 : ret 0x1876
0x00000000000283a3 : ret 0x18db
0x0000000000196a1d : ret 0x18e9
0x000000000002e4ba : ret 0x1900
0x00000000000c3d01 : ret 0x194c
0x00000000000529aa : ret 0x1974
0x000000000004a7da : ret 0x19e6
0x00000000000e7c34 : ret 0x19e9
0x0000000000065bac : ret 0x1b7d
0x000000000005f76c : ret 0x1b8
0x000000000009bdd1 : ret 0x1ba
0x00000000000fa103 : ret 0x1c3b
0x0000000000043a3c : ret 0x1c74
0x00000000000414a4 : ret 0x1d
0x0000000000056cd2 : ret 0x1d74
0x00000000000c945b : ret 0x1d7e
0x00000000000d790a : ret 0x1dba
0x00000000000a59d5 : ret 0x1deb
0x000000000011c201 : ret 0x1e1
0x0000000000030a23 : ret 0x1e74
0x0000000000052bde : ret 0x1f
0x000000000002f712 : ret 0x1f0f
0x000000000010f12b : ret 0x1fe8
0x00000000000690f6 : ret 0x1fe9
0x000000000018c9e7 : ret 0x20
0x0000000000036cbb : ret 0x200
0x0000000000054416 : ret 0x2040
0x0000000000196803 : ret 0x2041
0x0000000000111f65 : ret 0x2044
0x00000000000f2a93 : ret 0x2073
0x000000000002be9d : ret 0x2074
0x000000000004a353 : ret 0x2077
0x000000000018d4aa : ret 0x21
0x0000000000140dda : ret 0x2144
0x00000000001569ce : ret 0x2149
0x0000000000092d57 : ret 0x214c
0x000000000011171a : ret 0x216
0x00000000000bcbdb : ret 0x2275
0x00000000000b9bc8 : ret 0x2288
0x00000000000e7ad4 : ret 0x231b
0x0000000000191fe2 : ret 0x2373
0x00000000001021c0 : ret 0x2473
0x0000000000027efd : ret 0x2548
0x000000000014544c : ret 0x2672
0x000000000007da6a : ret 0x2675
0x000000000006f7c3 : ret 0x27
0x000000000005e2d0 : ret 0x2774
0x00000000000b58c5 : ret 0x280f
0x00000000000af385 : ret 0x2876
0x00000000000d3105 : ret 0x287f
0x00000000000d2ddc : ret 0x28f5
0x0000000000037dc6 : ret 0x2901
0x0000000000045e36 : ret 0x290f
0x0000000000186fcb : ret 0x2912
0x000000000018c5d7 : ret 0x2920
0x0000000000071c9e : ret 0x2941
0x0000000000064ac9 : ret 0x2944
0x0000000000033bd8 : ret 0x2948
0x0000000000078866 : ret 0x2949
0x000000000008aafa : ret 0x294c
0x00000000000dd989 : ret 0x294d
0x00000000000d24e4 : ret 0x2975
0x00000000000785aa : ret 0x2a0
0x00000000000d03eb : ret 0x2a74
0x0000000000110c0b : ret 0x2a75
0x00000000000570eb : ret 0x2ae9
0x0000000000029921 : ret 0x2b48
0x000000000012d128 : ret 0x2b49
0x00000000000a446d : ret 0x2b4c
0x0000000000152d02 : ret 0x2b74
0x00000000000841b4 : ret 0x2b7c
0x000000000005fc96 : ret 0x2be
0x00000000000f82df : ret 0x2be8
0x00000000000ab66f : ret 0x2bf
0x0000000000110ba8 : ret 0x2d75
0x000000000002fd6a : ret 0x2de9
0x0000000000084035 : ret 0x2e66
0x000000000010b941 : ret 0x2e74
0x0000000000119788 : ret 0x2eeb
0x000000000011a73d : ret 0x2f3c
0x00000000000a63c6 : ret 0x2f74
0x000000000004afa2 : ret 0x3039
0x000000000010d820 : ret 0x3074
0x00000000000fd2ac : ret 0x30f
0x00000000000d7f42 : ret 0x31
0x000000000010bfc5 : ret 0x3101
0x000000000015e3d5 : ret 0x3107
0x0000000000062317 : ret 0x3145
0x000000000014d84c : ret 0x3148
0x000000000014d82b : ret 0x3149
0x000000000014d946 : ret 0x314c
0x000000000014d734 : ret 0x314d
0x00000000000f085c : ret 0x3176
0x00000000000470f4 : ret 0x31c3
0x000000000015b943 : ret 0x3375
0x00000000000d9bcd : ret 0x341
0x00000000000f3397 : ret 0x343
0x00000000000af889 : ret 0x347c
0x000000000006b30a : ret 0x348
0x0000000000053585 : ret 0x3489
0x00000000000630e8 : ret 0x34e9
0x000000000008fbaa : ret 0x36
0x0000000000187c26 : ret 0x3776
0x000000000003a6c3 : ret 0x37e8
0x000000000009f293 : ret 0x37e9
0x00000000000a5a00 : ret 0x3840
0x000000000013f873 : ret 0x3844
0x00000000000af375 : ret 0x3876
0x0000000000159b31 : ret 0x389
0x0000000000101a62 : ret 0x38e9
0x0000000000056287 : ret 0x3901
0x00000000000f39b5 : ret 0x3904
0x0000000000144115 : ret 0x3928
0x00000000000f68e5 : ret 0x3941
0x0000000000071e6a : ret 0x3944
0x0000000000071b3b : ret 0x3945
0x000000000003a79f : ret 0x3948
0x000000000003567e : ret 0x3949
0x0000000000044981 : ret 0x394c
0x0000000000032bd4 : ret 0x3973
0x0000000000105484 : ret 0x3980
0x000000000005689e : ret 0x3990
0x00000000000be6a2 : ret 0x3a01
0x0000000000191fcb : ret 0x3a73
0x000000000012bb3d : ret 0x3b01
0x00000000000f87bf : ret 0x3b43
0x00000000000f69e7 : ret 0x3b46
0x0000000000070bf7 : ret 0x3b48
0x00000000000ebd48 : ret 0x3b4c
0x000000000014346c : ret 0x3be9
0x0000000000068770 : ret 0x3c01
0x00000000000bcbc1 : ret 0x3c75
0x0000000000110620 : ret 0x3d48
0x00000000000d561a : ret 0x3ee9
0x0000000000038323 : ret 0x4001
0x00000000000c0218 : ret 0x408d
0x000000000014676e : ret 0x4100
0x0000000000035149 : ret 0x4101
0x00000000000ccd6e : ret 0x4102
0x0000000000031b97 : ret 0x4104
0x00000000000a77dc : ret 0x4105
0x000000000006c198 : ret 0x4108
0x00000000000a7371 : ret 0x410e
0x000000000009ad7b : ret 0x4110
0x00000000000c90a0 : ret 0x4118
0x0000000000107e31 : ret 0x4128
0x00000000000dc24c : ret 0x4130
0x00000000000c3df8 : ret 0x4135
0x00000000000a5aed : ret 0x415d
0x00000000000cb24e : ret 0x4190
0x0000000000115d9e : ret 0x41c3
0x000000000014bb27 : ret 0x4203
0x00000000000ad76a : ret 0x4266
0x000000000009bdb0 : ret 0x4273
0x00000000000f4863 : ret 0x428b
0x00000000000f1087 : ret 0x428d
0x0000000000152d6a : ret 0x4374
0x0000000000089f99 : ret 0x4389
0x00000000000843f5 : ret 0x43c7
0x00000000000a602b : ret 0x4401
0x0000000000030dd1 : ret 0x4408
0x000000000004eec3 : ret 0x4418
0x000000000007b7da : ret 0x4420
0x0000000000051c53 : ret 0x4435
0x00000000000531a1 : ret 0x4489
0x0000000000039ae9 : ret 0x448b
0x0000000000045059 : ret 0x44c7
0x000000000005ca29 : ret 0x44f6
0x000000000004d3a2 : ret 0x4501
0x000000000013f5f6 : ret 0x4502
0x00000000000f17fe : ret 0x4504
0x0000000000050b11 : ret 0x4566
0x000000000009411f : ret 0x458b
0x00000000000f3665 : ret 0x45e8
0x00000000000d24c7 : ret 0x4675
0x00000000000d5305 : ret 0x4689
0x00000000000aa22e : ret 0x470e
0x00000000000f2a53 : ret 0x473
0x00000000000aba08 : ret 0x474
0x0000000000028358 : ret 0x4801
0x000000000002b8c6 : ret 0x4802
0x0000000000126749 : ret 0x4803
0x000000000004acb7 : ret 0x4804
0x0000000000126a16 : ret 0x4805
0x00000000001268f6 : ret 0x4806
0x0000000000126866 : ret 0x4807
0x0000000000060ba2 : ret 0x4808
0x00000000001266b6 : ret 0x4809
0x0000000000126986 : ret 0x480a
0x0000000000126516 : ret 0x480b
0x00000000000d32c2 : ret 0x480e
0x00000000000f047a : ret 0x480f
0x00000000000596e0 : ret 0x4810
0x00000000000256ee : ret 0x4811
0x0000000000155bee : ret 0x4812
0x00000000000cd602 : ret 0x4817
0x0000000000038348 : ret 0x481a
0x0000000000097ced : ret 0x4820
0x000000000012b626 : ret 0x4828
0x0000000000141c24 : ret 0x482e
0x000000000006d9b5 : ret 0x4830
0x0000000000197b91 : ret 0x4831
0x00000000000ad676 : ret 0x4840
0x000000000002dfca : ret 0x4858
0x00000000000966f3 : ret 0x4860
0x0000000000027052 : ret 0x4864
0x000000000004530d : ret 0x4866
0x00000000000d0711 : ret 0x4875
0x00000000000a9c1e : ret 0x4890
0x00000000000b4dcc : ret 0x48c3
0x00000000000c40d2 : ret 0x48e9
0x000000000011d81a : ret 0x48f8
0x000000000002a439 : ret 0x4901
0x000000000002ab27 : ret 0x4902
0x0000000000071b4e : ret 0x4904
0x0000000000098271 : ret 0x4907
0x0000000000142262 : ret 0x4908
0x00000000000db840 : ret 0x490f
0x000000000007ba82 : ret 0x4910
0x0000000000033450 : ret 0x4911
0x0000000000162bd2 : ret 0x4918
0x000000000012c6aa : ret 0x4964
0x000000000009f3b4 : ret 0x4974
0x00000000000a6e0e : ret 0x4990
0x00000000000e7e91 : ret 0x49c3
0x000000000002759a : ret 0x4a8d
0x000000000002f4bf : ret 0x4b01
0x000000000012b41c : ret 0x4b8b
0x0000000000044b3f : ret 0x4c01
0x0000000000124759 : ret 0x4c02
0x000000000008a519 : ret 0x4c04
0x00000000000d6fb6 : ret 0x4c08
0x00000000000cb795 : ret 0x4c10
0x0000000000124522 : ret 0x4c14
0x0000000000187556 : ret 0x4c20
0x000000000010658a : ret 0x4c28
0x000000000005d770 : ret 0x4c40
0x0000000000187596 : ret 0x4c60
0x00000000000d910e : ret 0x4c80
0x00000000001589d0 : ret 0x4c88
0x00000000000ba366 : ret 0x4d10
0x000000000018ca0b : ret 0x4d20
0x0000000000060007 : ret 0x4d74
0x0000000000092314 : ret 0x4d83
0x00000000000e2048 : ret 0x4e0f
0x000000000009af3b : ret 0x4e10
0x00000000000aa4cd : ret 0x4e8d
0x00000000000e64e5 : ret 0x4f08
0x0000000000124780 : ret 0x4f73
0x00000000001620d4 : ret 0x4fe9
0x0000000000191fb4 : ret 0x5173
0x00000000000948cc : ret 0x5177
0x00000000000d2da1 : ret 0x5180
0x00000000000bf636 : ret 0x518d
0x00000000001432ac : ret 0x51e9
0x000000000008457c : ret 0x5389
0x000000000012b9e8 : ret 0x53ff
0x00000000000af869 : ret 0x547c
0x00000000000fae46 : ret 0x5489
0x000000000014f1a6 : ret 0x548b
0x00000000000d70e1 : ret 0x5589
0x00000000000bcba7 : ret 0x5675
0x0000000000045338 : ret 0x574
0x0000000000131e3f : ret 0x576
0x0000000000131b56 : ret 0x577
0x0000000000164216 : ret 0x5776
0x000000000005e45e : ret 0x57e
0x000000000012e60e : ret 0x57e9
0x00000000000dbc64 : ret 0x5841
0x000000000002d181 : ret 0x5a58
0x00000000000452fa : ret 0x5b75
0x0000000000065615 : ret 0x5ba
0x00000000000a8f1f : ret 0x5be9
0x00000000000fae51 : ret 0x5c3b
0x000000000009eb0d : ret 0x5d5b
0x000000000014cdb0 : ret 0x5d89
0x0000000000045ea5 : ret 0x5e8
0x00000000000cdacd : ret 0x6073
0x000000000010a2c5 : ret 0x6076
0x0000000000059a9a : ret 0x60e8
0x00000000000f41ea : ret 0x60e9
0x000000000005827a : ret 0x6348
0x00000000000a8ed1 : ret 0x6349
0x00000000000f3a31 : ret 0x634d
0x00000000000d24aa : ret 0x6375
0x0000000000033424 : ret 0x6411
0x00000000000af859 : ret 0x647c
0x000000000011a142 : ret 0x64be
0x00000000000e7ae9 : ret 0x64e9
0x000000000008f27a : ret 0x66
0x0000000000119b88 : ret 0x6602
0x000000000014219b : ret 0x6608
0x00000000000a4726 : ret 0x6610
0x00000000000af301 : ret 0x6620
0x000000000002a882 : ret 0x66c3
0x0000000000113ae6 : ret 0x674
0x00000000000e6086 : ret 0x6775
0x0000000000187bf6 : ret 0x6776
0x000000000006d86a : ret 0x68e9
0x00000000000d2d9e : ret 0x6948
0x00000000000d51a7 : ret 0x694d
0x00000000000d5887 : ret 0x6b45
0x00000000000a08cc : ret 0x6be2
0x00000000000a89cf : ret 0x6be9
0x00000000000ac08d : ret 0x6de8
0x0000000000056eb6 : ret 0x6de9
0x0000000000120d0a : ret 0x6e2
0x0000000000120bfa : ret 0x6e3
0x00000000000d7354 : ret 0x6eb8
0x00000000000e7bdf : ret 0x6ee9
0x0000000000063cac : ret 0x6fe9
0x00000000000fc6bd : ret 0x728d
0x0000000000064495 : ret 0x7401
0x000000000008ce52 : ret 0x7402
0x000000000011bb31 : ret 0x7404
0x000000000008a585 : ret 0x7408
0x0000000000085821 : ret 0x7420
0x0000000000064621 : ret 0x7450
0x000000000003a7f2 : ret 0x748b
0x000000000006c6d6 : ret 0x74e8
0x00000000000e3df7 : ret 0x7500
0x000000000002e59f : ret 0x7501
0x00000000000a196a : ret 0x7502
0x00000000000b53c1 : ret 0x7504
0x000000000014d552 : ret 0x7507
0x00000000000b53c6 : ret 0x7508
0x00000000001940cb : ret 0x7510
0x0000000000131ab6 : ret 0x7520
0x00000000000f3b49 : ret 0x7540
0x00000000000f0044 : ret 0x7580
0x000000000008ce0e : ret 0x7589
0x00000000000a2142 : ret 0x772
0x0000000000190ea2 : ret 0x7777
0x0000000000144be2 : ret 0x786
0x0000000000104cfd : ret 0x7880
0x00000000000573d3 : ret 0x7a80
0x00000000000a7229 : ret 0x7a8d
0x00000000000d02ba : ret 0x7b75
0x00000000000d996e : ret 0x7b8b
0x0000000000045827 : ret 0x7c7
0x00000000000fdb4d : ret 0x7c83
0x00000000000551fe : ret 0x7c89
0x0000000000056b1a : ret 0x7c8b
0x00000000000af2a1 : ret 0x7e20
0x0000000000187b5c : ret 0x7e40
0x00000000000ac31c : ret 0x7f10
0x000000000019883a : ret 0x7fff
0x000000000009a140 : ret 0x80
0x00000000000ad4f9 : ret 0x8000
0x0000000000056268 : ret 0x8001
0x00000000001199ab : ret 0x8004
0x00000000000f0b05 : ret 0x8040
0x000000000013f80a : ret 0x8041
0x00000000000f3d75 : ret 0x8080
0x000000000012f9dd : ret 0x80f8
0x00000000001873c5 : ret 0x8101
0x000000000013d3f4 : ret 0x8103
0x000000000018faf5 : ret 0x8104
0x000000000013f930 : ret 0x8108
0x00000000000c3619 : ret 0x8141
0x000000000005a9d6 : ret 0x8148
0x000000000004510a : ret 0x8166
0x000000000010fada : ret 0x8207
0x000000000002df09 : ret 0x820f
0x00000000000a251a : ret 0x8301
0x000000000014b61d : ret 0x8303
0x00000000000840a5 : ret 0x8304
0x00000000000a8a9a : ret 0x8305
0x0000000000187495 : ret 0x8308
0x00000000000cd35d : ret 0x830b
0x000000000004b6e3 : ret 0x830f
0x0000000000187460 : ret 0x8310
0x0000000000187432 : ret 0x8320
0x000000000012c70a : ret 0x8330
0x00000000000af781 : ret 0x8340
0x000000000002f888 : ret 0x8341
0x000000000002ac82 : ret 0x8348
0x0000000000062782 : ret 0x8349
0x00000000000c7cf5 : ret 0x840
0x000000000003b296 : ret 0x8401
0x0000000000063fa7 : ret 0x8404
0x000000000002d241 : ret 0x840f
0x000000000002e19e : ret 0x841
0x00000000000cb612 : ret 0x844
0x0000000000044a2d : ret 0x8440
0x00000000001970bd : ret 0x8441
0x0000000000063f8a : ret 0x8445
0x00000000000a8396 : ret 0x845
0x00000000000bfd0d : ret 0x8504
0x000000000002de60 : ret 0x850f
0x00000000001880f1 : ret 0x8520
0x0000000000062321 : ret 0x8545
0x000000000002a985 : ret 0x8548
0x0000000000048450 : ret 0x854d
0x0000000000109bb9 : ret 0x8589
0x0000000000060710 : ret 0x85c7
0x000000000002d0b3 : ret 0x860f
0x000000000004e010 : ret 0x870f
0x00000000000af3a5 : ret 0x876
0x000000000003166c : ret 0x87e9
0x0000000000029d39 : ret 0x8801
0x00000000000a8fdc : ret 0x8806
0x00000000000c4192 : ret 0x88e9
0x0000000000036955 : ret 0x8901
0x0000000000125b39 : ret 0x8940
0x000000000003293f : ret 0x8941
0x000000000004e925 : ret 0x8944
0x00000000000a7882 : ret 0x8945
0x0000000000027c26 : ret 0x8948
0x000000000002a30a : ret 0x8949
0x0000000000029e62 : ret 0x894c
0x0000000000062d52 : ret 0x894d
0x0000000000059bdb : ret 0x894e
0x00000000001300ce : ret 0x89c3
0x0000000000163cc1 : ret 0x89e8
0x000000000009a6df : ret 0x8b01
0x00000000000ece1b : ret 0x8b02
0x00000000000844e6 : ret 0x8b04
0x00000000000c9c4b : ret 0x8b05
0x000000000018fbb2 : ret 0x8b10
0x000000000003566f : ret 0x8b41
0x00000000000f98c0 : ret 0x8b44
0x00000000000a6406 : ret 0x8b46
0x000000000002d232 : ret 0x8b48
0x000000000006fa6f : ret 0x8b49
0x0000000000059b62 : ret 0x8b4a
0x00000000000a80c8 : ret 0x8b4b
0x000000000002d426 : ret 0x8b4c
0x00000000001052d2 : ret 0x8b4d
0x00000000000e186b : ret 0x8b64
0x00000000000d9ec4 : ret 0x8c0f
0x0000000000097b66 : ret 0x8c75
0x00000000000cbbb3 : ret 0x8d01
0x0000000000066677 : ret 0x8d04
0x0000000000030ef5 : ret 0x8d08
0x000000000006236b : ret 0x8d0f
0x0000000000070a89 : ret 0x8d41
0x00000000000db63f : ret 0x8d43
0x00000000000d9b56 : ret 0x8d44
0x00000000000286f3 : ret 0x8d48
0x000000000004487f : ret 0x8d49
0x0000000000058da7 : ret 0x8d4a
0x00000000000611b0 : ret 0x8d4b
0x0000000000027f43 : ret 0x8d4c
0x0000000000098154 : ret 0x8d4d
0x00000000000a7dfc : ret 0x8d4e
0x0000000000054fcb : ret 0x8d74
0x00000000000dddf9 : ret 0x8d89
0x00000000000481db : ret 0x8e0f
0x000000000007c87a : ret 0x8e9
0x00000000000f3fbf : ret 0x8eeb
0x0000000000080765 : ret 0x8f0f
0x0000000000054f01 : ret 0x8f74
0x00000000000e6eed : ret 0x9066
0x00000000000d3175 : ret 0x907e
0x00000000000e7f8d : ret 0x90c3
0x00000000001031a5 : ret 0x930f
0x00000000000f40b7 : ret 0x93e9
0x00000000000888ed : ret 0x93eb
0x000000000006dcd2 : ret 0x940f
0x000000000005b898 : ret 0x941
0x0000000000052a35 : ret 0x948
0x00000000000f6001 : ret 0x949
0x0000000000045a85 : ret 0x94c
0x000000000019a55f : ret 0x94d
0x000000000012ad67 : ret 0x950f
0x000000000005e193 : ret 0x9574
0x00000000000a02b4 : ret 0x95be
0x00000000000d3044 : ret 0x960f
0x00000000000e71cf : ret 0x9674
0x0000000000069a97 : ret 0x9675
0x00000000000529c2 : ret 0x96e9
0x0000000000121538 : ret 0x972
0x0000000000151e9a : ret 0x975
0x0000000000131ccf : ret 0x976
0x000000000015b236 : ret 0x9775
0x000000000005c5e5 : ret 0x9848
0x00000000000bcbf5 : ret 0x9874
0x000000000019c973 : ret 0x9974
0x0000000000054a98 : ret 0x99e9
0x0000000000102580 : ret 0x9ae8
0x0000000000116c38 : ret 0x9b75
0x0000000000143414 : ret 0x9be9
0x00000000001056ee : ret 0x9ce9
0x00000000000d9f64 : ret 0x9d0f
0x00000000000ba790 : ret 0x9d72
0x000000000010cabe : ret 0x9e9
0x0000000000065b33 : ret 0x9ee9
0x0000000000070ecd : ret 0xa
0x00000000000667cf : ret 0xa173
0x0000000000082845 : ret 0xa1e9
0x0000000000111238 : ret 0xa2e8
0x0000000000142c35 : ret 0xa3c
0x00000000001441aa : ret 0xa5c
0x00000000000744bc : ret 0xa5e9
0x000000000014961a : ret 0xa61
0x000000000009a6e8 : ret 0xa7e
0x0000000000089b1a : ret 0xa92
0x00000000000ef7b1 : ret 0xa9e8
0x0000000000145751 : ret 0xa9f
0x00000000000f1dfd : ret 0xaae9
0x0000000000111262 : ret 0xab3
0x000000000011f851 : ret 0xabe
0x000000000015d160 : ret 0xac74
0x00000000000fc459 : ret 0xace9
0x00000000000a8991 : ret 0xaceb
0x000000000004e86a : ret 0xad
0x00000000000a67e0 : ret 0xadeb
0x00000000000a6e5f : ret 0xaeeb
0x000000000012e157 : ret 0xb
0x00000000000e7b9d : ret 0xb0e9
0x000000000009f709 : ret 0xb1e8
0x000000000013bc7a : ret 0xb34
0x000000000013b072 : ret 0xb40
0x000000000014dba8 : ret 0xb43
0x000000000009b649 : ret 0xb48b
0x0000000000045e86 : ret 0xb4e8
0x00000000000e19de : ret 0xb4e9
0x0000000000066f67 : ret 0xb589
0x00000000000e7c98 : ret 0xb5e9
0x000000000005b4ec : ret 0xb60f
0x00000000000a091d : ret 0xb675
0x000000000004a3bd : ret 0xb677
0x00000000000d44c0 : ret 0xb70f
0x000000000014e96b : ret 0xb75
0x000000000014602b : ret 0xb7e9
0x0000000000045627 : ret 0xb8
0x00000000000840d2 : ret 0xb804
0x000000000009bcb9 : ret 0xb817
0x00000000000a8620 : ret 0xb841
0x000000000004599a : ret 0xb848
0x00000000000db5da : ret 0xb850
0x00000000000a2507 : ret 0xb8c3
0x00000000000fb272 : ret 0xb908
0x000000000013301d : ret 0xb941
0x000000000004522d : ret 0xb948
0x00000000000f94d1 : ret 0xb9e8
0x00000000000a3cc9 : ret 0xbd01
0x0000000000080d83 : ret 0xbd83
0x000000000007dc02 : ret 0xbd89
0x00000000001538ed : ret 0xbde8
0x000000000007a077 : ret 0xbe01
0x0000000000066f57 : ret 0xbe02
0x0000000000074bf0 : ret 0xbe08
0x00000000000d9df4 : ret 0xbe0f
0x0000000000152dd1 : ret 0xbeeb
0x000000000006c4cc : ret 0xbf08
0x0000000000057837 : ret 0xbf41
0x000000000007ccbc : ret 0xbfe9
0x00000000000efee7 : ret 0xc
0x00000000000ad3b9 : ret 0xc000
0x000000000005b53f : ret 0xc001
0x00000000000a6177 : ret 0xc019
0x0000000000038fae : ret 0xc031
0x000000000007dc33 : ret 0xc041
0x0000000000033476 : ret 0xc083
0x000000000011a7fd : ret 0xc084
0x00000000000af160 : ret 0xc085
0x0000000000026fe0 : ret 0xc148
0x00000000000cc61c : ret 0xc149
0x00000000001034fa : ret 0xc153
0x00000000000d53c4 : ret 0xc181
0x000000000007dbd3 : ret 0xc189
0x00000000000a0daa : ret 0xc1b
0x000000000005ecea : ret 0xc200
0x000000000004e4c4 : ret 0xc220
0x00000000000d4389 : ret 0xc281
0x00000000000d792e : ret 0xc283
0x0000000000191e84 : ret 0xc2b2
0x0000000000045e97 : ret 0xc35d
0x00000000000f8ed3 : ret 0xc383
0x0000000000068a26 : ret 0xc389
0x0000000000187bc1 : ret 0xc540
0x000000000012956a : ret 0xc55
0x0000000000124cc2 : ret 0xc56
0x0000000000124ace : ret 0xc58
0x000000000012cd90 : ret 0xc5f6
0x0000000000128946 : ret 0xc60
0x000000000013f8a9 : ret 0xc639
0x0000000000142442 : ret 0xc641
0x00000000000fd8c7 : ret 0xc675
0x00000000000d313f : ret 0xc67e
0x000000000005ee97 : ret 0xc689
0x0000000000122faa : ret 0xc6e
0x00000000000b5761 : ret 0xc748
0x00000000000d2501 : ret 0xc75
0x0000000000045f19 : ret 0xc764
0x00000000000f1a65 : ret 0xc775
0x000000000004c2e6 : ret 0xc776
0x00000000000fbda6 : ret 0xc789
0x0000000000126ee2 : ret 0xc79
0x0000000000118f99 : ret 0xc7e9
0x00000000000ab9b6 : ret 0xc839
0x0000000000089f8e : ret 0xc883
0x0000000000044f08 : ret 0xc889
0x00000000000ef29c : ret 0xc89
0x0000000000137ba4 : ret 0xc8b
0x000000000011c117 : ret 0xc931
0x00000000000d3aa9 : ret 0xc985
0x00000000000b9b15 : ret 0xc9ff
0x00000000000fae42 : ret 0xca09
0x0000000000026df0 : ret 0xca21
0x00000000000f69f3 : ret 0xca39
0x00000000000ecdc9 : ret 0xca89
0x000000000011c4af : ret 0xcad8
0x0000000000063d51 : ret 0xcae9
0x0000000000105abf : ret 0xcbe8
0x00000000000e4106 : ret 0xcce9
0x00000000000ba760 : ret 0xcd72
0x0000000000054964 : ret 0xcde9
0x0000000000105f2e : ret 0xce0f
0x000000000002a11e : ret 0xce80
0x00000000001880fd : ret 0xce89
0x000000000011fe42 : ret 0xceb
0x00000000000810cb : ret 0xcee9
0x00000000000c270a : ret 0xcf75
0x000000000006ff7b : ret 0xcfe9
0x00000000000a7970 : ret 0xd
0x00000000000f2db1 : ret 0xd009
0x00000000001014b2 : ret 0xd020
0x00000000000a20f1 : ret 0xd084
0x00000000000d5bb8 : ret 0xd089
0x0000000000106291 : ret 0xd101
0x000000000015b1a8 : ret 0xd108
0x000000000006a723 : ret 0xd129
0x00000000000a1e1a : ret 0xd148
0x0000000000028ab4 : ret 0xd17d
0x00000000000dca97 : ret 0xd189
0x000000000014b929 : ret 0xd1e8
0x0000000000097273 : ret 0xd1e9
0x00000000000f1955 : ret 0xd201
0x00000000000445b7 : ret 0xd231
0x00000000000d7d91 : ret 0xd26b
0x0000000000027235 : ret 0xd284
0x0000000000084516 : ret 0xd285
0x00000000001087e2 : ret 0xd289
0x0000000000142bfe : ret 0xd308
0x0000000000112877 : ret 0xd321
0x00000000000d3c2c : ret 0xd338
0x000000000011b08a : ret 0xd34
0x000000000004e17e : ret 0xd348
0x0000000000196ffe : ret 0xd349
0x0000000000197356 : ret 0xd589
0x00000000000e1d83 : ret 0xd5c
0x00000000000f8f25 : ret 0xd5e8
0x00000000000eca88 : ret 0xd5eb
0x0000000000068935 : ret 0xd629
0x000000000006be67 : ret 0xd729
0x00000000000fc1f2 : ret 0xd739
0x00000000001126aa : ret 0xd77
0x00000000000d9bd7 : ret 0xd789
0x00000000001435bc : ret 0xd7e9
0x00000000000a8b23 : ret 0xd889
0x00000000001993fe : ret 0xd8e9
0x00000000000ca6f8 : ret 0xd8f7
0x0000000000098224 : ret 0xd977
0x00000000000aad4e : ret 0xd989
0x000000000007f899 : ret 0xd9e9
0x00000000000e1133 : ret 0xda72
0x000000000012d5ca : ret 0xda80
0x00000000000a904d : ret 0xda89
0x0000000000044f04 : ret 0xdaf7
0x000000000019a3a3 : ret 0xdb31
0x00000000000ce261 : ret 0xdc00
0x00000000000c005d : ret 0xde8
0x00000000000940a5 : ret 0xde9
0x00000000000c23d9 : ret 0xdeb
0x00000000000bfb8c : ret 0xdee8
0x0000000000046af9 : ret 0xe
0x00000000000ad279 : ret 0xe000
0x000000000019408d : ret 0xe074
0x000000000004a3cd : ret 0xe076
0x0000000000091eb7 : ret 0xe083
0x000000000007dbdf : ret 0xe183
0x00000000000d58c2 : ret 0xe1e9
0x000000000007eadb : ret 0xe273
0x0000000000044355 : ret 0xe281
0x000000000002ce8f : ret 0xe283
0x000000000018fa2f : ret 0xe2c4
0x00000000000f345a : ret 0xe374
0x0000000000097195 : ret 0xe480
0x00000000000481c0 : ret 0xe575
0x00000000000614e8 : ret 0xe57f
0x00000000001041aa : ret 0xe5c
0x00000000000bf2d2 : ret 0xe680
0x0000000000026c73 : ret 0xe683
0x00000000000e7b67 : ret 0xe6e9
0x000000000011088c : ret 0xe6ff
0x0000000000113ad8 : ret 0xe72
0x00000000000f0985 : ret 0xe76
0x000000000002beb6 : ret 0xe775
0x0000000000186fd3 : ret 0xe7f
0x0000000000086f22 : ret 0xe8
0x000000000013911e : ret 0xe801
0x00000000000ece32 : ret 0xe875
0x00000000000f0a84 : ret 0xe877
0x000000000010bbc2 : ret 0xe883
0x000000000019b08a : ret 0xe8a2
0x000000000019af8a : ret 0xe8a3
0x000000000019ae8a : ret 0xe8a4
0x000000000019ad8a : ret 0xe8a5
0x0000000000120998 : ret 0xe8c1
0x00000000000a2f83 : ret 0xe901
0x00000000000639f8 : ret 0xe902
0x0000000000063d21 : ret 0xe904
0x00000000000b9bb6 : ret 0xe908
0x0000000000183566 : ret 0xe910
0x000000000010b414 : ret 0xe973
0x000000000012c824 : ret 0xe975
0x0000000000055b3e : ret 0xe983
0x00000000000617d7 : ret 0xe9f8
0x000000000004a373 : ret 0xea76
0x00000000000463c1 : ret 0xeab8
0x000000000007dbf8 : ret 0xeac0
0x000000000002e144 : ret 0xeac1
0x000000000010915d : ret 0xead1
0x00000000000f8ee8 : ret 0xeb01
0x00000000001815a6 : ret 0xeb10
0x00000000001343bc : ret 0xeb11
0x0000000000099012 : ret 0xeb75
0x00000000000a83d1 : ret 0xec75
0x00000000000d10ba : ret 0xecd
0x0000000000155dda : ret 0xecf6
0x0000000000059a10 : ret 0xed75
0x0000000000196445 : ret 0xed85
0x000000000010d41c : ret 0xede9
0x000000000003a7df : ret 0xee75
0x00000000000f1837 : ret 0xee7f
0x000000000003aa0c : ret 0xeee8
0x0000000000144bfa : ret 0xef23
0x000000000014398a : ret 0xef40
0x0000000000051fc6 : ret 0xef75
0x000000000012aeca : ret 0xefa5
0x00000000000a6f1b : ret 0xefe9
0x00000000000530bf : ret 0xf
0x000000000003fc9d : ret 0xf00
0x00000000000ad139 : ret 0xf000
0x0000000000122a8d : ret 0xf009
0x000000000002a40f : ret 0xf01
0x000000000009c49d : ret 0xf02
0x00000000000aba66 : ret 0xf039
0x0000000000084265 : ret 0xf04
0x00000000001206da : ret 0xf04e
0x000000000011f5da : ret 0xf05f
0x000000000007de8e : ret 0xf08
0x00000000000a20e8 : ret 0xf083
0x00000000000e8a72 : ret 0xf089
0x00000000000a94fe : ret 0xf0e
0x000000000007f5ac : ret 0xf10
0x00000000000af95c : ret 0xf188
0x000000000004cf8f : ret 0xf189
0x000000000010898a : ret 0xf1c9
0x0000000000086bb9 : ret 0xf20
0x00000000000f84f2 : ret 0xf239
0x00000000000ff08a : ret 0xf262
0x00000000000a5368 : ret 0xf2e8
0x00000000000c94d9 : ret 0xf2e9
0x00000000000f656a : ret 0xf2ed
0x00000000000fb37a : ret 0xf375
0x000000000009317e : ret 0xf390
0x00000000000ea8ca : ret 0xf3ab
0x00000000000a5abe : ret 0xf3c3
0x000000000004fb3a : ret 0xf40
0x0000000000028a14 : ret 0xf41
0x00000000000a6615 : ret 0xf44
0x0000000000062e7a : ret 0xf45
0x00000000000e02ca : ret 0xf450
0x00000000000c979a : ret 0xf46
0x00000000000a3e39 : ret 0xf475
0x000000000002b97e : ret 0xf48
0x00000000000d8bea : ret 0xf4c7
0x000000000004e16f : ret 0xf4d
0x0000000000107026 : ret 0xf4e8
0x0000000000062659 : ret 0xf50
0x000000000013f12a : ret 0xf581
0x00000000001872fe : ret 0xf5c5
0x0000000000162aa5 : ret 0xf601
0x000000000006c4c4 : ret 0xf631
0x00000000000456c7 : ret 0xf66
0x00000000000a36ae : ret 0xf6c3
0x00000000000c6cfa : ret 0xf702
0x00000000001387c3 : ret 0xf741
0x000000000003b96a : ret 0xf748
0x000000000012286a : ret 0xf750
0x0000000000197a2f : ret 0xf77
0x0000000000110c59 : ret 0xf789
0x000000000003a851 : ret 0xf7f7
0x0000000000117bca : ret 0xf7fd
0x000000000010fe51 : ret 0xf80
0x000000000002d93b : ret 0xf800
0x00000000000d652b : ret 0xf883
0x0000000000096b07 : ret 0xf8b
0x000000000018b636 : ret 0xf8c5
0x00000000001328aa : ret 0xf8df
0x000000000010193d : ret 0xf8e9
0x000000000008e86a : ret 0xf96a
0x0000000000056cc6 : ret 0xf983
0x00000000000ee8fb : ret 0xf9c1
0x00000000000f703b : ret 0xfa39
0x00000000000bf43c : ret 0xfac1
0x000000000007699a : ret 0xfaec
0x00000000000c304a : ret 0xfb9
0x00000000000aceb9 : ret 0xfc00
0x000000000011ac85 : ret 0xfc07
0x0000000000045312 : ret 0xfc3
0x000000000016181a : ret 0xfd15
0x0000000000147a8a : ret 0xfd57
0x0000000000156853 : ret 0xfd81
0x0000000000056c9d : ret 0xfde9
0x00000000000acd79 : ret 0xfe00
0x0000000000042b8a : ret 0xfe27
0x00000000001327da : ret 0xfe57
0x0000000000103170 : ret 0xfe83
0x00000000000e793e : ret 0xfe9
0x0000000000044f14 : ret 0xfeb8
0x000000000003876a : ret 0xfecb
0x00000000000acc39 : ret 0xff00
0x00000000000a79ac : ret 0xff0f
0x000000000011bf6c : ret 0xff2
0x00000000000455fb : ret 0xff25
0x0000000000188369 : ret 0xff2d
0x000000000008d04e : ret 0xff3
0x000000000006c18f : ret 0xff31
0x0000000000152a4a : ret 0xff3e
0x000000000012aff1 : ret 0xff41
0x00000000000bcba4 : ret 0xff48
0x000000000015763a : ret 0xff56
0x00000000000acaf9 : ret 0xff80
0x00000000001423ba : ret 0xff81
0x00000000000de5a5 : ret 0xff83
0x00000000000629ea : ret 0xff85
0x000000000004375a : ret 0xff89
0x000000000004235a : ret 0xff9d
0x000000000006cefb : ret 0xffb5
0x0000000000093abb : ret 0xffb8
0x00000000000525f3 : ret 0xffbf
0x00000000000ac9b9 : ret 0xffc0
0x000000000006b260 : ret 0xffc4
0x000000000006e6dc : ret 0xffca
0x000000000003ef5a : ret 0xffd1
0x000000000006b935 : ret 0xffd6
0x000000000006e0d6 : ret 0xffd7
0x00000000000690b1 : ret 0xffdc
0x00000000000ac879 : ret 0xffe0
0x0000000000061a09 : ret 0xffe2
0x00000000000dfa46 : ret 0xffe4
0x0000000000078ece : ret 0xffe7
0x00000000000e7c4e : ret 0xffe9
0x000000000007ed8d : ret 0xffea
0x000000000003ee19 : ret 0xffed
0x000000000007c32e : ret 0xffee
0x000000000004c0b1 : ret 0xffef
0x000000000009f429 : ret 0xfff
0x00000000000ac739 : ret 0xfff0
0x000000000006345f : ret 0xfff1
0x0000000000042e62 : ret 0xfff2
0x0000000000056e8f : ret 0xfff3
0x00000000000d9155 : ret 0xfff4
0x00000000000c841f : ret 0xfff5
0x000000000005fe36 : ret 0xfff6
0x000000000019b05a : ret 0xfff7
0x00000000000ac5f9 : ret 0xfff8
0x000000000010c8d9 : ret 0xfff9
0x00000000000791b6 : ret 0xfffa
0x0000000000061947 : ret 0xfffb
0x000000000003482f : ret 0xfffc
0x00000000000259a8 : ret 0xfffd
0x0000000000033065 : ret 0xfffe
0x00000000000290df : ret 0xffff
0x000000000002a1ba : ret 1
0x00000000000a70ef : ret 2
0x000000000002eab2 : ret 3
0x0000000000099ef9 : ret 4
0x00000000000bab8a : ret 5
0x000000000009a339 : ret 7
0x000000000007d83b : ret 8
0x0000000000049ccf : ret 9
0x0000000000025719 : retf
0x0000000000025882 : retf 0
0x0000000000041cd5 : retf 0x10
0x000000000002ac97 : retf 0x1089
0x000000000009ee68 : retf 0x11
0x000000000010463f : retf 0x110f
0x00000000000ef481 : retf 0x1139
0x00000000001337b2 : retf 0x114
0x0000000000058bad : retf 0x114d
0x0000000000086322 : retf 0x115
0x0000000000136382 : retf 0x118
0x000000000014c62f : retf 0x1189
0x0000000000085f22 : retf 0x119
0x00000000000ce0fa : retf 0x11bc
0x00000000000292d2 : retf 0x12
0x000000000005b599 : retf 0x13
0x00000000000bcbea : retf 0x1373
0x00000000000ee881 : retf 0x1374
0x00000000000404ee : retf 0x14
0x000000000015099d : retf 0x141
0x00000000000a9548 : retf 0x1474
0x000000000013f87f : retf 0x148
0x000000000002a9a5 : retf 0x1489
0x000000000003800d : retf 0x149
0x000000000009ed22 : retf 0x14b1
0x00000000000ecbc5 : retf 0x14c
0x00000000000a6f18 : retf 0x14d
0x00000000000a2c32 : retf 0x14d5
0x000000000009d4b2 : retf 0x14d6
0x0000000000161ac6 : retf 0x14e8
0x000000000009a6da : retf 0x14fb
0x000000000008ee6c : retf 0x15
0x00000000000983b2 : retf 0x1527
0x0000000000065de2 : retf 0x1546
0x0000000000098576 : retf 0x1555
0x00000000000947d2 : retf 0x158c
0x0000000000075c9e : retf 0x15e9
0x000000000007d342 : retf 0x16
0x0000000000140d83 : retf 0x1677
0x0000000000186d5b : retf 0x167e
0x000000000015a7a6 : retf 0x1689
0x0000000000054d22 : retf 0x168e
0x00000000000cc536 : retf 0x1774
0x0000000000045432 : retf 0x179b
0x000000000003a4dc : retf 0x17bf
0x000000000011ab12 : retf 0x182
0x0000000000031e92 : retf 0x18c5
0x000000000005aadd : retf 0x194d
0x0000000000122ed6 : retf 0x19b8
0x00000000000355e1 : retf 0x19e8
0x000000000003c5da : retf 0x1a
0x00000000000314ba : retf 0x1a75
0x000000000006fb12 : retf 0x1b
0x0000000000036c3a : retf 0x1b31
0x0000000000159002 : retf 0x1b74
0x00000000000e8ac5 : retf 0x1b8
0x0000000000033892 : retf 0x1b8d
0x000000000007debc : retf 0x1c
0x00000000000bf96b : retf 0x1c74
0x00000000001230b6 : retf 0x1eb8
0x00000000000558dc : retf 0x1ee8
0x000000000008a650 : retf 0x1f0f
0x00000000000cbb1e : retf 0x1f74
0x0000000000130428 : retf 0x1f8
0x00000000000855d2 : retf 0x20
0x00000000000f5e03 : retf 0x2148
0x000000000012a9d9 : retf 0x21e8
0x00000000000f1a0b : retf 0x25eb
0x00000000000a9536 : retf 0x2674
0x00000000000a8b3b : retf 0x27
0x000000000015eac3 : retf 0x27e8
0x00000000001698a9 : retf 0x280f
0x0000000000116246 : retf 0x28b8
0x000000000004636f : retf 0x290f
0x000000000005d872 : retf 0x2941
0x00000000000de18b : retf 0x2944
0x000000000002b195 : retf 0x2948
0x000000000005d331 : retf 0x294c
0x0000000000064ee2 : retf 0x2a0
0x0000000000119a4c : retf 0x2aeb
0x0000000000131b16 : retf 0x2b77
0x00000000000a8876 : retf 0x2c74
0x00000000000bcbd0 : retf 0x2d73
0x0000000000122b76 : retf 0x2db8
0x0000000000122185 : retf 0x2e66
0x00000000001225b6 : retf 0x2eb8
0x00000000000a522c : retf 0x2ee8
0x0000000000070317 : retf 0x2f
0x0000000000123146 : retf 0x2fb8
0x0000000000062d83 : retf 0x30be
0x00000000000db5f0 : retf 0x3104
0x0000000000098122 : retf 0x3141
0x00000000000e22dc : retf 0x3145
0x000000000014d8aa : retf 0x3148
0x000000000014d699 : retf 0x3149
0x00000000000ee866 : retf 0x3274
0x000000000010039a : retf 0x343
0x0000000000050515 : retf 0x343d
0x0000000000058d08 : retf 0x3573
0x0000000000123a06 : retf 0x35b8
0x0000000000068513 : retf 0x36
0x000000000013ec17 : retf 0x3672
0x00000000001231a6 : retf 0x36b8
0x00000000001701c2 : retf 0x377
0x000000000002c2f7 : retf 0x3775
0x00000000001231d6 : retf 0x37b8
0x000000000006767d : retf 0x3944
0x000000000004c081 : retf 0x3948
0x00000000000a4374 : retf 0x3949
0x00000000000995cd : retf 0x394c
0x00000000000a7e46 : retf 0x394d
0x000000000013fd00 : retf 0x3b9a
0x0000000000101872 : retf 0x3be9
0x00000000000e5b06 : retf 0x3db8
0x0000000000053115 : retf 0x3f3d
0x000000000019a5ba : retf 0x4101
0x00000000000d566a : retf 0x4102
0x00000000000f6e71 : retf 0x4110
0x00000000000f6d7a : retf 0x4140
0x000000000004ddcb : retf 0x4166
0x000000000002e13c : retf 0x4180
0x00000000000d2e7f : retf 0x418d
0x00000000000ad74c : retf 0x4266
0x0000000000045475 : retf 0x42e9
0x0000000000093196 : retf 0x43f6
0x00000000001301f7 : retf 0x440f
0x000000000004dda5 : retf 0x4466
0x000000000005cb34 : retf 0x44f6
0x0000000000112702 : retf 0x45
0x0000000000050aeb : retf 0x4566
0x00000000000d6e30 : retf 0x45c7
0x00000000000793a2 : retf 0x474
0x00000000000bcbb6 : retf 0x4773
0x000000000010452d : retf 0x47c6
0x0000000000084285 : retf 0x4800
0x000000000009b312 : retf 0x4801
0x0000000000095731 : retf 0x4802
0x000000000009bdc9 : retf 0x4804
0x00000000000441a6 : retf 0x480b
0x0000000000044170 : retf 0x480d
0x000000000011f20d : retf 0x4853
0x0000000000048f0f : retf 0x4866
0x00000000000ec49f : retf 0x488d
0x0000000000098d8e : retf 0x4890
0x0000000000058b25 : retf 0x48f8
0x000000000009b936 : retf 0x4901
0x000000000008b26f : retf 0x4966
0x00000000000f2b09 : retf 0x4a8b
0x0000000000077a95 : retf 0x4a8d
0x0000000000112696 : retf 0x4b8
0x00000000000837e1 : retf 0x4b80
0x00000000001047f7 : retf 0x4be9
0x000000000011ce88 : retf 0x4c01
0x00000000000d37e0 : retf 0x4c02
0x000000000009f608 : retf 0x4c89
0x000000000005fb3e : retf 0x4c90
0x0000000000110b36 : retf 0x4cb8
0x00000000000590f3 : retf 0x4cf0
0x0000000000031462 : retf 0x4d72
0x0000000000058b78 : retf 0x4de8
0x0000000000058b8a : retf 0x4df0
0x0000000000058b9c : retf 0x4df8
0x00000000000c272c : retf 0x4e74
0x00000000000f0b27 : retf 0x5088
0x0000000000100f6d : retf 0x5089
0x000000000008f4ba : retf 0x532b
0x00000000000f9b03 : retf 0x5355
0x000000000011738c : retf 0x5389
0x0000000000054fc5 : retf 0x5489
0x00000000001047df : retf 0x55e9
0x0000000000131be6 : retf 0x577
0x00000000001052b6 : retf 0x57d
0x00000000000f1d4e : retf 0x59e9
0x00000000000314f2 : retf 0x5a
0x0000000000067271 : retf 0x5a73
0x00000000000a53a6 : retf 0x5d5b
0x0000000000055fcd : retf 0x5e3c
0x0000000000060b25 : retf 0x5e8
0x00000000000e6a9a : retf 0x60e8
0x00000000000bcb9c : retf 0x6173
0x00000000000aa6dd : retf 0x6348
0x00000000000d5ecc : retf 0x634d
0x000000000019a602 : retf 0x6375
0x000000000004613c : retf 0x6411
0x00000000000e2e02 : retf 0x648
0x00000000000e2282 : retf 0x659
0x000000000015b201 : retf 0x6600
0x00000000000956f2 : retf 0x6601
0x0000000000169ae4 : retf 0x6602
0x0000000000169c34 : retf 0x6603
0x000000000015b20a : retf 0x6604
0x0000000000169ed4 : retf 0x6605
0x000000000016a024 : retf 0x6606
0x000000000016a174 : retf 0x6607
0x000000000008a594 : retf 0x6608
0x000000000016a414 : retf 0x6609
0x000000000016a564 : retf 0x660a
0x000000000016a6b4 : retf 0x660b
0x000000000016a804 : retf 0x660c
0x000000000016a954 : retf 0x660d
0x000000000016aaa4 : retf 0x660e
0x000000000016abf4 : retf 0x660f
0x00000000000af6f3 : retf 0x6666
0x00000000001701e1 : retf 0x676
0x000000000004af05 : retf 0x6948
0x00000000000d55df : retf 0x6b45
0x000000000012fec0 : retf 0x6be9
0x00000000000d3010 : retf 0x6eb8
0x000000000005c195 : retf 0x703d
0x000000000014ce2a : retf 0x706
0x0000000000186d45 : retf 0x7202
0x000000000003a889 : retf 0x7477
0x00000000000591a2 : retf 0x777
0x00000000000d68fa : retf 0x7980
0x00000000000517e2 : retf 0x7b
0x000000000007507d : retf 0x7de9
0x0000000000137be4 : retf 0x7f80
0x00000000000d7363 : retf 0x8102
0x00000000000d4549 : retf 0x8104
0x00000000001701ca : retf 0x8148
0x00000000000fb855 : retf 0x8166
0x000000000018e4ea : retf 0x81eb
0x000000000002c796 : retf 0x820f
0x0000000000062b28 : retf 0x830f
0x00000000000925a4 : retf 0x8310
0x0000000000093da0 : retf 0x8320
0x0000000000026ef4 : retf 0x8341
0x000000000002e0a4 : retf 0x8348
0x000000000002e6ee : retf 0x8349
0x000000000006f42a : retf 0x8380
0x00000000000e8d47 : retf 0x83e8
0x0000000000026ef7 : retf 0x83ff
0x000000000004ddfd : retf 0x840f
0x000000000006b3c3 : retf 0x8440
0x000000000006e14b : retf 0x8445
0x000000000002b3c4 : retf 0x850f
0x0000000000026df2 : retf 0x8545
0x00000000000a8278 : retf 0x8548
0x00000000000579f4 : retf 0x854d
0x000000000008a80e : retf 0x858b
0x000000000009717a : retf 0x860f
0x0000000000047ba5 : retf 0x870f
0x0000000000131b96 : retf 0x877
0x00000000000f6d61 : retf 0x8841
0x00000000000a8fea : retf 0x8880
0x00000000000eb7a7 : retf 0x8901
0x0000000000087ee1 : retf 0x8902
0x000000000016366a : retf 0x8908
0x000000000008bd21 : retf 0x8920
0x000000000011bb51 : retf 0x8940
0x000000000003aa4c : retf 0x8941
0x00000000000dca08 : retf 0x8944
0x00000000000fa7fa : retf 0x8945
0x000000000002b74c : retf 0x8948
0x0000000000039ad5 : retf 0x8949
0x0000000000029f8e : retf 0x894c
0x000000000003b6b5 : retf 0x894d
0x00000000000d740d : retf 0x8966
0x00000000000a7142 : retf 0x8973
0x00000000001262d0 : retf 0x8b40
0x00000000000ccd86 : retf 0x8b41
0x000000000004f238 : retf 0x8b48
0x000000000005909a : retf 0x8b49
0x0000000000081a09 : retf 0x8b4c
0x00000000000e5b36 : retf 0x8b64
0x0000000000065fb6 : retf 0x8b8
0x00000000001029b1 : retf 0x8c0f
0x000000000018d7ca : retf 0x8ceb
0x000000000004d93e : retf 0x8d44
0x0000000000098884 : retf 0x8d48
0x0000000000039808 : retf 0x8d49
0x0000000000050786 : retf 0x8d4a
0x000000000005e952 : retf 0x8d4b
0x000000000004e7fd : retf 0x8d4c
0x000000000008a499 : retf 0x8d4d
0x0000000000186fdd : retf 0x8e0f
0x00000000001018fa : retf 0x8eb
0x000000000008402d : retf 0x9066
0x0000000000198368 : retf 0x920f
0x0000000000059ab9 : retf 0x93e9
0x0000000000197c84 : retf 0x944
0x0000000000045c61 : retf 0x948
0x00000000001109c2 : retf 0x9489
0x00000000000987c9 : retf 0x949
0x00000000000bcba1 : retf 0x94c
0x0000000000121a7a : retf 0x972
0x000000000004d6cd : retf 0x973d
0x000000000002b57d : retf 0x9775
0x000000000009f723 : retf 0x97e8
0x00000000000d5eea : retf 0x9848
0x0000000000112e86 : retf 0x9b8
0x000000000011bb47 : retf 0x9b9
0x000000000018c5da : retf 0x9ceb
0x0000000000122f66 : retf 0x9db8
0x0000000000055d18 : retf 0xa
0x000000000014f95a : retf 0xa00
0x000000000005aa2a : retf 0xa0e8
0x000000000011bf42 : retf 0xa2a
0x0000000000029182 : retf 0xa3
0x0000000000122ea6 : retf 0xa5b8
0x000000000009b457 : retf 0xa74
0x000000000010480f : retf 0xa7e9
0x000000000012e7e1 : retf 0xa880
0x000000000013e6a2 : retf 0xab7
0x00000000000311a2 : retf 0xaceb
0x0000000000122d86 : retf 0xafb8
0x0000000000040072 : retf 0xb
0x0000000000122f96 : retf 0xb2b8
0x000000000014e432 : retf 0xb3
0x0000000000122fc6 : retf 0xb3b8
0x0000000000103d17 : retf 0xb3e8
0x000000000002fe3b : retf 0xb3eb
0x000000000014dbd3 : retf 0xb43
0x0000000000141e86 : retf 0xb4e8
0x00000000000c9372 : retf 0xb4e9
0x00000000000a0a81 : retf 0xb4eb
0x000000000007dc18 : retf 0xb589
0x00000000000aadce : retf 0xb60f
0x0000000000133ba2 : retf 0xb62
0x00000000000d4361 : retf 0xb70f
0x00000000001050c2 : retf 0xb71
0x00000000001590a9 : retf 0xb775
0x000000000019a362 : retf 0xb801
0x000000000009bd48 : retf 0xb804
0x000000000008bd00 : retf 0xb810
0x000000000006f45e : retf 0xb841
0x0000000000031467 : retf 0xb8eb
0x00000000000a3c8d : retf 0xb941
0x00000000000da088 : retf 0xb948
0x00000000000a264c : retf 0xba5b
0x00000000001333ee : retf 0xbb7
0x000000000004ac62 : retf 0xbb75
0x00000000000971ca : retf 0xbb77
0x0000000000112f46 : retf 0xbb8
0x00000000001201b6 : retf 0xbcb8
0x000000000015e7ad : retf 0xbd49
0x0000000000120156 : retf 0xbdb8
0x0000000000055b56 : retf 0xbe0f
0x0000000000120036 : retf 0xbeb8
0x0000000000133157 : retf 0xbed0
0x0000000000120066 : retf 0xbfb8
0x0000000000066357 : retf 0xc
0x0000000000092370 : retf 0xc031
0x000000000011c4c1 : retf 0xc083
0x0000000000057b23 : retf 0xc084
0x000000000008d9f3 : retf 0xc085
0x00000000001200c6 : retf 0xc0b8
0x00000000000a81d8 : retf 0xc141
0x000000000002fb05 : retf 0xc148
0x0000000000089cab : retf 0xc149
0x0000000000058297 : retf 0xc183
0x0000000000093fc1 : retf 0xc189
0x000000000011ffa6 : retf 0xc1b8
0x00000000000fae44 : retf 0xc209
0x00000000000783d5 : retf 0xc239
0x00000000000de18e : retf 0xc281
0x00000000000f18c1 : retf 0xc283
0x00000000000ec4aa : retf 0xc374
0x00000000000995d0 : retf 0xc574
0x00000000000f8358 : retf 0xc575
0x0000000000151dbe : retf 0xc689
0x000000000015ca7a : retf 0xc6e9
0x00000000000cbad6 : retf 0xc73
0x00000000000591d7 : retf 0xc748
0x000000000004ee88 : retf 0xc749
0x000000000012b836 : retf 0xc775
0x00000000000578ef : retf 0xc821
0x00000000000a8b06 : retf 0xc883
0x00000000000d7af0 : retf 0xc8d
0x000000000011b5ac : retf 0xc931
0x0000000000124e8a : retf 0xc98
0x0000000000043aa5 : retf 0xc985
0x000000000011c4ab : retf 0xc9d9
0x00000000000fc20d : retf 0xca01
0x0000000000191a24 : retf 0xcab2
0x000000000010f866 : retf 0xcb8
0x00000000000fbceb : retf 0xcb89
0x000000000011c7a0 : retf 0xcbd9
0x000000000015b13f : retf 0xce75
0x0000000000162cfa : retf 0xceb
0x000000000012f75d : retf 0xcee9
0x0000000000039e85 : retf 0xd
0x00000000000f401d : retf 0xd089
0x000000000012c5f8 : retf 0xd0f7
0x00000000000bfe4f : retf 0xd139
0x000000000002fb0c : retf 0xd148
0x000000000014b69c : retf 0xd189
0x000000000012a729 : retf 0xd1e8
0x00000000000cdabb : retf 0xd284
0x0000000000039fbc : retf 0xd289
0x000000000005b8a5 : retf 0xd348
0x00000000000f254b : retf 0xd349
0x00000000000a5a0a : retf 0xd375
0x000000000012a827 : retf 0xd3e8
0x0000000000164f01 : retf 0xd4eb
0x0000000000197173 : retf 0xd589
0x0000000000075869 : retf 0xd5e9
0x00000000000e9e60 : retf 0xd5eb
0x000000000002e755 : retf 0xd689
0x000000000014ba62 : retf 0xd789
0x000000000003578e : retf 0xd88
0x00000000000a8ab9 : retf 0xd889
0x000000000011bcf6 : retf 0xd8b8
0x0000000000193faa : retf 0xd975
0x000000000007b385 : retf 0xda29
0x00000000000ecdcb : retf 0xdaf7
0x00000000000ab912 : retf 0xdb74
0x000000000009960a : retf 0xdb75
0x00000000001242d6 : retf 0xdcb8
0x0000000000115d86 : retf 0xddb8
0x00000000000ab9bf : retf 0xde75
0x00000000000448f1 : retf 0xdeb
0x0000000000182286 : retf 0xe
0x00000000000aaebd : retf 0xe072
0x00000000000deada : retf 0xe0a
0x000000000004b2e2 : retf 0xe0c1
0x000000000018f0e7 : retf 0xe175
0x000000000005b87c : retf 0xe183
0x000000000005e717 : retf 0xe273
0x000000000008d987 : retf 0xe281
0x000000000002aad8 : retf 0xe283
0x00000000000bfe63 : retf 0xe375
0x00000000000bf200 : retf 0xe475
0x0000000000150ff6 : retf 0xe4e8
0x0000000000196f64 : retf 0xe583
0x00000000000aba6f : retf 0xe675
0x00000000000f7927 : retf 0xe677
0x00000000001115a5 : retf 0xe680
0x000000000010530b : retf 0xe74
0x000000000014da71 : retf 0xe781
0x00000000000ce66b : retf 0xe7e
0x000000000010fafc : retf 0xe803
0x0000000000144fa2 : retf 0xe875
0x00000000000f69f5 : retf 0xe877
0x00000000000614ad : retf 0xe87f
0x000000000019ac82 : retf 0xe8a6
0x000000000019ab82 : retf 0xe8a7
0x00000000000f55cf : retf 0xe8c0
0x0000000000067371 : retf 0xe908
0x00000000000441f1 : retf 0xe90c
0x00000000000ab8b4 : retf 0xe975
0x00000000000f80f4 : retf 0xe977
0x0000000000093679 : retf 0xe980
0x0000000000122d26 : retf 0xe9b8
0x0000000000026c92 : retf 0xe9ff
0x000000000015b373 : retf 0xea75
0x0000000000112bde : retf 0xea81
0x00000000000ee5f8 : retf 0xeac0
0x000000000003a7c8 : retf 0xeac1
0x00000000000ac291 : retf 0xead3
0x00000000000eb15c : retf 0xeb04
0x0000000000067347 : retf 0xeb08
0x00000000000441dc : retf 0xeb0a
0x0000000000164652 : retf 0xec0f
0x0000000000158a62 : retf 0xecc8
0x00000000000c9822 : retf 0xecd
0x0000000000035150 : retf 0xed75
0x000000000011c861 : retf 0xed83
0x00000000000ccc77 : retf 0xee75
0x000000000012c5fc : retf 0xeec1
0x0000000000130862 : retf 0xef4a
0x000000000005898e : retf 0xef75
0x000000000012c5c0 : retf 0xefc1
0x00000000000a36f2 : retf 0xf01
0x000000000016ed6c : retf 0xf02
0x000000000016eeec : retf 0xf03
0x000000000016f06c : retf 0xf04
0x000000000016f1ec : retf 0xf05
0x000000000016f36c : retf 0xf06
0x000000000016f4ec : retf 0xf07
0x000000000008a51d : retf 0xf075
0x000000000016f66c : retf 0xf08
0x000000000016f7ec : retf 0xf09
0x000000000016f96c : retf 0xf0a
0x000000000016faec : retf 0xf0b
0x000000000016fc6c : retf 0xf0c
0x000000000016fdec : retf 0xf0d
0x000000000016ff6c : retf 0xf0e
0x00000000001700ec : retf 0xf0f
0x000000000010cb82 : retf 0xf188
0x0000000000188605 : retf 0xf1c5
0x0000000000104162 : retf 0xf211
0x00000000001383b2 : retf 0xf2da
0x000000000011c86a : retf 0xf2db
0x0000000000102118 : retf 0xf40
0x00000000000aaf32 : retf 0xf41
0x00000000000d44db : retf 0xf43
0x0000000000162ab6 : retf 0xf44
0x00000000000c9892 : retf 0xf45
0x000000000004d4f8 : retf 0xf48
0x0000000000119cbb : retf 0xf49
0x00000000000b50e1 : retf 0xf4c
0x00000000000457d6 : retf 0xf66
0x00000000000f6017 : retf 0xf748
0x000000000005918c : retf 0xf749
0x0000000000122a26 : retf 0xf983
0x00000000001886df : retf 0xf9c5
0x000000000014ba6d : retf 0xfa81
0x000000000005f49c : retf 0xfac1
0x0000000000104ac8 : retf 0xfae9
0x0000000000162112 : retf 0xfd0c
0x00000000001445f2 : retf 0xfd1f
0x0000000000102504 : retf 0xfd4f
0x0000000000163c7a : retf 0xfd89
0x000000000018b9fa : retf 0xfdc5
0x000000000004513c : retf 0xfe0d
0x00000000001402c2 : retf 0xfe30
0x000000000003f282 : retf 0xfe60
0x000000000014eb3b : retf 0xfe8
0x0000000000188407 : retf 0xfec5
0x0000000000038882 : retf 0xfeca
0x00000000000363f2 : retf 0xfef1
0x0000000000170a21 : retf 0xff2
0x0000000000170a1c : retf 0xff3
0x0000000000055fb5 : retf 0xff3e
0x000000000013bf12 : retf 0xff6e
0x000000000006e8bb : retf 0xff88
0x0000000000043452 : retf 0xff8c
0x00000000000764f2 : retf 0xff8d
0x0000000000075ef2 : retf 0xff93
0x00000000000f4642 : retf 0xffb0
0x0000000000074fa5 : retf 0xffb5
0x0000000000083cad : retf 0xffb8
0x00000000000a769d : retf 0xffc1
0x00000000000ab571 : retf 0xffd5
0x00000000000da658 : retf 0xffd6
0x00000000000768c7 : retf 0xffdf
0x000000000007c252 : retf 0xffe0
0x00000000000542b2 : retf 0xffe2
0x0000000000061901 : retf 0xffe3
0x0000000000060e85 : retf 0xffea
0x0000000000063d53 : retf 0xffeb
0x00000000001588d3 : retf 0xffec
0x000000000007eb3b : retf 0xffed
0x000000000014afc0 : retf 0xffee
0x00000000000dffef : retf 0xffef
0x000000000007811b : retf 0xfff0
0x00000000000c8431 : retf 0xfff1
0x000000000007f578 : retf 0xfff2
0x00000000000e88ab : retf 0xfff3
0x00000000000742c0 : retf 0xfff4
0x000000000002f2ca : retf 0xfff5
0x00000000000de6ae : retf 0xfff6
0x000000000003d06b : retf 0xfff7
0x00000000000ff220 : retf 0xfff8
0x0000000000088a14 : retf 0xfff9
0x0000000000046b92 : retf 0xfffa
0x0000000000066a32 : retf 0xfffb
0x0000000000057ca9 : retf 0xfffc
0x000000000002ee5d : retf 0xfffd
0x000000000002e12a : retf 0xfffe
0x000000000003f623 : retf 0xffff
0x000000000002e672 : retf 1
0x000000000003a6a4 : retf 2
0x0000000000028bb2 : retf 3
0x00000000000e63a8 : retf 4
0x0000000000056282 : retf 5
0x00000000000baa82 : retf 6
0x000000000009f1b3 : retf 7
0x000000000003ef2f : retf 8
0x0000000000132ea6 : rol ax, 8 ; ret
0x00000000000be765 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000af2fe : rol bl, 0x83 ; ret 0x6620
0x00000000000bf3d9 : rol bl, 0x89 ; retf 0xb60f
0x000000000013ec4d : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x000000000013f0c7 : rol bl, 0xb8 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000004587e : rol bl, 0xf3 ; addps xmm0, xmm0 ; ret
0x000000000008af5c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000055bac : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000afa9e : rol bl, 1 ; xor eax, eax ; ret
0x00000000000c6843 : rol byte ptr [r11 - 0x78f0f608], 1 ; retf
0x0000000000140bd7 : rol byte ptr [r8], 0xc6 ; ret
0x00000000000bef21 : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000d4282 : rol byte ptr [rax + 0x42], cl ; str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000ad672 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000187c2b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000000b5072 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000004a67b : rol byte ptr [rax + 0x775003f], 0x5b ; ret
0x00000000000f194e : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x000000000002da99 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000f3bca : rol byte ptr [rax + rcx*2], 0x39 ; ret 0x840f
0x0000000000032660 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000004acb3 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4804
0x000000000010125a : rol byte ptr [rax - 0xe], cl ; dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x00000000000bfe14 : rol byte ptr [rax*4 + 0x31ee75d2], 0xc0 ; ret
0x0000000000091889 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x0000000000190daf : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000140bd8 : rol byte ptr [rax], 0xc6 ; ret
0x00000000000af552 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000001387bd : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000188062 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x000000000006600d : rol byte ptr [rbx + 0xd74fff8], 0x44 ; mov eax, eax ; ret
0x0000000000107f6d : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x00000000001080ad : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x0000000000058cdb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000163fc1 : rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x00000000000372f5 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000c6844 : rol byte ptr [rbx - 0x78f0f608], 1 ; retf
0x000000000010bb13 : rol byte ptr [rbx - 0x79f0f608], 1 ; retf
0x00000000000d2d22 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000014b61a : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000db60e : rol byte ptr [rcx + 0x17ec2], 1 ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000000ff490 : rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000e28f7 : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; pop r14 ; ret
0x000000000009d67c : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x00000000001302ec : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x0000000000103188 : rol byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000001387bf : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x00000000000a59fc : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3840
0x00000000000bef22 : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000ab9b2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc839
0x00000000000aba62 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0xf039
0x00000000000f35da : rol byte ptr [rcx + 0xf], cl ; mov dh, 0x14 ; adc al, 0xf6 ; ret 0x7580
0x0000000000196ae0 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xc031
0x0000000000062e76 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000000841af : rol byte ptr [rcx + rbp - 0x36], 0x39 ; ret 0x2b7c
0x00000000000d386d : rol byte ptr [rcx + rbp - 0x40], 0x89 ; ret
0x00000000000f530e : rol byte ptr [rcx + rcx*4 + 0x45], 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124648 : rol byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 0x14 ; syscall
0x0000000000142392 : rol byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x000000000004b5e9 : rol byte ptr [rcx + rcx*4 - 0x38], cl ; sub rsi, rdi ; syscall
0x0000000000026ded : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000013f6fa : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000013f99b : rol byte ptr [rcx - 0x3a], 0x40 ; add al, byte ptr [rax] ; ret
0x000000000003a84e : rol byte ptr [rcx - 0x77], cl ; ret 0xf7f7
0x0000000000097fea : rol byte ptr [rcx - 0x7d], 0xe8 ; add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000010723e : rol byte ptr [rcx - 0x7d], 0xf8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000000a77d9 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4105
0x00000000000a6028 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x00000000000d2d02 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a2a1a : rol byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x00000000000ab901 : rol byte ptr [rcx], 0x38 ; ret 0xf41
0x00000000000ab8b1 : rol byte ptr [rcx], 0x38 ; retf 0xe975
0x00000000001569f5 : rol byte ptr [rcx], 0x39 ; ret
0x00000000000f1834 : rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x00000000000952d9 : rol byte ptr [rcx], 0x48 ; cmp ebx, eax ; jne 0x952d8 ; jmp 0x952b5
0x000000000002833e : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000125143 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000057422 : rol byte ptr [rcx], 0x80 ; js 0x57431 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000014018d : rol byte ptr [rcx], 0x84 ; fisttp dword ptr [rdi] ; ret 0x8b48
0x000000000012c7a1 : rol byte ptr [rcx], 0x85 ; test byte ptr [rbp + 0xf], 0x44 ; retf
0x000000000003be8e : rol byte ptr [rcx], 0x88 ; dec qword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000056d73 : rol byte ptr [rcx], 0x88 ; or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000015723a : rol byte ptr [rcx], 0x89 ; ret
0x000000000002b3a2 : rol byte ptr [rcx], 0x89 ; xor dword ptr [rax - 0x7d], ecx ; ret
0x0000000000086bb4 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000005648a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000047243 : rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000bf632 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x0000000000046bba : rol byte ptr [rcx], 0xf7 ; ret 0
0x0000000000065445 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001261c1 : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000d2d62 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d12 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000089c4a : rol byte ptr [rdx], 0 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000126091 : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000d2d52 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000177edd : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001887c5 : rol ch, 1 ; jns 0x1887a4 ; retf 0xead3
0x0000000000188915 : rol ch, 1 ; jns 0x1888f4 ; retf 0xead3
0x0000000000188a65 : rol ch, 1 ; jns 0x188a44 ; retf 0xead3
0x0000000000188bb5 : rol ch, 1 ; jns 0x188b94 ; retf 0xead3
0x0000000000188d05 : rol ch, 1 ; jns 0x188ce4 ; retf 0xead3
0x0000000000188e55 : rol ch, 1 ; jns 0x188e34 ; retf 0xead3
0x0000000000188fa5 : rol ch, 1 ; jns 0x188f84 ; retf 0xead3
0x00000000001890f5 : rol ch, 1 ; jns 0x1890d4 ; retf 0xead3
0x0000000000189245 : rol ch, 1 ; jns 0x189224 ; retf 0xead3
0x0000000000189395 : rol ch, 1 ; jns 0x189374 ; retf 0xead3
0x00000000001894e5 : rol ch, 1 ; jns 0x1894c4 ; retf 0xead3
0x0000000000189635 : rol ch, 1 ; jns 0x189614 ; retf 0xead3
0x0000000000189785 : rol ch, 1 ; jns 0x189764 ; retf 0xead3
0x00000000001898d5 : rol ch, 1 ; jns 0x1898b4 ; retf 0xead3
0x0000000000189a25 : rol ch, 1 ; jns 0x189a04 ; retf 0xead3
0x0000000000189ea5 : rol ch, 1 ; jns 0x189e84 ; retf 0xead3
0x000000000018a025 : rol ch, 1 ; jns 0x18a004 ; retf 0xead3
0x000000000018a1a5 : rol ch, 1 ; jns 0x18a184 ; retf 0xead3
0x000000000018a325 : rol ch, 1 ; jns 0x18a304 ; retf 0xead3
0x000000000018a4a5 : rol ch, 1 ; jns 0x18a484 ; retf 0xead3
0x000000000018a625 : rol ch, 1 ; jns 0x18a604 ; retf 0xead3
0x000000000018a7a5 : rol ch, 1 ; jns 0x18a784 ; retf 0xead3
0x000000000018a925 : rol ch, 1 ; jns 0x18a904 ; retf 0xead3
0x000000000018aaa5 : rol ch, 1 ; jns 0x18aa84 ; retf 0xead3
0x000000000018ac25 : rol ch, 1 ; jns 0x18ac04 ; retf 0xead3
0x000000000018ada5 : rol ch, 1 ; jns 0x18ad84 ; retf 0xead3
0x000000000018af25 : rol ch, 1 ; jns 0x18af04 ; retf 0xead3
0x000000000018b0a5 : rol ch, 1 ; jns 0x18b084 ; retf 0xead3
0x000000000018b225 : rol ch, 1 ; jns 0x18b204 ; retf 0xead3
0x000000000018b3a5 : rol ch, 1 ; jns 0x18b384 ; retf 0xead3
0x0000000000187caf : rol ch, 1 ; std ; xlatb ; ret
0x000000000018ba56 : rol ch, cl ; std ; xlatb ; ret
0x000000000018bd0f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x000000000011a107 : rol dh, 0x46 ; inc dword ptr [rax] ; ret
0x00000000000d2cac : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000018f0e0 : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000000bf1fc : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000187874 : rol dword ptr [rax + 0x49], 0x29 ; retf
0x000000000002cda8 : rol dword ptr [rax + rcx*2], 0x39 ; retf
0x000000000002c792 : rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x000000000013f566 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000172cd0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000009ff99 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x0000000000130446 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; leave ; ret
0x00000000000af324 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000af7d7 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000af806 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x0000000000187ca3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000018b7a3 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000ab9bc : rol dword ptr [rbp - 0x7c], 0xca ; jne 0xab9a9 ; mov rax, r8 ; ret
0x00000000001872d5 : rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x0000000000196d0d : rol dword ptr [rbx - 0x76b6fe1b], 1 ; retf
0x00000000000cc0f1 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x844
0x00000000000a8392 : rol dword ptr [rcx + 0xf], cl ; xchg eax, ebx ; ret 0x845
0x000000000004ac5b : rol dword ptr [rcx + rax*2], 0x89 ; cmp dword ptr [rbp + 0x39], ecx ; retf 0xbb75
0x00000000000fa366 : rol dword ptr [rcx + rcx*2], 0x39 ; retf
0x00000000000f8354 : rol dword ptr [rcx + rcx*2], 0x39 ; retf 0xc575
0x00000000000a76b4 : rol dword ptr [rcx + rcx*4 - 0x21], 0xc1 ; call qword ptr [rdx]
0x000000000004aff7 : rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; adc dword ptr [rdi], eax ; ret
0x000000000005fb37 : rol dword ptr [rcx + rdi - 0x18], 0x7e ; mov cl, 0xeb ; retf 0x4c90
0x000000000002d17e : rol dword ptr [rcx - 0x77], cl ; ret 0x5a58
0x00000000000f1a62 : rol dword ptr [rcx], 0x39 ; ret 0xc775
0x0000000000056bab : rol dword ptr [rcx], 0x88 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000132b34 : rol dword ptr [rcx], 0xc9 ; jmp 0x8ed75
0x00000000000d999e : rol dword ptr [rdi + rcx], 0x84 ; ret
0x00000000000bc1c9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x000000000002e67e : rol dword ptr [rdx + rdx*8 - 0x157e2a87], 1 ; ret 0
0x000000000013f8e6 : rol dword ptr [rdx], 0x45 ; mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000132ea7 : rol eax, 8 ; ret
0x0000000000046ef1 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000018b9f2 : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000188365 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x000000000013d6bf : rol esi, 0x45 ; ret
0x000000000013d6be : rol r14, 0x45 ; ret
0x0000000000046ef0 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008d8bd : ror byte ptr [r9 + rcx*4 - 0xf], 0x4c ; mov edi, edi ; call r12
0x0000000000163f48 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000052780 : ror byte ptr [rax + 0x21], 1 ; ret 0x8548
0x0000000000046ef2 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000af372 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaf3b9 ; add rax, rdi ; ret
0x00000000000d1562 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xd15a9 ; add rax, rdi ; ret
0x00000000000b4f27 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000d2a2c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000000b53ae : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000a6a51 : ror byte ptr [rax + 0x29], cl ; ret 0x8d4c
0x00000000000dc241 : ror byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x0000000000110467 : ror byte ptr [rax + 0x39], 0xf7 ; ja 0x110461 ; mov eax, r8d ; ret
0x0000000000097fb5 : ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x0000000000097330 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000009c57e : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000110ba5 : ror byte ptr [rax + 0x39], 1 ; ret 0x2d75
0x00000000000a32e8 : ror byte ptr [rax + 0x48100454], 0x89 ; retf 0x8348
0x00000000000d8044 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000abc08 : ror byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000067a2a : ror byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000f0f23 : ror byte ptr [rax + 0x63], cl ; retf
0x000000000002704e : ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x00000000000d4033 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000130386 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000146834 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0x00000000000d52f6 : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x000000000003567a : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000003566b : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000d2ab6 : ror byte ptr [rax + 0xf], cl ; ret
0x0000000000197c3d : ror byte ptr [rax + 0xf], cl ; retf
0x00000000000af42c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000000af948 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000af342 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000187c73 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000003baab : ror byte ptr [rax + 1], 1 ; ret
0x000000000013f8c6 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000b4f24 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000afa96 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000036c66 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001602d8 : ror byte ptr [rax - 0x39], 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005ba6a : ror byte ptr [rax - 0x39], cl ; ret
0x00000000001480c9 : ror byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007863e : ror byte ptr [rax - 0x73], 0x34 ; ret
0x0000000000048665 : ror byte ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x00000000000e80b0 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000af332 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000af362 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000af842 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000af352 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000009f425 : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000018d802 : ror byte ptr [rax - 0x73], 1 ; jl 0x18d825 ; and ecx, ebp ; ret
0x000000000011f813 : ror byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x0000000000125d88 : ror byte ptr [rax - 0x75], 0x44 ; ret 0x8940
0x0000000000099a60 : ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000156eb6 : ror byte ptr [rax - 0x75], 0x47 ; cmp byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8948
0x0000000000125b35 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000df363 : ror byte ptr [rax - 0x75], 0x74 ; ret
0x00000000000a211b : ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000ab80c : ror byte ptr [rax - 0x77], 0xa ; ret
0x0000000000150e0c : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000a5e18 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x000000000014b16f : ror byte ptr [rax - 0x77], 0xdf ; call rcx
0x0000000000116cef : ror byte ptr [rax - 0x77], 0xe2 ; mov eax, 0x10 ; syscall
0x000000000008c999 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000011061d : ror byte ptr [rax - 0x77], 1 ; ret 0x3d48
0x0000000000092475 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000026fdd : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000044352 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000110899 : ror byte ptr [rax - 0x77], 1 ; retf
0x00000000000a2195 : ror byte ptr [rax - 0x77], 1 ; retf 0x894c
0x0000000000163c77 : ror byte ptr [rax - 0x77], 1 ; retf 0xfd89
0x000000000015037a : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000011a595 : ror byte ptr [rax - 0x77], 5 ; retf
0x000000000014db7a : ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001872d2 : ror byte ptr [rax - 0x77], cl ; rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x000000000013ed0d : ror byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x0000000000093a45 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x93a56 ; ret
0x0000000000196add : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xc031
0x00000000000ab8ae : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax], edi ; retf 0xe975
0x00000000001037af : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012eaff : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000004b383 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000015af7d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000055514 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000112e37 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000000915f5 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000af8a2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000188092 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000af882 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000af862 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000123c38 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000145a47 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000044b3c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000000844e3 : ror byte ptr [rax - 0x7d], 1 ; ret 0x8b04
0x000000000002da96 : ror byte ptr [rax - 0x7d], 1 ; rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000e64df : ror byte ptr [rax - 0x7d], 1 ; ror byte ptr [rax], 0x83 ; ret 0x4f08
0x000000000005b890 : ror byte ptr [rax - 0x7d], cl ; jge 0x5b89d ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000ceaa0 : ror byte ptr [rax - 0x7d], cl ; jge 0xceaad ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x0000000000100e0d : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba786 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000083e1e : ror byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000046400 : ror byte ptr [rax - 0x7f], 0xc4 ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001568b5 : ror byte ptr [rax], 0x83 ; js 0x1568bb ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000e64e2 : ror byte ptr [rax], 0x83 ; ret 0x4f08
0x00000000000bebb4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000d44ba : ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xb70f
0x00000000001607d3 : ror byte ptr [rbp + rcx*4 + 0x7c], 0x24 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000006231a : ror byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8545
0x00000000001112b3 : ror byte ptr [rbx + 0x3108247c], 0xc0 ; syscall
0x000000000018f271 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000000cade9 : ror byte ptr [rbx - 0x74b77cfc], 1 ; pop rbp ; mov al, 0x89 ; ret 0xff25
0x0000000000159746 : ror byte ptr [rcx + 0x1b803], 0 ; add bl, ch ; ret
0x00000000000f6354 : ror byte ptr [rcx + 0x21], 1 ; retf
0x000000000012a914 : ror byte ptr [rcx + 0x2b], 1 ; cmp byte ptr [r8 + 0x39], r9b ; ret
0x0000000000030de8 : ror byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000110c08 : ror byte ptr [rcx + 0x39], 1 ; ret 0x2a75
0x000000000010f76a : ror byte ptr [rcx + 0x5d5b0453], 0x41 ; pop rsp ; ret
0x00000000000f5247 : ror byte ptr [rcx + 0x5d5b307d], 0x41 ; pop rsp ; ret
0x00000000000abcc5 : ror byte ptr [rcx + 0x63], 1 ; add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000093366 : ror byte ptr [rcx + 0x63], 4 ; or dword ptr [rcx + rax - 0x28], 0x3e ; jmp rax
0x000000000010c27c : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000000d9231 : ror byte ptr [rcx + 0x63], 4 ; xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000055fae : ror byte ptr [rcx + 0x63], cl ; adc al, 0x91 ; add rdx, r9 ; jmp rdx
0x00000000000a63ae : ror byte ptr [rcx + 1], 1 ; ret
0x00000000000f3a02 : ror byte ptr [rcx + 1], 1 ; ret 0x8948
0x000000000002cb36 : ror byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; sub byte ptr [rcx - 0x77], cl ; ret
0x00000000000d3549 : ror byte ptr [rcx + rcx*4 + 0x64], 0x24 ; push rax ; call rbx
0x000000000014d87d : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000c0948 : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x30] ; call rbx
0x000000000003b7d3 : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0663 : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049f9a : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x000000000015650a : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x0000000000147d2a : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x000000000008d8be : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, edi ; call r12
0x00000000000a9245 : ror byte ptr [rcx + rdi - 0x21], 0xf ; xchg eax, ebx ; ret 0x841
0x0000000000044f58 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000a3ce3 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000014d824 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x0000000000062178 : ror byte ptr [rcx - 0x3f], 0xe3 ; and byte ptr [rcx + 9], cl ; ret
0x00000000000ccdcb : ror byte ptr [rcx - 0x73], cl ; jl 0xcce11 ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x00000000000bf58a : ror byte ptr [rcx - 0x765df00f], 1 ; ret 0xe283
0x0000000000077a91 : ror byte ptr [rcx - 0x77], 4 ; retf 0x4a8d
0x000000000014db87 : ror byte ptr [rcx - 0x77], cl ; ret 0xc149
0x000000000002a898 : ror byte ptr [rcx - 0x77], cl ; retf
0x00000000000ba363 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000002f4bc : ror byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000018ca08 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000000a8fd9 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8806
0x00000000001220c0 : ror byte ptr [rcx], 0xd0 ; ret
0x0000000000046472 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001775dd : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008cf92 : ror byte ptr [rdi], 0x11 ; add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000009900c : ror byte ptr [rdi], 0x11 ; add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x0000000000116b8c : ror byte ptr [rdi], 0x11 ; and al, 0x11 ; syscall
0x0000000000096808 : ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x000000000002a99c : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x000000000010fff2 : ror byte ptr [rdi], 0x44 ; ret 0x8b48
0x000000000011ff94 : ror byte ptr [rdi], 0x44 ; ret 0xfc3
0x000000000011c0f5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000004a6ae : ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x000000000011749b : ror byte ptr [rdi], 0x49 ; ret 0x48c3
0x0000000000033bcf : ror byte ptr [rdi], 0x84 ; inc dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000085931 : ror byte ptr [rdi], 0x84 ; mov dword ptr [rax], 0x89480000 ; ret
0x000000000005be51 : ror byte ptr [rdi], 0x84 ; or rax, 0xffffffff89410000 ; ret 0xd231
0x00000000000501d1 : ror byte ptr [rdi], 0x84 ; push rax ; or eax, 0x89410000 ; ret 0xd231
0x00000000000a07be : ror byte ptr [rdi], 0x84 ; ret
0x0000000000124714 : ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000070eca : ror byte ptr [rdi], 0x84 ; ret 0xa
0x0000000000060d60 : ror byte ptr [rdi], 0x84 ; retf
0x00000000000368d7 : ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000179d8f : ror byte ptr [rdi], 0x84 ; retf 0x20
0x00000000000ff0aa : ror byte ptr [rdi], 0x84 ; retf 0xffe2
0x0000000000057ca6 : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x00000000000fc8cf : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000010d87b : ror byte ptr [rdi], 0x84 ; retf 3
0x000000000009ff96 : ror byte ptr [rdi], 0x84 ; rol dword ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x0000000000068767 : ror byte ptr [rdi], 0x84 ; sbb bl, byte ptr [rip - 0x7cb80000] ; ret 0x3c01
0x000000000011c00a : ror byte ptr [rdi], 0x84 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b8de1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000002b80c : ror byte ptr [rdi], 0x85 ; ret
0x00000000000860d7 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000b5727 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000114be7 : ror byte ptr [rdi], 0x85 ; ret 0xfffd
0x000000000011dee4 : ror byte ptr [rdi], 0x85 ; ret 4
0x0000000000084006 : ror byte ptr [rdi], 0x85 ; retf
0x00000000001550ff : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000018065f : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000018047f : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x000000000019a1e0 : ror byte ptr [rdi], 0x85 ; retf 0xfffe
0x0000000000146b57 : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000007a62e : ror byte ptr [rdi], 0x88 ; retf
0x00000000000ca400 : ror byte ptr [rdi], 0x89 ; ret 1
0x000000000007ecbc : ror byte ptr [rdi], 0x8c ; ret 0xffed
0x000000000010fbfe : ror byte ptr [rdi], 0x8e ; ret
0x0000000000064a6e : ror byte ptr [rdi], 0x8e ; retf
0x00000000000a20e5 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000000335e8 : ror byte ptr [rdi], 0x94 ; ret
0x000000000010875f : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x000000000006d867 : ror byte ptr [rdi], 0x94 ; ret 0x68e9
0x0000000000142c32 : ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x0000000000112874 : ror byte ptr [rdi], 0x94 ; ret 0xd321
0x00000000000d3c29 : ror byte ptr [rdi], 0x94 ; ret 0xd338
0x0000000000112cf8 : ror byte ptr [rdi], 0x95 ; ret 0xd321
0x0000000000132b31 : ror byte ptr [rdi], 0x9f ; rol dword ptr [rcx], 0xc9 ; jmp 0x8ed78
0x00000000000e80ad : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000065f6a : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbp ; ret
0x0000000000105b63 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000138cf3 : ror byte ptr [rdi], 0xb7 ; retf
0x00000000000bee69 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000044367 : ror byte ptr [rdi], 1 ; mov dh, 0x11 ; test dl, dl ; jne 0x44350 ; ret
0x00000000000f42af : ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000a4a02 : ror byte ptr [rdi], 1 ; test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000af9e6 : ror byte ptr [rdi], 1 ; test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x00000000000e8f11 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x000000000015b1a5 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0xd108
0x00000000000eb548 : ror byte ptr [rdi], cl ; mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002d933 : ror byte ptr [rdi], cl ; mov byte ptr [rsi], cl ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000002debb : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000028339 : ror byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x00000000000edf06 : ror byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rcx], bh ; retf
0x00000000000ed28f : ror byte ptr [rdi], cl ; mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007deb9 : ror byte ptr [rdi], cl ; mov dl, cl ; sbb al, 0 ; add dh, dh ; ret 0xf40
0x00000000000af8ed : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000010875a : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000016458a : ror byte ptr [rdi], cl ; test bh, bh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000164556 : ror byte ptr [rdi], cl ; test byte ptr [rbx], dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a4a1a : ror byte ptr [rdi], cl ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000004db85 : ror byte ptr [rdi], cl ; test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000006fb62 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8341
0x00000000001962ff : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd348
0x00000000000a20ee : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000001701c7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000162ba4 : ror dword ptr [rax + 0x39], 1 ; retf
0x00000000001590a6 : ror dword ptr [rax + 0x39], 1 ; retf 0xb775
0x00000000000f0f20 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x0000000000099556 : ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000186f52 : ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000010eef3 : ror dword ptr [rax + 1], 1 ; ret 0x8948
0x00000000000d37d5 : ror dword ptr [rax + 1], cl ; ret 0x1b8
0x00000000000ccd83 : ror dword ptr [rax + 1], cl ; retf 0x8b41
0x0000000000131e39 : ror dword ptr [rax + 9], cl ; retf 0x3948
0x0000000000131cc5 : ror dword ptr [rax + 9], cl ; retf 0x8348
0x00000000001569c4 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x000000000005b89b : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000a7102 : ror dword ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b4df8 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b4f19 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b50da : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000005e204 : ror dword ptr [rax - 0x3f], 0xe8 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000004822d : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000589f3 : ror dword ptr [rax - 0x73], 1 ; push rax ; cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x0000000000157095 : ror dword ptr [rax - 0x75], 1 ; add byte ptr [rax + 0xf], cl ; retf 0x3948
0x000000000002fafd : ror dword ptr [rax - 0x75], 1 ; jl 0x2fb2e ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000000f4bec : ror dword ptr [rax - 0x75], cl ; sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000002a97e : ror dword ptr [rax - 0x77], 1 ; enter 0xf49, 0x4f ; ret 0x8548
0x00000000001109ad : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000005a9e0 : ror dword ptr [rax - 0x77], 1 ; retf 0x3948
0x000000000006288e : ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x0000000000051fb4 : ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000311fc : ror dword ptr [rax - 0x77], 1 ; retf 0xc148
0x00000000000d7f84 : ror dword ptr [rax - 0x77], 1 ; retf 0xf48
0x000000000011ca47 : ror dword ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000089ebd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x89eb6 ; ret
0x0000000000094885 : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x9487e ; ret
0x00000000000588a7 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000ece2b : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000011999e : ror dword ptr [rax - 0x7d], 1 ; ret
0x0000000000043c8a : ror dword ptr [rax - 0x7d], 1 ; ret 0x4001
0x0000000000095642 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000187553 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c20
0x0000000000187573 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c40
0x0000000000187593 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c60
0x000000000002cda5 : ror dword ptr [rax - 0x7d], 1 ; rol dword ptr [rax + rcx*2], 0x39 ; retf
0x0000000000124756 : ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x000000000009259f : ror dword ptr [rbp + 0x29], 1 ; in eax, 0x83 ; retf 0x8310
0x00000000000bf433 : ror dword ptr [rbp - 0xb869], cl ; dec dword ptr [rax + 0x63] ; ret 0xfac1
0x000000000014b69e : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0x5389
0x000000000009a330 : ror dword ptr [rcx + 0x14ff290d], 0 ; call 0x1165c9
0x00000000000f5ede : ror dword ptr [rcx + 0x21], 1 ; retf
0x00000000000abb30 : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x0000000000101030 : ror dword ptr [rcx + 0x63], 1 ; adc al, 0x91 ; add rdx, r9 ; jmp rdx
0x00000000000ff48d : ror dword ptr [rcx + 0x63], cl ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000001987d7 : ror dword ptr [rcx + 0xf], cl ; mov edx, 0x94d3ff3 ; ret
0x0000000000196cb2 : ror dword ptr [rcx + 9], cl ; retf
0x000000000005e79e : ror dword ptr [rcx + rcx*4 - 0x40], 1 ; ret
0x00000000000de218 : ror dword ptr [rcx - 0x35d6bb36], 0x81 ; ret 0x17e
0x000000000010d7c2 : ror dword ptr [rcx - 0x75], 0x3e ; call 0x10a296
0x000000000014dbc2 : ror dword ptr [rcx - 0x77], 1 ; ret 0xc149
0x0000000000196f02 : ror dword ptr [rcx - 0x77], 1 ; retf
0x000000000014dc0f : ror dword ptr [rcx - 0x77], 1 ; retf 0x8349
0x0000000000098498 : ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x000000000014dbd0 : ror dword ptr [rcx - 0x77], 1 ; retf 0xb43
0x00000000000ee6fa : ror dword ptr [rcx - 0x77], 1 ; retf 0xf4c
0x0000000000196fa6 : ror dword ptr [rcx - 0x7d], 1 ; stc ; add dword ptr [rcx - 0x77], ecx ; retf
0x00000000000ba53a : ror dword ptr [rcx - 0x7d], cl ; call 0xffffffffcb91b489
0x000000000019408b : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000181474 : ror dword ptr [rdi - 0x73], 0x14 ; or bh, byte ptr [rsi] ; jmp r10
0x00000000000950a4 : ror dword ptr [rdi], 0x11 ; cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009b59a : ror dword ptr [rdi], 0x11 ; push 0x6e0f4966 ; ret
0x000000000002a7fd : ror dword ptr [rdi], 0x11 ; ret
0x000000000011ceda : ror dword ptr [rdi], 0x84 ; lar eax, word ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000000494d2 : ror dword ptr [rdi], 0x84 ; retf 2
0x0000000000191618 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191d24 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191af6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x0000000000192c20 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191a76 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000191db4 : ror dword ptr [rdi], 0x85 ; je 0x191dc4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001918ab : ror dword ptr [rdi], 0x85 ; jno 0x1918c0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191973 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001915f0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c899e : ror dword ptr [rdi], 0x87 ; retf
0x0000000000080dda : ror dword ptr [rdi], 0x8d ; out dx, eax ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001330d3 : ror dword ptr [rdi], 0x97 ; ret 0x840
0x000000000011c0f2 : ror dword ptr [rdi], 0x9a ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000af775 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000129d3e : ror dword ptr [rdi], 1 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x00000000000e374e : ror dword ptr [rdi], 1 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000c7cf2 : ror dword ptr [rdi], 1 ; popfq ; ret 0x840
0x00000000000f7cb0 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret 0xf66
0x00000000000c8f02 : ror dword ptr [rdi], cl ; adc dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000c3c52 : ror dword ptr [rdi], cl ; sbb dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x000000000009b5c9 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000019a115 : ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000051334 : ror dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000011c0f1 : ror dword ptr cs:[rdi], 0x9a ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000089ebc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x89eb7 ; ret
0x0000000000094884 : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x9487f ; ret
0x0000000000028f36 : sahf ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000010e396 : sahf ; add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000013ea6e : sahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001891ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005a580 : sahf ; ret 0x3948
0x000000000004866b : sahf ; ret 0x3949
0x000000000004dcf6 : sahf ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000011088a : sal bh, 0xc2 ; jmp rsi
0x0000000000055d99 : sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018f25e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x0000000000065f6d : sal bh, 0xd8 ; pop rbp ; ret
0x0000000000027b1e : sal bh, 0xd8 ; ret
0x00000000000ad4f7 : sal bh, 1 ; ret 0x8000
0x00000000000ad3b7 : sal bh, 1 ; ret 0xc000
0x00000000000ad277 : sal bh, 1 ; ret 0xe000
0x00000000000ad137 : sal bh, 1 ; ret 0xf000
0x00000000000acff7 : sal bh, 1 ; ret 0xf800
0x00000000000aceb7 : sal bh, 1 ; ret 0xfc00
0x00000000000acd77 : sal bh, 1 ; ret 0xfe00
0x00000000000acc37 : sal bh, 1 ; ret 0xff00
0x00000000000acaf7 : sal bh, 1 ; ret 0xff80
0x00000000000ac9b7 : sal bh, 1 ; ret 0xffc0
0x00000000000ac877 : sal bh, 1 ; ret 0xffe0
0x00000000000ac737 : sal bh, 1 ; ret 0xfff0
0x00000000000ac5f7 : sal bh, 1 ; ret 0xfff8
0x00000000000ac4b7 : sal bh, 1 ; ret 0xfffc
0x00000000000ac377 : sal bh, 1 ; ret 0xfffe
0x0000000000061b24 : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000198835 : sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000045801 : sal bl, 0xf ; pop rcx ; add eax, 0x179ea6 ; ret
0x00000000000a34ec : sal byte ptr [rax + 0xf480001], 1 ; ret 0x66c3
0x000000000014ad35 : sal byte ptr [rax + rax*2 + 0x41], 0x83 ; call qword ptr [rbx]
0x000000000005e4b6 : sal byte ptr [rax + rcx + 0x49], 0x83 ; ret
0x00000000000a25f5 : sal byte ptr [rax + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000011fdf4 : sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x000000000011775d : sal byte ptr [rbp + 0x10], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001176bd : sal byte ptr [rbp + 0x10], 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011131d : sal byte ptr [rbp + 0x10], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000111abd : sal byte ptr [rbp + 0x10], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e5c9d : sal byte ptr [rbp + 0x10], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e5d1d : sal byte ptr [rbp + 0x10], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011bbfd : sal byte ptr [rbp + 0x10], 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001233cd : sal byte ptr [rbp + 0x10], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001232fd : sal byte ptr [rbp + 0x10], 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001228fd : sal byte ptr [rbp + 0x10], 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001226d0 : sal byte ptr [rbp + 0x15], 0xb8 ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010f480 : sal byte ptr [rbp + 0x15], 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010f3d0 : sal byte ptr [rbp + 0x15], 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000122830 : sal byte ptr [rbp + 0x15], 0xb8 ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000123d10 : sal byte ptr [rbp + 0x15], 0xb8 ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001238b0 : sal byte ptr [rbp + 0x15], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000123dc0 : sal byte ptr [rbp + 0x15], 0xb8 ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000123e70 : sal byte ptr [rbp + 0x15], 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000013f6ec : sal byte ptr [rbp + 0x19], 0x44 ; mov eax, eax ; ret
0x0000000000097fcd : sal byte ptr [rbp + 0x28], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000130204 : sal byte ptr [rbp + 0x29], 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x000000000018bf22 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000000e743f : sal byte ptr [rbp + 0x2e], 0xb8 ; ja 0xe744d ; add byte ptr [rax], al ; syscall
0x0000000000117cef : sal byte ptr [rbp + 0x2e], 0xb8 ; jb 0x117cfd ; add byte ptr [rax], al ; syscall
0x00000000000e21bf : sal byte ptr [rbp + 0x2e], 0xb8 ; je 0xe21cd ; add byte ptr [rax], al ; syscall
0x00000000000e738f : sal byte ptr [rbp + 0x2e], 0xb8 ; jne 0xe739d ; add byte ptr [rax], al ; syscall
0x0000000000117c4f : sal byte ptr [rbp + 0x2e], 0xb8 ; jno 0x117c5d ; add byte ptr [rax], al ; syscall
0x00000000000e70bf : sal byte ptr [rbp + 0x2e], 0xb8 ; push 0 ; add byte ptr [rax], al ; syscall
0x000000000011df94 : sal byte ptr [rbp + 0x3b], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000011115c : sal byte ptr [rbp + 0x61], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000186ee3 : sal byte ptr [rbp + 0x6a], cl ; test esi, esi ; je 0x186ed1 ; xor eax, eax ; ret
0x000000000011dfbd : sal byte ptr [rbp + 0x7d], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000001264e2 : sal byte ptr [rbp + 0xb], cl ; ret
0x000000000010f849 : sal byte ptr [rbp + 0xc], 0x8b ; push rbx ; add al, 0xeb ; ret
0x0000000000130068 : sal byte ptr [rbp + 0xd], 0x48 ; cmp dword ptr [rdi], 0 ; je 0x130089 ; ret
0x000000000006589b : sal byte ptr [rbp + 2], 0x5b ; ret
0x00000000000bf126 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x0000000000093a48 : sal byte ptr [rbp + 5], cl ; ret
0x0000000000066187 : sal byte ptr [rbp + 6], cl ; sub dword ptr [rdi], 1 ; ret
0x0000000000036dce : sal byte ptr [rbp + 7], 0x44 ; mov eax, eax ; ret
0x00000000001444bd : sal byte ptr [rbp + 8], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000fd8c2 : sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xc675
0x000000000002726d : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014ba87 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000bfe17 : sal byte ptr [rbp - 0x12], cl ; xor eax, eax ; ret
0x00000000000be8d0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000089ec0 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000ab982 : sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x0000000000142386 : sal byte ptr [rbp - 0x1c], 0x44 ; mov eax, edx ; ret
0x000000000018fb0a : sal byte ptr [rbp - 0x1d], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000ad81b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000001873dc : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000018ffdf : sal byte ptr [rbp - 0x22], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000001878b1 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000bfeb1 : sal byte ptr [rbp - 0x24], cl ; ret
0x000000000004436c : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000119009 : sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001190ea : sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013ed0b : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000187cad : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000187ca5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000007e030 : sal byte ptr [rbp - 0x4b], 0x4c ; mov edi, ebp ; call 0x8a278
0x000000000018b7ad : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000119251 : sal byte ptr [rbp - 0x52], cl ; xor eax, eax ; pop rbp ; ret
0x000000000013213d : sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x00000000000ed702 : sal byte ptr [rbp - 0x5e], 0xe9 ; retf
0x000000000018b7a5 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000a1b0a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000c119c : sal byte ptr [rbp - 0xf], cl ; ret
0x0000000000096b20 : sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000a02da : sal byte ptr [rbx + 0x4c], 0x89 ; out 0x48, al ; mov edi, ebp ; call rax
0x000000000015a848 : sal byte ptr [rbx + 0xd], 1 ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000000000e9e57 : sal byte ptr [rbx + rbp + 0x49], cl ; add ebp, 1 ; mov rdx, rcx ; jmp 0xe9e41
0x00000000000e0566 : sal byte ptr [rbx + rbp + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001083de : sal byte ptr [rbx + rbp - 0x75], 0x70 ; adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000008c772 : sal byte ptr [rbx + rbp*2 + 0x49], 0x2b ; and byte ptr [r8 + 1], r9b ; ret
0x00000000000c3352 : sal byte ptr [rbx + rbp*4 + 0x48], 0x89 ; ret 0x894c
0x000000000014b632 : sal byte ptr [rbx + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000a5472 : sal byte ptr [rcx + 0x48], 3 ; add byte ptr [r8 - 0x77], r9b ; ret 0x14eb
0x00000000001564d1 : sal byte ptr [rcx + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000b4e6c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000009732e : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000011639d : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x0000000000110578 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xef ; call rax
0x000000000014b496 : sal byte ptr [rdi + rax + 0x31], 0xc0 ; ret
0x00000000000f0ddf : sal byte ptr [rdi + rdi - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fe816 : sal byte ptr [rdx + 0x15], 0x39 ; ret 0x1172
0x000000000011fe38 : sal byte ptr [rdx + 0x48], 0x39 ; ret
0x00000000000b503b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000164ef8 : sal byte ptr [rdx + rbp + 0x49], cl ; add ebp, 1 ; mov rdx, rcx ; jmp 0x164ee1
0x00000000000f3aba : sal byte ptr [rdx + rdi + 0x31], 0xf6 ; add rdx, rax ; jmp 0xf3ad8
0x00000000000b53b3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00000000000b9bc3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000af8eb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000153043 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1530b9 ; call rax
0x0000000000153ae3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x153b49 ; call rax
0x00000000000a5b3b : sal byte ptr [rsi + rcx + 0x48], 0x89 ; ret 0x894c
0x00000000000b4e0f : sal byte ptr [rsi + rdi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000110617 : sal byte ptr [rsi + rsi + 0x31], 0xd2 ; call rax
0x00000000000e07e1 : sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000000ab8f9 : sal byte ptr [rsp + rbp + 0x4d], 0x89 ; ret
0x00000000000cfdf1 : sal byte ptr [rsp + rbp*4 + 0x48], 0x89 ; ret 0x894c
0x000000000014e241 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014481b : sal byte ptr [rsp + rcx - 0x75], 0x48 ; cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000011ac81 : sal byte ptr [rsp + rcx - 9], cl ; ret 0xfc07
0x000000000012ef4d : sal dh, 0x43 ; sbb al, 0x20 ; je 0x12ef68 ; pop rbx ; ret
0x000000000004549c : sal dl, 0xf ; pop rcx ; add eax, 0x179b6b ; ret
0x00000000000ab56d : sal dword ptr [rbp - 0x11], 0xe9 ; retf 0xffd5
0x00000000000ab80a : sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x000000000019c936 : sal dword ptr [rdi + rcx*4 + 0x48], 0x89 ; ret 0xc148
0x00000000000aba21 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0xaba1f ; ret
0x00000000000bedc7 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000e8146 : sal ebx, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f83bc : sal edx, 1 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000f83bb : sal r10d, 1 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000e8145 : sal r11d, cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000005ad25 : sar bh, 0xff ; ret
0x000000000007bb9c : sar bh, cl ; loopne 0x7bb37 ; mov r10, rdx ; jmp rax
0x000000000011061b : sar bh, cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3d48
0x00000000000e1082 : sar byte ptr [r8 + 0xd9], 1 ; syscall
0x0000000000124376 : sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000e5a52 : sar byte ptr [rax + 0x3d], cl ; syscall
0x00000000000e1083 : sar byte ptr [rax + 0xd9], 1 ; syscall
0x000000000013fd0f : sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000122327 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x00000000000470ec : sar byte ptr [rdx + 1], cl ; cmove eax, edx ; ret
0x000000000003346e : sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000011d911 : sar byte ptr [rsi + 1], cl ; call r12
0x00000000001698ba : sar byte ptr [rsi], 0x41 ; jmp rcx
0x0000000000034b0f : sar byte ptr [rsi], 1 ; jmp r8
0x0000000000026ecf : sar byte ptr [rsi], 1 ; jmp rax
0x0000000000197502 : sar byte ptr [rsi], cl ; jmp rdx
0x00000000000dddf3 : sar dh, 0xff ; dec dword ptr [rdi] ; ret 0x8d89
0x000000000006e24b : sar dl, 0xff ; dec dword ptr [rax - 0x75] ; adc ecx, ebp ; pop rsp ; retf 0xffff
0x0000000000070ec4 : sar dl, 0xff ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x000000000006c7aa : sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000659bc : sar dl, 1 ; sti ; dec dword ptr [rax - 0x77] ; ret 0x12eb
0x0000000000192f57 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x192f62 ; ret
0x00000000000c7d5b : sar dword ptr [rcx], cl ; ret 0x1d74
0x0000000000060005 : sar dword ptr [rcx], cl ; ret 0x4d74
0x000000000018edbd : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x00000000001017ef : sar dword ptr [rsi], 1 ; jmp rcx
0x0000000000044f1c : sar eax, 0x10 ; ret
0x000000000004560f : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000166278 : sar eax, 0x1f ; ret
0x0000000000044ecc : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000045959 : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000004524e : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000008dad6 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008b68d : sar eax, 2 ; ret
0x0000000000132d61 : sar eax, 6 ; ret
0x00000000001968fb : sar ebp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000008ae9c : sar ecx, 2 ; lea eax, [rcx - 1] ; ret
0x0000000000042e5a : sar edi, 1 ; inc dword ptr [rbx - 0x7af0fe08] ; ret 0xfff2
0x000000000010cf49 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000012d93d : sar edi, cl ; dec dword ptr [rcx] ; ret
0x000000000008af46 : sar edx, 2 ; sub eax, edx ; ret
0x00000000000afa98 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000193bb7 : sar esi, 1 ; jg 0x193be7 ; vzeroupper ; ret
0x0000000000193d42 : sar esi, 1 ; jg 0x193d72 ; vzeroupper ; ret
0x0000000000045958 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000004524d : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000008b68c : sar rax, 2 ; ret
0x0000000000132d60 : sar rax, 6 ; ret
0x000000000008ae9b : sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000008af45 : sar rdx, 2 ; sub eax, edx ; ret
0x00000000000afa97 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001103cc : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018507a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000184fd3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000007debd : sbb al, 0 ; add dh, dh ; ret 0xf40
0x00000000000256fc : sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000026a94 : sbb al, 0 ; ret
0x000000000002588b : sbb al, 0 ; syscall
0x000000000002a5dc : sbb al, 0 ; test eax, eax ; je 0x2a5ee ; ret
0x00000000000ec5a2 : sbb al, 0x10 ; add cl, ch ; retf 0xfff7
0x000000000012ef50 : sbb al, 0x20 ; je 0x12ef65 ; pop rbx ; ret
0x000000000012ef4f : sbb al, 0x20 ; je 0x12ef66 ; pop rbx ; ret
0x00000000000cd1bb : sbb al, 0x39 ; ret
0x0000000000154934 : sbb al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000efa15 : sbb al, 0x89 ; ret 0x8348
0x000000000006c5d3 : sbb al, 0x89 ; retf 0xc183
0x00000000000eb563 : sbb al, 0x8b ; add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000056cbd : sbb al, 0x8d ; inc byte ptr [r11 - 0x6bf00220] ; ret 0xf983
0x00000000000ef3b3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001530d5 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000000a2324 : sbb al, 0xf ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000043d07 : sbb al, 3 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001321f3 : sbb al, 6 ; add byte ptr [rax + 0x21], cl ; ret 0x8d48
0x000000000015484a : sbb al, 6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015e6f3 : sbb al, 9 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000ddd52 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000c503f : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000004a891 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011bc01 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018525a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003c5d2 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0x1a
0x0000000000095e9b : sbb al, byte ptr [rax] ; add cl, ch ; retf
0x000000000004b299 : sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000047407 : sbb al, byte ptr [rax] ; mov eax, edx ; ret
0x000000000016039a : sbb al, byte ptr [rax] ; or dword ptr [rax], eax ; syscall
0x00000000000473a8 : sbb al, byte ptr [rax] ; ret
0x000000000004971b : sbb al, byte ptr [rax] ; syscall
0x0000000000158809 : sbb al, byte ptr [rcx + 0xf] ; ret 0x93eb
0x00000000000473a7 : sbb al, byte ptr cs:[rax] ; ret
0x000000000004ab03 : sbb al, byte ptr es:[rax] ; syscall
0x0000000000185259 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003dd1b : sbb al, ch ; jmp rbx
0x00000000000d913c : sbb al, ch ; ret
0x0000000000122868 : sbb al, ch ; ret 0xf750
0x000000000003feec : sbb al, ch ; ret 0xffff
0x000000000008cc28 : sbb al, ch ; ret 9
0x00000000000ef3a3 : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000133abb : sbb bh, ch ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000006876a : sbb bl, byte ptr [rip - 0x7cb80000] ; ret 0x3c01
0x00000000001321f2 : sbb bl, byte ptr [rsi + rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8d48
0x00000000000904c6 : sbb bl, ch ; retf 0x1f0f
0x000000000012ddf4 : sbb byte ptr [eax - 0x77], cl ; ret 0x2b49
0x00000000000a1ae2 : sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000012c53e : sbb byte ptr [r11 + r9*4 + 0x46], r8b ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000015a75d : sbb byte ptr [r11 - 0x3f7cb7ea], r9b ; add al, 0xf ; retf 0x5089
0x000000000015a79d : sbb byte ptr [r11 - 0x3f7cb7f0], r9b ; add al, 0xf ; retf 0x1689
0x00000000000916e4 : sbb byte ptr [r15], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000015a7e0 : sbb byte ptr [r15], r9b ; retf 0x8348
0x00000000000445b3 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000014e974 : sbb byte ptr [r15], r9b ; xchg eax, edi ; ret 0xd284
0x000000000005ea51 : sbb byte ptr [r8 + 0x2b], cl ; sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x00000000000983bb : sbb byte ptr [r8 + 0x39], cl ; ret
0x0000000000162dd3 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000be3b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3d6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be414 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000008f1cf : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015a76c : sbb byte ptr [r9 + r9*4 - 0x40], r8b ; ret
0x000000000019a7c7 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000f8422 : sbb byte ptr [r9], al ; retf
0x00000000001111eb : sbb byte ptr [rax + 0x101], bh ; syscall
0x00000000001164b8 : sbb byte ptr [rax + 0x115], bh ; syscall
0x0000000000123d58 : sbb byte ptr [rax + 0x120], bh ; syscall
0x000000000005ea52 : sbb byte ptr [rax + 0x2b], cl ; sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x00000000000983bc : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000015d365 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000058ddc : sbb byte ptr [rax + 0x39], cl ; retf
0x000000000012c543 : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000002c193 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000012c542 : sbb byte ptr [rax + 0x39], r9b ; retf 0x840f
0x0000000000124058 : sbb byte ptr [rax + 0x45], bh ; syscall
0x0000000000162dd4 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000dbe4d : sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000013f87c : sbb byte ptr [rax + 0x63], cl ; retf 0x148
0x0000000000057b1f : sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x0000000000066abd : sbb byte ptr [rax + 1], cl ; ret 0x14c
0x00000000000715ce : sbb byte ptr [rax + 1], cl ; retf
0x000000000014b87b : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000010fad6 : sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000010d81a : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x3074
0x000000000012ee6c : sbb byte ptr [rax - 0x75], cl ; je 0x12ee9d ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000014de27 : sbb byte ptr [rax - 0x76b704ad], cl ; ret 0xc148
0x0000000000094a96 : sbb byte ptr [rax - 0x77], cl ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000009ce5f : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e05b7 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000027efa : sbb byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000012ddf5 : sbb byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000014c001 : sbb byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000381e7 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001133cf : sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000008c74e : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000058fde : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000015ab7a : sbb byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; retf
0x000000000002726a : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000e27c4 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000009999f : sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8949
0x000000000004dcf7 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000098055 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000111278 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; jne 0x111298 ; syscall
0x0000000000176cde : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a6f63 : sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000064146 : sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00000000000272d9 : sbb byte ptr [rax], al ; ret
0x000000000008fdec : sbb byte ptr [rax], al ; setne r8b ; mov eax, r8d ; ret
0x0000000000061c04 : sbb byte ptr [rax], al ; syscall
0x00000000000be3b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3d7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be415 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000e5a4f : sbb byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x3d], cl ; syscall
0x0000000000110d6a : sbb byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000004a9d4 : sbb byte ptr [rbp + 0x4c], bl ; mov eax, esp ; pop r12 ; ret
0x00000000000ffb75 : sbb byte ptr [rbp + rcx*4 + 0x15], cl ; ret
0x00000000001292a3 : sbb byte ptr [rbp + rcx*4 + 0x25], cl ; retf
0x000000000014aba8 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x000000000013f8ea : sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x000000000009d434 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000008f145 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d4fa : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a1ae3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000045dd8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d3aa2 : sbb byte ptr [rbx + 0xf48244c], cl ; xchg eax, ebp ; ret 0xc985
0x000000000009d9d1 : sbb byte ptr [rbx + rcx*4 + 0x25], cl ; lahf ; ret
0x000000000012c53f : sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000000de185 : sbb byte ptr [rbx + rcx*4 + 0x78], al ; adc al, 0x89 ; retf 0x2944
0x000000000009672b : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000015a75e : sbb byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000015a79e : sbb byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000012516a : sbb byte ptr [rbx - 0x6f3cff00], al ; ret
0x0000000000031199 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x3115a
0x0000000000199fe6 : sbb byte ptr [rcx + 0x21], cl ; retf
0x000000000009955e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000003ef54 : sbb byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xffd1
0x000000000009a76a : sbb byte ptr [rcx + rcx*4 - 0x11], cl ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x00000000000c101e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x00000000000cda44 : sbb byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdx, r13 ; call rbx
0x000000000014a378 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x000000000008f1d0 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090677 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a17e : sbb byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000015a6f7 : sbb byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000a015d : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop r12 ; ret
0x000000000015a72f : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000019a263 : sbb byte ptr [rcx - 0x3f], cl ; call 0xffffffffcb3aeba2
0x00000000000e88a4 : sbb byte ptr [rcx - 0x73], cl ; cmp al, 4 ; call 0x25337
0x000000000014d8a3 : sbb byte ptr [rcx - 0x75], cl ; pop rcx ; adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x000000000019a7c8 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000e1bb6 : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012c6b2 : sbb byte ptr [rcx - 0x77], al ; retf 0x8341
0x00000000000f1587 : sbb byte ptr [rcx - 0x77], cl ; ret 0x14d
0x0000000000046404 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000011634d : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f8423 : sbb byte ptr [rcx], al ; retf
0x0000000000104a85 : sbb byte ptr [rcx], al ; retf 0x3be9
0x00000000000ecde6 : sbb byte ptr [rcx], bh ; ret
0x0000000000055b8c : sbb byte ptr [rcx], cl ; retf 0xbe0f
0x000000000008d143 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000158a51 : sbb byte ptr [rcx], dh ; shr al, 0x37 ; retf 0xffec
0x00000000001588c1 : sbb byte ptr [rcx], dh ; shr al, 0xc7 ; retf
0x000000000015697e : sbb byte ptr [rdi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017661d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000916e5 : sbb byte ptr [rdi], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000065f2c : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014b6e1 : sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000015a7e1 : sbb byte ptr [rdi], cl ; retf 0x8348
0x00000000000445b4 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000014e975 : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000014edd5 : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000000ef8bb : sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012515a : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000125159 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000000d7e31 : sbb byte ptr [rsi - 0x7f], ah ; out 0, al ; and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000a6f62 : sbb byte ptr ds:[rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000ecde3 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x000000000002b3c1 : sbb cl, byte ptr [rax + 0x39] ; retf 0x850f
0x0000000000114082 : sbb cl, byte ptr [rax - 0x75] ; pop rbx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000034652 : sbb cl, byte ptr [rax - 0x77] ; ret 0x2548
0x0000000000027c23 : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000013f5f3 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4502
0x00000000000babdf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000181f4d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001840bd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181b3d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000181649 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181e59 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018956a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000188d8a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018917a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018899a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184c1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001843fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001818cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000183bdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000181c0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000181f29 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188b39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181ff9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018473d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183f1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001836fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001848dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000181dad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018159d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000018199d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000018902a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018884a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018995a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181e7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000018166d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000183a3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018170f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181a6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000183b73 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184873 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184393 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188f2b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018985b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181cdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184bb3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183eb3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001839d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001846d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018907b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018889b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181733 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d540a : sbb cl, byte ptr [rdx + 0x14c0011] ; ret
0x000000000008bf2b : sbb cl, ch ; retf
0x000000000012bcaa : sbb dh, dh ; ret 0x7508
0x00000000001326e4 : sbb dh, dh ; ret 0x7520
0x0000000000185378 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000a9923 : sbb dword ptr [r8], r8d ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000000dab8f : sbb dword ptr [rax + 0xd], esi ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000c3c54 : sbb dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000ef2f7 : sbb dword ptr [rax + 1], edi ; ret
0x000000000015f4cc : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000005c6de : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000185301 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185379 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122ed8 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000b2cae : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a9924 : sbb dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000055d14 : sbb dword ptr [rax], eax ; call 0x102814
0x0000000000055c5d : sbb dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000272e9 : sbb dword ptr [rax], eax ; ret
0x000000000005535b : sbb dword ptr [rax], eax ; syscall
0x00000000000abdb3 : sbb dword ptr [rax], edi ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000013f817 : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000013f6ee : sbb dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x00000000000e22aa : sbb dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; ret
0x0000000000141de6 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x0000000000104995 : sbb dword ptr [rcx - 0x7d], ecx ; ret
0x000000000012248c : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 4] ; syscall
0x000000000012243a : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000cd0c6 : sbb dword ptr [rcx], edi ; ret
0x00000000000d320a : sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x00000000000bc33e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000098831 : sbb dword ptr [rdx], 0x15 ; add byte ptr [rax + 1], cl ; ret
0x000000000009883b : sbb dword ptr [rdx], 0x39480015 ; ret
0x00000000000a9542 : sbb dword ptr [rip + 0x3948ea74], eax ; retf 0x1474
0x000000000017fbbc : sbb eax, -1 ; ret
0x0000000000113029 : sbb eax, 0 ; ret
0x000000000011ae2e : sbb eax, 0x1000d37 ; ret
0x0000000000140d7e : sbb eax, 0x3948c289 ; retf 0x1677
0x0000000000115fbb : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x00000000000bac69 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000bc3fd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000011db82 : sbb eax, 0x7d8b49 ; call rbx
0x000000000006876b : sbb eax, 0x83480000 ; ret 0x3c01
0x000000000007b90b : sbb eax, 0x8900000b ; ret 0xc083
0x000000000007ab42 : sbb eax, 0x89000016 ; ret 0xc083
0x0000000000105827 : sbb eax, 0x89000e8a ; or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00000000001637dc : sbb eax, 0x8948ffec ; ret
0x0000000000103748 : sbb eax, 0x8948fff2 ; ret 0x8b64
0x000000000005747a : sbb eax, 0x8948ffff ; ret
0x000000000017685e : sbb eax, 0x894d0000 ; retf
0x00000000001178c2 : sbb eax, 0xb8c03145 ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000124c7a : sbb eax, 0xc56e1 ; pop rbx ; ret
0x0000000000124c60 : sbb eax, 0xc56fb ; pop rbx ; ret
0x000000000004a1f4 : sbb eax, 0xe80016c3 ; ret
0x000000000019c0b0 : sbb eax, 5 ; add byte ptr [rax], al ; ret
0x00000000000ddee5 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000c269f : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000185121 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185199 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011bcc5 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b2a5e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004141e : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000358b1 : sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b6f24], dl ; ret
0x0000000000036d45 : sbb eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000032af9 : sbb eax, dword ptr [rax] ; ret
0x00000000000388e9 : sbb eax, dword ptr [rax] ; syscall
0x0000000000115fcc : sbb eax, dword ptr [rbx + 0x674a1f8] ; neg eax ; ret
0x0000000000195fd4 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x00000000000a7e23 : sbb eax, dword ptr [rcx - 0x78] ; sbb eax, dword ptr [rcx - 0xa] ; ret 0xf02
0x00000000000a7e26 : sbb eax, dword ptr [rcx - 0xa] ; ret 0xf02
0x00000000000bfa34 : sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000123085 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000038a2d : sbb eax, dword ptr ds:[rax] ; syscall
0x0000000000058cda : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001882e7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000013ec4c : sbb eax, eax ; ret
0x0000000000195a95 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000113acf : sbb ecx, esi ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x00000000000f5c61 : sbb edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e1c31 : sbb edx, dword ptr [rcx] ; or byte ptr [rax], al ; mov rax, r15 ; call rax
0x000000000012bd54 : sbb esp, dword ptr [rcx + rcx*2 - 0x75] ; xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x00000000000904c5 : sbb r11b, r13b ; retf 0x1f0f
0x000000000004b298 : sbb r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000008bf2a : sbb r9b, bpl ; retf
0x000000000017fbbb : sbb rax, -1 ; ret
0x000000000018a4cf : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a1cf : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018b0cf : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019c9bb : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001830a2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004ccfe : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; div bh ; ret 0
0x000000000018b3cf : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001895be : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000005e491 : scasb al, byte ptr [rdi] ; mov rax, r10 ; pop rbx ; ret
0x000000000018aacf : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000154ce3 : scasb al, byte ptr [rdi] ; or dword ptr [rax], eax ; syscall
0x000000000018a7cf : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x0000000000133e57 : scasb al, byte ptr [rdi] ; or eax, dword ptr [rax] ; syscall
0x00000000000e5fa7 : scasb al, byte ptr [rdi] ; out dx, al ; jmp rdi
0x00000000000a112d : scasb al, byte ptr [rdi] ; retf 0x14
0x00000000000d6467 : scasb al, byte ptr [rdi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000018fc8a : scasb al, byte ptr [rdi] ; vzeroupper ; ret
0x000000000015638e : scasb al, byte ptr [rdi] ; xchg eax, edi ; or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000119253 : scasb al, byte ptr [rdi] ; xor eax, eax ; pop rbp ; ret
0x00000000001896bd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011c00d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008c640 : scasd eax, dword ptr [rdi] ; ret
0x000000000008c480 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000bf635 : scasd eax, dword ptr [rdi] ; ret 0x518d
0x00000000000479da : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000004487e : scasd eax, dword ptr [rdi] ; ret 0x8d49
0x000000000012ed81 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000000de58b : scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000bf649 : scasd eax, dword ptr [rdi] ; ret 0xcfe9
0x00000000000445b6 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000bf63b : scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000008f6ad : scasd eax, dword ptr [rdi] ; retf
0x00000000000d37d4 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 1], cl ; ret 0x1b8
0x00000000001251e9 : seta al ; movzx eax, al ; neg eax ; ret
0x0000000000113026 : seta al ; sbb eax, 0 ; ret
0x0000000000097334 : setae al ; ret
0x00000000000d737b : setb al ; add eax, 0x16d ; ret
0x0000000000125dea : setbe al ; mov eax, r8d ; ret
0x00000000000e0154 : setbe al ; movzx eax, al ; ret
0x0000000000125de9 : setbe r8b ; mov eax, r8d ; ret
0x0000000000148b2c : sete al ; add rsp, 8 ; ret
0x0000000000159008 : sete al ; movzx eax, al ; ret
0x00000000000372f9 : sete al ; ret
0x000000000004603a : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000163fc5 : sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000132b32 : setg cl ; add ecx, ecx ; jmp 0x8ed77
0x000000000010f7cf : setl al ; ret
0x0000000000105d58 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x000000000008fdef : setne al ; mov eax, r8d ; ret
0x0000000000065f68 : setne al ; movzx eax, al ; neg eax ; pop rbp ; ret
0x0000000000105b61 : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000046f3c : setne al ; movzx eax, al ; ret
0x00000000000e8040 : setne al ; ret
0x00000000000abaf6 : setne bh ; test r9b, dil ; jne 0xabae0 ; ret
0x00000000000abaf5 : setne dil ; test r9b, dil ; jne 0xabae1 ; ret
0x00000000000c23d7 : setne dl ; jmp 0xc23eb
0x00000000000c4d77 : setne dl ; jmp 0xc4d8b
0x00000000000c7597 : setne dl ; jmp 0xc75ab
0x00000000000cee27 : setne dl ; jmp 0xcee3b
0x000000000008fdee : setne r8b ; mov eax, r8d ; ret
0x0000000000188064 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x0000000000187c4b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000187c0b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000131af9 : shl byte ptr [rbx + rax*4 + 0x39], 0xb ; jne 0x131ad0 ; jmp 0x131ac0
0x0000000000116bb6 : shl byte ptr [rcx + rax*2 - 0x75], 0x1a ; syscall
0x00000000001763dd : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000be7ef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000004acc9 : shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000004551c : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000008b4cf : shl byte ptr [rsi + 0xf], 0x6f ; ret 0x8948
0x00000000000ac15f : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000455f7 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0xff25
0x000000000015b1f4 : shl byte ptr [rsi + 0xf], 0xc5 ; retf
0x0000000000194087 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b4855 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000000fc566 : shl byte ptr [rsi + 0xf], 0xef ; enter 0xf66, -0x11 ; ret 0xf41
0x0000000000191fab : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000102e36 : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x000000000005ae25 : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000551fa : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x7c89
0x0000000000191fc2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000045a1c : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x00000000000b4c06 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b4c17 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000af738 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000191ea1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f0918 : shl byte ptr [rsi + 0xf], cl ; outsb dx, byte ptr [rsi] ; ret
0x0000000000198837 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000187778 : shl dword ptr [rax + 0x49], 0x39 ; retf
0x00000000001557fc : shl dword ptr [rcx], 1 ; retf 0xe281
0x00000000000be7d2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000000ac163 : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000d166b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x000000000004723f : shl dword ptr [rsi + 0xf], 0xc6 ; rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000d257d : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x00000000000b4c02 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000be64f : shl dword ptr [rsi + 0xf], 0xda ; ret
0x0000000000191f26 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000191fdd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191fc6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191faf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000190a6b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000039c39 : shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000191f41 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000af15c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000af958 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000191e01 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f9068 : shl dword ptr [rsi - 0x7f], 1 ; loope 0xf9073 ; add esi, esi ; ret 0xf04
0x00000000000fa6df : shl dword ptr [rsi - 0x7f], 1 ; loope 0xfa6ea ; add esi, esi ; ret 0xf04
0x000000000004576c : shl eax, 0x17 ; or esi, eax ; movd xmm0, esi ; ret
0x0000000000055ba8 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000012210f : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x0000000000158804 : shl eax, 4 ; cmp edi, 0x1a ; cmovae eax, r10d ; jmp 0x1587ac
0x0000000000046e9f : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000162cf5 : shl ecx, 3 ; sub rdx, rcx ; jmp 0x162d0e
0x00000000000594bc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000005943b : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000005940a : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004a63c : shl edi, 0x20 ; or rax, rdi ; ret
0x0000000000108888 : shl edi, 3 ; call 0x25335
0x00000000000594bb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000005943a : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000059409 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000046e9e : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000162cf4 : shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d0f
0x000000000004a63b : shl rdi, 0x20 ; or rax, rdi ; ret
0x0000000000108887 : shl rdi, 3 ; call 0x25336
0x000000000015830f : shr ah, 1 ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0x00000000000853ed : shr al, 0x2d ; ret
0x0000000000158a53 : shr al, 0x37 ; retf 0xffec
0x00000000001586b1 : shr al, 0x49 ; ret
0x0000000000114bfe : shr al, 0x8c ; ret
0x0000000000154b5f : shr al, 0xbb ; retf
0x00000000001588c3 : shr al, 0xc7 ; retf
0x0000000000158624 : shr al, 0xd6 ; ret
0x000000000015e3b2 : shr al, 0xd8 ; jo 0x15e3ab ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000012dda6 : shr al, 0xe4 ; retf 0xffff
0x00000000000e899a : shr al, 0xf0 ; retf 0xfff3
0x000000000013004a : shr ax, 0xe ; and eax, 1 ; ret
0x000000000002f710 : shr bl, 1 ; ret 0x1f0f
0x000000000019a1aa : shr bl, cl ; retf
0x00000000000ad81f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000012c5fa : shr byte ptr [rcx], 1 ; retf 0xeec1
0x000000000012c5be : shr byte ptr [rcx], 1 ; retf 0xefc1
0x00000000000327a8 : shr byte ptr [rcx], cl ; ret
0x00000000000afa9c : shr byte ptr [rcx], cl ; rol bl, 1 ; xor eax, eax ; ret
0x00000000000c070e : shr byte ptr [rdx + 1], cl ; lea r9, [rsp + 0x20] ; call rbx
0x000000000006b690 : shr cl, 0xb5 ; retf
0x00000000000d5473 : shr dword ptr [rbx + 7], 0 ; add byte ptr [rdi + rcx - 0x49], al ; retf
0x00000000000d99e7 : shr dword ptr [rcx], cl ; ret 0x8945
0x000000000012eb4b : shr dword ptr [rdx - 0x11], 1 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000132f6a : shr eax, 0x18 ; ret
0x0000000000044f2f : shr eax, 0x1f ; ret
0x0000000000192e6c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x192e7f ; xor eax, eax ; ret
0x000000000004b4f5 : shr eax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x000000000019613a : shr eax, 0x38 ; ret
0x000000000004527c : shr eax, 0x3f ; ret
0x0000000000106396 : shr eax, 0x44 ; retf 2
0x00000000001220bc : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000bf2eb : shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x000000000013004b : shr eax, 0xe ; and eax, 1 ; ret
0x00000000001588ca : shr eax, 1 ; mov edi, eax ; mov rbx, rax ; call 0x25339
0x00000000000d291b : shr eax, 2 ; ret
0x0000000000190573 : shr eax, 2 ; vzeroupper ; ret
0x000000000013fae2 : shr eax, 4 ; and eax, 0x7f ; ret
0x0000000000091086 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000091096 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000bf336 : shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x0000000000163f23 : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000125b7f : shr eax, cl ; and eax, 1 ; ret
0x0000000000122ad1 : shr eax, cl ; and eax, 3 ; ret
0x0000000000125dcd : shr eax, cl ; and r8d, 1 ; mov eax, r8d ; ret
0x000000000005e24a : shr eax, cl ; jb 0x5e253 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000015b9bf : shr eax, cl ; retf
0x00000000000a713d : shr ebx, 1 ; retf 0x3948
0x000000000012c63d : shr ecx, 0x1f ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000012c674 : shr ecx, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x0000000000162755 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009bbd1 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dfb : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000595cc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000059555 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000059524 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001493b2 : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000008de00 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000008df00 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00000000000595cb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000059554 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000059523 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000196139 : shr rax, 0x38 ; ret
0x000000000004527b : shr rax, 0x3f ; ret
0x00000000001220bb : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000d291a : shr rax, 2 ; ret
0x0000000000190572 : shr rax, 2 ; vzeroupper ; ret
0x000000000013fae1 : shr rax, 4 ; and eax, 0x7f ; ret
0x00000000001493b1 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000047240 : shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000047241 : shufps xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000018c645 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000125240 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x00000000001047f1 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x4be9
0x000000000004d23f : stc ; adc byte ptr [rbx - 0x6af069c4], cl ; ret 0x8941
0x000000000002e176 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000015ec10 : stc ; add al, 0xf ; xchg byte ptr [rax - 0x76ffffff], ah ; retf 0x894c
0x0000000000183057 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a4ea4 : stc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d4301 : stc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000107483 : stc ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x0000000000081a1b : stc ; add cl, byte ptr [rcx + 0x29] ; retf
0x0000000000196fa9 : stc ; add dword ptr [rcx - 0x77], ecx ; retf
0x0000000000110c64 : stc ; add dword ptr [rdi + 0x30], esi ; mov eax, 0x106 ; syscall
0x000000000013f568 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x000000000004d480 : stc ; dec dword ptr [rax - 0x77] ; fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000914c7 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000085a2c : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000c2093 : stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001082d4 : stc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000003578a : stc ; dec dword ptr [rdi] ; retf 0xd88
0x00000000000d669b : stc ; ja 0xd66b4 ; add bl, ch ; retf 0x8948
0x0000000000188672 : stc ; je 0x18863f ; lea r10, [r10 + r9] ; jmp r10
0x0000000000189d12 : stc ; je 0x189cdf ; lea r10, [r10 + r9] ; jmp r10
0x0000000000083f84 : stc ; jmp rcx
0x00000000000abafb : stc ; jne 0xabadb ; ret
0x000000000018e12f : stc ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000016bb68 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000db46d : stc ; movsxd rdx, dword ptr [r9 + rdi*4] ; add rdx, r9 ; jmp rdx
0x00000000000a7580 : stc ; or al, 0x74 ; and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x0000000000168917 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007f893 : stc ; pop rbx ; cli ; dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x0000000000059615 : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009e783 : stc ; ret
0x00000000000a2323 : stc ; sbb al, 0xf ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000162cf3 : stc ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d10
0x0000000000125b7e : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000085a2b : stc ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000065b2e : stc ; sti ; dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x0000000000193458 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018c67f : stc ; vzeroupper ; ret
0x0000000000188367 : stc ; xlatb ; ret 0xff2d
0x00000000001300b2 : std ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010fe4c : std ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000001999ff : std ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000048bf6 : std ; add r15, r12 ; call rax
0x00000000000fca13 : std ; add rdx, rsi ; jmp rdx
0x0000000000055cb5 : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147412 : std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000004c25a : std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000004a4f1 : std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000450e1 : std ; fstp st(1) ; ret
0x0000000000187ea0 : std ; je 0x187f09 ; and ch, al ; std ; xlatb ; ret
0x0000000000187f8e : std ; je 0x187ff7 ; and ch, al ; std ; xlatb ; ret
0x00000000000332fc : std ; je 0x3331c ; pop rbx ; ret
0x000000000018e10b : std ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000018c667 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x0000000000111d97 : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000016b38b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a1995 : std ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088a0d : std ; push rbx ; mov rbx, rsi ; call 0x25427
0x00000000000bed3c : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000014807f : std ; retf
0x000000000012523f : std ; sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000034fdb : std ; test rax, rax ; je 0x34fe9 ; call rax
0x000000000018c66b : std ; vzeroupper ; ret
0x0000000000187cb1 : std ; xlatb ; ret
0x0000000000187ca9 : std ; xlatb ; ret 0xc085
0x00000000001881a7 : std ; xlatb ; ret 0xe883
0x0000000000187163 : std ; xlatb ; retf
0x000000000018718b : std ; xlatb ; retf 0xc985
0x000000000018b9f8 : std ; xlatb ; retf 0xfdc5
0x000000000018ba54 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000018ca06 : std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000009baa8 : sti ; adc dword ptr [rax], eax ; call 0x984f5
0x00000000000d447e : sti ; add al, byte ptr [rcx] ; ret
0x000000000002c2f1 : sti ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3775
0x00000000000eb64c : sti ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000010cdc9 : sti ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000010cc31 : sti ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000004794d : sti ; add r15, qword ptr [rsp] ; mov rsi, r15 ; call r14
0x00000000000d6468 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000015fa17 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000659be : sti ; dec dword ptr [rax - 0x77] ; ret 0x12eb
0x0000000000065b2f : sti ; dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x00000000000e5cb7 : sti ; dec dword ptr [rcx + 0x22b8c7] ; add byte ptr [rax], al ; syscall
0x000000000019a1a5 : sti ; je 0x19a160 ; xor r10d, r10d ; jmp 0x19a17f
0x000000000016b768 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000005540c : sti ; mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000122132 : sti ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x0000000000036935 : sti ; or al, 0x74 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000993e1 : sti ; or dl, byte ptr [rip + 0x10894800] ; ret
0x0000000000137bdd : sti ; or dword ptr [rcx + 0xf], eax ; retf
0x0000000000045c1c : sti ; push rax ; ret
0x0000000000124c61 : sti ; push rsi ; or al, 0 ; pop rbx ; ret
0x00000000000525f2 : sti ; ret 0xffbf
0x00000000000f8851 : sti ; retf 0xfff2
0x00000000000ab6a2 : sti ; retf 0xffff
0x00000000000ecde2 : sti ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x0000000000055d2f : sti ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d3314 : stosb byte ptr [rdi], al ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000001442e2 : stosb byte ptr [rdi], al ; adc esi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f8072 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000000e82fa : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x00000000001999c7 : stosb byte ptr [rdi], al ; idiv bh ; dec dword ptr [rbp - 0x76b63fb6] ; ret 0xd349
0x0000000000055d12 : stosb byte ptr [rdi], al ; jbe 0x55d34 ; add al, ch ; cmc ; retf 0xa
0x00000000000bf138 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000155093 : stosb byte ptr [rdi], al ; or dword ptr [rax], eax ; syscall
0x0000000000096f52 : stosb byte ptr [rdi], al ; out 0xf8, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000128bb2 : stosb byte ptr [rdi], al ; pop rsi ; or al, 0 ; syscall
0x00000000000d6841 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c07f2 : stosb byte ptr [rdi], al ; xchg byte ptr [rdx], dl ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001441a1 : stosd dword ptr [rdi], eax ; adc esi, ebp ; dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x00000000000af7f1 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000ce91a : stosd dword ptr [rdi], eax ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001090bf : stosd dword ptr [rdi], eax ; or al, byte ptr [rax] ; call 0x25355
0x0000000000154f53 : stosd dword ptr [rdi], eax ; or dword ptr [rax], eax ; syscall
0x0000000000049501 : stosd dword ptr [rdi], eax ; or dword ptr [rdx], ebx ; add byte ptr [rax + 1], cl ; retf
0x000000000009bbd6 : stosd dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000046e00 : stosd dword ptr [rdi], eax ; ret
0x000000000009bbd5 : stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dff : stosq qword ptr [rdi], rax ; ret
0x00000000000c9a1f : str word ptr [rax + 0x21] ; ret 0x8948
0x00000000000d4285 : str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000f1a07 : str word ptr [rax + 0x63] ; retf 0x25eb
0x00000000000a3633 : str word ptr [rax + 0xf] ; ret 0x66c3
0x00000000000a2325 : str word ptr [rax + 0xf] ; ret 0xfc3
0x00000000000c9af2 : str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000045334 : str word ptr [rax - 0x7b] ; ret 0x574
0x0000000000054efe : str word ptr [rcx] ; ret 0x8f74
0x0000000000083202 : sub ah, byte ptr [rcx] ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x00000000000e88d4 : sub ah, cl ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25359
0x00000000000f788e : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x8b48
0x000000000012375a : sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a5dea : sub al, 0x24 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000062a25 : sub al, 0x29 ; ret 0x8341
0x00000000001052b4 : sub al, 0x39 ; retf 0x57d
0x00000000000d2202 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000014c8f5 : sub al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000028ff2 : sub al, 0x58 ; ret
0x00000000000290ee : sub al, 0x5c ; ret 0xffff
0x0000000000149b34 : sub al, 0x5d ; or al, byte ptr [rax] ; syscall
0x000000000018f106 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000d2205 : sub al, 0x75 ; pop rax ; ret
0x000000000018faf3 : sub al, 0x83 ; ret 0x8104
0x0000000000029620 : sub al, 0x97 ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x00000000001915f3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011b87e : sub al, 0xd ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000272d7 : sub al, 0xec ; sbb byte ptr [rax], al ; ret
0x0000000000123115 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000130c53 : sub al, 6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a47dd : sub al, bl ; ret
0x000000000004460a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000001233d1 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000143986 : sub al, byte ptr [rdi] ; add al, ch ; ret 0xef40
0x0000000000130dd3 : sub al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000010e3f5 : sub al, ch ; cmc ; retf
0x0000000000188505 : sub al, ch ; std ; xlatb ; ret
0x000000000011b7e6 : sub ax, 0xd ; syscall
0x0000000000110c0d : sub bh, byte ptr [rax + 0x103] ; syscall
0x000000000011662d : sub bh, byte ptr [rax + 0x48] ; syscall
0x000000000013019d : sub bh, byte ptr [rax + 0xe3] ; syscall
0x00000000000d21f6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001053f3 : sub byte ptr [r13 - 0x7ccc8b40], al ; ret 0x4c01
0x0000000000076e32 : sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x000000000015ab15 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015a7dc : sub byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r15], r9b ; retf 0x8348
0x000000000015a6f2 : sub byte ptr [r8 - 0x77], r9b ; ja 0x15a719 ; mov eax, r8d ; ret
0x00000000000c0bf2 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000005ea55 : sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x0000000000097fcf : sub byte ptr [rax + 0x23], bh ; syscall
0x000000000004dcb2 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000002b97b : sub byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000ef9f0 : sub byte ptr [rax + 0x63], cl ; ret
0x000000000015ab26 : sub byte ptr [rax + 1], bh ; ret
0x000000000014cdad : sub byte ptr [rax + 1], cl ; ret 0x5d89
0x0000000000040069 : sub byte ptr [rax + rax], cl ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000015ab16 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000910be : sub byte ptr [rax - 0x3f76bbfe], cl ; ret
0x00000000000910bd : sub byte ptr [rax - 0x3f76bbfe], r9b ; ret
0x00000000000e1dce : sub byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000011da4f : sub byte ptr [rax - 0x75], cl ; jge 0x11da59 ; call rbx
0x00000000000dbe48 : sub byte ptr [rax - 0x75], cl ; jl 0xdbe79 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000015a7dd : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r15], r9b ; retf 0x8348
0x000000000011bee4 : sub byte ptr [rax - 0x76b3000c], dl ; loopne 0x11bf36 ; pop rsp ; ret
0x000000000015a6f3 : sub byte ptr [rax - 0x77], cl ; ja 0x15a718 ; mov eax, r8d ; ret
0x000000000004a4f5 : sub byte ptr [rax - 0x77], cl ; ret
0x000000000011b018 : sub byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000084e6c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000a53a3 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x00000000000da201 : sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000000894a3 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x00000000000c0bf3 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001510e1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116248 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000027095 : sub byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e0564 : sub byte ptr [rbp + 0x5b2b74c0], al ; pop rbp ; pop r12 ; ret
0x00000000000d21fa : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000d21f9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001053f4 : sub byte ptr [rbp - 0x7ccc8b40], al ; ret 0x4c01
0x00000000001556d7 : sub byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000045ab5 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000066ad1 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005e14f : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000162d18 : sub byte ptr [rbx - 0x1b], dh ; mov eax, 1 ; ret
0x0000000000162d17 : sub byte ptr [rbx - 0x1b], sil ; mov eax, 1 ; ret
0x000000000003b964 : sub byte ptr [rbx - 0x76b70002], bl ; ret 0xf748
0x00000000000d21f7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000011510c : sub byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xe9 ; retf 0xfffe
0x000000000005ea56 : sub byte ptr [rcx + rcx*4 + 4], cl ; ret 0x8b4c
0x0000000000150522 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rcx
0x000000000009eec4 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000008772a : sub byte ptr [rcx + rcx*4 - 0x1e], al ; pop rbx ; pop r12 ; jmp rax
0x0000000000155e9b : sub byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000008dc60 : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x000000000006581d : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000008497a : sub byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000002cb3b : sub byte ptr [rcx - 0x77], cl ; ret
0x00000000000bfcd4 : sub byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000014bff5 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r12 ; call qword ptr [rbx]
0x00000000001178c7 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000076e33 : sub byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000000000d7367 : sub byte ptr [rdi + rcx*4 + 2], bl ; jbe 0xd7376 ; ret
0x00000000000da1fc : sub byte ptr [rdi + rcx*4 - 0x3e], bl ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000014c524 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015a8fc : sub byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; ret
0x00000000000ed33f : sub byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014b891 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000001222ab : sub byte ptr [rdi], cl ; sub dword ptr [rsp + 0x10], eax ; syscall
0x000000000004a90c : sub byte ptr [rdx], bl ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000454b6 : sub cl, al ; ret
0x000000000010f885 : sub cl, byte ptr [rax + 0x63] ; ret 0xc283
0x0000000000091c7b : sub cl, byte ptr [rax + 1] ; ret 0x4866
0x00000000000f4bef : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c080a : sub cl, ch ; mov esi, 0xe8fffffe ; retf
0x00000000000c6998 : sub cl, ch ; retf 0xfff0
0x000000000009b417 : sub cl, ch ; retf 0xfffd
0x0000000000077681 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d2aa7 : sub dh, ch ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000126362 : sub dh, cl ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000874d8 : sub dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000130206 : sub dword ptr [rax + 0xe6], edi ; syscall
0x00000000000ed33d : sub dword ptr [rax + rbp + 0xf], esi ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000080839 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001239d5 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000d4e83 : sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000000d50a9 : sub dword ptr [rax], eax ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000019bf36 : sub dword ptr [rbx + 0x515a22d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000e100b : sub dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017baa3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000015a3d6 : sub dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x00000000000bfa5a : sub dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000bf9f4 : sub dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000169914 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169910 : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000008dd00 : sub dword ptr [rdi], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006618a : sub dword ptr [rdi], 1 ; ret
0x00000000001699be : sub dword ptr [rdi], esp ; jmp r9
0x0000000000192c49 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000049ca5 : sub dword ptr [rdx], ebx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009bf0c : sub dword ptr [rip + 0x14ec6d], 1 ; pop rbp ; ret
0x000000000009d12f : sub dword ptr [rip + 0x150a1a], 1 ; pop rbx ; ret
0x0000000000097d47 : sub dword ptr [rip + 0x155792], 1 ; pop rbx ; ret
0x0000000000096a9c : sub dword ptr [rip + 0x1569fd], 1 ; ret
0x0000000000094190 : sub dword ptr [rip + 0x159309], 1 ; ret
0x0000000000086fdc : sub dword ptr [rip + 0x16647d], 1 ; ret
0x000000000005546b : sub dword ptr [rip + 0x197d6e], 1 ; pop rbx ; ret
0x000000000004a909 : sub dword ptr [rip + 0x1a28b0], 1 ; pop rbp ; ret
0x000000000019bf37 : sub dword ptr [rip + 0x515a2], 1 ; pop rbx ; ret
0x000000000019c248 : sub dword ptr [rip + 0x52fc9], 1 ; pop rbp ; ret
0x0000000000145678 : sub dword ptr [rip + 0xaa099], 1 ; pop rbp ; ret
0x000000000011ae2c : sub dword ptr [rip + 0xd371d], 1 ; ret
0x00000000000a39d3 : sub dword ptr [rip + 0xf48000d], eax ; ret 0xfc3
0x0000000000182427 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x0000000000191dd6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001822e1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000014ce23 : sub dword ptr [rsi + rbp*8 + 0x158d48ff], ebp ; retf 0x706
0x00000000001222ad : sub dword ptr [rsp + 0x10], eax ; syscall
0x000000000010fbd7 : sub dword ptr [rsp + 0xa0], eax ; syscall
0x00000000000463a1 : sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000188297 : sub eax, -1 ; jne 0x1882a8 ; vzeroupper ; ret
0x000000000018f247 : sub eax, -1 ; jne 0x18f258 ; vzeroupper ; ret
0x000000000009f452 : sub eax, 0x10 ; ret
0x0000000000160086 : sub eax, 0x1000903 ; add rsp, 8 ; ret
0x00000000000e100a : sub eax, 0x1046b83 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e63a5 : sub eax, 0x35 ; retf 4
0x00000000000a19d0 : sub eax, 0x487b8b48 ; mov rsi, r14 ; call rax
0x000000000012ef42 : sub eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000004564d : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000187f2f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x0000000000047406 : sub eax, 0xd089001a ; ret
0x000000000003330c : sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x0000000000058cdf : sub eax, 1 ; ret
0x0000000000097fec : sub eax, 2 ; mov eax, r8d ; ret
0x00000000000bf97e : sub eax, dword ptr [r8 + r9*4] ; je 0xbf966 ; ret
0x00000000000bf97f : sub eax, dword ptr [rax + rcx*4] ; je 0xbf965 ; ret
0x0000000000123301 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000037ce3 : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077631 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000bf920 : sub eax, dword ptr [rcx + r8*4] ; je 0xbf90e ; ret
0x00000000000bf921 : sub eax, dword ptr [rcx + rax*4] ; je 0xbf90d ; ret
0x00000000000888e4 : sub eax, dword ptr [rcx - 0x7f] ; in eax, 0 ; add byte ptr [rax], 0 ; jne 0x888b9 ; jmp 0x8888c
0x0000000000123e0e : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000123dc4 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000097042 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000008feed : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000008fdbd : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000008b689 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008feda : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008fdaa : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000011dc47 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000096707 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000130d13 : sub eax, dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000015387d : sub eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aed3 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000a67dc : sub eax, ebp ; add rdx, rax ; jmp 0xa6794
0x00000000000a6e5b : sub eax, ecx ; add r10, rax ; jmp 0xa6e14
0x00000000000a898d : sub eax, ecx ; add r10, rax ; jmp 0xa8944
0x00000000000a9a2d : sub eax, ecx ; add r10, rax ; jmp 0xa99e4
0x00000000000f3fbb : sub eax, ecx ; add rdx, rax ; jmp 0xf3f54
0x00000000001882e3 : sub eax, ecx ; je 0x1882f9 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000005ad05 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000ad55c : sub eax, ecx ; ret
0x0000000000095bc9 : sub eax, ecx ; sub eax, 1 ; ret
0x00000000001873df : sub eax, ecx ; vzeroupper ; ret
0x00000000000b4f29 : sub eax, edi ; ret
0x00000000000d2a2e : sub eax, edi ; shr rax, 2 ; ret
0x000000000008e7bc : sub eax, edx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000926f1 : sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000014c5a8 : sub eax, edx ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000004a609 : sub eax, edx ; ret
0x0000000000044f1a : sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000045633 : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000045279 : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000190570 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x00000000001870e2 : sub eax, edx ; vzeroupper ; ret
0x00000000000e181b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063fe7 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000e0568 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013f7b6 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000cd06b : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046df8 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000004acd6 : sub ecx, 1 ; jns 0x4aca0 ; xor eax, eax ; ret
0x0000000000059c42 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ba921 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001083e0 : sub ecx, dword ptr [rbx - 0x76b7ef90] ; ret 0x8b48
0x000000000018bf24 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000008ae99 : sub ecx, eax ; sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000010b6df : sub ecx, ebp ; ret
0x0000000000162cf2 : sub ecx, edi ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d11
0x0000000000044ecf : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000d252c : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000001166bc : sub edi, dword ptr [rax + 0x48] ; syscall
0x000000000013dc03 : sub edi, dword ptr [rax + 3] ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000011539a : sub edi, dword ptr [rax - 1] ; jmp 0x115374
0x000000000009a333 : sub edi, edi ; adc al, 0 ; call 0x1165c6
0x0000000000149441 : sub edx, 1 ; jne 0x1493cd ; ret
0x0000000000096738 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000096729 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008af42 : sub edx, dword ptr [rcx + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000008af54 : sub edx, dword ptr [rcx + 8] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000000af374 : sub edx, eax ; jbe 0xaf3b7 ; add rax, rdi ; ret
0x00000000000af384 : sub edx, eax ; jbe 0xaf3b9 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af394 : sub edx, eax ; jbe 0xaf3b9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af3a4 : sub edx, eax ; jbe 0xaf3b9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d1564 : sub edx, eax ; jbe 0xd15a7 ; add rax, rdi ; ret
0x00000000000d1574 : sub edx, eax ; jbe 0xd15a9 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000d1584 : sub edx, eax ; jbe 0xd15a9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000d1594 : sub edx, eax ; jbe 0xd15a9 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000117498 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000162cf9 : sub edx, ecx ; jmp 0x162d0a
0x000000000018c5d9 : sub edx, ecx ; jmp 0x18c57a
0x000000000018ccf9 : sub edx, ecx ; jmp 0x18cc9a
0x000000000018d379 : sub edx, ecx ; jmp 0x18d31a
0x000000000018d7c9 : sub edx, ecx ; jmp 0x18d75a
0x000000000018e069 : sub edx, ecx ; jmp 0x18e00a
0x000000000018e4e9 : sub edx, ecx ; jmp 0x18e46f
0x0000000000186d58 : sub edx, esi ; cmp edx, ecx ; jle 0x186d7d ; movsxd rax, ecx ; ret
0x0000000000091c4d : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbp ; call rax
0x000000000013f531 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000e8901 : sub esi, 1 ; mov rdi, qword ptr [rbx + r14*8] ; call 0x25359
0x000000000011c296 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004b5ee : sub esi, edi ; syscall
0x0000000000154db8 : sub esp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x0000000000110d68 : sub esp, -0x80 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000122137 : sub esp, 8 ; call rsi
0x000000000019c247 : sub qword ptr [rip + 0x52fc9], 1 ; pop rbp ; ret
0x0000000000145677 : sub qword ptr [rip + 0xaa099], 1 ; pop rbp ; ret
0x0000000000097feb : sub r8d, 2 ; mov eax, r8d ; ret
0x000000000014c5a7 : sub r8d, edx ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000009f451 : sub rax, 0x10 ; ret
0x00000000000bea23 : sub rax, 1 ; ret
0x0000000000097041 : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008feec : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008fdbc : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000008b688 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008fed9 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008fda9 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a6e5a : sub rax, r9 ; add r10, rax ; jmp 0xa6e15
0x00000000000a898c : sub rax, r9 ; add r10, rax ; jmp 0xa8945
0x00000000000a9a2c : sub rax, r9 ; add r10, rax ; jmp 0xa99e5
0x00000000000a67db : sub rax, rbp ; add rdx, rax ; jmp 0xa6795
0x00000000000f3fba : sub rax, rcx ; add rdx, rax ; jmp 0xf3f55
0x0000000000095bc8 : sub rax, rcx ; sub eax, 1 ; ret
0x00000000000b4f28 : sub rax, rdi ; ret
0x00000000000d2a2d : sub rax, rdi ; shr rax, 2 ; ret
0x000000000008e7bb : sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000926f0 : sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004a61c : sub rax, rdx ; ret
0x0000000000045278 : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000018bbff : sub rax, rdx ; vzeroupper ; ret
0x0000000000162cf1 : sub rcx, rdi ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d12
0x00000000000d252b : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000149440 : sub rdx, 1 ; jne 0x1493ce ; ret
0x00000000000af373 : sub rdx, rax ; jbe 0xaf3b8 ; add rax, rdi ; ret
0x00000000000d1563 : sub rdx, rax ; jbe 0xd15a8 ; add rax, rdi ; ret
0x0000000000162cf8 : sub rdx, rcx ; jmp 0x162d0b
0x000000000004b5ed : sub rsi, rdi ; syscall
0x0000000000154db7 : sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x0000000000110d67 : sub rsp, -0x80 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000122136 : sub rsp, 8 ; call rsi
0x0000000000045367 : subps xmm0, xmm1 ; ret
0x00000000000456cf : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000045366 : subsd xmm0, xmm1 ; ret
0x00000000000456ce : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000002588d : syscall
0x000000000004fb07 : test ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a8157 : test ah, bh ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000fb34f : test ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000e6aff : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000199c17 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000010543f : test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1874
0x000000000004ccdf : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001859c8 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001868c8 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001857e8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e6907 : test ah, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001866e8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x000000000007c3d1 : test al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004918b : test al, 0 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000150393 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000015676b : test al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x00000000000e1518 : test al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000035954 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000118965 : test al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011d2e1 : test al, 0x45 ; mov edi, ebp ; call rax
0x000000000013105f : test al, 0x48 ; mov eax, edi ; ret
0x000000000004d2e1 : test al, 0x89 ; ret 0x8341
0x000000000012bfc9 : test al, 0x89 ; ret 0xc031
0x0000000000119564 : test al, 0xbe ; lock dec dword ptr [rax + 1] ; ret
0x00000000000f87f3 : test al, 0xe8 ; push rdi ; retf
0x00000000000d27d9 : test al, 0xf0 ; jne 0xd2838 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d27d8 : test al, 0xf0 ; jne 0xd2839 ; lea rax, [rdi - 0x10] ; ret
0x0000000000186e69 : test al, 2 ; add byte ptr [rax + 0x63], cl ; ret 0x8348
0x000000000005e5bc : test al, 3 ; add byte ptr [rax], al ; mov rsp, rdx ; ret
0x00000000000b383c : test al, ah ; or eax, 0x894d0000 ; retf
0x00000000001763dc : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000142385 : test al, al ; jne 0x142374 ; mov eax, r10d ; ret
0x00000000000ad81a : test al, al ; jne 0xad808 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000bf707 : test al, al ; jne 0xbf5ce ; jmp 0xbf6e5
0x00000000000eb101 : test al, al ; jne 0xeb0b7 ; xor eax, eax ; ret
0x0000000000176cdc : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b2a5c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019c8f6 : test al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b314c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000085933 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000033bd1 : test bh, bh ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000016458c : test bh, bh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000746b1 : test bh, bh ; ret
0x000000000012de4c : test bh, bl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x0000000000199a19 : test bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000086e24 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a6170 : test bh, dl ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc019
0x0000000000057830 : test bl, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbf41
0x000000000003729a : test byte ptr [rax + 0x200], bh ; ret
0x0000000000186e68 : test byte ptr [rax + 0x63480002], ch ; ret 0x8348
0x00000000000fff64 : test byte ptr [rax + 0x63], 4 ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000000e7962 : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000004bfb6 : test byte ptr [rax + 0xf], 0x44 ; ret 0x13eb
0x00000000000f3abe : test byte ptr [rax + 1], 0xc2 ; jmp 0xf3ad4
0x0000000000162a37 : test byte ptr [rax + rax - 0x7cb70000], dl ; ret
0x0000000000142972 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000563ef : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000056c96 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfde9
0x000000000008f293 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000185438 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x0000000000110883 : test byte ptr [rax + rbx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x0000000000079fde : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000001128b8 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000142f5c : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000137cf2 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000009beae : test byte ptr [rax - 0x77], 0xef ; call 0x98106
0x000000000015aaa1 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000011057a : test byte ptr [rax - 0x77], 0xef ; call rax
0x00000000001105ab : test byte ptr [rax - 0x77], 0xef ; mov eax, 0x135 ; syscall
0x000000000003c009 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017739c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019bffa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000ba02a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000017bc6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000017bcaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb08a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000bc49a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000009fb4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000000bb049 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000000461ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018d0ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000049aaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d285a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000110685 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000177c9c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000176a9c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014bff4 : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rbx]
0x00000000000c7985 : test byte ptr [rax], cl ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8548
0x00000000000b35ec : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000290d9 : test byte ptr [rbp + 0x31], 0xff ; call 0x25356
0x000000000012c7a4 : test byte ptr [rbp + 0xf], 0x44 ; retf
0x000000000002d941 : test byte ptr [rbp + rax], al ; add bh, dh ; ret 0
0x0000000000185f68 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ea8c4 : test byte ptr [rbp - 0x17fffffb], dh ; ret 0xf3ab
0x000000000007ebd9 : test byte ptr [rbp - 0x7c000012], dh ; ret
0x000000000013d3ee : test byte ptr [rbp - 0x7d000000], cl ; ret 0x8103
0x000000000012ef4e : test byte ptr [rbx + 0x1c], 0x20 ; je 0x12ef67 ; pop rbx ; ret
0x00000000000a1a97 : test byte ptr [rbx + 0x50], 1 ; jne 0xa1a79 ; mov rdi, rsi ; call rax
0x0000000000186148 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006f458 : test byte ptr [rbx - 0x76befb8d], cl ; retf 0xb841
0x0000000000143ff8 : test byte ptr [rbx - 0x7d000000], ah ; ret 0x4801
0x0000000000146858 : test byte ptr [rbx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a5760 : test byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000164558 : test byte ptr [rbx], dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000448ea : test byte ptr [rcx + 0x48000003], dh ; add edx, ecx ; jmp 0x44908
0x0000000000132f0d : test byte ptr [rcx + 0xff009f8], 0xc8 ; ret
0x000000000010c280 : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000000a2f94 : test byte ptr [rcx + rax - 0x7cb80000], dh ; ret 0xe901
0x0000000000080837 : test byte ptr [rcx + rbp - 0x7cb80000], dh ; ret
0x0000000000186328 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x000000000004a2e7 : test byte ptr [rcx + rcx*4 - 0x31], 0x41 ; call rax
0x0000000000147efd : test byte ptr [rcx + rcx*4 - 1], 0xe8 ; retf 0xfff7
0x00000000000c6673 : test byte ptr [rcx - 0x41], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x00000000000fca30 : test byte ptr [rcx - 0x73], 0x47 ; add dword ptr [rax - 0x7f], ecx ; retf 0
0x0000000000181736 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ff99a : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x0000000000168ed6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182516 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e6426 : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000001681e6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a4a04 : test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000182426 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000167f06 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d59cf : test byte ptr [rcx], dl ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x0000000000186508 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x000000000004ce4e : test byte ptr [rdi], 0x84 ; ret
0x00000000000cbdce : test byte ptr [rdi], 0x84 ; retf
0x000000000010f02c : test byte ptr [rdi], 0x84 ; retf 2
0x00000000001406d6 : test byte ptr [rdi], 0x85 ; ret
0x000000000007eb38 : test byte ptr [rdi], 0x85 ; retf 0xffed
0x00000000000e949e : test byte ptr [rdi], 0x94 ; ret
0x00000000000fd4fd : test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000e607b : test byte ptr [rdi], 0x94 ; ret 0x854d
0x000000000009f422 : test byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000068932 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000008fe26 : test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008fe36 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000ba9c8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000000fce64 : test byte ptr [rdi], bh ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8341
0x00000000000f4bc4 : test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011cedc : test byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000000f1a06 : test byte ptr [rdi], cl ; add byte ptr [rax + 0x63], cl ; retf 0x25eb
0x0000000000037228 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000f2f35 : test byte ptr [rdx + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000000a364f : test byte ptr [rdx + 0xcd], 1 ; je 0xa361e ; ret
0x00000000000bff5f : test byte ptr [rdx + 0xcd], 1 ; je 0xbff2e ; ret
0x0000000000185258 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012bae1 : test byte ptr [rdx - 0x7d000000], ch ; ret 0x8801
0x00000000000a7614 : test byte ptr [rdx], 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000a762d : test byte ptr [rdx], bh ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x0000000000198d51 : test byte ptr [rdx], bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x0000000000068769 : test byte ptr [rdx], bl ; sbb eax, 0x83480000 ; ret 0x3c01
0x000000000011aee3 : test byte ptr [rdx], cl ; add al, byte ptr [rax] ; add bh, dh ; ret
0x00000000000d7591 : test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000b4fcd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000e34a1 : test byte ptr [rsi + rdi*8 + 0x3d80ffff], ah ; retf
0x0000000000185608 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x00000000000865f8 : test byte ptr [rsi - 0x74fffffe], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000a6f61 : test byte ptr [rsi], bh ; sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4a1c : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018a34e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a04e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000018b24e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a94e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018ac4e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007271e : test byte ptr [rsi], cl ; add eax, 0x83480000 ; ret
0x0000000000185078 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a8f9c : test byte ptr [rsp], dh ; add bh, dh ; ret
0x00000000001999fe : test ch, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000019729e : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000093516 : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000004db87 : test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000184edb : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000051333 : test cl, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000183056 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000abafa : test cl, bh ; jne 0xabadc ; ret
0x0000000000168916 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182e76 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000168636 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000adb86 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ade86 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aed86 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182f66 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aea86 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000000ae786 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ae486 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000169046 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182d86 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aba9c : test cl, cl ; je 0xabab0 ; cmp ecx, esi ; jne 0xaba98 ; ret
0x000000000013105c : test cl, cl ; jne 0x13100f ; mov rax, rdi ; ret
0x00000000000be6af : test cl, cl ; jne 0xbe6a4 ; ret
0x00000000000be75f : test cl, cl ; jne 0xbe754 ; ret
0x00000000000bea1f : test cl, cl ; jne 0xbea18 ; sub rax, 1 ; ret
0x00000000000f8a9d : test dh, bh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x0000000000029884 : test dh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001982b5 : test dh, bh ; add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x43], cl ; ret 0x8349
0x00000000000ab7ed : test dh, dh ; jne 0xab7e7 ; mov qword ptr [rdx], rcx ; ret
0x00000000000f8afd : test dh, dl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000001940e4 : test dl, 0x40 ; jne 0x1940a9 ; lea rax, [rdi + 7] ; ret
0x0000000000194112 : test dl, 4 ; jne 0x1940a9 ; lea rax, [rdi + 3] ; ret
0x000000000007ce71 : test dl, bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000013c779 : test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000085a32 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ab9be : test dl, cl ; jne 0xab9a7 ; mov rax, r8 ; ret
0x000000000004436b : test dl, dl ; jne 0x4434c ; ret
0x00000000000be8cf : test dl, dl ; jne 0xbe8c8 ; lea rax, [rcx - 1] ; ret
0x000000000011de8c : test dword ptr [rax + 0x49000002], ecx ; mov edi, dword ptr [rdi] ; call rbx
0x000000000011df40 : test dword ptr [rax + 0x49000002], esi ; mov edi, dword ptr [rdi] ; call rbx
0x000000000018d973 : test dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018e683 : test dword ptr [rax + 2], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000bacfb : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000bc24b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000bc14b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000af9e8 : test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x00000000000a19b5 : test dword ptr [rax + rax], edx ; call qword ptr [rax]
0x000000000006d05a : test dword ptr [rax - 0x16000005], edx ; pop rbx ; retf
0x000000000011d2dd : test dword ptr [rax - 0x75], 0x8945a845 ; out dx, eax ; call rax
0x000000000010db7a : test dword ptr [rax - 0x77], 0xe808245c ; retf
0x00000000000fd4f7 : test dword ptr [rax - 0x7ab2000e], eax ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000f4c95 : test dword ptr [rax], 0x89480000 ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000086e25 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000000f7fcb : test dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000d7f58 : test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000007d4ba : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000110bac : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000077edf : test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x0000000000119735 : test dword ptr [rax], ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000010b4c3 : test dword ptr [rax], ecx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007804d : test dword ptr [rax], edx ; idiv edi ; inc dword ptr [rcx] ; ret
0x0000000000038541 : test dword ptr [rax], esi ; add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x000000000013e853 : test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a07e0 : test dword ptr [rbp + 0x48000000], ebp ; add esp, 0x18 ; ret
0x000000000011db56 : test dword ptr [rbp + 0x49000000], esp ; mov edi, dword ptr [rbp] ; call rbx
0x000000000011dc16 : test dword ptr [rbp + 0x49000002], esi ; mov edi, dword ptr [rsi] ; call rbx
0x00000000000d7f57 : test dword ptr [rbp - 0x76b80000], eax ; ret 0x8548
0x000000000005a9b3 : test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x00000000000af2f8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000111181 : test dword ptr [rbx + 0x48000000], esi ; add esp, 0x78 ; ret
0x00000000000d2110 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000d26c8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000017bb88 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000017bb68 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000017ba80 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000bc340 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000001918d7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191d26 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e9829 : test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000001884f8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000011dc46 : test dword ptr [rbx], ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000111777 : test dword ptr [rcx + 0x48000000], ebx ; add esp, 0x68 ; ret
0x000000000011dc76 : test dword ptr [rcx + 0x49000001], esp ; mov edi, dword ptr [rsi] ; call rbx
0x000000000011de05 : test dword ptr [rcx + 4], ebx ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000017b88a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001918ad : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ba8e2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001917bd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001916cd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d2157 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000195f97 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000d2127 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000017bc2a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000187f3a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x000000000011dd27 : test dword ptr [rdi + 3], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000163ef7 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000baa47 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000baa27 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x000000000013dd2e : test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rbp - 0x77] ; ret
0x000000000002b279 : test dword ptr [rdi], 0x33486 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000141714 : test dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000011dbb6 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000046f3a : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000099f68 : test dword ptr [rdi], ecx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000011dbe6 : test dword ptr [rdi], edi ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000000e7171 : test dword ptr [rdi], edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000010e53c : test dword ptr [rdi], esi ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000a1aaf : test dword ptr [rdx + 0x5bfff84c], edi ; pop rbp ; pop r12 ; ret
0x000000000018da51 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018e4b9 : test dword ptr [rdx + 4], eax ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000babe1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000011de32 : test dword ptr [rdx + 6], edx ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000000bc029 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000192c22 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001915f2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b0e7 : test dword ptr [rdx + rdi*8 + 0x1ffff], esi ; add byte ptr [rax], al ; jmp rax
0x00000000000f8071 : test dword ptr [rdx - 0x9ffffff], ebp ; ret 0x7420
0x000000000017bb47 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000013e421 : test dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x000000000005e079 : test dword ptr [rip + 0x3d8d4800], edx ; lodsd eax, dword ptr [rsi] ; ret 0x15
0x000000000011db26 : test dword ptr [rip + 0x49000001], esi ; mov edi, dword ptr [rbp] ; call rbx
0x000000000011deb9 : test dword ptr [rip + 0x49000007], edx ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000187f2e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x000000000018ba23 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000004ccfd : test dword ptr [rsi + 0x31000000], ebp ; div bh ; ret 0
0x00000000000d276d : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x0000000000195922 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e785 : test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000baa05 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000ba9e5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000ba8fd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000bf70a : test dword ptr [rsi - 0x14000002], esi ; retf
0x00000000000d70d5 : test dword ptr [rsi - 0x76000003], eax ; retf 0x8348
0x00000000001018f5 : test dword ptr [rsi], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8eb
0x000000000006a376 : test dword ptr [rsi], edx ; retf 0xffff
0x0000000000191af8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000000a35e3 : test eax, 0x480000ba ; cmove eax, edx ; ret
0x00000000000a2883 : test eax, 0x48000126 ; cmove eax, edx ; ret
0x00000000000a3a73 : test eax, 0x48000d04 ; cmovne eax, edx ; ret
0x000000000016ea76 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000045704 : test eax, 0x7fffff ; je 0x45717 ; ret
0x000000000012e609 : test eax, 0x89480008 ; ret 0x57e9
0x000000000012aab3 : test eax, 0x8948ffef ; ret
0x00000000000eaaf6 : test eax, 0x8948fff3 ; ret
0x000000000011ff93 : test eax, eax ; cmove eax, edx ; ret
0x000000000011749a : test eax, eax ; cmovns eax, edx ; ret
0x000000000004a6ad : test eax, eax ; cmovs eax, edx ; ret
0x0000000000110616 : test eax, eax ; je 0x110656 ; xor edx, edx ; call rax
0x0000000000117f20 : test eax, eax ; je 0x117f29 ; ret
0x0000000000119fe5 : test eax, eax ; je 0x119ff3 ; mov qword ptr [rax], rdx ; ret
0x000000000011f31a : test eax, eax ; je 0x11f384 ; call rax
0x000000000011f4fb : test eax, eax ; je 0x11f5f8 ; call rax
0x0000000000130135 : test eax, eax ; je 0x130174 ; call rax
0x0000000000131c2e : test eax, eax ; je 0x131c48 ; add rsp, 8 ; ret
0x000000000013ac1d : test eax, eax ; je 0x13ac2d ; mov rdi, rbx ; call rax
0x000000000013af3d : test eax, eax ; je 0x13af4d ; mov rdi, rbx ; call rax
0x0000000000143f3e : test eax, eax ; je 0x143f4c ; ret
0x0000000000144dc4 : test eax, eax ; je 0x144dd8 ; add rsp, 8 ; ret
0x0000000000149594 : test eax, eax ; je 0x1495a4 ; mov rdi, rbp ; call rax
0x0000000000149eeb : test eax, eax ; je 0x149efb ; mov rdi, rbp ; call rax
0x000000000014a21a : test eax, eax ; je 0x14a224 ; ret
0x000000000014af1a : test eax, eax ; je 0x14af2a ; mov rdi, rbx ; call rax
0x000000000014b277 : test eax, eax ; je 0x14b287 ; mov rdi, rbx ; call rax
0x000000000014b495 : test eax, eax ; je 0x14b4a6 ; xor eax, eax ; ret
0x000000000014ba86 : test eax, eax ; je 0x14ba96 ; mov rdi, r13 ; call rax
0x0000000000150c8b : test eax, eax ; je 0x150c9b ; mov rdi, rbp ; call rax
0x0000000000150e70 : test eax, eax ; je 0x150e84 ; lea rdi, [r12 + 0x10] ; call rax
0x000000000015212f : test eax, eax ; je 0x15213f ; mov rdi, rbp ; call rax
0x0000000000152214 : test eax, eax ; je 0x152224 ; mov rdi, r13 ; call rax
0x0000000000153042 : test eax, eax ; je 0x153054 ; lea rdi, [rbp + 0x68] ; call rax
0x000000000015377a : test eax, eax ; je 0x15378a ; mov rdi, rbp ; call rax
0x0000000000153ae2 : test eax, eax ; je 0x153af4 ; lea rdi, [rbp + 0x58] ; call rax
0x00000000001564d0 : test eax, eax ; je 0x15645e ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000156451 : test eax, eax ; je 0x156465 ; pop rbx ; ret
0x0000000000157550 : test eax, eax ; je 0x157564 ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000157c99 : test eax, eax ; je 0x157cad ; lea rdi, [r12 + 0x10] ; call rax
0x000000000015a3d3 : test eax, eax ; je 0x15a407 ; mov eax, r8d ; ret
0x000000000015a423 : test eax, eax ; je 0x15a457 ; mov eax, r8d ; ret
0x0000000000182143 : test eax, eax ; je 0x18214f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000183128 : test eax, eax ; je 0x183134 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000019b95c : test eax, eax ; je 0x19b966 ; call rax
0x000000000019ba59 : test eax, eax ; je 0x19ba68 ; call rax
0x000000000002726c : test eax, eax ; je 0x2727c ; mov rdi, rbp ; call rax
0x000000000002a5de : test eax, eax ; je 0x2a5ec ; ret
0x0000000000033d22 : test eax, eax ; je 0x33d2c ; call rax
0x0000000000034fdd : test eax, eax ; je 0x34fe7 ; call rax
0x0000000000065ff8 : test eax, eax ; je 0x66049 ; mov eax, 0x13c ; syscall
0x0000000000091721 : test eax, eax ; je 0x91735 ; pop rbx ; ret
0x0000000000097e1a : test eax, eax ; je 0x97e24 ; call rax
0x0000000000097ea3 : test eax, eax ; je 0x97ead ; call rax
0x0000000000097f13 : test eax, eax ; je 0x97f1d ; call rax
0x000000000009c3cd : test eax, eax ; je 0x9c3d7 ; call rax
0x000000000009ff95 : test eax, eax ; je 0xa0078 ; call rax
0x00000000000a00cd : test eax, eax ; je 0xa01a8 ; call rax
0x00000000000a25f4 : test eax, eax ; je 0xa2608 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0129 : test eax, eax ; je 0xe014b ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000e0565 : test eax, eax ; je 0xe059c ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3ab9 : test eax, eax ; je 0xf3aff ; xor esi, esi ; add rdx, rax ; jmp 0xf3ad9
0x0000000000122326 : test eax, eax ; jl 0x122343 ; je 0x122333 ; ret
0x000000000010f3cf : test eax, eax ; jne 0x10f3f1 ; mov eax, 0x11 ; syscall
0x000000000010f47f : test eax, eax ; jne 0x10f4a1 ; mov eax, 0x12 ; syscall
0x000000000010f848 : test eax, eax ; jne 0x10f860 ; mov edx, dword ptr [rbx + 4] ; jmp 0x10f81c
0x000000000011115b : test eax, eax ; jne 0x1111c9 ; mov eax, 0x101 ; syscall
0x000000000011127c : test eax, eax ; jne 0x111294 ; syscall
0x000000000011131c : test eax, eax ; jne 0x111339 ; mov eax, 1 ; syscall
0x0000000000111790 : test eax, eax ; jne 0x1117c9 ; mov eax, 0x48 ; syscall
0x0000000000111abc : test eax, eax ; jne 0x111ad9 ; mov eax, 3 ; syscall
0x0000000000111c3c : test eax, eax ; jne 0x111c59 ; mov eax, 0x55 ; syscall
0x0000000000115bfc : test eax, eax ; jne 0x115c19 ; mov eax, 7 ; syscall
0x000000000011627f : test eax, eax ; jne 0x1162a1 ; mov eax, 0x146 ; syscall
0x000000000011646f : test eax, eax ; jne 0x116491 ; mov eax, 0x115 ; syscall
0x000000000011651f : test eax, eax ; jne 0x116541 ; mov eax, 0x11d ; syscall
0x00000000001176bc : test eax, eax ; jne 0x1176d9 ; mov eax, 0x13 ; syscall
0x000000000011775c : test eax, eax ; jne 0x117779 ; mov eax, 0x14 ; syscall
0x0000000000117c4e : test eax, eax ; jne 0x117c89 ; mov eax, 0x71 ; syscall
0x0000000000117cee : test eax, eax ; jne 0x117d29 ; mov eax, 0x72 ; syscall
0x000000000011824f : test eax, eax ; jne 0x118271 ; mov eax, 0x17 ; syscall
0x0000000000118350 : test eax, eax ; jne 0x118389 ; mov eax, 0x10e ; syscall
0x000000000011847c : test eax, eax ; jne 0x118499 ; mov eax, 0x4a ; syscall
0x000000000011853c : test eax, eax ; jne 0x118559 ; mov eax, 0x4b ; syscall
0x000000000011bbfc : test eax, eax ; jne 0x11bc19 ; mov eax, 0x1a ; syscall
0x000000000011df93 : test eax, eax ; jne 0x11dfd9 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfbc : test eax, eax ; jne 0x11e044 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000012261f : test eax, eax ; jne 0x122641 ; mov eax, 0xe8 ; syscall
0x00000000001226cf : test eax, eax ; jne 0x1226f1 ; mov eax, 0x114 ; syscall
0x000000000012277f : test eax, eax ; jne 0x1227a1 ; mov eax, 0x116 ; syscall
0x000000000012282f : test eax, eax ; jne 0x122851 ; mov eax, 0x113 ; syscall
0x00000000001228fc : test eax, eax ; jne 0x122919 ; mov eax, 0x130 ; syscall
0x00000000001232fc : test eax, eax ; jne 0x123319 ; mov eax, 0x2b ; syscall
0x00000000001233cc : test eax, eax ; jne 0x1233e9 ; mov eax, 0x2a ; syscall
0x00000000001235ef : test eax, eax ; jne 0x123611 ; mov eax, 0x2d ; syscall
0x00000000001236ac : test eax, eax ; jne 0x1236c9 ; mov eax, 0x2f ; syscall
0x000000000012380c : test eax, eax ; jne 0x123829 ; mov eax, 0x2e ; syscall
0x00000000001238af : test eax, eax ; jne 0x1238d1 ; mov eax, 0x2c ; syscall
0x0000000000123d0f : test eax, eax ; jne 0x123d31 ; mov eax, 0x120 ; syscall
0x0000000000123dbf : test eax, eax ; jne 0x123de1 ; mov eax, 0x12b ; syscall
0x0000000000123e6f : test eax, eax ; jne 0x123e91 ; mov eax, 0x133 ; syscall
0x000000000012400f : test eax, eax ; jne 0x124031 ; mov eax, 0x45 ; syscall
0x00000000001240bf : test eax, eax ; jne 0x1240e1 ; mov eax, 0x46 ; syscall
0x0000000000130203 : test eax, eax ; jne 0x130239 ; mov eax, 0xe6 ; syscall
0x000000000013213c : test eax, eax ; jne 0x1320f0 ; mov rax, rdi ; ret
0x000000000013f6eb : test eax, eax ; jne 0x13f70f ; mov eax, r8d ; ret
0x000000000014438e : test eax, eax ; jne 0x14439c ; ret
0x00000000001444bc : test eax, eax ; jne 0x1444d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001461fc : test eax, eax ; jne 0x14620c ; ret
0x000000000015105a : test eax, eax ; jne 0x151064 ; ret
0x000000000015771a : test eax, eax ; jne 0x157724 ; ret
0x000000000015fe1e : test eax, eax ; jne 0x15fe37 ; xor eax, eax ; pop rbp ; ret
0x0000000000164133 : test eax, eax ; jne 0x164155 ; mov eax, 0x27 ; syscall
0x00000000001873db : test eax, eax ; jne 0x1873c9 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001878b0 : test eax, eax ; jne 0x187899 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000187be1 : test eax, eax ; jne 0x187c09 ; xor eax, eax ; vzeroupper ; ret
0x000000000018f691 : test eax, eax ; jne 0x18f6b9 ; xor eax, eax ; vzeroupper ; ret
0x000000000018fb09 : test eax, eax ; jne 0x18faf9 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018ffde : test eax, eax ; jne 0x18ffc9 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000036dcd : test eax, eax ; jne 0x36ddf ; mov eax, r8d ; ret
0x000000000004b52c : test eax, eax ; jne 0x4b549 ; mov eax, 0x13e ; syscall
0x000000000006589a : test eax, eax ; jne 0x658a5 ; pop rbx ; ret
0x000000000007e02f : test eax, eax ; jne 0x7dff1 ; mov rdi, r13 ; call 0x8a279
0x00000000000958c4 : test eax, eax ; jne 0x958bc ; ret
0x00000000000966ec : test eax, eax ; jne 0x966e4 ; ret
0x0000000000097fcc : test eax, eax ; jne 0x98001 ; mov eax, 0x23 ; syscall
0x00000000000a1a2f : test eax, eax ; jne 0xa1a26 ; xor eax, eax ; ret
0x00000000000af325 : test eax, eax ; jne 0xaf386 ; xor eax, eax ; ret
0x00000000000af7d8 : test eax, eax ; jne 0xaf856 ; xor eax, eax ; ret
0x00000000000af807 : test eax, eax ; jne 0xaf886 ; xor eax, eax ; ret
0x00000000000d1515 : test eax, eax ; jne 0xd1576 ; xor eax, eax ; ret
0x00000000000e21be : test eax, eax ; jne 0xe21f9 ; mov eax, 0x74 ; syscall
0x00000000000e5c9c : test eax, eax ; jne 0xe5cb9 ; mov eax, 0x22 ; syscall
0x00000000000e5d1c : test eax, eax ; jne 0xe5d39 ; mov eax, 0x23 ; syscall
0x00000000000e701e : test eax, eax ; jne 0xe7059 ; mov eax, 0x69 ; syscall
0x00000000000e70be : test eax, eax ; jne 0xe70f9 ; mov eax, 0x6a ; syscall
0x00000000000e738e : test eax, eax ; jne 0xe73c9 ; mov eax, 0x75 ; syscall
0x00000000000e743e : test eax, eax ; jne 0xe7479 ; mov eax, 0x77 ; syscall
0x000000000008df6f : test eax, eax ; js 0x8df7c ; ret
0x0000000000148b2a : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000132b30 : test eax, eax ; setg cl ; add ecx, ecx ; jmp 0x8ed79
0x0000000000091bee : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000007025f : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000000781dc : test eax, edi ; idiv bh ; call qword ptr [rax]
0x0000000000124701 : test eax, edx ; idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x00000000001488cd : test ebp, 0x840f1000 ; ret 0xfffe
0x000000000010fe54 : test ebp, eax ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf02
0x000000000011daf6 : test ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x11db08 ; call rbx
0x000000000011da8d : test ebp, ebp ; jne 0x11dae8 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011dabd : test ebp, ebp ; jne 0x11db48 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000019bbb4 : test ebp, ebp ; jne 0x19bba8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097dfa : test ebp, ebp ; jne 0x97e34 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130d87 : test ebp, ebx ; add eax, 0x440f4800 ; ret 0xf6c3
0x000000000010fe4b : test ebp, edi ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000000d302b : test ebx, ebp ; push rcx ; mov eax, 0x148051e ; ret 0xb848
0x00000000000af260 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000128482 : test ebx, ebx ; je 0x1284a0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012aabc : test ebx, ebx ; jne 0x12aad0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000156b65 : test ebx, ebx ; jne 0x156b78 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163fb0 : test ebx, ebx ; jne 0x163fc5 ; pop rbx ; ret
0x0000000000163fe0 : test ebx, ebx ; jne 0x163ff5 ; pop rbx ; ret
0x000000000019a863 : test ebx, ebx ; jne 0x19a852 ; pop rbx ; ret
0x000000000019badc : test ebx, ebx ; jne 0x19bac8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019be29 : test ebx, ebx ; jne 0x19be1a ; pop rbx ; ret
0x000000000019becb : test ebx, ebx ; jne 0x19beb5 ; pop rbx ; ret
0x00000000000eca81 : test ebx, ebx ; jns 0xeca75 ; lea rax, [rdx + rax*8] ; jmp 0xeca67
0x00000000000ddee3 : test ebx, ecx ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000130445 : test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000af748 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000009e728 : test ebx, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000196982 : test ecx, ebp ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011dca6 : test ecx, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000001940d2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000012628f : test ecx, ecx ; jne 0x12629c ; ret
0x00000000001262f8 : test ecx, ecx ; jne 0x126304 ; ret
0x0000000000126bdf : test ecx, ecx ; jne 0x126bec ; ret
0x0000000000126c3c : test ecx, ecx ; jne 0x126c4c ; ret
0x00000000000bfd1f : test ecx, ecx ; jne 0xbfcff ; mov rax, r8 ; ret
0x00000000001041b7 : test edi, edi ; je 0x1041cd ; mov rdi, rbx ; call r15
0x00000000000e91e7 : test edi, edi ; je 0xe91fd ; mov rdi, rbx ; call r15
0x000000000011a5cc : test edi, edi ; jne 0x11a5e9 ; mov eax, 1 ; ret
0x000000000011cd9b : test edi, edi ; jne 0x11cdce ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011dccf : test edi, edi ; jne 0x11dd18 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcfb : test edi, edi ; jne 0x11dd6f ; mov rdi, qword ptr [r14] ; call rbx
0x000000000013af21 : test edi, edi ; jne 0x13af15 ; pop rbx ; ret
0x00000000000e80c9 : test edi, edi ; js 0xe80d4 ; ret
0x000000000006f7b5 : test edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000045337 : test edx, eax ; je 0x45344 ; ret
0x00000000000cabbe : test edx, ebp ; and eax, dword ptr [rax] ; add dh, dh ; ret
0x000000000007cdfb : test edx, edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000fa691 : test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000122994 : test edx, edx ; je 0x1229d1 ; mov eax, 0x145 ; syscall
0x0000000000033f9f : test edx, edx ; je 0x33fa9 ; call rdx
0x0000000000090483 : test edx, edx ; je 0x90494 ; ret
0x00000000000908e3 : test edx, edx ; je 0x908f4 ; ret
0x00000000000b4dc6 : test edx, edx ; je 0xb4dd5 ; bsf eax, edx ; ret
0x00000000000b4e6b : test edx, edx ; je 0xb4e88 ; bsf rax, rdx ; ret
0x00000000000b4e0e : test edx, edx ; je 0xb4e98 ; bsf rax, rdx ; ret
0x00000000000b503a : test edx, edx ; je 0xb5068 ; bsf rax, rdx ; ret
0x0000000000119250 : test edx, edx ; jne 0x119209 ; xor eax, eax ; pop rbp ; ret
0x00000000001264e1 : test edx, edx ; jne 0x1264f4 ; ret
0x0000000000126e11 : test edx, edx ; jne 0x126e24 ; ret
0x0000000000066186 : test edx, edx ; jne 0x66197 ; sub dword ptr [rdi], 1 ; ret
0x0000000000089ebf : test edx, edx ; jne 0x89eb4 ; ret
0x0000000000093a47 : test edx, edx ; jne 0x93a54 ; ret
0x0000000000094887 : test edx, edx ; jne 0x9487c ; ret
0x00000000000a1b09 : test edx, edx ; jne 0xa1b04 ; ret
0x00000000000bf125 : test edx, edx ; jne 0xbf134 ; mov rax, rdi ; ret
0x00000000000bfe16 : test edx, edx ; jne 0xbfe0e ; xor eax, eax ; ret
0x00000000000bfeb0 : test edx, edx ; jne 0xbfe94 ; ret
0x00000000000c119b : test edx, edx ; jne 0xc1194 ; ret
0x00000000000c03f2 : test edx, edx ; sete al ; ret
0x000000000007063c : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000001940c5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000003c008 : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004bfb5 : test esi, esi ; cmove rax, rdx ; jmp 0x4bfd5
0x0000000000116348 : test esi, esi ; je 0x11637b ; mov eax, 0x118 ; syscall
0x0000000000119eb5 : test esi, esi ; je 0x119ef1 ; mov eax, 0x105 ; syscall
0x0000000000186ee6 : test esi, esi ; je 0x186ece ; xor eax, eax ; ret
0x00000000000332d4 : test esi, esi ; je 0x332e9 ; cmp esi, 3 ; je 0x332e9 ; ret
0x000000000011d982 : test esi, esi ; jne 0x11d999 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011db7f : test esi, esi ; jne 0x11dba8 ; mov rdi, qword ptr [r13] ; call rbx
0x00000000000b4f35 : test esi, esi ; jne 0xb4f44 ; xor rax, rax ; ret
0x00000000000d2875 : test esi, esi ; jne 0xd2884 ; xor rax, rax ; ret
0x000000000007d8e1 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000009e44f : test esp, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001940df : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000073743 : test esp, esi ; retf
0x000000000009ea1f : test esp, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000011da4c : test esp, esp ; jne 0x11da80 ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011f24c : test esp, esp ; jne 0x11f291 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046f39 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000ab9bd : test r10b, r9b ; jne 0xab9a8 ; mov rax, r8 ; ret
0x000000000011da4b : test r12, r12 ; jne 0x11da81 ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011f24b : test r12d, r12d ; jne 0x11f292 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011da8c : test r13, r13 ; jne 0x11dae9 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011dabc : test r13, r13 ; jne 0x11db49 ; mov rdi, qword ptr [r12] ; call rbx
0x00000000001488cc : test r13d, 0x840f1000 ; ret 0xfffe
0x000000000011db7e : test r14, r14 ; jne 0x11dba9 ; mov rdi, qword ptr [r13] ; call rbx
0x00000000001041b6 : test r15, r15 ; je 0x1041ce ; mov rdi, rbx ; call r15
0x00000000000e91e6 : test r15, r15 ; je 0xe91fe ; mov rdi, rbx ; call r15
0x000000000011dcce : test r15, r15 ; jne 0x11dd19 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcfa : test r15, r15 ; jne 0x11dd70 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011df92 : test r8, r8 ; jne 0x11dfda ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfbb : test r8, r8 ; jne 0x11e045 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000182142 : test r8d, r8d ; je 0x182150 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000183127 : test r8d, r8d ; je 0x183135 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000065899 : test r8d, r8d ; jne 0x658a6 ; pop rbx ; ret
0x00000000000abaf9 : test r9b, dil ; jne 0xabadd ; ret
0x0000000000110615 : test rax, rax ; je 0x110657 ; xor edx, edx ; call rax
0x0000000000117f1f : test rax, rax ; je 0x117f2a ; ret
0x0000000000119fe4 : test rax, rax ; je 0x119ff4 ; mov qword ptr [rax], rdx ; ret
0x000000000011f319 : test rax, rax ; je 0x11f385 ; call rax
0x000000000011f4fa : test rax, rax ; je 0x11f5f9 ; call rax
0x0000000000130134 : test rax, rax ; je 0x130175 ; call rax
0x0000000000131c2d : test rax, rax ; je 0x131c49 ; add rsp, 8 ; ret
0x000000000013ac1c : test rax, rax ; je 0x13ac2e ; mov rdi, rbx ; call rax
0x000000000013af3c : test rax, rax ; je 0x13af4e ; mov rdi, rbx ; call rax
0x0000000000144dc3 : test rax, rax ; je 0x144dd9 ; add rsp, 8 ; ret
0x0000000000149593 : test rax, rax ; je 0x1495a5 ; mov rdi, rbp ; call rax
0x0000000000149eea : test rax, rax ; je 0x149efc ; mov rdi, rbp ; call rax
0x000000000014af19 : test rax, rax ; je 0x14af2b ; mov rdi, rbx ; call rax
0x000000000014b276 : test rax, rax ; je 0x14b288 ; mov rdi, rbx ; call rax
0x000000000014ba85 : test rax, rax ; je 0x14ba97 ; mov rdi, r13 ; call rax
0x0000000000150c8a : test rax, rax ; je 0x150c9c ; mov rdi, rbp ; call rax
0x000000000015212e : test rax, rax ; je 0x152140 ; mov rdi, rbp ; call rax
0x0000000000152213 : test rax, rax ; je 0x152225 ; mov rdi, r13 ; call rax
0x0000000000153041 : test rax, rax ; je 0x153055 ; lea rdi, [rbp + 0x68] ; call rax
0x0000000000153779 : test rax, rax ; je 0x15378b ; mov rdi, rbp ; call rax
0x0000000000153ae1 : test rax, rax ; je 0x153af5 ; lea rdi, [rbp + 0x58] ; call rax
0x0000000000156450 : test rax, rax ; je 0x156466 ; pop rbx ; ret
0x000000000019b95b : test rax, rax ; je 0x19b967 ; call rax
0x000000000019ba58 : test rax, rax ; je 0x19ba69 ; call rax
0x000000000002726b : test rax, rax ; je 0x2727d ; mov rdi, rbp ; call rax
0x0000000000033d21 : test rax, rax ; je 0x33d2d ; call rax
0x0000000000034fdc : test rax, rax ; je 0x34fe8 ; call rax
0x0000000000091720 : test rax, rax ; je 0x91736 ; pop rbx ; ret
0x0000000000097e19 : test rax, rax ; je 0x97e25 ; call rax
0x0000000000097ea2 : test rax, rax ; je 0x97eae ; call rax
0x0000000000097f12 : test rax, rax ; je 0x97f1e ; call rax
0x000000000009c3cc : test rax, rax ; je 0x9c3d8 ; call rax
0x000000000009ff94 : test rax, rax ; je 0xa0079 ; call rax
0x00000000000a00cc : test rax, rax ; je 0xa01a9 ; call rax
0x00000000000a25f3 : test rax, rax ; je 0xa2609 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3ab8 : test rax, rax ; je 0xf3b00 ; xor esi, esi ; add rdx, rax ; jmp 0xf3ada
0x0000000000122325 : test rax, rax ; jl 0x122344 ; je 0x122334 ; ret
0x00000000001461fb : test rax, rax ; jne 0x14620d ; ret
0x00000000000958c3 : test rax, rax ; jne 0x958bd ; ret
0x00000000000966eb : test rax, rax ; jne 0x966e5 ; ret
0x00000000000a1a2e : test rax, rax ; jne 0xa1a27 ; xor eax, eax ; ret
0x000000000019bbb3 : test rbp, rbp ; jne 0x19bba9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097df9 : test rbp, rbp ; jne 0x97e35 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128481 : test rbx, rbx ; je 0x1284a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012aabb : test rbx, rbx ; jne 0x12aad1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163faf : test rbx, rbx ; jne 0x163fc6 ; pop rbx ; ret
0x0000000000163fdf : test rbx, rbx ; jne 0x163ff6 ; pop rbx ; ret
0x000000000019a862 : test rbx, rbx ; jne 0x19a853 ; pop rbx ; ret
0x000000000019badb : test rbx, rbx ; jne 0x19bac9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019be28 : test rbx, rbx ; jne 0x19be1b ; pop rbx ; ret
0x000000000019beca : test rbx, rbx ; jne 0x19beb6 ; pop rbx ; ret
0x000000000011cd9a : test rdi, rdi ; jne 0x11cdcf ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000013af20 : test rdi, rdi ; jne 0x13af16 ; pop rbx ; ret
0x000000000013af1f : test rdi, rdi ; jne 0x13af17 ; pop rbx ; ret
0x0000000000045336 : test rdx, rax ; je 0x45345 ; ret
0x0000000000033f9e : test rdx, rdx ; je 0x33faa ; call rdx
0x00000000000b4e6a : test rdx, rdx ; je 0xb4e89 ; bsf rax, rdx ; ret
0x00000000000b4e0d : test rdx, rdx ; je 0xb4e99 ; bsf rax, rdx ; ret
0x00000000000b5039 : test rdx, rdx ; je 0xb5069 ; bsf rax, rdx ; ret
0x000000000011924f : test rdx, rdx ; jne 0x11920a ; xor eax, eax ; pop rbp ; ret
0x0000000000089ebe : test rdx, rdx ; jne 0x89eb5 ; ret
0x0000000000093a46 : test rdx, rdx ; jne 0x93a55 ; ret
0x0000000000094886 : test rdx, rdx ; jne 0x9487d ; ret
0x00000000000a1b08 : test rdx, rdx ; jne 0xa1b05 ; ret
0x00000000000bf124 : test rdx, rdx ; jne 0xbf135 ; mov rax, rdi ; ret
0x00000000000b4f34 : test rsi, rsi ; jne 0xb4f45 ; xor rax, rax ; ret
0x00000000000d2874 : test rsi, rsi ; jne 0xd2885 ; xor rax, rax ; ret
0x00000000000ab7ec : test sil, sil ; jne 0xab7e8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000192fee : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018ec30 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018c69e : vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x00000000001936c9 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018f115 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x00000000001936cd : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018edbc : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000018ee63 : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000192fda : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000192fc1 : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000018dcd6 : vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vzeroupper ; ret
0x000000000018c6be : vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x000000000018eb69 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018f07f : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000018ed07 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000018ecd9 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000018eff6 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000001936bf : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000001936c3 : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000193bb6 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000193c7c : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000193e85 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x00000000001936d8 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000001936dc : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000001932f7 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000193190 : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000192f92 : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000192f56 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000193459 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000019387c : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000001937df : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000019367e : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000011d01c : vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x00000000001870e4 : vzeroupper ; ret
0x0000000000187c60 : vzeroupper ; xor eax, eax ; ret
0x00000000000e4513 : wait ; adc byte ptr [rax], al ; syscall
0x00000000000eb7c4 : wait ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c80cd : wait ; or eax, 0xb8480000 ; ret 0xffff
0x000000000013b750 : wait ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000062d21 : wait ; ret
0x0000000000032af8 : wait ; sbb eax, dword ptr [rax] ; ret
0x00000000000be2ed : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be36f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be471 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000c6cf5 : xabort 0xe ; add al, ch ; ret 0xf702
0x0000000000181f4f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182773 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001840bf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181b3f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000182863 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182683 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018164b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013db3b : xchg al, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000008a332 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000050a47 : xchg al, ch ; adc eax, 0x89480000 ; retf 0xf66
0x00000000000a73fa : xchg al, dl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000181e5b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018956c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000188d8c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018917c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018899c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b4ad : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cc930 : xchg bh, cl ; add eax, 0x89490000 ; ret
0x0000000000189fb1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018b1b1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a8b1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018abb1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a2a9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000bf2c2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000001830cb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000184c1f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001843ff : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001818cf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000183bdf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000015ec13 : xchg byte ptr [rax - 0x76ffffff], ah ; retf 0x894c
0x0000000000181c0f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000182c23 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000181f2b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bfb85 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x0000000000123055 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000188b3b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181ffb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018473f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001823b3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000183f1f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001836ff : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000143f3a : xchg byte ptr [rbp - 0x3f7afff6], dh ; je 0x143f50 ; ret
0x00000000001848df : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000181daf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182e03 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182593 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000018159f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000126407 : xchg byte ptr [rbx - 0x172ceffc], cl ; and eax, 1 ; ret
0x000000000005c6dc : xchg byte ptr [rbx], ah ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000014f666 : xchg byte ptr [rbx], al ; or al, byte ptr [rax] ; syscall
0x0000000000077192 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000182fe3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018199f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000000cf6e5 : xchg byte ptr [rdi + rdx], dl ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000018902c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018884c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018995c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181e7f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000182ef3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018166f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000183a3f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000102776 : xchg byte ptr [rdx - 0x76b7fff2], bh ; ret 0x8b48
0x0000000000181711 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182835 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182925 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182745 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c07f3 : xchg byte ptr [rdx], dl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005df2b : xchg byte ptr [rip + 0x3d8d4800], dl ; ret
0x0000000000181a6f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000062d7c : xchg byte ptr [rsi + rcx - 0x76b80000], bh ; retf 0x30be
0x000000000018a556 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183b75 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184875 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b456 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018ab56 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a856 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000184395 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188f2d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a24e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018985d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181cdf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001824a3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000009c5f6 : xchg ch, ah ; adc al, 0 ; syscall
0x00000000001863cf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001861ef : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186bc7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185ae7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001869e7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000172ccf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000184bb5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183eb5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001839d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001846d5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018907d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018889d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181735 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c269d : xchg dl, ah ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000000cc654 : xchg dl, bh ; add eax, 0x89490000 ; ret
0x0000000000182655 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182475 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182565 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182385 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000002daf7 : xchg dword ptr [rax + 0x39480000], esp ; ret
0x0000000000083ee5 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000a17d4 : xchg dword ptr [rax + rax], edx ; call qword ptr [rax]
0x0000000000080c6b : xchg dword ptr [rax - 0x76ffffed], eax ; ret 0xc083
0x000000000007ab6b : xchg dword ptr [rax - 0x76fffff1], esi ; ret 0xc083
0x0000000000082876 : xchg dword ptr [rax - 0x76fffff8], edx ; ret 0xc083
0x0000000000074849 : xchg dword ptr [rax - 0x76fffffe], ebp ; ret 0xc083
0x00000000000d7dac : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000001225e5 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000018cfdc : xchg dword ptr [rax], eax ; vzeroupper ; ret
0x00000000000bfd1e : xchg dword ptr [rbp + 0x4cd575c9], eax ; mov eax, eax ; ret
0x0000000000067dc7 : xchg dword ptr [rbp - 0x76ffffd4], esp ; retf 0xc183
0x000000000006cdf7 : xchg dword ptr [rbx - 0x76fffff0], esp ; ret 0xc083
0x0000000000073e17 : xchg dword ptr [rbx - 0x76fffffb], ebx ; ret 0xc083
0x000000000007bdb4 : xchg dword ptr [rbx - 0x76fffffb], edi ; ret 0xc083
0x00000000000756a8 : xchg dword ptr [rbx - 0x76fffffd], ebp ; ret 0xc083
0x0000000000116b27 : xchg dword ptr [rcx + rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000110305 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000006a578 : xchg dword ptr [rcx - 0x76ffffee], esi ; retf 0xc183
0x0000000000081a62 : xchg dword ptr [rcx - 0x76fffff6], edx ; ret 0xc083
0x000000000007b3a2 : xchg dword ptr [rcx - 0x76fffff7], esp ; ret 0xc083
0x000000000007c763 : xchg dword ptr [rcx - 0x76fffffe], edi ; ret 0xc083
0x000000000014d442 : xchg dword ptr [rcx - 0x77000000], ebx ; retf 0x8b48
0x00000000000d5635 : xchg dword ptr [rcx], edx ; add byte ptr [rbp - 0x77], al ; ret 0x8341
0x0000000000073ac8 : xchg dword ptr [rdi - 0x76fffff7], edi ; ret 0xc083
0x00000000000828b2 : xchg dword ptr [rdi - 0x76fffff8], eax ; ret 0xc083
0x0000000000058331 : xchg dword ptr [rdx - 0x77000000], ebp ; retf 0xc183
0x0000000000058351 : xchg dword ptr [rdx - 0x77000000], ebx ; retf 0xc183
0x0000000000058371 : xchg dword ptr [rdx - 0x77000000], ecx ; retf 0xc183
0x0000000000058311 : xchg dword ptr [rdx - 0x77000000], edi ; retf 0xc183
0x000000000006ac99 : xchg dword ptr [rip - 0x76ffffcb], eax ; retf 0xc183
0x000000000007ab41 : xchg dword ptr [rip - 0x76ffffea], ebx ; ret 0xc083
0x000000000007b90a : xchg dword ptr [rip - 0x76fffff5], ebx ; ret 0xc083
0x000000000007a26d : xchg dword ptr [rsi - 0x76ffffe3], ecx ; ret 0xc083
0x0000000000090235 : xchg dword ptr [rsi - 0x76ffffff], ebp ; ret 0xc083
0x0000000000185728 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000e1bba : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004e289 : xchg eax, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000007908a : xchg eax, ebp ; clc ; idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000007a6bd : xchg eax, ebp ; enter -6, -1 ; call 0x76937
0x0000000000056e05 : xchg eax, ebp ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x00000000000abfff : xchg eax, ebp ; idiv edi ; add rsp, 8 ; ret
0x00000000000a36a7 : xchg eax, ebp ; mov ah, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x00000000000abaf7 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x0000000000146141 : xchg eax, ebp ; or al, byte ptr [rax] ; syscall
0x00000000001461f8 : xchg eax, ebp ; or al, byte ptr [rax] ; test rax, rax ; jne 0x146210 ; ret
0x0000000000135863 : xchg eax, ebp ; or eax, dword ptr [rax] ; syscall
0x000000000013bdd9 : xchg eax, ebp ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000004d4f0 : xchg eax, ebp ; ret
0x000000000019a070 : xchg eax, ebp ; ret 0x145
0x0000000000140dd9 : xchg eax, ebp ; ret 0x2144
0x000000000011a73c : xchg eax, ebp ; ret 0x2f3c
0x00000000001964fa : xchg eax, ebp ; ret 0x3145
0x00000000000a59ff : xchg eax, ebp ; ret 0x3840
0x000000000008457b : xchg eax, ebp ; ret 0x5389
0x000000000006fb64 : xchg eax, ebp ; ret 0x8341
0x000000000009b920 : xchg eax, ebp ; ret 0x8348
0x0000000000044a2c : xchg eax, ebp ; ret 0x8440
0x000000000004d245 : xchg eax, ebp ; ret 0x8941
0x0000000000046c6d : xchg eax, ebp ; ret 0x8948
0x000000000005b897 : xchg eax, ebp ; ret 0x941
0x000000000005b4eb : xchg eax, ebp ; ret 0xb60f
0x0000000000196ae3 : xchg eax, ebp ; ret 0xc031
0x000000000011a7fc : xchg eax, ebp ; ret 0xc084
0x000000000004e4c3 : xchg eax, ebp ; ret 0xc220
0x00000000000ab9b5 : xchg eax, ebp ; ret 0xc839
0x00000000000d3aa8 : xchg eax, ebp ; ret 0xc985
0x00000000000fae41 : xchg eax, ebp ; ret 0xca09
0x00000000000f1954 : xchg eax, ebp ; ret 0xd201
0x00000000000c400e : xchg eax, ebp ; ret 0xd284
0x0000000000112cfa : xchg eax, ebp ; ret 0xd321
0x0000000000196301 : xchg eax, ebp ; ret 0xd348
0x000000000019a3a2 : xchg eax, ebp ; ret 0xdb31
0x00000000000c23d8 : xchg eax, ebp ; ret 0xdeb
0x000000000019a565 : xchg eax, ebp ; ret 0xf45
0x0000000000161f57 : xchg eax, ebp ; ret 5
0x000000000011a5f8 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000065f69 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbp ; ret
0x0000000000105b62 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000026a93 : xchg eax, ebp ; sbb al, 0 ; ret
0x0000000000063f17 : xchg eax, ebp ; sbb byte ptr [rax], al ; syscall
0x00000000000bfeaf : xchg eax, ebp ; test edx, edx ; jne 0xbfe95 ; ret
0x000000000008aaf3 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000190a44 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000000b9eec : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001694b2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000008bb28 : xchg eax, ebx ; nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001359bb : xchg eax, ebx ; or eax, dword ptr [rax] ; syscall
0x000000000007471e : xchg eax, ebx ; ret
0x000000000003a79e : xchg eax, ebx ; ret 0x3948
0x0000000000048233 : xchg eax, ebx ; ret 0x3949
0x00000000000a924a : xchg eax, ebx ; ret 0x841
0x00000000000cb611 : xchg eax, ebx ; ret 0x844
0x00000000000f08ec : xchg eax, ebx ; ret 0x8445
0x00000000000a8395 : xchg eax, ebx ; ret 0x845
0x000000000004844f : xchg eax, ebx ; ret 0x854d
0x000000000015b1a7 : xchg eax, ebx ; ret 0xd108
0x00000000000a9244 : xchg eax, ebx ; ror byte ptr [rcx + rdi - 0x21], 0xf ; xchg eax, ebx ; ret 0x841
0x00000000000888ef : xchg eax, ebx ; xor r8d, r8d ; mov rax, r8 ; ret
0x0000000000050780 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000cd0c0 : xchg eax, ecx ; add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x0000000000067a2e : xchg eax, ecx ; add rax, rcx ; jmp rax
0x0000000000055fb2 : xchg eax, ecx ; add rdx, r9 ; jmp rdx
0x0000000000083fe5 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x0000000000131f1b : xchg eax, ecx ; idiv edi ; call qword ptr [rax - 0x3c0776b8]
0x0000000000184cc1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001833ef : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000e4a3b : xchg eax, edi ; adc byte ptr [rax], al ; syscall
0x0000000000029621 : xchg eax, edi ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x0000000000043cc0 : xchg eax, edi ; add r10, r15 ; jmp r10
0x0000000000043b92 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000000daaff : xchg eax, edi ; jo 0xdab15 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000145fef : xchg eax, edi ; or al, byte ptr [rax] ; syscall
0x000000000015638f : xchg eax, edi ; or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001355d7 : xchg eax, edi ; or eax, dword ptr [rax] ; syscall
0x0000000000140dca : xchg eax, edi ; ret
0x00000000001330d5 : xchg eax, edi ; ret 0x840
0x00000000001458c6 : xchg eax, edi ; ret 0x8440
0x000000000014e96a : xchg eax, edi ; ret 0xb75
0x000000000014e977 : xchg eax, edi ; ret 0xd284
0x000000000012d5c9 : xchg eax, edi ; ret 0xda80
0x0000000000102b3f : xchg eax, edi ; ret 0xf983
0x000000000010316f : xchg eax, edi ; ret 0xfe83
0x00000000001251ea : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000009263c : xchg eax, edx ; adc eax, 0x58d4800 ; ret 0x159f
0x00000000000533a8 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000d9daf : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x000000000014b222 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000058157 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012c1bc : xchg eax, edx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000009d9ea : xchg eax, edx ; ret
0x00000000000c631e : xchg eax, edx ; ret 0x2040
0x0000000000058844 : xchg eax, edx ; ret 0x8948
0x000000000019836a : xchg eax, edx ; ret 0x894d
0x000000000014edd7 : xchg eax, edx ; ret 0x8b48
0x000000000012e156 : xchg eax, edx ; ret 0xb
0x000000000014edca : xchg eax, edx ; ret 0xb75
0x00000000000d792d : xchg eax, edx ; ret 0xc283
0x00000000000a20e7 : xchg eax, edx ; ret 0xf083
0x0000000000186d88 : xchg eax, edx ; ret 0xf40
0x0000000000064145 : xchg eax, edx ; sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x000000000006419b : xchg eax, edx ; sbb byte ptr [rax], al ; syscall
0x000000000004c259 : xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000182147 : xchg eax, edx ; sub eax, edx ; ret
0x000000000006419a : xchg eax, edx ; xchg eax, edx ; sbb byte ptr [rax], al ; syscall
0x00000000000e4b7b : xchg eax, esi ; adc byte ptr [rax], al ; syscall
0x0000000000093ab4 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000190d42 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000152e86 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000170273 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000116b9b : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x00000000000bf354 : xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000005827e : xchg eax, esi ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000d9eee : xchg eax, esi ; jl 0xd9f04 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000190dff : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190d5d : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000146107 : xchg eax, esi ; or al, byte ptr [rax] ; syscall
0x0000000000156483 : xchg eax, esi ; or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001356bb : xchg eax, esi ; or eax, dword ptr [rax] ; syscall
0x0000000000128f56 : xchg eax, esi ; pop rbx ; or al, 0 ; syscall
0x00000000000aa29d : xchg eax, esi ; ret
0x00000000000a24b6 : xchg eax, esi ; ret 0x3145
0x00000000000aa297 : xchg eax, esi ; ret 0x3948
0x00000000000d5619 : xchg eax, esi ; ret 0x3ee9
0x00000000000d995f : xchg eax, esi ; ret 0x6348
0x000000000013f56b : xchg eax, esi ; ret 0x8341
0x00000000000cdab3 : xchg eax, esi ; ret 0xc085
0x0000000000137ba3 : xchg eax, esi ; ret 0xc8b
0x00000000000cdb07 : xchg eax, esi ; ret 0xd284
0x00000000000d58c1 : xchg eax, esi ; ret 0xe1e9
0x00000000000a2465 : xchg eax, esi ; ret 0xf631
0x000000000005d116 : xchg eax, esi ; ret 0xffff
0x0000000000190dae : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004141d : xchg eax, esi ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000001355d6 : xchg eax, esi ; xchg eax, edi ; or eax, dword ptr [rax] ; syscall
0x0000000000156482 : xchg eax, esi ; xchg eax, esi ; or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d3a39 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000162a38 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000143463 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x000000000014340b : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301b : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000162072 : xchg eax, esp ; and al, 0xb5 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000001462c3 : xchg eax, esp ; or al, byte ptr [rax] ; syscall
0x0000000000186329 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014f708 : xchg eax, esp ; pop rsp ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000014cfe9 : xchg eax, esp ; rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x00000000000335ea : xchg eax, esp ; ret
0x0000000000163fc6 : xchg eax, esp ; ret 0x1389
0x0000000000108761 : xchg eax, esp ; ret 0x1589
0x0000000000054415 : xchg eax, esp ; ret 0x2040
0x0000000000196802 : xchg eax, esp ; ret 0x2041
0x0000000000111f64 : xchg eax, esp ; ret 0x2044
0x00000000000570ea : xchg eax, esp ; ret 0x2ae9
0x0000000000062768 : xchg eax, esp ; ret 0x3145
0x00000000000ab907 : xchg eax, esp ; ret 0x3840
0x0000000000084fa3 : xchg eax, esp ; ret 0x3b48
0x000000000006d869 : xchg eax, esp ; ret 0x68e9
0x0000000000056b19 : xchg eax, esp ; ret 0x7c8b
0x00000000000f0b04 : xchg eax, esp ; ret 0x8040
0x0000000000107f73 : xchg eax, esp ; ret 0x8341
0x0000000000199a92 : xchg eax, esp ; ret 0x8440
0x00000000001970bc : xchg eax, esp ; ret 0x8441
0x0000000000062320 : xchg eax, esp ; ret 0x8545
0x00000000000fd4ff : xchg eax, esp ; ret 0x8548
0x00000000000e607d : xchg eax, esp ; ret 0x854d
0x00000000001080b3 : xchg eax, esp ; ret 0x8944
0x00000000000d9ae9 : xchg eax, esp ; ret 0x8d48
0x0000000000142c34 : xchg eax, esp ; ret 0xa3c
0x00000000000a24bf : xchg eax, esp ; ret 0xb60f
0x00000000000d3ae7 : xchg eax, esp ; ret 0xc031
0x00000000000fcc66 : xchg eax, esp ; ret 0xc283
0x00000000000f2db0 : xchg eax, esp ; ret 0xd009
0x00000000001014b1 : xchg eax, esp ; ret 0xd020
0x00000000000a20f0 : xchg eax, esp ; ret 0xd084
0x0000000000027234 : xchg eax, esp ; ret 0xd284
0x0000000000142bfd : xchg eax, esp ; ret 0xd308
0x0000000000112876 : xchg eax, esp ; ret 0xd321
0x00000000000d3c2b : xchg eax, esp ; ret 0xd338
0x00000000000aba65 : xchg eax, esp ; ret 0xf039
0x0000000000062e79 : xchg eax, esp ; ret 0xf45
0x00000000000f7cb2 : xchg eax, esp ; ret 0xf66
0x00000000001387c2 : xchg eax, esp ; ret 0xf741
0x00000000000ec496 : xchg eax, esp ; ret 0xf883
0x0000000000056cc5 : xchg eax, esp ; ret 0xf983
0x00000000000d386c : xchg eax, esp ; rol byte ptr [rcx + rbp - 0x40], 0x89 ; ret
0x0000000000026dec : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000097fe9 : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xe8 ; add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000010723d : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xf8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x000000000009f424 : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000015af7c : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000055513 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000031acf : xchg ebp, ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000a9db9 : xchg edx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000013f5ad : xchg esi, ebx ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x0000000000135862 : xchg rax, rbp ; or eax, dword ptr [rax] ; syscall
0x000000000013176e : xlatb ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf
0x000000000016937d : xlatb ; add r9, r11 ; jmp r9
0x00000000000bed2c : xlatb ; jb 0xbed37 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000120217 : xlatb ; jne 0x12020f ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e5fe1 : xlatb ; mov eax, esi ; syscall
0x00000000000e5ff0 : xlatb ; mov eax, r8d ; syscall
0x000000000013f8c9 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000005e553 : xlatb ; mov rax, r10 ; ret
0x000000000004c9c4 : xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a6171 : xlatb ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc019
0x00000000000af174 : xlatb ; ret
0x00000000000b4c67 : xlatb ; ret 0x94c
0x00000000000af15f : xlatb ; ret 0xc085
0x00000000000ad610 : xlatb ; ret 0xc148
0x00000000001881a8 : xlatb ; ret 0xe883
0x00000000000af95b : xlatb ; ret 0xf188
0x00000000000b4de8 : xlatb ; ret 0xf66
0x0000000000188368 : xlatb ; ret 0xff2d
0x00000000000791b5 : xlatb ; ret 0xfffa
0x00000000000b483d : xlatb ; retf
0x00000000000d26e2 : xlatb ; retf 0x8548
0x00000000000b4d44 : xlatb ; retf 0xc148
0x000000000018718c : xlatb ; retf 0xc985
0x00000000000ac290 : xlatb ; retf 0xead3
0x00000000000d2580 : xlatb ; retf 0xf66
0x000000000018b9f9 : xlatb ; retf 0xfdc5
0x00000000000af551 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000018ba55 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000af323 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000af7d6 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000af805 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x0000000000187ca2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000018b7a2 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000ba362 : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000018ca07 : xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000000ba539 : xlatb ; ror dword ptr [rcx - 0x7d], cl ; call 0xffffffffcb91b48a
0x000000000019408a : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000af774 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000ad4f6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000000ad3b6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000ad276 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000ad136 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000000acff6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000000aceb6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000000acd76 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000000acc36 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000000acaf6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000000ac9b6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000ac876 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000ac736 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000000ac5f6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000ac4b6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000ac376 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000194086 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b4c05 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b4c16 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000004a63a : xlatb ; shl rdi, 0x20 ; or rax, rdi ; ret
0x00000000001220ba : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x0000000000163f4c : xlatb ; xor eax, eax ; ret
0x00000000000b9978 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b990e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000001456e2 : xor ah, byte ptr [rax + 0x50f000a] ; pop rbp ; ret
0x00000000000e2389 : xor ah, dh ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008c9ff : xor al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000123465 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a8159 : xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x000000000007849b : xor al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006560c : xor al, 0x18 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a5153 : xor al, 0x24 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014a960 : xor al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000af88b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x000000000004c258 : xor al, 0x92 ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005ac44 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000083d4b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000008457f : xor al, 0xe9 ; ret 0xfffc
0x0000000000136768 : xor al, 0xec ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d2128 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000123175 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000843ef : xor al, 2 ; add byte ptr [rax], al ; add bl, ch ; ret 0x43c7
0x00000000000843e6 : xor al, 3 ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000001220bf : xor al, al ; or eax, edx ; ret
0x00000000001234f5 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000007cdfa : xor al, byte ptr [rbp - 0x76b60006] ; ret
0x000000000013e10d : xor al, byte ptr [rcx - 0x77] ; ret 0xfe83
0x00000000001185c5 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000c0a87 : xor al, ch ; ret
0x00000000000fca3f : xor al, ch ; retf
0x0000000000115a8c : xor ax, ax ; ret
0x00000000000eb0c6 : xor bh, byte ptr [rax + 1] ; ret
0x00000000000456b2 : xor bl, 0xf ; adc dword ptr [rdi], eax ; movd xmm0, esi ; ret
0x00000000000af3ac : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000012fff2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000f5311 : xor byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000d221c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000af27d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000010f577 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x000000000012a48a : xor byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000bf1f8 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000110c67 : xor byte ptr [rax + 0x106], bh ; syscall
0x0000000000116b18 : xor byte ptr [rax + 0x10], bh ; syscall
0x0000000000122997 : xor byte ptr [rax + 0x145], bh ; syscall
0x0000000000045c5e : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000008f4a8 : xor byte ptr [rax + 0x29], cl ; ret 0x3948
0x000000000012a48b : xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000a0548 : xor byte ptr [rax + 0x31], cl ; ret 0x8948
0x00000000000e1130 : xor byte ptr [rax + 0x39], cl ; ret 0xda72
0x000000000012c821 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x000000000002f7b3 : xor byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000012b833 : xor byte ptr [rax + 0x39], cl ; retf 0xc775
0x00000000000b47cf : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000009ae0d : xor byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000018b632 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000000b46a5 : xor byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001539b5 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000000af866 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000114af4 : xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000067ce8 : xor byte ptr [rax + rax], dl ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000bcaa7 : xor byte ptr [rax - 0x73], cl ; ret
0x000000000015051d : xor byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov rdi, r12 ; call rcx
0x00000000000b9b8f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011fe3f : xor byte ptr [rax - 0x77], cl ; ret 0xceb
0x0000000000114af0 : xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000019b14a : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx - 0x18] ; retf
0x0000000000146831 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0x00000000001197ca : xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000ffd4e : xor byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000001199a8 : xor byte ptr [rax - 0x7d], cl ; ret 0x8004
0x00000000000bf1f9 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000057f7b : xor byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x000000000008b268 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x4966
0x00000000000c3775 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; imul cl ; ret
0x0000000000027216 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000049bb1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000027525 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e01c8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x00000000000bf3a4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001239a5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000130130 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x130179 ; call rax
0x000000000008a53e : xor byte ptr [rax], al ; je 0x8a54c ; ret
0x00000000000be507 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000d2220 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000d221f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000befa9 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000044306 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000943fb : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019a131 : xor byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x00000000000f9eac : xor byte ptr [rbx + rax*4], dl ; ret
0x000000000014db74 : xor byte ptr [rbx - 0x76b6fc1d], al ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e609f : xor byte ptr [rbx], al ; or eax, 0x142b800 ; add byte ptr [rax], al ; syscall
0x00000000000d221d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000db57d : xor byte ptr [rcx + 0x17ec2], al ; add byte ptr [rax + 0x63], cl ; ret 0xd789
0x000000000019a267 : xor byte ptr [rcx + 0x21], cl ; retf
0x000000000008a59d : xor byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000006979b : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a24bc : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x0000000000056781 : xor byte ptr [rcx + 1], al ; ret
0x000000000019a54a : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000078863 : xor byte ptr [rcx - 0x77], cl ; ret 0x2949
0x000000000002e59c : xor byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000000001125aa : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000122901 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000119b43 : xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000119b03 : xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x000000000010f578 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x000000000014b899 : xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000a47da : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000190aef : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b4bcc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008cf78 : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000af27e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008cf77 : xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000be298 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be2ae : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2d0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2ee : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be30e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be334 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be350 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be370 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be390 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be3b6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3d8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3f6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be416 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be432 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be452 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be472 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be492 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be4b8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be508 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be1de : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1fc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be21c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be23e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be25e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be27e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000be114 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000be126 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be13c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be154 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be16a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be17c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000be19a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be1a6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000be1bc : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be100 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000161582 : xor ch, dh ; or byte ptr [rax], al ; syscall
0x00000000000e3989 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x0000000000155bb3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000119b45 : xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x000000000019720a : xor cl, byte ptr [rbp + 0x21] ; fimul dword ptr [rbp - 0x77] ; retf
0x000000000006e6da : xor cl, ch ; ret 0xffca
0x00000000000b97f0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000014bac7 : xor dh, dh ; ret 0xf04
0x000000000007236b : xor dword ptr [rax + 0x39], ecx ; ret 0x850f
0x0000000000036c63 : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000012bd58 : xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x00000000000eb0e7 : xor dword ptr [rax + 1], edi ; ret
0x0000000000162b9e : xor dword ptr [rax - 0x75], ecx ; or byte ptr [rax + 1], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x000000000014246e : xor dword ptr [rax - 0x75], ecx ; push rbx ; adc byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8348
0x00000000000a00c8 : xor dword ptr [rax - 0x77], ecx ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000011cc83 : xor dword ptr [rax - 0x77], ecx ; out dx, eax ; xor esi, esi ; call r12
0x0000000000071d67 : xor dword ptr [rax - 0x77], ecx ; ret
0x000000000010468b : xor dword ptr [rax - 0x78], eax ; xor esi, esi ; ret 0xf02
0x00000000000ab7eb : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x000000000002b3a5 : xor dword ptr [rax - 0x7d], ecx ; ret
0x0000000000119b05 : xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x0000000000123395 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000009b8d0 : xor dword ptr [rax], ecx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000013e3f7 : xor dword ptr [rbx - 0x38b6fe18], eax ; ret 0xffff
0x0000000000122c35 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000353b8 : xor dword ptr [rcx], edi ; ret 0x820f
0x0000000000110576 : xor dword ptr [rcx], esi ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xef ; call rax
0x00000000000d7dab : xor dword ptr [rdi - 0x76b80000], eax ; ret 0x8548
0x000000000007876a : xor dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011644b : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000193987 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011db27 : xor eax, 0x49000001 ; mov edi, dword ptr [rbp] ; call rbx
0x000000000003fd7f : xor eax, 0x7503f883 ; retf
0x000000000011af75 : xor eax, 0x8948000d ; ret
0x0000000000164261 : xor eax, 0x89902 ; ret
0x00000000000a8166 : xor eax, 0xf7410000 ; ret
0x0000000000027213 : xor eax, dword ptr [0x30] ; call rax
0x0000000000027522 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000011fdfb : xor eax, dword ptr [rax + 0x75000178] ; mov rdx, rax ; jmp 0x11fe22
0x00000000000840c9 : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000123495 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000123e74 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019c620 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000915f4 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012eafe : xor eax, eax ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000004b382 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d333e : xor eax, eax ; add rsp, 8 ; ret
0x00000000000372f4 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000012dda5 : xor eax, eax ; call 0x12a894
0x00000000000e8999 : xor eax, eax ; call 0x25494
0x0000000000159ca1 : xor eax, eax ; call r14
0x00000000000282cb : xor eax, eax ; call rbx
0x000000000014b266 : xor eax, eax ; call rcx
0x00000000001243e8 : xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0x1243f7 ; ret
0x000000000004a67a : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x4a690 ; pop rbx ; ret
0x000000000004a679 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x4a691 ; pop rbx ; ret
0x0000000000131af8 : xor eax, eax ; cmp dword ptr fs:[rcx], 0xb ; jne 0x131ad1 ; jmp 0x131ac1
0x0000000000097fb4 : xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x000000000009732f : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000c0c4c : xor eax, eax ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000f5246 : xor eax, eax ; mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004603d : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000010f769 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a6cf : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000001169d4 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000004b41d : xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x0000000000117804 : xor eax, eax ; mov eax, 0x127 ; syscall
0x00000000001178c4 : xor eax, eax ; mov eax, 0x128 ; syscall
0x00000000001179a4 : xor eax, eax ; mov eax, 0x147 ; syscall
0x0000000000117b04 : xor eax, eax ; mov eax, 0x148 ; syscall
0x0000000000123757 : xor eax, eax ; mov eax, 0x2c ; syscall
0x0000000000123537 : xor eax, eax ; mov eax, 0x2d ; syscall
0x00000000000e5b44 : xor eax, eax ; mov eax, 0xf7 ; syscall
0x000000000015a701 : xor eax, eax ; mov eax, r8d ; ret
0x000000000018f270 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18f264 ; ret
0x00000000000a211a : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000ab80b : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000016425d : xor eax, eax ; mov qword ptr [rip + 0x89902], rsi ; ret
0x00000000000d3548 : xor eax, eax ; mov qword ptr [rsp + 0x50], r12 ; call rbx
0x0000000000049f99 : xor eax, eax ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000049f8e : xor eax, eax ; mov rax, r8 ; ret
0x0000000000147d29 : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000014b16e : xor eax, eax ; mov rdi, rbx ; call rcx
0x0000000000150e0b : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000a3b1f : xor eax, eax ; pop r12 ; pop r13 ; ret
0x00000000001302eb : xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000014b3b0 : xor eax, eax ; pop rbp ; jmp rdx
0x0000000000029697 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000093241 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004464a : xor eax, eax ; pop rbp ; ret
0x0000000000149c06 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000f1cae : xor eax, eax ; pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000009ce71 : xor eax, eax ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x000000000004a558 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000090a6e : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096786 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004601f : xor eax, eax ; pop rbx ; ret
0x0000000000044378 : xor eax, eax ; ret
0x00000000000ad81e : xor eax, eax ; sub eax, ecx ; ret
0x00000000001112b8 : xor eax, eax ; syscall
0x000000000012ef4c : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x12ef69 ; pop rbx ; ret
0x000000000008fe24 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008fe34 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000015a3d1 : xor eax, eax ; test eax, eax ; je 0x15a409 ; mov eax, r8d ; ret
0x000000000015a421 : xor eax, eax ; test eax, eax ; je 0x15a459 ; mov eax, r8d ; ret
0x00000000000c03f0 : xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000093a44 : xor eax, eax ; test rdx, rdx ; jne 0x93a57 ; ret
0x00000000001878c0 : xor eax, eax ; vzeroupper ; ret
0x0000000000197713 : xor eax, ebp ; add rdx, rcx ; jmp rdx
0x000000000004b08c : xor eax, ecx ; ret
0x000000000014d87c : xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000044366 : xor eax, edx ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x44351 ; ret
0x000000000004a607 : xor eax, edx ; sub eax, edx ; ret
0x000000000004a61a : xor eax, edx ; sub rax, rdx ; ret
0x00000000000a2429 : xor eax, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000012217e : xor eax, esi ; dec dword ptr [rbp - 0x77] ; call 0x2e78ec7a
0x00000000000bfa59 : xor ebp, dword ptr [rcx] ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000012232d : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000007471c : xor ebp, ecx ; xchg eax, ebx ; ret
0x0000000000085d07 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000057479 : xor ebx, dword ptr [rip - 0x76b70001] ; ret
0x000000000006f050 : xor ecx, dword ptr [rax - 0x77] ; fiadd dword ptr [rcx + 1] ; retf 0x8948
0x000000000009038e : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011d211 : xor ecx, dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000002fbb0 : xor ecx, dword ptr [rcx - 0x77] ; retf
0x0000000000114bfa : xor ecx, dword ptr [rdx] ; add byte ptr [rcx], dh ; shr al, 0x8c ; ret
0x0000000000105ac6 : xor ecx, ecx ; add rsp, 8 ; mov eax, r9d ; ret
0x0000000000045528 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000d2336 : xor ecx, ecx ; cmp eax, ecx ; jne 0xd2349 ; mov eax, r9d ; ret
0x00000000000c9d30 : xor ecx, ecx ; mov eax, r9d ; ret
0x00000000000718e5 : xor ecx, ecx ; mov edx, r8d ; jmp 0x71902
0x0000000000073d66 : xor ecx, ecx ; mov edx, r8d ; jmp 0x73d83
0x000000000003bef1 : xor ecx, ecx ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x0000000000146ab1 : xor edi, dword ptr [0x30] ; call rax
0x00000000000290db : xor edi, edi ; call 0x25354
0x000000000009aabf : xor edi, edi ; call qword ptr [rax]
0x00000000000e0130 : xor edi, edi ; call rax
0x0000000000072c2a : xor edi, edi ; jmp 0x6ef22
0x00000000000e0145 : xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000027240 : xor edi, edi ; mov eax, edx ; syscall
0x000000000011bb4d : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000117050 : xor edi, edi ; syscall
0x00000000000718e2 : xor edi, edi ; xor r9d, r9d ; mov edx, r8d ; jmp 0x71905
0x0000000000073d63 : xor edi, edi ; xor r9d, r9d ; mov edx, r8d ; jmp 0x73d86
0x0000000000049bae : xor edx, dword ptr [0x30] ; call rdx
0x000000000011061a : xor edx, edx ; call rax
0x000000000019a1a9 : xor edx, edx ; jmp 0x19a17b
0x0000000000124375 : xor edx, edx ; mov eax, 0x1d ; syscall
0x00000000000e5a51 : xor edx, edx ; mov eax, 0x3d ; syscall
0x0000000000142391 : xor edx, edx ; mov eax, r10d ; ret
0x000000000004b5e8 : xor edx, edx ; mov eax, r9d ; sub rsi, rdi ; syscall
0x000000000011d910 : xor edx, edx ; mov esi, 1 ; call r12
0x0000000000028338 : xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x00000000000bebb3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000087a59 : xor edx, edx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000957d6 : xor edx, edx ; pop rbx ; jmp rax
0x00000000000c070d : xor edx, edx ; push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x000000000011639c : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x0000000000110577 : xor edx, edx ; xor esi, esi ; mov rdi, rbp ; call rax
0x00000000000d5dcd : xor esi, edi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000f3abd : xor esi, esi ; add rdx, rax ; jmp 0xf3ad5
0x0000000000039346 : xor esi, esi ; call 0x25604
0x000000000011cc87 : xor esi, esi ; call r12
0x00000000001300ae : xor esi, esi ; lea edi, [rdi*8 + 2] ; syscall
0x000000000011639e : xor esi, esi ; mov eax, 0x118 ; syscall
0x000000000012ae80 : xor esi, esi ; mov edi, 0x2000004 ; call rax
0x000000000004a2e6 : xor esi, esi ; mov rdi, r9 ; call r8
0x000000000009bead : xor esi, esi ; mov rdi, rbp ; call 0x98107
0x0000000000110579 : xor esi, esi ; mov rdi, rbp ; call rax
0x000000000010468e : xor esi, esi ; ret 0xf02
0x0000000000115fc2 : xor esi, esi ; syscall
0x00000000000290d8 : xor esi, esi ; xor r15d, r15d ; call 0x25357
0x000000000009d2ab : xor esp, ecx ; adc al, 0 ; mov qword ptr [rax], rdi ; ret
0x00000000000e0e9a : xor esp, esp ; jmp 0xe0e6c
0x00000000000d3251 : xor esp, esp ; mov rax, r12 ; pop r12 ; ret
0x00000000001104c9 : xor esp, esp ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000037b74 : xor esp, esp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009b8cf : xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000019a1a8 : xor r10d, r10d ; jmp 0x19a17c
0x0000000000124374 : xor r10d, r10d ; mov eax, 0x1d ; syscall
0x00000000000e5a50 : xor r10d, r10d ; mov eax, 0x3d ; syscall
0x0000000000142390 : xor r10d, r10d ; mov eax, r10d ; ret
0x00000000000e0e99 : xor r12d, r12d ; jmp 0xe0e6d
0x00000000000d3250 : xor r12d, r12d ; mov rax, r12 ; pop r12 ; ret
0x00000000000290d7 : xor r14d, r14d ; xor r15d, r15d ; call 0x25358
0x00000000000290da : xor r15d, r15d ; call 0x25355
0x0000000000072c29 : xor r15d, r15d ; jmp 0x6ef23
0x00000000000fca3e : xor r8b, r13b ; retf
0x0000000000197712 : xor r8d, r13d ; add rdx, rcx ; jmp rdx
0x00000000000282ca : xor r8d, r8d ; call rbx
0x0000000000131af7 : xor r8d, r8d ; cmp dword ptr fs:[rcx], 0xb ; jne 0x131ad2 ; jmp 0x131ac2
0x00000000000c0c4b : xor r8d, r8d ; lea r9, [rsp + 0x28] ; call rbx
0x0000000000117803 : xor r8d, r8d ; mov eax, 0x127 ; syscall
0x00000000001178c3 : xor r8d, r8d ; mov eax, 0x128 ; syscall
0x00000000001179a3 : xor r8d, r8d ; mov eax, 0x147 ; syscall
0x0000000000117b03 : xor r8d, r8d ; mov eax, 0x148 ; syscall
0x0000000000123756 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000123536 : xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000000e5b43 : xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x000000000015a700 : xor r8d, r8d ; mov eax, r8d ; ret
0x0000000000049f98 : xor r8d, r8d ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000049f8d : xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000c9d2f : xor r9d, r9d ; mov eax, r9d ; ret
0x00000000000718e4 : xor r9d, r9d ; mov edx, r8d ; jmp 0x71903
0x0000000000073d65 : xor r9d, r9d ; mov edx, r8d ; jmp 0x73d84
0x000000000011644a : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000027212 : xor rax, qword ptr [0x30] ; call rax
0x0000000000027521 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000027211 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000027520 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000b4f39 : xor rax, rax ; ret
0x000000000004a619 : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000114bf9 : xor rcx, qword ptr [r10] ; add byte ptr [rcx], dh ; shr al, 0x8c ; ret
0x0000000000146ab0 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000146aaf : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000049bad : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000049bac : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 22224
