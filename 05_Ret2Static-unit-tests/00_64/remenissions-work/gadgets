Gadgets information
============================================================
0x00000000004ac7b9 : adc al, 0 ; add ah, dl ; push -0xa ; call qword ptr [rax]
0x000000000043d1ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d259 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048cd6d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047db5a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000427108 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042d635 : adc al, 0x13 ; jmp rdx
0x00000000004258f5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048ca8a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e881 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004af090 : adc al, 0x3d ; add byte ptr [rax], al ; sbb al, 0x97 ; clc ; jmp qword ptr [rsi]
0x00000000004445c0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000471a38 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043e680 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043cdae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042d631 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d230 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004244f7 : adc al, 0xa ; jmp r10
0x0000000000425a63 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000446b3f : adc al, 0xe ; cmp rdi, rdx ; jb 0x446b52 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000429eda : adc al, 0xe ; sub eax, edx ; ret
0x000000000042bbaa : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000403f1f : adc al, 0xf ; retf 0xfa83
0x000000000041256b : adc al, 0xf6 ; ret 0x7420
0x000000000048ce0d : adc al, 0xf7 ; ret
0x0000000000494099 : adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x0000000000494155 : adc al, 0xfa ; call rdx
0x00000000004940d5 : adc al, 0xfa ; jmp rsi
0x0000000000424116 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000494000 : adc al, ah ; stc ; jmp rax
0x0000000000494c70 : adc al, bh ; cli ; jmp qword ptr [rax]
0x000000000043d397 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d401 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428ab8 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494374 : adc al, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x12fffa06]
0x000000000042445a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000493aa9 : adc bh, cl ; call rax
0x00000000004aaef9 : adc bh, dh ; push rsp ; adc esi, edi ; call rsp
0x0000000000494165 : adc bh, dl ; call qword ptr [rdx]
0x00000000004940a9 : adc bh, dl ; call rax
0x00000000004940a5 : adc bh, dl ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x00000000004940e5 : adc bh, dl ; jmp qword ptr [rsi]
0x00000000004942a5 : adc bh, dl ; jmp rax
0x0000000000440a85 : adc bl, ch ; call 0xffffffffc41493da
0x00000000004409a5 : adc bl, ch ; call 0xffffffffc43c92fa
0x0000000000482992 : adc bl, ch ; jno 0x4829e8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000494c18 : adc bl, dh ; cli ; jmp qword ptr [rax]
0x0000000000443ef6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000443f67 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000443ec7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000443ef5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047ee2a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000418df5 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004833fe : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045bc39 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000483c13 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045ae55 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045b636 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x00000000004818ef : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004111f2 : adc byte ptr [r8 + 1], r9b ; ret
0x00000000004183df : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047bf2f : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041121d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042ade6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000443d1a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000483c0d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041e663 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041a99c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041ad18 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000423656 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000004818f0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412c6e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004111f3 : adc byte ptr [rax + 1], cl ; ret
0x00000000004105f7 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000489d6a : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044ab57 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000400e1e : adc byte ptr [rax - 0x39], cl ; ret 0
0x00000000004756a5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000415453 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x000000000048890f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409509 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406018
0x000000000041c5fd : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044bc55 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458558 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004706c7 : adc byte ptr [rax - 0x77], cl ; jo 0x4706e5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470687 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000047068b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000421e0f : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041d9d1 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000004183e0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000470af0 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000416bbf : adc byte ptr [rax - 0x78], al ; jl 0x416be1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000411043 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000440c67 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000440ca3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400ff0 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000419493 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455238 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044a759 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004940b8 : adc byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000047f6b9 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x47f711 ; mov esi, ebx ; syscall
0x000000000043ce42 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000429f3a : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043e958 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043ec4c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d5a1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b3ae8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jo 0x4b3a7e ; add byte ptr [rax], al ; nop ; retf
0x00000000004496b3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000447e1c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000427588 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043ae58 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048dd38 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048ab98 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045bbe9 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000493dd8 : adc byte ptr [rbp - 0x490f0007], dh ; stc ; call rax
0x00000000004138a4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410463 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000418df6 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3527 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044bc63 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044bc62 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000417fc2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000470bbe : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406fd0 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x000000000041121e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000411d20 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000471cc3 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000493d34 : adc byte ptr [rcx + rdi*8 - 0x64a0f01], dh ; call rax
0x0000000000493dc0 : adc byte ptr [rcx - 0x451f0007], bh ; stc ; jmp rax
0x000000000044abc2 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048a79f : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048a5ce : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044a5e1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000418d47 : adc byte ptr [rcx - 0x7d], al ; ret
0x00000000004827e4 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045bbd1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x0000000000429f6d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000048224a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448779 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000484eb0 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000417fc5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000411b67 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000493d0c : adc byte ptr [rdi - 0x4da70007], 0xf9 ; jmp qword ptr [rax]
0x0000000000493e50 : adc byte ptr [rdi - 0x643f0007], 0xf9 ; call qword ptr [rax]
0x0000000000403f0f : adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004833ff : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045bc3a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x00000000004447d3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a351 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a441 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a261 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aca9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042a801 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000429f91 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042a9e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a171 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042abc1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aad1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a413 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a503 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a323 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a081 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a233 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a053 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a143 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f63 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045ae56 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045b637 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000449b49 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000483ac1 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x0000000000482dfd : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004acbd3 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042db29 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000494ae4 : adc byte ptr [rdx - 6], dl ; jmp qword ptr [rax]
0x000000000042ca6b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044676f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c91a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042bf15 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c315 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c2e9
0x000000000042c393 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c367
0x000000000042c825 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7f9
0x000000000042c8a3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c877
0x000000000042c310 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c2ee
0x000000000042c38e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c36c
0x000000000042c820 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7fe
0x000000000042c89e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c87c
0x0000000000424645 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438b6b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000493e3c : adc byte ptr [rsi - 0x47ff0007], dh ; stc ; call rax
0x000000000042403a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048f204 : adc cl, 0x22 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000415456 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045d11f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c21a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440995 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000049436c : adc cl, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x12fffa07]
0x000000000045d122 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485aea : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045bef5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494364 : adc cl, byte ptr [rcx] ; cli ; call qword ptr [rdx + 0x12fffa08]
0x0000000000493bf4 : adc cl, byte ptr [rdi - 0x701d0007] ; stc ; jmp rdx
0x000000000049435c : adc cl, byte ptr [rdx] ; cli ; call qword ptr [rdx + 0x12fffa09]
0x00000000004ab2b9 : adc dh, bh ; call qword ptr [rcx]
0x00000000004ab2a9 : adc dh, bh ; jmp rax
0x000000000041c04e : adc dh, dh ; ret 0xf0f
0x00000000004940a8 : adc dil, dl ; call rax
0x00000000004940b9 : adc dl, bh ; call qword ptr [rax]
0x00000000004942b5 : adc dl, bh ; jmp qword ptr [rax]
0x0000000000494179 : adc dl, bh ; jmp rdx
0x0000000000494bdc : adc dl, dh ; cli ; jmp qword ptr [rax]
0x000000000046fc3b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045a7fd : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041120f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000048a7ef : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040511f : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000471254 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043ec4b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d537 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eb4f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000427408 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045ae65 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000446d98 : adc dword ptr [rbx], eax ; ret
0x0000000000446d11 : adc dword ptr [rbx], esp ; ret
0x0000000000438497 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000446d0c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000489456 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000438132 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004380f6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f03e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f014
0x0000000000446d93 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446af3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000446c75 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000446c7a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000446c52 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446c57 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004385f9 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446af0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000450de2 : adc dword ptr [rdi], ecx ; retf 0xd285
0x00000000004468ec : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000479a4e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000446a1f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446abc : adc dword ptr [rsi + 7], edx ; ret
0x00000000004468be : adc dword ptr [rsi - 1], edx ; ret
0x000000000048aa16 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d536 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424114 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000423460 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x00000000004242f0 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000424085 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x00000000004233f9 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045a7d9 : adc eax, 0x2602da ; je 0x45a7f0 ; ret
0x000000000044d037 : adc eax, 0x26ba7c ; pop rbx ; ret
0x0000000000423430 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000418ce4 : adc eax, 0x2a0b47 ; ret
0x00000000004a7844 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x0000000000473fdb : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047b802 : adc eax, 0x4000003 ; ret
0x000000000047b752 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000042353a : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x00000000004a4a74 : adc eax, 0x78fffd88 ; jle 0x4a4a7f ; call qword ptr [rax]
0x000000000043d0c1 : adc eax, 0x83480000 ; ret 0xe910
0x00000000004692b5 : adc eax, 0x83fffffd ; ret
0x0000000000478901 : adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004287d8 : adc eax, 0x894d0000 ; retf
0x000000000048c6dd : adc eax, 0x8b48fff8 ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000416bc3 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x00000000004744aa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004243b4 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000424274 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000447944 : adc eax, 0xf880272 ; ret
0x0000000000473915 : adc eax, 0xfffd41d6 ; cmove rax, rdx ; ret
0x000000000043e9ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000427288 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004233fb : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000483f79 : adc eax, eax ; ret
0x00000000004840b6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a74e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000412897 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004756ac : adc ebx, esi ; ret
0x0000000000416dda : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ea41 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000457524 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000493aa5 : adc ecx, edi ; call qword ptr [rax - 0x2f0006ee]
0x000000000045219b : adc ecx, edi ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047ecce : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047ed6b : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000493aad : adc edi, ecx ; call qword ptr [rax]
0x00000000004940e1 : adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x000000000049421d : adc edi, edx ; call rsp
0x0000000000494219 : adc edi, edx ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000049409d : adc edi, edx ; jmp qword ptr [rax]
0x00000000004aaf29 : adc edi, esi ; call rsp
0x00000000004942b1 : adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x00000000004940f1 : adc edx, edi ; call rsi
0x00000000004940ed : adc edx, edi ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x00000000004940f0 : adc edx, r15d ; call rsi
0x00000000004a89fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004161a3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048dbac : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412569 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004aaefd : adc esi, edi ; call rsp
0x00000000004ab2c9 : adc esi, edi ; jmp qword ptr [rcx]
0x0000000000410370 : adc esi, esi ; ret 0x7520
0x0000000000438496 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000438131 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004380f5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004385f8 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446a1e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446abb : adc qword ptr [rsi + 7], rdx ; ret
0x00000000004468bd : adc qword ptr [rsi - 1], rdx ; ret
0x000000000049421c : adc r15d, edx ; call rsp
0x00000000004840b5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004ab2c8 : adc rsi, rdi ; jmp qword ptr [rcx]
0x00000000004b125f : add ah, ah ; pop rsi ; add byte ptr [rax], al ; in al, dx ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x0000000000447d6e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000447e4b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447db9 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004af3c3 : add ah, bh ; jp 0x4af3c4 ; call rsp
0x0000000000493f14 : add ah, bl ; stc ; jmp rax
0x00000000004a8a27 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x0000000000446a1a : add ah, byte ptr [rdx - 0xf] ; jl 0x446a6f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b2432 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x000000000045a7db : add ah, byte ptr [rsi] ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000004b1263 : add ah, ch ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x0000000000400a69 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004b3acb : add ah, dh ; retf 0xfffc
0x00000000004ab83b : add ah, dh ; xchg eax, edi ; cmc ; call rsp
0x00000000004ad54f : add ah, dl ; and dword ptr [rax], eax ; add byte ptr [rsi + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x00000000004b0f6b : add ah, dl ; je 0x4b0f6d ; jmp rax
0x00000000004ac7bb : add ah, dl ; push -0xa ; call qword ptr [rax]
0x00000000004b3a1b : add ah, dl ; ret
0x00000000004ab839 : add al, 0 ; add ah, dh ; xchg eax, edi ; cmc ; call rsp
0x00000000004ab825 : add al, 0 ; add al, ch ; xchg eax, edi ; cmc ; call qword ptr [rdx]
0x0000000000452e63 : add al, 0 ; add bh, dh ; ret 0
0x0000000000452e57 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000456b5f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000410d90 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048bdbd : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042a8c7 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046ef56 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043f86f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a8f5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048dcd0 : add al, 0 ; add byte ptr [rax], al ; jne 0x48dcf7 ; ret
0x0000000000474533 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044920f : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000428188 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000472250 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409fe1 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040abe4 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409ea0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424065 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x00000000004010ae : add al, 0 ; lea rdi, [rsp + 0x60] ; call 0x40dac9
0x000000000044bcc2 : add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000448e91 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000447d15 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000004756ab : add al, 0x11 ; ret
0x0000000000447e04 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004258f1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042588a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004868e0 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048a917 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048a61b : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489814 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045a83a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000483ecb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x483f17 ; leave ; ret
0x000000000040e947 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000041935f : add al, 0x2a ; add bl, dh ; ret
0x0000000000494944 : add al, 0x2b ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x000000000047307e : add al, 0x31 ; ret
0x0000000000472f7a : add al, 0x37 ; ret
0x000000000041765f : add al, 0x3a ; ret
0x00000000004a6b06 : add al, 0x3d ; retf
0x000000000047f5a6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f55a ; xor eax, eax ; ret
0x000000000044442b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000443939 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000044394b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048ce20 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000043503a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000442179 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000473354 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e336 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e2e4 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000473c18 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000045619a : add al, 0x4d ; cmp ebp, ebx ; jb 0x456210 ; mov rdx, rax ; jmp 0x456167
0x0000000000443947 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442187 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000457522 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000004537e9 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047d3aa : add al, 0x75 ; retf
0x000000000046e738 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043cdab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043e683 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401f07 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448348 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448338 ; ret
0x000000000043a9b7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d109 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048bcba : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466879 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474009 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048c5bb : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046e5cc : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048ac69 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046ed68 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443936 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000442176 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048aa43 : add al, 0x88 ; add rax, r8 ; jmp rax
0x0000000000457c06 : add al, 0x89 ; retf
0x0000000000487c59 : add al, 0x89 ; retf 0xeac0
0x000000000044834b : add al, 0x8a ; je 0x448335 ; ret
0x0000000000447dd3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c1f3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000448e95 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047bd4f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047c677 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000416ce7 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000447d19 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046b94d : add al, 0xc6 ; jmp rax
0x0000000000460b12 : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046116a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460ac8 : add al, 0xc7 ; jmp rax
0x000000000046b988 : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x0000000000458e11 : add al, 0xe8 ; test rax, rax ; je 0x458e21 ; call rax
0x0000000000454af0 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004655ad : add al, 0xe9 ; retf 0xfffb
0x000000000045652c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004848d8 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000429ed6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000040496a : add al, 0xf ; retf
0x000000000044682b : add al, 0xf ; sub rax, rsi ; ret
0x00000000004353a3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044950b : add al, 0xf3 ; ret
0x000000000046057e : add al, 0xf8 ; jmp rax
0x0000000000494309 : add al, 0xfa ; call qword ptr [rax]
0x00000000004b080d : add al, 0xfa ; jmp qword ptr [rdx]
0x0000000000494389 : add al, 0xfa ; jmp rdx
0x000000000040ef67 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d177 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000463098 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000043fd9d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046b949 : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000043ffb8 : add al, 7 ; ret
0x0000000000425a5f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b52bf : add al, ah ; test ebp, edi ; call qword ptr [rbx]
0x00000000004b124f : add al, ah ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004a361f : add al, al ; mov al, 0xfc ; call rax
0x000000000049ed07 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000494c6c : add al, bh ; cli ; call qword ptr [rax]
0x0000000000447e65 : add al, bh ; jg 0x447e67 ; int1 ; mov eax, eax ; ret
0x00000000004b1273 : add al, bh ; pop rsi ; add byte ptr [rax], al ; clc ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004af4c7 : add al, bh ; test cl, bh ; call qword ptr [rbx]
0x00000000004b1277 : add al, bh ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1237 : add al, bl ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x000000000040d702 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000440991 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000400feb : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045522a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000454e5d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047abb0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041db7d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000045f403 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042add2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000487d0e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045a8cd : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000400fd5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468744 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000423013 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047bf2a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478065 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046fb2d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000447354 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042131a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004545fb : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042aaa7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e441 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aad5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d703 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045a7c2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047d826 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a2e9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040db8c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000004742c4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000048539c : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x000000000048789a : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000428308 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000445dd4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004107f6 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485614 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046c724 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044a4f0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041a9e6 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000424013 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x00000000004233fc : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d405 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x0000000000485834 : add al, byte ptr [rax] ; mov edx, 0xba ; call 0x401ab9
0x000000000048aa12 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047bd4b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047c673 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484a5a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d04a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d03e
0x000000000044abc5 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044ba1e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004abbdd : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000494384 : add al, byte ptr [rip + 0x472fffa] ; cli ; jmp rdx
0x00000000004243e1 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x00000000004241cd : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x0000000000452199 : add al, ch ; adc ecx, edi ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000041e8bb : add al, ch ; call rax
0x00000000004af0f7 : add al, ch ; cmc ; clc ; call qword ptr [rax]
0x0000000000454b6d : add al, ch ; cmp eax, 0x89fffacf ; retf 0xe283
0x000000000046a1cd : add al, ch ; lea esp, [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046f75b : add al, ch ; pop rdi ; ret 0xfffd
0x0000000000448e5e : add al, ch ; pop rsp ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000463707 : add al, ch ; push rbx ; retf
0x00000000004b0a63 : add al, ch ; push rsi ; add byte ptr [rax], al ; sub byte ptr [rcx], ah ; cli ; call qword ptr [rdi]
0x000000000041f327 : add al, ch ; ret
0x0000000000420df8 : add al, ch ; ret 0x2ab
0x000000000041dff8 : add al, ch ; ret 0x2d9
0x0000000000454be8 : add al, ch ; ret 0xface
0x0000000000485988 : add al, ch ; ret 0xffc7
0x00000000004022ff : add al, ch ; retf
0x0000000000478880 : add al, ch ; retf 0x98
0x0000000000400b70 : add al, ch ; retf 0xf6
0x0000000000486e40 : add al, ch ; retf 0xf98e
0x000000000045f6e0 : add al, ch ; retf 0xfa23
0x0000000000412288 : add al, ch ; retf 0xfee1
0x0000000000478a60 : add al, ch ; retf 0xffdc
0x0000000000415046 : add al, ch ; retf 0xfffe
0x0000000000455481 : add al, ch ; sub esi, eax ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004ab827 : add al, ch ; xchg eax, edi ; cmc ; call qword ptr [rdx]
0x00000000004ad743 : add al, cl ; and eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov ch, 0xf6 ; call qword ptr [rdx]
0x00000000004b0443 : add al, cl ; push rax ; add byte ptr [rax], al ; fild word ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000004adfc7 : add al, cl ; push rsi ; jmp rsi
0x00000000004b376b : add al, dh ; add dword ptr [rax], 0 ; fcmove st(0), st(5) ; hlt ; jmp qword ptr [rcx]
0x00000000004ad66b : add al, dh ; and al, byte ptr [rax] ; add al, dh ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004ad66f : add al, dh ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004b4d4b : add al, dl ; cdq ; add byte ptr [rax], al ; and byte ptr [rdx - 3], bl ; call qword ptr [rdx]
0x00000000004b124b : add al, dl ; pop rsi ; add byte ptr [rax], al ; loopne 0x4b11ef ; cli ; call qword ptr [rcx]
0x00000000004b064b : add al, dl ; push rdx ; add byte ptr [rax], al ; nop ; sti ; std ; jmp qword ptr [rdx]
0x00000000004af49f : add al, dl ; test cl, bh ; call qword ptr [rdx]
0x00000000004b3a3e : add bh, ah ; ret
0x000000000044e49f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e757 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea3f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000400fed : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004854df : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004b0447 : add bh, bl ; add ch, dh ; jmp qword ptr [rbx]
0x0000000000493f9c : add bh, bl ; stc ; jmp rax
0x0000000000484149 : add bh, byte ptr [rax + 1] ; ret
0x00000000004842a6 : add bh, byte ptr [rax + 2] ; ret
0x000000000044922b : add bh, byte ptr [rax - 1] ; ret
0x00000000004461a2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004aae2d : add bh, dh ; call rsp
0x0000000000400dba : add bh, dh ; ret 0
0x0000000000452e59 : add bh, dh ; ret 0xf800
0x000000000040f07f : add bh, dh ; ret 0xffef
0x00000000004742c1 : add bl, al ; mov eax, 2 ; ret
0x0000000000487d2a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000493fb4 : add bl, bl ; stc ; jmp rax
0x00000000004632c9 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x463262 ; ret
0x0000000000489c3b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x00000000004857a9 : add bl, ch ; ret
0x000000000040f318 : add bl, ch ; ret 0x1f0f
0x000000000048aa13 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a6f : add bl, dh ; ret
0x000000000041acde : add bl, sil ; ret
0x000000000044a533 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000455053 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045503e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455068 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000482405 : add byte ptr [r8 + 0x39], r9b ; retf
0x0000000000481230 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004724f6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455005 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e13a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004af4c5 : add byte ptr [r8], al ; clc ; test cl, bh ; call qword ptr [rbx]
0x00000000004afc89 : add byte ptr [r8], al ; cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; stc ; call rsi
0x00000000004b02c5 : add byte ptr [r8], r8b ; sub bl, bl ; stc ; jmp qword ptr [rax]
0x000000000047540b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000044bcc3 : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004b2a7f : add byte ptr [rax + 0x15], dh ; cld ; jmp qword ptr [rax]
0x000000000042310f : add byte ptr [rax + 0x16], bh ; ret
0x000000000044917f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000044917e : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044a26f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004881cf : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000411e10 : add byte ptr [rax + 0x29], cl ; ret
0x00000000004525e1 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000453147 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465a88 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000476968 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047a53a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000421d44 : add byte ptr [rax + 0x29], cl ; retf
0x000000000045522c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000464e39 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e4e0 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004af513 : add byte ptr [rax + 0x38000041], bl ; xchg cl, bh ; call qword ptr [rbx]
0x00000000004b1423 : add byte ptr [rax + 0x38000060], ch ; idiv ch ; call rdx
0x000000000040ea1f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048ac13 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000419cef : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000412def : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048aca8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047abb2 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041cbb0 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x0000000000477f0e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000482406 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042da16 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000043430f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041db7f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000041052d : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000446948 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042d536 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000447c53 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000447a90 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000485578 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004aedd3 : add byte ptr [rax + 0x3a], bl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 9], dl ; jmp qword ptr [rbx]
0x00000000004af0f3 : add byte ptr [rax + 0x3d], bh ; add byte ptr [rax], al ; call 0x114ae9fa
0x00000000004af20b : add byte ptr [rax + 0x4000003e], dl ; stc ; jmp qword ptr [rbx]
0x00000000004b0f2b : add byte ptr [rax + 0x4000005b], dh ; std ; jmp qword ptr [rdi]
0x00000000004aadc5 : add byte ptr [rax + 0x40], al ; mov ah, bh ; std ; jmp rax
0x00000000004af4c3 : add byte ptr [rax + 0x41], cl ; add byte ptr [rax], al ; clc ; test cl, bh ; call qword ptr [rbx]
0x00000000004af20f : add byte ptr [rax + 0x48], al ; stc ; jmp qword ptr [rbx]
0x00000000004afbf3 : add byte ptr [rax + 0x48], bh ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x00000000004496b6 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004afff3 : add byte ptr [rax + 0x4c], bh ; add byte ptr [rax], al ; call 0x134af9bf
0x00000000004b02c3 : add byte ptr [rax + 0x4f], cl ; add byte ptr [rax], al ; sub bl, bl ; stc ; jmp qword ptr [rax]
0x00000000004b11bb : add byte ptr [rax + 0x5e], al ; add byte ptr [rax], al ; mov al, 0x90 ; cli ; call qword ptr [rdx]
0x00000000004afc0b : add byte ptr [rax + 0x60000048], dl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x000000000040d22d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046e735 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401f04 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046ed65 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000448e92 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000447d16 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459367 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048c6e3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000468435 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000047185f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000046f233 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045d881 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004751cf : add byte ptr [rax + 0x66], bh ; syscall
0x00000000004751ef : add byte ptr [rax + 0x68], bh ; syscall
0x00000000004751df : add byte ptr [rax + 0x6b], bh ; syscall
0x00000000004751ff : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004adb1b : add byte ptr [rax + 0x70000027], ah ; retf 0xfff6
0x0000000000489453 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000044098f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b28db : add byte ptr [rax + 0x75], ah ; add byte ptr [rax], al ; nop ; or al, 0xfc ; jmp qword ptr [rax]
0x00000000004443cf : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004b2cf3 : add byte ptr [rax + 0x79], bh ; add byte ptr [rax], al ; test al, 0x24 ; cld ; jmp qword ptr [rcx]
0x000000000044a23f : add byte ptr [rax + 0xa], bh ; syscall
0x000000000044a20f : add byte ptr [rax + 0xb], bh ; syscall
0x000000000044ba01 : add byte ptr [rax + 0xca], bh ; syscall
0x0000000000448ef4 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040db8f : add byte ptr [rax + 0xe], bh ; syscall
0x0000000000424339 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000447de7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041516f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472ee5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044f87f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041c964 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047ad46 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000423484 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412b1a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041da13 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047ad95 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000447d5a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004233fd : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004240fd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453c78 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048410c : add byte ptr [rax + 1], bh ; ret
0x00000000004495cf : add byte ptr [rax + 1], bh ; syscall
0x000000000042add4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410d92 : add byte ptr [rax + 1], cl ; ret
0x0000000000483318 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000487d10 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000004343cd : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044c840 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000402e30 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000450705 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484315 : add byte ptr [rax + 2], bh ; ret
0x000000000044987f : add byte ptr [rax + 3], bh ; syscall
0x00000000004b43af : add byte ptr [rax + 6], ah ; std ; jmp qword ptr [rdx]
0x00000000004b43c7 : add byte ptr [rax + 6], bh ; std ; jmp rdx
0x00000000004495ff : add byte ptr [rax + 8], bh ; syscall
0x00000000004495fe : add byte ptr [rax + 8], dil ; syscall
0x0000000000481231 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000475df0 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049dcab : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004af437 : add byte ptr [rax + rax*2 - 0x7c2c0000], bh ; stc ; call qword ptr [rdx]
0x00000000004af3bf : add byte ptr [rax + rax*2], al ; add ah, bh ; jp 0x4af3c8 ; call rsp
0x00000000004500d3 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000047224f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424064 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041d8bb : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000004738f7 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000403a87 : add byte ptr [rax + rcx + 0x48], dh ; mov edi, ebp ; call 0x41fd18
0x000000000045a7dd : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045a8cf : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000049ee57 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000046eda7 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047b604 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000041cdcf : add byte ptr [rax - 0x17], dl ; ret
0x00000000004ab823 : add byte ptr [rax - 0x17fffffc], ch ; xchg eax, edi ; cmc ; call qword ptr [rdx]
0x00000000004af0cf : add byte ptr [rax - 0x26], ah ; clc ; call qword ptr [rax]
0x00000000004b1233 : add byte ptr [rax - 0x27ffffa2], bh ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x0000000000400fd7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc03 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000464e2b : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d10f : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dbb7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000423015 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000467db5 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047451f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004744ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000047455f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047450f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047454f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045a9cf : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000458529 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000458500 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000457e60 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482305 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004b002f : add byte ptr [rax - 0x45], al ; stc ; call qword ptr [rcx]
0x0000000000493e40 : add byte ptr [rax - 0x462f0007], bh ; stc ; call rax
0x000000000046120f : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b154f : add byte ptr [rax - 0x4f], al ; cli ; call qword ptr [rbx]
0x00000000004b1567 : add byte ptr [rax - 0x4f], cl ; cli ; call qword ptr [rax]
0x00000000004afc0f : add byte ptr [rax - 0x5a], ah ; stc ; jmp qword ptr [rcx]
0x00000000004afbf7 : add byte ptr [rax - 0x5a], cl ; stc ; jmp qword ptr [rcx]
0x00000000004b52bb : add byte ptr [rax - 0x61], al ; add byte ptr [rax], al ; loopne 0x4b524f ; std ; call qword ptr [rbx]
0x00000000004b43c3 : add byte ptr [rax - 0x70], cl ; add byte ptr [rax], al ; js 0x4b43d8 ; std ; jmp rdx
0x0000000000454dfa : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000456f7d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044cfff : add byte ptr [rax - 0x73], cl ; add eax, 0x26d2f9 ; ret
0x0000000000456f9b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000456fb9 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000477bb6 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000482587 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041c04a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041e65f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041a998 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048142b : add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000046b42b : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b9ed ; jmp rax
0x000000000047bf2c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041948f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485ae7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048a618 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461167 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460ac5 : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046057b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000045767f : add byte ptr [rax - 0x75], cl ; add eax, 0x2647f1 ; ret
0x000000000044f11f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d801 ; ret
0x00000000004182bf : add byte ptr [rax - 0x75], cl ; add eax, 0x2a0e59 ; ret
0x000000000040dedb : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044e55f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004224ef : add byte ptr [rax - 0x75], cl ; je 0x422521 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b26b : add byte ptr [rax - 0x75], cl ; jl 0x45b29c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040e972 : add byte ptr [rax - 0x75], cl ; js 0x40e99c ; call rdx
0x0000000000471b4f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486830 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401dd3 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000400e9d : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042ef5f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482682 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000411f2f : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000470aed : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004845a6 : add byte ptr [rax - 0x77], cl ; add eax, 0x237aba ; ret
0x000000000041935a : add byte ptr [rax - 0x77], cl ; add eax, 0x2a04fe ; ret
0x0000000000418e55 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0993 ; ret
0x0000000000418e2d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a09b3 ; ret
0x0000000000418e0d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a09cb ; ret
0x00000000004125b2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410323 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455006 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004549f0 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000471ca4 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000048b0be : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000040ffa8 : add byte ptr [rax - 0x77], cl ; imul eax ; call rsp
0x00000000004129dc : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x0000000000417eab : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000401781 : add byte ptr [rax - 0x77], cl ; jbe 0x40179b ; syscall
0x000000000044bc6f : add byte ptr [rax - 0x77], cl ; jo 0x44bc99 ; ret
0x000000000047f6bb : add byte ptr [rax - 0x77], cl ; jrcxz 0x47f70f ; mov esi, ebx ; syscall
0x0000000000412703 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000044f9fc : add byte ptr [rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x000000000042316f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040380f : add byte ptr [rax - 0x77], cl ; ret
0x000000000044908b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041d867 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000410e66 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000412d3a : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e48c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449137 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402d7e : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045f938 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041ab1c : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402aff : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004100b8 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000448e63 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048dbdf : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456068 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403113 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000469f77 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f34d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414498 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004490a2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000448ba7 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043ce44 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000429f3c : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045e09b : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000410897 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000455607 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000429e7a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000455db9 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043ccc6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043e83c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000446bb0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481821 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048c7ff : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b2b3 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000040ffef : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004b3aeb : add byte ptr [rax - 0x79], dh ; add byte ptr [rax], al ; nop ; retf
0x000000000048a6f6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047334f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004715ab : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000046cf1d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463079 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000048bdbf : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000048e93e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041f81c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041cc57 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041c8b4 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047f55d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004233bd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401a39 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410eaa : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000461673 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a421 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004166ef : add byte ptr [rax - 0x7d], cl ; jg 0x416735 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041eca2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000471566 : add byte ptr [rax - 0x7d], cl ; js 0x4715a4 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405f1f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044629f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c017 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046ed77 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f19f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455cc4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000048555f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047d82a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045d864 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000429f69 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e2f7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048dbbf : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046ef58 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000423dc0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043cf23 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429f97 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047dae7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041993a : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000421e49 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040d705 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041ca50 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040d765 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000042599f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047348f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041036a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000004891c2 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000041f320 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000041dff1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x000000000045a7c4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000432bcb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b26fb : add byte ptr [rax - 0x7fffff8d], al ; std ; sti ; jmp qword ptr [rbx]
0x00000000004aef0b : add byte ptr [rax - 0x7fffffc5], dl ; retf
0x00000000004b0f2f : add byte ptr [rax - 0xd], al ; std ; jmp qword ptr [rdi]
0x00000000004118ca : add byte ptr [rax - 1], bh ; ret
0x00000000004b26e7 : add byte ptr [rax - 3], ch ; sti ; jmp qword ptr [rbx]
0x0000000000494ae0 : add byte ptr [rax - 6], dl ; call qword ptr [rax]
0x000000000041e8b8 : add byte ptr [rax], 0 ; add al, ch ; call rax
0x000000000046f758 : add byte ptr [rax], 0 ; add al, ch ; pop rdi ; ret 0xfffd
0x000000000041f324 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000420df5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2ab
0x000000000041dff5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x0000000000478a5d : add byte ptr [rax], 0 ; add al, ch ; retf 0xffdc
0x000000000041563a : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000447a8d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004343ca : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000040ffa5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; call rsp
0x00000000004129d9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x0000000000414495 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004353ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000447d9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004180d3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042bc2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004494fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042c191 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b4d4f : add byte ptr [rax], ah ; pop rdx ; std ; call qword ptr [rdx]
0x00000000004af07f : add byte ptr [rax], ah ; xchg eax, edi ; clc ; call qword ptr [rax]
0x00000000004af08e : add byte ptr [rax], al ; adc al, 0x3d ; add byte ptr [rax], al ; sbb al, 0x97 ; clc ; jmp qword ptr [rsi]
0x00000000004b3a19 : add byte ptr [rax], al ; add ah, dl ; ret
0x00000000004a361d : add byte ptr [rax], al ; add al, al ; mov al, 0xfc ; call rax
0x000000000041e8b9 : add byte ptr [rax], al ; add al, ch ; call rax
0x000000000046f759 : add byte ptr [rax], al ; add al, ch ; pop rdi ; ret 0xfffd
0x000000000041f325 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000420df6 : add byte ptr [rax], al ; add al, ch ; ret 0x2ab
0x000000000041dff6 : add byte ptr [rax], al ; add al, ch ; ret 0x2d9
0x0000000000485986 : add byte ptr [rax], al ; add al, ch ; ret 0xffc7
0x00000000004022fd : add byte ptr [rax], al ; add al, ch ; retf
0x000000000047887e : add byte ptr [rax], al ; add al, ch ; retf 0x98
0x0000000000400b6e : add byte ptr [rax], al ; add al, ch ; retf 0xf6
0x0000000000412286 : add byte ptr [rax], al ; add al, ch ; retf 0xfee1
0x0000000000478a5e : add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000045e79e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea3d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004854dd : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004742bf : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000004857a7 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f316 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000041563b : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004af4c2 : add byte ptr [rax], al ; add byte ptr [r8], al ; clc ; test cl, bh ; call qword ptr [rbx]
0x00000000004b02c2 : add byte ptr [rax], al ; add byte ptr [r8], r8b ; sub bl, bl ; stc ; jmp qword ptr [rax]
0x00000000004881cd : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000468798 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465a86 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000476966 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047a538 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000464e37 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e4de : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000041ee8f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048ac11 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000419ced : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000412ded : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048aca6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042da14 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000436e01 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041052b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000447a8e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004496b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000046aeb4 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000047185d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000004751ed : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000004751dd : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000004751fd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004adb19 : add byte ptr [rax], al ; add byte ptr [rax + 0x70000027], ah ; retf 0xfff6
0x00000000004443cd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044a20d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044b9ff : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000448ef2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040db8d : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000447de5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041c962 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000484d22 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000452c62 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041da11 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000447d58 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000473fdd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000453c76 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048410a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004495cd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000482c49 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483316 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004343cb : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000450703 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484313 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000046eda5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000044a061 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc01 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d10d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x00000000004494cd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000458527 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004584fe : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000457e5e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482303 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000456f7b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000456f99 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000456fb7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000481429 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x000000000041948d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e970 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40e99e ; call rdx
0x0000000000401dd1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004182ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004549ee : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000471ca2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000048b0bc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000040ffa6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; call rsp
0x00000000004129da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000040177f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x40179d ; syscall
0x000000000044bc6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44bc9b ; ret
0x000000000042316d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410031 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410e64 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000045fd94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b4ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048dbdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a215 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f34b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414496 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044b062 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045e099 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000429e78 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000455db7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043ccc4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043e83a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048c7fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004b3ae9 : add byte ptr [rax], al ; add byte ptr [rax - 0x79], dh ; add byte ptr [rax], al ; nop ; retf
0x000000000048a6f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000046cf1b : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000405f1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044629d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f19d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048555d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047d828 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042ac83 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048dbbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000047280e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e5e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042acad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042599d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004891c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004343c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004aef09 : add byte ptr [rax], al ; add byte ptr [rax - 0x7fffffc5], dl ; retf
0x00000000004118c8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004a361b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; mov al, 0xfc ; call rax
0x000000000041472b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040ea3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004854db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004182ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000412deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000047185b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045d10b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x00000000004494cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004182eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044bc6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44bc9d ; ret
0x000000000041b4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048dbdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048c7fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044629b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048dbbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000416ed6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049fb32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0022 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f1e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000049fb72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a0062 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f1da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000418c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004464db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000425ceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004245fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004595fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000041286b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000004199eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042231b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004b3ac5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add ah, dh ; retf 0xfffc
0x00000000004744dc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004816cf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ea3c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041995c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004854dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a1b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a0d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004af3be : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; jp 0x4af3c9 ; call rsp
0x0000000000447d57 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048cdc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48cdac ; ret
0x00000000004857a6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485774
0x000000000045fbcd : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004449fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044497c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044498c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044499c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x00000000004449ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x00000000004449bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000004449cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000004449dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000004449ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044496c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x00000000004443cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000443dac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004881cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000004751ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000004751dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000004751fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a20c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041826c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484109 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004495cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484312 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000448c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000004353ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x00000000004816dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004182dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004182ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000480b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000041286c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000447d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004354fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000418c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041142c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000416ed8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a12c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049fb34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0024 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f1e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0b64 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1304 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049fb74 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a0064 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004171ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004494fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000047333c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004447ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000480abc : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004491e4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000484c5d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048dcd1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047555b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481a62 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x00000000004819a2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004575a5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000481bc3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000483ece : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a2fd : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449414 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475429 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x00000000004497a4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a113 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000487fb8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045a91c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484b7a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048ce06 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041ec29 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004b407a : add byte ptr [rax], al ; add byte ptr [rbp - 0x15200000], cl ; cld ; jmp qword ptr [rcx]
0x000000000044b8a8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042ac38 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004577d9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000434c8d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000413e42 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416df4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fba9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048cdc5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046cbad : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000465bba : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000046004b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000411154 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004606bf : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c478 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000469186 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d3f9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004464dd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e0c3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000491cad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000047371d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000049140d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423aad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044af48 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44af57 ; call r12
0x000000000044af78 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44af87 ; call r12
0x0000000000458249 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045efb1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047ae : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479932 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041ca85 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000425ced : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004245fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042b6b0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042b6d6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000004b3ac6 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; hlt ; retf 0xfffc
0x000000000044a1c3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ec52 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042afba : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048cb33 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048cb5b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048d8aa : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004595fd : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000462ff3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040db64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000480c64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000447ce5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043548d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004354fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000453f49 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000447d9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000041286d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042affd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000458549 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000465251 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000476490 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004b2a7a : add byte ptr [rax], al ; add byte ptr [rdi], dh ; add byte ptr [rax + 0x15], dh ; cld ; jmp qword ptr [rax]
0x000000000048cd35 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004af07a : add byte ptr [rax], al ; add byte ptr [rip - 0x68e00000], bh ; clc ; call qword ptr [rax]
0x0000000000484e90 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c192 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004199ed : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042af22 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004b01de : add byte ptr [rax], al ; add byte ptr fs:[rax], r8b ; mov esi, cs ; stc ; jmp qword ptr [rdx]
0x0000000000413a35 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045e9d8 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454876 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000422f84 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048a73e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000475a33 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000469c96 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e4e0 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000450ccc : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000042231d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a1ad : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000445c31 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b3ac7 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add ah, dh ; retf 0xfffc
0x00000000004ab8c2 : add byte ptr [rax], al ; add rax, -0x61e80000 ; cmc ; call rax
0x00000000004744de : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042add3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000004114f2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048cd70 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048449c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048a833 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000415d6b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449309 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044969c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000004014cc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044ae3e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004816d1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004af49a : add byte ptr [rax], al ; and byte ptr [rcx], al ; add al, dl ; test cl, bh ; call qword ptr [rdx]
0x00000000004b4d4e : add byte ptr [rax], al ; and byte ptr [rdx - 3], bl ; call qword ptr [rdx]
0x0000000000447de6 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042affe : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440620 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000472ee4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004af0f6 : add byte ptr [rax], al ; call 0x114ae9f7
0x00000000004ab826 : add byte ptr [rax], al ; call 0x134aadc9
0x00000000004afff6 : add byte ptr [rax], al ; call 0x134af9bc
0x0000000000485839 : add byte ptr [rax], al ; call 0x401ab4
0x000000000046f75a : add byte ptr [rax], al ; call 0x44b9c4
0x000000000040ea3e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048cb39 : add byte ptr [rax], al ; call r14
0x000000000040e94b : add byte ptr [rax], al ; call rax
0x00000000004854de : add byte ptr [rax], al ; call rbx
0x00000000004a1b5e : add byte ptr [rax], al ; call rdi
0x000000000040e885 : add byte ptr [rax], al ; call rdx
0x00000000004a0d0e : add byte ptr [rax], al ; call rsp
0x0000000000447e64 : add byte ptr [rax], al ; clc ; jg 0x447e68 ; int1 ; mov eax, eax ; ret
0x00000000004b1272 : add byte ptr [rax], al ; clc ; pop rsi ; add byte ptr [rax], al ; clc ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004af4c6 : add byte ptr [rax], al ; clc ; test cl, bh ; call qword ptr [rbx]
0x00000000004b1276 : add byte ptr [rax], al ; clc ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004af3c2 : add byte ptr [rax], al ; cld ; jp 0x4af3c5 ; call rsp
0x00000000004af3c1 : add byte ptr [rax], al ; cld ; jp 0x4af3c6 ; call rsp
0x00000000004af3c0 : add byte ptr [rax], al ; cld ; jp 0x4af3c7 ; call rsp
0x0000000000447d91 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000447d59 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000042403c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000423433 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004acd22 : add byte ptr [rax], al ; cmp al, 0x8e ; idiv bh ; retf
0x00000000004b4a96 : add byte ptr [rax], al ; cmp byte ptr [rdi], dh ; std ; jmp qword ptr [rcx]
0x00000000004aedd6 : add byte ptr [rax], al ; cmp byte ptr [rsi - 9], dl ; jmp qword ptr [rbx]
0x00000000004b26fe : add byte ptr [rax], al ; cmp ch, 0xfb ; jmp qword ptr [rbx]
0x00000000004b1426 : add byte ptr [rax], al ; cmp dh, dh ; std ; call rdx
0x00000000004af07b : add byte ptr [rax], al ; cmp eax, 0x97200000 ; clc ; call qword ptr [rax]
0x000000000041f2a7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f278 ; ret
0x00000000004afbf6 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x00000000004afc8a : add byte ptr [rax], al ; cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; stc ; call rsi
0x000000000049dcba : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a1d0e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049ee66 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004b0442 : add byte ptr [rax], al ; enter 0x50, 0 ; fild word ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x000000000049e666 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049ea66 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a1f0e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a210e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a230e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a250e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a270e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a290e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a2b0e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a2d0e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a2f0e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004b376e : add byte ptr [rax], al ; fcmove st(0), st(5) ; hlt ; jmp qword ptr [rcx]
0x00000000004b09d2 : add byte ptr [rax], al ; fcom qword ptr [rdi] ; cli ; call rcx
0x00000000004b0446 : add byte ptr [rax], al ; fild word ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x0000000000400a68 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b3aca : add byte ptr [rax], al ; hlt ; retf 0xfffc
0x00000000004ab83a : add byte ptr [rax], al ; hlt ; xchg eax, edi ; cmc ; call rsp
0x00000000004b125e : add byte ptr [rax], al ; in al, 0x5e ; add byte ptr [rax], al ; in al, dx ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1262 : add byte ptr [rax], al ; in al, dx ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b0ee6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rbx ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4b0ef2 ; call qword ptr [rdx]
0x000000000048d8ab : add byte ptr [rax], al ; ja 0x48d8b8 ; sbb eax, eax ; ret
0x00000000004b2a7b : add byte ptr [rax], al ; ja 0x4b2a87 ; add byte ptr [rax + 0x15], dh ; cld ; jmp qword ptr [rax]
0x0000000000412506 : add byte ptr [rax], al ; je 0x412511 ; ret
0x00000000004240a0 : add byte ptr [rax], al ; je 0x42406f ; ret
0x00000000004738f9 : add byte ptr [rax], al ; je 0x473905 ; ret
0x000000000048cd36 : add byte ptr [rax], al ; je 0x48cd24 ; add rsp, 0x18 ; ret
0x000000000048cdc6 : add byte ptr [rax], al ; je 0x48cdaa ; ret
0x000000000048ce07 : add byte ptr [rax], al ; je 0x48ce18 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b4aca : add byte ptr [rax], al ; je 0x4b4b0a ; std ; jmp rsp
0x00000000004857a8 : add byte ptr [rax], al ; jmp 0x485772
0x000000000044a2eb : add byte ptr [rax], al ; jmp rax
0x0000000000419bce : add byte ptr [rax], al ; jne 0x419be1 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042bc92 : add byte ptr [rax], al ; jne 0x42bba8 ; ret
0x000000000044842d : add byte ptr [rax], al ; jne 0x44845d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004491e5 : add byte ptr [rax], al ; jne 0x449201 ; add rsp, 0x28 ; ret
0x0000000000449415 : add byte ptr [rax], al ; jne 0x449463 ; add rsp, 0x58 ; ret
0x00000000004497a5 : add byte ptr [rax], al ; jne 0x4497fb ; add rsp, 0x68 ; ret
0x000000000044a114 : add byte ptr [rax], al ; jne 0x44a12f ; add rsp, 0x28 ; ret
0x000000000045a91d : add byte ptr [rax], al ; jne 0x45a92e ; add rsp, 0x18 ; ret
0x000000000047542a : add byte ptr [rax], al ; jne 0x47547b ; add rsp, 0x58 ; ret
0x000000000047555c : add byte ptr [rax], al ; jne 0x475583 ; add rsp, 0x38 ; ret
0x00000000004818a8 : add byte ptr [rax], al ; jne 0x4818bb ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004819a3 : add byte ptr [rax], al ; jne 0x4819db ; add rsp, 0x38 ; ret
0x0000000000481a63 : add byte ptr [rax], al ; jne 0x481a96 ; add rsp, 0x68 ; ret
0x0000000000481bc4 : add byte ptr [rax], al ; jne 0x481c06 ; add rsp, 0x78 ; ret
0x0000000000481e93 : add byte ptr [rax], al ; jne 0x481ec6 ; add rsp, 0x68 ; ret
0x0000000000483ecf : add byte ptr [rax], al ; jne 0x483f13 ; leave ; ret
0x0000000000484b7b : add byte ptr [rax], al ; jne 0x484b8c ; add rsp, 0x38 ; ret
0x0000000000484c5e : add byte ptr [rax], al ; jne 0x484c7c ; add rsp, 0x38 ; ret
0x0000000000487429 : add byte ptr [rax], al ; jne 0x487434 ; pop rbx ; ret
0x0000000000487fb9 : add byte ptr [rax], al ; jne 0x487fd4 ; add rsp, 0x38 ; ret
0x000000000048dcd2 : add byte ptr [rax], al ; jne 0x48dcf5 ; ret
0x00000000004b2a7e : add byte ptr [rax], al ; jo 0x4b2a9c ; cld ; jmp qword ptr [rax]
0x00000000004b3aea : add byte ptr [rax], al ; jo 0x4b3a7c ; add byte ptr [rax], al ; nop ; retf
0x00000000004af0f2 : add byte ptr [rax], al ; js 0x4af13c ; add byte ptr [rax], al ; call 0x114ae9fb
0x00000000004afbf2 : add byte ptr [rax], al ; js 0x4afc47 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x00000000004afff2 : add byte ptr [rax], al ; js 0x4b004b ; add byte ptr [rax], al ; call 0x134af9c0
0x00000000004b2cf2 : add byte ptr [rax], al ; js 0x4b2d78 ; add byte ptr [rax], al ; test al, 0x24 ; cld ; jmp qword ptr [rcx]
0x00000000004b43c6 : add byte ptr [rax], al ; js 0x4b43d5 ; std ; jmp rdx
0x00000000004b52ba : add byte ptr [rax], al ; lahf ; add byte ptr [rax], al ; loopne 0x4b5250 ; std ; call qword ptr [rbx]
0x00000000004449fe : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444a0e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444a1e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444a2e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444a3e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044495d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044497e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044498e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044499e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x00000000004449ae : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x00000000004449be : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000004449ce : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000044490a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x00000000004449de : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000004449ee : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044496e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044cffe : add byte ptr [rax], al ; lea rax, [rip + 0x26d2f9] ; ret
0x000000000046b42a : add byte ptr [rax], al ; lea rsi, [rip + 0x24b9ed] ; jmp rax
0x0000000000475a34 : add byte ptr [rax], al ; leave ; ret
0x00000000004b376a : add byte ptr [rax], al ; lock add dword ptr [rax], 0 ; fcmove st(0), st(5) ; hlt ; jmp qword ptr [rcx]
0x00000000004b3b02 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000004b124e : add byte ptr [rax], al ; loopne 0x4b11ec ; cli ; call qword ptr [rcx]
0x00000000004b407e : add byte ptr [rax], al ; loopne 0x4b4071 ; cld ; jmp qword ptr [rcx]
0x00000000004b52be : add byte ptr [rax], al ; loopne 0x4b524c ; std ; call qword ptr [rbx]
0x00000000004b0f2a : add byte ptr [rax], al ; mov al, 0x5b ; add byte ptr [rax], al ; std ; jmp qword ptr [rdi]
0x00000000004b11be : add byte ptr [rax], al ; mov al, 0x90 ; cli ; call qword ptr [rdx]
0x00000000004438de : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000044212e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004125ae : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004443ce : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000443dae : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004b1566 : add byte ptr [rax], al ; mov cl, 0xfa ; call qword ptr [rax]
0x00000000004b154e : add byte ptr [rax], al ; mov cl, 0xfa ; call qword ptr [rbx]
0x00000000004b157a : add byte ptr [rax], al ; mov cl, 0xfa ; call qword ptr [rdx]
0x000000000047164b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418e6c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a0998], eax ; ret
0x0000000000443dbe : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042338e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044a26e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x00000000004881ce : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000004496b5 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004751ce : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000004751ee : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000004751de : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000004751fe : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a23e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044a20e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044ba00 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000004b1232 : add byte ptr [rax], al ; mov eax, 0xd800005e ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x000000000040db8e : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000448ef3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004118c9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048410b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004495ce : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484314 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000417f8e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f14e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f169 ; ret
0x000000000048f37e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f399 ; ret
0x000000000040db59 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e2bf : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000468472 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000465c11 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000443dee : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048cb34 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048cb5c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000448c4e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000434c8e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004353ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bab6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004b01e2 : add byte ptr [rax], al ; mov esi, cs ; stc ; jmp qword ptr [rdx]
0x00000000004ab836 : add byte ptr [rax], al ; mov esp, 0xf4000004 ; xchg eax, edi ; cmc ; call rsp
0x000000000044bc6e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484af8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481820 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488032 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488106 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b284 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048ce5e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484128 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000418e2c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a09b3], rax ; ret
0x0000000000418e0c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a09cb], rax ; ret
0x0000000000401780 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041751e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045a9ce : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000004744fe : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047450e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047451e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047452e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047453e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047454e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000047455e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047c853 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041141e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004816de : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c06e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471b4e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004182de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048cdde : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048ce6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048cece : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048cebe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048ce7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000045767e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2647f1] ; ret
0x000000000044f12e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d801] ; ret
0x00000000004182be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a0e59] ; ret
0x000000000048abae : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000047371e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413994 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048cfd8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410322 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004182ee : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041d8be : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047f6ba : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000446baf : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044af49 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040e971 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000491cae : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000049140e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046ebaf : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004351ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456067 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x456024
0x000000000041ff06 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048d84e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000042316e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004aadc4 : add byte ptr [rax], al ; mov spl, dil ; std ; jmp rax
0x00000000004b0806 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; test byte ptr [rdx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000004b0eea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4b0eee ; call qword ptr [rdx]
0x0000000000480b7e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048ac65 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046ed64 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a00d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459b0e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000041286e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000447d9e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000434e1e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004354fe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043548e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b43c2 : add byte ptr [rax], al ; nop ; add byte ptr [rax], al ; js 0x4b43d9 ; std ; jmp rdx
0x00000000004af20a : add byte ptr [rax], al ; nop ; add byte ptr ds:[rax], al ; stc ; jmp qword ptr [rbx]
0x0000000000400b74 : add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000484f3c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044b94c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000474a6c : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x00000000004b28de : add byte ptr [rax], al ; nop ; or al, 0xfc ; jmp qword ptr [rax]
0x00000000004b3aee : add byte ptr [rax], al ; nop ; retf
0x00000000004b064e : add byte ptr [rax], al ; nop ; sti ; std ; jmp qword ptr [rdx]
0x000000000044bb89 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004afc86 : add byte ptr [rax], al ; or al, 0x49 ; add byte ptr [rax], al ; cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; stc ; call rsi
0x00000000004aef0e : add byte ptr [rax], al ; or bl, 0xf7 ; call rsp
0x00000000004aed16 : add byte ptr [rax], al ; or byte ptr [rbx - 9], dl ; jmp qword ptr [rbx]
0x000000000044a2fe : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400aa6 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465bbb : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004577da : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000413e43 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416df5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fbaa : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d56 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b11ba : add byte ptr [rax], al ; pop rsi ; add byte ptr [rax], al ; mov al, 0x90 ; cli ; call qword ptr [rdx]
0x00000000004ad7e2 : add byte ptr [rax], al ; push 0x18000024 ; mov dh, 0xf6 ; call qword ptr [rsi]
0x00000000004b00e2 : add byte ptr [rax], al ; push 0x1800004d ; ret 0xfff9
0x00000000004b26e2 : add byte ptr [rax], al ; push 0x68000073 ; std ; sti ; jmp qword ptr [rbx]
0x00000000004b3a16 : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, dl ; ret
0x00000000004af0ca : add byte ptr [rax], al ; push rax ; cmp eax, 0xda600000 ; clc ; call qword ptr [rax]
0x00000000004b09ce : add byte ptr [rax], al ; push rsp ; push rsi ; add byte ptr [rax], al ; fcom qword ptr [rdi] ; cli ; call rcx
0x00000000004b4d4a : add byte ptr [rax], al ; rcr byte ptr [rcx + 0x5a200000], 1 ; std ; call qword ptr [rdx]
0x00000000004b124a : add byte ptr [rax], al ; rcr byte ptr [rsi], 1 ; add al, ah ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x0000000000400a6e : add byte ptr [rax], al ; ret
0x0000000000497ee6 : add byte ptr [rax], al ; ret 0
0x000000000049ee5e : add byte ptr [rax], al ; ret 0x10
0x00000000004a0b2e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a12c6 : add byte ptr [rax], al ; ret 0x1d5
0x000000000049fb36 : add byte ptr [rax], al ; ret 0x24
0x00000000004a0026 : add byte ptr [rax], al ; ret 0x33
0x000000000049e65e : add byte ptr [rax], al ; ret 0xa
0x000000000049ea5e : add byte ptr [rax], al ; ret 0xd
0x00000000004a1f02 : add byte ptr [rax], al ; ret 1
0x00000000004a2102 : add byte ptr [rax], al ; ret 2
0x00000000004a2302 : add byte ptr [rax], al ; ret 3
0x00000000004a2502 : add byte ptr [rax], al ; ret 4
0x00000000004a2702 : add byte ptr [rax], al ; ret 5
0x000000000049e206 : add byte ptr [rax], al ; ret 6
0x00000000004a2b02 : add byte ptr [rax], al ; ret 7
0x00000000004a2d02 : add byte ptr [rax], al ; ret 8
0x00000000004a2f02 : add byte ptr [rax], al ; ret 9
0x0000000000497f0a : add byte ptr [rax], al ; retf
0x0000000000497f06 : add byte ptr [rax], al ; retf 0
0x000000000049efbe : add byte ptr [rax], al ; retf 0x11
0x00000000004a0b66 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1306 : add byte ptr [rax], al ; retf 0x1d5
0x000000000049fb76 : add byte ptr [rax], al ; retf 0x24
0x00000000004a0066 : add byte ptr [rax], al ; retf 0x33
0x000000000049e7be : add byte ptr [rax], al ; retf 0xb
0x000000000049ebbe : add byte ptr [rax], al ; retf 0xe
0x000000000049f1de : add byte ptr [rax], al ; retf 1
0x00000000004a2112 : add byte ptr [rax], al ; retf 2
0x00000000004a2312 : add byte ptr [rax], al ; retf 3
0x000000000049e066 : add byte ptr [rax], al ; retf 4
0x00000000004a2712 : add byte ptr [rax], al ; retf 5
0x00000000004a2912 : add byte ptr [rax], al ; retf 6
0x00000000004a2b12 : add byte ptr [rax], al ; retf 7
0x00000000004a2d12 : add byte ptr [rax], al ; retf 8
0x00000000004a2f12 : add byte ptr [rax], al ; retf 9
0x00000000004a24fe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049e906 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004afaaf : add byte ptr [rax], al ; sahf ; stc ; call qword ptr [rbx]
0x00000000004a361e : add byte ptr [rax], al ; sal byte ptr [rax - 0x502f0004], 0xfc ; call rax
0x00000000004af092 : add byte ptr [rax], al ; sbb al, 0x97 ; clc ; jmp qword ptr [rsi]
0x00000000004b1306 : add byte ptr [rax], al ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b4a92 : add byte ptr [rax], al ; sbb byte ptr [rdi + 0x37380000], dl ; std ; jmp qword ptr [rcx]
0x00000000004b154a : add byte ptr [rax], al ; shl byte ptr [rcx], 1 ; add byte ptr [rax - 0x4f], al ; cli ; call qword ptr [rbx]
0x000000000041e93c : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004af20e : add byte ptr [rax], al ; stc ; jmp qword ptr [rbx]
0x00000000004b0f2e : add byte ptr [rax], al ; std ; jmp qword ptr [rdi]
0x00000000004adfc2 : add byte ptr [rax], al ; sub al, 0 ; add al, cl ; push rsi ; jmp rsi
0x00000000004b02c6 : add byte ptr [rax], al ; sub bl, bl ; stc ; jmp qword ptr [rax]
0x00000000004b0a66 : add byte ptr [rax], al ; sub byte ptr [rcx], ah ; cli ; call qword ptr [rdi]
0x00000000004af0a2 : add byte ptr [rax], al ; sub byte ptr [rip - 0x46c80000], bh ; clc ; call qword ptr [rax]
0x000000000042cbdc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000417666 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000004466f1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040db52 : add byte ptr [rax], al ; syscall
0x00000000004b2cf6 : add byte ptr [rax], al ; test al, 0x24 ; cld ; jmp qword ptr [rcx]
0x00000000004b1422 : add byte ptr [rax], al ; test al, 0x60 ; add byte ptr [rax], al ; cmp dh, dh ; std ; call rdx
0x00000000004ab822 : add byte ptr [rax], al ; test al, 4 ; add byte ptr [rax], al ; call 0x134aadcd
0x00000000004b3afe : add byte ptr [rax], al ; test byte ptr [rdi - 0x34540000], al ; cld ; call rdx
0x00000000004b080a : add byte ptr [rax], al ; test byte ptr [rdx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000044b8a9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b4de : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b353a : add byte ptr [rax], al ; xchg eax, esp ; cmp esp, -1 ; retf 0
0x00000000004b4ac6 : add byte ptr [rax], al ; xchg rax, rdi ; add byte ptr [rax], al ; je 0x4b4b0e ; std ; jmp rsp
0x00000000004b43aa : add byte ptr [rax], al ; xor byte ptr [rax + 0x6600000], dl ; std ; jmp qword ptr [rdx]
0x00000000004b26fa : add byte ptr [rax], al ; xor byte ptr [rbx], 0 ; cmp ch, 0xfb ; jmp qword ptr [rbx]
0x00000000004afaaa : add byte ptr [rax], al ; xor byte ptr [rdi], al ; add byte ptr [rax], al ; sahf ; stc ; call qword ptr [rbx]
0x00000000004a495e : add byte ptr [rax], al ; xor eax, dword ptr [rdi + 0x7468fffd] ; std ; jmp qword ptr [rax]
0x000000000045c667 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475986 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ec53 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048cfe5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f206 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004494fe : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042b42a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000449fda : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000004575a6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000004447ae : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b1303 : add byte ptr [rax], bh ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004947a8 : add byte ptr [rax], bh ; cli ; call qword ptr [rax + 0x20fffa37]
0x00000000004b1427 : add byte ptr [rax], bh ; idiv ch ; call rdx
0x0000000000480abe : add byte ptr [rax], bh ; retf 0x850f
0x00000000004af517 : add byte ptr [rax], bh ; xchg cl, bh ; call qword ptr [rbx]
0x00000000004ad7e7 : add byte ptr [rax], bl ; mov dh, 0xf6 ; call qword ptr [rsi]
0x00000000004b00e7 : add byte ptr [rax], bl ; ret 0xfff9
0x00000000004ab8c7 : add byte ptr [rax], bl ; sahf ; cmc ; call rax
0x00000000004b4a93 : add byte ptr [rax], bl ; xchg eax, edi ; add byte ptr [rax], al ; cmp byte ptr [rdi], dh ; std ; jmp qword ptr [rcx]
0x00000000004b0a67 : add byte ptr [rax], ch ; and edx, edi ; call qword ptr [rdi]
0x00000000004b0787 : add byte ptr [rax], ch ; cli ; call qword ptr [rax]
0x00000000004af0a3 : add byte ptr [rax], ch ; cmp eax, 0xb9380000 ; clc ; call qword ptr [rax]
0x00000000004ad747 : add byte ptr [rax], ch ; mov ch, 0xf6 ; call qword ptr [rdx]
0x000000000048b5ae : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230bf9], 8 ; ret
0x000000000048b5b5 : add byte ptr [rax], cl ; ret
0x00000000004ab9df : add byte ptr [rax], dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rax]
0x00000000004afbdf : add byte ptr [rax], dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x000000000044ae3d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004afff5 : add byte ptr [rax], r8b ; call 0x134af9bd
0x000000000042338d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044a26d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x00000000004751cd : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044a23d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x000000000041841d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x0000000000417f8d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000443ddd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004b01e1 : add byte ptr [rax], r8b ; mov esi, cs ; stc ; jmp qword ptr [rdx]
0x0000000000443e1d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041ff05 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400aa5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000048484d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a6d : add byte ptr [rax], r8b ; ret
0x00000000004461ad : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000004491e6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000484c5f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048dcd3 : add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047555d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000044842e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481a64 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x00000000004819a4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000412cea : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004575a7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000481bc5 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000483ed0 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a2ff : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449416 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047542b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416047 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004497a6 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000412327 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000482aff : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000004829ef : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a115 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000487fba : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048742a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045a91e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484b7c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000419bcf : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048ce08 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048cd20 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049ea57 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000477b3f : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 2
0x00000000004671cd : add byte ptr [rbp + rcx*4 + 0x35], cl ; outsb dx, byte ptr [rsi] ; ret 3
0x000000000041ec2b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000471cbe : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000471db8 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000471eb2 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000048539e : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x000000000048789c : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004b407c : add byte ptr [rbp - 0x15200000], cl ; cld ; jmp qword ptr [rcx]
0x000000000048fd64 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044b8aa : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049ed03 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448a87 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000486724 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000048267f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000468939 : add byte ptr [rbp - 0x75], cl ; je 0x46896a ; and byte ptr [rax + 1], cl ; ret
0x0000000000426ead : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d015 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f0f7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000043cda9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004910f3 : add byte ptr [rbx + 0x22871a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000484f5d : add byte ptr [rbx + 0x2371fc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047f945 : add byte ptr [rbx + 0x23a89b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000042350f : add byte ptr [rbx + 0x2988da15], cl ; add bh, dh ; ret 0
0x000000000041fe7f : add byte ptr [rbx + 0x29998e3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000418357 : add byte ptr [rbx + 0x2a39b505], al ; add byte ptr [rcx], al ; ret
0x000000000041994f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004577db : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000443def : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000044391f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x0000000000434c8f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000042160f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000411ff8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000413e44 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405d71 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbab : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459b0f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f14f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044a534 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x00000000004738fa : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000048cdc7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004840a7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000487ec7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000040f16d : add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x000000000044d01f : add byte ptr [rbx - 0x18], dl ; mov edx, 0x89000281 ; ret
0x0000000000447e18 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000447e26 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000447e1f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000447e34 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000447e2d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000447e11 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471b09 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046cbaf : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044808e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000465bbc : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000445dd6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406eb5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040a981 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040abe6 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409d94 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x00000000004107f8 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407c2c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000406fe2 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040704e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000409dff : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409ea2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000412877 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048eb6f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000047b2b7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004a495f : add byte ptr [rbx], dh ; xchg ebp, edi ; ljmp [rax + 0x74] ; std ; jmp qword ptr [rax]
0x000000000046004d : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000466e75 : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000429ec5 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000004111ef : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000411156 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489622 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x00000000004734bf : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fc6d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000418df0 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412860 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000047164c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042d62e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048ac66 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a00e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042be8c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000443c68 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004606c1 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c47a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485616 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000044c29f : add byte ptr [rcx + 0xd8d48ff], cl ; xchg eax, edi ; ret 0x26
0x0000000000469188 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d3fb : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004619ce : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466a27 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046ba3e : add byte ptr [rcx + 1], al ; ret 0x8b48
0x00000000004464df : add byte ptr [rcx + 1], cl ; ret
0x000000000040e0c5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048beb5 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000418dcd : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000402172 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000047540c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004acd1f : add byte ptr [rcx + rbx - 0x71c40000], ah ; idiv bh ; retf
0x00000000004166f4 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004afc87 : add byte ptr [rcx + rcx*2], cl ; add byte ptr [rax], al ; cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; stc ; call rsi
0x0000000000491caf : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000047371f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048d84f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000049140f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423aaf : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f2a8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f277 ; ret
0x0000000000493cf4 : add byte ptr [rcx + rdi*8 - 0x66b6f01], dl ; jmp qword ptr [rax]
0x0000000000493ad8 : add byte ptr [rcx + rdi*8], ah ; jmp qword ptr [rax]
0x00000000004b157b : add byte ptr [rcx + rsi*4 - 6], al ; call qword ptr [rdx]
0x00000000004550bf : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045aa92 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047eccb : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047ed68 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e137 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044af4a : add byte ptr [rcx - 0x75], cl ; jge 0x44af55 ; call r12
0x000000000044af7a : add byte ptr [rcx - 0x75], cl ; jge 0x44af85 ; call r12
0x0000000000491dbf : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044ba17 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046be3e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046a957 : add byte ptr [rcx - 0x77], al ; retf
0x000000000045824b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045e697 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047b0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491462 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479934 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044b91f : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048a5ea : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048a6f9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047110b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048a8ff : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x0000000000460e7a : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045ae67 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041ca87 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041900f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b0de : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x0000000000425cef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004245ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044a4f2 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000042b6b2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042b6d8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004566dc : add byte ptr [rcx], 0 ; add al, ch ; retf
0x0000000000455604 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048b0ba : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004b3ac8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; hlt ; retf 0xfffc
0x00000000004466ef : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040fc6b : add byte ptr [rcx], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040eb3f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b1b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047f94b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041835d : add byte ptr [rcx], al ; ret
0x000000000044d02c : add byte ptr [rcx], bh ; ret
0x0000000000477bec : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044a1c5 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ec54 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042afbc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000047559a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x4755d1 ; ret
0x000000000041441f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414439 ; ret
0x000000000044d04b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004942b0 : add byte ptr [rcx], dl ; cli ; call qword ptr [rax + 0x20fffa10]
0x00000000004001bb : add byte ptr [rdi + 0x4e], al ; push rbp ; add byte ptr [rdx - 9], bl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x0000000000432ada : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048cb35 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048cb5d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048d8ac : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b3aff : add byte ptr [rdi + rax*4 - 0x34540000], al ; cld ; call rdx
0x0000000000482077 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x00000000004595ff : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000462ff5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004af093 : add byte ptr [rdi + rdx*4], bl ; clc ; jmp qword ptr [rsi]
0x00000000004b4ac7 : add byte ptr [rdi + rdx*4], cl ; add byte ptr [rdi + rsi - 3], dh ; jmp rsp
0x00000000004b4acb : add byte ptr [rdi + rsi - 3], dh ; jmp rsp
0x00000000004af08f : add byte ptr [rdi - 0x68e40000], dl ; clc ; jmp qword ptr [rsi]
0x00000000004afc8b : add byte ptr [rdi - 7], ah ; call rsi
0x000000000040db66 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000480c66 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000434456 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000447ce7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043548f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004354ff : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000453f4b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000455054 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045503f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455069 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000447d9f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000042589f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041286f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042bc1f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042b75f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004621d3 : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042afef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b01f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b00f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042afff : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c474 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047b613 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045854b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000465253 : add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000429ebf : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040db4b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000410d06 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000042181e : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004695e8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042027e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476493 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f4b4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004b2a7c : add byte ptr [rdi], dh ; add byte ptr [rax + 0x15], dh ; cld ; jmp qword ptr [rax]
0x0000000000415060 : add byte ptr [rdx + 0x142], bh ; call 0x401ab8
0x0000000000415041 : add byte ptr [rdx + 0x143], bh ; call 0x401ab8
0x00000000004438df : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000044212f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048cd37 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047bd4c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047c674 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000485835 : add byte ptr [rdx + 0xba], bh ; call 0x401ab8
0x0000000000412507 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049e657 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000456e10 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000456e0f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000494098 : add byte ptr [rdx + rdi*8], dl ; call qword ptr [rax + 0x20fffa13]
0x0000000000493b60 : add byte ptr [rdx - 7], dl ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x00000000004001bf : add byte ptr [rdx - 9], bl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x00000000004af07c : add byte ptr [rip - 0x68e00000], bh ; clc ; call qword ptr [rax]
0x000000000044bab7 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000484e92 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c194 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046309a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000419fb7 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000465e1a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x00000000004199ef : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004630c3 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x0000000000463061 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465dbc : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042af24 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000419fb6 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004240a1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004ad553 : add byte ptr [rsi + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x00000000004acd23 : add byte ptr [rsi + rcx*4], bh ; idiv bh ; retf
0x0000000000455bd0 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000455bcf : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000484f3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044b94d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000474a6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000424067 : add byte ptr [rsi - 9], dh ; ret 0
0x0000000000416ce5 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004ab837 : add byte ptr [rsp + rax - 0x680c0000], bh ; cmc ; call rsp
0x0000000000400d8e : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004b0807 : add byte ptr [rsp + rdx*2 + 0x4840000], cl ; cli ; jmp qword ptr [rdx]
0x000000000045288c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004af20d : add byte ptr ds:[rax], al ; stc ; jmp qword ptr [rbx]
0x0000000000448bb5 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000045a7dc : add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x000000000044f9fb : add byte ptr es:[rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x000000000044d014 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044b8a7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b01e0 : add byte ptr fs:[rax], r8b ; mov esi, cs ; stc ; jmp qword ptr [rdx]
0x000000000049ea63 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000415252 : add ch, al ; pop rax ; ret
0x0000000000415359 : add ch, al ; push rcx ; ret 0xffff
0x00000000004732cf : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004a953c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a953d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b3a95 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x00000000004719ca : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004229aa : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004691c3 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004ac6a7 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004738c3 : add ch, cl ; outsd dx, dword ptr [rsi] ; retf
0x000000000048b9a7 : add ch, cl ; retf 0xfffc
0x00000000004b0449 : add ch, dh ; jmp qword ptr [rbx]
0x0000000000494c94 : add cl, bh ; cli ; jmp qword ptr [rax]
0x00000000004a890a : add cl, bl ; retf 0xea91
0x0000000000442157 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000004699a2 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000454dfe : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000468ef6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000455058 : add cl, byte ptr [rax + 0x39] ; retf
0x00000000004326da : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000447ab4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041cc5b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041c8b8 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000042433c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x00000000004112f4 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411213 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000045099c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000455396 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000442158 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004420c5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485195 : add cl, byte ptr [rax - 0x77] ; je 0x4851c6 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e2e4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000417f72 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440920 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440983 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000483c6d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048b9a3 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000470f10 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x00000000004352d2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000458108 : add cl, byte ptr [rcx + 0x39] ; retf
0x0000000000451aca : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494184 : add cl, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x22fffa0e]
0x0000000000404829 : add cl, byte ptr [rdi] ; retf 0x8b48
0x00000000004467db : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000413a37 : add cl, ch ; ret
0x000000000045e9da : add cl, ch ; ret 0xfffa
0x0000000000454878 : add cl, ch ; ret 0xfffd
0x0000000000405caa : add cl, ch ; retf
0x000000000043ae5a : add cl, ch ; retf 0xfffe
0x0000000000475a35 : add cl, cl ; ret
0x00000000004a87c3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a87c2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a270b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000469c98 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e4e2 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004aae11 : add dh, bh ; call rsp
0x00000000004a75fe : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004a1b57 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435483 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000400596 : add dh, bl ; ret
0x0000000000493ef8 : add dh, bl ; stc ; jmp rax
0x00000000004240de : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004acbd9 : add dh, byte ptr [rbx + 0xa] ; ret
0x000000000049467c : add dh, byte ptr [rsi] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000041a9e8 : add dh, dh ; ret
0x0000000000450cce : add dh, dh ; ret 0x4801
0x000000000042231f : add dh, dh ; ret 0x4804
0x000000000047c1f8 : add dh, dh ; ret 0x7403
0x000000000044a1af : add dh, dh ; ret 0x7404
0x0000000000444807 : add dh, dh ; ret 0x7501
0x0000000000444814 : add dh, dh ; ret 0x7502
0x0000000000444821 : add dh, dh ; ret 0x7504
0x00000000004447d9 : add dh, dh ; ret 0x7510
0x00000000004447e6 : add dh, dh ; ret 0x7520
0x000000000042430c : add dh, dh ; ret 0x7540
0x0000000000422643 : add dh, dh ; ret 0xf02
0x0000000000459f68 : add dh, dh ; ret 0xf04
0x000000000041a919 : add dh, dh ; ret 0xf08
0x0000000000466881 : add dh, dh ; ret 0xf40
0x0000000000466867 : add dh, dh ; ret 0xf50
0x00000000004b0789 : add dl, bh ; call qword ptr [rax]
0x0000000000494cb4 : add dl, bh ; cli ; jmp qword ptr [rax]
0x0000000000494bd8 : add dl, dh ; cli ; call qword ptr [rax]
0x00000000004795bd : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000046fc37 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046ea55 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044f883 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000415043 : add dword ptr [r8], eax ; add al, ch ; retf 0xfffe
0x00000000004438e1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046547a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000046543f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000456548 : add dword ptr [rax + 0x39480742], ecx ; retf
0x00000000004553c5 : add dword ptr [rax + 0x39480750], ecx ; retf
0x00000000004168ed : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047f789 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047f79b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b12f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x000000000046485a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045cb23 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045caad : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000455043 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000416bc8 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x0000000000456f80 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048dbc3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048c1ae : add dword ptr [rax + 1], ecx ; retf
0x000000000047a439 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000481b37 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040da9a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000478db5 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041da1e : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000478d87 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044a537 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x00000000004754e0 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a83bb : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a8427 ; retf
0x0000000000460efb : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402bdf : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000004229f4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000046fc38 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000442131 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000418ce1 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a0b47 ; ret
0x00000000004420c2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047eed3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d4d5 ; ret
0x000000000045dde0 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f0c : add dword ptr [rax - 0x77], ecx ; ret
0x000000000044fde7 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000413cb6 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045cefc : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000485572 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047eed2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d4d5 ; ret
0x000000000040ee76 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000481143 : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x00000000004814c3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4418
0x000000000045b599 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046ea56 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402c29 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000004503d6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f0a7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e39b : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469a09 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e525 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000405940 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004b376d : add dword ptr [rax], 0 ; fcmove st(0), st(5) ; hlt ; jmp qword ptr [rcx]
0x00000000004b3ac9 : add dword ptr [rax], eax ; add ah, dh ; retf 0xfffc
0x0000000000454b6b : add dword ptr [rax], eax ; add al, ch ; cmp eax, 0x89fffacf ; retf 0xe283
0x00000000004566dd : add dword ptr [rax], eax ; add al, ch ; retf
0x0000000000415044 : add dword ptr [rax], eax ; add al, ch ; retf 0xfffe
0x000000000040fff4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000447c51 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000041959a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000467db3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000454df8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000477bb4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041e65d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000470aeb : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004756ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449089 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e48a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456066 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048c9d5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000455605 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000446bae : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004715a9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000410ea8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000041eca0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000468088 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b36c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455cc2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042ab97 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e2f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000423dbe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043fb0f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042abc5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d763 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044e4a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a1b5a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a0d0a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a0b32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0b2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a12c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0b6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a0b62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1302 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000048cb37 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048ca8d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048d8a9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48d8ba ; sbb eax, eax ; ret
0x0000000000460b15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475a32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044b9fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000448ef1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047e2bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d140 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484126 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046ebad : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000416df3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048646e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047f951 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004682f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044953b : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000412ce8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000428488 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048c926 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044dcc2 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409dfd : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000491dbd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000460e78 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000477bea : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444805 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444812 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000044481f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004447d7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004447e4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004447f1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000459f66 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000424338 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004234fc : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000423463 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fc6c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405d70 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c2f1 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a8904 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b1c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000466340 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000448a29 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044aced : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045e362 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a8cea : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435342 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a78ca : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046be75 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000488ca9 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d48e : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000475d5c : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x000000000046842f : add dword ptr [rcx + 0x2526f60d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045bff2 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044aa43 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044a4f6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000040e0da : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442161 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046e84e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000453f4f : add dword ptr [rcx - 0x77], eax ; retf
0x0000000000459638 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c0e5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000466f41 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x00000000004784fb : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x00000000004752fa : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000414943 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000464353 : add dword ptr [rcx], edi ; retf
0x00000000004a8815 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000447942 : add dword ptr [rdi + 0x15], esi ; jb 0x447950 ; mov byte ptr [rdi], cl ; ret
0x0000000000493c14 : add dword ptr [rdi - 0x702e0007], ecx ; stc ; call rcx
0x00000000004b3a5d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b39f5 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b3a29 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b3a06 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b3a3a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3a6e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b010d : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000456540 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047e3c7 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041e21b : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000448091 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000453eb1 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x00000000004795be : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x000000000044693c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000004381cd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000484f9b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a84ef : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000044d049 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004b2bec : add dword ptr [rdx], 0x4a ; ret
0x00000000004b567c : add dword ptr [rdx], 0x55 ; ret
0x00000000004aeb58 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5638 : add dword ptr [rdx], 0x76 ; ret
0x00000000004ac74a : add dword ptr [rdx], eax ; retf
0x0000000000418358 : add dword ptr [rip + 0x2a39b5], 1 ; ret
0x00000000004ac6a3 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442142 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000416ce9 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000489c3d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045a920 : add eax, 0x18c48348 ; ret
0x0000000000424459 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x00000000004234f9 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x000000000044926a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b48a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424010 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000424399 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000424259 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x00000000004240f9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000424400 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x00000000004242c0 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f211 : add eax, 0x22d16e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424160 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000048f101 : add eax, 0x22d27e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004243df : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042429f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x000000000042413f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000423480 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000487370 : add eax, 0x2354e2 ; jne 0x4873a6 ; ret
0x00000000004241cb : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000485141 : add eax, 0x23777a ; ret
0x00000000004845a9 : add eax, 0x237aba ; ret
0x000000000048458e : add eax, 0x237ad5 ; add rsp, 8 ; ret
0x00000000004241ae : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x00000000004241ff : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f03c : add eax, 0x23d367 ; mov qword ptr [rsi], rax ; ret
0x000000000047efcb : add eax, 0x23d3e0 ; ret
0x000000000047ef92 : add eax, 0x23d419 ; add rsp, 8 ; ret
0x000000000047eed6 : add eax, 0x23d4d5 ; ret
0x000000000046c5d7 : add eax, 0x24ac44 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c584 : add eax, 0x24ac97 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c057 : add eax, 0x24acc4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c3f6 : add eax, 0x24ae25 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c3b1 : add eax, 0x24ae6a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c36c : add eax, 0x24aeaf ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c31d : add eax, 0x24aefe ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460a70 : add eax, 0x255bab ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e1f : add eax, 0x255cfc ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460dd1 : add eax, 0x255d4a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460d22 : add eax, 0x255df9 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460cc6 : add eax, 0x255e55 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460a26 : add eax, 0x2560f5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004609d8 : add eax, 0x256143 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460577 : add eax, 0x2562a4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457682 : add eax, 0x2647f1 ; ret
0x000000000044d002 : add eax, 0x26d2f9 ; ret
0x000000000044f122 : add eax, 0x26d801 ; ret
0x00000000004525df : add eax, 0x29480000 ; ret 0x349
0x0000000000424379 : add eax, 0x297a72 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424239 : add eax, 0x297bb2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004240d9 : add eax, 0x297d12 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f437 : add eax, 0x29a424 ; ret
0x000000000041f441 : add eax, 0x29c926 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041935d : add eax, 0x2a04fe ; ret
0x0000000000418e58 : add eax, 0x2a0993 ; ret
0x0000000000418e6f : add eax, 0x2a0998 ; ret
0x0000000000418e30 : add eax, 0x2a09b3 ; ret
0x0000000000418e10 : add eax, 0x2a09cb ; ret
0x0000000000418d06 : add eax, 0x2a0b3d ; ret
0x0000000000418cf6 : add eax, 0x2a0b45 ; ret
0x0000000000418ca6 : add eax, 0x2a0b4d ; ret
0x0000000000418c96 : add eax, 0x2a0b65 ; ret
0x00000000004182c2 : add eax, 0x2a0e59 ; ret
0x0000000000419311 : add eax, 0x2a2a56 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000418e85 : add eax, 0x2a2f0a ; ret
0x00000000004183bd : add eax, 0x2a3952 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401dce : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b1cac : add eax, 0x3400e4e ; ret
0x0000000000484b7e : add eax, 0x38c48348 ; ret
0x000000000041cbae : add eax, 0x39480000 ; ret 0xf275
0x000000000042b4aa : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000494385 : add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000443978 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004421a8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000443e76 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000494305 : add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x00000000004439f9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x00000000004421e9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004944bd : add eax, 0x560fffa ; cli ; call rax
0x000000000049443d : add eax, 0x574fffa ; cli ; jmp rsp
0x0000000000484d20 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a26fd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047158a : add eax, 0x5c415d5b ; ret
0x00000000004a270d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042b4ca : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424429 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000424039 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000042409d : add eax, 0x79ee ; je 0x424072 ; ret
0x000000000042a7d7 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e101 : add eax, 0x83480000 ; ret 0xe910
0x000000000042a805 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041ca4e : add eax, 0x83480000 ; retf 0x4901
0x000000000045ece5 : add eax, 0x83ffffef ; ret
0x000000000044397b : add eax, 0x8428d48 ; ret
0x000000000040db68 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458b03 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491460 : add eax, 0x89490000 ; ret 0x8349
0x0000000000428008 : add eax, 0x894d0000 ; retf
0x0000000000480c68 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004ab8c5 : add eax, 0x9e180000 ; cmc ; call rax
0x0000000000472499 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x00000000004738a9 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042ceca : add eax, 0xc0310000 ; ret
0x00000000004439fd : add eax, 0xc428d48 ; ret
0x00000000004444dd : add eax, 0xc478d48 ; ret
0x0000000000454be5 : add eax, 0xe8000003 ; ret 0xface
0x00000000004550c2 : add eax, 0xe9000000 ; ret
0x0000000000472469 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048ce0a : add eax, 0xf7148948 ; ret
0x0000000000435333 : add eax, 0xf7f0ff3 ; ret
0x000000000048f11a : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e485 : add eax, 1 ; push rax ; call rbx
0x00000000004744d1 : add eax, 1 ; ret
0x00000000004744c8 : add eax, 2 ; ret
0x00000000004744e1 : add eax, 3 ; ret
0x000000000045a839 : add eax, dword ptr [0] ; ret
0x0000000000454be6 : add eax, dword ptr [rax] ; add al, ch ; ret 0xface
0x0000000000486e3e : add eax, dword ptr [rax] ; add al, ch ; retf 0xf98e
0x000000000047b2b8 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489451 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489aac : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044c83e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041c048 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041a996 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400e9b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041ab1a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041f81a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041f9e0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042a9b7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e2a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a9e5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f074 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a2fc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474523 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044980b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042a968 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044808c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489620 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x00000000004619cc : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044ba15 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044bab5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047c1f6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041a917 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046e734 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046ee7b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046eee9 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000447d70 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047cebc : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b3a09 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ca : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004756aa : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000453f90 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004ace7a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000004868e3 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b3a3d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3a71 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b19c2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047bf36 : add eax, dword ptr [rsi] ; call rax
0x000000000048aa46 : add eax, eax ; jmp rax
0x0000000000402174 : add eax, ebp ; jmp rax
0x00000000004031d8 : add eax, ebp ; retf 0xffd2
0x0000000000486fd0 : add eax, ebp ; retf 0xfff3
0x000000000047c257 : add eax, ebx ; call rax
0x000000000044d10c : add eax, ebx ; jmp rax
0x0000000000440428 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046e73b : add eax, ecx ; jmp rax
0x000000000042add9 : add eax, ecx ; ret
0x000000000044078d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b306 : add eax, ecx ; vzeroupper ; ret
0x000000000042add6 : add eax, edi ; add rax, rcx ; ret
0x000000000042b303 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046ed6b : add eax, edi ; jmp rax
0x000000000046f03f : add eax, edi ; mov rdx, r8 ; jmp 0x46f013
0x000000000042b004 : add eax, edi ; ret
0x0000000000484ed0 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440845 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004467ea : add eax, edi ; sub rax, rsi ; ret
0x000000000042b47a : add eax, edi ; vzeroupper ; ret
0x0000000000401f0a : add eax, edx ; jmp rax
0x0000000000440736 : add eax, edx ; sub rax, rdi ; ret
0x00000000004741cb : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000447d1c : add eax, esi ; jmp rax
0x000000000041801d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048bcbd : add eax, esp ; jmp rax
0x0000000000462cd8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046389b : add ebp, eax ; xchg eax, edi ; retf
0x00000000004a7457 : add ebp, ebp ; retf
0x0000000000413a9a : add ebp, esp ; sub r15, r12 ; call 0x4004af
0x000000000047bf32 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a06a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004882a0 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000416731 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b3a2e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044dcdf : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44dd48 ; pop r12 ; ret
0x0000000000482371 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042bbeb : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000004354f3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447927 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x44791c ; ret
0x0000000000442195 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000456fbd : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000045506d : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e03e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000450e1a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d078
0x0000000000442199 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e387 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044f973 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000434314 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048b77f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ea31 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000048094a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000482e40 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435262 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b39fa : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000443e14 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000442196 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448a2f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448a8d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004abbd9 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465b09 : add ecx, eax ; mov eax, r9d ; ret
0x00000000004535f5 : add ecx, ebp ; retf 0xfff6
0x000000000042d4fb : add ecx, ebx ; jmp r9
0x000000000042be92 : add ecx, ebx ; jmp rcx
0x0000000000447d44 : add ecx, esi ; jmp rcx
0x000000000048dcce : add edi, dword ptr [rax + 4] ; jne 0x48dcf9 ; ret
0x000000000045a014 : add edi, ebx ; jmp rdi
0x000000000042d4f8 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004944cd : add edi, edx ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x0000000000494351 : add edi, edx ; jmp qword ptr [rdx]
0x00000000004944d1 : add edi, edx ; jmp rax
0x000000000040d51c : add edi, edx ; jmp rdi
0x0000000000486d94 : add edx, eax ; jmp 0x486da2
0x00000000004830a2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000411e60 : add edx, ecx ; jmp 0x411e72
0x000000000040d233 : add edx, edi ; jmp rdx
0x0000000000453f8a : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004583c6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459b15 : add esi, eax ; jmp rsi
0x0000000000435413 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446b45 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044921c : add esi, ebx ; ret
0x000000000041e940 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000447e4e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d4f5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000416261 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410461 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044984f : add esp, 0x10 ; pop rbx ; ret
0x0000000000411b65 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004466ed : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482248 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dbae : add esp, 0x118 ; ret
0x000000000045ab6a : add esp, 0x148 ; ret
0x0000000000419d79 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f02b : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041f646 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044ce2a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004114f5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a922 : add esp, 0x18 ; ret
0x0000000000416d6d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000041694d : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000416da6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004822c9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004166bf : add esp, 0x20 ; pop rbx ; ret
0x0000000000448872 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004491ea : add esp, 0x28 ; ret
0x000000000044f208 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048449f : add esp, 0x30 ; pop rbx ; ret
0x000000000048a836 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040da64 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415d6e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475561 : add esp, 0x38 ; ret
0x00000000004880cc : add esp, 0x40 ; pop rbx ; ret
0x00000000004817dc : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000448ec2 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004881b3 : add esp, 0x50 ; pop rbx ; ret
0x000000000048176a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044941a : add esp, 0x58 ; ret
0x000000000044930c : add esp, 0x68 ; ret
0x00000000004739c4 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044969f : add esp, 0x78 ; ret
0x000000000046846e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475043 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415638 : add esp, 0x80 ; ret
0x000000000044b7fd : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d52 : add esp, 0x88 ; pop rbx ; ret
0x00000000004014cf : add esp, 0x98 ; ret
0x0000000000475163 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000004577d6 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040fa17 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fba6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f725 : add esp, 0xd8 ; ret
0x000000000041186f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047f85b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff3e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044ae30 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a06c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416319 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488009 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000413324 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401b63 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x00000000004234c9 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a8b4b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000045537a : add qword ptr [rax + 0x39], rcx ; retf
0x0000000000453f4e : add qword ptr [rcx - 0x77], r8 ; retf
0x00000000004354f2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000413a99 : add r13, r12 ; sub r15, r12 ; call 0x4004b0
0x0000000000435482 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435412 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a9e4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000453f8f : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042d4fa : add r9, r11 ; jmp r9
0x00000000004a8909 : add r9b, bl ; retf 0xea91
0x0000000000456f9e : add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000456fbc : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465b08 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004ab8c4 : add rax, -0x61e80000 ; cmc ; call rax
0x00000000004744d0 : add rax, 1 ; ret
0x00000000004744c7 : add rax, 2 ; ret
0x00000000004744e0 : add rax, 3 ; ret
0x000000000045a838 : add rax, qword ptr [0] ; ret
0x000000000047bf35 : add rax, qword ptr [r14] ; call rax
0x000000000047cebb : add rax, qword ptr [rbp - 0xb8] ; call rax
0x00000000004868e2 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045a837 : add rax, qword ptr fs:[0] ; ret
0x000000000047c256 : add rax, r11 ; call rax
0x000000000048bcbc : add rax, r12 ; jmp rax
0x0000000000402173 : add rax, r13 ; jmp rax
0x000000000048c5bd : add rax, r14 ; jmp rax
0x000000000048ac6b : add rax, r15 ; jmp rax
0x000000000048aa45 : add rax, r8 ; jmp rax
0x000000000048c1f5 : add rax, r9 ; jmp rax
0x000000000044d183 : add rax, rbp ; jmp rax
0x000000000044d10b : add rax, rbx ; jmp rax
0x0000000000440427 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046e73a : add rax, rcx ; jmp rax
0x000000000042add8 : add rax, rcx ; ret
0x000000000044078c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b305 : add rax, rcx ; vzeroupper ; ret
0x000000000042add5 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b302 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046ed6a : add rax, rdi ; jmp rax
0x000000000042b003 : add rax, rdi ; ret
0x0000000000484ecf : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440844 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x00000000004467e9 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b479 : add rax, rdi ; vzeroupper ; ret
0x0000000000401f09 : add rax, rdx ; jmp rax
0x0000000000440735 : add rax, rdx ; sub rax, rdi ; ret
0x0000000000447d1b : add rax, rsi ; jmp rax
0x000000000047bf31 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000455399 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042be91 : add rcx, r11 ; jmp rcx
0x0000000000447d43 : add rcx, rsi ; jmp rcx
0x000000000040d51b : add rdi, r10 ; jmp rdi
0x000000000045a013 : add rdi, r11 ; jmp rdi
0x000000000042d4f7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004830a1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000486d93 : add rdx, rax ; jmp 0x486da3
0x0000000000411e5f : add rdx, rcx ; jmp 0x411e73
0x000000000040d232 : add rdx, rdi ; jmp rdx
0x0000000000459b14 : add rsi, r8 ; jmp rsi
0x0000000000416260 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410460 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044984e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482247 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dbad : add rsp, 0x118 ; ret
0x000000000045ab69 : add rsp, 0x148 ; ret
0x0000000000419d78 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f02a : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041f645 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004114f4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a921 : add rsp, 0x18 ; ret
0x0000000000416d6c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000041694c : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000416da5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004822c8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004166be : add rsp, 0x20 ; pop rbx ; ret
0x00000000004491e9 : add rsp, 0x28 ; ret
0x000000000044f207 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048449e : add rsp, 0x30 ; pop rbx ; ret
0x000000000048a835 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000415d6d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475560 : add rsp, 0x38 ; ret
0x00000000004880cb : add rsp, 0x40 ; pop rbx ; ret
0x00000000004817db : add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004881b2 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481769 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449419 : add rsp, 0x58 ; ret
0x000000000044930b : add rsp, 0x68 ; ret
0x00000000004739c3 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044969e : add rsp, 0x78 ; ret
0x0000000000475042 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415637 : add rsp, 0x80 ; ret
0x000000000044b7fc : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d51 : add rsp, 0x88 ; pop rbx ; ret
0x00000000004014ce : add rsp, 0x98 ; ret
0x0000000000475162 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040fa16 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fba5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f724 : add rsp, 0xd8 ; ret
0x000000000041186e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047f85a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff3d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044ae2f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a06b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416318 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488008 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401b62 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x00000000004234c8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000424337 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000484f9a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000493ef4 : and ah, bl ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004ad7e5 : and al, 0 ; add byte ptr [rax], bl ; mov dh, 0xf6 ; call qword ptr [rsi]
0x000000000046b431 : and al, 0 ; jmp rax
0x000000000046c05a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048cea8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000487fa1 : and al, 0x10 ; call 0x4849d4
0x000000000048ea60 : and al, 0x10 ; call r14
0x000000000044a458 : and al, 0x10 ; call rax
0x000000000048220b : and al, 0x10 ; call rdx
0x000000000041c5fc : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409508 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406019
0x0000000000471cc2 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048e848 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401105 : and al, 0x18 ; call rax
0x0000000000475380 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044e408 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000471bdd : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000473edf : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000482206 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450b57 : and al, 0x20 ; call r15
0x0000000000452d8e : and al, 0x20 ; call rax
0x0000000000473ba0 : and al, 0x20 ; call rbx
0x0000000000449786 : and al, 0x20 ; je 0x4497b9 ; mov eax, 0x48 ; syscall
0x0000000000450a22 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7684 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041f643 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000450b52 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004224f3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000403a9f : and al, 0x30 ; call 0x41fd14
0x0000000000451433 : and al, 0x30 ; call r14
0x000000000045160b : and al, 0x30 ; call rbx
0x0000000000473d8e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000045288a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004518f5 : and al, 0x38 ; call r12
0x0000000000451f2d : and al, 0x38 ; call r14
0x0000000000454ef1 : and al, 0x38 ; call r15
0x000000000045113b : and al, 0x38 ; call rbx
0x0000000000473a78 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000450e47 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045142e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451606 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466f7c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000456e0e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000455bce : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x00000000004817d9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481767 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045336c : and al, 0x40 ; call r15
0x0000000000455b18 : and al, 0x40 ; call rbx
0x0000000000452d89 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004518f0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451f28 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000454eec : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451136 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004868e1 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416288 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048a918 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048a61c : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000412f64 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048d94e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453367 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455b13 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048d8ff : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489867 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489815 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x0000000000450e1e : and al, 0x50 ; call 0x44d074
0x0000000000450e1d : and al, 0x50 ; call 0x44d075
0x00000000004010b3 : and al, 0x60 ; call 0x40dac4
0x000000000041ff0b : and al, 0x68 ; call rax
0x0000000000478a5c : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x000000000046364e : and al, 0x83 ; ret
0x0000000000416ceb : and al, 0x83 ; retf 0x4c01
0x00000000004574cd : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000418df3 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004047ac : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000045134e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000491cab : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049140b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000451ddb : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041f438 : and al, 0xa4 ; sub dword ptr [rax], eax ; ret
0x00000000004517d0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004575a3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048ca8b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044984c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004496f3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000416272 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x412508
0x0000000000401100 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479930 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041684c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048aa18 : and al, 0xd8 ; ret
0x0000000000417e63 : and al, 0xe9 ; ret 0xfffd
0x00000000004521ee : and al, 0xf6 ; ret
0x0000000000493ad9 : and al, 0xf9 ; jmp qword ptr [rax]
0x00000000004b2cf9 : and al, 0xfc ; jmp qword ptr [rcx]
0x000000000041697d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040950d : and al, 8 ; call 0x406014
0x000000000040950c : and al, 8 ; call 0x406015
0x000000000041cc16 : and al, 8 ; call 0x418eb4
0x000000000040dedf : and al, 8 ; call rax
0x000000000041c601 : and al, 8 ; call rcx
0x000000000044a453 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000410e90 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000004ad66d : and al, byte ptr [rax] ; add al, dh ; mov bl, 0xf6 ; call qword ptr [rsi]
0x000000000048f104 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048fd63 : and al, byte ptr [rax] ; jne 0x48fd4d ; pop rbx ; ret
0x000000000048f0f6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f107 ; ret
0x000000000048f206 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f217 ; ret
0x000000000044099a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004232a3 : and al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x0000000000448cc7 : and al, ch ; ret
0x0000000000422888 : and al, ch ; ret 0xfed5
0x00000000004691c1 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000452d8f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000493ad5 : and bh, cl ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x000000000046edab : and bl, ch ; retf 0x9066
0x0000000000411129 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000411159 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041bacf : and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004110be : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042b316 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000044033a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b48c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000041115a : and byte ptr [rax + 1], cl ; ret
0x0000000000400ea1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000046607e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000440608 : and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000044072d : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000004734fe : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000450a23 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000476ed3 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a214 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a228 ; call rax
0x000000000044f706 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048cf86 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467ab4 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041bad0 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412a82 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000045fdab : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048cf59 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b3ac4 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; hlt ; retf 0xfffc
0x0000000000447e2a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491f6c : and byte ptr [rbp - 0x77], cl ; ret
0x0000000000491e37 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004a9428 : and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004822cb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000467d13 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x000000000041112a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000493da4 : and byte ptr [rbx - 0x42df0007], bh ; stc ; jmp qword ptr [rax]
0x000000000045d9d0 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000493d14 : and byte ptr [rcx + rdi*8 - 0x649ff01], dh ; jmp rax
0x0000000000416d6f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x00000000004110bf : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004af49c : and byte ptr [rcx], al ; add al, dl ; test cl, bh ; call qword ptr [rdx]
0x000000000047f174 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000446d91 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000040fbcb : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x00000000004447e0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000493e24 : and byte ptr [rdx - 0x43df0007], bh ; stc ; jmp qword ptr [rax]
0x00000000004b4d50 : and byte ptr [rdx - 3], bl ; call qword ptr [rdx]
0x00000000004ace7d : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000042bf2a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b19c5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000493b9c : and byte ptr [rsi - 7], ah ; call qword ptr [rax]
0x00000000004744c2 : and ch, 0xf ; je 0x4744e9 ; add rax, 2 ; ret
0x0000000000447de8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042433a : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000047324b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004744ad : and cl, 0xf ; je 0x4744d5 ; ret
0x00000000004173ba : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044c3e1 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047ef74 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423ab3 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000494354 : and cl, byte ptr [rbx] ; cli ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000040357a : and cl, byte ptr [rcx + 0x7de8002b] ; retf 0xffbf
0x000000000042b76d : and cl, byte ptr [rcx - 0x77] ; ret
0x00000000004738aa : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000448c5d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044bc59 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000493ffc : and dh, bl ; stc ; call qword ptr [rax]
0x00000000004691c0 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000493f30 : and dl, bl ; stc ; jmp rax
0x0000000000468d38 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000468d39 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004ad551 : and dword ptr [rax], eax ; add byte ptr [rsi + rbp*4 - 0xa], bl ; call qword ptr [rdi]
0x00000000004a91a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000417577 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004175cf : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004183fe : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000424012 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a6259 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a91a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045a83b : and eax, 0 ; ret
0x0000000000483ecc : and eax, 0x28 ; jne 0x483f16 ; leave ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e948 : and eax, 0x30 ; call rax
0x000000000040e882 : and eax, 0x30 ; call rdx
0x000000000040e96e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000473c6c : and eax, 0x39480024 ; ret
0x0000000000447d6d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000447db8 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000046c3f7 : and eax, 0x480024ae ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000046057a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000457e47 : and eax, 0x4cffff52 ; mov edi, ebp ; call r12
0x000000000045caf1 : and eax, 0x58b4c00 ; ret
0x0000000000447e63 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000447e07 : and eax, 0x7ff80000 ; ret
0x00000000004537eb : and eax, 0x833fe283 ; retf 0x4180
0x000000000044ba97 : and eax, 0xc ; cmp eax, 4 ; je 0x44baa8 ; ret
0x0000000000412285 : and eax, 0xe8000000 ; retf 0xfee1
0x000000000048236c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004ad745 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov ch, 0xf6 ; call qword ptr [rdx]
0x0000000000487428 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047ef95 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000484f98 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487373 : and eax, dword ptr [rax] ; jne 0x4873a3 ; ret
0x00000000004849ea : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004845a5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x237aba], rax ; ret
0x000000000047f03f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047eed9 : and eax, dword ptr [rax] ; ret
0x000000000047b742 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004525de : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000417578 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004175d0 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ba32 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44ba45 ; ret
0x00000000004a7954 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042d4a5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042cbd8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b17a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000044fb99 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000493ad1 : and ecx, edi ; jmp rax
0x0000000000411e5c : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x411e76
0x00000000004b0a69 : and edx, edi ; call qword ptr [rdi]
0x0000000000411e5b : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x411e77
0x000000000044bc58 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474007 : bnd je 0x474016 ; test edx, edx ; jne 0x474008 ; ret
0x000000000042b0da : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b000 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b4f1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b010 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b020 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042aff0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042af4f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000043ffb3 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000004405d6 : bsf eax, edx ; ret
0x00000000004740b7 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440732 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000004400d0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000440622 : bsf rax, rdx ; ret
0x00000000004740b6 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000472ee7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000047316b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473079 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000472f75 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000472ee6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000047316a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473078 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000472f74 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004af0f8 : call 0x114ae9f5
0x00000000004ab828 : call 0x134aadc7
0x00000000004afff8 : call 0x134af9ba
0x0000000000469896 : call 0x21469894
0x0000000000469a0c : call 0x21469a0a
0x0000000000469c9b : call 0x21469c99
0x000000000046a160 : call 0x2146a15e
0x000000000046a31e : call 0x2146a31c
0x000000000046a8ef : call 0x2146a8ed
0x000000000046ab28 : call 0x2146ab26
0x00000000004039cd : call 0x40043a
0x0000000000413a9f : call 0x4004aa
0x0000000000403a18 : call 0x4004c2
0x000000000048583b : call 0x401ab2
0x00000000004594a2 : call 0x4056e2
0x000000000040950f : call 0x406012
0x00000000004010b5 : call 0x40dac2
0x00000000004219ab : call 0x40dbe2
0x000000000041535a : call 0x4115b2
0x0000000000416278 : call 0x412502
0x000000000041cc18 : call 0x418eb2
0x0000000000421695 : call 0x41d8d2
0x0000000000491d7d : call 0x41e882
0x0000000000403a8d : call 0x41fd12
0x00000000004836a8 : call 0x43f997
0x000000000046f75c : call 0x44b9c2
0x000000000040f8a6 : call 0x44bae2
0x0000000000450e20 : call 0x44d072
0x00000000004610aa : call 0x45d342
0x0000000000487fa3 : call 0x4849d2
0x00000000004a8afa : call 0xffffffffab5855f0
0x000000000041d850 : call 0xffffffffc37b205a
0x000000000041ec19 : call 0xffffffffc37b3423
0x000000000046a72e : call 0xffffffffc3caa736
0x0000000000440a87 : call 0xffffffffc41493d8
0x00000000004409a7 : call 0xffffffffc43c92f8
0x000000000044ae35 : call 0xffffffffe1440b98
0x0000000000403572 : call 2
0x00000000004896c0 : call qword ptr [r14]
0x0000000000493cf7 : call qword ptr [rax + 0x20fff994]
0x0000000000493f2b : call qword ptr [rax + 0x20fff9e7]
0x00000000004942b3 : call qword ptr [rax + 0x20fffa10]
0x000000000049409b : call qword ptr [rax + 0x20fffa13]
0x00000000004947ab : call qword ptr [rax + 0x20fffa37]
0x0000000000494593 : call qword ptr [rax + 0x20fffa3a]
0x0000000000494bab : call qword ptr [rax - 0x1f00055a]
0x0000000000494043 : call qword ptr [rax - 0x1f00062d]
0x0000000000494057 : call qword ptr [rax - 0x1f00063b]
0x0000000000493e77 : call qword ptr [rax - 0x1f000659]
0x00000000004a364b : call qword ptr [rax - 0x2f000350]
0x000000000049400f : call qword ptr [rax - 0x2f000641]
0x0000000000493ab7 : call qword ptr [rax - 0x2f0006e9]
0x0000000000493aa7 : call qword ptr [rax - 0x2f0006ee]
0x0000000000493a97 : call qword ptr [rax - 0x2f0006f3]
0x000000000041e9d3 : call qword ptr [rax]
0x000000000040ea40 : call qword ptr [rbx]
0x0000000000489870 : call qword ptr [rcx]
0x00000000004ac12f : call qword ptr [rdi]
0x0000000000494377 : call qword ptr [rdx + 0x12fffa06]
0x000000000049436f : call qword ptr [rdx + 0x12fffa07]
0x0000000000494367 : call qword ptr [rdx + 0x12fffa08]
0x000000000049435f : call qword ptr [rdx + 0x12fffa09]
0x0000000000494187 : call qword ptr [rdx + 0x22fffa0e]
0x000000000049467f : call qword ptr [rdx + 0x22fffa35]
0x0000000000493bf3 : call qword ptr [rdx]
0x00000000004940e3 : call qword ptr [rsi + 0x26fffa12]
0x00000000004945db : call qword ptr [rsi + 0x26fffa39]
0x00000000004896c1 : call qword ptr [rsi]
0x000000000047c317 : call r10
0x000000000040093c : call r11
0x000000000044a350 : call r12
0x000000000044e710 : call r14
0x000000000044a892 : call r15
0x0000000000400410 : call rax
0x000000000040093d : call rbx
0x000000000041c603 : call rcx
0x000000000044a893 : call rdi
0x000000000040e887 : call rdx
0x000000000044e711 : call rsi
0x000000000040ffad : call rsp
0x0000000000428ab7 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b4d4d : cdq ; add byte ptr [rax], al ; and byte ptr [rdx - 3], bl ; call qword ptr [rdx]
0x000000000048c1f4 : cdq ; add rax, r9 ; jmp rax
0x0000000000494b79 : cdq ; cli ; call qword ptr [rax]
0x00000000004a8a00 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000041d4e3 : cdq ; ret
0x000000000040704b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000493c50 : cdqe ; stc ; jmp rsi
0x000000000047d3a9 : clc ; add al, 0x75 ; retf
0x0000000000477b94 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044d013 : clc ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004699a1 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041cc5a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041c8b7 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e2e3 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d48d : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048829f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044f972 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042add7 : clc ; add rax, rcx ; ret
0x000000000042b304 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004af082 : clc ; call qword ptr [rax]
0x0000000000494c6d : clc ; cli ; call qword ptr [rax]
0x0000000000494c91 : clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494c85 : clc ; cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000494c71 : clc ; cli ; jmp qword ptr [rax]
0x0000000000494c89 : clc ; cli ; jmp rax
0x00000000004229f8 : clc ; cmovne rax, rcx ; ret
0x000000000042d449 : clc ; cmp rcx, rax ; jne 0x42d47b ; xor eax, eax ; ret
0x000000000042d448 : clc ; cmp rcx, rax ; jne 0x42d47c ; xor eax, eax ; ret
0x00000000004765b6 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f560 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004233c0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004724d0 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047f784 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048c6de : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401a3c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046f9e9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000410ead : clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000004786bb : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000491da5 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000461676 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045f61e : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000045e9d3 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000459442 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000447e0a : clc ; jg 0x447dd9 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000447e66 : clc ; jg 0x447e66 ; int1 ; mov eax, eax ; ret
0x0000000000453ce7 : clc ; jg 0x453c76 ; ret 0xdb76
0x00000000004af096 : clc ; jmp qword ptr [rsi]
0x000000000046057f : clc ; jmp rax
0x00000000004960a0 : clc ; jo 0x4960a1 ; jmp rbx
0x000000000048d183 : clc ; leave ; ret
0x00000000004a7662 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000412584 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042ef47 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f8b7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434807 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fab7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434777 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fcb7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004346e7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ef63 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044794e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447acd : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043819c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446bda : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d301 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f040 : clc ; mov rdx, r8 ; jmp 0x46f012
0x000000000041259c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a7c6 : clc ; pop rbp ; pop r12 ; ret
0x00000000004b1274 : clc ; pop rsi ; add byte ptr [rax], al ; clc ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x0000000000471587 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000475133 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000490b98 : clc ; push rbx ; ret
0x00000000004125b5 : clc ; ret
0x000000000043e924 : clc ; rol ch, 1 ; jns 0x43e905 ; retf 0xead3
0x000000000043ea74 : clc ; rol ch, 1 ; jns 0x43ea55 ; retf 0xead3
0x000000000043ebc4 : clc ; rol ch, 1 ; jns 0x43eba5 ; retf 0xead3
0x000000000043ed14 : clc ; rol ch, 1 ; jns 0x43ecf5 ; retf 0xead3
0x000000000043ee64 : clc ; rol ch, 1 ; jns 0x43ee45 ; retf 0xead3
0x000000000043efb4 : clc ; rol ch, 1 ; jns 0x43ef95 ; retf 0xead3
0x000000000043f104 : clc ; rol ch, 1 ; jns 0x43f0e5 ; retf 0xead3
0x000000000043f254 : clc ; rol ch, 1 ; jns 0x43f235 ; retf 0xead3
0x000000000043f3a4 : clc ; rol ch, 1 ; jns 0x43f385 ; retf 0xead3
0x000000000043f4f4 : clc ; rol ch, 1 ; jns 0x43f4d5 ; retf 0xead3
0x000000000043f644 : clc ; rol ch, 1 ; jns 0x43f625 ; retf 0xead3
0x000000000043f794 : clc ; rol ch, 1 ; jns 0x43f775 ; retf 0xead3
0x000000000043f8e4 : clc ; rol ch, 1 ; jns 0x43f8c5 ; retf 0xead3
0x000000000043fa34 : clc ; rol ch, 1 ; jns 0x43fa15 ; retf 0xead3
0x000000000043fb84 : clc ; rol ch, 1 ; jns 0x43fb65 ; retf 0xead3
0x0000000000482a3a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004741cf : clc ; shr rax, 2 ; ret
0x0000000000494581 : clc ; stc ; jmp rax
0x00000000004816ad : clc ; std ; jbe 0x4816bd ; ret
0x0000000000484ed1 : clc ; sub rax, r8 ; ret
0x0000000000440846 : clc ; sub rax, rdx ; vzeroupper ; ret
0x00000000004467eb : clc ; sub rax, rsi ; ret
0x00000000004af4c8 : clc ; test cl, bh ; call qword ptr [rbx]
0x000000000042b47b : clc ; vzeroupper ; ret
0x00000000004b1278 : clc ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x0000000000447d6f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000411e5e : cld ; add rdx, rcx ; jmp 0x411e74
0x00000000004a364a : cld ; call qword ptr [rax - 0x2f000350]
0x00000000004a3622 : cld ; call rax
0x00000000004b3b06 : cld ; call rdx
0x00000000004a383e : cld ; call rsp
0x00000000004a3652 : cld ; inc dword ptr [rax - 0x2f000350] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x000000000047b89e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000447e4c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447dba : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a363a : cld ; jmp qword ptr [rax - 0x2f000350]
0x00000000004b28e2 : cld ; jmp qword ptr [rax]
0x00000000004b28fa : cld ; jmp qword ptr [rbx]
0x00000000004b2cfa : cld ; jmp qword ptr [rcx]
0x00000000004b3bd2 : cld ; jmp qword ptr [rsi]
0x00000000004b289a : cld ; jmp rdx
0x0000000000484f60 : cld ; jno 0x484f8c ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004af3c4 : cld ; jp 0x4af3c3 ; call rsp
0x00000000004a3836 : cld ; lcall [rdx + rsi*4 - 0x4d7b0004] ; cld ; call rsp
0x00000000004a83e5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a83b4 ; retf
0x000000000042f6d2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f8d5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fad5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fcd5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447956 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447ad8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004381ae : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000446be8 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000446be2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f306 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434996 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f4e6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434916 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f6c6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434896 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f126 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a16 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000449957 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000460e20 : cld ; pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a362a : cld ; push qword ptr [rax - 0x2f000350] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a365e : cld ; push qword ptr [rax - 0x50] ; cld ; call rax
0x000000000042efb1 : cld ; ret
0x0000000000409510 : cld ; retf 0xffff
0x00000000004a6b03 : cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000049454d : cld ; stc ; jmp qword ptr [rax - 0x1f00061a]
0x00000000004aadc9 : cld ; std ; jmp rax
0x00000000004a6b16 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447472 : cld ; vzeroupper ; ret
0x0000000000415251 : cli ; add ch, al ; pop rax ; ret
0x0000000000415358 : cli ; add ch, al ; push rcx ; ret 0xffff
0x0000000000468ef5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000411212 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000044cdb5 : cli ; add cl, ch ; retf
0x0000000000447941 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447951 ; mov byte ptr [rdi], cl ; ret
0x000000000044693b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000004381cc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448a2e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448a8c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a8af9 : cli ; call 0xffffffffab5855f1
0x00000000004942b2 : cli ; call qword ptr [rax + 0x20fffa10]
0x000000000049409a : cli ; call qword ptr [rax + 0x20fffa13]
0x00000000004947aa : cli ; call qword ptr [rax + 0x20fffa37]
0x0000000000494592 : cli ; call qword ptr [rax + 0x20fffa3a]
0x0000000000494baa : cli ; call qword ptr [rax - 0x1f00055a]
0x00000000004940ba : cli ; call qword ptr [rax]
0x00000000004b1552 : cli ; call qword ptr [rbx]
0x00000000004b1252 : cli ; call qword ptr [rcx]
0x00000000004b0a6a : cli ; call qword ptr [rdi]
0x0000000000494376 : cli ; call qword ptr [rdx + 0x12fffa06]
0x000000000049436e : cli ; call qword ptr [rdx + 0x12fffa07]
0x0000000000494366 : cli ; call qword ptr [rdx + 0x12fffa08]
0x000000000049435e : cli ; call qword ptr [rdx + 0x12fffa09]
0x0000000000494186 : cli ; call qword ptr [rdx + 0x22fffa0e]
0x000000000049467e : cli ; call qword ptr [rdx + 0x22fffa35]
0x0000000000494166 : cli ; call qword ptr [rdx]
0x00000000004940e2 : cli ; call qword ptr [rsi + 0x26fffa12]
0x00000000004945da : cli ; call qword ptr [rsi + 0x26fffa39]
0x0000000000494102 : cli ; call qword ptr [rsi]
0x00000000004940aa : cli ; call rax
0x00000000004b09d6 : cli ; call rcx
0x000000000049414e : cli ; call rdx
0x00000000004940f2 : cli ; call rsi
0x000000000049421e : cli ; call rsp
0x000000000044d012 : cli ; clc ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000494cb5 : cli ; cli ; jmp qword ptr [rax]
0x000000000044bf05 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d12e : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f100 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c0e5 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004717d7 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004940a6 : cli ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x00000000004947b6 : cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x000000000049459e : cli ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x00000000004942be : cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x00000000004944ce : cli ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x0000000000494bb6 : cli ; inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000494ba6 : cli ; inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000494b76 : cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x0000000000494b56 : cli ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x0000000000494096 : cli ; inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x00000000004942ae : cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000494c6a : cli ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494bd6 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494cb2 : cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x00000000004947a6 : cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000494ade : cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000494c92 : cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494942 : cli ; inc dword ptr [rbx + rbp] ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x000000000049421a : cli ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000045943f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000045219d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455485 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000494152 : cli ; inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494712 : cli ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494382 : cli ; inc dword ptr [rdx] ; add eax, 0x472fffa ; cli ; jmp rdx
0x000000000049467a : cli ; inc dword ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x00000000004940ee : cli ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x00000000004945e6 : cli ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x00000000004940de : cli ; inc dword ptr [rsi] ; adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x00000000004945d6 : cli ; inc dword ptr [rsi] ; cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000494c86 : cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000494ace : cli ; inc eax ; cli ; call rax
0x0000000000494c5e : cli ; inc eax ; idiv edx ; call rax
0x0000000000494caa : cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000494a0a : cli ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x00000000004945be : cli ; inc eax ; xor eax, 0x3550fffa ; cli ; jmp rax
0x0000000000438187 : cli ; jg 0x43819a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446906 : cli ; jg 0x446918 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446f39 : cli ; jg 0x446f4c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004473a1 : cli ; jg 0x4473b4 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447ac2 : cli ; jg 0x447ad2 ; vzeroupper ; ret
0x0000000000447c98 : cli ; jg 0x447ca8 ; vzeroupper ; ret
0x0000000000494306 : cli ; jmp qword ptr [rax + 0x10fffa04]
0x000000000049428e : cli ; jmp qword ptr [rax + 0x10fffa0d]
0x000000000049409e : cli ; jmp qword ptr [rax]
0x0000000000494356 : cli ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000049418a : cli ; jmp qword ptr [rdx]
0x00000000004940e6 : cli ; jmp qword ptr [rsi]
0x00000000004942a6 : cli ; jmp rax
0x000000000040d234 : cli ; jmp rdx
0x00000000004940ce : cli ; jmp rsi
0x0000000000494242 : cli ; jmp rsp
0x0000000000494706 : cli ; lcall [rsi + 0x2efffa34] ; xor al, 0xfa ; call rsp
0x0000000000494146 : cli ; lcall [rsi + rcx + 0xe2cfffa] ; cli ; call rdx
0x000000000049498e : cli ; ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x000000000049414a : cli ; ljmp [rsi + rcx] ; cli ; call rdx
0x000000000049470a : cli ; ljmp [rsi] ; xor al, 0xfa ; call rsp
0x0000000000454afc : cli ; loopne 0x454b79 ; jae 0x454a8f ; retf 0xb941
0x000000000042fad8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004039c9 : cli ; mov rdi, rax ; call 0x40043e
0x000000000040d516 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042b788 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a236 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049428c : cli ; or eax, 0xda0fffa ; cli ; call qword ptr [rax]
0x00000000004a8f81 : cli ; push 0x6e ; ja 0x4a8f0e ; ret 0x48f
0x00000000004949fe : cli ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x00000000004944ca : cli ; push qword ptr [rax + 0x40fffa03] ; add edi, edx ; jmp rax
0x00000000004940a2 : cli ; push qword ptr [rax + 0x40fffa12] ; adc bh, dl ; call rax
0x00000000004947b2 : cli ; push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x000000000049459a : cli ; push qword ptr [rax + 0x40fffa39] ; cmp edx, edi ; call rax
0x0000000000494496 : cli ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000494c5a : cli ; push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x0000000000494c02 : cli ; push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000494aca : cli ; push qword ptr [rax - 0x3f0005bb] ; cli ; call rax
0x0000000000494302 : cli ; push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000494bb2 : cli ; push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x000000000049443e : cli ; push qword ptr [rbp + rax - 6] ; jmp rsp
0x0000000000494216 : cli ; push qword ptr [rbx + rdx + 0x1344fffa] ; cli ; call rsp
0x0000000000494386 : cli ; push qword ptr [rdx + 4] ; cli ; jmp rdx
0x0000000000494946 : cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004940ea : cli ; push qword ptr [rsi + 0x46fffa11] ; adc edx, edi ; call rsi
0x00000000004945e2 : cli ; push qword ptr [rsi + 0x46fffa38] ; cmp dl, bh ; call rsi
0x0000000000494c8e : cli ; push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494c12 : cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000494ada : cli ; push rax ; cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000494c66 : cli ; push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494bd2 : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494492 : cli ; push rax ; or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x00000000004949fa : cli ; push rax ; sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x00000000004940fa : cli ; push rsi ; psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x000000000049443a : cli ; push rsp ; add eax, 0x574fffa ; cli ; jmp rsp
0x0000000000447879 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7a25 : cli ; ret 0xac65
0x000000000044b9bb : cli ; setae al ; ret
0x00000000004a78d0 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004a666a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004ab82a : cmc ; call qword ptr [rdx]
0x00000000004ab8ca : cmc ; call rax
0x00000000004ab83e : cmc ; call rsp
0x00000000004af0f9 : cmc ; clc ; call qword ptr [rax]
0x00000000004ab9e2 : cmc ; jmp qword ptr [rax]
0x00000000004b044a : cmc ; jmp qword ptr [rbx]
0x00000000004a93a9 : cmc ; mov ch, 0xab ; ret
0x00000000004924f0 : cmc ; mov dl, 0xf7 ; call rsi
0x000000000043491a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f35e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000445cc3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a6257 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000494579 : cmc ; stc ; jmp rax
0x0000000000445cc7 : cmc ; sub eax, edx ; ret
0x00000000004a89e5 : cmc ; xlatb ; ret 0x4e27
0x0000000000418c79 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000418c78 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000447d94 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471b31 : cmove eax, ecx ; ret
0x00000000004233c3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000447d5c : cmove eax, edx ; pop rbx ; ret
0x00000000004234ff : cmove eax, edx ; ret
0x00000000004146cf : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e3e8 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471b30 : cmove r8, rcx ; ret
0x0000000000447d93 : cmove rax, rcx ; pop rbx ; ret
0x00000000004233c2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000447d5b : cmove rax, rdx ; pop rbx ; ret
0x00000000004234fe : cmove rax, rdx ; ret
0x000000000047e3e7 : cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004160bb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4160b9 ; ret
0x000000000047064b : cmovg eax, ecx ; test rdx, rdx ; jne 0x470649 ; ret
0x00000000004229fa : cmovne eax, ecx ; ret
0x0000000000447dec : cmovne eax, edx ; pop rbx ; ret
0x00000000004233ff : cmovne eax, edx ; ret
0x0000000000440204 : cmovne eax, edx ; vzeroupper ; ret
0x00000000004229f9 : cmovne rax, rcx ; ret
0x0000000000447deb : cmovne rax, rdx ; pop rbx ; ret
0x00000000004233fe : cmovne rax, rdx ; ret
0x0000000000440203 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042ad98 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004507fc : cmovs eax, edx ; ret
0x000000000048d7f8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471898 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471899 ; lea eax, [rdx + rdi] ; ret
0x0000000000447d3e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000447dd0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004467d8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000488bbd : cmp al, 0x23 ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000488030 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000455622 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f4b2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416287 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416276 : cmp al, 0x24 ; call 0x412504
0x000000000048d94d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048ce1c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048cdad : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a7660 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a6563 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004acd24 : cmp al, 0x8e ; idiv bh ; retf
0x00000000004a904b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000045a011 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040d519 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000044b25d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000446186 : cmp al, byte ptr [rsi - 1] ; jne 0x4461ac ; xor eax, eax ; ret
0x000000000042aff6 : cmp al, dh ; ret
0x000000000042aff5 : cmp al, r14b ; ret
0x000000000048ab96 : cmp bh, 0x10 ; jne 0x48abbf ; xor eax, eax ; ret
0x000000000048dd36 : cmp bh, 0x10 ; jne 0x48dd55 ; xor eax, eax ; ret
0x000000000048eb96 : cmp bh, 0x10 ; jne 0x48ebb5 ; xor eax, eax ; ret
0x000000000048f606 : cmp bh, 0x10 ; jne 0x48f62f ; xor eax, eax ; ret
0x000000000048dd1c : cmp bh, 0x30 ; jne 0x48dd51 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048eb7c : cmp bh, 0x30 ; jne 0x48ebb1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004945d9 : cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000494715 : cmp bh, dl ; call rsp
0x0000000000494595 : cmp bh, dl ; jmp qword ptr [rax]
0x00000000004105f2 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000411faf : cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004769db : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000045e2f7 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412a59 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040165b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x00000000004824be : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042b037 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000004701b5 : cmp byte ptr [rax + 1], cl ; ret
0x000000000046fc40 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045824f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045ac77 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000450e48 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045adf4 : cmp byte ptr [rax - 0x75], cl ; jl 0x45ae25 ; and byte ptr [rax + 1], cl ; ret
0x00000000004105f3 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047de09 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000410e80 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000046f9e6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452754 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b026 : cmp byte ptr [rax], ah ; ret
0x00000000004166f3 : cmp byte ptr [rax], al ; je 0x416705 ; ret
0x000000000048cd1f : cmp byte ptr [rax], al ; je 0x48cd48 ; add rsp, 0x18 ; ret
0x0000000000446772 : cmp byte ptr [rax], al ; retf 0xf66
0x000000000043fda0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b016 : cmp byte ptr [rax], dl ; ret
0x000000000042b015 : cmp byte ptr [rax], r10b ; ret
0x000000000042b025 : cmp byte ptr [rax], r12b ; ret
0x000000000043fd9f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000493d68 : cmp byte ptr [rbp - 0x407f0007], 0xf9 ; call qword ptr [rax]
0x00000000004b3a39 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b3a6d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b3a05 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048a838 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040da66 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415d70 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004578ad : cmp byte ptr [rbx + rcx*4 + 0x35], cl ; ret
0x00000000004ac744 : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x00000000004715c0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048ce1b : cmp byte ptr [rcx + rsi], 8 ; jne 0x48ce2e ; mov qword ptr [rax], rdx ; ret
0x0000000000403f1b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000457f77 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000047fcd6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000448e61 : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000493d6c : cmp byte ptr [rdi - 0x4def0007], 0xf9 ; call rax
0x00000000004aadc2 : cmp byte ptr [rdi], 0 ; add byte ptr [rax + 0x40], al ; mov ah, bh ; std ; jmp rax
0x00000000004166b8 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000004b4a98 : cmp byte ptr [rdi], dh ; std ; jmp qword ptr [rcx]
0x000000000042c91d : cmp byte ptr [rdi], dl ; ret
0x000000000042d430 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d419 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d402 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042bebe : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048cdac : cmp byte ptr [rdx + rsi], 8 ; jne 0x48cdd5 ; mov rax, qword ptr [rax] ; ret
0x00000000004aedd8 : cmp byte ptr [rsi - 9], dl ; jmp qword ptr [rbx]
0x00000000004b2700 : cmp ch, 0xfb ; jmp qword ptr [rbx]
0x00000000004aadec : cmp ch, bh ; std ; call rax
0x000000000048c354 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000488912 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042db01 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042dc51 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042dda1 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042def1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042e041 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042e191 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042e2e1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042e431 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042e581 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042e6d1 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042e821 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042e971 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042eac1 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042ec11 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042ed61 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000432d3a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x0000000000432eba : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000043303a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x00000000004331ba : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000043333a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x00000000004334ba : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000043363a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x00000000004337ba : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000043393a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433aba : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433c3a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x0000000000433dba : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x0000000000433f3a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x00000000004340ba : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000043423a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004a9426 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004047d7 : cmp cl, ch ; ret 0xfffb
0x0000000000440201 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000447c7a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004b1428 : cmp dh, dh ; std ; call rdx
0x000000000048ab95 : cmp dil, 0x10 ; jne 0x48abc0 ; xor eax, eax ; ret
0x000000000048dd35 : cmp dil, 0x10 ; jne 0x48dd56 ; xor eax, eax ; ret
0x000000000048eb95 : cmp dil, 0x10 ; jne 0x48ebb6 ; xor eax, eax ; ret
0x000000000048f605 : cmp dil, 0x10 ; jne 0x48f630 ; xor eax, eax ; ret
0x0000000000447940 : cmp dl, 1 ; ja 0x447963 ; jb 0x447952 ; mov byte ptr [rdi], cl ; ret
0x00000000004381cb : cmp dl, 1 ; jb 0x4381dd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044693a : cmp dl, 1 ; jb 0x446948 ; mov byte ptr [rdi], cl ; ret
0x0000000000422a65 : cmp dl, al ; jne 0x422a58 ; sub rax, 0x10 ; ret
0x00000000004947a9 : cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x00000000004945e9 : cmp dl, bh ; call rsi
0x00000000004945e5 : cmp dl, bh ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x00000000004945e8 : cmp dl, r15b ; call rsi
0x0000000000422a64 : cmp dl, r8b ; jne 0x422a59 ; sub rax, 0x10 ; ret
0x0000000000471568 : cmp dword ptr [rax + 0x30], 0 ; je 0x471577 ; ret
0x0000000000429917 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a0f7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040ea11 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000434458 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004166f1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416707 ; ret
0x0000000000424201 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000041835b : cmp dword ptr [rdx], ebp ; add byte ptr [rcx], al ; ret
0x000000000045e3e3 : cmp dword ptr [rip + 0x39480001], ebx ; ret
0x000000000047f55f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000471586 : cmp eax, -1 ; je 0x471599 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004816ac : cmp eax, -3 ; jbe 0x4816be ; ret
0x0000000000487425 : cmp eax, 0x231b4d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460ac1 : cmp eax, 0x255c5a ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000412502 : cmp eax, 0x2a6aa0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040380a : cmp eax, 0x2b5750 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004035bf : cmp eax, 0x2b88dc ; call 7
0x0000000000403579 : cmp eax, 0x2b8922 ; call 7
0x0000000000495259 : cmp eax, 0x3da1fffb ; sti ; call rsp
0x0000000000495369 : cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x00000000004953bd : cmp eax, 0x3dd4fffb ; sti ; call rsp
0x000000000049523d : cmp eax, 0x3e62fffb ; sti ; call rsp
0x000000000044a372 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c0df : cmp eax, 0x83482f74 ; ret
0x000000000044bf06 : cmp eax, 0x83497174 ; ret
0x00000000004731d4 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000454b6f : cmp eax, 0x89fffacf ; retf 0xe283
0x0000000000454af2 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004af091 : cmp eax, 0x971c0000 ; clc ; jmp qword ptr [rsi]
0x00000000004af07d : cmp eax, 0x97200000 ; clc ; call qword ptr [rax]
0x00000000004a694b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004af0a5 : cmp eax, 0xb9380000 ; clc ; call qword ptr [rax]
0x00000000004af0cd : cmp eax, 0xda600000 ; clc ; call qword ptr [rax]
0x00000000004af0f5 : cmp eax, 0xf5e80000 ; clc ; call qword ptr [rax]
0x0000000000449216 : cmp eax, 0xfffff000 ; ja 0x449228 ; ret
0x0000000000449264 : cmp eax, 0xfffff000 ; ja 0x449278 ; ret
0x000000000044946f : cmp eax, 0xfffff000 ; ja 0x4494d8 ; ret
0x0000000000449505 : cmp eax, 0xfffff000 ; ja 0x449518 ; ret
0x0000000000449542 : cmp eax, 0xfffff000 ; ja 0x4495a8 ; ret
0x00000000004495d8 : cmp eax, 0xfffff000 ; ja 0x4495f0 ; ret
0x0000000000449608 : cmp eax, 0xfffff000 ; ja 0x449620 ; ret
0x0000000000449812 : cmp eax, 0xfffff000 ; ja 0x449860 ; ret
0x0000000000449888 : cmp eax, 0xfffff000 ; ja 0x4498a0 ; ret
0x0000000000449fe1 : cmp eax, 0xfffff000 ; ja 0x449ff8 ; ret
0x000000000045abfe : cmp eax, 0xfffff000 ; ja 0x45ac18 ; ret
0x0000000000475226 : cmp eax, 0xfffff000 ; ja 0x475238 ; ret
0x000000000047527a : cmp eax, 0xfffff000 ; ja 0x475290 ; ret
0x0000000000449188 : cmp eax, 0xfffff001 ; jae 0x449197 ; ret
0x000000000044a218 : cmp eax, 0xfffff001 ; jae 0x44a227 ; ret
0x000000000044a248 : cmp eax, 0xfffff001 ; jae 0x44a257 ; ret
0x000000000044a278 : cmp eax, 0xfffff001 ; jae 0x44a287 ; ret
0x000000000044b92b : cmp eax, 0xfffff001 ; jae 0x44b93a ; ret
0x000000000044b958 : cmp eax, 0xfffff001 ; jae 0x44b967 ; ret
0x00000000004751a8 : cmp eax, 0xfffff001 ; jae 0x4751b7 ; ret
0x00000000004881d8 : cmp eax, 0xfffff001 ; jae 0x4881e7 ; ret
0x00000000004482fb : cmp eax, 2 ; je 0x44830f ; xor eax, eax ; ret
0x000000000044ba9a : cmp eax, 4 ; je 0x44baa5 ; ret
0x00000000004a8817 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000046f03b : cmp eax, ecx ; jg 0x46f058 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f017
0x000000000044678f : cmp eax, ecx ; jle 0x4467cf ; movsxd rax, ecx ; ret
0x00000000004461a3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004183fb : cmp eax, edx ; jae 0x418427 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487954 : cmp eax, esi ; je 0x487965 ; ret
0x000000000046f03a : cmp eax, r9d ; jg 0x46f059 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f018
0x000000000045619c : cmp ebp, ebx ; jb 0x45620e ; mov rdx, rax ; jmp 0x456165
0x000000000044ba36 : cmp ebx, 0xa ; je 0x44ba41 ; ret
0x000000000044d04e : cmp ebx, eax ; setne dl ; jmp 0x44d03a
0x00000000004738f5 : cmp ecx, 0xc00 ; je 0x473909 ; ret
0x000000000044bc61 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44bc56 ; ret
0x0000000000486d8e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x486d9f ; add rdx, rax ; jmp 0x486da8
0x0000000000482178 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x2fe8
0x000000000044e562 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041e8b4 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call rax
0x000000000047f5a8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f558 ; xor eax, eax ; ret
0x0000000000471b2e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d44b : cmp ecx, eax ; jne 0x42d479 ; xor eax, eax ; ret
0x000000000047e338 : cmp ecx, eax ; jne 0x47e2e2 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000483ed2 : cmp ecx, ecx ; ret
0x000000000044f9f9 : cmp ecx, edi ; add byte ptr es:[rax - 0x77], cl ; mov r8b, 0xe8 ; retf 0xffad
0x000000000047189a : cmp ecx, esi ; jne 0x471897 ; lea eax, [rdx + rdi] ; ret
0x000000000047e326 : cmp ecx, esi ; jne 0x47e305 ; ret
0x0000000000465af0 : cmp edi, eax ; ja 0x465ad7 ; mov eax, r9d ; ret
0x000000000047559e : cmp edi, edx ; ja 0x4755cd ; ret
0x0000000000446b42 : cmp edi, edx ; jb 0x446b4f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465aef : cmp edi, r8d ; ja 0x465ad8 ; mov eax, r9d ; ret
0x000000000041f2aa : cmp edx, eax ; jne 0x41f275 ; ret
0x000000000044792b : cmp edx, ecx ; jne 0x447918 ; ret
0x0000000000447a92 : cmp edx, ecx ; jne 0x447a7e ; vzeroupper ; ret
0x0000000000447c55 : cmp edx, ecx ; jne 0x447c39 ; vzeroupper ; ret
0x000000000049465d : cmp edx, edi ; call qword ptr [rdx]
0x00000000004945a1 : cmp edx, edi ; call rax
0x000000000049459d : cmp edx, edi ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x00000000004945dd : cmp edx, edi ; jmp qword ptr [rsi]
0x000000000049479d : cmp edx, edi ; jmp rax
0x000000000044b9ba : cmp edx, edi ; setae al ; ret
0x0000000000474006 : cmp edx, esi ; je 0x474017 ; test edx, edx ; jne 0x474009 ; ret
0x0000000000418439 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000004583c4 : cmp esi, 3 ; je 0x4583d6 ; ret
0x0000000000446f25 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a89e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000041765a : cmp esi, ecx ; jne 0x417657 ; lea eax, [rdx + rdi] ; ret
0x00000000004b353d : cmp esp, -1 ; retf 0
0x0000000000471567 : cmp qword ptr [rax + 0x30], 0 ; je 0x471578 ; ret
0x00000000004166f0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416708 ; ret
0x000000000044ba35 : cmp r11d, 0xa ; je 0x44ba42 ; ret
0x000000000045619b : cmp r13, r11 ; jb 0x45620f ; mov rdx, rax ; jmp 0x456166
0x0000000000494714 : cmp r15b, dl ; call rsp
0x0000000000449215 : cmp rax, -0x1000 ; ja 0x449229 ; ret
0x0000000000449263 : cmp rax, -0x1000 ; ja 0x449279 ; ret
0x000000000044946e : cmp rax, -0x1000 ; ja 0x4494d9 ; ret
0x0000000000449504 : cmp rax, -0x1000 ; ja 0x449519 ; ret
0x0000000000449541 : cmp rax, -0x1000 ; ja 0x4495a9 ; ret
0x00000000004495d7 : cmp rax, -0x1000 ; ja 0x4495f1 ; ret
0x0000000000449607 : cmp rax, -0x1000 ; ja 0x449621 ; ret
0x0000000000449811 : cmp rax, -0x1000 ; ja 0x449861 ; ret
0x0000000000449887 : cmp rax, -0x1000 ; ja 0x4498a1 ; ret
0x0000000000449fe0 : cmp rax, -0x1000 ; ja 0x449ff9 ; ret
0x000000000045abfd : cmp rax, -0x1000 ; ja 0x45ac19 ; ret
0x0000000000475225 : cmp rax, -0x1000 ; ja 0x475239 ; ret
0x0000000000475279 : cmp rax, -0x1000 ; ja 0x475291 ; ret
0x0000000000449187 : cmp rax, -0xfff ; jae 0x449198 ; ret
0x000000000044a217 : cmp rax, -0xfff ; jae 0x44a228 ; ret
0x000000000044a247 : cmp rax, -0xfff ; jae 0x44a258 ; ret
0x000000000044a277 : cmp rax, -0xfff ; jae 0x44a288 ; ret
0x000000000044b92a : cmp rax, -0xfff ; jae 0x44b93b ; ret
0x000000000044b957 : cmp rax, -0xfff ; jae 0x44b968 ; ret
0x00000000004751a7 : cmp rax, -0xfff ; jae 0x4751b8 ; ret
0x00000000004881d7 : cmp rax, -0xfff ; jae 0x4881e8 ; ret
0x000000000047f55e : cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004816ab : cmp rax, -3 ; jbe 0x4816bf ; ret
0x00000000004183fa : cmp rax, rdx ; jae 0x418428 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487953 : cmp rax, rsi ; je 0x487966 ; ret
0x000000000044bc60 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44bc57 ; ret
0x000000000047f5a7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47f559 ; xor eax, eax ; ret
0x0000000000471b2d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e337 : cmp rcx, r8 ; jne 0x47e2e3 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d44a : cmp rcx, rax ; jne 0x42d47a ; xor eax, eax ; ret
0x0000000000471899 : cmp rcx, rsi ; jne 0x471898 ; lea eax, [rdx + rdi] ; ret
0x000000000047e325 : cmp rcx, rsi ; jne 0x47e306 ; ret
0x000000000047559d : cmp rdi, rdx ; ja 0x4755ce ; ret
0x0000000000446b41 : cmp rdi, rdx ; jb 0x446b50 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f2a9 : cmp rdx, r8 ; jne 0x41f276 ; ret
0x000000000044792a : cmp rdx, rcx ; jne 0x447919 ; ret
0x0000000000447929 : cmp rdx, rcx ; jne 0x44791a ; ret
0x0000000000447a91 : cmp rdx, rcx ; jne 0x447a7f ; vzeroupper ; ret
0x0000000000447c54 : cmp rdx, rcx ; jne 0x447c3a ; vzeroupper ; ret
0x000000000044b9b9 : cmp rdx, rdi ; setae al ; ret
0x0000000000417659 : cmp rsi, rcx ; jne 0x417658 ; lea eax, [rdx + rdi] ; ret
0x000000000042cec9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000494bad : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x00000000004ab9e1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rax]
0x00000000004a6a16 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a69e2 ; mov ecx, 0x5b92ac50 ; retf
0x000000000043dbb6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a8b31 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000493e75 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax - 0x1f000659]
0x00000000004afbe1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x0000000000482074 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub byte ptr [rdx], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000041ca4d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047c678 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000410529 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a64ff : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000004001c3 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000040fd60 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x2a
0x00000000004afc8d : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call rsi
0x0000000000493e79 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x0000000000400b19 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004afc8c : cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; stc ; call rsi
0x000000000048ac10 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000419cec : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048aca5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000041052a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000045134f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000491cac : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049140c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004af8e1 : cwde ; stc ; jmp qword ptr [rcx]
0x0000000000493c51 : cwde ; stc ; jmp rsi
0x0000000000466a24 : cwde ; sub al, 4 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000441ea1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000441ea2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044746d : dec byte ptr [rax + 0x7f] ; jl 0x447492 ; cld ; vzeroupper ; ret
0x000000000045d929 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x00000000004809af : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xede8
0x0000000000472380 : dec byte ptr [rax - 0x77] ; ret
0x000000000048094d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044a4c2 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e3b6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044ab53 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000040df67 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004816a9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x4816c1 ; ret
0x0000000000456543 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x00000000004140de : dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000410ebd : dec dword ptr [rax + 0x29] ; ret
0x0000000000441fe2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482671 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004827b1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e335 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000475fbb : dec dword ptr [rax + 0x39] ; ret
0x0000000000412ced : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000488e79 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041d6d5 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041d6a7 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x000000000048436e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045ea5c : dec dword ptr [rax + 0x63] ; retf
0x000000000046ea52 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000473169 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047f561 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004233c1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473919 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045ac7b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004724d1 : dec dword ptr [rax + 1] ; ret
0x0000000000402fd3 : dec dword ptr [rax - 0x39] ; ret
0x000000000044910f : dec dword ptr [rax - 0x39] ; ret 0
0x00000000004490b4 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045d990 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000449027 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000468626 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004493a5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000448f7c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048b9bf : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000456454 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047f785 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041e788 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048beb2 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044ecfc : dec dword ptr [rax - 0x75] ; jne 0x44ec96 ; call rsi
0x0000000000468e3b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048c6df : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044a755 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004818ec : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f434 : dec dword ptr [rax - 0x77] ; add eax, 0x29a424 ; ret
0x000000000048a067 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f101 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000449bed : dec dword ptr [rax - 0x77] ; fucomip st(0) ; retf 0xfb68
0x0000000000401a3d : dec dword ptr [rax - 0x77] ; ret
0x000000000047558e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041ec2f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000423fdb : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x00000000004754ed : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000046d9a6 : dec dword ptr [rax - 0x77] ; ret 0x79e8
0x000000000041e9ac : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000423337 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045aaa2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046d638 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000448ea6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047831c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423a56 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044a1d5 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449001 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045646d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x0000000000448fed : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000423e68 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046b749 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000475acc : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046f9ea : dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000004057ef : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000047c937 : dec dword ptr [rax - 0x77] ; ret 0xf8e8
0x0000000000410eae : dec dword ptr [rax - 0x77] ; retf
0x0000000000477abc : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000461c2c : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000410829 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000477a1d : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046cb8f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x000000000040343c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x0000000000469633 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004816aa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4816c0 ; ret
0x000000000040473f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454271 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045295b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405d3b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000456544 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048dca7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040d96c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000459048 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b260 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043445c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000476ce7 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x000000000048e6a4 : dec dword ptr [rax - 9] ; ret
0x00000000004581c5 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000461894 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047701e : dec dword ptr [rbp + rcx*4 + 0xd] ; retf 0x2cc
0x0000000000467abd : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004510cd : dec dword ptr [rbp - 0x77] ; retf
0x000000000045c0e6 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423c93 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400db4 : dec dword ptr [rbx + 0x2bb04115] ; add bh, dh ; ret 0
0x00000000004aade7 : dec dword ptr [rbx + 0x38fffdfd] ; std ; std ; call rax
0x00000000004229ad : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004717d8 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000470d6b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048c2d8 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048c2f6 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048c357 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x00000000004600d3 : dec dword ptr [rcx + 0x39] ; ret
0x00000000004617ef : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047bfd9 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048a94a : dec dword ptr [rcx + 0x39] ; retf
0x000000000048c362 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046af55 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046aad7 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046d27e : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x000000000040216d : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048c32b : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048c320 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047c255 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000457e4a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000045949b : dec dword ptr [rcx + rcx*4 - 0x11] ; mov rsi, r12 ; call 0x4056e9
0x000000000044ecf9 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000457fa1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045827f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045d786 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046cab3 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041bacc : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000491da6 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004890d7 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e22f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000460037 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c320 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x0000000000404781 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047ccc0 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046aaa4 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041be66 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000045fe3f : dec dword ptr [rcx - 0x7d] ; ret
0x00000000004ab303 : dec dword ptr [rdi + 0x3cfffe28] ; sub dh, bh ; call rsp
0x000000000046033b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000459016 : dec dword ptr [rdi] ; mov bh, 0xd ; retf 0x3dd
0x00000000004507fb : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000452e5f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000446030 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f61f : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d41a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045fda7 : dec dword ptr [rdi] ; xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000420f3c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000041843b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000495377 : dec dword ptr [rsi + rdi - 5] ; call rsp
0x0000000000493c4f : dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x000000000049458f : dec dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x000000000045b198 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000441fe1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000473352 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e385 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x00000000004583c1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x4583d9 ; ret
0x0000000000450e92 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000465b06 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000447e68 : div ecx ; mov eax, eax ; ret
0x0000000000447e4f : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000465b05 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b527 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e2e0 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004461a4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004833fb : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000441e9e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000441fde : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000475d50 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042b307 : enter -0x73b, 0x77 ; ret
0x000000000047e3ea : enter -0x76b8, -0x38 ; ret
0x000000000046434f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000042bcd4 : enter -2, -1 ; ret
0x0000000000494061 : enter -7, -0x80 ; leave ; stc ; call rax
0x000000000049dcbc : enter 0, 0 ; retf
0x00000000004a1d10 : enter 0, 0 ; retf 0
0x000000000049ee68 : enter 0x10, 0 ; retf
0x000000000046f03c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f016
0x0000000000440429 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046b989 : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000004841c1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044078e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000042588d : enter 0x31c3, -0x40 ; ret
0x0000000000446790 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004b0444 : enter 0x50, 0 ; fild word ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000004a919c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049e668 : enter 0xa, 0 ; retf
0x000000000049ea68 : enter 0xd, 0 ; retf
0x000000000042cf76 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043fdf1 : enter 0xf66, -0x15 ; ret
0x00000000004a1f10 : enter 1, 0 ; retf 1
0x000000000049f220 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2110 : enter 2, 0 ; retf 2
0x00000000004a2310 : enter 3, 0 ; retf 3
0x00000000004a2510 : enter 4, 0 ; retf 4
0x00000000004a2710 : enter 5, 0 ; retf 5
0x00000000004a2910 : enter 6, 0 ; retf 6
0x00000000004a2b10 : enter 7, 0 ; retf 7
0x00000000004a2d10 : enter 8, 0 ; retf 8
0x00000000004a2f10 : enter 9, 0 ; retf 9
0x000000000048cdc3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fba8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f727 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000457d75 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000465af3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042cac1 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048fbd4 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000448cdd : fbstp tbyte ptr [rdi - 5] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a87d8 : fcmovb st(0), st(3) ; ret
0x00000000004b3770 : fcmove st(0), st(5) ; hlt ; jmp qword ptr [rcx]
0x00000000004408ab : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045e806 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004b09d4 : fcom qword ptr [rdi] ; cli ; call rcx
0x000000000048cdc9 : fcomi st(3) ; ret
0x00000000004143e3 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000410326 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a071 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a9559 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a77c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004880c8 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004881af : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000493ed5 : fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000493ef5 : fdiv st(1), st(0) ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000493ff9 : fdiv st(1), st(0) ; jmp qword ptr [rax]
0x0000000000493f15 : fdiv st(1), st(0) ; jmp rax
0x000000000048aa19 : fdiv st(3) ; ret
0x0000000000493ffd : fdivp st(1) ; call qword ptr [rax]
0x0000000000493ef9 : fdivp st(1) ; jmp rax
0x00000000004a6b15 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004922d8 : fdivr st(6) ; idiv bh ; retf 0xf6fe
0x00000000004461a8 : fdivr st(7) ; ret
0x0000000000400591 : fiadd dword ptr [rax] ; test dl, dl ; jne 0x4005a0 ; ret
0x000000000040efc8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000470f13 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000459365 : fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045a7da : fiadd dword ptr [rdx] ; add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x000000000041213a : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x000000000047ad92 : ficom word ptr [rsi + 0xf480002] ; ret 0x8b48
0x00000000004a93a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000487d25 : fidivr dword ptr [rax + 1] ; ret
0x00000000004953bc : fidivr word ptr [rip + 0x3dd4fffb] ; sti ; call rsp
0x00000000004242f1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004b0448 : fild word ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000004648e2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000004242f2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004198dc : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000455009 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004809a7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046547d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000486414 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000465442 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042a056 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046bdfd : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000404964 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x000000000045099f : fimul word ptr [rax + 1] ; ret
0x000000000048404c : fimul word ptr [rbp + 0x11] ; retf
0x0000000000421691 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41d8d6
0x000000000044956f : fistp qword ptr [rax + 1] ; syscall
0x000000000041631e : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470a40 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000048554e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x48556c
0x00000000004585d7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483001 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000004662cc : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f176 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000477bee : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c1f0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048301b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000454ce7 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d294 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420b2b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405d5e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000045793a : fisttp qword ptr [rdi] ; ret 0xc389
0x00000000004809b2 : fisttp word ptr [rax - 0x77] ; ret 0xede8
0x00000000004018a3 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048309f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044982d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000043eeed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042ce91 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cb91 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049498c : fisubr dword ptr [rcx] ; cli ; ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x000000000045c0e3 : fld dword ptr [rbx - 6] ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000483314 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7801 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004731a2 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000473202 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041bf25 : fldcw word ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048e7f7 : fldenv [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042af39 : fldenv [rsi + 0xf] ; je 0x42af96 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b217 : fldenv [rsi + 0xf] ; je 0x42b274 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cf11 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ae31 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000004549f3 : fldl2t ; retf 0xfffd
0x00000000004682ec : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004840b4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041a9df : fmul dword ptr [rax + 0x39] ; ret
0x0000000000446477 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000411db8 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e041 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489624 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044c12c : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000476cea : fmul dword ptr [rcx + 0x21] ; ret 0x394c
0x0000000000468cd0 : fmul dword ptr [rdi] ; ret
0x00000000004035c0 : fmul qword ptr [rax + 0x37e8002b] ; retf 0xffbf
0x00000000004868b2 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048ec5e : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000424649 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438b6f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f3ff : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457b38 : fmul qword ptr [rdi] ; ret 0xc389
0x00000000004731a0 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004241af : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045619d : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456164
0x000000000040495b : fnstcw word ptr [rdx - 0x76b60001] ; ret 0x149
0x00000000004960dc : fnstenv [rbx - 5] ; jmp qword ptr [rax]
0x00000000004a904a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dab9 : fpatan ; ret
0x000000000042cc91 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a74e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7860 : fstp st(0) ; ret 0xde5d
0x00000000004a6a2b : fstp st(3), st(0) ; retf 0xeb83
0x0000000000449198 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449228 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042cf91 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440d14 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a8e18 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x00000000004465bb : fsub qword ptr [rsi + 0xf] ; jmp 0x446587
0x000000000042cd91 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043ff0c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004497d4 : fsubr st(3) ; ret 0xf66
0x00000000004a9538 : fucom st(5) ; loop 0x4a9591 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000479e21 : fucomi st(3) ; ret 0x1f0f
0x0000000000471ca7 : fucomip st(0) ; ret
0x00000000004724df : fucomip st(0) ; retf
0x0000000000449bf0 : fucomip st(0) ; retf 0xfb68
0x000000000048b0c1 : fucomip st(1) ; ret
0x00000000004a8b7e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000493f91 : fyl2xp1 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x00000000004aaefc : hlt ; adc esi, edi ; call rsp
0x000000000049443c : hlt ; add eax, 0x574fffa ; cli ; jmp rsp
0x000000000044a891 : hlt ; call r15
0x00000000004b3772 : hlt ; jmp qword ptr [rcx]
0x000000000043489a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f54e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000448c5e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000445cb3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a6a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000477778 : hlt ; retf
0x00000000004b3acc : hlt ; retf 0xfffc
0x00000000004a7a23 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000445cb7 : hlt ; sub eax, edx ; ret
0x00000000004ab83c : hlt ; xchg eax, edi ; cmc ; call rsp
0x000000000045d78c : idiv bh ; call rax
0x00000000004922d6 : idiv bh ; fdivr st(6) ; idiv bh ; retf 0xf6fe
0x000000000045e9d4 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e4e6 : idiv bh ; jmp qword ptr [rax]
0x00000000004922fa : idiv bh ; ret
0x00000000004acd26 : idiv bh ; retf
0x00000000004922da : idiv bh ; retf 0xf6fe
0x00000000004507f6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004b1429 : idiv ch ; call rdx
0x000000000049453d : idiv cl ; jmp rax
0x000000000045daa6 : idiv edi ; call qword ptr [rax]
0x00000000004924ee : idiv edi ; cmc ; mov dl, 0xf7 ; call rsi
0x000000000045ea5a : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045d98e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a471 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004922ee : idiv edi ; in al, dx ; push rsi ; jmp rcx
0x00000000004696cd : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000494c61 : idiv edx ; call rax
0x0000000000494c69 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494c5d : idiv edx ; inc eax ; idiv edx ; call rax
0x00000000004786b7 : imul al ; retf
0x000000000040ffab : imul eax ; call rsp
0x0000000000458dc7 : imul eax ; ret
0x00000000004129df : imul eax ; retf
0x0000000000444811 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000428487 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000467db2 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000427e87 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000004291e7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042a3c7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000427b87 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ace7f : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000495af1 : imul edi, ebx, -1 ; xor byte ptr [rbx - 5], ch ; call qword ptr [rax]
0x0000000000495ad9 : imul edi, ebx, 0xfb6944ff ; jmp rax
0x0000000000404914 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000427587 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000427287 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000426f87 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000448bb3 : imul edx, esi, 0x39480026 ; ret
0x0000000000417eae : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000443c8c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000495ad8 : imul r15d, ebx, 0xfb6944ff ; jmp rax
0x00000000004a8e61 : in al, 0x4c ; pop rax ; retf
0x00000000004b1260 : in al, 0x5e ; add byte ptr [rax], al ; in al, dx ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x000000000044099c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044bf03 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000045e080 : in al, 0xf ; lahf ; ret
0x000000000043487a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044792e : in al, 0xf3 ; ret
0x0000000000402afd : in al, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000041e8b7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call rax
0x000000000046f757 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rdi ; ret 0xfffd
0x000000000041f323 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000420df4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2ab
0x000000000041dff4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2d9
0x000000000045e524 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e361 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004578ac : in al, dx ; cmp byte ptr [rbx + rcx*4 + 0x35], cl ; ret
0x00000000004146d1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f54a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c7a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041e9cf : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a444 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004922f0 : in al, dx ; push rsi ; jmp rcx
0x00000000004a904d : in al, dx ; retf 0xae32
0x000000000048d9a9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a424 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000494561 : in al, dx ; stc ; jmp rax
0x0000000000477b2d : in al, dx ; sub byte ptr [rbp + rcx*4 + 0x15], cl ; ret 2
0x00000000004b1264 : in al, dx ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004a8f7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a8f11 ; ret 0x48f
0x00000000004a8f7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a8f12 ; ret 0x48f
0x0000000000448ef6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a7683 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484372 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000413a9b : in eax, 0x4d ; sub edi, esp ; call 0x4004ae
0x00000000004a6919 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048beea : in eax, 0x83 ; call qword ptr [rcx]
0x00000000004632cd : in eax, 0xdf ; loopne 0x46325e ; ret
0x00000000004a9539 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a76da : in eax, 0xe5 ; retf 0x2a91
0x00000000004744c3 : in eax, 0xf ; je 0x4744e8 ; add rax, 2 ; ret
0x0000000000447de9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004348fa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000493f29 : in eax, 0xf9 ; call qword ptr [rax + 0x20fff9e7]
0x000000000049400d : in eax, 0xf9 ; call qword ptr [rax - 0x2f000641]
0x0000000000493ee9 : in eax, 0xf9 ; call rax
0x00000000004a8a01 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000475dee : in eax, 2 ; add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000042433b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466878 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469a08 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044a34a : in eax, dx ; jne 0x44a367 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aeb5 : in eax, dx ; jne 0x44aedf ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aee8 : in eax, dx ; jne 0x44af38 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af14 : in eax, dx ; jne 0x44af98 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000048fc1f : in eax, dx ; jne 0x48fc01 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048fe72 : in eax, dx ; jne 0x48fe5f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490a2c : in eax, dx ; jne 0x490a17 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004464d2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000042f35a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434cfa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004827e7 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x00000000004160c2 : in eax, dx ; ret
0x000000000041de77 : in eax, dx ; ret 0x29
0x00000000004a7458 : in eax, dx ; retf
0x000000000040fd1a : in eax, dx ; retf 0x2a
0x0000000000494525 : in eax, dx ; stc ; jmp rax
0x0000000000469631 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446622 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446938 : inc bl ; cmp dl, 1 ; jb 0x44694a ; mov byte ptr [rdi], cl ; ret
0x00000000004166b2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044a4dc : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x00000000004583c5 : inc byte ptr [rbx] ; je 0x4583d5 ; ret
0x000000000041935e : inc byte ptr [rdx + rbp] ; add bl, dh ; ret
0x000000000047ee28 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493d6b : inc dword ptr [rax + 0x10fff9bf] ; mov dl, 0xf9 ; call rax
0x00000000004940a7 : inc dword ptr [rax + 0x12] ; cli ; call rax
0x00000000004947b7 : inc dword ptr [rax + 0x36] ; cli ; call rax
0x000000000049459f : inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000493d0b : inc dword ptr [rax + 0x58fff997] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000493b93 : inc dword ptr [rax + 0x64] ; stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x00000000004942bf : inc dword ptr [rax + 0xf] ; cli ; call rax
0x00000000004944cf : inc dword ptr [rax + 3] ; cli ; jmp rax
0x0000000000493f7b : inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x0000000000493ff7 : inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000493f93 : inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000493f0f : inc dword ptr [rax - 0x26] ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x000000000049403f : inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x00000000004a3653 : inc dword ptr [rax - 0x2f000350] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000494bb7 : inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000494063 : inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x0000000000493e83 : inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000493e97 : inc dword ptr [rax - 0x2f000663] ; sahf ; stc ; jmp qword ptr [rax]
0x0000000000494053 : inc dword ptr [rax - 0x3c] ; stc ; call qword ptr [rax - 0x1f00063b]
0x0000000000493e4f : inc dword ptr [rax - 0x3f000669] ; wait ; stc ; call qword ptr [rax]
0x0000000000493d9f : inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000493e73 : inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x0000000000494ba7 : inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000494b77 : inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x0000000000493d03 : inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000494b57 : inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x000000000046a15d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045ea15 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494097 : inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x00000000004942af : inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000460049 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045e9d6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000447d8f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d4a7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000493ad7 : inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x0000000000494c6b : inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494bd7 : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494cb3 : inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x00000000004947a7 : inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000493f13 : inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x0000000000493ef7 : inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000493d17 : inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x0000000000493e3f : inc dword ptr [rax] ; mov eax, 0xb9d0fff9 ; stc ; call rax
0x0000000000493ba3 : inc dword ptr [rax] ; push 0x68f0fff9 ; stc ; jmp rax
0x0000000000494adf : inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000493b5f : inc dword ptr [rax] ; push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000494c93 : inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000493cf3 : inc dword ptr [rax] ; xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000454ce4 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047b89f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004821fc : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402700 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400937 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000494943 : inc dword ptr [rbx + rbp] ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x000000000049421b : inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000040d48b : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048df19 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x0000000000459440 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c113 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045e994 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x0000000000447e4d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447dbb : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047ee29 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045fd62 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046cab9 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000487c54 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000480b62 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x0000000000495ad7 : inc dword ptr [rcx + rbp*2 - 5] ; inc dword ptr [rcx + rbp*2 - 5] ; jmp rax
0x0000000000495adb : inc dword ptr [rcx + rbp*2 - 5] ; jmp rax
0x000000000041239b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000046f4e1 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x46f4b7
0x000000000045219e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000455486 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000459443 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046d8a6 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044a1c7 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x00000000004696cf : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000464ddf : inc dword ptr [rcx] ; retf
0x0000000000494153 : inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494713 : inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494383 : inc dword ptr [rdx] ; add eax, 0x472fffa ; cli ; jmp rdx
0x000000000049467b : inc dword ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000043f6cd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004940ef : inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x00000000004945e7 : inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x000000000048dcf2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004940df : inc dword ptr [rsi] ; adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x00000000004945d7 : inc dword ptr [rsi] ; cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000493acf : inc eax ; and ecx, edi ; jmp rax
0x0000000000494c87 : inc eax ; clc ; cli ; jmp rax
0x0000000000494acf : inc eax ; cli ; call rax
0x0000000000494c5f : inc eax ; idiv edx ; call rax
0x00000000004a49ef : inc eax ; jbe 0x4a49f4 ; call qword ptr [rax]
0x0000000000493d2b : inc eax ; mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x0000000000494cab : inc eax ; stc ; cli ; jmp rax
0x0000000000493aef : inc eax ; sub bh, cl ; jmp rax
0x0000000000494a0b : inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000493e53 : inc eax ; wait ; stc ; call qword ptr [rax]
0x00000000004945bf : inc eax ; xor eax, 0x3550fffa ; cli ; jmp rax
0x000000000042bdfc : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471b3c : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004461a9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000495367 : inc esp ; cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x000000000042442b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042abc4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a953e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b0ee8 : insb byte ptr [rdi], dx ; pop rbx ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4b0ef0 ; call qword ptr [rdx]
0x000000000045d125 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004a8906 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000424140 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000452e56 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409e9f : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042403b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000048fca2 : insd dword ptr [rdi], dx ; js 0x48fd1f ; ret 0x8b48
0x00000000004a953f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a78ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004a87ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000467daa : int 0x80
0x0000000000473ee6 : int1 ; call rbx
0x0000000000490b97 : int1 ; clc ; push rbx ; ret
0x0000000000494bd5 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000456062 : int1 ; je 0x456211 ; mov rdx, rax ; jmp 0x456029
0x0000000000456467 : int1 ; je 0x456211 ; mov rdx, rax ; jmp 0x45642e
0x00000000004564de : int1 ; je 0x456211 ; mov rdx, rax ; jmp 0x4564a5
0x00000000004468bb : int1 ; jl 0x44690c ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004468dc : int1 ; jl 0x44692d ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004468ef : int1 ; jl 0x446940 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004469c4 : int1 ; jl 0x446a15 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446a1c : int1 ; jl 0x446a6d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446ab9 : int1 ; jl 0x446b0a ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447d45 : int1 ; jmp rcx
0x000000000047189b : int1 ; jne 0x471896 ; lea eax, [rdx + rdi] ; ret
0x000000000047e327 : int1 ; jne 0x47e304 ; ret
0x00000000004a87c4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000447e69 : int1 ; mov eax, eax ; ret
0x00000000004346eb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fb1f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000445c83 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000447e50 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004905bb : int1 ; ret
0x00000000004a8f16 : int1 ; ret 0x5803
0x0000000000445c87 : int1 ; sub eax, edx ; ret
0x0000000000400936 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000405d6d : ja 0x405d4e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004385f3 : ja 0x4385f7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000443dd7 : ja 0x443ddd ; ret
0x0000000000443df3 : ja 0x443dfd ; mov dword ptr [rdi], ecx ; ret
0x0000000000443e34 : ja 0x443e43 ; mov qword ptr [rdi], rcx ; ret
0x0000000000443eb9 : ja 0x443ecd ; ret
0x0000000000443f0f : ja 0x443f27 ; ret
0x0000000000443f91 : ja 0x443fad ; ret
0x00000000004443f7 : ja 0x444401 ; lea rax, [rdi + 2] ; ret
0x0000000000444413 : ja 0x444421 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444464 : ja 0x444477 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000444549 : ja 0x444561 ; lea rax, [rdi + 0x10] ; ret
0x00000000004445bf : ja 0x4445db ; lea rax, [rdi + 0x14] ; ret
0x0000000000444641 : ja 0x444661 ; lea rax, [rdi + 0x18] ; ret
0x0000000000446bc4 : ja 0x446bf5 ; jb 0x446bd6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446f24 : ja 0x446f6a ; jb 0x446f36 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447374 : ja 0x4473d2 ; jb 0x447386 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447943 : ja 0x447960 ; jb 0x44794f ; mov byte ptr [rdi], cl ; ret
0x0000000000447ab1 : ja 0x447ae8 ; jb 0x447ac0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447c79 : ja 0x447cbe ; jb 0x447c88 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448c5c : ja 0x448c88 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000448cde : ja 0x448ce0 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044921b : ja 0x449223 ; ret
0x0000000000449269 : ja 0x449273 ; ret
0x0000000000449474 : ja 0x4494d3 ; ret
0x000000000044950a : ja 0x449513 ; ret
0x0000000000449547 : ja 0x4495a3 ; ret
0x00000000004495dd : ja 0x4495eb ; ret
0x000000000044960d : ja 0x44961b ; ret
0x0000000000449817 : ja 0x44985b ; ret
0x000000000044988d : ja 0x44989b ; ret
0x0000000000449fe6 : ja 0x449ff3 ; ret
0x000000000044c3e0 : ja 0x44c40d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d105 : ja 0x44d159 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045ac03 : ja 0x45ac13 ; ret
0x0000000000465af2 : ja 0x465ad5 ; mov eax, r9d ; ret
0x00000000004749a9 : ja 0x474977 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047522b : ja 0x475233 ; ret
0x000000000047527f : ja 0x47528b ; ret
0x00000000004755a0 : ja 0x4755cb ; ret
0x000000000047d404 : ja 0x47d410 ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000482a9e : ja 0x482af0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048d8ad : ja 0x48d8b6 ; sbb eax, eax ; ret
0x00000000004a8f84 : ja 0x4a8f0b ; ret 0x48f
0x00000000004b2a7d : ja 0x4b2a85 ; add byte ptr [rax + 0x15], dh ; cld ; jmp qword ptr [rax]
0x00000000004183fd : jae 0x418425 ; movzx eax, byte ptr [rax] ; ret
0x000000000044918d : jae 0x449192 ; ret
0x000000000044a21d : jae 0x44a222 ; ret
0x000000000044a24d : jae 0x44a252 ; ret
0x000000000044a27d : jae 0x44a282 ; ret
0x000000000044b930 : jae 0x44b935 ; ret
0x000000000044b95d : jae 0x44b962 ; ret
0x000000000044bc64 : jae 0x44bc53 ; ret
0x0000000000454aff : jae 0x454a8c ; retf 0xb941
0x000000000045a9ae : jae 0x45a9f5 ; xor eax, eax ; pop rbx ; ret
0x00000000004751ad : jae 0x4751b2 ; ret
0x000000000047f5ab : jae 0x47f555 ; xor eax, eax ; ret
0x0000000000487d24 : jae 0x487d07 ; mov eax, 1 ; ret
0x00000000004881dd : jae 0x4881e2 ; ret
0x000000000048e836 : jae 0x48e849 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004960bd : jae 0x4960bc ; jmp qword ptr [rdi]
0x00000000004960dd : jae 0x4960dc ; jmp qword ptr [rax]
0x00000000004a7542 : jae 0x4a7524 ; jo 0x4a75c0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a83de : jae 0x4a83b9 ; push rsi ; pop rdx ; je 0x4a83ae ; ret 0xacfc
0x00000000004acbda : jae 0x4acbe8 ; ret
0x00000000004b26e5 : jae 0x4b26ed ; add byte ptr [rax - 3], ch ; sti ; jmp qword ptr [rbx]
0x000000000041d887 : jb 0x41d871 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042437a : jb 0x4243fe ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042db2a : jb 0x42db3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042dc7a : jb 0x42dc8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ddca : jb 0x42ddda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df1a : jb 0x42df2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e06a : jb 0x42e07a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e1ba : jb 0x42e1ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e30a : jb 0x42e31a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e45a : jb 0x42e46a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e5aa : jb 0x42e5ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e6fa : jb 0x42e70a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e84a : jb 0x42e85a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e99a : jb 0x42e9aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eaea : jb 0x42eafa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec3a : jb 0x42ec4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed8a : jb 0x42ed9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004304fa : jb 0x43050a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043064a : jb 0x43065a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043079a : jb 0x4307aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308ea : jb 0x4308fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a3a : jb 0x430a4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b8a : jb 0x430b9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430cda : jb 0x430cea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e2a : jb 0x430e3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f7a : jb 0x430f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310ca : jb 0x4310da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043121a : jb 0x43122a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043136a : jb 0x43137a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314ba : jb 0x4314ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043160a : jb 0x43161a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043175a : jb 0x43176a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004381ce : jb 0x4381da ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446925 : jb 0x446934 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446930 : jb 0x446943 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000044693d : jb 0x446945 ; mov byte ptr [rdi], cl ; ret
0x0000000000446b44 : jb 0x446b4d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000446bc6 : jb 0x446bd4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446bc5 : jb 0x446bd5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446f26 : jb 0x446f34 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447376 : jb 0x447384 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447945 : jb 0x44794d ; mov byte ptr [rdi], cl ; ret
0x0000000000447ab3 : jb 0x447abe ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447c7b : jb 0x447c86 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000045619e : jb 0x45620c ; mov rdx, rax ; jmp 0x456163
0x0000000000494388 : jb 0x494391 ; cli ; jmp rdx
0x0000000000401784 : jbe 0x401798 ; syscall
0x000000000041045f : jbe 0x4104b2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b036 : jbe 0x42b075 ; add rax, rdi ; ret
0x000000000042b046 : jbe 0x42b077 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b056 : jbe 0x42b077 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b066 : jbe 0x42b077 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042b477 : jbe 0x42b4e8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000432ac1 : jbe 0x432af0 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000455bd2 : jbe 0x455bcc ; ret
0x00000000004816af : jbe 0x4816bb ; ret
0x00000000004849c4 : jbe 0x4849ed ; add cl, ch ; retf
0x0000000000490b96 : jbe 0x490b8e ; clc ; push rbx ; ret
0x0000000000493c84 : jbe 0x493c1f ; stc ; call qword ptr [rsi]
0x00000000004a49f1 : jbe 0x4a49f2 ; call qword ptr [rax]
0x00000000004a8e1c : jbe 0x4a8def ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a8e1b : jbe 0x4a8df0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a99 : je 0x400ab0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400adb : je 0x400af0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000403a88 : je 0x403a99 ; mov rdi, rbp ; call 0x41fd17
0x000000000040593e : je 0x40594e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000411fad : je 0x411fd8 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000412508 : je 0x41250f ; ret
0x00000000004140dc : je 0x414113 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000416271 : je 0x4162a0 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412509
0x00000000004166f5 : je 0x416703 ; ret
0x00000000004224f2 : je 0x42251e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004229e3 : je 0x4229f6 ; lea rax, [rdx - 0x10] ; ret
0x0000000000422bf0 : je 0x422b7d ; retf 0x4c89
0x0000000000422bef : je 0x422b7e ; retf 0x4c89
0x00000000004240a2 : je 0x42406d ; ret
0x0000000000429e23 : je 0x429ded ; lea r10, [r10 + r9] ; jmp r10
0x000000000042ad0a : je 0x42ad12 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042af3c : je 0x42af93 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b21a : je 0x42b271 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bbe5 : je 0x42bbf7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d207 : je 0x42d211 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043cc43 : je 0x43cc0d ; lea r10, [r10 + r9] ; jmp r10
0x000000000043e7d3 : je 0x43e79d ; lea r10, [r10 + r9] ; jmp r10
0x000000000043ffb1 : je 0x43ffc9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000004405d4 : je 0x4405df ; bsf eax, edx ; ret
0x000000000044067d : je 0x440696 ; bsf rax, rdx ; ret
0x0000000000446c53 : je 0x446c74 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004482fe : je 0x44830c ; xor eax, eax ; ret
0x00000000004482f9 : je 0x448319 ; cmp eax, 2 ; je 0x448311 ; xor eax, eax ; ret
0x000000000044834d : je 0x448333 ; ret
0x0000000000449788 : je 0x4497b7 ; mov eax, 0x48 ; syscall
0x0000000000449b47 : je 0x449b72 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a0aa : je 0x44a0b1 ; ret
0x000000000044ba39 : je 0x44ba3e ; ret
0x000000000044ba9d : je 0x44baa2 ; ret
0x000000000044c2ec : je 0x44c2ff ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044d018 : je 0x44d023 ; ret
0x000000000044d034 : je 0x44d049 ; mov dword ptr [rip + 0x26ba7c], edx ; pop rbx ; ret
0x0000000000451135 : je 0x451163 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004518ef : je 0x45191e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451bdf : je 0x451c0e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451f27 : je 0x451f56 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452166 : je 0x452195 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004527ce : je 0x4527fc ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453366 : je 0x453395 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004543f2 : je 0x454421 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000454eeb : je 0x454f1a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000455293 : je 0x4552c2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004556d7 : je 0x455706 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455b12 : je 0x455b40 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004560d4 : je 0x456103 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456063 : je 0x456210 ; mov rdx, rax ; jmp 0x456028
0x0000000000456468 : je 0x456210 ; mov rdx, rax ; jmp 0x45642d
0x00000000004564df : je 0x456210 ; mov rdx, rax ; jmp 0x4564a4
0x0000000000456403 : je 0x456432 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456917 : je 0x456946 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456d52 : je 0x456d80 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004583c7 : je 0x4583d3 ; ret
0x00000000004583c2 : je 0x4583d8 ; cmp esi, 3 ; je 0x4583d8 ; ret
0x0000000000458d1a : je 0x458d20 ; call rsi
0x0000000000458e16 : je 0x458e1c ; call rax
0x000000000045a21b : je 0x45a221 ; call rax
0x000000000045a7de : je 0x45a7eb ; ret
0x000000000046893c : je 0x468967 ; and byte ptr [rax + 1], cl ; ret
0x0000000000470716 : je 0x470766 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470715 : je 0x470767 ; add esp, 0x20 ; pop rbx ; ret
0x000000000047156c : je 0x471573 ; ret
0x0000000000471589 : je 0x471596 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004715c3 : je 0x471625 ; pop rbp ; pop r12 ; ret
0x000000000047164f : je 0x4716b1 ; pop rbp ; pop r12 ; ret
0x00000000004717da : je 0x471804 ; or al, 0xeb ; ret 0x5590
0x000000000047345c : je 0x473486 ; bsf rax, rdx ; ret
0x00000000004738fb : je 0x473903 ; ret
0x0000000000473ede : je 0x473f0d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474008 : je 0x474015 ; test edx, edx ; jne 0x474007 ; ret
0x00000000004744a9 : je 0x4744c9 ; mov cl, dl ; and cl, 0xf ; je 0x4744d9 ; ret
0x00000000004744b0 : je 0x4744d2 ; ret
0x00000000004744c5 : je 0x4744e6 ; add rax, 2 ; ret
0x000000000047540d : je 0x47543f ; mov eax, 0x101 ; syscall
0x0000000000475982 : je 0x475a81 ; xor eax, eax ; leave ; ret
0x000000000047e386 : je 0x47e393 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000480b5d : je 0x480aaf ; sub eax, r8d ; ret
0x0000000000484c92 : je 0x484ca6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485198 : je 0x4851c3 ; or byte ptr [rax + 1], cl ; ret
0x0000000000486d8d : je 0x486dd2 ; shl rdx, 5 ; add rdx, rax ; jmp 0x486da9
0x0000000000487956 : je 0x487963 ; ret
0x000000000048a79d : je 0x48a7c8 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048cd38 : je 0x48cd22 ; add rsp, 0x18 ; ret
0x000000000048cd21 : je 0x48cd46 ; add rsp, 0x18 ; ret
0x000000000048cdc8 : je 0x48cda8 ; ret
0x000000000048ce09 : je 0x48ce16 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f0fa : je 0x48f103 ; ret
0x000000000048f133 : je 0x48f144 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f149 ; ret
0x000000000048f20a : je 0x48f213 ; ret
0x00000000004909a3 : je 0x4909ae ; call rax
0x0000000000494440 : je 0x49444a ; cli ; jmp rsp
0x0000000000494948 : je 0x494977 ; cli ; jmp rsp
0x00000000004a4965 : je 0x4a4966 ; jmp qword ptr [rax]
0x00000000004a694c : je 0x4a697a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a76a8 : je 0x4a7673 ; xor al, 0xd8 ; ret
0x00000000004a83e2 : je 0x4a83aa ; ret 0xacfc
0x00000000004b0eed : je 0x4b0eeb ; call qword ptr [rdx]
0x00000000004b0f6d : je 0x4b0f6b ; jmp rax
0x00000000004b4acc : je 0x4b4b08 ; std ; jmp rsp
0x00000000004166f2 : jg 0x416732 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000042190a : jg 0x42193a ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000042f709 : jg 0x42f75c ; ret
0x000000000042f750 : jg 0x42f7a0 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000042f755 : jg 0x42f7a8 ; retf
0x000000000042f78f : jg 0x42f7da ; ret
0x000000000042f7cf : jg 0x42f81a ; retf
0x000000000042f909 : jg 0x42f95c ; ret 0x894c
0x000000000042f950 : jg 0x42f9a0 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000042f955 : jg 0x42f9a8 ; retf 0x894c
0x000000000042f98f : jg 0x42f9da ; ret 0x894c
0x000000000042f9cb : jg 0x42fa16 ; retf 0x894c
0x00000000004320d9 : jg 0x43212c ; ret
0x0000000000432120 : jg 0x432170 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000432125 : jg 0x432178 ; retf
0x000000000043215f : jg 0x4321aa ; ret
0x000000000043219f : jg 0x4321ea ; retf
0x00000000004322d9 : jg 0x43232c ; ret 0x894c
0x0000000000432320 : jg 0x432370 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000432325 : jg 0x432378 ; retf 0x894c
0x000000000043235f : jg 0x4323aa ; ret 0x894c
0x000000000043239b : jg 0x4323e6 ; retf 0x894c
0x00000000004346c8 : jg 0x434719 ; loope 0x4346c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043473f : jg 0x43478a ; ret 0xff2
0x0000000000434758 : jg 0x4347a9 ; loop 0x434757 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004347cf : jg 0x43481a ; ret
0x00000000004347e8 : jg 0x434839 ; jrcxz 0x4347e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434878 : jg 0x4348c9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004348f8 : jg 0x434949 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434978 : jg 0x4349c9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349f8 : jg 0x434a49 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b55 : jg 0x434ba5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434b5f : jg 0x434baa ; retf 0xff2
0x0000000000434bd5 : jg 0x434c25 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434bdf : jg 0x434c2a ; retf
0x0000000000434c78 : jg 0x434cc9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434cf8 : jg 0x434d49 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d88 : jg 0x434dd9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e08 : jg 0x434e59 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e7c : jg 0x434e87 ; ret
0x0000000000434ed6 : jg 0x434ee9 ; ret
0x0000000000434ed1 : jg 0x434f21 ; psllq mm1, qword ptr [rdi] ; jg 0x434eee ; ret
0x0000000000434f46 : jg 0x434f59 ; ret
0x0000000000434fb6 : jg 0x434fc9 ; ret
0x0000000000434fb1 : jg 0x435001 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435026 : jg 0x435039 ; ret
0x0000000000435021 : jg 0x435071 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435096 : jg 0x4350a9 ; ret
0x0000000000435091 : jg 0x4350e1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435106 : jg 0x435119 ; ret
0x0000000000435101 : jg 0x435151 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435176 : jg 0x435189 ; ret
0x0000000000435171 : jg 0x4351c1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004351e6 : jg 0x4351f9 ; ret
0x00000000004351e1 : jg 0x435231 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435256 : jg 0x435269 ; ret
0x00000000004352c6 : jg 0x4352d9 ; ret
0x0000000000435336 : jg 0x435349 ; ret
0x0000000000435331 : jg 0x435381 ; add eax, 0xf7f0ff3 ; ret
0x00000000004353a6 : jg 0x4353b9 ; ret
0x00000000004353a1 : jg 0x4353f1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435416 : jg 0x435429 ; ret
0x0000000000435411 : jg 0x435461 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435486 : jg 0x435499 ; ret
0x0000000000435481 : jg 0x4354d1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354f6 : jg 0x435509 ; ret
0x00000000004354f1 : jg 0x435541 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004371e8 : jg 0x437239 ; loope 0x4371e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043725f : jg 0x4372aa ; ret 0xff2
0x0000000000437278 : jg 0x4372c9 ; loop 0x437277 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004372ef : jg 0x43733a ; ret
0x0000000000437308 : jg 0x437359 ; jrcxz 0x437307 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437398 : jg 0x4373e9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437418 : jg 0x437469 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437498 : jg 0x4374e9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437518 : jg 0x437569 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437675 : jg 0x4376c5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043767f : jg 0x4376ca ; retf 0xff2
0x00000000004376f5 : jg 0x437745 ; mov ebx, 0x46f00ff2 ; retf
0x00000000004376ff : jg 0x43774a ; retf
0x0000000000437798 : jg 0x4377e9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437818 : jg 0x437869 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004378a8 : jg 0x4378f9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437928 : jg 0x437979 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043799c : jg 0x4379a7 ; ret
0x00000000004379f6 : jg 0x437a09 ; ret
0x00000000004379f1 : jg 0x437a41 ; psllq mm1, qword ptr [rdi] ; jg 0x437a0e ; ret
0x0000000000437a66 : jg 0x437a79 ; ret
0x0000000000437ad6 : jg 0x437ae9 ; ret
0x0000000000437ad1 : jg 0x437b21 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437b46 : jg 0x437b59 ; ret
0x0000000000437b41 : jg 0x437b91 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437bb6 : jg 0x437bc9 ; ret
0x0000000000437bb1 : jg 0x437c01 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437c26 : jg 0x437c39 ; ret
0x0000000000437c21 : jg 0x437c71 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437c96 : jg 0x437ca9 ; ret
0x0000000000437c91 : jg 0x437ce1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437d06 : jg 0x437d19 ; ret
0x0000000000437d01 : jg 0x437d51 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437d76 : jg 0x437d89 ; ret
0x0000000000437de6 : jg 0x437df9 ; ret
0x0000000000437e56 : jg 0x437e69 ; ret
0x0000000000437e51 : jg 0x437ea1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000437ec6 : jg 0x437ed9 ; ret
0x0000000000437ec1 : jg 0x437f11 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437f36 : jg 0x437f49 ; ret
0x0000000000437f31 : jg 0x437f81 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437fa6 : jg 0x437fb9 ; ret
0x0000000000437fa1 : jg 0x437ff1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438016 : jg 0x438029 ; ret
0x0000000000438011 : jg 0x438061 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438174 : jg 0x438185 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438188 : jg 0x438199 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004385fa : jg 0x4385f6 ; ret
0x0000000000443ea6 : jg 0x443eb1 ; ret
0x0000000000443eb6 : jg 0x443ec4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000443eca : jg 0x443ed9 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000443ee9 : jg 0x443ef7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000443ef9 : jg 0x443f07 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000443f09 : jg 0x443f1a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000443f2a : jg 0x443f39 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000443f4a : jg 0x443f59 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000443f6a : jg 0x443f79 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000443f8a : jg 0x443f9c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000443fcd : jg 0x443fdf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000443fed : jg 0x443fff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044400b : jg 0x44401b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044402b : jg 0x44403b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044404b : jg 0x44405b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044406b : jg 0x44407b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444536 : jg 0x444545 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444546 : jg 0x444558 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444579 : jg 0x44458b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000444599 : jg 0x4445ab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004446bf : jg 0x44471f ; or eax, 0x1c478d48 ; ret
0x0000000000446907 : jg 0x446917 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004468fd : jg 0x44691d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446d94 : jg 0x446dcc ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446e62 : jg 0x446e9a ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f3a : jg 0x446f4b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004470cb : jg 0x4470f5 ; vzeroupper ; ret
0x0000000000447172 : jg 0x44717c ; vzeroupper ; ret
0x00000000004471fe : jg 0x447228 ; vzeroupper ; ret
0x000000000044728e : jg 0x447298 ; vzeroupper ; ret
0x00000000004473a2 : jg 0x4473b3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447586 : jg 0x4475b0 ; vzeroupper ; ret
0x0000000000447585 : jg 0x4475b1 ; vzeroupper ; ret
0x000000000044764c : jg 0x447656 ; vzeroupper ; ret
0x000000000044764b : jg 0x447657 ; vzeroupper ; ret
0x000000000044771f : jg 0x447749 ; vzeroupper ; ret
0x000000000044771e : jg 0x44774a ; vzeroupper ; ret
0x00000000004477f2 : jg 0x4477fc ; vzeroupper ; ret
0x00000000004477f1 : jg 0x4477fd ; vzeroupper ; ret
0x000000000044785c : jg 0x447867 ; ret
0x00000000004478ac : jg 0x4478b7 ; ret
0x0000000000447923 : jg 0x44796f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004479b4 : jg 0x4479c2 ; vzeroupper ; ret
0x0000000000447a04 : jg 0x447a12 ; vzeroupper ; ret
0x0000000000447ac3 : jg 0x447ad1 ; vzeroupper ; ret
0x0000000000447b41 : jg 0x447b4f ; vzeroupper ; ret
0x0000000000447b40 : jg 0x447b50 ; vzeroupper ; ret
0x0000000000447ba1 : jg 0x447baf ; vzeroupper ; ret
0x0000000000447ba0 : jg 0x447bb0 ; vzeroupper ; ret
0x0000000000447c8b : jg 0x447c99 ; vzeroupper ; ret
0x0000000000447c99 : jg 0x447ca7 ; vzeroupper ; ret
0x0000000000447cf0 : jg 0x447d2d ; ret 0x2b77
0x0000000000447e0b : jg 0x447dd8 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000447e67 : jg 0x447e65 ; int1 ; mov eax, eax ; ret
0x000000000044dfd6 : jg 0x44df5d ; retf
0x0000000000453ce8 : jg 0x453c75 ; ret 0xdb76
0x000000000045ece2 : jg 0x45ecfb ; test byte ptr [rip - 0x7c000011], al ; ret
0x00000000004692b2 : jg 0x4692cb ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046a72a : jg 0x46a743 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046a827 : jg 0x46a840 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f03d : jg 0x46f056 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f015
0x000000000047f017 : jg 0x47f029 ; test rdi, rdi ; jne 0x47eff8 ; ret
0x000000000048a5e8 : jg 0x48a5f2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040deda : jge 0x40dee3 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a375 : jge 0x44a37a ; call r12
0x000000000044a39d : jge 0x44a3a2 ; call r12
0x000000000044a88d : jge 0x44a83d ; mov r12d, r14d ; call r15
0x000000000044aeed : jge 0x44aef2 ; call r12
0x000000000044af19 : jge 0x44af1e ; call r12
0x000000000044af4d : jge 0x44af52 ; call r12
0x000000000044af7d : jge 0x44af82 ; call r12
0x000000000044afa5 : jge 0x44afaa ; call r12
0x000000000044afd5 : jge 0x44afda ; call r12
0x00000000004786ba : jge 0x4786b9 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048d182 : jge 0x48d17f ; leave ; ret
0x000000000048d300 : jge 0x48d303 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d44c : jge 0x48d449 ; leave ; ret
0x000000000048d498 : jge 0x48d49b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d627 : jge 0x48d62a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d787 : jge 0x48d784 ; leave ; ret
0x000000000048d7d8 : jge 0x48d7db ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a69aa : jge 0x4a698b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a82f4 : jge 0x4a8365 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004010ff : jl 0x40112d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404a16 : jl 0x404a41 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d408 : jl 0x40d433 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000416bc2 : jl 0x416bde ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041e60b : jl 0x41e605 ; ret 0x7508
0x00000000004380f4 : jl 0x438143 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438130 : jl 0x43817f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043832e : jl 0x43837d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438495 : jl 0x4384e4 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004385f7 : jl 0x438646 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000004468bc : jl 0x44690b ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004468dd : jl 0x44692c ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004468f0 : jl 0x44693f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004469c5 : jl 0x446a14 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446a1d : jl 0x446a6c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446aba : jl 0x446b09 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447470 : jl 0x44748f ; cld ; vzeroupper ; ret
0x000000000044a452 : jl 0x44a480 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450a21 : jl 0x450a4f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450e46 : jl 0x450e74 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000452d88 : jl 0x452db6 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045336b : jl 0x453395 ; call r15
0x0000000000453dba : jl 0x453de8 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004556dc : jl 0x455706 ; call r15
0x0000000000455b17 : jl 0x455b40 ; call rbx
0x0000000000455bcd : jl 0x455bfa ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004562fd : jl 0x456327 ; or al, 0xe9 ; ret
0x000000000045691c : jl 0x456946 ; call r15
0x0000000000456d57 : jl 0x456d80 ; call rbx
0x0000000000456e0d : jl 0x456e3a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045adf7 : jl 0x45ae22 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b26e : jl 0x45b299 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045b5b6 : jl 0x45b5e1 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000466f7b : jl 0x466fa8 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468665 : jl 0x468690 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047537f : jl 0x4753ad ; sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000478790 : jl 0x47878f ; dec dword ptr [rax - 0x77] ; ret
0x000000000047b215 : jl 0x47b240 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000482205 : jl 0x482233 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000494350 : jl 0x494358 ; cli ; jmp qword ptr [rdx]
0x00000000004a84f2 : jl 0x4a8551 ; leave ; retf
0x000000000044061e : jle 0x440628 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000446791 : jle 0x4467cd ; movsxd rax, ecx ; ret
0x0000000000458412 : jle 0x458425 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000468624 : jle 0x468624 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000048f102 : jle 0x48f0de ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004a4a79 : jle 0x4a4a7a ; call qword ptr [rax]
0x00000000004a69a2 : jle 0x4a693b ; xlatb ; retf 0xa1eb
0x00000000004a8565 : jle 0x4a85a0 ; pop rsp ; sbb ebp, ebx ; retf
0x0000000000414352 : jmp 0x414318
0x00000000004233a5 : jmp 0x423373
0x000000000042c318 : jmp 0x42c2e6
0x000000000042c396 : jmp 0x42c364
0x000000000042c828 : jmp 0x42c7f6
0x000000000042c8a6 : jmp 0x42c874
0x000000000043fdf4 : jmp 0x43fdba
0x000000000044000c : jmp 0x43ffd2
0x000000000044647e : jmp 0x446444
0x000000000044654f : jmp 0x446515
0x00000000004465be : jmp 0x446584
0x0000000000448108 : jmp 0x4480d6
0x000000000044dda2 : jmp 0x45a892
0x000000000046a4a8 : jmp 0x46a46e
0x000000000046afe3 : jmp 0x46afb1
0x000000000046f4e5 : jmp 0x46f4b3
0x0000000000472163 : jmp 0x472129
0x00000000004857aa : jmp 0x485770
0x00000000004a8569 : jmp 0x4a8537
0x00000000004a8ab6 : jmp 0x4a8a84
0x0000000000482aa1 : jmp 0xffffffffc357b3f6
0x000000000047b609 : jmp 0xffffffffeb097899
0x0000000000475143 : jmp 0xfffffffff67913d3
0x0000000000493b77 : jmp qword ptr [rax + 0x10fff95a]
0x0000000000494307 : jmp qword ptr [rax + 0x10fffa04]
0x000000000049428f : jmp qword ptr [rax + 0x10fffa0d]
0x000000000049454f : jmp qword ptr [rax - 0x1f00061a]
0x00000000004a363b : jmp qword ptr [rax - 0x2f000350]
0x000000000040e2e1 : jmp qword ptr [rax]
0x000000000047c955 : jmp qword ptr [rbx]
0x000000000049525b : jmp qword ptr [rcx - 0x2b0004c3]
0x00000000004ab2cb : jmp qword ptr [rcx]
0x0000000000495253 : jmp qword ptr [rdi]
0x0000000000494357 : jmp qword ptr [rdx + 0x12fffa0a]
0x000000000044e17d : jmp qword ptr [rdx]
0x00000000004940e7 : jmp qword ptr [rsi]
0x00000000004244f9 : jmp r10
0x000000000047fcd0 : jmp r11
0x000000000042d4fd : jmp r9
0x0000000000400aa1 : jmp rax
0x000000000047fcd1 : jmp rbx
0x0000000000422062 : jmp rcx
0x000000000040d51e : jmp rdi
0x000000000040d235 : jmp rdx
0x0000000000459b17 : jmp rsi
0x000000000046d0fd : jmp rsp
0x0000000000400595 : jne 0x40059c ; ret
0x0000000000405d8c : jne 0x405da0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dab8 : jne 0x40da96 ; ret
0x000000000040dbab : jne 0x40dbd5 ; add rsp, 0x118 ; ret
0x000000000040f722 : jne 0x40f735 ; add rsp, 0xd8 ; ret
0x0000000000414425 : jne 0x414433 ; ret
0x0000000000416048 : jne 0x41609c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004160c1 : jne 0x4160b3 ; ret
0x0000000000416fde : jne 0x416fd3 ; ret
0x0000000000417611 : jne 0x4175d7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041765c : jne 0x417655 ; lea eax, [rdx + rdi] ; ret
0x0000000000417f76 : jne 0x417f6b ; ret
0x0000000000419bd0 : jne 0x419bdf ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f2ac : jne 0x41f273 ; ret
0x000000000042275a : jne 0x4226e1 ; ret
0x0000000000422a67 : jne 0x422a56 ; sub rax, 0x10 ; ret
0x0000000000425b4c : jne 0x425b36 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042afe7 : jne 0x42b044 ; xor eax, eax ; ret
0x000000000042afb7 : jne 0x42b068 ; xor eax, eax ; ret
0x000000000042b463 : jne 0x42b487 ; xor eax, eax ; vzeroupper ; ret
0x000000000042bb9a : jne 0x42bba5 ; vzeroupper ; ret
0x000000000042bc94 : jne 0x42bba6 ; ret
0x000000000042bddf : jne 0x42bba9 ; vzeroupper ; ret
0x000000000042d44d : jne 0x42d477 ; xor eax, eax ; ret
0x000000000042ca41 : jne 0x42d47b ; xor eax, eax ; ret
0x000000000042ca69 : jne 0x42d487 ; xor eax, eax ; ret
0x0000000000444825 : jne 0x4447b6 ; lea rax, [rdi + 3] ; ret
0x00000000004447f7 : jne 0x4447b6 ; lea rax, [rdi + 7] ; ret
0x00000000004447f6 : jne 0x4447b7 ; lea rax, [rdi + 7] ; ret
0x0000000000445f84 : jne 0x446198 ; xor eax, eax ; ret
0x0000000000446189 : jne 0x4461a9 ; xor eax, eax ; ret
0x0000000000446031 : jne 0x4461ad ; xor eax, eax ; ret
0x00000000004461a1 : jne 0x4461ae ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004462b1 : jne 0x4462a2 ; ret
0x0000000000446361 : jne 0x446352 ; ret
0x00000000004464d1 : jne 0x4464c6 ; lea rax, [rcx - 1] ; ret
0x0000000000446621 : jne 0x446616 ; sub rax, 1 ; ret
0x000000000044792d : jne 0x447916 ; ret
0x0000000000447a94 : jne 0x447a7c ; vzeroupper ; ret
0x0000000000447c57 : jne 0x447c37 ; vzeroupper ; ret
0x0000000000448102 : jne 0x448037 ; jmp 0x4480dc
0x000000000044842f : jne 0x44845b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004491e7 : jne 0x4491ff ; add rsp, 0x28 ; ret
0x0000000000449417 : jne 0x449461 ; add rsp, 0x58 ; ret
0x0000000000449468 : jne 0x449484 ; xor eax, eax ; syscall
0x0000000000449538 : jne 0x449557 ; mov eax, 1 ; syscall
0x0000000000449675 : jne 0x4496df ; mov eax, 0x48 ; syscall
0x00000000004497a7 : jne 0x4497f9 ; add rsp, 0x68 ; ret
0x0000000000449808 : jne 0x449827 ; mov eax, 3 ; syscall
0x000000000044a116 : jne 0x44a12d ; add rsp, 0x28 ; ret
0x000000000044a34b : jne 0x44a366 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a371 : jne 0x44a3b7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a399 : jne 0x44a3d7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044aeb6 : jne 0x44aede ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aee9 : jne 0x44af37 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af15 : jne 0x44af97 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044afa1 : jne 0x44b008 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044afd1 : jne 0x44b039 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b9e2 : jne 0x44b9d9 ; pop rdx ; pop r10 ; ret
0x000000000044b9d2 : jne 0x44b9e4 ; nop ; mov eax, 0xca ; syscall
0x000000000044ecff : jne 0x44ec93 ; call rsi
0x000000000045a91f : jne 0x45a92c ; add rsp, 0x18 ; ret
0x000000000045ab67 : jne 0x45abbc ; add rsp, 0x148 ; ret
0x0000000000463077 : jne 0x463083 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000463076 : jne 0x463084 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000468562 : jne 0x468575 ; add rsp, 0xd8 ; ret
0x0000000000470651 : jne 0x470643 ; ret
0x000000000047189c : jne 0x471895 ; lea eax, [rdx + rdi] ; ret
0x0000000000473353 : jne 0x47335e ; xor rax, rax ; ret
0x0000000000473753 : jne 0x473788 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047400c : jne 0x474003 ; ret
0x0000000000474013 : jne 0x47401e ; xor rax, rax ; ret
0x00000000004742ab : jne 0x474266 ; mov rax, rdx ; ret
0x00000000004752f7 : jne 0x47535d ; mov eax, 0x101 ; syscall
0x000000000047542c : jne 0x475479 ; add rsp, 0x58 ; ret
0x00000000004754af : jne 0x4754c2 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000047555e : jne 0x475581 ; add rsp, 0x38 ; ret
0x000000000047e33a : jne 0x47e2e0 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e328 : jne 0x47e303 ; ret
0x000000000047efc7 : jne 0x47efe1 ; mov rax, qword ptr [rip + 0x23d3e0] ; ret
0x000000000047f01c : jne 0x47eff3 ; ret
0x0000000000480ad9 : jne 0x480ab1 ; movsx eax, cl ; neg eax ; ret
0x00000000004818aa : jne 0x4818b9 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004819a5 : jne 0x4819d9 ; add rsp, 0x38 ; ret
0x0000000000481a65 : jne 0x481a94 ; add rsp, 0x68 ; ret
0x0000000000481bc6 : jne 0x481c04 ; add rsp, 0x78 ; ret
0x0000000000481e95 : jne 0x481ec4 ; add rsp, 0x68 ; ret
0x0000000000483ed1 : jne 0x483f11 ; leave ; ret
0x0000000000484371 : jne 0x48435d ; mov rax, rsi ; ret
0x00000000004843f5 : jne 0x4843d5 ; mov rax, rsi ; ret
0x0000000000484b7d : jne 0x484b8a ; add rsp, 0x38 ; ret
0x0000000000484c60 : jne 0x484c7a ; add rsp, 0x38 ; ret
0x0000000000487376 : jne 0x4873a0 ; ret
0x0000000000487375 : jne 0x4873a1 ; ret
0x000000000048742b : jne 0x487432 ; pop rbx ; ret
0x0000000000487fbb : jne 0x487fd2 ; add rsp, 0x38 ; ret
0x00000000004880c9 : jne 0x4880e3 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004881b0 : jne 0x4881cb ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048ab99 : jne 0x48abbc ; xor eax, eax ; ret
0x000000000048ab81 : jne 0x48abc1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048cdb0 : jne 0x48cdd1 ; mov rax, qword ptr [rax] ; ret
0x000000000048ce1f : jne 0x48ce2a ; mov qword ptr [rax], rdx ; ret
0x000000000048d17e : jne 0x48d177 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d448 : jne 0x48d441 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d783 : jne 0x48d77c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dcd4 : jne 0x48dcf3 ; ret
0x000000000048dcf4 : jne 0x48dd0c ; mov eax, 8 ; ret
0x000000000048dd1f : jne 0x48dd4e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048dd39 : jne 0x48dd52 ; xor eax, eax ; ret
0x000000000048eb7f : jne 0x48ebae ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048eb99 : jne 0x48ebb2 ; xor eax, eax ; ret
0x000000000048f139 : jne 0x48f143 ; ret
0x000000000048f154 : jne 0x48f163 ; ret
0x000000000048f384 : jne 0x48f393 ; ret
0x000000000048f609 : jne 0x48f62c ; xor eax, eax ; ret
0x000000000048fbd5 : jne 0x48fbc8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048fc20 : jne 0x48fc00 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048fd65 : jne 0x48fd4b ; pop rbx ; ret
0x000000000048fe73 : jne 0x48fe5e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490a2d : jne 0x490a16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490bb1 : jne 0x490bc8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000491d77 : jne 0x491c3b ; call 0x41e888
0x00000000004960b9 : jne 0x4960bc ; lcall [rdi + 0x73] ; sti ; jmp qword ptr [rdi]
0x00000000004a6a17 : jne 0x4a69e1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a89ab : jne 0x4a89d2 ; retf 0x32dd
0x0000000000413dee : jno 0x413e20 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000042ccfe : jno 0x42cd0d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004380f0 : jno 0x4380f9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043832a : jno 0x438333 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000438491 : jno 0x4384a2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004385f6 : jno 0x43867a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482994 : jno 0x4829e6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484f61 : jno 0x484f8b ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000413438 : jnp 0x41346a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000424401 : jnp 0x424435 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a73c5 : jnp 0x4a7382 ; ret
0x00000000004a83c2 : jnp 0x4a8420 ; retf
0x00000000004a87c9 : jnp 0x4a8816 ; retf 0x99e0
0x00000000004a9429 : jnp 0x4a946a ; retf
0x000000000042409f : jns 0x4240a7 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004380f7 : jns 0x4380fa ; ret
0x0000000000438331 : jns 0x438334 ; ret
0x0000000000438498 : jns 0x4384a3 ; ret
0x000000000043e927 : jns 0x43e902 ; retf 0xead3
0x000000000043ea77 : jns 0x43ea52 ; retf 0xead3
0x000000000043ebc7 : jns 0x43eba2 ; retf 0xead3
0x000000000043ed17 : jns 0x43ecf2 ; retf 0xead3
0x000000000043ee67 : jns 0x43ee42 ; retf 0xead3
0x000000000043efb7 : jns 0x43ef92 ; retf 0xead3
0x000000000043f107 : jns 0x43f0e2 ; retf 0xead3
0x000000000043f257 : jns 0x43f232 ; retf 0xead3
0x000000000043f3a7 : jns 0x43f382 ; retf 0xead3
0x000000000043f4f7 : jns 0x43f4d2 ; retf 0xead3
0x000000000043f647 : jns 0x43f622 ; retf 0xead3
0x000000000043f797 : jns 0x43f772 ; retf 0xead3
0x000000000043f8e7 : jns 0x43f8c2 ; retf 0xead3
0x000000000043fa37 : jns 0x43fa12 ; retf 0xead3
0x000000000043fb87 : jns 0x43fb62 ; retf 0xead3
0x000000000044af16 : jns 0x44af66 ; mov edi, dword ptr [rbp] ; call r12
0x000000000048aa6e : jns 0x48aa7b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048cd1e : jns 0x48cd61 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048da8e : jns 0x48da9b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048f68e : jns 0x48f69b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a64ce : jns 0x4a6464 ; ret 0xf869
0x00000000004a64cd : jns 0x4a6465 ; ret 0xf869
0x0000000000414244 : jo 0x414295 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414274 : jo 0x4142c5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000449ebd : jo 0x449ec1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044bc72 : jo 0x44bc96 ; ret
0x0000000000452c60 : jo 0x452c6a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004706ca : jo 0x4706e2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004739c6 : jo 0x473a28 ; pop rbp ; pop r12 ; ret
0x0000000000473bdd : jo 0x473c3f ; pop rbp ; pop r12 ; ret
0x0000000000481d84 : jo 0x481dea ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000491da4 : jo 0x491da7 ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000493acc : jo 0x493adf ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000493b64 : jo 0x493bbc ; stc ; jmp rax
0x0000000000493dd0 : jo 0x493d8a ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000493ff4 : jo 0x493fd7 ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494498 : jo 0x4944a7 ; cli ; jmp rax
0x0000000000494a00 : jo 0x494a30 ; cli ; jmp rax
0x00000000004960a1 : jo 0x4960a0 ; jmp rbx
0x00000000004960cd : jo 0x4960cc ; jmp rbx
0x00000000004a3660 : jo 0x4a3615 ; cld ; call rax
0x00000000004a7544 : jo 0x4a75be ; mov ebp, 0xfb67d10d ; ret
0x00000000004ae514 : jo 0x4ae51b ; ret 0xa01
0x00000000004b2a80 : jo 0x4b2a9a ; cld ; jmp qword ptr [rax]
0x00000000004b3835 : jo 0x4b383c ; retf
0x00000000004b3aec : jo 0x4b3a7a ; add byte ptr [rax], al ; nop ; retf
0x0000000000421e47 : jp 0x421e77 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000421e46 : jp 0x421e78 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000456e12 : jp 0x456e0c ; ret
0x0000000000485142 : jp 0x4851bf ; and eax, dword ptr [rax] ; ret
0x00000000004a76d3 : jp 0x4a768d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004af3c5 : jp 0x4af3c2 ; call rsp
0x00000000004347ea : jrcxz 0x4347e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004347e9 : jrcxz 0x4347e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043730a : jrcxz 0x437305 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437309 : jrcxz 0x437306 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044ba33 : jrcxz 0x44b9f8 ; cmp r11d, 0xa ; je 0x44ba44 ; ret
0x0000000000467eaf : jrcxz 0x467eb5 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000467eae : jrcxz 0x467eb6 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047f6be : jrcxz 0x47f70c ; mov esi, ebx ; syscall
0x000000000048fe74 : jrcxz 0x48fed6 ; pop rbp ; pop r12 ; ret
0x0000000000493ee5 : jrcxz 0x493ee2 ; call rax
0x0000000000494009 : jrcxz 0x494006 ; jmp rax
0x00000000004a6325 : jrcxz 0x4a637f ; ret
0x00000000004a84ed : jrcxz 0x4a84b0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a9049 : jrcxz 0x4a902d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000040e975 : js 0x40e999 ; call rdx
0x0000000000418b7c : js 0x418b81 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418c13 : js 0x418c18 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471569 : js 0x4715a1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047b8a2 : js 0x47b8b5 ; pop rbx ; ret
0x000000000048cfd6 : js 0x48cfe3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048cfe3 : js 0x48cfef ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048fca3 : js 0x48fd1e ; ret 0x8b48
0x00000000004a4a78 : js 0x4a4afb ; std ; call qword ptr [rax]
0x00000000004a8428 : js 0x4a83fc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a83c1 : js 0x4a8441 ; pop rdx ; retf
0x00000000004af0f4 : js 0x4af13a ; add byte ptr [rax], al ; call 0x114ae9f9
0x00000000004afbf4 : js 0x4afc45 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rcx]
0x00000000004afff4 : js 0x4b0049 ; add byte ptr [rax], al ; call 0x134af9be
0x00000000004b1304 : js 0x4b130e ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b2cf4 : js 0x4b2d76 ; add byte ptr [rax], al ; test al, 0x24 ; cld ; jmp qword ptr [rcx]
0x00000000004b43c8 : js 0x4b43d3 ; std ; jmp rdx
0x000000000046aeb3 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004b52bd : lahf ; add byte ptr [rax], al ; loopne 0x4b524d ; std ; call qword ptr [rbx]
0x00000000004b52bc : lahf ; add byte ptr [rax], al ; loopne 0x4b524e ; std ; call qword ptr [rbx]
0x0000000000456065 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041ec9f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004a8a03 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e33b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f42d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045e77f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a82f2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8af4 : lahf ; push -0x57d3205 ; call 0xffffffffab5855f6
0x00000000004a6b00 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044a62b : lahf ; ret
0x000000000041891f : lahf ; ret 0x3949
0x00000000004189d2 : lahf ; ret 0x48e9
0x000000000044a4e1 : lahf ; ret 0x8545
0x00000000004a625d : lahf ; ret 0x871e
0x0000000000447ce9 : lahf ; ret 0xea81
0x000000000048c391 : lahf ; ret 0xf45
0x000000000043fabd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495373 : lcall [rax + 0x3e] ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x00000000004960d7 : lcall [rax + rsi*2 + 0x73d9fffb] ; sti ; jmp qword ptr [rax]
0x0000000000493d0f : lcall [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x000000000041a7c2 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000044dd9d : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x45a897
0x0000000000419020 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411b85 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000041190b : lcall [rbx + 0x5d] ; ret
0x000000000047f966 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004960bb : lcall [rdi + 0x73] ; sti ; jmp qword ptr [rdi]
0x00000000004a3837 : lcall [rdx + rsi*4 - 0x4d7b0004] ; cld ; call rsp
0x0000000000494707 : lcall [rsi + 0x2efffa34] ; xor al, 0xfa ; call rsp
0x0000000000409e0d : lcall [rsi + 1] ; add cl, ch ; retf
0x0000000000494147 : lcall [rsi + rcx + 0xe2cfffa] ; cli ; call rdx
0x0000000000434e76 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000041766b : lea eax, [r8 - 1] ; ret
0x000000000048aa8c : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b014 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042b024 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042aff4 : lea eax, [rax + rdi - 0x10] ; ret
0x000000000041766c : lea eax, [rax - 1] ; ret
0x000000000047307d : lea eax, [rcx + rsi] ; ret
0x00000000004464d4 : lea eax, [rcx - 1] ; ret
0x000000000044454c : lea eax, [rdi + 0x10] ; ret
0x0000000000444561 : lea eax, [rdi + 0x11] ; ret
0x000000000044457f : lea eax, [rdi + 0x12] ; ret
0x000000000044459f : lea eax, [rdi + 0x13] ; ret
0x00000000004445c2 : lea eax, [rdi + 0x14] ; ret
0x00000000004445e1 : lea eax, [rdi + 0x15] ; ret
0x0000000000444601 : lea eax, [rdi + 0x16] ; ret
0x0000000000444621 : lea eax, [rdi + 0x17] ; ret
0x0000000000444644 : lea eax, [rdi + 0x18] ; ret
0x0000000000444669 : lea eax, [rdi + 0x19] ; ret
0x0000000000444687 : lea eax, [rdi + 0x1a] ; ret
0x00000000004446a7 : lea eax, [rdi + 0x1b] ; ret
0x00000000004446c3 : lea eax, [rdi + 0x1c] ; ret
0x00000000004446e3 : lea eax, [rdi + 0x1d] ; ret
0x0000000000444703 : lea eax, [rdi + 0x1e] ; ret
0x0000000000444723 : lea eax, [rdi + 0x1f] ; ret
0x000000000044449d : lea eax, [rdi + 0xa] ; ret
0x00000000004444bd : lea eax, [rdi + 0xb] ; ret
0x00000000004444df : lea eax, [rdi + 0xc] ; ret
0x00000000004444ff : lea eax, [rdi + 0xd] ; ret
0x000000000044451f : lea eax, [rdi + 0xe] ; ret
0x0000000000444539 : lea eax, [rdi + 0xf] ; ret
0x00000000004443e7 : lea eax, [rdi + 1] ; ret
0x00000000004443fa : lea eax, [rdi + 2] ; ret
0x0000000000444405 : lea eax, [rdi + 3] ; ret
0x0000000000444418 : lea eax, [rdi + 4] ; ret
0x000000000044442d : lea eax, [rdi + 5] ; ret
0x000000000044444b : lea eax, [rdi + 6] ; ret
0x0000000000444457 : lea eax, [rdi + 7] ; ret
0x000000000044446a : lea eax, [rdi + 8] ; ret
0x000000000044447f : lea eax, [rdi + 9] ; ret
0x000000000042b049 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042b059 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042af53 : lea eax, [rdi + rax + 0x30] ; ret
0x00000000004732c5 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000043ffb7 : lea eax, [rdi + rax] ; ret
0x000000000044682a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000472f79 : lea eax, [rdi + rsi] ; ret
0x00000000004443d3 : lea eax, [rdi] ; ret
0x00000000004439bd : lea eax, [rdx + 0xa] ; ret
0x00000000004439dd : lea eax, [rdx + 0xb] ; ret
0x00000000004439ff : lea eax, [rdx + 0xc] ; ret
0x0000000000443a1f : lea eax, [rdx + 0xd] ; ret
0x0000000000443a3f : lea eax, [rdx + 0xe] ; ret
0x00000000004438cf : lea eax, [rdx + 0xf] ; ret
0x00000000004438f7 : lea eax, [rdx + 1] ; ret
0x000000000044390d : lea eax, [rdx + 2] ; ret
0x0000000000443925 : lea eax, [rdx + 3] ; ret
0x000000000044393b : lea eax, [rdx + 4] ; ret
0x000000000044394d : lea eax, [rdx + 5] ; ret
0x000000000044396b : lea eax, [rdx + 6] ; ret
0x0000000000443877 : lea eax, [rdx + 7] ; ret
0x000000000044397d : lea eax, [rdx + 8] ; ret
0x000000000044399d : lea eax, [rdx + 9] ; ret
0x000000000041765e : lea eax, [rdx + rdi] ; ret
0x0000000000447e03 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004229e6 : lea eax, [rdx - 0x10] ; ret
0x00000000004438e5 : lea eax, [rdx] ; ret
0x00000000004241ca : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000044d001 : lea eax, [rip + 0x26d2f9] ; ret
0x000000000042409c : lea eax, [rip + 0x79ee] ; je 0x424073 ; ret
0x000000000046afdc : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46afb8
0x000000000045f401 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e001 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6b11 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473a7b : lea ecx, [rax + 1] ; call rbx
0x0000000000473c16 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000471eb4 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042d560 : lea ecx, [rbx + rcx] ; jmp r9
0x0000000000443c6e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000485554 : lea ecx, [rdx + rcx*8] ; jmp 0x485566
0x00000000004229f6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004756a7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471cc0 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471bdb : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473b9e : lea ecx, [rsp + 0x20] ; call rbx
0x0000000000473d8c : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473a76 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000044c2ef : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035be : lea edi, [rip + 0x2b88dc] ; call 8
0x0000000000403578 : lea edi, [rip + 0x2b8922] ; call 8
0x00000000004010b1 : lea edi, [rsp + 0x60] ; call 0x40dac6
0x0000000000417f81 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000485550 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x48556a
0x0000000000471a37 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042d634 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000004244f6 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042da28 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000424113 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x000000000042345f : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x00000000004242ef : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424084 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x00000000004233f8 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x000000000042342f : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x0000000000473fda : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000423539 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x00000000004243b3 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000424273 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048d901 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b42d : lea esi, [rip + 0x24b9ed] ; jmp rax
0x0000000000446b4f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000046a1cf : lea esp, [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047de56 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x00000000004244f5 : lea r10, [r10 + r9] ; jmp r10
0x000000000048d900 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042d55f : lea r9, [r11 + r9] ; jmp r9
0x0000000000471eb3 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000471cbf : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471bda : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473b9d : lea r9, [rsp + 0x20] ; call rbx
0x0000000000473d8b : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473a75 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048aa8b : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b013 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b023 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042aff3 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000047307c : lea rax, [rcx + rsi] ; ret
0x00000000004464d3 : lea rax, [rcx - 1] ; ret
0x000000000044454b : lea rax, [rdi + 0x10] ; ret
0x0000000000444560 : lea rax, [rdi + 0x11] ; ret
0x000000000044457e : lea rax, [rdi + 0x12] ; ret
0x000000000044459e : lea rax, [rdi + 0x13] ; ret
0x00000000004445c1 : lea rax, [rdi + 0x14] ; ret
0x00000000004445e0 : lea rax, [rdi + 0x15] ; ret
0x0000000000444600 : lea rax, [rdi + 0x16] ; ret
0x0000000000444620 : lea rax, [rdi + 0x17] ; ret
0x0000000000444643 : lea rax, [rdi + 0x18] ; ret
0x0000000000444668 : lea rax, [rdi + 0x19] ; ret
0x0000000000444686 : lea rax, [rdi + 0x1a] ; ret
0x00000000004446a6 : lea rax, [rdi + 0x1b] ; ret
0x00000000004446c2 : lea rax, [rdi + 0x1c] ; ret
0x00000000004446e2 : lea rax, [rdi + 0x1d] ; ret
0x0000000000444702 : lea rax, [rdi + 0x1e] ; ret
0x0000000000444722 : lea rax, [rdi + 0x1f] ; ret
0x000000000044449c : lea rax, [rdi + 0xa] ; ret
0x00000000004444bc : lea rax, [rdi + 0xb] ; ret
0x00000000004444de : lea rax, [rdi + 0xc] ; ret
0x00000000004444fe : lea rax, [rdi + 0xd] ; ret
0x000000000044451e : lea rax, [rdi + 0xe] ; ret
0x0000000000444538 : lea rax, [rdi + 0xf] ; ret
0x00000000004443e6 : lea rax, [rdi + 1] ; ret
0x00000000004443f9 : lea rax, [rdi + 2] ; ret
0x0000000000444404 : lea rax, [rdi + 3] ; ret
0x0000000000444417 : lea rax, [rdi + 4] ; ret
0x000000000044442c : lea rax, [rdi + 5] ; ret
0x000000000044444a : lea rax, [rdi + 6] ; ret
0x0000000000444456 : lea rax, [rdi + 7] ; ret
0x0000000000444469 : lea rax, [rdi + 8] ; ret
0x000000000044447e : lea rax, [rdi + 9] ; ret
0x000000000042b048 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b058 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042af52 : lea rax, [rdi + rax + 0x30] ; ret
0x00000000004732c4 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000043ffb6 : lea rax, [rdi + rax] ; ret
0x0000000000446829 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000472f78 : lea rax, [rdi + rsi] ; ret
0x00000000004443d2 : lea rax, [rdi] ; ret
0x00000000004439bc : lea rax, [rdx + 0xa] ; ret
0x00000000004439dc : lea rax, [rdx + 0xb] ; ret
0x00000000004439fe : lea rax, [rdx + 0xc] ; ret
0x0000000000443a1e : lea rax, [rdx + 0xd] ; ret
0x0000000000443a3e : lea rax, [rdx + 0xe] ; ret
0x00000000004438ce : lea rax, [rdx + 0xf] ; ret
0x00000000004438f6 : lea rax, [rdx + 1] ; ret
0x000000000044390c : lea rax, [rdx + 2] ; ret
0x0000000000443924 : lea rax, [rdx + 3] ; ret
0x000000000044393a : lea rax, [rdx + 4] ; ret
0x000000000044394c : lea rax, [rdx + 5] ; ret
0x000000000044396a : lea rax, [rdx + 6] ; ret
0x0000000000443876 : lea rax, [rdx + 7] ; ret
0x000000000044397c : lea rax, [rdx + 8] ; ret
0x000000000044399c : lea rax, [rdx + 9] ; ret
0x00000000004229e5 : lea rax, [rdx - 0x10] ; ret
0x00000000004438e4 : lea rax, [rdx] ; ret
0x000000000044d000 : lea rax, [rip + 0x26d2f9] ; ret
0x000000000046afdb : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46afb9
0x000000000040e000 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000443c6d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473a7a : lea rcx, [rax + 1] ; call rbx
0x0000000000473c15 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000485553 : lea rcx, [rdx + rcx*8] ; jmp 0x485567
0x00000000004229f5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004756a6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c2ee : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035bd : lea rdi, [rip + 0x2b88dc] ; call 9
0x0000000000403577 : lea rdi, [rip + 0x2b8922] ; call 9
0x00000000004010b0 : lea rdi, [rsp + 0x60] ; call 0x40dac7
0x000000000042d633 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048554f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x48556b
0x000000000042da27 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046b42c : lea rsi, [rip + 0x24b9ed] ; jmp rax
0x0000000000446b4e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000429a87 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a967 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004575aa : leave ; call r15
0x000000000045943e : leave ; cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004462b0 : leave ; jne 0x4462a3 ; ret
0x0000000000446360 : leave ; jne 0x446353 ; ret
0x0000000000446620 : leave ; jne 0x446617 ; sub rax, 1 ; ret
0x00000000004742aa : leave ; jne 0x474267 ; mov rax, rdx ; ret
0x0000000000446828 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048aa40 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046b946 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400b77 : leave ; ret
0x00000000004387e3 : leave ; ret 5
0x000000000041ccb3 : leave ; retf
0x00000000004a6cc1 : leave ; retf 0x6ee8
0x00000000004a5de9 : leave ; retf 0xcccb
0x0000000000494065 : leave ; stc ; call rax
0x000000000041f3d9 : leave ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000473b9a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004a4963 : ljmp [rax + 0x74] ; std ; jmp qword ptr [rax]
0x0000000000493ecf : ljmp [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000049498f : ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x000000000049414b : ljmp [rsi + rcx] ; cli ; call rdx
0x000000000049470b : ljmp [rsi] ; xor al, 0xfa ; call rsp
0x000000000042c24e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b376c : lock add dword ptr [rax], 0 ; fcmove st(0), st(5) ; hlt ; jmp qword ptr [rcx]
0x000000000047ee27 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410030 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445c30 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000046c059 : lodsb al, byte ptr [rsi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a83e6 : lodsb al, byte ptr [rsi] ; loop 0x4a83b3 ; retf
0x00000000004909e0 : lodsb al, byte ptr [rsi] ; mov ch, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042a084 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a919d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b3b04 : lodsb al, byte ptr [rsi] ; retf
0x0000000000493e89 : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004a6a1b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000460e77 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a87c5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000042045a : lodsd eax, dword ptr [rsi] ; ret
0x000000000040fd7f : lodsd eax, dword ptr [rsi] ; retf
0x000000000047bff7 : lodsd eax, dword ptr [rsi] ; retf 0x23
0x0000000000411e5d : loop 0x411e5f ; add rdx, rcx ; jmp 0x411e75
0x000000000041b66f : loop 0x41b69f ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042168e : loop 0x4216e1 ; mov esi, ebx ; mov rdi, r13 ; call 0x41d8d9
0x0000000000425b4d : loop 0x425b85 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043475a : loop 0x434755 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434759 : loop 0x434756 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043727a : loop 0x437275 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437279 : loop 0x437276 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447dcf : loop 0x447de9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044bc83 : loop 0x44bcd6 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000047246a : loop 0x472482 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004754de : loop 0x4754a6 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x0000000000486d91 : loop 0x486d9c ; add rdx, rax ; jmp 0x486da5
0x0000000000487371 : loop 0x4873cf ; and eax, dword ptr [rax] ; jne 0x4873a5 ; ret
0x000000000048cd39 : loop 0x48cd88 ; add esp, 0x18 ; ret
0x0000000000493bf8 : loop 0x493b8c ; stc ; jmp rdx
0x00000000004a83e7 : loop 0x4a83b2 ; retf
0x00000000004a953a : loop 0x4a958f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004346ca : loope 0x4346c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004346c9 : loope 0x4346c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004371ea : loope 0x4371e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004371e9 : loope 0x4371e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044495b : loope 0x444965 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044834e : loope 0x448345 ; ret
0x000000000044dcde : loope 0x44dceb ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004744ae : loope 0x4744c3 ; je 0x4744d4 ; ret
0x000000000047c63b : loope 0x47c641 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482997 : loope 0x4829e9 ; mov dword ptr [rdi], ecx ; ret
0x00000000004829c8 : loope 0x482a1b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482a3d : loope 0x482a90 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000048fd66 : loope 0x48fdc5 ; ret
0x0000000000490a2e : loope 0x490a90 ; pop rbp ; pop r12 ; ret
0x0000000000493ee1 : loope 0x493ede ; call rax
0x0000000000494005 : loope 0x494002 ; jmp rax
0x00000000004a84f1 : loope 0x4a8573 ; pop rdx ; leave ; retf
0x000000000040f807 : loopne 0x40f86d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041c5dc : loopne 0x41c5f0 ; xchg eax, esp ; ret 0x3de9
0x0000000000421f5f : loopne 0x421fc5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042da81 : loopne 0x42da98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042da80 : loopne 0x42da99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dbd1 : loopne 0x42dbe8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dbd0 : loopne 0x42dbe9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dd21 : loopne 0x42dd38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dd20 : loopne 0x42dd39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042de71 : loopne 0x42de88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042de70 : loopne 0x42de89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dfc1 : loopne 0x42dfd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dfc0 : loopne 0x42dfd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e111 : loopne 0x42e128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e110 : loopne 0x42e129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e261 : loopne 0x42e278 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e260 : loopne 0x42e279 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e3af : loopne 0x42e3c6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e3ae : loopne 0x42e3c7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e501 : loopne 0x42e518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e500 : loopne 0x42e519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e651 : loopne 0x42e668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e650 : loopne 0x42e669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e7a1 : loopne 0x42e7b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e7a0 : loopne 0x42e7b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e8f1 : loopne 0x42e908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e8f0 : loopne 0x42e909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea41 : loopne 0x42ea58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea40 : loopne 0x42ea59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb91 : loopne 0x42eba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb90 : loopne 0x42eba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ece1 : loopne 0x42ecf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ece0 : loopne 0x42ecf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430451 : loopne 0x430468 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430450 : loopne 0x430469 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004305a1 : loopne 0x4305b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004305a0 : loopne 0x4305b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306f1 : loopne 0x430708 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306f0 : loopne 0x430709 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430841 : loopne 0x430858 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430840 : loopne 0x430859 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430991 : loopne 0x4309a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430990 : loopne 0x4309a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ae1 : loopne 0x430af8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ae0 : loopne 0x430af9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c31 : loopne 0x430c48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c30 : loopne 0x430c49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d7f : loopne 0x430d96 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d7e : loopne 0x430d97 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ed1 : loopne 0x430ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ed0 : loopne 0x430ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431021 : loopne 0x431038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431020 : loopne 0x431039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431171 : loopne 0x431188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431170 : loopne 0x431189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312c1 : loopne 0x4312d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312c0 : loopne 0x4312d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431411 : loopne 0x431428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431410 : loopne 0x431429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431561 : loopne 0x431578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431560 : loopne 0x431579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004316b1 : loopne 0x4316c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004316b0 : loopne 0x4316c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000447d3d : loopne 0x447d57 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044ba98 : loopne 0x44baad ; cmp eax, 4 ; je 0x44baa7 ; ret
0x000000000044dce2 : loopne 0x44dd45 ; pop r12 ; ret
0x0000000000454afd : loopne 0x454b78 ; jae 0x454a8e ; retf 0xb941
0x00000000004632cf : loopne 0x46325c ; ret
0x000000000046d421 : loopne 0x46d427 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046e949 : loopne 0x46e9ad ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f125 : loopne 0x46f189 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047efcc : loopne 0x47efa5 ; and eax, dword ptr [rax] ; ret
0x000000000048236d : loopne 0x482376 ; sub eax, 1 ; ret
0x0000000000493ad4 : loopne 0x493aff ; stc ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x0000000000493bac : loopne 0x493c1a ; stc ; call rax
0x0000000000493dc4 : loopne 0x493d83 ; stc ; jmp rax
0x0000000000493dc8 : loopne 0x493d89 ; stc ; jmp rax
0x0000000000494004 : loopne 0x493fea ; stc ; jmp rax
0x0000000000494008 : loopne 0x493ff0 ; stc ; jmp rax
0x000000000049400c : loopne 0x493ffa ; stc ; call qword ptr [rax - 0x2f000641]
0x0000000000494001 : loopne 0x493ffe ; jmp rax
0x0000000000494c10 : loopne 0x494c0b ; cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000494cb0 : loopne 0x494cb2 ; cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x00000000004a6b14 : loopne 0x4a6af4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b1250 : loopne 0x4b11ea ; cli ; call qword ptr [rcx]
0x00000000004b4080 : loopne 0x4b406f ; cld ; jmp qword ptr [rcx]
0x00000000004b52c0 : loopne 0x4b524a ; std ; call qword ptr [rbx]
0x0000000000494218 : mov ah, 0x13 ; cli ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x00000000004a652a : mov ah, 0x13 ; ret
0x0000000000491caa : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049140a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000495250 : mov ah, 0x3d ; sti ; jmp qword ptr [rdi]
0x00000000004a69d0 : mov ah, 0xa5 ; ret
0x00000000004923c5 : mov ah, 0xf7 ; push qword ptr [rcx + rsi*4 - 9] ; call rdi
0x0000000000493e39 : mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000493d15 : mov ah, 0xf9 ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x0000000000493d35 : mov ah, 0xf9 ; push rax ; mov ch, 0xf9 ; call rax
0x00000000004aadc8 : mov ah, bh ; std ; jmp rax
0x00000000004a6324 : mov ah, bl ; push rsi ; ret
0x000000000048ab86 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004575a4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000004940a4 : mov al, 0x12 ; cli ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000400db8 : mov al, 0x2b ; add bh, dh ; ret 0
0x0000000000400d8c : mov al, 0x2b ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004947b4 : mov al, 0x36 ; cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x000000000049459c : mov al, 0x39 ; cli ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000494acc : mov al, 0x45 ; cli ; inc eax ; cli ; call rax
0x0000000000493b54 : mov al, 0x4d ; stc ; jmp qword ptr [rax]
0x00000000004b0f2c : mov al, 0x5b ; add byte ptr [rax], al ; std ; jmp qword ptr [rdi]
0x00000000004b11c0 : mov al, 0x90 ; cli ; call qword ptr [rdx]
0x0000000000493d00 : mov al, 0x95 ; stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x00000000004a362c : mov al, 0xb0 ; cld ; call rax
0x000000000044037f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000048d42f : mov al, 0xe8 ; retf
0x000000000044fa00 : mov al, 0xe8 ; retf 0xffad
0x00000000004a87d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004942bc : mov al, 0xf ; cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x000000000040463f : mov al, 0xf ; retf
0x0000000000494c04 : mov al, 0xf2 ; cli ; inc eax ; cli ; call rax
0x0000000000494c30 : mov al, 0xf3 ; cli ; call rax
0x0000000000494c5c : mov al, 0xf7 ; cli ; inc eax ; idiv edx ; call rax
0x00000000004a3621 : mov al, 0xfc ; call rax
0x00000000004944cc : mov al, 3 ; cli ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x00000000004632db : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000442156 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442174 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004438e0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442130 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000442140 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435491 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004a8860 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000457c04 : mov bh, 0x43 ; add al, 0x89 ; retf
0x000000000045777f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004447f8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a8b38 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a7804 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a5de6 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000459018 : mov bh, 0xd ; retf 0x3dd
0x0000000000412fc9 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000424275 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000493dbd : mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000493d9d : mov bh, 0xf9 ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x000000000041d6d3 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000048f307 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004879ac : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a8f13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000494b55 : mov bh, dl ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x00000000004460ee : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a8b9b : mov bl, 0x29 ; retf 0xbf4b
0x00000000004742ac : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a012 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a88e3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000415763 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004a8b80 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004ad671 : mov bl, 0xf6 ; call qword ptr [rsi]
0x0000000000492495 : mov bl, 0xf7 ; call rsi
0x0000000000492489 : mov bl, 0xf7 ; jmp rbx
0x00000000004924d9 : mov bl, 0xf7 ; push qword ptr [rbx + rsi*4 - 9] ; call rsi
0x00000000004924ed : mov bl, 0xf7 ; push rbp ; mov dl, 0xf7 ; call rsi
0x0000000000493dd5 : mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000493d55 : mov bl, 0xf9 ; call rax
0x0000000000418e31 : mov bl, 9 ; sub al, byte ptr [rax] ; ret
0x00000000004a6501 : mov bx, 0xf32d ; retf
0x000000000044dfaa : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044bc5a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a250c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000044dfab : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044b7ff : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d54 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046e837 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459b13 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048aa44 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405d6f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423513 : mov byte ptr [rcx], ch ; add bh, dh ; ret 0
0x000000000045e693 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000444548 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000443eb8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004445be : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x0000000000443f0e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444640 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000443f90 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004443f6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000443dd6 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000444412 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000443df2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000443e33 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a8b95 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000042f0ab : mov byte ptr [rdi - 1], dl ; ret
0x00000000004125b0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004381d2 : mov byte ptr [rdi], cl ; ret
0x0000000000447ab5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004443d0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000443db0 : mov byte ptr [rdi], dh ; ret
0x0000000000435503 : mov byte ptr [rdi], dl ; ret
0x0000000000443909 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000442159 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443937 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000442177 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004438e2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442132 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048b5b0 : mov byte ptr [rip + 0x230bf9], 8 ; ret
0x0000000000400b16 : mov byte ptr [rip + 0x2ba7c3], 1 ; pop rbp ; ret
0x000000000041d889 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000048436f : mov byte ptr [rsi], al ; jne 0x48435f ; mov rax, rsi ; ret
0x00000000004843f3 : mov byte ptr [rsi], al ; jne 0x4843d7 ; mov rax, rsi ; ret
0x00000000004909e1 : mov ch, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a6322 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7663 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a82f6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a89ff : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a93aa : mov ch, 0xab ; ret
0x0000000000471047 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004ad749 : mov ch, 0xf6 ; call qword ptr [rdx]
0x0000000000493d39 : mov ch, 0xf9 ; call rax
0x0000000000493db9 : mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000493dd9 : mov ch, 0xf9 ; push rax ; mov dh, 0xf9 ; call rax
0x000000000042cdc6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044fb9b : mov cl, 0x35 ; ret
0x000000000040e81f : mov cl, 0x35 ; retf
0x00000000004a8e01 : mov cl, 0x3f ; retf
0x0000000000450f1b : mov cl, 0xf ; retf 0xd285
0x00000000004923c9 : mov cl, 0xf7 ; call rdi
0x0000000000493dd1 : mov cl, 0xf9 ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000493df1 : mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x00000000004b1569 : mov cl, 0xfa ; call qword ptr [rax]
0x00000000004b1551 : mov cl, 0xfa ; call qword ptr [rbx]
0x00000000004b157d : mov cl, 0xfa ; call qword ptr [rdx]
0x000000000045a717 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043a9b5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004244f4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a87d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042bc14 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000004381d0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004744ab : mov cl, dl ; and cl, 0xf ; je 0x4744d7 ; ret
0x00000000004a8a8c : mov cs, edi ; ret 0x8b36
0x0000000000467d62 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043ef3e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000443dd0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048449a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048dc6f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416372 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041285f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418400 : mov dh, 0 ; ret
0x00000000004940ec : mov dh, 0x11 ; cli ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x0000000000435501 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042b764 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dab4 : mov dh, 0x17 ; test dl, dl ; jne 0x40da9a ; ret
0x000000000046633e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x00000000004945e4 : mov dh, 0x38 ; cli ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x0000000000456518 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046e84c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045652e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040d9d9 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000456542 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046918b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000445cc1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000445cb1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000445c81 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000445ca1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000445c91 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045dd89 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000487c57 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000453f4d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000453f8e : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a77c2 : mov dh, 0x4e ; ret 0x474c
0x0000000000445cc5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000445cb5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000445c85 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000445c95 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000462ff8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f0a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040ee74 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000455056 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048b9a1 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000455041 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000045506b : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000455394 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000004788ff : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004754b2 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048bcb6 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046e5c8 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000048800d : mov dh, 0xc0 ; neg eax ; ret
0x00000000004848da : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e481 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000447da1 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415172 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8a04 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048aa3f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042b78a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c1ef : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000446bc9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000004258a1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042bc24 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000004ad7e9 : mov dh, 0xf6 ; call qword ptr [rsi]
0x0000000000493ddd : mov dh, 0xf9 ; call rax
0x0000000000493d19 : mov dh, 0xf9 ; jmp rax
0x000000000040d515 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000416381 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412871 : mov dh, 2 ; ret
0x000000000042bc21 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042b761 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004258a4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044834c : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000494880 : mov dl, 0x2b ; cli ; jmp qword ptr [rdx]
0x000000000040ea1d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004133b2 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000412d38 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000042423a : mov dl, 0x7b ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004924f1 : mov dl, 0xf7 ; call rsi
0x0000000000493d31 : mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000493d71 : mov dl, 0xf9 ; call rax
0x0000000000493d11 : mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000493e35 : mov dl, 0xf9 ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000493d51 : mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x00000000004a383d : mov dl, 0xfc ; call rsp
0x000000000042f130 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004621d5 : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000041fe82 : mov ds, word ptr [rcx - 0x76b7ffd7] ; ret 0x8348
0x00000000004a8e1e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004381c6 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000004381b1 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044bbf1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470689 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004706c9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004716c8 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044bc57 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044bc71 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000047068d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000047174a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000045072f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000450732 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000417095 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044bbf5 : mov dword ptr [rax + 8], edx ; ret
0x0000000000465c0d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f202 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041d8ba : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484a9d : mov dword ptr [rax], edi ; pop rbx ; ret
0x00000000004849ed : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a3c2 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484a91 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048ce22 : mov dword ptr [rax], edx ; ret
0x0000000000471a3b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c311 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000480c5f : mov dword ptr [rbp - 0x70], eax ; mov eax, 0x15 ; syscall
0x000000000040356c : mov dword ptr [rbp - 0x98], ecx ; call 8
0x000000000047ccb1 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000458402 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412687 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000004818ee : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412a6f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047f5fe : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004857a3 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485777
0x0000000000481823 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488035 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000488109 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045a9ad : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041672d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416211 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004718fa : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417ead : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414242 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470714 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004715c1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458417 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485263 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004166bc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a069 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416730 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402e2e : mov dword ptr [rbx], ebp ; add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000412585 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004716cb : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000040fff1 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400d0e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450a85 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x00000000004381c7 : mov dword ptr [rcx - 2], ecx ; ret
0x00000000004381b2 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000004381a1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044919a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000418df4 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044455d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000044459b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000044461d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x0000000000443f0b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000443f8d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000443ecd : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000443fd0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000443ff0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000443fb1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000444683 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000443fd3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004160f3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000444665 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000004446a3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000443fb5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000418df1 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b2b5 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b287 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000416123 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048ce61 : mov dword ptr [rdi + 0x98], esi ; ret
0x00000000004445dd : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x0000000000443f2d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000044457b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004445fd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x0000000000443eeb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435345 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435188 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435428 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004352d5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435118 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444447 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435265 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004350a8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e17 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000444429 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435038 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e09 : mov dword ptr [rdi + 4], edx ; ret
0x00000000004444db : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000434fc8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e7b : mov dword ptr [rdi + 5], edx ; ret
0x00000000004444fb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000434f58 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e8b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000444499 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000044451b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000434ee8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e59 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004842be : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x00000000004160f7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482ad4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000004444b9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000044447b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000483f74 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000443e4b : mov dword ptr [rdi + 8], edx ; ret
0x000000000044795b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000446bf5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447953 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447ad5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000446be5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044794b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446bd7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048ce0c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042edf5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ee33 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482a3f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f17c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434998 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f35c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434918 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f54c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434898 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f71d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434809 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f91d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434779 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fb1d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004346e9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f4fd : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f315 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f4f9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042f8d9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042efaf : mov dword ptr [rdi - 4], edx ; ret
0x000000000042f8d6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fad6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fcd6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042edf9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042ee37 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042efac : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f0a8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042eff4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a18 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004829c4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482ace : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046838a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000444415 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444467 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000004443f4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000443dd4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000444445 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000443e15 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444497 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000443e57 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000004444b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000443e67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446927 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000443e78 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000443e88 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000443e98 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000443e06 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000443e48 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446933 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000434eec : mov dword ptr [rdi], ecx ; ret
0x0000000000447acf : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004443e4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000444402 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000444454 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004351f4 : mov dword ptr [rdi], edx ; ret
0x00000000004381af : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484146 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043819e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004381c3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446bdc : mov dword ptr [rdi], esi ; ret
0x000000000042da12 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000412705 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443967 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000442197 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443949 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442189 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004439fb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000443979 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004421a9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443a1b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000443999 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000004421b9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004439b9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000443a3b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000004421c9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046afe0 : mov dword ptr [rdx + 8], eax ; jmp 0x46afb4
0x00000000004439d9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x00000000004438cb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000044211b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000418020 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004438f4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000443922 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000443874 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000044922a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484148 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004842a5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000004494da : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004420c4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484a7d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000417f88 : mov dword ptr [rdx], eax ; ret
0x000000000048fd5f : mov dword ptr [rip + 0x22bf8b], ebx ; jne 0x48fd51 ; pop rbx ; ret
0x00000000004845a8 : mov dword ptr [rip + 0x237aba], eax ; ret
0x000000000047eed5 : mov dword ptr [rip + 0x23d4d5], eax ; ret
0x000000000045a7d8 : mov dword ptr [rip + 0x2602da], edx ; je 0x45a7f1 ; ret
0x000000000044d036 : mov dword ptr [rip + 0x26ba7c], edx ; pop rbx ; ret
0x000000000041f436 : mov dword ptr [rip + 0x29a424], eax ; ret
0x000000000041935c : mov dword ptr [rip + 0x2a04fe], eax ; ret
0x0000000000418e57 : mov dword ptr [rip + 0x2a0993], eax ; ret
0x0000000000418e6e : mov dword ptr [rip + 0x2a0998], eax ; ret
0x0000000000418e2f : mov dword ptr [rip + 0x2a09b3], eax ; ret
0x0000000000418e0f : mov dword ptr [rip + 0x2a09cb], eax ; ret
0x0000000000418d05 : mov dword ptr [rip + 0x2a0b3d], eax ; ret
0x0000000000418cf5 : mov dword ptr [rip + 0x2a0b45], eax ; ret
0x0000000000418ce3 : mov dword ptr [rip + 0x2a0b47], edx ; ret
0x0000000000418ca5 : mov dword ptr [rip + 0x2a0b4d], eax ; ret
0x0000000000418c95 : mov dword ptr [rip + 0x2a0b65], eax ; ret
0x0000000000418e84 : mov dword ptr [rip + 0x2a2f0a], eax ; ret
0x0000000000401783 : mov dword ptr [rsi + 0x10], esi ; syscall
0x0000000000446936 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446929 : mov dword ptr [rsi - 4], ecx ; ret
0x00000000004784a1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048ce4e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f042 : mov dword ptr [rsi], eax ; ret
0x000000000047e389 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000041c5fa : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041c6b7 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000450e1c : mov dword ptr [rsp + 0x50], eax ; call 0x44d076
0x000000000041c5ff : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040950b : mov dword ptr [rsp + 8], ecx ; call 0x406016
0x0000000000410e8e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041cc14 : mov dword ptr [rsp + 8], edx ; call 0x418eb6
0x000000000041cc13 : mov dword ptr [rsp + 8], r10d ; call 0x418eb7
0x0000000000489813 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000412f62 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416275 : mov dword ptr [rsp], edi ; call 0x412505
0x0000000000465c0c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f201 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000004755bc : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449199 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449229 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000446be4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f310 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000443dc0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000447e1b : mov eax, 0x10 ; pop rbx ; ret
0x00000000004752f9 : mov eax, 0x101 ; syscall
0x0000000000475272 : mov eax, 0x106 ; syscall
0x0000000000449fd7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047db59 : mov eax, 0x14 ; syscall
0x000000000044bcc4 : mov eax, 0x15 ; syscall
0x0000000000423110 : mov eax, 0x16 ; ret
0x0000000000449180 : mov eax, 0x18 ; syscall
0x000000000044b923 : mov eax, 0x19 ; syscall
0x000000000044a270 : mov eax, 0x1c ; syscall
0x0000000000447e29 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004881d0 : mov eax, 0x26 ; syscall
0x0000000000484f40 : mov eax, 0x27 ; syscall
0x0000000000447e22 : mov eax, 0x30 ; pop rbx ; ret
0x00000000004751a0 : mov eax, 0x3f ; syscall
0x0000000000447e37 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a691b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000449677 : mov eax, 0x48 ; syscall
0x000000000044995b : mov eax, 0x4f ; syscall
0x00000000004577d8 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000447e30 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044b950 : mov eax, 0x63 ; syscall
0x00000000004751d0 : mov eax, 0x66 ; syscall
0x00000000004751f0 : mov eax, 0x68 ; syscall
0x00000000004751e0 : mov eax, 0x6b ; syscall
0x0000000000475200 : mov eax, 0x6c ; syscall
0x0000000000447e0d : mov eax, 0x80 ; pop rbx ; ret
0x000000000048961f : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000046c431 : mov eax, 0x8900001d ; ret 0x349
0x0000000000486834 : mov eax, 0x89fd8945 ; ret 0xe283
0x000000000040177d : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044a240 : mov eax, 0xa ; syscall
0x000000000044a210 : mov eax, 0xb ; syscall
0x0000000000493e41 : mov eax, 0xb9d0fff9 ; stc ; call rax
0x000000000040db62 : mov eax, 0xba ; syscall
0x0000000000493e21 : mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000474a70 : mov eax, 0xc9 ; syscall
0x000000000044b9d5 : mov eax, 0xca ; syscall
0x00000000004b1234 : mov eax, 0xd800005e ; xchg eax, ebp ; cli ; call qword ptr [rdi]
0x000000000040db90 : mov eax, 0xe ; syscall
0x0000000000448ef5 : mov eax, 0xe5 ; syscall
0x00000000004036bc : mov eax, 0xe8000000 ; retf
0x000000000040db6e : mov eax, 0xea ; syscall
0x000000000045a9d1 : mov eax, 0xf ; syscall
0x0000000000457f9c : mov eax, 0xff50cee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000411b81 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411907 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412a83 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004118cb : mov eax, 0xffffffff ; ret
0x0000000000475a31 : mov eax, 1 ; leave ; ret
0x0000000000484125 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000416df2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048646d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047f950 : mov eax, 1 ; pop rbx ; ret
0x00000000004682ef : mov eax, 1 ; ret
0x000000000044953a : mov eax, 1 ; syscall
0x00000000004742c3 : mov eax, 2 ; ret
0x0000000000474521 : mov eax, 3 ; ret
0x000000000044980a : mov eax, 3 ; syscall
0x000000000048dccf : mov eax, 4 ; jne 0x48dcf8 ; ret
0x0000000000474531 : mov eax, 4 ; ret
0x000000000044920e : mov eax, 4 ; syscall
0x0000000000474541 : mov eax, 5 ; ret
0x000000000044925c : mov eax, 5 ; syscall
0x0000000000474551 : mov eax, 6 ; ret
0x000000000047521e : mov eax, 6 ; syscall
0x0000000000474561 : mov eax, 7 ; ret
0x0000000000447e14 : mov eax, 8 ; pop rbx ; ret
0x000000000044e4d0 : mov eax, 8 ; ret
0x0000000000449600 : mov eax, 8 ; syscall
0x000000000044a16c : mov eax, 9 ; syscall
0x0000000000411421 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471b54 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416fd8 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x416fd9 ; ret
0x00000000004816e1 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000458e10 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x458e22 ; call rax
0x000000000046b987 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045a81f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046057d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048aa89 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048aa71 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047f969 : mov eax, dword ptr [rax] ; ret
0x000000000047c250 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c071 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041625d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484a99 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416949 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000450e19 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d079
0x0000000000442194 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004421a6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004421b6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004421c6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004421d6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043cdaa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043e682 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443920 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000442160 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000443871 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004420c1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004438f1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442141 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047c856 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004719ae : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000417f90 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000417fb8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049099d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4909b4 ; call rax
0x0000000000471b51 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004182e1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048cde1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048ce31 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048ce71 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048ced1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048cec1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048ce81 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460ac7 : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487951 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487968 ; ret
0x0000000000417f85 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418e81 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2f0a], eax ; ret
0x000000000048f135 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f147 ; ret
0x000000000048f150 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f167 ; ret
0x000000000048f380 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f397 ; ret
0x000000000047e33c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448347 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448339 ; ret
0x000000000043a9b6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000417f71 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x417f70 ; ret
0x0000000000485140 : mov eax, dword ptr [rip + 0x23777a] ; ret
0x000000000047f03b : mov eax, dword ptr [rip + 0x23d367] ; mov qword ptr [rsi], rax ; ret
0x000000000047efca : mov eax, dword ptr [rip + 0x23d3e0] ; ret
0x0000000000457681 : mov eax, dword ptr [rip + 0x2647f1] ; ret
0x000000000044f121 : mov eax, dword ptr [rip + 0x26d801] ; ret
0x00000000004182c1 : mov eax, dword ptr [rip + 0x2a0e59] ; ret
0x000000000048dd22 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048abb1 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048ab84 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048aba1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048dd41 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046b94c : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460b11 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461169 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000470bbf : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048cea6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a456 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401103 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000452d8c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044984a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040dedd : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004868df : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048a61a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047f968 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a530 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046f4e3 : mov eax, eax ; jmp 0x46f4b5
0x0000000000449499 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042230f : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000447e52 : mov eax, eax ; ret
0x00000000004748e4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000448c62 : mov eax, eax ; syscall
0x0000000000473721 : mov eax, eax ; vzeroupper ; ret
0x000000000041009b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044ae34 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x00000000004101b3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fc6e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411872 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041239d : mov eax, ebp ; syscall
0x00000000004840b3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004880c7 : mov eax, ebx ; jne 0x4880e5 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004881ae : mov eax, ebx ; jne 0x4881cd ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004143e2 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410325 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a070 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041268b : mov eax, ebx ; pop rbx ; ret
0x0000000000483f77 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465af5 : mov eax, ecx ; ret
0x000000000040db5b : mov eax, ecx ; syscall
0x0000000000412583 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a7c5 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000004125b4 : mov eax, edi ; ret
0x000000000041a3c5 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000465bbe : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000046819a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ff41 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000447e56 : mov eax, edx ; pop rbx ; ret
0x000000000041a3d1 : mov eax, edx ; ret
0x00000000004011fa : mov eax, edx ; syscall
0x0000000000482327 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000041385a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046f814 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041d88d : mov eax, esi ; pop rbx ; ret
0x000000000041d8c1 : mov eax, esi ; ret
0x0000000000448c52 : mov eax, esi ; syscall
0x000000000046e948 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041239c : mov eax, r13d ; syscall
0x000000000046f4e2 : mov eax, r8d ; jmp 0x46f4b6
0x0000000000448c61 : mov eax, r8d ; syscall
0x0000000000465af4 : mov eax, r9d ; ret
0x000000000041213e : mov eax, r9d ; syscall
0x00000000004a8814 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000493d89 : mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000493d69 : mov ebp, 0xbf80fff9 ; stc ; call qword ptr [rax]
0x000000000049ed04 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a5ddd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000472ee8 : mov ebp, 0xf80148c0 ; ret
0x000000000047316c : mov ebp, 0xf80148c6 ; ret
0x00000000004a7546 : mov ebp, 0xfb67d10d ; ret
0x0000000000468e3e : mov ebp, 0xfffff730 ; call rax
0x000000000045d92c : mov ebp, 0xfffff758 ; call rax
0x000000000046be39 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000464d15 : mov ebp, 0xffffff40 ; call rax
0x00000000004032b9 : mov ebp, 0xffffff70 ; call 0x41fd17
0x0000000000412397 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048d303 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048232d : mov ebp, ecx ; nop ; jmp rdx
0x00000000004a8564 : mov ebx, 0x1b5c347e ; jmp 0x4a853c
0x0000000000434bd7 : mov ebx, 0x46f00ff2 ; retf
0x000000000042f734 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000042f752 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000046bae3 : mov ebx, 0x89000025 ; ret 0x349
0x000000000044d041 : mov ebx, 0x89000281 ; ret
0x000000000044ba34 : mov ebx, 0xafb8341 ; je 0x44ba43 ; ret
0x0000000000493da5 : mov ebx, 0xbd20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a5ddb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000042445b : mov ebx, 0xf480001 ; ret 0x66c3
0x00000000004a8b84 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000045a216 : mov ebx, edi ; test rax, rax ; je 0x45a226 ; call rax
0x0000000000475060 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047f6bd : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040db56 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047531c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a6a19 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a84ee : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000493dc1 : mov ecx, 0xbae0fff9 ; stc ; jmp rax
0x0000000000493da1 : mov ecx, 0xbb20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000493e45 : mov ecx, 0xbbd0fff9 ; stc ; call rax
0x0000000000475580 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000004849c3 : mov ecx, 0xe9002376 ; retf
0x000000000046b98a : mov ecx, 1 ; jmp rax
0x00000000004381ac : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042d55e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471b2b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043a9b3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a89a4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a89d9 ; retf 0x32dd
0x000000000042f8d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fad3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fcd3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000443df0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000443e31 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435343 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004352d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435263 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435185 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435115 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004350a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435035 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434fc5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434f55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434ee5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435425 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000443dd1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004817d7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481765 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472161 : mov ecx, eax ; jmp 0x47212b
0x000000000044e40b : mov ecx, ebp ; call rbx
0x0000000000416d70 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000446bb2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000416daa : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000473ee5 : mov ecx, esi ; call rbx
0x000000000048c1ac : mov edi, 0x148015b ; retf
0x000000000045f17a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a9c : mov edi, 0x6babd0 ; jmp rax
0x0000000000493d6d : mov edi, 0xb210fff9 ; stc ; call rax
0x0000000000493d2d : mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x0000000000494011 : mov edi, 0xc3d0fff9 ; stc ; jmp qword ptr [rax]
0x0000000000403a13 : mov edi, 0xdf8948ff ; call 0x4004c7
0x000000000048fd62 : mov edi, 0xe1750022 ; pop rbx ; ret
0x00000000004492e4 : mov edi, 0xffffff9c ; syscall
0x000000000048cb36 : mov edi, 1 ; call r14
0x000000000048ca8c : mov edi, 1 ; call rax
0x000000000048d7fc : mov edi, 1 ; jmp rax
0x000000000040e974 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044a88c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000412396 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045d92b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000468e3d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x00000000004032b8 : mov edi, dword ptr [rbp - 0x90] ; call 0x41fd18
0x0000000000464d14 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d181 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a374 : mov edi, dword ptr [rbp] ; call r12
0x000000000040ded9 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a34e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c43f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f016 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47eff9 ; ret
0x000000000048fd61 : mov edi, dword ptr [rdi - 0x1e8affde] ; pop rbx ; ret
0x00000000004a7806 : mov edi, dword ptr [rdx] ; ret
0x0000000000487f9f : mov edi, dword ptr [rsp + 0x10] ; call 0x4849d6
0x000000000048ea5e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000047537e : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000482204 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450b55 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450a20 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000403a9d : mov edi, dword ptr [rsp + 0x30] ; call 0x41fd16
0x0000000000451431 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000451609 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004518f3 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x0000000000451f2b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000454eef : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000451139 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000450e45 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045336a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455b16 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000452d87 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004496f1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x00000000004010fe : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041697b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a451 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416286 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048d94c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004039cb : mov edi, eax ; call 0x40043c
0x0000000000423174 : mov edi, eax ; call rcx
0x000000000040db60 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000421693 : mov edi, ebp ; call 0x41d8d4
0x0000000000403a8b : mov edi, ebp ; call 0x41fd14
0x00000000004896be : mov edi, ebp ; call qword ptr [r14]
0x0000000000489792 : mov edi, ebp ; call qword ptr [rax]
0x000000000048986e : mov edi, ebp ; call qword ptr [rcx]
0x0000000000457e4c : mov edi, ebp ; call r12
0x000000000048e83c : mov edi, ebp ; call r14
0x00000000004224f6 : mov edi, ebp ; call rax
0x0000000000473d91 : mov edi, ebp ; call rbx
0x000000000044a16a : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000041213c : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000473ee2 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040df69 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045949d : mov edi, ebp ; mov rsi, r12 ; call 0x4056e7
0x0000000000403a16 : mov edi, ebx ; call 0x4004c4
0x000000000044e70e : mov edi, ebx ; call r14
0x0000000000412f66 : mov edi, ebx ; call rax
0x000000000044956e : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044982c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000041631d : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470a3f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044949e : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000471eb8 : mov edi, edi ; call r12
0x0000000000410e93 : mov edi, edi ; call rax
0x000000000044ecfb : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004843f1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4843d9 ; mov rax, rsi ; ret
0x0000000000448c50 : mov edi, edx ; mov eax, esi ; syscall
0x0000000000448c5f : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000457fa3 : mov edi, esi ; call rbx
0x0000000000458281 : mov edi, esi ; call rdx
0x000000000041cc11 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x418eb9
0x000000000048d854 : mov edi, esp ; call r15
0x0000000000471be0 : mov edi, esp ; call rbx
0x0000000000449959 : mov edi, esp ; mov eax, 0x4f ; syscall
0x000000000041213b : mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000447d56 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412706 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000415061 : mov edx, 0x142 ; call 0x401ab7
0x0000000000415042 : mov edx, 0x143 ; call 0x401ab7
0x0000000000434b57 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000042f934 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042f952 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044d022 : mov edx, 0x89000281 ; ret
0x000000000040495c : mov edx, 0x8949ffff ; ret 0x149
0x000000000045497e : mov edx, 0x89fffff3 ; retf 0xe283
0x0000000000485836 : mov edx, 0xba ; call 0x401ab7
0x0000000000493e25 : mov edx, 0xbc20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000493dc5 : mov edx, 0xbce0fff9 ; stc ; jmp rax
0x000000000048b9c1 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x00000000004507f7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e2bc : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045aa94 : mov edx, 8 ; mov eax, ecx ; syscall
0x000000000045827a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048d950 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484a79 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043e67f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043cdad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484a8d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048e839 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000443e12 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000443e03 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000443e53 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000443e63 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f311 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042f6d0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ef61 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000444400 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004353b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000444451 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004351f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004443e1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000443dc1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000482209 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048ca89 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000423179 : mov edx, eax ; jmp 0x42312c
0x000000000045606a : mov edx, eax ; jmp 0x456021
0x00000000004561a1 : mov edx, eax ; jmp 0x456160
0x000000000045646f : mov edx, eax ; jmp 0x456426
0x00000000004564e6 : mov edx, eax ; jmp 0x45649d
0x000000000046f042 : mov edx, eax ; jmp 0x46f010
0x0000000000475ace : mov edx, eax ; jmp 0x475ac2
0x000000000040db6c : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000044982e : mov edx, eax ; mov eax, 3 ; syscall
0x00000000004896b9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048978d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489869 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489673 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475270 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044b921 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000004039c8 : mov edx, edi ; mov rdi, rax ; call 0x40043f
0x0000000000447878 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004754dd : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040db6b : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000455919 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000452e62 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000004756a9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000045072c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a87c6 : mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004754df : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a8863 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004a694a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044bab8 : mov esi, 0x80 ; syscall
0x000000000044f882 : mov esi, 0x83480147 ; ret
0x0000000000461c91 : mov esi, 0x8900000b ; ret 0x349
0x000000000046b595 : mov esi, 0x8900002b ; ret 0x349
0x000000000047e3c9 : mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000046434e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004a5dde : mov esi, 0xc2c1c0bf ; ret
0x0000000000447ce4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000460b14 : mov esi, 1 ; jmp rax
0x000000000046ebac : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a2e8 : mov esi, 2 ; jmp rax
0x000000000044a2fb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x00000000004b01e4 : mov esi, cs ; stc ; jmp qword ptr [rdx]
0x0000000000458d14 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x458d26 ; call rsi
0x000000000048d17d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044ecfe : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ea5b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048d905 : mov esi, dword ptr [rsi] ; call r12
0x0000000000446be3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e406 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004224f1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000451604 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451134 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455b11 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041ff09 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x000000000044956c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044949c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423171 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421b22 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412139 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000421690 : mov esi, ebx ; mov rdi, r13 ; call 0x41d8d7
0x000000000047f6c0 : mov esi, ebx ; syscall
0x0000000000449fd5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000004492e2 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048d7fa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d928 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e323 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e308 ; ret
0x000000000044920c : mov esi, edx ; mov eax, 4 ; syscall
0x000000000044925a : mov esi, edx ; mov eax, 5 ; syscall
0x000000000047521c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000464d11 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048d851 : mov esi, esi ; mov rdi, r12 ; call r15
0x00000000004594a0 : mov esi, esp ; call 0x4056e4
0x00000000004896bc : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489790 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x000000000048986c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489676 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470a3c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d2ab : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042aff1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b021 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b011 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000040477f : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417612 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004b3538 : mov esp, 0x94000081 ; cmp esp, -1 ; retf 0
0x000000000045134d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004517cf : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000440733 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046f9b4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004ab838 : mov esp, 0xf4000004 ; xchg eax, edi ; cmc ; call rsp
0x000000000042b0db : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b001 : mov esp, 0xf80148c0 ; ret
0x000000000042b4f2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000048232a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d307 : mov esp, ecx ; ret
0x000000000044a890 : mov esp, esi ; call r15
0x00000000004525dd : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000456b5d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048aa73 : mov qword ptr [r10], r8 ; ret
0x00000000004381a0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044bbf0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470688 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004706c8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004716c7 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044bc56 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044bc70 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000047068c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471749 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000417094 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044bbf4 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484a9c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004849ec : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484a90 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ce21 : mov qword ptr [rax], rdx ; ret
0x0000000000471a3a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c310 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x0000000000480c5e : mov qword ptr [rbp - 0x70], rax ; mov eax, 0x15 ; syscall
0x000000000040356b : mov qword ptr [rbp - 0x98], rcx ; call 9
0x000000000047ccb0 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000458401 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412686 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000004818ed : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412a6e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047f5fd : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004857a2 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485778
0x0000000000481822 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488034 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488108 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000416210 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000417eac : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485262 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a068 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040fff0 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000482b4e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000044461c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000443f8c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000443f6c : mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000443fcf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000443fef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000443fb0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004160f2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b2b4 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b286 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000416122 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048ce60 : mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004445dc : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x0000000000443f2c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004445fc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x0000000000443f4c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435187 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435117 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004350a7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435037 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004444da : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000434fc7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e7a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000004444fa : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000434f57 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e8a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000044451a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000434ee7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443e9a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000483f73 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482ad3 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004842bd : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x00000000004160f6 : mov qword ptr [rdi + 8], rax ; ret
0x000000000044794a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446bd6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048ce0b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042edf4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ee32 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482a3e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f17b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434997 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f35b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434917 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f54b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434897 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f71c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434808 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f91c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434778 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fb1c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004346e8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004829c9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042edf8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ee36 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042efab : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f0a7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042eff3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a17 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000468389 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482998 : mov qword ptr [rdi], r9 ; ret
0x0000000000444466 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000443e56 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000443e66 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000443e77 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000443e87 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000443e97 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000443e47 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000434eeb : mov qword ptr [rdi], rcx ; ret
0x0000000000447ace : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000444453 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004351f3 : mov qword ptr [rdi], rdx ; ret
0x000000000043819d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446bdb : mov qword ptr [rdi], rsi ; ret
0x0000000000412704 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000004439fa : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004421ea : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443a1a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000044220a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443a3a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000044222a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046afdf : mov qword ptr [rdx + 8], rax ; jmp 0x46afb5
0x00000000004438ca : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000044211a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000041801f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000443873 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004420c3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484a7c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000417f87 : mov qword ptr [rdx], rax ; ret
0x00000000004845a7 : mov qword ptr [rip + 0x237aba], rax ; ret
0x000000000047eed4 : mov qword ptr [rip + 0x23d4d5], rax ; ret
0x000000000041f435 : mov qword ptr [rip + 0x29a424], rax ; ret
0x000000000041935b : mov qword ptr [rip + 0x2a04fe], rax ; ret
0x0000000000418e56 : mov qword ptr [rip + 0x2a0993], rax ; ret
0x0000000000418e2e : mov qword ptr [rip + 0x2a09b3], rax ; ret
0x0000000000418e0e : mov qword ptr [rip + 0x2a09cb], rax ; ret
0x0000000000418d04 : mov qword ptr [rip + 0x2a0b3d], rax ; ret
0x0000000000418cf4 : mov qword ptr [rip + 0x2a0b45], rax ; ret
0x0000000000418ce2 : mov qword ptr [rip + 0x2a0b47], rdx ; ret
0x0000000000418ca4 : mov qword ptr [rip + 0x2a0b4d], rax ; ret
0x0000000000418c94 : mov qword ptr [rip + 0x2a0b65], rax ; ret
0x0000000000401782 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004784a0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f041 : mov qword ptr [rsi], rax ; ret
0x000000000047e388 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000450e1b : mov qword ptr [rsp + 0x50], rax ; call 0x44d077
0x000000000041c5fe : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040950a : mov qword ptr [rsp + 8], rcx ; call 0x406017
0x0000000000410e8d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489812 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000412f61 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416274 : mov qword ptr [rsp], rdi ; call 0x412506
0x000000000045a805 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000446bd5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044b920 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434b56 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000042f951 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x000000000045aa93 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000434bd6 : mov r11d, 0x46f00ff2 ; retf
0x000000000042f751 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000044a88f : mov r12d, r14d ; call r15
0x000000000048d17c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d180 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048aa70 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000400db7 : mov r8b, 0x2b ; add bh, dh ; ret 0
0x000000000048d42e : mov r8b, 0xe8 ; retf
0x000000000044f9ff : mov r8b, 0xe8 ; retf 0xffad
0x000000000044e40a : mov r9, r13 ; call rbx
0x0000000000473ee4 : mov r9, r14 ; call rbx
0x0000000000417520 : mov rax, -1 ; ret
0x000000000045a9d0 : mov rax, 0xf ; syscall
0x0000000000474500 : mov rax, 1 ; ret
0x0000000000474510 : mov rax, 2 ; ret
0x0000000000474520 : mov rax, 3 ; ret
0x0000000000474530 : mov rax, 4 ; ret
0x0000000000474540 : mov rax, 5 ; ret
0x0000000000474550 : mov rax, 6 ; ret
0x0000000000474560 : mov rax, 7 ; ret
0x00000000004868de : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047c855 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000411420 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471b53 : mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000004816e0 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000458e0f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x458e23 ; call rax
0x000000000046b986 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045a81e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046057c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048cdb2 : mov rax, qword ptr [rax] ; ret
0x000000000047c070 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041625c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484a98 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416948 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004420c0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000049099c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4909b5 ; call rax
0x0000000000471b50 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004182e0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048cde0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048ce30 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048ce70 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048ced0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048cec0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048ce80 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460ac6 : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487950 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487969 ; ret
0x0000000000417f84 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000417f70 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x417f71 ; ret
0x000000000047efc9 : mov rax, qword ptr [rip + 0x23d3e0] ; ret
0x0000000000457680 : mov rax, qword ptr [rip + 0x2647f1] ; ret
0x000000000044f120 : mov rax, qword ptr [rip + 0x26d801] ; ret
0x00000000004182c0 : mov rax, qword ptr [rip + 0x2a0e59] ; ret
0x000000000048dd21 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048abb0 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048ab83 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048aba0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048dd40 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046b94b : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460b10 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461168 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048cea5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a455 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401102 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452d8b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040dedc : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048a619 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046e947 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a81d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a52f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042230e : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473720 : mov rax, r8 ; vzeroupper ; ret
0x000000000044ae33 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004101b2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413996 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048cfda : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004143e1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410324 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a06f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041268a : mov rax, rbx ; pop rbx ; ret
0x000000000047e38b : mov rax, rcx ; ret
0x0000000000412582 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a7c4 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004125b3 : mov rax, rdi ; ret
0x000000000041a3c4 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000474faa : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419d7c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000447e55 : mov rax, rdx ; pop rbx ; ret
0x000000000041a3d0 : mov rax, rdx ; ret
0x000000000041d88c : mov rax, rsi ; pop rbx ; ret
0x000000000041d8c0 : mov rax, rsi ; ret
0x000000000048d302 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048232c : mov rbp, r9 ; nop ; jmp rdx
0x000000000045a215 : mov rbx, rdi ; test rax, rax ; je 0x45a227 ; call rax
0x000000000047505f : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047f6bc : mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000443e30 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004817d6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481764 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472160 : mov rcx, rax ; jmp 0x47212c
0x0000000000446bb1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044af4b : mov rdi, qword ptr [r13] ; call r12
0x000000000040ded8 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040e973 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044a88b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045d92a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000468e3c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000004032b7 : mov rdi, qword ptr [rbp - 0x90] ; call 0x41fd19
0x0000000000464d13 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a373 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a34d : mov rdi, qword ptr [rbx] ; call r12
0x0000000000487f9e : mov rdi, qword ptr [rsp + 0x10] ; call 0x4849d7
0x000000000048ea5d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000450b54 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000403a9c : mov rdi, qword ptr [rsp + 0x30] ; call 0x41fd17
0x0000000000451430 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451608 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004518f2 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451f2a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000454eee : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451138 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453369 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455b15 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416285 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048d94b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d853 : mov rdi, r12 ; call r15
0x0000000000471bdf : mov rdi, r12 ; call rbx
0x0000000000449958 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000421692 : mov rdi, r13 ; call 0x41d8d5
0x0000000000457e4b : mov rdi, r13 ; call r12
0x000000000048e83b : mov rdi, r13 ; call r14
0x0000000000491cb0 : mov rdi, r13 ; call rax
0x000000000040df68 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045949c : mov rdi, r13 ; mov rsi, r12 ; call 0x4056e8
0x0000000000457fa2 : mov rdi, r14 ; call rbx
0x0000000000458280 : mov rdi, r14 ; call rdx
0x0000000000471eb7 : mov rdi, r15 ; call r12
0x0000000000410e92 : mov rdi, r15 ; call rax
0x000000000044ecfa : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004039ca : mov rdi, rax ; call 0x40043d
0x0000000000423173 : mov rdi, rax ; call rcx
0x000000000040db5f : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000403a8a : mov rdi, rbp ; call 0x41fd15
0x00000000004224f5 : mov rdi, rbp ; call rax
0x0000000000473d90 : mov rdi, rbp ; call rbx
0x000000000044a169 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000473ee1 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000403a15 : mov rdi, rbx ; call 0x4004c5
0x000000000044e70d : mov rdi, rbx ; call r14
0x0000000000412f65 : mov rdi, rbx ; call rax
0x000000000041631c : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470a3e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048ca88 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048e838 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048d94f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484a78 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484a8c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042ef60 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004351f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000482208 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004896b8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048978c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489868 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489672 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004039c7 : mov rdx, r15 ; mov rdi, rax ; call 0x400440
0x000000000046f041 : mov rdx, r8 ; jmp 0x46f011
0x0000000000423178 : mov rdx, rax ; jmp 0x42312d
0x0000000000456069 : mov rdx, rax ; jmp 0x456022
0x00000000004561a0 : mov rdx, rax ; jmp 0x456161
0x000000000045646e : mov rdx, rax ; jmp 0x456427
0x00000000004564e5 : mov rdx, rax ; jmp 0x45649e
0x0000000000475acd : mov rdx, rax ; jmp 0x475ac3
0x000000000047526f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000447877 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048d904 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ea5a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000458d13 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x458d27 ; call rsi
0x000000000044ecfd : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e405 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004224f0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041ff08 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000045949f : mov rsi, r12 ; call 0x4056e5
0x00000000004896bb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000048978f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048986b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489675 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048d850 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000044949b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423170 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000412138 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000042168f : mov rsi, rbx ; mov rdi, r13 ; call 0x41d8d8
0x000000000047f6bf : mov rsi, rbx ; syscall
0x00000000004492e1 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048d7f9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e322 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e309 ; ret
0x000000000044920b : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000449259 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000047521b : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000482329 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d306 : mov rsp, rcx ; ret
0x00000000004aadc7 : mov spl, dil ; std ; jmp rax
0x000000000046c476 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x00000000004381c5 : mov word ptr [r9 - 2], cx ; ret
0x0000000000478a5b : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; retf 0xffdc
0x00000000004b0808 : mov word ptr [rax + rax], ss ; test byte ptr [rdx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000046a955 : mov word ptr [rbx], es ; add byte ptr [rcx - 0x77], al ; retf
0x000000000044455c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x0000000000443ecc : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444664 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000443fb4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435427 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444428 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000443e08 : mov word ptr [rdi + 4], dx ; ret
0x000000000044447a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x0000000000443e4a : mov word ptr [rdi + 8], dx ; ret
0x000000000044795a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000446bf4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f4fc : mov word ptr [rdi - 2], cx ; ret
0x000000000042f314 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f4f8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000443dd3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446932 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043542b : mov word ptr [rdi], cx ; ret
0x0000000000447ae4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000004443e3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435493 : mov word ptr [rdi], dx ; ret
0x00000000004381c2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446bf9 : mov word ptr [rdi], si ; ret
0x0000000000443948 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000442188 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004438f3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442143 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446935 : mov word ptr [rsi - 2], cx ; ret
0x00000000004047ab : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000446bf3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000047b89c : movabs al, byte ptr [0x5b0e78c085fffce9] ; ret
0x00000000004470c7 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000046cf1a : movabs al, byte ptr [0x840fc08548000000] ; ret
0x0000000000487650 : movabs al, byte ptr [0xe8a855894c1fb60f] ; retf
0x000000000041f3d8 : movabs al, byte ptr [0xf3000000000029c9] ; ret
0x00000000004889aa : movabs byte ptr [0x8949c08548fff96a], al ; ret 0x8b48
0x00000000004a8903 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a8561 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004a69a7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a725a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000042da82 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042da7e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042db2c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040db4c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000443ea0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044471d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044406d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004350ff : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043508f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043501f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434faf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004446bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000044400d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000434f3f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004446dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000044402d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000434ecf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004446fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044404d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004354ef : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043547f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043540f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043539f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043532f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352bf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043524f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351df : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043516f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004478cd : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043465b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004346cb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444534 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000443eb4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000443ef7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000443ee7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000443f68 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000443f28 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000443f48 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000443ec8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444069 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444009 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444029 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444049 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434e7a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000434ed4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000443ea1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044471e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044406e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435100 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435090 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435020 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434fb0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004446be : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000044400e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000434f40 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004446de : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000044402e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000434ed0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004446fe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044404e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004354f0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435480 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435410 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353a0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435330 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352c0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435250 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351e0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435170 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447855 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004478ce : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043465c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004346cc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e07 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d87 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434cf7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c77 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bf7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b77 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434af7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a77 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349f7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434977 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004348f7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434877 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004347e7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434757 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004346c7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444535 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000443eb5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000443f08 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000443ef8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000443ee8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000443f69 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000443f29 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000443f49 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000443ec9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044406a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044400a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044402a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044404a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434e7b : movq qword ptr [rdi], mm0 ; ret
0x0000000000434ed5 : movq qword ptr [rdi], mm1 ; ret
0x000000000044d048 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004574cc : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446b55 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a7682 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004b0eec : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4b0eec ; call qword ptr [rdx]
0x0000000000446b47 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004acd20 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rsi + rcx*4], bh ; idiv bh ; retf
0x000000000041f439 : movsb byte ptr [rdi], byte ptr [rsi] ; sub dword ptr [rax], eax ; ret
0x00000000004a6565 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000475fb8 : movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f5ac : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000494ba9 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call qword ptr [rax - 0x1f00055a]
0x00000000004a8b7d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a8f15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000047878f : movsd dword ptr [rdi], dword ptr [rsi] ; jl 0x478790 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000413437 : movsd dword ptr [rdi], dword ptr [rsi] ; jnp 0x41346b ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004a87d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000044c197 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000448173 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x00000000004a7261 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048aa14 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480adb : movsx eax, cl ; neg eax ; ret
0x0000000000480b80 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004244f1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432adb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042d55b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000048bcb8 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000040216e : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048c5b9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048ac67 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048aa41 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c1f1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048aa42 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x000000000041672e : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044b951 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a7600 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000040216f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044d17f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d108 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000460f45 : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000047bd4d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046e737 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048c1f2 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x0000000000446bad : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047bd4e : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x000000000047c675 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048ac68 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000046ed67 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000047c676 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000401f06 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448e94 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000048c5ba : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046e5cb : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000447d18 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000447dd2 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048bcb9 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x0000000000484ecd : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00000000004467e7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000446794 : movsxd rax, ecx ; ret
0x00000000004a842a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004467d9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042be8d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000443c69 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004239e6 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x0000000000432adc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042d55c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042be8e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000443c6a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004244f2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000447d40 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446827 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d517 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a00f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045a010 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040d518 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042d62f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042d630 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d22f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000459b10 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000459b11 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x0000000000445c4c : movsxd rsi, esi ; ret 0x7520
0x0000000000446d0f : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000446d96 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446d97 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000446d10 : movups xmmword ptr [rbx], xmm4 ; ret
0x0000000000446d0b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000446d0a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000446d92 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446af2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446c79 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000446c56 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446aef : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048aa15 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004754b1 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048800c : movzx eax, al ; neg eax ; ret
0x00000000004848d9 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e480 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415170 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048dc6e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416371 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041285e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004183ff : movzx eax, byte ptr [rax] ; ret
0x000000000046b947 : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000425888 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042bc20 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042b760 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004258a3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000416380 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412870 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415171 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447da0 : movzx eax, cl ; pop rbx ; ret
0x00000000004462aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4462a9 ; ret
0x000000000044635a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446359 ; ret
0x000000000042cd44 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000446bc8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004258a0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042bc23 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dab3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40da9b ; ret
0x0000000000425a61 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000429ed8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042bba8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000004258f3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000445c74 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000445cd4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000445cc4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000445cb4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000445ca4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000445c94 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000445c84 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434e20 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042caf7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000445c5b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000435500 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042b763 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042b789 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434da0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435490 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000472fb7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000449197 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041843f : neg eax ; ret
0x0000000000493aa8 : nop ; adc bh, cl ; call rax
0x00000000004942b4 : nop ; adc dl, bh ; jmp qword ptr [rax]
0x000000000049409c : nop ; adc edi, edx ; jmp qword ptr [rax]
0x0000000000434557 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044af77 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44af88 ; call r12
0x000000000042c1ac : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b43c5 : nop ; add byte ptr [rax], al ; js 0x4b43d6 ; std ; jmp rdx
0x00000000004b43c4 : nop ; add byte ptr [rax], al ; js 0x4b43d7 ; std ; jmp rdx
0x00000000004af20c : nop ; add byte ptr ds:[rax], al ; stc ; jmp qword ptr [rbx]
0x00000000004756ec : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e5bf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004879af : nop ; add rsp, 8 ; ret
0x00000000004852bf : nop ; call rax
0x000000000044ed00 : nop ; call rsi
0x000000000044cdb4 : nop ; cli ; add cl, ch ; retf
0x00000000004b11c1 : nop ; cli ; call qword ptr [rdx]
0x0000000000488bbc : nop ; cmp al, 0x23 ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000494594 : nop ; cmp bh, dl ; jmp qword ptr [rax]
0x000000000044bc5f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44bc58 ; ret
0x0000000000494bac : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x0000000000493e78 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x0000000000493f28 : nop ; in eax, 0xf9 ; call qword ptr [rax + 0x20fff9e7]
0x000000000048232f : nop ; jmp rdx
0x00000000004960b8 : nop ; jne 0x4960bd ; lcall [rdi + 0x73] ; sti ; jmp qword ptr [rdi]
0x0000000000400b76 : nop ; leave ; ret
0x00000000004a364c : nop ; mov al, 0xfc ; call rax
0x000000000042f12f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000418e83 : nop ; mov dword ptr [rip + 0x2a2f0a], eax ; ret
0x000000000042f30f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000480c61 : nop ; mov eax, 0x15 ; syscall
0x0000000000484f3f : nop ; mov eax, 0x27 ; syscall
0x000000000047519f : nop ; mov eax, 0x3f ; syscall
0x000000000044b94f : nop ; mov eax, 0x63 ; syscall
0x0000000000474a6f : nop ; mov eax, 0xc9 ; syscall
0x000000000044b9d4 : nop ; mov eax, 0xca ; syscall
0x000000000041679f : nop ; mov eax, 0xffffffff ; ret
0x000000000047f94f : nop ; mov eax, 1 ; pop rbx ; ret
0x0000000000494010 : nop ; mov edi, 0xc3d0fff9 ; stc ; jmp qword ptr [rax]
0x000000000042f6cf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004443ff : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000471a39 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000418d03 : nop ; mov qword ptr [rip + 0x2a0b3d], rax ; ret
0x0000000000418cf3 : nop ; mov qword ptr [rip + 0x2a0b45], rax ; ret
0x0000000000418ca3 : nop ; mov qword ptr [rip + 0x2a0b4d], rax ; ret
0x0000000000418c93 : nop ; mov qword ptr [rip + 0x2a0b65], rax ; ret
0x000000000048ce2f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048ab9f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048dd3f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000443e9f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004b28e0 : nop ; or al, 0xfc ; jmp qword ptr [rax]
0x0000000000493a98 : nop ; or eax, 0xed0fff9 ; stc ; call qword ptr [rax]
0x0000000000493f2c : nop ; out 0xf9, eax ; jmp qword ptr [rax]
0x0000000000400b82 : nop ; pop rbp ; ret
0x00000000004004cf : nop ; ret
0x00000000004b3af0 : nop ; retf
0x0000000000494044 : nop ; sar ecx, cl ; jmp rax
0x000000000048f0f4 : nop ; shl byte ptr [rdx], cl ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000493c09 : nop ; stc ; call qword ptr [rax]
0x0000000000493c1d : nop ; stc ; call rcx
0x00000000004b0650 : nop ; sti ; std ; jmp qword ptr [rdx]
0x0000000000417fbf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000493cf8 : nop ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000041440f : nop ; xor eax, eax ; ret
0x000000000045d12c : nop ; xor edi, edx ; dec dword ptr [rax + 0x29] ; ret
0x000000000040ea38 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419958 : nop dword ptr [rax + rax] ; call rax
0x00000000004854d8 : nop dword ptr [rax + rax] ; call rbx
0x0000000000443ddb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400aa3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000411428 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a6b : nop dword ptr [rax + rax] ; ret
0x00000000004461ab : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004744cc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042310d : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000044917c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x0000000000471b35 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044987d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x00000000004495fc : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041a3cc : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ae5 : nop dword ptr [rax] ; pop rbp ; ret
0x00000000004483cc : nop dword ptr [rax] ; pop rbx ; ret
0x000000000041994d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004180d1 : nop dword ptr [rax] ; ret
0x000000000041434d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x41431d
0x00000000004168d5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004494f9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x00000000004011f4 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004854d7 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ea37 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419957 : nop word ptr [rax + rax] ; call rax
0x000000000048484a : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000004742b2 : nop word ptr [rax + rax] ; ret
0x0000000000447faa : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000411e59 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x411e79
0x0000000000411e58 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x411e7a
0x000000000042a057 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f08f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a085 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004755d2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000475581 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041d8bc : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000429078 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004738f8 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046ba3c : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000425886 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041d88a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000412f63 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047f5a9 : or al, 0x37 ; jae 0x47f557 ; xor eax, eax ; ret
0x0000000000424200 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000044984d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416273 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412507
0x0000000000401101 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004afc88 : or al, 0x49 ; add byte ptr [rax], al ; cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; stc ; call rsi
0x0000000000484c93 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046e863 : or al, 0x7e ; ret 0x8944
0x0000000000400d90 : or al, 0x81 ; retf 0x440
0x00000000004583c3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x4583d7 ; ret
0x000000000045dd8b : or al, 0x83 ; ret
0x0000000000422bf6 : or al, 0x83 ; retf 0x8902
0x0000000000447d41 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x0000000000462ffa : or al, 0x89 ; ret 0xc689
0x0000000000447dcb : or al, 0x89 ; ret 0xe283
0x00000000004244f3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043a9b4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432add : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042d55d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000004756a8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042be8f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000443c6b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042d561 : or al, 0xb ; jmp r9
0x0000000000443c6f : or al, 0xb ; jmp rcx
0x0000000000485555 : or al, 0xca ; jmp 0x485565
0x0000000000411048 : or al, 0xe8 ; ret 0xec
0x00000000004562ff : or al, 0xe9 ; ret
0x00000000004717dc : or al, 0xeb ; ret 0x5590
0x0000000000403eff : or al, 0xf ; retf 0xd289
0x0000000000435023 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000046675d : or al, 0xf6 ; ret 0xf01
0x0000000000493a95 : or al, 0xf9 ; call qword ptr [rax - 0x2f0006f3]
0x00000000004b28e1 : or al, 0xfc ; jmp qword ptr [rax]
0x00000000004229b1 : or al, 9 ; ret 0xbae9
0x00000000004738ab : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a237 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dc21 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a265 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048cb5a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044a241 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000427b88 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004075dd : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aa6c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c216 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b3a0b : or al, byte ptr [rcx] ; ret
0x000000000040950e : or al, ch ; cld ; retf 0xffff
0x000000000040946d : or al, ch ; popfq ; retf
0x00000000004095b4 : or al, ch ; push rsi ; retf 0xffff
0x0000000000406f47 : or al, ch ; ret
0x000000000040ad48 : or al, ch ; ret 0xffb2
0x000000000040713f : or al, ch ; retf
0x0000000000407b40 : or al, ch ; retf 0x181
0x000000000041cc17 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000493acd : or bh, cl ; inc eax ; and ecx, edi ; jmp rax
0x00000000004240e0 : or bh, dh ; ret 0
0x000000000049435d : or bh, dl ; call qword ptr [rdx + 0x12fffa09]
0x0000000000494359 : or bh, dl ; call qword ptr [rdx]
0x00000000004944d9 : or bh, dl ; call rax
0x0000000000494499 : or bh, dl ; jmp rax
0x0000000000494495 : or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x00000000004aef10 : or bl, 0xf7 ; call rsp
0x000000000041a3ca : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046afe1 : or bl, bpl ; retf
0x0000000000405d8d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048e54d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046afe2 : or bl, ch ; retf
0x00000000004351e3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000449fe7 : or bl, dh ; ret
0x000000000044f976 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000411221 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e0dd : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000450d23 : or byte ptr [r8 + 0xf], cl ; ret
0x00000000004842bf : or byte ptr [r8 + 2], r15b ; ret
0x00000000004112ef : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f0ea : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442118 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f5d5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478962 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b862 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000484304 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048c5b7 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004421d7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000411222 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412a55 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e0de : or byte ptr [rax + 0x39], cl ; ret
0x00000000004525d8 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000004827e8 : or byte ptr [rax + 0x39], cl ; retf
0x00000000004183f9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004acbd6 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000450d24 : or byte ptr [rax + 0xf], cl ; ret
0x00000000004194a6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048646c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d3d1 : or byte ptr [rax + 1], cl ; ret
0x00000000004842c0 : or byte ptr [rax + 2], bh ; ret
0x00000000004112f0 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000485552 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485568
0x0000000000418d43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a454 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044ae32 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1440b9b
0x000000000044211d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f0eb : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a06e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041631b : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046afde : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x0000000000442119 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000403a89 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x41fd16
0x000000000047f490 : or byte ptr [rax - 0x77], cl ; ret
0x000000000041096b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x0000000000485183 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046afdd : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x00000000004890da : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f018 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478963 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b863 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000048932e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047f5d6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000489387 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041e9d0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b270 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044a802 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b217 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047d882 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c0d0 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411906 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047224e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a27d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041a06b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a507 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ddc1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a445 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000417097 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000450cca : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045abf2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045aa95 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000447e15 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e4d1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449601 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000427d08 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041f2a6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f279 ; ret
0x000000000042027c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000403a86 : or byte ptr [rax], al ; je 0x403a9b ; mov rdi, rbp ; call 0x41fd19
0x000000000040d22c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f47e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048cdaf : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000048568b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482741 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004853a6 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048ce1e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004823c3 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041ca42 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000491dc3 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000449e6c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449983 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000486727 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000413326 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401b65 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044acbe : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041d987 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041d986 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000462cd7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fcd9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000004aed18 : or byte ptr [rbx - 9], dl ; jmp qword ptr [rbx]
0x000000000044bab4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047b289 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004840ab : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000484305 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048122d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000478db2 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000478d84 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000468199 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000048a005 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046f813 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048c5b8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046e849 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487ecb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004830a0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000048978b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000410e91 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004039c6 : or byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, rax ; call 0x400441
0x00000000004840b2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044ad2b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000004421d8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000420518 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d40a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044a4fa : or byte ptr [rcx - 0x77], cl ; retf
0x000000000044a4c6 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041ca46 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004143fa : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a919e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047b800 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047b750 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000045426b : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x00000000004545f7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044f977 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000040ee72 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004754b0 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048800b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000403ef4 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042db2b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041ab16 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000482d03 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x00000000004011c1 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004715b3 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x0000000000493c00 : or byte ptr [rsi - 0x70cf0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000418e86 : or ch, byte ptr [rdi] ; sub al, byte ptr [rax] ; ret
0x0000000000418dcb : or ch, byte ptr [rdx] ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000494064 : or cl, 0xf9 ; call rax
0x0000000000457781 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000410784 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000423682 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d17e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000004868dd : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000046d0fb : or cl, ch ; jmp rsp
0x000000000047b225 : or cl, ch ; ret
0x00000000004135f6 : or cl, ch ; retf
0x000000000047f389 : or cl, ch ; retf 0xfffd
0x00000000004a8b82 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000435103 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f155 : or dh, bl ; ret
0x00000000004a89aa : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000044cacc : or dh, dh ; ret 0x8902
0x000000000041a667 : or dh, dh ; ret 0xf02
0x000000000049436d : or dl, bh ; call qword ptr [rdx + 0x12fffa07]
0x0000000000494369 : or dl, bh ; call qword ptr [rdx]
0x00000000004944e9 : or dl, bh ; call rax
0x00000000004944a9 : or dl, bh ; jmp rax
0x000000000042027a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d10a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040d9db : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000428947 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a37e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000044099e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047249b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488710 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a417 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f32f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a355 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004118c7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044a16d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000429358 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045e695 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401f03 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a3237 : or dword ptr [rax], ecx ; retf
0x00000000004828c9 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a82f3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042d2c6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412a80 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000480ab8 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000046ef52 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046c720 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a8b4e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000424087 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000418e5a : or dword ptr [rdx], ebp ; add bl, dh ; ret
0x000000000047f946 : or dword ptr [rip + 0x23a89b], 1 ; pop rbx ; ret
0x00000000004b3a08 : or eax, 0x10a0303 ; ret
0x00000000004b3a60 : or eax, 0x1370303 ; ret
0x0000000000494151 : or eax, 0x1442fffa ; cli ; call rdx
0x00000000004940d1 : or eax, 0x1456fffa ; cli ; jmp rsi
0x00000000004446c1 : or eax, 0x1c478d48 ; ret
0x00000000004b39f8 : or eax, 0x34b0303 ; ret
0x00000000004b3a2c : or eax, 0x35b0303 ; ret
0x000000000046ed72 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e5da : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a48a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043ffb2 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x0000000000429f67 : or eax, 0x83480000 ; ret 0x4910
0x000000000043d8e1 : or eax, 0x83480000 ; ret 0xe910
0x0000000000429f95 : or eax, 0x83480000 ; ret 0xeb10
0x000000000044d21b : or eax, 0x890026ec ; ret 0xe083
0x0000000000427888 : or eax, 0x894d0000 ; retf
0x0000000000490bb2 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000047f783 : or eax, 0x8d48fff8 ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000474132 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004a69a1 : or eax, 0xcad7947e ; jmp 0x4a694d
0x000000000049428d : or eax, 0xda0fffa ; cli ; call qword ptr [rax]
0x000000000049ea59 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049ea65 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a8b33 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000453eb5 : or eax, 0xea810000 ; ret 0
0x0000000000493a99 : or eax, 0xed0fff9 ; stc ; call qword ptr [rax]
0x00000000004a87d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000434fb3 : or eax, 0xf7f0ff3 ; ret
0x000000000044919d : or eax, 0xffffffff ; ret
0x000000000042bbe9 : or eax, 1 ; ret
0x000000000042a147 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043da81 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a175 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a211 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000427a08 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004acbd8 : or eax, dword ptr [rdx] ; jae 0x4acbea ; ret
0x00000000004b4d3a : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000417fb4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000418ce6 : or ebp, dword ptr [rdx] ; add bl, dh ; ret
0x000000000044fb97 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000041259d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000435173 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000414426 : or ebx, esi ; ret
0x0000000000422eff : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000413317 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000423e3c : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000490c2f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004825a3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x00000000004942d5 : or edi, edx ; call rax
0x0000000000494355 : or edi, edx ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000044a1c9 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000494365 : or edx, edi ; call qword ptr [rdx + 0x12fffa08]
0x0000000000494361 : or edx, edi ; call qword ptr [rdx]
0x00000000004944e1 : or edx, edi ; call rax
0x00000000004944a1 : or edx, edi ; jmp rax
0x0000000000435093 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045ac04 : or esi, ebx ; ret
0x0000000000412a81 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000048b5b3 : or esp, dword ptr [rbx] ; add byte ptr [rax], cl ; ret
0x000000000044b232 : or esp, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004ac3e2 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044a1c8 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000004351e2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435172 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000418ce5 : or r13d, dword ptr [r10] ; add bl, dh ; ret
0x0000000000435102 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435092 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b4d39 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047f388 : or r9b, bpl ; retf 0xfffd
0x0000000000457780 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b3a5f : or rax, 0x1370303 ; ret
0x00000000004b39f7 : or rax, 0x34b0303 ; ret
0x00000000004b3a2b : or rax, 0x35b0303 ; ret
0x000000000046ed71 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e5d9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044919c : or rax, 0xffffffffffffffff ; ret
0x000000000042a1e7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004acbd7 : or rax, qword ptr [rdx] ; jae 0x4acbeb ; ret
0x00000000004ac3e1 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x00000000004243b6 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424276 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048d855 : out 0x41, eax ; call rdi
0x0000000000486419 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470a3d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422a68 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004a83c0 : out 0x78, al ; jnp 0x4a8422 ; retf
0x00000000004896bd : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x0000000000489791 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x000000000048986d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489677 : out 0x89, al ; out dx, eax ; call rax
0x0000000000493c80 : out 0x95, al ; stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004a6951 : out 0xb3, al ; retf 0xe80
0x00000000004a7680 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004724ce : out 0xdf, al ; clc ; dec dword ptr [rax + 1] ; ret
0x00000000004724cc : out 0xe8, al ; out 0xdf, al ; clc ; dec dword ptr [rax + 1] ; ret
0x0000000000418c10 : out 0xe8, eax ; sbb bh, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004056aa : out 0xeb, eax ; retf 0x8b49
0x000000000043497a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349fa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a93a8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000494551 : out 0xf9, al ; jmp rax
0x0000000000493f2d : out 0xf9, eax ; jmp qword ptr [rax]
0x0000000000494515 : out 0xf9, eax ; jmp rax
0x00000000004922d4 : out 0xfe, al ; idiv bh ; fdivr st(6) ; idiv bh ; retf 0xf6fe
0x0000000000461892 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000456b5e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a87d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042409e : out dx, al ; jns 0x4240a8 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000044956d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044949d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042f17a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000423172 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044a168 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000434d8a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f1de : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a8b32 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a83bf : out dx, al ; out 0x78, al ; jnp 0x4a8423 ; retf
0x0000000000421b23 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000041fb36 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000417579 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004175d1 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000421694 : out dx, eax ; call 0x41d8d3
0x0000000000403a8c : out dx, eax ; call 0x41fd13
0x00000000004896bf : out dx, eax ; call qword ptr [r14]
0x0000000000489793 : out dx, eax ; call qword ptr [rax]
0x000000000048986f : out dx, eax ; call qword ptr [rcx]
0x0000000000457e4d : out dx, eax ; call r12
0x000000000048e83d : out dx, eax ; call r14
0x00000000004224f7 : out dx, eax ; call rax
0x0000000000473d92 : out dx, eax ; call rbx
0x00000000004a9425 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000413ded : out dx, eax ; jno 0x413e21 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000044a16b : out dx, eax ; mov eax, 9 ; syscall
0x000000000041213d : out dx, eax ; mov eax, r9d ; syscall
0x000000000042efaa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f0a6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042eff2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000473ee3 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040df6a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045949e : out dx, eax ; mov rsi, r12 ; call 0x4056e6
0x0000000000434e0a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f2dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c313 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c2eb
0x000000000042c391 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c369
0x000000000042c823 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7fb
0x000000000042c8a1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c879
0x000000000042bf13 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bf28 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bf3d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004463f3 : out dx, eax ; ret 0xf66
0x00000000004463d6 : out dx, eax ; retf 0x4466
0x00000000004a8afb : out dx, eax ; retf 0xab0d
0x000000000042449a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042d42c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d415 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d3fe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042beba : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494569 : out dx, eax ; stc ; jmp rax
0x000000000048a7b7 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d1ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044481e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a8f83 : outsb dx, byte ptr [rsi] ; ja 0x4a8f0c ; ret 0x48f
0x000000000047d3d0 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004671d1 : outsb dx, byte ptr [rsi] ; ret 3
0x00000000004a79b2 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a6cc4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a82f8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000418df2 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000424648 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438b6e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042f732 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000042f932 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042d22d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d2cd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042cdf2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042ce72 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000472fba : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d232 : outsd dx, dword ptr [rsi] ; ret
0x000000000046309d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000419fba : outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000465e1d : outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x00000000004a7686 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004199f2 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042f8e7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004630c6 : outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x000000000042d2d2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465df9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000047300a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042f7b2 : outsd dx, dword ptr [rsi] ; retf
0x000000000043cb99 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042f9b2 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042c81a : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042c30a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000463064 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465dbf : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004a7685 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000429e22 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004744c4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000004744af : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000429e21 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a8a85 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8a86 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447ab6 : pextrw edi, mm0, 0x77 ; ret
0x000000000042afe2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b049 ; xor eax, eax ; ret
0x000000000044b9e5 : pop r10 ; ret
0x00000000004a8f0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044dda0 : pop r12 ; jmp 0x45a894
0x000000000044a301 : pop r12 ; jmp rax
0x000000000044a2e6 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fb39 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042205c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000420d06 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040256e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040068f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f809 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041009e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da69 : pop r12 ; pop r13 ; ret
0x0000000000405d74 : pop r12 ; ret
0x000000000041fb3b : pop r13 ; pop r14 ; jmp rax
0x000000000042205e : pop r13 ; pop r14 ; jmp rcx
0x0000000000420d08 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402570 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400691 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f80b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100a0 : pop r13 ; pop r14 ; ret
0x000000000040da6b : pop r13 ; ret
0x000000000041fb3d : pop r14 ; jmp rax
0x0000000000422060 : pop r14 ; jmp rcx
0x0000000000420d0a : pop r14 ; pop r15 ; jmp rax
0x0000000000402572 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400693 : pop r14 ; pop r15 ; ret
0x000000000040f80d : pop r14 ; pop rbp ; ret
0x00000000004100a2 : pop r14 ; ret
0x0000000000420d0c : pop r15 ; jmp rax
0x0000000000402574 : pop r15 ; pop rbp ; ret
0x0000000000400695 : pop r15 ; ret
0x000000000041e2f4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000041bf24 : pop rax ; fldcw word ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000045ea59 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045d98d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000495af0 : pop rax ; imul edi, ebx, -1 ; xor byte ptr [rbx - 5], ch ; call qword ptr [rax]
0x000000000048176c : pop rax ; jmp qword ptr [rax]
0x0000000000493d10 : pop rax ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000491dc2 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481826 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000415254 : pop rax ; ret
0x00000000004a8e63 : pop rax ; retf
0x000000000040fdaf : pop rax ; retf 0x2a
0x0000000000495374 : pop rax ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000048ec61 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000456199 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x456211 ; mov rdx, rax ; jmp 0x456168
0x0000000000460d24 : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a8905 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000416320 : pop rbp ; jmp rax
0x00000000004752f8 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000486833 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a9b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004a7260 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048870f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044dd9f : pop rbp ; pop r12 ; jmp 0x45a895
0x000000000044a300 : pop rbp ; pop r12 ; jmp rax
0x000000000044a2e5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fb38 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042205b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000420d05 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040068e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041009d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da68 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405d73 : pop rbp ; pop r12 ; ret
0x000000000041fb3c : pop rbp ; pop r14 ; jmp rax
0x000000000042205f : pop rbp ; pop r14 ; jmp rcx
0x0000000000420d09 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402571 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400692 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f80c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004100a1 : pop rbp ; pop r14 ; ret
0x00000000004840b8 : pop rbp ; pop rbx ; ret
0x0000000000400aa8 : pop rbp ; ret
0x0000000000484d21 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004b0ee9 : pop rbx ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4b0eef ; call qword ptr [rdx]
0x00000000004b0f2d : pop rbx ; add byte ptr [rax], al ; std ; jmp qword ptr [rdi]
0x000000000048c1ad : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a6258 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000460a72 : pop rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000447e06 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a6256 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416264 : pop rbx ; jmp rax
0x000000000047f967 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000447e51 : pop rbx ; mov eax, eax ; ret
0x0000000000465bbd : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000416da9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041a7c3 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f808 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004577dc : pop rbx ; pop r12 ; ret
0x000000000048a839 : pop rbx ; pop r14 ; ret
0x000000000041631f : pop rbx ; pop rbp ; jmp rax
0x000000000044dd9e : pop rbx ; pop rbp ; pop r12 ; jmp 0x45a896
0x0000000000470a41 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a2e4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fb37 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042205a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004100d4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da67 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405d72 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401b66 : pop rbx ; pop rbp ; ret
0x0000000000400d58 : pop rbx ; ret
0x00000000004a9540 : pop rbx ; ret 0x6f9
0x00000000004a6a1d : pop rbx ; retf
0x000000000044dce0 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405d8e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000416d72 : pop rbx ; xor edx, edx ; jmp rax
0x0000000000429bf7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a2d7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000448f64 : pop rcx ; ret 4
0x0000000000493b75 : pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x000000000042db28 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043f96d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042f549 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f359 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a87fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004960bc : pop rdi ; jae 0x4960bd ; jmp qword ptr [rdi]
0x0000000000420d0d : pop rdi ; jmp rax
0x00000000004a77c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044afd2 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044a4f9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044a4c5 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f179 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042efa9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f0a5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042eff1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000402575 : pop rdi ; pop rbp ; ret
0x0000000000400696 : pop rdi ; ret
0x000000000046f75d : pop rdi ; ret 0xfffd
0x000000000041f31d : pop rdi ; retf 0x29
0x000000000042a7d6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004a83e1 : pop rdx ; je 0x4a83ab ; ret 0xacfc
0x00000000004a84f3 : pop rdx ; leave ; retf
0x00000000004a93a7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044b9e4 : pop rdx ; pop r10 ; ret
0x0000000000481827 : pop rdx ; pop rbx ; ret
0x000000000044ba09 : pop rdx ; pop rsi ; ret
0x0000000000449475 : pop rdx ; ret
0x00000000004a83c3 : pop rdx ; retf
0x0000000000493b79 : pop rdx ; stc ; call qword ptr [rax]
0x00000000004b4d51 : pop rdx ; std ; call qword ptr [rdx]
0x00000000004a8f10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042c314 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c2ea
0x000000000042c392 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c368
0x000000000042c824 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c7fa
0x000000000042c8a2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c878
0x000000000043f86e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b1275 : pop rsi ; add byte ptr [rax], al ; clc ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1261 : pop rsi ; add byte ptr [rax], al ; in al, dx ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b124d : pop rsi ; add byte ptr [rax], al ; loopne 0x4b11ed ; cli ; call qword ptr [rcx]
0x00000000004b11bd : pop rsi ; add byte ptr [rax], al ; mov al, 0x90 ; cli ; call qword ptr [rdx]
0x0000000000420006 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000460cc8 : pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000457f76 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000041fb3e : pop rsi ; jmp rax
0x0000000000422061 : pop rsi ; jmp rcx
0x000000000044afa2 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000420d0b : pop rsi ; pop r15 ; jmp rax
0x0000000000402573 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400694 : pop rsi ; pop r15 ; ret
0x000000000040f80e : pop rsi ; pop rbp ; ret
0x00000000004100a3 : pop rsi ; ret
0x000000000043d400 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aad4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043e100 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041c5fb : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000460e21 : pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448e60 : pop rsp ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044dda1 : pop rsp ; jmp 0x45a893
0x000000000044a302 : pop rsp ; jmp rax
0x000000000044a2e7 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041fb3a : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x000000000042205d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000420d07 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040256f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400690 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f80a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041009f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040da6a : pop rsp ; pop r13 ; ret
0x0000000000401d13 : pop rsp ; ret
0x0000000000401dd6 : pop rsp ; retf
0x000000000048258a : pop rsp ; retf 0x4df0
0x00000000004a8567 : pop rsp ; sbb ebp, ebx ; retf
0x000000000046fb2c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000040f7b4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046a72d : popfq ; call 0xffffffffc3caa737
0x000000000046a46f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a84ec : popfq ; jrcxz 0x4a84b1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000400d8b : popfq ; mov al, 0x2b ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x000000000048c37e : popfq ; ret 0xf45
0x000000000040946f : popfq ; retf
0x00000000004a92a2 : popfq ; retf 0xde4f
0x0000000000493e99 : popfq ; stc ; call rax
0x0000000000434ed2 : psllq mm1, qword ptr [r15] ; jg 0x434eed ; ret
0x00000000004379f2 : psllq mm1, qword ptr [r15] ; jg 0x437a0d ; ret
0x0000000000434ed3 : psllq mm1, qword ptr [rdi] ; jg 0x434eec ; ret
0x00000000004379f3 : psllq mm1, qword ptr [rdi] ; jg 0x437a0c ; ret
0x0000000000443ee6 : psllq mm1, qword ptr [rdi] ; jg 0x443efa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000443ee5 : psllq mm1, qword ptr [rdi] ; jg 0x443efb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000443f47 : psllq mm1, qword ptr [rdi] ; jg 0x443f5c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004940fd : psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004035b4 : push -0x17000001 ; retf 0xffbf
0x00000000004a72c4 : push -0x30 ; retf 0xe72e
0x00000000004a694e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000046c3b2 : push -0x52 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a8af5 : push -0x57d3205 ; call 0xffffffffab5855f5
0x00000000004a6b01 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000045de82 : push -0x7c000003 ; ret
0x0000000000444804 : push -0x9ffffff ; ret 0x7501
0x00000000004ac7bd : push -0xa ; call qword ptr [rax]
0x00000000004ad7e4 : push 0x18000024 ; mov dh, 0xf6 ; call qword ptr [rsi]
0x00000000004b00e4 : push 0x1800004d ; ret 0xfff9
0x00000000004a82f5 : push 0x1b6e41b5 ; std ; retf
0x0000000000422f7f : push 0x1ba0029 ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000494990 : push 0x29 ; cli ; call qword ptr [rax]
0x0000000000412504 : push 0x2a ; add byte ptr [rax], al ; je 0x412513 ; ret
0x0000000000493ed0 : push 0x30fff9da ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000041186d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000488104 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479735 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045827c : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004b26e4 : push 0x68000073 ; std ; sti ; jmp qword ptr [rbx]
0x0000000000493ba5 : push 0x68f0fff9 ; stc ; jmp rax
0x0000000000493ba9 : push 0x69e0fff9 ; stc ; call rax
0x00000000004a8f82 : push 0x6e ; ja 0x4a8f0d ; ret 0x48f
0x00000000004173b5 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000415c97 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x0000000000416fda : push 0x75c08548 ; ret
0x00000000004a8862 : push 0xfd4cbe ; retf 0xf64
0x00000000004949ff : push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x0000000000493cff : push qword ptr [rax + 0x40fff995] ; xchg eax, esi ; stc ; jmp rax
0x00000000004944cb : push qword ptr [rax + 0x40fffa03] ; add edi, edx ; jmp rax
0x00000000004940a3 : push qword ptr [rax + 0x40fffa12] ; adc bh, dl ; call rax
0x00000000004947b3 : push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x000000000049459b : push qword ptr [rax + 0x40fffa39] ; cmp edx, edi ; call rax
0x0000000000493b63 : push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000494497 : push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000493acb : push qword ptr [rax + 0xa] ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000493ff3 : push qword ptr [rax - 0x26] ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x00000000004a362b : push qword ptr [rax - 0x2f000350] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x0000000000494c5b : push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x0000000000494c03 : push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000494acb : push qword ptr [rax - 0x3f0005bb] ; cli ; call rax
0x0000000000493dcf : push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004a365f : push qword ptr [rax - 0x50] ; cld ; call rax
0x0000000000494303 : push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x000000000049405f : push qword ptr [rax] ; enter -7, -0x80 ; leave ; stc ; call rax
0x0000000000493ed3 : push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048dd1d : push qword ptr [rax] ; jne 0x48dd50 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048eb7d : push qword ptr [rax] ; jne 0x48ebb0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000493e37 : push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000493dbb : push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000493dd3 : push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000493def : push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000493d4f : push qword ptr [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000493b73 : push qword ptr [rax] ; pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000493b97 : push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x0000000000494bb3 : push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x0000000000446188 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a398 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a370 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044afa0 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044afd0 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042bb99 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000471588 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000416ddd : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004715ae : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000049443f : push qword ptr [rbp + rax - 6] ; jmp rsp
0x0000000000417246 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f01b : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417610 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004610a3 : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d349
0x000000000044918c : push qword ptr [rbx + 1] ; ret
0x0000000000494217 : push qword ptr [rbx + rdx + 0x1344fffa] ; cli ; call rsp
0x00000000004924db : push qword ptr [rbx + rsi*4 - 9] ; call rsi
0x00000000004924d7 : push qword ptr [rbx + rsi*4 - 9] ; push qword ptr [rbx + rsi*4 - 9] ; call rsi
0x00000000004a49eb : push qword ptr [rbx] ; xchg ebp, edi ; inc eax ; jbe 0x4a49f8 ; call qword ptr [rax]
0x00000000004923c7 : push qword ptr [rcx + rsi*4 - 9] ; call rdi
0x000000000045e804 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000479e1f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x00000000004924eb : push qword ptr [rcx] ; mov bl, 0xf7 ; push rbp ; mov dl, 0xf7 ; call rsi
0x00000000004153bf : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000454c33 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045908d : push qword ptr [rcx] ; shr cl, cl ; retf
0x0000000000493c47 : push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000448c5b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449816 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000449546 : push qword ptr [rdi + 0x57] ; ret
0x0000000000449473 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045ac02 : push qword ptr [rdi + 0xb] ; ret
0x000000000044921a : push qword ptr [rdi + 3] ; ret
0x0000000000449509 : push qword ptr [rdi + 4] ; ret
0x0000000000449268 : push qword ptr [rdi + 5] ; ret
0x000000000047527e : push qword ptr [rdi + 7] ; ret
0x0000000000449fe5 : push qword ptr [rdi + 8] ; ret
0x00000000004495dc : push qword ptr [rdi + 9] ; ret
0x0000000000475134 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000494387 : push qword ptr [rdx + 4] ; cli ; jmp rdx
0x0000000000494947 : push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004940eb : push qword ptr [rsi + 0x46fffa11] ; adc edx, edi ; call rsi
0x00000000004945e3 : push qword ptr [rsi + 0x46fffa38] ; cmp dl, bh ; call rsi
0x000000000047804a : push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000493c83 : push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x0000000000411046 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000416212 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a69ac : push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004942a4 : push rax ; adc bh, dl ; jmp rax
0x000000000047068a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000417fc1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c04d : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000493aa4 : push rax ; adc ecx, edi ; call qword ptr [rax - 0x2f0006ee]
0x0000000000454aef : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004b3a18 : push rax ; add byte ptr [rax], al ; add ah, dl ; ret
0x0000000000416213 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042353c : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b0445 : push rax ; add byte ptr [rax], al ; fild word ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x0000000000400ea0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000450e1f : push rax ; call 0x44d073
0x00000000004610a9 : push rax ; call 0x45d343
0x000000000044e488 : push rax ; call rbx
0x0000000000494c8f : push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494ae1 : push rax ; cli ; call qword ptr [rax]
0x0000000000494adb : push rax ; cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x00000000004701b4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x00000000004af0cc : push rax ; cmp eax, 0xda600000 ; clc ; call qword ptr [rax]
0x000000000049479c : push rax ; cmp edx, edi ; jmp rax
0x0000000000494c67 : push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494bd3 : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000449ebc : push rax ; jo 0x449ec2 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471bd9 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a6a1a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000493d53 : push rax ; mov bl, 0xf9 ; call rax
0x0000000000493d37 : push rax ; mov ch, 0xf9 ; call rax
0x0000000000493db8 : push rax ; mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000493ddb : push rax ; mov dh, 0xf9 ; call rax
0x0000000000493d30 : push rax ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000493df3 : push rax ; mov dl, 0xf9 ; call rax
0x0000000000450731 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000493e20 : push rax ; mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000493d88 : push rax ; mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000493a94 : push rax ; or al, 0xf9 ; call qword ptr [rax - 0x2f0006f3]
0x0000000000494493 : push rax ; or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000485551 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485569
0x0000000000418d42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a06a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044acbd : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041ca45 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044cacb : push rax ; or dh, dh ; ret 0x8902
0x000000000041d782 : push rax ; or dh, dh ; ret 0xf02
0x00000000004944e8 : push rax ; or dl, bh ; call rax
0x00000000004942d4 : push rax ; or edi, edx ; call rax
0x00000000004944e0 : push rax ; or edx, edi ; call rax
0x0000000000481fde : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004881b5 : push rax ; pop rbx ; ret
0x0000000000493ba7 : push rax ; push 0x69e0fff9 ; stc ; call rax
0x0000000000478049 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x000000000040380b : push rax ; push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000450733 : push rax ; push rsp ; ret
0x0000000000494bcc : push rax ; pushfq ; cli ; jmp rax
0x00000000004a92c0 : push rax ; retf
0x000000000041b3a4 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000417fb6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004716c9 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000494a08 : push rax ; sub bh, dl ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x00000000004949fb : push rax ; sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x00000000004a69ad : push rax ; xor byte ptr [rcx], ah ; retf
0x0000000000489c3a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048c6e2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004001be : push rbp ; add byte ptr [rdx - 9], bl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000047f788 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004696d2 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004924ef : push rbp ; mov dl, 0xf7 ; call rsi
0x000000000048122c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000460cc7 : push rbp ; pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000047505d : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004b567e : push rbp ; ret
0x0000000000477f97 : push rbp ; ret 2
0x00000000004138df : push rbp ; retf
0x00000000004786b0 : push rbp ; ror byte ptr [rcx - 0x73], 0x7d ; sub byte ptr [rcx], dh ; imul al ; retf
0x0000000000487656 : push rbp ; test al, 0xe8 ; retf
0x00000000004105f6 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400fef : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047f5ff : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004848d7 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412a58 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000047d403 : push rbx ; ja 0x47d411 ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000447375 : push rbx ; jb 0x447385 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004715c2 : push rbx ; je 0x471626 ; pop rbp ; pop r12 ; ret
0x000000000047164e : push rbx ; je 0x4716b2 ; pop rbp ; pop r12 ; ret
0x000000000047505e : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000412a54 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044aecf : push rbx ; ret
0x000000000044fdf1 : push rbx ; retf
0x0000000000493b65 : push rbx ; stc ; jmp rax
0x00000000004a83dc : push rbx ; xchg eax, edx ; jae 0x4a83bb ; push rsi ; pop rdx ; je 0x4a83b0 ; ret 0xacfc
0x000000000041e662 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041a99b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041ad17 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000044b36b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7665 : push rcx ; call qword ptr [rsi]
0x000000000045e2f6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000043832d : push rcx ; jl 0x43837e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438494 : push rcx ; jl 0x4384e5 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000478db1 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000478d83 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000041535b : push rcx ; ret 0xffff
0x00000000004194ad : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000493c2c : push rcx ; xchg eax, ebx ; stc ; call rcx
0x0000000000493c24 : push rcx ; xchg eax, edx ; stc ; call rcx
0x0000000000493c34 : push rcx ; xchg eax, esp ; stc ; jmp rcx
0x0000000000403f1e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044a758 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000403f0e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000044442a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435039 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000477cf4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004444dc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045d9cf : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042ee38 : push rdi ; clc ; ret
0x000000000042efb0 : push rdi ; cld ; ret
0x000000000042fad7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434919 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046f9e5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000434899 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004346ea : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000416124 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043477a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000403efe : push rdi ; or al, 0xf ; retf 0xd289
0x00000000004840aa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000487eca : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004840b1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000403ef3 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041a666 : push rdi ; or dh, dh ; ret 0xf02
0x00000000004446c0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042d22e : push rdi ; ret
0x000000000042d2ce : push rdi ; ret 0xff3
0x000000000042cdf3 : push rdi ; retf
0x000000000042ce73 : push rdi ; retf 0xcab2
0x0000000000418dd0 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045d9d3 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000403f32 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000042fcd7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f4fa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042f8d7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040380c : push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000472fbb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042afe8 : push rdi ; xor eax, eax ; ret
0x0000000000494178 : push rdx ; adc dl, bh ; jmp rdx
0x00000000004b064d : push rdx ; add byte ptr [rax], al ; nop ; sti ; std ; jmp qword ptr [rdx]
0x0000000000494ae5 : push rdx ; cli ; jmp qword ptr [rax]
0x000000000042442a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000045072d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000493b61 : push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x00000000004940d4 : push rsi ; adc al, 0xfa ; jmp rsi
0x000000000042bf14 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446a19 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446a70 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b09d1 : push rsi ; add byte ptr [rax], al ; fcom qword ptr [rdi] ; cli ; call rcx
0x00000000004b0a65 : push rsi ; add byte ptr [rax], al ; sub byte ptr [rcx], ah ; cli ; call qword ptr [rdi]
0x00000000004352d1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435341 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000443e75 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435261 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000443e13 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042bf29 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004922c1 : push rsi ; call qword ptr [rsi]
0x00000000004922f5 : push rsi ; call rsi
0x000000000042ef62 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f6d1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f305 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f4e5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f6c5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f125 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8f80 : push rsi ; cli ; push 0x6e ; ja 0x4a8f0f ; ret 0x48f
0x0000000000445cc6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045824e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000445cb6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000445c86 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004922f1 : push rsi ; jmp rcx
0x00000000004adfc9 : push rsi ; jmp rsi
0x00000000004a83e0 : push rsi ; pop rdx ; je 0x4a83ac ; ret 0xacfc
0x00000000004940fb : push rsi ; psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004a6326 : push rsi ; ret
0x00000000004095b6 : push rsi ; retf 0xffff
0x0000000000468ef1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000457f7a : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045dde3 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445c96 : push rsi ; sub eax, edx ; ret
0x00000000004a69a8 : push rsi ; xchg eax, ebp ; jge 0x4a698d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000493c7c : push rsi ; xchg eax, ebp ; stc ; jmp rsi
0x000000000042bf3e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004aaefb : push rsp ; adc esi, edi ; call rsp
0x00000000004754e1 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004b0809 : push rsp ; add byte ptr [rax], al ; test byte ptr [rdx + rdi*8], al ; jmp qword ptr [rdx]
0x00000000004aae10 : push rsp ; add dh, bh ; call rsp
0x000000000049443b : push rsp ; add eax, 0x574fffa ; cli ; jmp rsp
0x000000000048220a : push rsp ; and al, 0x10 ; call rdx
0x000000000041c6b8 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cc15 : push rsp ; and al, 8 ; call 0x418eb5
0x0000000000487372 : push rsp ; and eax, dword ptr [rax] ; jne 0x4873a4 ; ret
0x0000000000494738 : push rsp ; cli ; jmp rsp
0x00000000004b09d0 : push rsp ; push rsi ; add byte ptr [rax], al ; fcom qword ptr [rdi] ; cli ; call rcx
0x0000000000450734 : push rsp ; ret
0x0000000000488cac : push rsp ; ret 0x4808
0x0000000000481131 : push rsp ; ret 0xeb30
0x0000000000482685 : push rsp ; retf 0x48f8
0x0000000000403e47 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004a8baa : push rsp ; syscall
0x000000000043d0c0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004621d6 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044af47 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44af58 ; call r12
0x0000000000451dda : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000047992f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041684b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000494bcd : pushfq ; cli ; jmp rax
0x00000000004960cc : pushfq ; jo 0x4960cd ; jmp rbx
0x000000000043ddc0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429f94 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048c3b7 : pushfq ; ret 0xf45
0x0000000000493aac : rcl byte ptr [rbx], 1 ; stc ; call qword ptr [rax]
0x00000000004a8cf1 : rcl byte ptr [rdi], cl ; retf
0x000000000042353b : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000493c30 : rcl dword ptr [rbx - 0x6bae0007], 1 ; stc ; jmp rcx
0x0000000000493c20 : rcl dword ptr [rcx - 0x6dae0007], 1 ; stc ; call rcx
0x0000000000493c4c : rcl dword ptr [rdi - 0x67b10007], 1 ; stc ; jmp rsi
0x0000000000493c28 : rcl dword ptr [rdx - 0x6cae0007], 1 ; stc ; call rcx
0x00000000004a881a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a83df : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a83ad ; ret 0xacfc
0x00000000004a8819 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a83db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a83b1 ; ret 0xacfc
0x0000000000484702 : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x0000000000493abc : rcr byte ptr [rax], 1 ; stc ; call qword ptr [rax]
0x0000000000472da3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405d90 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000465bbf : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004840b7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044f6c2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004143fc : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ec56 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048cfe8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000046819b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000040ff42 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004b4d4c : rcr byte ptr [rcx + 0x5a200000], 1 ; std ; call qword ptr [rdx]
0x00000000004a87fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004b124c : rcr byte ptr [rsi], 1 ; add al, ah ; xchg eax, ebp ; cli ; call qword ptr [rcx]
0x0000000000482369 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a8b51 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000044bcc0 : rcr dword ptr [rdx + 0x15b80004], 0 ; add byte ptr [rax], al ; syscall
0x0000000000446b54 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000446b46 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044787a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041e941 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000400416 : ret
0x00000000004006c7 : ret 0
0x000000000049ee60 : ret 0x10
0x000000000047b21a : ret 0x101
0x000000000048408c : ret 0x114d
0x0000000000457784 : ret 0x1176
0x000000000047f78c : ret 0x1272
0x000000000047c323 : ret 0x13e9
0x000000000048a851 : ret 0x145
0x0000000000483536 : ret 0x1474
0x0000000000478db8 : ret 0x1475
0x0000000000475591 : ret 0x1477
0x0000000000445c28 : ret 0x148
0x0000000000404784 : ret 0x149
0x00000000004386ef : ret 0x14d
0x000000000046be41 : ret 0x1674
0x000000000044908e : ret 0x16e9
0x0000000000426e1a : ret 0x17
0x000000000042b4c6 : ret 0x1776
0x000000000040aa72 : ret 0x18
0x000000000043862c : ret 0x180f
0x000000000042b055 : ret 0x1876
0x000000000040744a : ret 0x188
0x000000000045777b : ret 0x1a72
0x00000000004a8d5a : ret 0x1ad4
0x0000000000407c32 : ret 0x1b
0x00000000004a74ed : ret 0x1b49
0x000000000048e91f : ret 0x1be8
0x00000000004242ea : ret 0x1c6
0x000000000045c8f9 : ret 0x1ce9
0x00000000004a0b30 : ret 0x1d4
0x00000000004a12c8 : ret 0x1d5
0x0000000000400bb1 : ret 0x1d89
0x0000000000465e6a : ret 0x1e4
0x000000000040eb12 : ret 0x1f0f
0x000000000041e666 : ret 0x1f77
0x0000000000459b6d : ret 0x1fe9
0x000000000045a7c7 : ret 0x200
0x000000000047793b : ret 0x2041
0x0000000000449b4c : ret 0x2044
0x0000000000461897 : ret 0x20be
0x000000000048a7bb : ret 0x2148
0x00000000004134cd : ret 0x214c
0x0000000000412a5c : ret 0x2175
0x000000000047e528 : ret 0x2275
0x0000000000491152 : ret 0x2286
0x0000000000440998 : ret 0x2288
0x00000000004243fa : ret 0x22a
0x000000000042d432 : ret 0x2373
0x0000000000479db1 : ret 0x23f1
0x000000000049fb38 : ret 0x24
0x0000000000415c0d : ret 0x2501
0x0000000000466f44 : ret 0x2504
0x0000000000465d02 : ret 0x256c
0x0000000000423313 : ret 0x2575
0x000000000048c251 : ret 0x25e9
0x000000000044c2a6 : ret 0x26
0x0000000000473496 : ret 0x2774
0x000000000042ec06 : ret 0x280f
0x000000000042b045 : ret 0x2876
0x000000000047e5a7 : ret 0x28f5
0x000000000041d5af : ret 0x29
0x000000000046309e : ret 0x290f
0x0000000000411217 : ret 0x2948
0x0000000000465fda : ret 0x2949
0x000000000040f020 : ret 0x294c
0x0000000000412d3d : ret 0x294d
0x000000000041ebba : ret 0x29ac
0x000000000041a545 : ret 0x2a22
0x0000000000420dfa : ret 0x2ab
0x00000000004105fa : ret 0x2b48
0x0000000000422a3b : ret 0x2b74
0x000000000041e982 : ret 0x2b75
0x0000000000447cf2 : ret 0x2b77
0x00000000004009b5 : ret 0x2b8
0x000000000048c23f : ret 0x2be9
0x000000000041f1ce : ret 0x2c75
0x000000000041dffa : ret 0x2d9
0x000000000046edb5 : ret 0x2e66
0x000000000044bdce : ret 0x2f75
0x0000000000467b05 : ret 0x30be
0x00000000004a0028 : ret 0x33
0x00000000004525e4 : ret 0x349
0x000000000048a5f0 : ret 0x3575
0x000000000047aeea : ret 0x3774
0x000000000042b4a6 : ret 0x3776
0x00000000004a863a : ret 0x3827
0x000000000046fc3e : ret 0x3873
0x000000000042b035 : ret 0x3876
0x00000000004166bb : ret 0x389
0x00000000004a6cc6 : ret 0x38ae
0x000000000048df02 : ret 0x38e8
0x00000000004891c8 : ret 0x3901
0x0000000000480cad : ret 0x3934
0x000000000046d3ff : ret 0x3941
0x0000000000410ea1 : ret 0x3948
0x0000000000411c5d : ret 0x3949
0x000000000041eaac : ret 0x394c
0x0000000000468aad : ret 0x394d
0x00000000004462a2 : ret 0x3a01
0x000000000042d41b : ret 0x3a73
0x0000000000487d13 : ret 0x3a83
0x0000000000446cc1 : ret 0x3b48
0x000000000044982f : ret 0x3b8
0x0000000000413cb9 : ret 0x3c75
0x0000000000480c6d : ret 0x3d
0x000000000047ef18 : ret 0x3d73
0x0000000000458716 : ret 0x3d8
0x0000000000420281 : ret 0x3d83
0x000000000041c5df : ret 0x3de9
0x000000000047ad4a : ret 0x3e80
0x000000000046350a : ret 0x3ff
0x0000000000459f7b : ret 0x4002
0x000000000040d1fd : ret 0x4074
0x0000000000473a81 : ret 0x408d
0x000000000044c01a : ret 0x4101
0x0000000000460168 : ret 0x4108
0x000000000046091d : ret 0x4110
0x0000000000481146 : ret 0x4118
0x0000000000480ce7 : ret 0x4134
0x0000000000452d97 : ret 0x415f
0x00000000004507fe : ret 0x41c3
0x0000000000425a9a : ret 0x4266
0x00000000004809f0 : ret 0x42e8
0x0000000000470713 : ret 0x4389
0x000000000045f6ca : ret 0x43c
0x0000000000405d61 : ret 0x4401
0x000000000046835b : ret 0x4404
0x00000000004814c6 : ret 0x4418
0x0000000000419fbb : ret 0x4466
0x000000000041d953 : ret 0x4473
0x00000000004a77c4 : ret 0x474c
0x000000000040e044 : ret 0x4801
0x0000000000411e56 : ret 0x4803
0x0000000000422321 : ret 0x4804
0x0000000000440923 : ret 0x4808
0x0000000000402f26 : ret 0x480a
0x000000000041bff8 : ret 0x4810
0x000000000045852c : ret 0x4811
0x000000000045d867 : ret 0x481e
0x000000000045d887 : ret 0x4820
0x000000000044dfae : ret 0x4830
0x00000000004259a6 : ret 0x4840
0x00000000004405d8 : ret 0x48c3
0x00000000004189d3 : ret 0x48e9
0x00000000004a8f86 : ret 0x48f
0x0000000000405cfc : ret 0x4901
0x000000000045523b : ret 0x4902
0x0000000000419012 : ret 0x4908
0x0000000000429f6c : ret 0x4910
0x000000000045a3c9 : ret 0x4c01
0x000000000041e2fa : ret 0x4c07
0x000000000045d126 : ret 0x4c40
0x0000000000465e1e : ret 0x4ce8
0x000000000041cfb6 : ret 0x4d01
0x000000000045bbe8 : ret 0x4d10
0x000000000040262f : ret 0x4de8
0x00000000004a89e7 : ret 0x4e27
0x000000000040165e : ret 0x4f76
0x000000000044eb3f : ret 0x5089
0x000000000044bc37 : ret 0x508b
0x000000000042d404 : ret 0x5173
0x0000000000449a87 : ret 0x5488
0x00000000004a6c4c : ret 0x5508
0x00000000004717de : ret 0x5590
0x000000000042b486 : ret 0x5776
0x00000000004a8f18 : ret 0x5803
0x00000000004552a1 : ret 0x5841
0x0000000000487685 : ret 0x5876
0x000000000040e653 : ret 0x589
0x00000000004a6920 : ret 0x591c
0x00000000004a7687 : ret 0x5ae4
0x0000000000423fde : ret 0x5ae9
0x0000000000455489 : ret 0x5be9
0x000000000040f35a : ret 0x5d5b
0x00000000004a93b2 : ret 0x62c1
0x000000000047c190 : ret 0x6349
0x0000000000484ea4 : ret 0x637f
0x0000000000458503 : ret 0x6411
0x000000000045b0e1 : ret 0x6601
0x000000000042afc1 : ret 0x6620
0x0000000000423488 : ret 0x66c3
0x000000000047f79e : ret 0x674
0x000000000042b476 : ret 0x6776
0x00000000004a693f : ret 0x67b2
0x0000000000416c65 : ret 0x6874
0x000000000044913a : ret 0x6ae9
0x00000000004a9541 : ret 0x6f9
0x0000000000421957 : ret 0x708
0x000000000045e6da : ret 0x73
0x0000000000416de1 : ret 0x7401
0x00000000004222ea : ret 0x7402
0x000000000047c1fa : ret 0x7403
0x000000000044a1b1 : ret 0x7404
0x00000000004715b2 : ret 0x7408
0x000000000041256d : ret 0x7420
0x0000000000463ff4 : ret 0x7450
0x00000000004809aa : ret 0x7472
0x0000000000444809 : ret 0x7501
0x0000000000444816 : ret 0x7502
0x0000000000444823 : ret 0x7504
0x000000000041e60d : ret 0x7508
0x00000000004447db : ret 0x7510
0x0000000000410372 : ret 0x7520
0x000000000042430e : ret 0x7540
0x00000000004754f0 : ret 0x7577
0x000000000042c2f2 : ret 0x7677
0x0000000000482622 : ret 0x777
0x0000000000483ee6 : ret 0x77f
0x000000000046d9a9 : ret 0x79e8
0x0000000000402d81 : ret 0x7ce9
0x000000000042af61 : ret 0x7e20
0x000000000042b3dc : ret 0x7e40
0x000000000042464c : ret 0x7f10
0x000000000046d608 : ret 0x7f3c
0x0000000000432bce : ret 0x80
0x0000000000425829 : ret 0x8000
0x000000000048dbc2 : ret 0x8001
0x000000000047693e : ret 0x8116
0x000000000045f93b : ret 0x8148
0x000000000048e118 : ret 0x8166
0x000000000041cce0 : ret 0x820f
0x0000000000454ac3 : ret 0x8301
0x000000000047cf17 : ret 0x8303
0x000000000042bec0 : ret 0x830f
0x000000000045d734 : ret 0x8341
0x0000000000402bab : ret 0x8348
0x0000000000446720 : ret 0x8349
0x000000000047ed8f : ret 0x8364
0x0000000000470ef6 : ret 0x840
0x00000000004758e9 : ret 0x8401
0x0000000000411c65 : ret 0x840f
0x0000000000453810 : ret 0x841
0x000000000048ae6e : ret 0x8440
0x0000000000479937 : ret 0x848b
0x000000000046ea59 : ret 0x8502
0x0000000000412df2 : ret 0x850f
0x0000000000457e63 : ret 0x8511
0x000000000040d35a : ret 0x852
0x000000000044a4e2 : ret 0x8545
0x0000000000402b02 : ret 0x8548
0x0000000000476a5c : ret 0x8549
0x000000000042333a : ret 0x854d
0x0000000000405bd1 : ret 0x8575
0x0000000000401392 : ret 0x860f
0x000000000041a99f : ret 0x870f
0x00000000004a625e : ret 0x871e
0x000000000046d60f : ret 0x875
0x000000000042b065 : ret 0x876
0x0000000000402c2c : ret 0x8801
0x0000000000451b0d : ret 0x8804
0x000000000045b132 : ret 0x8841
0x000000000047de7e : ret 0x8844
0x000000000040241a : ret 0x8901
0x000000000044cace : ret 0x8902
0x00000000004120ea : ret 0x8908
0x000000000045d726 : ret 0x8941
0x000000000041f26f : ret 0x8944
0x0000000000403def : ret 0x8948
0x000000000041331a : ret 0x8949
0x0000000000410911 : ret 0x894c
0x000000000048309b : ret 0x894e
0x000000000041724a : ret 0x8a
0x00000000004878b0 : ret 0x8b
0x00000000004503d9 : ret 0x8b01
0x000000000046f0aa : ret 0x8b04
0x0000000000475683 : ret 0x8b05
0x000000000046ef5b : ret 0x8b08
0x00000000004a8a8e : ret 0x8b36
0x000000000041d1c1 : ret 0x8b41
0x000000000046d63b : ret 0x8b44
0x0000000000413743 : ret 0x8b48
0x00000000004110c6 : ret 0x8b49
0x000000000048301e : ret 0x8b4a
0x000000000040d40d : ret 0x8b4c
0x000000000046485d : ret 0x8c0f
0x000000000045d181 : ret 0x8d04
0x000000000048c06f : ret 0x8d0f
0x000000000041c8bc : ret 0x8d44
0x00000000004194b1 : ret 0x8d48
0x0000000000467d3c : ret 0x8d49
0x00000000004823c7 : ret 0x8d4a
0x000000000041d9d4 : ret 0x8d4c
0x000000000045d742 : ret 0x8d89
0x00000000004525db : ret 0x8e0f
0x000000000045d9ea : ret 0x8f0f
0x000000000043fda5 : ret 0x90c3
0x0000000000423a59 : ret 0x90e9
0x00000000004779fe : ret 0x9174
0x000000000048acab : ret 0x9272
0x000000000041acbd : ret 0x948
0x0000000000473058 : ret 0x94c
0x00000000004848d2 : ret 0x950f
0x0000000000448ac0 : ret 0x9572
0x00000000004a78b3 : ret 0x9576
0x000000000046033f : ret 0x958b
0x000000000042227e : ret 0x976
0x000000000047ccc3 : ret 0x9be9
0x0000000000486d95 : ret 0x9eb
0x000000000049e660 : ret 0xa
0x00000000004ae516 : ret 0xa01
0x000000000044a1d8 : ret 0xa076
0x0000000000449004 : ret 0xa0e9
0x00000000004630c7 : ret 0xa3e8
0x000000000048c12e : ret 0xa4e9
0x00000000004a75a3 : ret 0xa514
0x000000000048c22d : ret 0xa5e9
0x000000000044b17d : ret 0xabe
0x000000000040fc06 : ret 0xac20
0x00000000004a7a27 : ret 0xac65
0x00000000004a83e4 : ret 0xacfc
0x000000000045f17f : ret 0xae9
0x000000000042317a : ret 0xaeeb
0x00000000004abbdf : ret 0xb00e
0x000000000041152d : ret 0xb074
0x000000000041ad1b : ret 0xb277
0x0000000000464e2e : ret 0xb2c8
0x000000000045606b : ret 0xb2eb
0x0000000000448ff0 : ret 0xb4e9
0x000000000045d766 : ret 0xb589
0x00000000004238a5 : ret 0xb5e8
0x0000000000402be5 : ret 0xb60f
0x0000000000400ea4 : ret 0xb70f
0x00000000004699a5 : ret 0xb8
0x000000000046b74c : ret 0xb848
0x000000000048df82 : ret 0xb8e8
0x00000000004a78ee : ret 0xb9b9
0x000000000046cf85 : ret 0xb9e9
0x000000000046eb34 : ret 0xba41
0x00000000004229b3 : ret 0xbae9
0x00000000004561a2 : ret 0xbaeb
0x000000000048c6e6 : ret 0xbc80
0x000000000045d752 : ret 0xbd89
0x000000000046479d : ret 0xbde8
0x0000000000480af2 : ret 0xbe0f
0x00000000004a7644 : ret 0xbe57
0x00000000004256e9 : ret 0xc000
0x0000000000403116 : ret 0xc031
0x000000000045854e : ret 0xc083
0x000000000042ae20 : ret 0xc085
0x000000000040e086 : ret 0xc148
0x000000000041ae39 : ret 0xc183
0x00000000004048b8 : ret 0xc189
0x0000000000449e72 : ret 0xc221
0x000000000041f2ab : ret 0xc275
0x0000000000476496 : ret 0xc283
0x000000000042d2d4 : ret 0xc2b2
0x0000000000447d5e : ret 0xc35b
0x000000000045793d : ret 0xc389
0x000000000041f2ad : ret 0xc3f3
0x00000000004a5de2 : ret 0xc4c3
0x00000000004a71f8 : ret 0xc4ff
0x000000000042b441 : ret 0xc540
0x0000000000457a06 : ret 0xc589
0x0000000000462ffc : ret 0xc689
0x000000000047ed6d : ret 0xc74
0x0000000000440ce0 : ret 0xc748
0x0000000000468bf8 : ret 0xc789
0x0000000000480b82 : ret 0xc829
0x00000000004619d2 : ret 0xc839
0x00000000004166ac : ret 0xc883
0x0000000000460417 : ret 0xc985
0x000000000046f043 : ret 0xc9eb
0x00000000004408f1 : ret 0xc9ff
0x00000000004008d1 : ret 0xca21
0x0000000000477f3f : ret 0xcbe9
0x00000000004a6c8a : ret 0xcca7
0x00000000004a8d6d : ret 0xcd11
0x00000000004050c2 : ret 0xce80
0x000000000049ea60 : ret 0xd
0x0000000000420b2e : ret 0xd020
0x000000000040de96 : ret 0xd021
0x0000000000463e7b : ret 0xd120
0x00000000004011c4 : ret 0xd284
0x00000000004574fa : ret 0xd285
0x000000000048e668 : ret 0xd2e8
0x00000000004799c6 : ret 0xd348
0x000000000044f4b7 : ret 0xd5e9
0x0000000000480f3f : ret 0xd75
0x000000000045cb26 : ret 0xd774
0x000000000045a65a : ret 0xd8e8
0x00000000004a8805 : ret 0xd8f
0x000000000040058f : ret 0xda80
0x000000000040fef3 : ret 0xdaf7
0x0000000000453cea : ret 0xdb76
0x00000000004a88e6 : ret 0xdcd9
0x00000000004a7862 : ret 0xde5d
0x00000000004a65f1 : ret 0xde9e
0x00000000004255a9 : ret 0xe000
0x0000000000444799 : ret 0xe074
0x000000000044d220 : ret 0xe083
0x00000000004b4d3c : ret 0xe0a
0x000000000048c2f1 : ret 0xe1e9
0x000000000044d052 : ret 0xe1eb
0x000000000040daa0 : ret 0xe281
0x0000000000400be5 : ret 0xe283
0x0000000000472d68 : ret 0xe575
0x0000000000465480 : ret 0xe57f
0x0000000000465dfa : ret 0xe583
0x0000000000447d52 : ret 0xe680
0x00000000004664df : ret 0xe683
0x00000000004a8a06 : ret 0xe71f
0x0000000000478d8a : ret 0xe75
0x0000000000422a66 : ret 0xe775
0x0000000000465ab3 : ret 0xe7e9
0x000000000042baa5 : ret 0xe883
0x0000000000478906 : ret 0xe8c0
0x0000000000402eba : ret 0xe901
0x0000000000402eff : ret 0xe902
0x0000000000440986 : ret 0xe908
0x000000000043cf26 : ret 0xe910
0x000000000045dfad : ret 0xe920
0x00000000004a6d67 : ret 0xe970
0x0000000000447cea : ret 0xea81
0x000000000040db6d : ret 0xeab8
0x0000000000400bcd : ret 0xeac1
0x000000000047d5c6 : ret 0xeb01
0x000000000046ef73 : ret 0xeb04
0x0000000000429f9a : ret 0xeb10
0x0000000000481132 : ret 0xeb30
0x000000000041104a : ret 0xec
0x00000000004a9518 : ret 0xec2
0x000000000045cab0 : ret 0xed75
0x00000000004809b5 : ret 0xede8
0x00000000004a91ba : ret 0xef32
0x000000000048beb8 : ret 0xef89
0x0000000000475acf : ret 0xefeb
0x0000000000428d8e : ret 0xf
0x0000000000425469 : ret 0xf000
0x00000000004055a5 : ret 0xf01
0x000000000041a669 : ret 0xf02
0x000000000041ca49 : ret 0xf04
0x00000000004117b3 : ret 0xf08
0x000000000041a939 : ret 0xf0f
0x000000000040e39e : ret 0xf10
0x00000000004662fb : ret 0xf20
0x000000000041cbb3 : ret 0xf275
0x00000000004633b6 : ret 0xf3f
0x0000000000466883 : ret 0xf40
0x000000000046f9ed : ret 0xf41
0x000000000048c36c : ret 0xf45
0x0000000000423659 : ret 0xf475
0x0000000000451396 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466869 : ret 0xf50
0x0000000000489336 : ret 0xf608
0x0000000000475145 : ret 0xf631
0x0000000000425a26 : ret 0xf66
0x000000000047aa17 : ret 0xf675
0x000000000046faac : ret 0xf741
0x00000000004057f2 : ret 0xf748
0x000000000048260c : ret 0xf749
0x0000000000425329 : ret 0xf800
0x00000000004a64d0 : ret 0xf869
0x00000000004183e3 : ret 0xf8b
0x00000000004633b1 : ret 0xf8c1
0x0000000000440206 : ret 0xf8c5
0x000000000047c93a : ret 0xf8e8
0x0000000000448094 : ret 0xf8e9
0x0000000000494174 : ret 0xfa10
0x0000000000494858 : ret 0xfa30
0x000000000049466c : ret 0xfa37
0x0000000000454bea : ret 0xface
0x000000000041ef92 : ret 0xfae9
0x0000000000495330 : ret 0xfb3e
0x0000000000449c72 : ret 0xfb67
0x000000000041f57a : ret 0xfbe9
0x00000000004251e9 : ret 0xfc00
0x0000000000424101 : ret 0xfc3
0x0000000000476e6a : ret 0xfd32
0x000000000047109a : ret 0xfd72
0x00000000004250a9 : ret 0xfe00
0x0000000000400d15 : ret 0xfe83
0x000000000042288a : ret 0xfed5
0x0000000000424f69 : ret 0xff00
0x0000000000434741 : ret 0xff2
0x000000000044d1cb : ret 0xff25
0x000000000042bc69 : ret 0xff2d
0x00000000004259ca : ret 0xff3
0x000000000046aaa7 : ret 0xff31
0x000000000041aeea : ret 0xff49
0x0000000000424e29 : ret 0xff80
0x0000000000466081 : ret 0xff83
0x0000000000453c7c : ret 0xff85
0x000000000045d112 : ret 0xffa0
0x000000000042330a : ret 0xffa5
0x000000000040b04a : ret 0xffaf
0x000000000040ad4a : ret 0xffb2
0x000000000044f40a : ret 0xffb3
0x0000000000410bc7 : ret 0xffb8
0x000000000040dbba : ret 0xffc0
0x000000000048598a : ret 0xffc7
0x00000000004030d2 : ret 0xffd3
0x0000000000423018 : ret 0xffdf
0x0000000000424ba9 : ret 0xffe0
0x0000000000461eee : ret 0xffe6
0x0000000000467d19 : ret 0xffe8
0x00000000004490a5 : ret 0xffe9
0x000000000040f081 : ret 0xffef
0x0000000000422a32 : ret 0xfff
0x000000000040d9e2 : ret 0xfff0
0x000000000046a490 : ret 0xfff1
0x00000000004b436d : ret 0xfff4
0x000000000048583d : ret 0xfff7
0x0000000000424929 : ret 0xfff8
0x00000000004b00e9 : ret 0xfff9
0x000000000041c4e8 : ret 0xfffa
0x00000000004047d9 : ret 0xfffb
0x00000000004247e9 : ret 0xfffc
0x0000000000417e65 : ret 0xfffd
0x00000000004219ad : ret 0xfffe
0x000000000041535c : ret 0xffff
0x0000000000403a8f : ret 1
0x000000000042b6db : ret 2
0x000000000040f8a8 : ret 3
0x0000000000409ea8 : ret 4
0x00000000004387d4 : ret 5
0x000000000049e208 : ret 6
0x000000000042a52a : ret 7
0x0000000000409f08 : ret 8
0x000000000044524a : ret 9
0x00000000004001c4 : retf
0x00000000004010b7 : retf 0
0x000000000049efc0 : retf 0x11
0x0000000000487ddd : retf 0x114d
0x0000000000476e60 : retf 0x12b9
0x0000000000455aaf : retf 0x12e9
0x0000000000461e29 : retf 0x147f
0x00000000004726a3 : retf 0x148
0x0000000000432aac : retf 0x14c
0x0000000000426ef2 : retf 0x16
0x0000000000407b42 : retf 0x181
0x0000000000483fbd : retf 0x194d
0x000000000044b922 : retf 0x19b8
0x0000000000407054 : retf 0x1b
0x000000000040ebb1 : retf 0x1be
0x000000000041df68 : retf 0x1be9
0x00000000004a0b68 : retf 0x1d4
0x00000000004a1308 : retf 0x1d5
0x000000000042b390 : retf 0x1f0f
0x00000000004aff8a : retf 0x2000
0x000000000046d281 : retf 0x20be
0x00000000004140e1 : retf 0x2148
0x000000000041acc3 : retf 0x2274
0x000000000047bff8 : retf 0x23
0x0000000000401405 : retf 0x230
0x000000000047cfda : retf 0x23ba
0x000000000046fd2f : retf 0x24
0x0000000000485b6d : retf 0x249
0x000000000044dd71 : retf 0x26
0x000000000045779a : retf 0x2646
0x000000000044cbca : retf 0x26fc
0x000000000044824e : retf 0x273b
0x000000000042da19 : retf 0x280f
0x000000000041f30b : retf 0x29
0x000000000047126a : retf 0x2941
0x0000000000409a4f : retf 0x2948
0x000000000041096e : retf 0x294c
0x0000000000423422 : retf 0x2989
0x000000000040fd1b : retf 0x2a
0x0000000000417b46 : retf 0x2a41
0x0000000000415c3d : retf 0x2a6b
0x000000000041d6d8 : retf 0x2a74
0x000000000040f30b : retf 0x2a7e
0x0000000000410ad2 : retf 0x2a8c
0x00000000004a76dc : retf 0x2a91
0x0000000000479214 : retf 0x2ab
0x000000000040ddee : retf 0x2ada
0x0000000000402e3d : retf 0x2b99
0x000000000045778f : retf 0x2c73
0x0000000000457769 : retf 0x2c76
0x00000000004a6b5a : retf 0x2c90
0x0000000000477022 : retf 0x2cc
0x0000000000477abf : retf 0x2de9
0x000000000044c0b1 : retf 0x2e75
0x000000000048217b : retf 0x2fe8
0x00000000004013c8 : retf 0x31
0x0000000000434336 : retf 0x3148
0x00000000004a8945 : retf 0x3159
0x00000000004a89ad : retf 0x32dd
0x00000000004a0068 : retf 0x33
0x00000000004a7263 : retf 0x33e6
0x00000000004a7791 : retf 0x3617
0x0000000000434312 : retf 0x377
0x000000000041e270 : retf 0x3948
0x0000000000470fd0 : retf 0x3949
0x0000000000418f8a : retf 0x394c
0x000000000046802a : retf 0x3b4
0x000000000041f2fd : retf 0x3d83
0x00000000004a8da6 : retf 0x3d8a
0x000000000045901a : retf 0x3dd
0x00000000004a663b : retf 0x3ec
0x000000000044d225 : retf 0x4102
0x000000000044d371 : retf 0x4110
0x00000000004537ae : retf 0x4180
0x0000000000454bd2 : retf 0x41e
0x0000000000425a7c : retf 0x4266
0x0000000000453513 : retf 0x4280
0x0000000000489d6d : retf 0x42f6
0x0000000000400d92 : retf 0x440
0x000000000043cb9a : retf 0x4466
0x0000000000465256 : retf 0x45e9
0x0000000000453f14 : retf 0x4689
0x00000000004006c2 : retf 0x47a
0x0000000000419045 : retf 0x4801
0x0000000000416cd1 : retf 0x4802
0x000000000040d7ec : retf 0x4805
0x000000000040d857 : retf 0x4806
0x00000000004715b7 : retf 0x4808
0x000000000040d708 : retf 0x4809
0x000000000040d948 : retf 0x480a
0x000000000040d90c : retf 0x480d
0x0000000000410883 : retf 0x4810
0x0000000000410981 : retf 0x4820
0x0000000000482686 : retf 0x48f8
0x000000000041ca53 : retf 0x4901
0x0000000000459603 : retf 0x4a8d
0x000000000041d6aa : retf 0x4b74
0x0000000000416c83 : retf 0x4c01
0x0000000000422bf2 : retf 0x4c89
0x00000000004892c9 : retf 0x4d20
0x00000000004487bf : retf 0x4da
0x0000000000483f88 : retf 0x4de8
0x000000000048258b : retf 0x4df0
0x0000000000483fac : retf 0x4df8
0x000000000041df32 : retf 0x51e9
0x0000000000466346 : retf 0x53c
0x0000000000484eb2 : retf 0x557f
0x000000000048aa26 : retf 0x5774
0x0000000000484ced : retf 0x5d5b
0x0000000000479a55 : retf 0x5f6
0x0000000000457dd2 : retf 0x60e8
0x000000000040e87c : retf 0x6411
0x000000000042db03 : retf 0x6601
0x000000000042dc53 : retf 0x6602
0x000000000042dda3 : retf 0x6603
0x000000000042def3 : retf 0x6604
0x000000000042e043 : retf 0x6605
0x000000000042e193 : retf 0x6606
0x000000000042e2e3 : retf 0x6607
0x000000000042e433 : retf 0x6608
0x000000000042e583 : retf 0x6609
0x000000000042e6d3 : retf 0x660a
0x000000000042e823 : retf 0x660b
0x000000000042e973 : retf 0x660c
0x000000000042eac3 : retf 0x660d
0x000000000042ec13 : retf 0x660e
0x000000000042ed63 : retf 0x660f
0x0000000000434331 : retf 0x676
0x00000000004a8cc5 : retf 0x67ca
0x0000000000475271 : retf 0x6b8
0x00000000004a6cc2 : retf 0x6ee8
0x0000000000422c62 : retf 0x6ff
0x0000000000468f92 : retf 0x72
0x00000000004a8b86 : retf 0x7272
0x000000000041f94f : retf 0x728
0x00000000004a835f : retf 0x76a5
0x0000000000410e83 : retf 0x775
0x00000000004a71e2 : retf 0x79f5
0x000000000044998b : retf 0x8041
0x000000000042b2c3 : retf 0x8148
0x000000000041db82 : retf 0x820f
0x0000000000410530 : retf 0x830f
0x0000000000413891 : retf 0x8310
0x000000000041287d : retf 0x8320
0x0000000000454317 : retf 0x8341
0x0000000000419042 : retf 0x8348
0x0000000000429f3f : retf 0x8349
0x0000000000419520 : retf 0x840f
0x00000000004a7ad0 : retf 0x8481
0x0000000000414296 : retf 0x850f
0x00000000004008d3 : retf 0x8545
0x0000000000440dcb : retf 0x8548
0x000000000042ade9 : retf 0x860f
0x0000000000432afc : retf 0x870f
0x0000000000482824 : retf 0x877
0x0000000000489370 : retf 0x8820
0x00000000004534fd : retf 0x8880
0x0000000000422bf8 : retf 0x8902
0x0000000000401384 : retf 0x8904
0x00000000004118c0 : retf 0x8920
0x000000000044a1ca : retf 0x8940
0x0000000000403ef6 : retf 0x8941
0x0000000000460050 : retf 0x8944
0x0000000000402e33 : retf 0x8948
0x000000000042d539 : retf 0x8949
0x000000000041082c : retf 0x894c
0x000000000045560a : retf 0x8966
0x000000000045355e : retf 0x8980
0x00000000004853a2 : retf 0x8b41
0x000000000040482b : retf 0x8b48
0x00000000004056ac : retf 0x8b49
0x000000000042f939 : retf 0x8b4c
0x000000000041955e : retf 0x8d48
0x000000000042acf9 : retf 0x8d4a
0x0000000000443d1d : retf 0x8d4c
0x000000000041df7b : retf 0x8e9
0x0000000000429e7d : retf 0x9066
0x000000000045a070 : retf 0x9273
0x00000000004a842e : retf 0x93a2
0x000000000041da36 : retf 0x948
0x0000000000478882 : retf 0x98
0x000000000046cabc : retf 0x98e9
0x00000000004a87cb : retf 0x99e0
0x000000000044a1c0 : retf 0x9b9
0x00000000004a8b3a : retf 0x9d7d
0x00000000004a9445 : retf 0xa020
0x00000000004a69a5 : retf 0xa1eb
0x00000000004a8a2b : retf 0xa2fe
0x000000000041cd49 : retf 0xa74
0x00000000004a8afc : retf 0xab0d
0x000000000040e6ad : retf 0xade9
0x00000000004a904e : retf 0xae32
0x00000000004261a2 : retf 0xb
0x000000000041dcd1 : retf 0xb2e9
0x00000000004a7849 : retf 0xb51a
0x000000000042b922 : retf 0xb60f
0x000000000048a902 : retf 0xb801
0x0000000000454324 : retf 0xb941
0x00000000004878a0 : retf 0xba
0x000000000041ca81 : retf 0xba41
0x000000000046ec62 : retf 0xbb41
0x00000000004a8b53 : retf 0xbb9a
0x0000000000485556 : retf 0xbeb
0x00000000004a8b9d : retf 0xbf4b
0x0000000000456478 : retf 0xc031
0x00000000004025b3 : retf 0xc089
0x00000000004a881d : retf 0xc0fe
0x000000000040e03a : retf 0xc148
0x000000000047301e : retf 0xc149
0x000000000046097d : retf 0xc239
0x00000000004588cd : retf 0xc6
0x00000000004651d1 : retf 0xc7
0x0000000000423994 : retf 0xc748
0x00000000004732d3 : retf 0xc985
0x000000000042ce74 : retf 0xcab2
0x00000000004a5dea : retf 0xcccb
0x000000000040a987 : retf 0xd
0x00000000004a7606 : retf 0xd1cb
0x0000000000447e5f : retf 0xd231
0x0000000000414945 : retf 0xd284
0x0000000000450de4 : retf 0xd285
0x0000000000403f01 : retf 0xd289
0x00000000004a8d17 : retf 0xd39
0x0000000000447c56 : retf 0xd975
0x00000000004a92a3 : retf 0xde4f
0x0000000000411e61 : retf 0xdeb
0x00000000004a78d3 : retf 0xdf7f
0x0000000000406fd6 : retf 0xe
0x00000000004a737e : retf 0xe152
0x0000000000447a93 : retf 0xe175
0x000000000048557b : retf 0xe275
0x0000000000454030 : retf 0xe283
0x0000000000478509 : retf 0xe474
0x000000000044792c : retf 0xe475
0x00000000004a795c : retf 0xe496
0x000000000045dcf7 : retf 0xe677
0x00000000004a72c6 : retf 0xe72e
0x0000000000457f32 : retf 0xe8
0x00000000004a6953 : retf 0xe80
0x0000000000477396 : retf 0xe802
0x0000000000465445 : retf 0xe87f
0x000000000040d889 : retf 0xe903
0x0000000000483c7c : retf 0xe972
0x0000000000460e7d : retf 0xe9ff
0x00000000004835cb : retf 0xea72
0x0000000000411d23 : retf 0xea77
0x00000000004a890c : retf 0xea91
0x0000000000487c5b : retf 0xeac0
0x000000000041afd2 : retf 0xeac1
0x00000000004245c1 : retf 0xead3
0x000000000040d842 : retf 0xeb04
0x000000000040d8a1 : retf 0xeb07
0x000000000040d768 : retf 0xeb08
0x000000000040d96f : retf 0xeb0b
0x000000000040d942 : retf 0xeb0c
0x00000000004a6a2d : retf 0xeb83
0x00000000004a9221 : retf 0xebbf
0x0000000000416bcb : retf 0xee75
0x000000000047de87 : retf 0xee7c
0x0000000000432d3c : retf 0xf01
0x0000000000432ebc : retf 0xf02
0x000000000043303c : retf 0xf03
0x00000000004331bc : retf 0xf04
0x000000000043333c : retf 0xf05
0x00000000004334bc : retf 0xf06
0x000000000043363c : retf 0xf07
0x00000000004337bc : retf 0xf08
0x000000000043393c : retf 0xf09
0x0000000000433abc : retf 0xf0a
0x0000000000433c3c : retf 0xf0b
0x0000000000433dbc : retf 0xf0c
0x0000000000433f3c : retf 0xf0d
0x00000000004340bc : retf 0xf0e
0x000000000043423c : retf 0xf0f
0x000000000043e76d : retf 0xf1c5
0x000000000045d77b : retf 0xf41
0x0000000000440730 : retf 0xf48
0x0000000000473501 : retf 0xf4c
0x0000000000400b72 : retf 0xf6
0x00000000004726a6 : retf 0xf631
0x00000000004a8868 : retf 0xf64
0x00000000004244a3 : retf 0xf66
0x00000000004922dc : retf 0xf6fe
0x000000000042beda : retf 0xf748
0x000000000048b512 : retf 0xf826
0x000000000041d2ad : retf 0xf989
0x0000000000486e42 : retf 0xf98e
0x000000000043e83f : retf 0xf9c5
0x0000000000494260 : retf 0xfa12
0x000000000045f6e2 : retf 0xfa23
0x0000000000494750 : retf 0xfa33
0x0000000000494758 : retf 0xfa39
0x0000000000403f21 : retf 0xfa83
0x000000000046334a : retf 0xfac1
0x0000000000449bf2 : retf 0xfb68
0x0000000000490742 : retf 0xfc9a
0x000000000044e542 : retf 0xfd17
0x00000000004739a2 : retf 0xfd96
0x00000000004731a6 : retf 0xfdc5
0x00000000004ab2a4 : retf 0xfe10
0x000000000042bd07 : retf 0xfec5
0x000000000041228a : retf 0xfee1
0x0000000000434b61 : retf 0xff2
0x000000000042c30b : retf 0xff3
0x000000000040db14 : retf 0xff31
0x000000000044fa02 : retf 0xffad
0x0000000000403574 : retf 0xffbf
0x00000000004031da : retf 0xffd2
0x0000000000478a62 : retf 0xffdc
0x000000000040b869 : retf 0xffe7
0x0000000000486fd2 : retf 0xfff3
0x00000000004644fa : retf 0xfff5
0x00000000004535f7 : retf 0xfff6
0x000000000045e312 : retf 0xfff8
0x000000000048e072 : retf 0xfff9
0x000000000045426e : retf 0xfffa
0x00000000004655af : retf 0xfffb
0x000000000040e191 : retf 0xfffc
0x0000000000403442 : retf 0xfffd
0x0000000000410d0e : retf 0xfffe
0x00000000004039cf : retf 0xffff
0x00000000004032c0 : retf 1
0x0000000000426aa2 : retf 2
0x0000000000452d42 : retf 3
0x000000000048bdc5 : retf 4
0x00000000004a2714 : retf 5
0x0000000000409d9a : retf 6
0x00000000004a2b14 : retf 7
0x00000000004a2d14 : retf 8
0x000000000042c02b : retf 9
0x0000000000494020 : rol bh, 0xf9 ; call qword ptr [rax]
0x0000000000446365 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000447e53 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048dd3c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042afbe : rol bl, 0x83 ; ret 0x6620
0x00000000004742bb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000417fc7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042b78d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000494014 : rol bl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000446d0d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004259a2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b4ab : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473492 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a2500 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479931 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c1fd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044cadb : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048cd6e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040fa19 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b202 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000485575 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000048236b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000418438 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000452d91 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000486e3d : rol byte ptr [rbx], 0 ; add al, ch ; retf 0xf98e
0x0000000000474522 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000447ce1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004662cf : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000446d0e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008ce : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046cf82 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474502 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000464352 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044e486 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000045904b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448077 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000041036d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000448090 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004234fb : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044dcc1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494ad0 : rol byte ptr [rdi - 6], 0xff ; ror byte ptr [rcx - 6], 1 ; jmp rax
0x0000000000474562 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474512 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048b9a6 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000474552 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043e925 : rol ch, 1 ; jns 0x43e904 ; retf 0xead3
0x000000000043ea75 : rol ch, 1 ; jns 0x43ea54 ; retf 0xead3
0x000000000043ebc5 : rol ch, 1 ; jns 0x43eba4 ; retf 0xead3
0x000000000043ed15 : rol ch, 1 ; jns 0x43ecf4 ; retf 0xead3
0x000000000043ee65 : rol ch, 1 ; jns 0x43ee44 ; retf 0xead3
0x000000000043efb5 : rol ch, 1 ; jns 0x43ef94 ; retf 0xead3
0x000000000043f105 : rol ch, 1 ; jns 0x43f0e4 ; retf 0xead3
0x000000000043f255 : rol ch, 1 ; jns 0x43f234 ; retf 0xead3
0x000000000043f3a5 : rol ch, 1 ; jns 0x43f384 ; retf 0xead3
0x000000000043f4f5 : rol ch, 1 ; jns 0x43f4d4 ; retf 0xead3
0x000000000043f645 : rol ch, 1 ; jns 0x43f624 ; retf 0xead3
0x000000000043f795 : rol ch, 1 ; jns 0x43f774 ; retf 0xead3
0x000000000043f8e5 : rol ch, 1 ; jns 0x43f8c4 ; retf 0xead3
0x000000000043fa35 : rol ch, 1 ; jns 0x43fa14 ; retf 0xead3
0x000000000043fb85 : rol ch, 1 ; jns 0x43fb64 ; retf 0xead3
0x000000000042b52f : rol ch, 1 ; std ; xlatb ; ret
0x0000000000473206 : rol ch, cl ; std ; xlatb ; ret
0x000000000044089f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a5de0 : rol cl, 0xc2 ; ret
0x00000000004744ac : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000447a8c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000447928 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000436e00 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042afe4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b523 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000440373 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000477be9 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400939 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000045653f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004aff86 : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x00000000004545fa : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047319e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042bc65 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x00000000004229fc : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004229fb : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000471eb5 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048a5d8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b032 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b079 ; add rax, rdi ; ret
0x0000000000440737 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004741cc : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000410d7e : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000047559c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x4755cf ; ret
0x000000000044b9b8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041d883 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000047c4ba : ror byte ptr [rax + 0x39], cl ; ret
0x000000000046fc43 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d17d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e3e6 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f17b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045a729 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045a71a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b0dc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b002 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b4f3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405943 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440734 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049e908 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042b785 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000482e3c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000046607a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042aff2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b022 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b012 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422a2e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004795ba : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000044949a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000410fc0 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048a5ed : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000459f34 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413740 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000481b3a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040da9d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f07d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000414421 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414437 ; ret
0x00000000004848cc : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004161a5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004754b3 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000004153c1 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040eb20 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044a5e4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000411e5a : ror byte ptr [rax - 0x7d], cl ; loop 0x411e62 ; add rdx, rcx ; jmp 0x411e78
0x0000000000454c35 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004891c5 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046e762 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046ec82 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000473b9c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000004842a4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048bcb7 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000471eb6 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045bc36 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x00000000004786b1 : ror byte ptr [rcx - 0x73], 0x7d ; sub byte ptr [rcx], dh ; imul al ; retf
0x0000000000467d68 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f4af : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000494ad4 : ror byte ptr [rcx - 6], 1 ; jmp rax
0x000000000045a9d2 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044b8ac : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000477b91 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045e77c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041002d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004756e9 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f7b1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402706 : ror byte ptr [rdi], 0x84 ; ret
0x000000000046687b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000450437 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000000000042381e : ror byte ptr [rdi], 0x84 ; retf
0x000000000044c132 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b866 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000045312c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x0000000000440c6a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004223cf : ror byte ptr [rdi], 0x85 ; ret
0x000000000044c50f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047d6a2 : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000046654e : ror byte ptr [rdi], 0x85 ; retf
0x000000000040343f : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042b36d : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000046307c : ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000422bcf : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000467419 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000047f179 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000480c6a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046d605 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000004848cf : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004467de : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000040fef0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046ca3a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422a2b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000446c55 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dab2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40da9c ; ret
0x00000000004633ae : ror byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000494150 : ror byte ptr [rip + 0x1442fffa], cl ; cli ; call rdx
0x0000000000493a9c : ror byte ptr [rsi], 1 ; stc ; call qword ptr [rax]
0x0000000000494074 : ror dh, 0xf9 ; call qword ptr [rax]
0x0000000000494068 : ror dl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000434317 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000484ece : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x00000000004467e8 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000440604 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440729 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000004734fa : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048a7b4 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f236 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423177 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x00000000004799c3 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465ab0 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004581c8 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000044cdb0 : ror dword ptr [rax - 0x77], 5 ; nop ; cli ; add cl, ch ; retf
0x00000000004854e1 : ror dword ptr [rax - 0x77], cl ; ret
0x00000000004160bd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x4160b7 ; ret
0x000000000047064d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x470647 ; ret
0x00000000004655a9 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045d884 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483b0d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046546b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000444797 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000493c18 : ror dword ptr [rdi - 0x6f2e0007], 1 ; stc ; call rcx
0x000000000047bcae : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042ca68 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d174 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cf46 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042cec6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d204 : ror dword ptr [rdi], 0x85 ; je 0x42d214 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ccfb : ror dword ptr [rdi], 0x85 ; jno 0x42cd10 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cdc3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ca40 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004160bc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x4160b8 ; ret
0x000000000047064c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x470648 ; ret
0x000000000040177e : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x40179e ; syscall
0x00000000004765b5 : sahf ; clc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004ab8c9 : sahf ; cmc ; call rax
0x000000000043f32e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a6cc5 : sahf ; ret 0x38ae
0x0000000000483401 : sahf ; ret 0x3948
0x000000000045bc3c : sahf ; ret 0x894c
0x000000000048c3a4 : sahf ; ret 0xf45
0x000000000044814d : sahf ; retf
0x00000000004afab1 : sahf ; stc ; call qword ptr [rbx]
0x0000000000493e9d : sahf ; stc ; jmp qword ptr [rax]
0x0000000000494708 : sahf ; xor al, 0xfa ; ljmp [rsi] ; xor al, 0xfa ; call rsp
0x000000000041843e : sal bh, 0xd8 ; ret
0x0000000000494c60 : sal bh, 0xfa ; call rax
0x0000000000425827 : sal bh, 1 ; ret 0x8000
0x00000000004256e7 : sal bh, 1 ; ret 0xc000
0x00000000004255a7 : sal bh, 1 ; ret 0xe000
0x0000000000425467 : sal bh, 1 ; ret 0xf000
0x0000000000425327 : sal bh, 1 ; ret 0xf800
0x00000000004251e7 : sal bh, 1 ; ret 0xfc00
0x00000000004250a7 : sal bh, 1 ; ret 0xfe00
0x0000000000424f67 : sal bh, 1 ; ret 0xff00
0x0000000000424e27 : sal bh, 1 ; ret 0xff80
0x0000000000424ce7 : sal bh, 1 ; ret 0xffc0
0x0000000000424ba7 : sal bh, 1 ; ret 0xffe0
0x0000000000424a67 : sal bh, 1 ; ret 0xfff0
0x0000000000424927 : sal bh, 1 ; ret 0xfff8
0x00000000004247e7 : sal bh, 1 ; ret 0xfffc
0x00000000004246a7 : sal bh, 1 ; ret 0xfffe
0x0000000000494c34 : sal bl, 1 ; cli ; push rax ; cli ; call qword ptr [rax]
0x00000000004742af : sal bl, 1 ; ret
0x000000000047f01d : sal bl, cl ; ret
0x000000000040d9dd : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489331 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004a3620 : sal byte ptr [rax - 0x502f0004], 0xfc ; call rax
0x0000000000449537 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000449807 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000473752 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004821fe : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x00000000004752f6 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000405d8b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f153 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x0000000000400594 : sal byte ptr [rbp + 2], cl ; ret
0x000000000048f138 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044b9d1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000414424 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044b9e1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000416fdd : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004464d0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x00000000004160c0 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000425b4b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dab7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b52d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480ad8 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b525 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044037d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000440375 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047400b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004183fc : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044cac6 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x0000000000486d8c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x486daa
0x000000000044067c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e482 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044b9b6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040ea1c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x000000000047345b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c2eb : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000440993 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004945c0 : sal byte ptr [rip + 0x3550fffa], 0xfa ; jmp rax
0x0000000000484c91 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047f5d9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048938a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000494c08 : sal dl, 0xfa ; call rax
0x0000000000494c0c : sal dl, 1 ; cli ; jmp rax
0x0000000000446bb3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480add : sal edi, 0xd8 ; ret
0x0000000000479a4c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000494c88 : sar al, 0xfa ; jmp rax
0x0000000000402fd0 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449143 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047701b : sar bh, 0xff ; dec dword ptr [rbp + rcx*4 + 0xd] ; retf 0x2cc
0x000000000047f963 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000484200 : sar bh, 0xff ; mov eax, 1 ; ret
0x000000000040343a : sar bh, 1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x0000000000402702 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047b8a1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x0000000000493e44 : sar byte ptr [rcx - 0x442f0007], 1 ; stc ; call rax
0x000000000044678e : sar byte ptr [rcx], 0xc8 ; jle 0x4467d0 ; movsxd rax, ecx ; ret
0x000000000044d04d : sar byte ptr [rcx], cl ; ret
0x0000000000461e27 : sar byte ptr [rcx], cl ; retf 0x147f
0x0000000000493d2c : sar byte ptr [rdi - 0x4daf0007], 0xf9 ; call qword ptr [rax]
0x0000000000458546 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a765f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000494cac : sar cl, 0xfa ; jmp rax
0x0000000000494041 : sar cl, cl ; call qword ptr [rax - 0x1f00062d]
0x00000000004380f3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4380fe ; ret
0x00000000004470c9 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x00000000004718ac : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048829e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a73c3 : sar ecx, 1 ; jnp 0x4a7384 ; ret
0x0000000000494045 : sar ecx, cl ; jmp rax
0x0000000000415357 : sar edx, 2 ; call 0x4115b5
0x00000000004719b2 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042b787 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000447583 : sar esi, 1 ; jg 0x4475b3 ; vzeroupper ; ret
0x000000000044771c : sar esi, 1 ; jg 0x44774c ; vzeroupper ; ret
0x00000000004718ab : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048829d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415356 : sar rdx, 2 ; call 0x4115b6
0x0000000000415355 : sar rdx, 2 ; call 0x4115b7
0x00000000004719b1 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042b786 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463065 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044a271 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004664dd : sbb al, 0x29 ; ret 0xe683
0x0000000000467417 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a86c2 : sbb al, 0x8c ; retf
0x00000000004af094 : sbb al, 0x97 ; clc ; jmp qword ptr [rsi]
0x000000000046205f : sbb al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000040e002 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463b46 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406eb3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004910f6 : sbb al, byte ptr [rdi - 0x76b7ffde] ; ret 0x8348
0x00000000004695eb : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b048 : sbb al, ch ; ret 0xffaf
0x0000000000409417 : sbb al, ch ; retf
0x0000000000418c12 : sbb bh, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a7452 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a6145 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481824 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004857a4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004848c9 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000475381 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047de81 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000418dd1 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045d9d4 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041b3a5 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000481825 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000468ef2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048d9aa : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048517f : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000482207 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f02d : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047f385 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000473ee0 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047f5fc : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416121 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000419d7b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004854af : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000041112e : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000419593 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004857a5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004b1308 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449181 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040a4fa : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000493e98 : sbb byte ptr [rbp - 0x612f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000048a425 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041f648 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044ce2c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004114f7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000417fb7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004716ca : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000457d72 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x00000000004194ae : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000471bde : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000048fc9f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x48fd22 ; ret 0x8b48
0x0000000000453ff8 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dbb0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f07b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004848ca : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004b4a94 : sbb byte ptr [rdi + 0x37380000], dl ; std ; jmp qword ptr [rcx]
0x0000000000403f33 : sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000486c8b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000493f90 : sbb cl, 0xf9 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000493abd : sbb cl, bh ; call qword ptr [rax]
0x000000000041d87d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000045777d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043da7d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f6ca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043eeea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f2da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eafa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e5dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ddbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d59d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043ec99 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e0fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d8dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d0bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e29d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f18a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e9aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043faba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d3fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d533 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e233 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd53 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f08b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f9bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e573 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d873 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d393 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e093 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f1db : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e9fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048dcd5 : sbb dh, bl ; ret
0x0000000000400590 : sbb dl, 0 ; test dl, dl ; jne 0x4005a1 ; ret
0x00000000004804e7 : sbb dl, dh ; jmp r11
0x000000000048827b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048dbc9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044b924 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004acd21 : sbb dword ptr [rax], eax ; add byte ptr [rsi + rcx*4], bh ; idiv bh ; retf
0x0000000000460ec9 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a89fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000465dc0 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004461a7 : sbb eax, -1 ; ret
0x000000000048cd22 : sbb eax, 0x18c48348 ; ret
0x000000000048fd60 : sbb eax, 0x22bf8b ; jne 0x48fd50 ; pop rbx ; ret
0x00000000004a7453 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000045e3e4 : sbb eax, 0x39480001 ; ret
0x0000000000403e48 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045d862 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407c2a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040704c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000048236a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042bbe7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048d8af : sbb eax, eax ; ret
0x00000000004461a5 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000424161 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a8568 : sbb ebp, ebx ; retf
0x0000000000472679 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x000000000045072e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403e8d : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004a82f9 : sbb edi, ebp ; retf
0x0000000000487427 : sbb esp, dword ptr [rbx] ; add byte ptr [rax], al ; jne 0x487436 ; pop rbx ; ret
0x000000000047ef93 : sbb esp, edx ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000487426 : sbb r12, qword ptr [r11] ; add byte ptr [rax], al ; jne 0x487437 ; pop rbx ; ret
0x000000000042ac82 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f71e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000046c31f : scasb al, byte ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a89a9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000043f81d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3649 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rax - 0x2f000350]
0x00000000004a3625 : scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3639 : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax - 0x2f000350]
0x00000000004a365d : scasd eax, dword ptr [rdi] ; cld ; push qword ptr [rax - 0x50] ; cld ; call rax
0x000000000041440e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e3b9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045ac7e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000411216 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004194a9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000448093 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000047e3cd : scasd eax, dword ptr [rdi] ; retf 0x14c
0x000000000046c36d : scasd eax, dword ptr [rdi] ; scasb al, byte ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a76d4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a694f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044b9bc : setae al ; ret
0x000000000045a9aa : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041843c : setne al ; neg eax ; ret
0x000000000044d050 : setne dl ; jmp 0x44d038
0x0000000000493ee4 : shl bl, 1 ; stc ; call rax
0x000000000042b4cb : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042b48b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000047ed66 : shl byte ptr [rbx], cl ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000042ff64 : shl byte ptr [rcx + 0x39480028], 1 ; retf 0x8949
0x0000000000493ad0 : shl byte ptr [rcx], 0xf9 ; jmp rax
0x00000000004b154c : shl byte ptr [rcx], 1 ; add byte ptr [rax - 0x4f], al ; cli ; call qword ptr [rbx]
0x000000000048f0f5 : shl byte ptr [rdx], cl ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004463ef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042449b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000444793 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000043ff45 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d3fb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d412 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000472ff6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473007 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d2f1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000493ee8 : shl ch, 1 ; stc ; call rax
0x0000000000493ee0 : shl cl, 1 ; stc ; call rax
0x000000000049fb30 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a725d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000047ecc9 : shl dword ptr [rbx], cl ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000041d2ab : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004a7548 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000048f205 : shl dword ptr [rdx], 1 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004463d2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042449f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000472ff2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000044624b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042d376 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d42d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d416 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d3ff : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042bebb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d391 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ae1c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d251 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047ecc8 : shl dword ptr fs:[rbx], cl ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000044dce1 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044dcdd : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482a3c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004829c7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482996 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000486d90 : shl edx, 5 ; add rdx, rax ; jmp 0x486da6
0x0000000000482a3b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004829c6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482995 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000486d8f : shl rdx, 5 ; add rdx, rax ; jmp 0x486da7
0x00000000004a6b04 : shr al, cl ; add al, 0x3d ; retf
0x0000000000425b4f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000494a0c : shr byte ptr [rcx], 0xfa ; jmp qword ptr [rax]
0x00000000004240fa : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000457528 : shr byte ptr [rcx], cl ; ret
0x000000000042b78b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004a3628 : shr byte ptr [rdi - 0x4f4f0004], 1 ; cld ; call rax
0x00000000004a3638 : shr byte ptr [rdi - 0x4f5f0004], 1 ; cld ; call rax
0x00000000004a3648 : shr byte ptr [rdi - 0x4f6f0004], 1 ; cld ; call rax
0x00000000004a3650 : shr byte ptr [rdi - 0x4f7f0004], 1 ; cld ; call rax
0x00000000004a365c : shr byte ptr [rdi - 0x4f8f0004], 1 ; cld ; call rax
0x00000000004a3630 : shr byte ptr [rdi - 0x502f0004], 1 ; cld ; call rax
0x0000000000494bc8 : shr byte ptr [rdi - 0x63af0006], 0xfa ; jmp rax
0x00000000004a8907 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000493af0 : shr byte ptr [rdx], 0xf9 ; jmp rax
0x000000000048c802 : shr cl, 1 ; ret 0xfffe
0x0000000000467eac : shr cl, cl ; jrcxz 0x467eb8 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c30f : shr cl, cl ; ret
0x000000000045908f : shr cl, cl ; retf
0x0000000000447d6a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000004740bb : shr eax, 2 ; ret
0x00000000004745c3 : shr eax, 2 ; vzeroupper ; ret
0x0000000000447db5 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041e93e : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000482b4c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482ad1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482aa0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000482b4b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482ad0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482a9f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004740ba : shr rax, 2 ; ret
0x00000000004745c2 : shr rax, 2 ; vzeroupper ; ret
0x000000000049ed09 : sldt word ptr [rax] ; ret
0x00000000004537e8 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000004738f6 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042ac37 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000493cf6 : stc ; call qword ptr [rax + 0x20fff994]
0x0000000000493f2a : stc ; call qword ptr [rax + 0x20fff9e7]
0x0000000000494042 : stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000494056 : stc ; call qword ptr [rax - 0x1f00063b]
0x0000000000493e76 : stc ; call qword ptr [rax - 0x1f000659]
0x000000000049400e : stc ; call qword ptr [rax - 0x2f000641]
0x0000000000493ab6 : stc ; call qword ptr [rax - 0x2f0006e9]
0x0000000000493aa6 : stc ; call qword ptr [rax - 0x2f0006ee]
0x0000000000493a96 : stc ; call qword ptr [rax - 0x2f0006f3]
0x0000000000493a9e : stc ; call qword ptr [rax]
0x00000000004af4ca : stc ; call qword ptr [rbx]
0x00000000004afee2 : stc ; call qword ptr [rcx]
0x0000000000493bf2 : stc ; call qword ptr [rdx]
0x0000000000493c86 : stc ; call qword ptr [rsi]
0x0000000000493a9a : stc ; call rax
0x0000000000493c16 : stc ; call rcx
0x00000000004afc8e : stc ; call rsi
0x00000000004af3c6 : stc ; call rsp
0x0000000000494cb1 : stc ; cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x000000000045219c : stc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000494ca9 : stc ; cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000494c95 : stc ; cli ; jmp qword ptr [rax]
0x0000000000494cad : stc ; cli ; jmp rax
0x0000000000462e6e : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000468625 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000493c4e : stc ; dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x000000000049458e : stc ; dec dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x0000000000493d6a : stc ; inc dword ptr [rax + 0x10fff9bf] ; mov dl, 0xf9 ; call rax
0x0000000000493d0a : stc ; inc dword ptr [rax + 0x58fff997] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000493b92 : stc ; inc dword ptr [rax + 0x64] ; stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x0000000000493f7a : stc ; inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x0000000000493ff6 : stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000493f92 : stc ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000493f0e : stc ; inc dword ptr [rax - 0x26] ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x000000000049403e : stc ; inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000494062 : stc ; inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x0000000000493e82 : stc ; inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000493e96 : stc ; inc dword ptr [rax - 0x2f000663] ; sahf ; stc ; jmp qword ptr [rax]
0x0000000000494052 : stc ; inc dword ptr [rax - 0x3c] ; stc ; call qword ptr [rax - 0x1f00063b]
0x0000000000493e4e : stc ; inc dword ptr [rax - 0x3f000669] ; wait ; stc ; call qword ptr [rax]
0x0000000000493d9e : stc ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000493e72 : stc ; inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x0000000000493d02 : stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000493ad6 : stc ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x0000000000493f12 : stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x0000000000493ef6 : stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000493d16 : stc ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x0000000000493e3e : stc ; inc dword ptr [rax] ; mov eax, 0xb9d0fff9 ; stc ; call rax
0x0000000000493ba2 : stc ; inc dword ptr [rax] ; push 0x68f0fff9 ; stc ; jmp rax
0x0000000000493b5e : stc ; inc dword ptr [rax] ; push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000493cf2 : stc ; inc dword ptr [rax] ; xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000493ace : stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000493d2a : stc ; inc eax ; mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x0000000000493aee : stc ; inc eax ; sub bh, cl ; jmp rax
0x0000000000493e52 : stc ; inc eax ; wait ; stc ; call qword ptr [rax]
0x000000000043e7d2 : stc ; je 0x43e79e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000493b76 : stc ; jmp qword ptr [rax + 0x10fff95a]
0x000000000049454e : stc ; jmp qword ptr [rax - 0x1f00061a]
0x0000000000493ada : stc ; jmp qword ptr [rax]
0x00000000004af212 : stc ; jmp qword ptr [rbx]
0x00000000004af8e2 : stc ; jmp qword ptr [rcx]
0x00000000004b01e6 : stc ; jmp qword ptr [rdx]
0x0000000000493ad2 : stc ; jmp rax
0x00000000004af48e : stc ; jmp rbx
0x0000000000493c36 : stc ; jmp rcx
0x0000000000493bf6 : stc ; jmp rdx
0x0000000000493c52 : stc ; jmp rsi
0x00000000004a73c4 : stc ; jnp 0x4a7383 ; ret
0x0000000000493d0e : stc ; lcall [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x0000000000493ece : stc ; ljmp [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000042fcd8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000429357 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048b5b2 : stc ; or esp, dword ptr [rbx] ; add byte ptr [rax], cl ; ret
0x0000000000460d23 : stc ; pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000493cfe : stc ; push qword ptr [rax + 0x40fff995] ; xchg eax, esi ; stc ; jmp rax
0x0000000000493b62 : stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000493aca : stc ; push qword ptr [rax + 0xa] ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000493ff2 : stc ; push qword ptr [rax - 0x26] ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000493dce : stc ; push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049405e : stc ; push qword ptr [rax] ; enter -7, -0x80 ; leave ; stc ; call rax
0x0000000000493ed2 : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000493e36 : stc ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000493dba : stc ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000493dd2 : stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000493dee : stc ; push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000493d4e : stc ; push qword ptr [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000493b72 : stc ; push qword ptr [rax] ; pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000493b96 : stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x0000000000493c46 : stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000493c82 : stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x0000000000493d52 : stc ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000493d36 : stc ; push rax ; mov ch, 0xf9 ; call rax
0x0000000000493dda : stc ; push rax ; mov dh, 0xf9 ; call rax
0x0000000000493df2 : stc ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000493ba6 : stc ; push rax ; push 0x69e0fff9 ; stc ; call rax
0x0000000000494545 : stc ; stc ; jmp rax
0x00000000004385f4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042bc67 : stc ; xlatb ; ret 0xff2d
0x00000000004a49f2 : std ; call qword ptr [rax]
0x00000000004b52c2 : std ; call qword ptr [rbx]
0x00000000004b4d52 : std ; call qword ptr [rdx]
0x00000000004aadee : std ; call rax
0x00000000004b142a : std ; call rdx
0x0000000000475fba : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473918 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000449ebe : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469632 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423c92 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004aade6 : std ; dec dword ptr [rbx + 0x38fffdfd] ; std ; std ; call rax
0x00000000004821fb : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a49ee : std ; inc eax ; jbe 0x4a49f5 ; call qword ptr [rax]
0x00000000004816ae : std ; jbe 0x4816bc ; ret
0x00000000004a4966 : std ; jmp qword ptr [rax]
0x00000000004b4a9a : std ; jmp qword ptr [rcx]
0x00000000004b0f32 : std ; jmp qword ptr [rdi]
0x00000000004b0652 : std ; jmp qword ptr [rdx]
0x00000000004aadca : std ; jmp rax
0x00000000004b43ca : std ; jmp rdx
0x00000000004b4ace : std ; jmp rsp
0x00000000004a4962 : std ; ljmp [rax + 0x74] ; std ; jmp qword ptr [rax]
0x000000000042f4fb : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004a49ea : std ; push qword ptr [rbx] ; xchg ebp, edi ; inc eax ; jbe 0x4a49f9 ; call qword ptr [rax]
0x000000000044aece : std ; push rbx ; ret
0x0000000000446b53 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000045fc0a : std ; retf
0x00000000004aaded : std ; std ; call rax
0x00000000004b26e9 : std ; sti ; jmp qword ptr [rbx]
0x000000000042b531 : std ; xlatb ; ret
0x000000000042b529 : std ; xlatb ; ret 0xc085
0x000000000042baa3 : std ; xlatb ; ret 0xe883
0x00000000004732d1 : std ; xlatb ; retf 0xc985
0x00000000004731a4 : std ; xlatb ; retf 0xfdc5
0x0000000000473204 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421821 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004112f3 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000494d5e : sti ; call qword ptr [rax]
0x000000000049536e : sti ; call qword ptr [rbx]
0x0000000000494d92 : sti ; call rbx
0x0000000000495242 : sti ; call rsp
0x0000000000448cdf : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000495376 : sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x0000000000495ad6 : sti ; inc dword ptr [rcx + rbp*2 - 5] ; inc dword ptr [rcx + rbp*2 - 5] ; jmp rax
0x0000000000495ada : sti ; inc dword ptr [rcx + rbp*2 - 5] ; jmp rax
0x0000000000495366 : sti ; inc esp ; cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x00000000004960de : sti ; jmp qword ptr [rax]
0x00000000004b26ea : sti ; jmp qword ptr [rbx]
0x000000000049525a : sti ; jmp qword ptr [rcx - 0x2b0004c3]
0x0000000000495252 : sti ; jmp qword ptr [rdi]
0x0000000000495ade : sti ; jmp rax
0x00000000004960a2 : sti ; jmp rbx
0x0000000000495372 : sti ; lcall [rax + 0x3e] ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x00000000004960d6 : sti ; lcall [rax + rsi*2 + 0x73d9fffb] ; sti ; jmp qword ptr [rax]
0x00000000004960ba : sti ; lcall [rdi + 0x73] ; sti ; jmp qword ptr [rdi]
0x000000000042f8d8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004a754a : sti ; ret
0x0000000000494589 : sti ; stc ; jmp rax
0x00000000004b0651 : sti ; std ; jmp qword ptr [rdx]
0x000000000045a217 : sti ; test rax, rax ; je 0x45a225 ; call rax
0x0000000000494bb9 : stosb byte ptr [rdi], al ; cli ; call rax
0x00000000004a7a24 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000044787b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000424011 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000494bbd : stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x00000000004682ee : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000460a71 : stosd dword ptr [rdi], eax ; pop rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000041e943 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a8b2c : stosd dword ptr [rdi], eax ; ret
0x00000000004a8a2a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000493e85 : stosd dword ptr [rdi], eax ; stc ; call rax
0x00000000004242c1 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041e942 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a8f11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004adfc5 : sub al, 0 ; add al, cl ; push rsi ; jmp rsi
0x00000000004819a6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000447ab2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044c130 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042ca43 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000049414c : sub al, 0xe ; cli ; call rdx
0x00000000004947fd : sub al, 0xfa ; jmp rax
0x0000000000466a25 : sub al, 4 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004183c0 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412505 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000418356 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a39b5], 1 ; ret
0x00000000004182c5 : sub al, byte ptr [rax] ; ret
0x00000000004240ba : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000424402 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042be05 : sub al, ch ; std ; xlatb ; ret
0x0000000000493af1 : sub bh, cl ; jmp rax
0x00000000004949c9 : sub bh, dl ; call rax
0x0000000000494a09 : sub bh, dl ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494949 : sub bh, dl ; jmp rsp
0x00000000004b02c8 : sub bl, bl ; stc ; jmp qword ptr [rax]
0x00000000004632cb : sub bl, cl ; in eax, 0xdf ; loopne 0x463260 ; ret
0x0000000000476ed7 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000415c9c : sub byte ptr [rax + 0x39], cl ; retf
0x0000000000476ed6 : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483533 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x0000000000457f7b : sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004224f4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048be0c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046f694 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004049d3 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d7e9 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d854 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040d909 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040d886 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040d83f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040d89e : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040d93f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x0000000000483ecd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x483f15 ; leave ; ret
0x000000000048ec62 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000477b2e : sub byte ptr [rbp + rcx*4 + 0x15], cl ; ret 2
0x0000000000448874 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000487d23 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000487d22 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000493e84 : sub byte ptr [rbx - 0x532f0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000403efb : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000403f2f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000004b0a68 : sub byte ptr [rcx], ah ; cli ; call qword ptr [rdi]
0x000000000044bc5c : sub byte ptr [rcx], al ; ret
0x00000000004786b5 : sub byte ptr [rcx], dh ; imul al ; retf
0x0000000000421316 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000494bb8 : sub byte ptr [rdx - 0x542f0006], 0xfa ; jmp qword ptr [rax]
0x000000000042421a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000042425b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000482075 : sub byte ptr [rdx], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x00000000004af0a4 : sub byte ptr [rip - 0x46c80000], bh ; clc ; call qword ptr [rax]
0x000000000043430c : sub byte ptr [rsi + 0x28], bl ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000467d16 : sub cl, bpl ; ret 0xffe8
0x000000000040eb1d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000467d17 : sub cl, ch ; ret 0xffe8
0x000000000045dde4 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004ab309 : sub dh, bh ; call rsp
0x00000000004abc89 : sub dh, dh ; call rsp
0x000000000047fcfa : sub dl, dh ; call r11
0x000000000047540e : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a78cd : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x00000000004771f2 : sub dword ptr [rax + 0xf000002], -0x7b ; ret
0x000000000041f3da : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004240dc : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f43a : sub dword ptr [rax], eax ; ret
0x00000000004a8562 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042db27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42db3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042dc77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dc8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ddc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dddd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42df2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e067 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e07d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e1b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e1cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e31d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e457 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e46d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e5a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e5bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e6f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e70d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e85d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e9ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42eafd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ec4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ed9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004304f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43050d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430647 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43065d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430797 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4307ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4308fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430b9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430cd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ced ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430e3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4310dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43122d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43137d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4314cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43161d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43176d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042da83 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042da7f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042db2d : sub dword ptr [rdi], esp ; jmp r9
0x00000000004240fb : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042a007 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042d226 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000429ec1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a8e1a : sub dword ptr [rsi], 0x76 ; retf
0x000000000040db4d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042bb97 : sub eax, -1 ; jne 0x42bba8 ; vzeroupper ; ret
0x0000000000422a6a : sub eax, 0x10 ; ret
0x00000000004947f1 : sub eax, 0x2d60fffa ; cli ; jmp rax
0x00000000004691c4 : sub eax, 0x83000000 ; ret
0x0000000000466595 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a6566 : sub eax, 0xea4ca798 ; retf
0x0000000000424162 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000458414 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446624 : sub eax, 1 ; ret
0x00000000004816f6 : sub eax, dword ptr [0] ; ret
0x000000000040380d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b1a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000040357c : sub eax, dword ptr [rax] ; call 4
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401b5f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045dd86 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000418c7e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044834a : sub eax, dword ptr [rdx + rcx*4] ; je 0x448336 ; ret
0x00000000004242c2 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000417f93 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044678d : sub eax, eax ; cmp eax, ecx ; jle 0x4467d1 ; movsxd rax, ecx ; ret
0x0000000000480b64 : sub eax, eax ; ret
0x000000000042bbe3 : sub eax, ecx ; je 0x42bbf9 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000417669 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x00000000004841c0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042588c : sub eax, ecx ; ret
0x0000000000440739 : sub eax, edi ; ret
0x00000000004741ce : sub eax, edi ; shr rax, 2 ; ret
0x00000000004842a3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000417fbb : sub eax, edx ; ret
0x00000000004745c0 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042bbac : sub eax, edx ; vzeroupper ; ret
0x00000000004467ed : sub eax, esi ; ret
0x0000000000480b63 : sub eax, r8d ; ret
0x00000000004a77be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004139b0 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004643ff : sub ebp, ecx ; retf
0x0000000000412586 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a6255 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044cac8 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473754 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000493aed : sub ecx, edi ; inc eax ; sub bh, cl ; jmp rax
0x0000000000494881 : sub edi, edx ; jmp qword ptr [rdx]
0x0000000000494a01 : sub edi, edx ; jmp rax
0x00000000004949fd : sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x0000000000494945 : sub edi, edx ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x0000000000413a9d : sub edi, esp ; call 0x4004ac
0x0000000000417fc0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000417fb5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b034 : sub edx, eax ; jbe 0x42b077 ; add rax, rdi ; ret
0x000000000042b044 : sub edx, eax ; jbe 0x42b079 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b054 : sub edx, eax ; jbe 0x42b079 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b064 : sub edx, eax ; jbe 0x42b079 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000494991 : sub edx, edi ; call qword ptr [rax]
0x0000000000494a0d : sub edx, edi ; jmp qword ptr [rax]
0x000000000049498d : sub edx, edi ; ljmp [rdx + 0x29] ; cli ; call qword ptr [rax]
0x0000000000423461 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000412f5f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000415354 : sub edx, esi ; sar rdx, 2 ; call 0x4115b8
0x0000000000455483 : sub esi, eax ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000048a423 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f756 : sub esp, 0x80 ; call 0x44b9c8
0x00000000004920e1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000475063 : sub esp, 8 ; syscall
0x0000000000423431 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000413a9c : sub r15, r12 ; call 0x4004ad
0x0000000000417668 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000422a69 : sub rax, 0x10 ; ret
0x0000000000446623 : sub rax, 1 ; ret
0x00000000004816f5 : sub rax, qword ptr [0] ; ret
0x0000000000418c7d : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004816f4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000484ed2 : sub rax, r8 ; ret
0x0000000000440738 : sub rax, rdi ; ret
0x00000000004741cd : sub rax, rdi ; shr rax, 2 ; ret
0x00000000004466f3 : sub rax, rdx ; ret
0x000000000044078f : sub rax, rdx ; vzeroupper ; ret
0x00000000004467ec : sub rax, rsi ; ret
0x000000000042b033 : sub rdx, rax ; jbe 0x42b078 ; add rax, rdi ; ret
0x0000000000415353 : sub rdx, rsi ; sar rdx, 2 ; call 0x4115b9
0x000000000048a422 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f755 : sub rsp, 0x80 ; call 0x44b9c9
0x00000000004920e0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000475062 : sub rsp, 8 ; syscall
0x00000000004011fc : syscall
0x0000000000481427 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret 0xeb30
0x0000000000416ed4 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000475165 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048abb3 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000047f949 : test al, 0x23 ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004b2cf8 : test al, 0x24 ; cld ; jmp qword ptr [rcx]
0x000000000044a88e : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004b1424 : test al, 0x60 ; add byte ptr [rax], al ; cmp dh, dh ; std ; call rdx
0x000000000044b62a : test al, 0x75 ; ret
0x00000000004a6b17 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004a64fe : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x0000000000487657 : test al, 0xe8 ; retf
0x00000000004ab824 : test al, 4 ; add byte ptr [rax], al ; call 0x134aadcb
0x000000000040d761 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047e3e5 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000425b4a : test al, al ; jne 0x425b38 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000448100 : test al, al ; jne 0x448039 ; jmp 0x4480de
0x0000000000477b93 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a9424 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000047280c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a78d1 : test bh, dl ; retf 0xdf7f
0x0000000000419598 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041002f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458b01 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046a829 : test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000400b73 : test byte ptr [rax], 0 ; nop ; leave ; ret
0x000000000040ea3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041995a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004854da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000044496a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000443daa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004182ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041286a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000041142a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004182aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004171ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004447aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000044ec12 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046a72c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000047269f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048bcbb : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048d852 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004616a2 : test byte ptr [rcx - 0x7a000007], al ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000429916 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a0f6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428c26 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000421405 : test byte ptr [rcx], ch ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000042a006 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000428946 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000456064 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x456027
0x00000000004b3b00 : test byte ptr [rdi - 0x34540000], al ; cld ; call rdx
0x000000000044b324 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x000000000046fb29 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000423c96 : test byte ptr [rdi], 0x84 ; ret
0x0000000000449e6f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449986 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000472b94 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000472bac : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000456469 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x45642c
0x00000000004b080c : test byte ptr [rdx + rdi*8], al ; jmp qword ptr [rdx]
0x000000000041f9de : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004727f4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004214de : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000412b18 : test byte ptr [rdx], ch ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004219de : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004692b4 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045ece4 : test byte ptr [rip - 0x7c000011], al ; ret
0x00000000004733ed : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000411744 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000452e61 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000044061d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000042ac36 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004af4c9 : test cl, bh ; call qword ptr [rbx]
0x00000000004af4a1 : test cl, bh ; call qword ptr [rdx]
0x0000000000429356 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042aa56 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000489aaa : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000429076 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427106 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427406 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428306 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ab46 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428006 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000427d06 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427a06 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044c271 : test cl, ch ; retf 0xfffe
0x0000000000429a86 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a966 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004462af : test cl, cl ; jne 0x4462a4 ; ret
0x000000000044635f : test cl, cl ; jne 0x446354 ; ret
0x000000000044661f : test cl, cl ; jne 0x446618 ; sub rax, 1 ; ret
0x00000000004447f4 : test dl, 0x40 ; jne 0x4447b9 ; lea rax, [rdi + 7] ; ret
0x0000000000444822 : test dl, 4 ; jne 0x4447b9 ; lea rax, [rdi + 3] ; ret
0x0000000000400593 : test dl, dl ; jne 0x40059e ; ret
0x000000000040dab6 : test dl, dl ; jne 0x40da98 ; ret
0x00000000004464cf : test dl, dl ; jne 0x4464c8 ; lea rax, [rcx - 1] ; ret
0x0000000000480ad7 : test dl, dl ; jne 0x480ab3 ; movsx eax, cl ; neg eax ; ret
0x00000000004917a3 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x000000000047280d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468796 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000402171 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d181 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045e759 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000468ea6 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000402170 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d180 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042afb8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000449699 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042cd27 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d176 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042bdf8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000041f818 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047531b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042ccfd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cc0d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cb1d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041cc12 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x0000000000410d08 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048dc34 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041cbac : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042ca42 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004731d3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449306 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000446032 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f621 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000040fbcd : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042326b : test dword ptr [rsi], 0x358d4800 ; retf
0x000000000042cf48 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a79ad : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a8800 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432bc6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000494bb5 : test eax, 0xaa80fffa ; cli ; call rax
0x000000000044b8ab : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x00000000004229e1 : test eax, eax ; je 0x4229f8 ; lea rax, [rdx - 0x10] ; ret
0x000000000042ad08 : test eax, eax ; je 0x42ad14 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a0a8 : test eax, eax ; je 0x44a0b3 ; ret
0x000000000044d016 : test eax, eax ; je 0x44d025 ; ret
0x0000000000458e14 : test eax, eax ; je 0x458e1e ; call rax
0x000000000045a219 : test eax, eax ; je 0x45a223 ; call rax
0x0000000000484c90 : test eax, eax ; je 0x484ca8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f0f8 : test eax, eax ; je 0x48f105 ; ret
0x000000000048f208 : test eax, eax ; je 0x48f215 ; ret
0x00000000004909a1 : test eax, eax ; je 0x4909b0 ; call rax
0x0000000000416fdc : test eax, eax ; jne 0x416fd5 ; ret
0x0000000000417f74 : test eax, eax ; jne 0x417f6d ; ret
0x000000000042afe5 : test eax, eax ; jne 0x42b046 ; xor eax, eax ; ret
0x000000000042b461 : test eax, eax ; jne 0x42b489 ; xor eax, eax ; vzeroupper ; ret
0x0000000000449466 : test eax, eax ; jne 0x449486 ; xor eax, eax ; syscall
0x0000000000449536 : test eax, eax ; jne 0x449559 ; mov eax, 1 ; syscall
0x0000000000449673 : test eax, eax ; jne 0x4496e1 ; mov eax, 0x48 ; syscall
0x0000000000449806 : test eax, eax ; jne 0x449829 ; mov eax, 3 ; syscall
0x000000000044b9e0 : test eax, eax ; jne 0x44b9db ; pop rdx ; pop r10 ; ret
0x00000000004752f5 : test eax, eax ; jne 0x47535f ; mov eax, 0x101 ; syscall
0x000000000048f137 : test eax, eax ; jne 0x48f145 ; ret
0x000000000048f152 : test eax, eax ; jne 0x48f165 ; ret
0x000000000048f382 : test eax, eax ; jne 0x48f395 ; ret
0x000000000047b8a0 : test eax, eax ; js 0x47b8b7 ; pop rbx ; ret
0x000000000047dbbd : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000469895 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004701ca : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a349 : test ebp, ebp ; jne 0x44a368 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aeb4 : test ebp, ebp ; jne 0x44aee0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aee7 : test ebp, ebp ; jne 0x44af39 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af13 : test ebp, ebp ; jne 0x44af99 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000048fe71 : test ebp, ebp ; jne 0x48fe60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490a2b : test ebp, ebp ; jne 0x490a18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b52c1 : test ebp, edi ; call qword ptr [rbx]
0x000000000041ab18 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042af20 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421820 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421318 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004545f9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000477be8 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004447e2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004742a9 : test ecx, ecx ; jne 0x474268 ; mov rax, rdx ; ret
0x000000000044a36f : test edi, edi ; jne 0x44a3b9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a397 : test edi, edi ; jne 0x44a3d9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044af9f : test edi, edi ; jne 0x44b00a ; mov rdi, qword ptr [r13] ; call r12
0x000000000044afcf : test edi, edi ; jne 0x44b03b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f01a : test edi, edi ; jne 0x47eff5 ; ret
0x000000000048436d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484361 ; mov rax, rsi ; ret
0x00000000004405d2 : test edx, edx ; je 0x4405e1 ; bsf eax, edx ; ret
0x000000000044067b : test edx, edx ; je 0x440698 ; bsf rax, rdx ; ret
0x000000000044c2ea : test edx, edx ; je 0x44c301 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000047345a : test edx, edx ; je 0x473488 ; bsf rax, rdx ; ret
0x0000000000414423 : test edx, edx ; jne 0x414435 ; ret
0x00000000004160bf : test edx, edx ; jne 0x4160b5 ; ret
0x000000000047064f : test edx, edx ; jne 0x470645 ; ret
0x000000000047400a : test edx, edx ; jne 0x474005 ; ret
0x00000000004447d5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000458d18 : test esi, esi ; je 0x458d22 ; call rsi
0x0000000000473351 : test esi, esi ; jne 0x473360 ; xor rax, rax ; ret
0x0000000000474011 : test esi, esi ; jne 0x474020 ; xor rax, rax ; ret
0x000000000045e4e4 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004447ef : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042ad07 : test r8d, r8d ; je 0x42ad15 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004742a8 : test r9d, r9d ; jne 0x474269 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x00000000004229e0 : test rax, rax ; je 0x4229f9 ; lea rax, [rdx - 0x10] ; ret
0x000000000044a0a7 : test rax, rax ; je 0x44a0b4 ; ret
0x0000000000458e13 : test rax, rax ; je 0x458e1f ; call rax
0x000000000045a218 : test rax, rax ; je 0x45a224 ; call rax
0x0000000000484c8f : test rax, rax ; je 0x484ca9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004909a0 : test rax, rax ; je 0x4909b1 ; call rax
0x0000000000416fdb : test rax, rax ; jne 0x416fd6 ; ret
0x0000000000417f73 : test rax, rax ; jne 0x417f6e ; ret
0x000000000044a348 : test rbp, rbp ; jne 0x44a369 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aeb3 : test rbp, rbp ; jne 0x44aee1 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000048fe70 : test rbp, rbp ; jne 0x48fe61 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490a2a : test rbp, rbp ; jne 0x490a19 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f019 : test rdi, rdi ; jne 0x47eff6 ; ret
0x000000000044067a : test rdx, rdx ; je 0x440699 ; bsf rax, rdx ; ret
0x0000000000473459 : test rdx, rdx ; je 0x473489 ; bsf rax, rdx ; ret
0x0000000000414422 : test rdx, rdx ; jne 0x414436 ; ret
0x00000000004160be : test rdx, rdx ; jne 0x4160b6 ; ret
0x000000000047064e : test rdx, rdx ; jne 0x470646 ; ret
0x0000000000458d17 : test rsi, rsi ; je 0x458d23 ; call rsi
0x0000000000473350 : test rsi, rsi ; jne 0x473361 ; xor rax, rax ; ret
0x0000000000474010 : test rsi, rsi ; jne 0x474021 ; xor rax, rax ; ret
0x0000000000415173 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043818a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446f3c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446905 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447ac1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446909 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004470c8 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044716f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438176 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043815d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000446ea5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447a2b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000447013 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000446fe5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x00000000004479b2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000004468fb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004468ff : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447582 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447648 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447b3d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446914 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446918 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000438493 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043832c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043812e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004380f2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004385f5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446ab8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446a1b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000004468ba : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043e7d1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b308 : vzeroupper ; ret
0x000000000042b4e0 : vzeroupper ; xor eax, eax ; ret
0x0000000000493e55 : wait ; stc ; call qword ptr [rax]
0x000000000047f948 : wait ; test al, 0x23 ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000493ccc : wait ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000042a353 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043da7f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a443 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a263 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045fd92 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043f6cc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043eeec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f2dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eafc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d41c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000447d42 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042acab : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043e5df : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ddbf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d59f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044ec78 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042a803 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043ec9b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e0ff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429f93 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043d8df : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d0bf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e29f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042a9e3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a173 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000480aba : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048c5bc : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042abc3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004879ab : xchg byte ptr [rdi + 0x489066ff], dh ; add esp, 8 ; ret
0x00000000004a76d5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043f18c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e9ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fabc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494100 : xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x0000000000453eb3 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042aad3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d3ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a415 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a505 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a325 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045fda9 : xchg byte ptr [rdx], dl ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000041a915 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d535 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e235 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd55 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f08d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000454fa5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043f9bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004945f8 : xchg byte ptr [rsi], dh ; cli ; call qword ptr [rsi]
0x000000000042a083 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000436dff : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004af519 : xchg cl, bh ; call qword ptr [rbx]
0x000000000043e575 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d875 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d395 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e095 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f1dd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e9fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a235 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a055 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a145 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f65 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046ed69 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046c430 : xchg dword ptr [rax - 0x76ffffe3], edi ; ret 0x349
0x0000000000402c93 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b2b6 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a76d8 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044ed64 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a725f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000004628cb : xchg dword ptr [rbp - 0x77000000], eax ; ret 0x349
0x000000000046bae2 : xchg dword ptr [rbx - 0x76ffffdb], edi ; ret 0x349
0x00000000004a64cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048ac6a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000046cada : xchg dword ptr [rcx - 0x76ffffea], ecx ; ret 0x349
0x000000000046d725 : xchg dword ptr [rcx - 0x76fffff6], esp ; ret 0x349
0x000000000046d6fc : xchg dword ptr [rdi - 0x76fffff6], edx ; ret 0x349
0x000000000044b9de : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44b9dd ; pop rdx ; pop r10 ; ret
0x000000000046ef54 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004695ea : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004910f7 : xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000478900 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046b594 : xchg dword ptr [rsi - 0x76ffffd5], edi ; ret 0x349
0x0000000000461778 : xchg dword ptr [rsi - 0x76ffffef], eax ; ret 0x349
0x0000000000461c90 : xchg dword ptr [rsi - 0x76fffff5], edi ; ret 0x349
0x000000000046e213 : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x349
0x00000000004a666b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004b1251 : xchg eax, ebp ; cli ; call qword ptr [rcx]
0x00000000004b1239 : xchg eax, ebp ; cli ; call qword ptr [rdi]
0x00000000004a69a9 : xchg eax, ebp ; jge 0x4a698c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000045827b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044f98f : xchg eax, ebp ; ret
0x000000000048a850 : xchg eax, ebp ; ret 0x145
0x000000000047793a : xchg eax, ebp ; ret 0x2041
0x00000000004779fa : xchg eax, ebp ; ret 0x2044
0x0000000000449a7c : xchg eax, ebp ; ret 0x3948
0x000000000041d96b : xchg eax, ebp ; ret 0x8348
0x00000000004795c0 : xchg eax, ebp ; ret 0xc283
0x0000000000420b2d : xchg eax, ebp ; ret 0xd020
0x000000000040de95 : xchg eax, ebp ; ret 0xd021
0x0000000000463e7a : xchg eax, ebp ; ret 0xd120
0x000000000040fef2 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d051 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c3ca : xchg eax, ebp ; ret 0xf45
0x00000000004a7262 : xchg eax, ebp ; retf 0x33e6
0x000000000041843d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000493d01 : xchg eax, ebp ; stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000493c7d : xchg eax, ebp ; stc ; jmp rsi
0x0000000000493c81 : xchg eax, ebp ; stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004a86bc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000410e62 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046b657 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042be90 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004a904c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x0000000000443c6c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042d632 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a8563 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a853d
0x0000000000418e59 : xchg eax, ebx ; or dword ptr [rdx], ebp ; add bl, dh ; ret
0x000000000045ae58 : xchg eax, ebx ; ret 0x3948
0x0000000000411c5c : xchg eax, ebx ; ret 0x3949
0x0000000000420280 : xchg eax, ebx ; ret 0x3d83
0x0000000000470ef5 : xchg eax, ebx ; ret 0x840
0x000000000045b93d : xchg eax, ebx ; ret 0x854d
0x000000000041cc19 : xchg eax, ebx ; ret 0xffff
0x0000000000493c2d : xchg eax, ebx ; stc ; call rcx
0x000000000043e681 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004610ab : xchg eax, ecx ; ret 0xffff
0x000000000043cdaf : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000493c44 : xchg eax, ecx ; xchg eax, esi ; stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x000000000040fff2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048bdbc : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000414494 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4a95 : xchg eax, edi ; add byte ptr [rax], al ; cmp byte ptr [rdi], dh ; std ; jmp qword ptr [rcx]
0x00000000004b4ac9 : xchg eax, edi ; add byte ptr [rax], al ; je 0x4b4b0b ; std ; jmp rsp
0x000000000040d231 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004af081 : xchg eax, edi ; clc ; call qword ptr [rax]
0x00000000004af095 : xchg eax, edi ; clc ; jmp qword ptr [rsi]
0x0000000000494b75 : xchg eax, edi ; cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x00000000004ab829 : xchg eax, edi ; cmc ; call qword ptr [rdx]
0x00000000004ab83d : xchg eax, edi ; cmc ; call rsp
0x00000000004a6a15 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a69e3 ; mov ecx, 0x5b92ac50 ; retf
0x000000000046c585 : xchg eax, edi ; lodsb al, byte ptr [rsi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004243b5 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484701 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; retf
0x000000000044c2a5 : xchg eax, edi ; ret 0x26
0x000000000041eaab : xchg eax, edi ; ret 0x394c
0x000000000040058e : xchg eax, edi ; ret 0xda80
0x000000000041ef91 : xchg eax, edi ; ret 0xfae9
0x000000000041f579 : xchg eax, edi ; ret 0xfbe9
0x000000000046389d : xchg eax, edi ; retf
0x00000000004a737d : xchg eax, edi ; retf 0xe152
0x0000000000493c49 : xchg eax, edi ; stc ; call rcx
0x0000000000493c4d : xchg eax, edi ; stc ; dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x0000000000493e51 : xchg eax, edi ; stc ; inc eax ; wait ; stc ; call qword ptr [rax]
0x0000000000493ccd : xchg eax, edi ; stc ; jmp qword ptr [rax]
0x0000000000493d0d : xchg eax, edi ; stc ; lcall [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x00000000004a86bb : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a6b18 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047abaf : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004a83dd : xchg eax, edx ; jae 0x4a83ba ; push rsi ; pop rdx ; je 0x4a83af ; ret 0xacfc
0x0000000000494368 : xchg eax, edx ; or dl, bh ; call qword ptr [rdx]
0x0000000000494360 : xchg eax, edx ; or edx, edi ; call qword ptr [rdx]
0x00000000004a6a1c : xchg eax, edx ; pop rbx ; retf
0x0000000000405bc8 : xchg eax, edx ; ret 0x8548
0x0000000000482d05 : xchg eax, edx ; ret 0x8949
0x00000000004a64cf : xchg eax, edx ; ret 0xf869
0x00000000004467dd : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000493c25 : xchg eax, edx ; stc ; call rcx
0x000000000042ad0c : xchg eax, edx ; sub eax, edx ; ret
0x00000000004940e4 : xchg eax, esi ; adc bh, dl ; jmp qword ptr [rsi]
0x000000000042c190 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004343c3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000455cc1 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000447dd4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004945dc : xchg eax, esi ; cmp edx, edi ; jmp qword ptr [rsi]
0x00000000004a87c8 : xchg eax, esi ; jnp 0x4a8817 ; retf 0x99e0
0x000000000042c24d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c1ab : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448a31 : xchg eax, esi ; ret 0xc085
0x00000000004a8d6c : xchg eax, esi ; ret 0xcd11
0x0000000000448a8f : xchg eax, esi ; ret 0xd284
0x000000000042c1fc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000493c85 : xchg eax, esi ; stc ; call qword ptr [rsi]
0x0000000000493d05 : xchg eax, esi ; stc ; jmp rax
0x0000000000493c45 : xchg eax, esi ; stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x000000000046c477 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004b353c : xchg eax, esp ; cmp esp, -1 ; retf 0
0x00000000004a8f7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a8f10 ; ret 0x48f
0x00000000004662d2 : xchg eax, esp ; ret
0x0000000000450a8b : xchg eax, esp ; ret 0x1f0f
0x0000000000449b4b : xchg eax, esp ; ret 0x2044
0x0000000000480c6c : xchg eax, esp ; ret 0x3d
0x000000000041c5de : xchg eax, esp ; ret 0x3de9
0x000000000046d607 : xchg eax, esp ; ret 0x7f3c
0x00000000004848d1 : xchg eax, esp ; ret 0x950f
0x0000000000402be4 : xchg eax, esp ; ret 0xb60f
0x00000000004467e0 : xchg eax, esp ; ret 0xc085
0x0000000000449e71 : xchg eax, esp ; ret 0xc221
0x0000000000476495 : xchg eax, esp ; ret 0xc283
0x0000000000449988 : xchg eax, esp ; ret 0xca21
0x00000000004011c3 : xchg eax, esp ; ret 0xd284
0x000000000044f4b6 : xchg eax, esp ; ret 0xd5e9
0x000000000048c36b : xchg eax, esp ; ret 0xf45
0x00000000004008cd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000422a2a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000493cf5 : xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000493cf9 : xchg eax, esp ; stc ; jmp qword ptr [rax]
0x0000000000493c35 : xchg eax, esp ; stc ; jmp rcx
0x00000000004a69a3 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000480c60 : xchg eax, r8d ; mov eax, 0x15 ; syscall
0x00000000004821fa : xchg ebp, edi ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a49ed : xchg ebp, edi ; inc eax ; jbe 0x4a49f6 ; call qword ptr [rax]
0x00000000004a4961 : xchg ebp, edi ; ljmp [rax + 0x74] ; std ; jmp qword ptr [rax]
0x000000000046c722 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041a9e4 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004b4ac8 : xchg rax, rdi ; add byte ptr [rax], al ; je 0x4b4b0c ; std ; jmp rsp
0x00000000004a1b59 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d4f9 : xlatb ; add r9, r11 ; jmp r9
0x000000000047559f : xlatb ; ja 0x4755cc ; ret
0x0000000000446b43 : xlatb ; jb 0x446b4e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d51d : xlatb ; jmp rdi
0x00000000004a7543 : xlatb ; jo 0x4a75bf ; mov ebp, 0xfb67d10d ; ret
0x00000000004843f2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4843d8 ; mov rax, rsi ; ret
0x0000000000448c51 : xlatb ; mov eax, esi ; syscall
0x0000000000448c60 : xlatb ; mov eax, r8d ; syscall
0x00000000004a6950 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042ae34 : xlatb ; ret
0x00000000004a89e6 : xlatb ; ret 0x4e27
0x0000000000473057 : xlatb ; ret 0x94c
0x000000000042ae1f : xlatb ; ret 0xc085
0x0000000000425940 : xlatb ; ret 0xc148
0x000000000042baa4 : xlatb ; ret 0xe883
0x00000000004405f4 : xlatb ; ret 0xf66
0x000000000042bc68 : xlatb ; ret 0xff2d
0x000000000043ff2d : xlatb ; retf
0x00000000004a69a4 : xlatb ; retf 0xa1eb
0x0000000000473134 : xlatb ; retf 0xc148
0x00000000004732d2 : xlatb ; retf 0xc985
0x00000000004a78d2 : xlatb ; retf 0xdf7f
0x00000000004245c0 : xlatb ; retf 0xead3
0x00000000004731a5 : xlatb ; retf 0xfdc5
0x000000000042b201 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000473205 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042afe3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b522 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000440372 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000444796 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425826 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004256e6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000004255a6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000425466 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000425326 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004251e6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004250a6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000424f66 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000424e26 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000424ce6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000424ba6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424a66 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424926 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004247e6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000004246a6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000444792 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000472ff5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473006 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000493ed4 : xor ah, bl ; stc ; call qword ptr [rax]
0x000000000042439a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a64ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004a8566 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000459b12 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046ebab : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048d902 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a76aa : xor al, 0xd8 ; ret
0x0000000000458d15 : xor al, 0xf0 ; test rsi, rsi ; je 0x458d25 ; call rsi
0x000000000045288e : xor al, 0xf6 ; ret
0x0000000000494591 : xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x00000000004947c9 : xor al, 0xfa ; call qword ptr [rax]
0x000000000049470d : xor al, 0xfa ; call rsp
0x0000000000494709 : xor al, 0xfa ; ljmp [rsi] ; xor al, 0xfa ; call rsp
0x0000000000475fb9 : xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x0000000000494060 : xor al, cl ; stc ; inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x000000000042b06c : xor bl, al ; nop ; xor eax, eax ; ret
0x0000000000494d91 : xor bl, bh ; call rbx
0x000000000042af3d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004110c2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000447924 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045b5b8 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004b43ac : xor byte ptr [rax + 0x6600000], dl ; std ; jmp qword ptr [rdx]
0x000000000043fda1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000440202 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004110c3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000475d54 : xor byte ptr [rax + 1], cl ; retf
0x00000000004a3654 : xor byte ptr [rax - 0x502f0004], 0xfc ; call rax
0x000000000044a88a : xor byte ptr [rax - 0x75], cl ; jge 0x44a840 ; mov r12d, r14d ; call r15
0x000000000044095f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000473d8f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048a7b8 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471632 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044ce1f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402ec8 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000447925 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000041141b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e949 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e883 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000473fdc : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040e96f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000447e23 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b3a14 : xor byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, dl ; ret
0x000000000047156a : xor byte ptr [rax], al ; je 0x471575 ; ret
0x000000000048dd1e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000446d95 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000443c61 : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; syscall
0x0000000000493b98 : xor byte ptr [rbp - 7], ah ; jmp qword ptr [rax]
0x00000000004664d9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x00000000004147a6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f20a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046d53b : xor byte ptr [rbx - 0x78f0f608], al ; ret
0x0000000000495af4 : xor byte ptr [rbx - 5], ch ; call qword ptr [rax]
0x00000000004b26fc : xor byte ptr [rbx], 0 ; cmp ch, 0xfb ; jmp qword ptr [rbx]
0x000000000048a5d5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000478213 : xor byte ptr [rcx + 0x29], cl ; ret
0x000000000044cc2b : xor byte ptr [rcx + 0xf480004], dl ; ret
0x0000000000493e94 : xor byte ptr [rcx + rdi*8 - 0x6627f01], bl ; call rax
0x0000000000493df0 : xor byte ptr [rcx - 0x4d0f0007], dh ; stc ; call rax
0x0000000000494bb4 : xor byte ptr [rcx - 0x557f0006], ch ; cli ; call rax
0x0000000000403f0b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000493b74 : xor byte ptr [rcx - 7], bl ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000493b08 : xor byte ptr [rcx], 0xf9 ; jmp qword ptr [rax]
0x00000000004a69ae : xor byte ptr [rcx], ah ; retf
0x000000000041141c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412707 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040fff3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000493dbc : xor byte ptr [rdi - 0x46ef0007], dh ; stc ; jmp rax
0x0000000000493c04 : xor byte ptr [rdi - 0x6fdf0007], cl ; stc ; call qword ptr [rax]
0x00000000004945b0 : xor byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x00000000004afaac : xor byte ptr [rdi], al ; add byte ptr [rax], al ; sahf ; stc ; call qword ptr [rbx]
0x0000000000470710 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000493d50 : xor byte ptr [rdx - 0x4c0f0007], dh ; stc ; call rax
0x0000000000493e80 : xor byte ptr [rdx - 0x547f0007], ch ; stc ; call rax
0x0000000000494304 : xor byte ptr [rip + 0x4a0fffa], al ; cli ; call qword ptr [rax]
0x00000000004b0107 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042bf3f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000472fbc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042af3e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004a86be : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a699f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a694f
0x0000000000411e4d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047d913 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b127 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048cdae : xor cl, byte ptr [rax] ; jne 0x48cdd3 ; mov rax, qword ptr [rax] ; ret
0x0000000000405bf0 : xor cl, ch ; ret
0x0000000000459f79 : xor dh, dh ; ret 0x4002
0x00000000004947dd : xor dl, bh ; jmp rax
0x00000000004233fa : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047fcce : xor dl, dh ; jmp r11
0x000000000047fde0 : xor dl, dh ; ret
0x0000000000465aad : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a7956 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044bdef : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048ce1d : xor dword ptr [rax], ecx ; jne 0x48ce2c ; mov qword ptr [rax], rdx ; ret
0x000000000041baf9 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000423482 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000424141 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046b42e : xor eax, 0x24b9ed ; jmp rax
0x00000000004945c1 : xor eax, 0x3550fffa ; cli ; jmp rax
0x0000000000447353 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a39a : xor eax, 0x7d8b48 ; call r12
0x00000000004653ba : xor eax, 0x89ffffe6 ; ret
0x000000000040e946 : xor eax, dword ptr [0x30] ; call rax
0x00000000004a4960 : xor eax, dword ptr [rdi + 0x7468fffd] ; std ; jmp qword ptr [rax]
0x00000000004a49ec : xor eax, dword ptr [rdi + 0x76c0fffd] ; std ; call qword ptr [rax]
0x00000000004153c0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004161a4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045c669 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047559b : xor eax, eax ; cmp rdi, rdx ; ja 0x4755d0 ; ret
0x000000000044b9b7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000414350 : xor eax, eax ; jmp 0x41431a
0x0000000000475988 : xor eax, eax ; leave ; ret
0x0000000000472da2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405d8f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004143fb : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ec55 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004234cc : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412a72 : xor eax, eax ; pop rbx ; ret
0x000000000040eb9d : xor eax, eax ; ret
0x0000000000425b4e : xor eax, eax ; sub eax, ecx ; ret
0x000000000044946a : xor eax, eax ; syscall
0x0000000000414420 : xor eax, eax ; test rdx, rdx ; jne 0x414438 ; ret
0x000000000042b42c : xor eax, eax ; vzeroupper ; ret
0x00000000004588d8 : xor ebp, ecx ; ret 0xfffd
0x000000000048554d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x48556d
0x00000000004585d6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046434c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004575a9 : xor ecx, ecx ; call r15
0x0000000000473b99 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000493b09 : xor ecx, edi ; jmp qword ptr [rax]
0x000000000044bdcc : xor edi, dword ptr [rax] ; ret 0x2f75
0x00000000004011f8 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044a1c6 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041a7c1 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000449fdc : xor edi, edi ; syscall
0x000000000045d12d : xor edi, edx ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494711 : xor edi, edx ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x000000000040e880 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e483 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d04c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d03c
0x0000000000416d73 : xor edx, edx ; jmp rax
0x0000000000473b9b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000041f07c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000046116c : xor esi, esi ; jmp rax
0x00000000004575a8 : xor r9d, r9d ; call r15
0x000000000040e945 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e944 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004447b0 : xor rax, rax ; ret
0x000000000040e87f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e87e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 10512
