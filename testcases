target:		100 / 100

current:	17 / 100

# More challs: https://tcode2k16.github.io/blog/posts/picoctf-2019-writeup/binary-exploitation/#problem

0-bof_var:

csaw18_boi					pwned 
hackucf_bof1				pwned
hackucf_bof2				pwned 
hackucf_stack0pt1			pwned
protostar_stack0			pwned

tamu19_pwn1		
tw17_justdoit				(saving for later)



1-bof_func

csaw16_warmup 				pwned 
csaw18_getit 				pwned 
hackucf_ret					pwned 
protostar_stack4			pwned
utc_pwn2					pwned
pico19_overflow0			pwned 
tu19_thefirst				pwned
tamu19_pwn4
tu17_vulnchat	

2-bof_shellcode

tamu19_pwn3 				pwned
tu18_shellaeasy				pwned
hackucf_superstack			pwned
csaw17_pilot



3 - indirect_call

protostar_stack3			pwned
hackucf_bof3				pwned

These two sections are for later

4-bof_static

bkp16_simplecalc
dcquals16_feedme
dcquals19_speedrun1



5-bof_dynamic

csaw19_babyboi
csawquals17_svc
fb19_overfloat
hs19_storytime
utc19_shellme

Unit Testing

Challenge Entropy

x86
x64
mitgations
no mitigations

mitgations:	PIE, Stack Canary, RELRO, NX
0.) Overflow Vars
1	-	Basic Test
1	-	Basic Test w no mitigations
1	-	Overwrite  Three Vars, two equal, one not equal
1	-	Overwrite Var, with var past where you can write
1	- 	Overwrtite six vars, one equal, one not equal, one less than, one greater 
than, one less than or equal to, one greater than or equal to
1	-	^ that one, but no mitigations	
	-	Repeated Cmps against single variable
	-	More Repeated Cmps against single variable
	-	Nested cmps

	-	multiple inputs not tied to a bug, but are critical
	-	argv

mitgations:	RELRO, NX, PIE
1.) Call Func

1	-	Basic Test
1 	-	Basic Test no mitigations
1	-	Basic Test of Import System
1	-	Overflow with one var, call func
1	-	Overflow with three vars, call func
1	-	Baic test with multiple win funcs
1	-	Baic test with multiple false win funcs, one win func
1	-	Basic Test w pie infoleak
1	-	Basic Test of Import System w pie infoleak (x64 only, issues with calling plt in x86)
1	-	Overflow with one var, call func w pie infoleak
1	-	Overflow with three vars, call func w pie infoleak (x64 only, ghidra isn't analzying properly)
1	-	Baic test with multiple false win funcs, one win func w pie infoleak


	-	multiple inputs not tied to a bug, but are critical
	-	argv

mitgations:	RELRO, PIE
2.) Call Shellcode
1	- 	Basic Test
1	-	Basic test with scanf
1	-	Basic test, infoleak points to start of input plus offset
1	-	Have to place shellcode ahead of stack variable
1	- 	Have to place shellcode between two stack variables
1	-	Have to place shellcode after return address
1	-	Have to place shellcode in place of variables with cmps against them (cmps not critical)


	-	dynamic analyzer, stack infoleak from different function

	-	multiple inputs not tied to a bug, but are critical
	-	argv


mitigations: Stack Canary, RELRO, NX
3.) Call Indirect
1	-	Basic test
1	-	Indirect ptr on stack is compared
1	-	cmp to get to indirect ptr
1	-	Mutliple indirect ptrs
1	-	Multiple indirect ptrs, compares to get to them, and cmps against indirect ptrs
1	-	multiple false win funcs, one real win func


	-	multiple inputs not tied to a bug, but are critical
	-	argv input
	-	pie printf infoleak
	-	libc printf infoleak

4.)

5.) ret2libc
	-	Basic Test