target:		100 / 100

current:	48 / 100

# More challs: https://tcode2k16.github.io/blog/posts/picoctf-2019-writeup/binary-exploitation/#problem

hackucf_stack0pt1

08/10

0-bof_var:

csaw18_boi					pwned 
hackucf_bof1				pwned
hackucf_bof2				pwned 
protostar_stack0			pwned
protostar_stack1			pwned
MattE_bof1					pwned
MattE_bof2					pwned
tamu20_bbpwn				pwned

tamu19_pwn1		
tw17_justdoit				(saving for later)
angstrumctf16_overflow1


21/10

1-bof_func

csaw16_warmup 				pwned
csaw18_getit 				pwned
hackucf_ret					pwned
protostar_stack4			pwned
utc_pwn2					pwned
pico19_overflow0			pwned
tu19_thefirst				pwned
easyctfiv-rop1				pwned
sunshine19-ret2				pwned
nctf19_babypwn				pwned
nctf19_oneshot-onekill		pwned
Matte_bof3					pwned
tu16-bbys-first-elf			pwned
tu19_thefirst				pwned
pico18_bof1					pwned
encrypt19_pwn0				pwned
encrypt19_pwn1				pwned
HSCTF19_returntosender		pwned
redpwnctf19_hardmode		pwned
angstrum20_no-canary		pwned
247ctf_hidden 				pwned
hackucf_stack0pt1			(dynamic flag finding thing)
tamu19_pwn4
tu17_vulnchat	
tu18-shella-hard
angstrumctf_overflow2		(argc)
angstrumctf_overflow3		(argc)


05/10

2-bof_shellcode

tamu19_pwn3 				pwned
tu18_shellaeasy				pwned
hackucf_superstack			pwned
esecurity18_pwn01			pwned
csaw17_pilot				pwned

02/10


3 - indirect_call

protostar_stack3			pwned
hackucf_bof3				pwned
pico17_shells

These two sections are for later

4-bof_static

bkp16_simplecalc
dcquals16_feedme
dcquals19_speedrun1

09/10

5 - ret2libc

pico18_got-2-learn-libc		pwned
csaw19_babyboi				pwned
MattEctf_Rop1				pwned
MattEctf_Rop2				pwned
fireshell19_leakless		pwned
hs19_combo-chain-lite		pwned
encrypt19_pwn3				pwned
encrypt19_pwn2				pwned
xmas19_sn0wverflow			pwned
hs19_storytime	 (write leak)
hs19_combo-chain (printf leak)


dcquals19_speedrun002


04/05

6 - callInput

angstrom16_shellcode		pwned
pico19_handy-shellcode		pwned
tctf_turtlesh3lls			pwned
tctf_turtlesh3lls-3			pwned

00/10

7	-	FormatString

encrypt19_pwn4				pwned
protostar_fmt4				pwned
backdoor17_bbpwn			pwned

04/05

8	-	Remote Libc ID

247ctf_hidden 				pwned
247ctf_hidden-parameters	pwned
247ctf_executable-stack 	pwned
247ctf_non-executable-stack pwned


8	-	Local Libc ID

angstrum20_no-canary
pico19_overflow
encrypt19_pwn0
csaw18_getit
pioc18_bof1
csaw19_babyboi
utc_pwn2
MattECtf-rop2
fireshell19_leakless
encrypt19_pwn2
encrypt19_pwn3
xmas19_sn0wverflow


Unit Testing

Challenge Entropy

x86
x64
mitgations
no mitigations

mitgations:	PIE, Stack Canary, RELRO, NX
0.) Overflow Vars
1	-	Basic Test
1	-	Basic Test w no mitigations
1	-	Overwrite  Three Vars, two equal, one not equal
1	-	Overwrite Var, with var past where you can write
1	- 	Overwrtite six vars, one equal, one not equal, one less than, one greater 
than, one less than or equal to, one greater than or equal to
1	-	^ that one, but no mitigations	
1	-	Repeated Cmps against single variable
1	-	More Repeated Cmps against single variable
1	-	Nested cmps

	-	multiple inputs not tied to a bug, but are critical
	-	argv

mitgations:	RELRO, NX, PIE
1.) Call Func

1	-	Basic Test
1 	-	Basic Test no mitigations
1	-	Basic Test of Import System
1	-	Overflow with one var, call func
1	-	Overflow with three vars, call func
1	-	Baic test with multiple win funcs
1	-	Baic test with multiple false win funcs, one win func
1	-	Basic Test w pie infoleak
1	-	Basic Test of Import System w pie infoleak (x86 no pie)
1	-	Overflow with one var, call func w pie infoleak
1	-	Overflow with three vars, call func w pie infoleak (x64 only)
1	-	Baic test with multiple false win funcs, one win func w pie infoleak


	-	multiple inputs not tied to a bug, but are critical
	-	argv

mitgations:	RELRO, PIE
2.) Call Shellcode
1	- 	Basic Test
1	-	Basic Test no mitigations
1	-	Basic test with scanf
1	-	Basic test, infoleak points to start of input plus offset
1	-	Have to place shellcode ahead of stack variable
1	- 	Have to place shellcode between two stack variables
1 	- 	Have to place shellcode between two stack variables, no mitigations
1	-	Have to place shellcode after return address
1	-	Have to place shellcode in place of variables with cmps against them (cmps not critical)
1	-	Pie Infoleak and libc
1	-	Multiple pie / libc infoleaks

	-	dynamic analyzer, stack infoleak from different function

	-	multiple inputs not tied to a bug, but are critical
	-	argv


mitigations: SNX
3.) Call Indirect
1	-	Basic test
1	-	Basic test w libc infoleak, pie enabled
1	-	Basic test w pie inofleak, pie enabled (x64 only)
1	-	Indirect ptr on stack is compared
1	-	cmp to get to indirect ptr
1	-	Mutliple indirect ptrs
1	-	Multiple indirect ptrs, compares to get to them, and cmps against indirect ptrs
1	-	multiple false win funcs, one real win func


	-	multiple inputs not tied to a bug, but are critical
	-	argv input
	-	pie printf infoleak
	-	libc printf infoleak

4.)

5.) ret2libc
1	-	Basic Test
1	-	Basic Test No Pie
1	-	Basic test with single variable cmp
1	-	Only have 8 byte write over return address, test onegadget (x64 only)

6.) callInput
1	-	Call Input off from Stack
1	-	Call Input from allocated Space
1	-	Call Input off from stack with offset
1	-	Call Input from allocated Space with offset


7.) fmt string (32 bit only so far)
1	-	Basic Test
1	-	Basic Test no Binary Mitigations
1	-	Basic Test w offset
1	-	Basic Test w offset not aligned to specific stack spot

1	-	GOT Overwrite PIE w PIE Infoleak
1	-	GOT Overwrite to libc system/onegadet w Libc Infoleak
1	-	GOT overwrite to PIE system
1	-	GOT overwrite to PIE system w PIE

1	-	Return address overwrite to winfuc w Stack Infoleak
1	-	Return address overwrite to shellcode w Stack Infoleak



1	-	Basic Test, multiple win funcs, room for only two writes (correctFsGotWinFunc)
1	-	Basic Test, multiple win funcs W Pie (infoleak provided), room for only two writes (correctFsGotWinFunc)	
1	-	GOT overwrite to imported system, room for only two writes
1	-	GOT overwrite to imported system W Pie (infoleak provided), room for only two writes
1	-	GOT Overwrite to libc system/onegadet w Libc Infoleak, room for only two writes
1	-	Return address overwrite to winfuc w Stack Infoleak
1	-	Return address overwrite to shellcode w Stack Infoleak