Gadgets information
============================================================
0x000000000005eef3 : adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000067cd9 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000053666 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000018381f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183889 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000141218 : adc al, 0 ; add byte ptr [rax], al ; add edx, 1 ; syscall
0x0000000000117751 : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000adb58 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000404e6 : adc al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x14
0x000000000009f37f : adc al, 0 ; add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x000000000009bee0 : adc al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x00000000000a2a58 : adc al, 0 ; add rsp, 8 ; ret
0x000000000009a305 : adc al, 0 ; call 0x1165b4
0x000000000009fa65 : adc al, 0 ; call 0x9bc74
0x000000000009aa47 : adc al, 0 ; call qword ptr [rax]
0x000000000009f39a : adc al, 0 ; jae 0x9f3c8 ; lea rax, [rax - 8] ; ret
0x000000000009d27d : adc al, 0 ; mov qword ptr [rax], rdi ; ret
0x00000000000a2a13 : adc al, 0 ; mov qword ptr [rip + 0x14b1ec], rax ; ret
0x000000000009aba2 : adc al, 0 ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000a2a1a : adc al, 0 ; ret
0x000000000009bf48 : adc al, 0 ; syscall
0x000000000009aa8d : adc al, 0 ; xor edi, edi ; call qword ptr [rax]
0x000000000009be7b : adc al, 0 ; xor esi, esi ; mov rdi, rbp ; call 0x980d9
0x00000000001264cf : adc al, 0x11 ; test edx, edx ; jne 0x1264e6 ; ret
0x0000000000126dff : adc al, 0x11 ; test edx, edx ; jne 0x126e16 ; ret
0x00000000001694a5 : adc al, 0x13 ; jmp rdx
0x00000000000ad599 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000001870d0 : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x00000000001076a4 : adc al, 0x24 ; mov rax, qword ptr [rbp - 0x1e0] ; call rax
0x0000000000049b9f : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000be303 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000001876fd : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x0000000000047580 : adc al, 0x44 ; mov edi, esp ; mov eax, 0x81 ; syscall
0x00000000000d33c4 : adc al, 0x48 ; add esp, 0x28 ; ret
0x00000000001312b0 : adc al, 0x48 ; add esp, 0xd8 ; ret
0x00000000000bb830 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000000bc6a3 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000af87b : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x00000000000271d8 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000146337 : adc al, 0x4c ; mov edx, esp ; mov eax, 0x81 ; syscall
0x00000000001302d9 : adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000001302d7 : adc al, 0x74 ; adc al, 0x5b ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000f9ead : adc al, 0x83 ; ret
0x000000000002ce04 : adc al, 0x85 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000001470b8 : adc al, 0x87 ; or al, byte ptr [rax] ; syscall
0x00000000000de179 : adc al, 0x89 ; retf 0x2944
0x000000000014b886 : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000fca0f : adc al, 0x8e ; mov r13, rdi ; add rdx, rsi ; jmp rdx
0x0000000000152a36 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x000000000008af95 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000055fa1 : adc al, 0x91 ; add rdx, r9 ; jmp rdx
0x0000000000083fb4 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000184cb0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001833de : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001694a1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000005826d : adc al, 0x96 ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x0000000000043cbf : adc al, 0x97 ; add r10, r15 ; jmp r10
0x0000000000043b91 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000000ac197 : adc al, 0xa ; jmp r10
0x00000000000ad703 : adc al, 0xa ; sub eax, edx ; ret
0x000000000018724d : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x0000000000197700 : adc al, 0xa1 ; xor r8d, r13d ; add rdx, rcx ; jmp rdx
0x000000000012628f : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000db4da : adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000036e29 : adc al, 0xb7 ; mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x00000000000db460 : adc al, 0xb9 ; add rdx, r9 ; jmp rdx
0x00000000000586e1 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000586e5 : adc al, 0xc6 ; xor eax, eax ; ret
0x0000000000163ee8 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000163f18 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000130d98 : adc al, 0xdb ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000becf8 : adc al, 0xe ; cmp rdi, rdx ; jb 0xbed0b ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001814f1 : adc al, 0xe ; sub eax, edx ; ret
0x000000000018829a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000014b6c6 : adc al, 0xf ; retf 0xd189
0x00000000000bc219 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000140dd7 : adc al, 0xf ; xchg eax, ebp ; ret 0x2144
0x00000000000cb0c8 : adc al, 0xf ; xchg eax, ebx ; ret
0x00000000000ccdc0 : adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x0000000000145f0f : adc al, 0xf2 ; call 0xa21a4
0x00000000000f35df : adc al, 0xf6 ; ret 0x7580
0x000000000005fe22 : adc al, 0xf8 ; add cl, ch ; ret 0xfff6
0x0000000000033f9c : adc al, 0xf8 ; test rdx, rdx ; je 0x33fac ; call rdx
0x0000000000135488 : adc al, 0xff ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000e0516 : adc al, 0xff ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x000000000004c0f7 : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195f88 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000001226c4 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000ab9b6 : adc al, 7 ; cmp edx, esi ; je 0xab9b6 ; ret
0x0000000000054fb9 : adc al, 9 ; ret 0x8d74
0x00000000001839c7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183a31 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010f474 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b336e : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000810e8 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00000000000cd808 : adc al, byte ptr [rax] ; syscall
0x00000000000b6b04 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000014f912 : adc al, byte ptr [rcx] ; or al, byte ptr [rax] ; syscall
0x0000000000039979 : adc al, byte ptr [rdx*4 - 0x763f6af1] ; ret
0x000000000018d9aa : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018a33f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cd807 : adc al, byte ptr es:[rax] ; syscall
0x00000000000cd205 : adc al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000015f125 : adc al, ch ; push rbp ; retf 0xfffb
0x000000000003f557 : adc al, ch ; ret
0x000000000008db68 : adc al, ch ; ret 0xf977
0x0000000000132aed : adc al, ch ; ret 0xfff5
0x000000000014c27f : adc al, ch ; retf
0x00000000000517d0 : adc al, ch ; retf 0x7b
0x0000000000139134 : adc bh, dh ; ret 0x8080
0x000000000014b5bb : adc bl, al ; mov dword ptr [rsi], 8 ; ret
0x0000000000044f5c : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000128475 : adc bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b9c95 : adc bl, ch ; call 0xffffffffc3dc25ea
0x00000000000b9ba5 : adc bl, ch ; call 0xffffffffc40424fa
0x00000000000bcce5 : adc bl, ch ; call 0xffffffffc404563a
0x00000000000593f6 : adc bl, ch ; jge 0x5944c ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000162f38 : adc bl, ch ; retf
0x00000000000badf6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba146 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba1b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba117 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000001263fa : adc bl, dl ; call 0xffffffffc314448a
0x0000000000126d3a : adc bl, dl ; call 0xffffffffc3144dca
0x00000000000badf5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba145 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000014b5ba : adc bl, r8b ; mov dword ptr [rsi], 8 ; ret
0x0000000000115bd3 : adc byte ptr [r13 + 0x41], r11b ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011ded0 : adc byte ptr [r13 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 4
0x0000000000048668 : adc byte ptr [r15], cl ; sahf ; ret 0x3949
0x0000000000048230 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000059efb : adc byte ptr [r15], r9b ; popfq ; ret 0x3948
0x000000000003a79b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000012c58c : adc byte ptr [r8 + 0x39], cl ; retf 0xed75
0x00000000000f4c34 : adc byte ptr [r8 + 0x39], r9b ; retf
0x0000000000162e0b : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000efa14 : adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000eb052 : adc byte ptr [r8 + 1], r9b ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000008c7b2 : adc byte ptr [r8 + 1], r9b ; ret
0x0000000000066aa8 : adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000011f905 : adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x000000000017bdda : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000015eeef : adc byte ptr [r8 - 0x77], r9b ; ret 0x2548
0x0000000000096ad3 : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000144539 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000be27c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be29e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2dc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be35e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000d44a7 : adc byte ptr [r9], r13b ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xb70f
0x00000000001228ef : adc byte ptr [rax + 0x130], bh ; syscall
0x00000000001176af : adc byte ptr [rax + 0x13], bh ; syscall
0x000000000004b51f : adc byte ptr [rax + 0x13e], bh ; syscall
0x0000000000141216 : adc byte ptr [rax + 0x14], bh ; add edx, 1 ; syscall
0x000000000011774f : adc byte ptr [rax + 0x14], bh ; syscall
0x000000000011bbef : adc byte ptr [rax + 0x1a], bh ; syscall
0x00000000000e5c8f : adc byte ptr [rax + 0x22], bh ; syscall
0x00000000000e5d0f : adc byte ptr [rax + 0x23], bh ; syscall
0x000000000009c742 : adc byte ptr [rax + 0x29], cl ; ret 0x3948
0x0000000000061a95 : adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000ba75a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000af0f6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000000b9f6a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x00000000000d3a13 : adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000001233bf : adc byte ptr [rax + 0x2a], bh ; syscall
0x00000000001232ef : adc byte ptr [rax + 0x2b], bh ; syscall
0x00000000001237ff : adc byte ptr [rax + 0x2e], bh ; syscall
0x000000000012369f : adc byte ptr [rax + 0x2f], bh ; syscall
0x000000000014d843 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000a0273 : adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x00000000000cc0d8 : adc byte ptr [rax + 0x39], cl ; fisttp word ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000e8b11 : adc byte ptr [rax + 0x39], cl ; ret
0x000000000015b930 : adc byte ptr [rax + 0x39], cl ; ret 0x3375
0x00000000000481d8 : adc byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000000e8f3e : adc byte ptr [rax + 0x39], cl ; ret 0xec75
0x00000000000599fd : adc byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000003a7dc : adc byte ptr [rax + 0x39], cl ; ret 0xee75
0x00000000000fb377 : adc byte ptr [rax + 0x39], cl ; ret 0xf375
0x00000000000a3e06 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000000f4c35 : adc byte ptr [rax + 0x39], cl ; retf
0x000000000012c58d : adc byte ptr [rax + 0x39], cl ; retf 0xed75
0x000000000009b596 : adc byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000009b595 : adc byte ptr [rax + 0x39], r9b ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000011846f : adc byte ptr [rax + 0x4a], bh ; syscall
0x000000000011852f : adc byte ptr [rax + 0x4b], bh ; syscall
0x0000000000111c2f : adc byte ptr [rax + 0x55], bh ; syscall
0x0000000000162e0c : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000efa15 : adc byte ptr [rax + 0x63], cl ; ret
0x000000000010314f : adc byte ptr [rax + 0x63], cl ; retf
0x00000000000e5b81 : adc byte ptr [rax + 0xf7], bh ; syscall
0x000000000005733c : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011a5bf : adc byte ptr [rax + 1], bh ; ret
0x000000000011130f : adc byte ptr [rax + 1], bh ; syscall
0x00000000000d251e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000eb053 : adc byte ptr [rax + 1], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000019a7ae : adc byte ptr [rax + 1], cl ; out dx, eax ; call r12
0x0000000000059b8e : adc byte ptr [rax + 1], cl ; ret
0x00000000000af876 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008be92 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000012ee61 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000e1107 : adc byte ptr [rax + 1], cl ; retf 0x8b49
0x0000000000153a7d : adc byte ptr [rax + 1], dil ; ret
0x0000000000111aaf : adc byte ptr [rax + 3], bh ; syscall
0x0000000000115bef : adc byte ptr [rax + 7], bh ; syscall
0x00000000000654c5 : adc byte ptr [rax + rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000be484 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be382 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be300 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000138fe4 : adc byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000012628c : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001264e4 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000001264e3 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000012c589 : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; retf 0xed75
0x00000000000271db : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000149cb1 : adc byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdi, rbp ; call rcx
0x0000000000066aa9 : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014b87d : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000b994c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000159117 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000089ecb : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000089f0d : adc byte ptr [rax - 0x77], cl ; push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000089ecf : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000329d4 : adc byte ptr [rax - 0x77], cl ; ret 0x2548
0x00000000000d3ae7 : adc byte ptr [rax - 0x77], cl ; ret 0x6348
0x000000000005a9c3 : adc byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000000a19bc : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000009afab : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000966b4 : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000014c2ce : adc byte ptr [rax - 0x77], cl ; ret 0x8eeb
0x000000000012ad54 : adc byte ptr [rax - 0x77], cl ; ret 0x950f
0x0000000000130636 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000062066 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000096ad4 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000012afde : adc byte ptr [rax - 0x77], cl ; ret 0xff41
0x000000000008a73a : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000010d7af : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rcx - 0x75], 0x3e ; call 0x10a289
0x0000000000100fea : adc byte ptr [rax - 0x77], r9b ; ret 0x8948
0x00000000000b56f4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000fd8bf : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xc675
0x00000000000fd8be : adc byte ptr [rax - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xc675
0x000000000009c60b : adc byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000679c1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000f4014 : adc byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000099513 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000114076 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000af5e4 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000015b108 : adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000012b793 : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000011d14d : adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000001569e2 : adc byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x0000000000183472 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000181540 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000018508c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x00000000001816e0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000000fb351 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000001887e8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000000f5c24 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000185c41 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183bd1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011664e : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000014b512 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000149c05 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000bf382 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000066119 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000116b0a : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000adfd8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000041ccd : adc byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x0000000000065734 : adc byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x0000000000071260 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000174378 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000d92fd : adc byte ptr [rax], al ; mov rdi, r13 ; call 0x255a7
0x0000000000055c51 : adc byte ptr [rax], al ; ret
0x00000000000e19fc : adc byte ptr [rax], al ; syscall
0x00000000000be27d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be29f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2dd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be35f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be461 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000065928 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a63d3 : adc byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x00000000000a7933 : adc byte ptr [rbp + 0x39], cl ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000000a9e84 : adc byte ptr [rbp + 0x39], cl ; retf 0x894c
0x0000000000115bd4 : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003345a : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000001444bb : adc byte ptr [rbp + 0x5b0875c0], al ; pop rbp ; pop r12 ; ret
0x0000000000142472 : adc byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8348
0x000000000014d897 : adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x000000000011dcbd : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x3e] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dce9 : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x69] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011ded1 : adc byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 4
0x000000000011df81 : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 0x3b], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000011dfaa : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 0x7d], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000057c93 : adc byte ptr [rbp - 0x7c], al ; ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x00000000000a3289 : adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x000000000009415f : adc byte ptr [rbx + 0x1593392d], al ; add byte ptr [rcx], al ; ret
0x0000000000065c68 : adc byte ptr [rbx + 0x24182444], cl ; cmp al, 0xc ; ret 0x4489
0x0000000000065648 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000e23dc : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2011 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r15 ; ret
0x00000000000841f7 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001538d7 : adc byte ptr [rbx + 0x78ff853b], cl ; ret 0xbde8
0x0000000000114fce : adc byte ptr [rbx + r9*4 + 0x63], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000114fcf : adc byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000009670a : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000008a7be : adc byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004d230 : adc byte ptr [rbx - 0x6af069c4], cl ; ret 0x8941
0x000000000013f5fe : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000010285f : adc byte ptr [rbx - 0x76f3dbb4], cl ; ret 0x8b4c
0x0000000000063449 : adc byte ptr [rbx - 0x7bf0cf02], al ; ret 0xfff1
0x000000000014d850 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000062dda : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000000a839e : adc byte ptr [rcx + 0x39], cl ; ret 0xec75
0x0000000000147c32 : adc byte ptr [rcx + 0x5c], al ; ret
0x000000000013a767 : adc byte ptr [rcx + 0xf], al ; mov dh, 0xc ; and al, 0x88 ; or dh, dh ; ret 0xf02
0x00000000000aaefc : adc byte ptr [rcx + 1], cl ; fimul dword ptr [rcx + 0x39] ; retf 0xf41
0x0000000000042653 : adc byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret
0x00000000000c0a6e : adc byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000a0695 : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000047464 : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033482 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000843ab : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155588 : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop r12 ; ret
0x00000000001105ce : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0x000000000004a02f : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c752 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x000000000009fff7 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c55b : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000153cc3 : adc byte ptr [rcx + rcx*4 - 1], cl ; call rcx
0x00000000000be3e2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be3c2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000004af9e : adc byte ptr [rcx - 0x3f76bbea], cl ; ret
0x000000000002b18f : adc byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; retf 0x2948
0x0000000000098465 : adc byte ptr [rcx - 0x77], al ; ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x000000000015d5dc : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000141ea1 : adc byte ptr [rcx - 0x77], cl ; ret 0x3948
0x000000000009ad4c : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000056d1f : adc byte ptr [rcx - 0x7d], cl ; ret
0x0000000000181573 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000185117 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011026a : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x0000000000163d72 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x0000000000155870 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123015 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000015ab9f : adc byte ptr [rcx], al ; imul ebp, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000edefa : adc byte ptr [rcx], bh ; retf
0x00000000000d70cf : adc byte ptr [rcx], ch ; ret 0x5589
0x000000000009670d : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000d44a8 : adc byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xb70f
0x00000000000a4d7e : adc byte ptr [rcx], cl ; ret 0x3949
0x0000000000054fb3 : adc byte ptr [rcx], cl ; retf 0x5489
0x000000000012ae6f : adc byte ptr [rcx], dh ; idiv byte ptr [rdi + 0x2000004] ; call rax
0x0000000000031594 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000371f9 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000abc2d : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abc0f : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x000000000009113c : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x0000000000059efc : adc byte ptr [rdi], cl ; popfq ; ret 0x3948
0x000000000014b63e : adc byte ptr [rdi], cl ; retf 0x5089
0x000000000014b742 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000014b68a : adc byte ptr [rdi], cl ; retf 0xd189
0x000000000014ba50 : adc byte ptr [rdi], cl ; retf 0xd789
0x000000000005a56e : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000048669 : adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x000000000012bacf : adc byte ptr [rdi], cl ; test byte ptr [rdx - 0x7d000000], ch ; ret 0x8801
0x00000000000f7fc9 : adc byte ptr [rdi], cl ; test dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax + 0x63], cl ; retf
0x000000000017b878 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001940b3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000182761 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182851 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182671 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018b49b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000189f9f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018b19f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a89f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018ab9f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a297 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001830b9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000182c11 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001823a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000182df1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182581 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000182fd1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182ee1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182823 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182913 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182733 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a544 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b144 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b444 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018ab44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a844 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000018a23c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182491 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001863bd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001861dd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186bb5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185ad5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001869d5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182643 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182463 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182553 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182373 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000003a79c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000048231 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000111f52 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000005a56d : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000001699aa : adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000b336d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019160b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6421 : adc byte ptr [rip + 0x3949eb74], al ; ret 0x1674
0x00000000001914ba : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000190ab5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010aec0 : adc byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8948
0x0000000000190eb5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x190e89
0x0000000000190f33 : adc byte ptr [rsi + 0xf], ah ; jmp 0x190f07
0x00000000001913c5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191399
0x0000000000191443 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191417
0x00000000001924e5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1924b9
0x0000000000192563 : adc byte ptr [rsi + 0xf], ah ; jmp 0x192537
0x00000000001929f5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1929c9
0x0000000000192a73 : adc byte ptr [rsi + 0xf], ah ; jmp 0x192a47
0x0000000000190eb0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190e8e
0x0000000000190f2e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190f0c
0x00000000001913c0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19139e
0x000000000019143e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19141c
0x00000000001924e0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1924be
0x000000000019255e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19253c
0x00000000001929f0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1929ce
0x0000000000192a6e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192a4c
0x00000000000ac2e5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000b014b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000008d01a : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xff3
0x00000000000ba32f : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000ba32e : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000176f0d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d346e : adc byte ptr [rsp - 0x10], al ; ret
0x000000000018a547 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004c716 : adc ch, al ; je 0x4c6af ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000004c246 : adc ch, al ; xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000006249c : adc cl, bl ; in eax, 0xdf ; loopne 0x62431 ; ret
0x00000000000ac0c9 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000d41ac : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x0000000000119353 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000081b27 : adc cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000ab54e : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ccdf9 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000000a880d : adc cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000b9b95 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000055b60 : adc cl, byte ptr [rcx] ; retf 0xbe0f
0x00000000000da646 : adc cl, ch ; retf 0xffd6
0x000000000014a2f7 : adc dh, dh ; ret 0x7401
0x000000000012971a : adc dl, byte ptr [rsp + rcx] ; syscall
0x00000000001539cb : adc dword ptr [rax + 0x20], edx ; ret
0x0000000000153998 : adc dword ptr [rax + 0x30], eax ; ret
0x000000000008ad3a : adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000004dc3f : adc dword ptr [rax + 0x63], ecx ; retf
0x00000000000c8ef4 : adc dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001502b0 : adc dword ptr [rax + 8], eax ; ret
0x000000000008c449 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000026a8e : adc dword ptr [rax - 0x77], ecx ; add eax, 0x1c95b2 ; ret
0x00000000000865ce : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000011c094 : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ab2a7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000188adb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000183b67 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185ad9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010f3c4 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000a73cc : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000ade58 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a75f2 : adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x00000000000d3305 : adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000e5dd4 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000009c1ed : adc dword ptr [rax], eax ; call 0x98464
0x000000000009ba79 : adc dword ptr [rax], eax ; call 0x984c4
0x00000000000a0a4d : adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0xa0a0c
0x00000000000d4dcd : adc dword ptr [rax], eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089f13 : adc dword ptr [rax], eax ; ret
0x00000000000d5a14 : adc dword ptr [rax], eax ; syscall
0x00000000000e1c22 : adc dword ptr [rax], ecx ; add byte ptr [rcx + rcx*4 - 8], cl ; call rax
0x000000000009582f : adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x00000000000bfe7d : adc dword ptr [rbp - 0x6b], esi ; test edx, edx ; jne 0xbfe67 ; ret
0x000000000012f4f1 : adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012f60c : adc dword ptr [rbp - 0x78], ebx ; call r9
0x000000000012f83e : adc dword ptr [rbp - 0x78], ecx ; call rax
0x000000000012fb34 : adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012f6df : adc dword ptr [rbp - 0x78], edi ; call rcx
0x000000000012f464 : adc dword ptr [rbp - 0x78], edx ; call rcx
0x000000000012fa66 : adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012f556 : adc dword ptr [rbp - 0x78], esp ; call rax
0x00000000000916b3 : adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000a1ab1 : adc dword ptr [rbx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000916b7 : adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000a172f : adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x00000000000a1655 : adc dword ptr [rbx + 0x38], eax ; movsxd rdi, esi ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000095076 : adc dword ptr [rbx + 0x38], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094b36 : adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000917b6 : adc dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004b308 : adc dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bef7c : adc dword ptr [rbx], eax ; ret
0x00000000000beef5 : adc dword ptr [rbx], esp ; ret
0x00000000001932eb : adc dword ptr [rcx + 7], edi ; ret
0x00000000000d7bde : adc dword ptr [rcx + rcx*4 - 0x40], ecx ; add rsp, 8 ; ret
0x00000000000beef0 : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000cb782 : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4c10
0x00000000000cb01a : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4d10
0x0000000000192f86 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000192f4a : adc dword ptr [rcx - 1], edi ; ret
0x00000000000f42b3 : adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000ab980 : adc dword ptr [rcx], edi ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc839
0x000000000015a8ee : adc dword ptr [rdi + 0x18], eax ; ret
0x000000000010f566 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bef77 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010f56a : adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000046e59 : adc dword ptr [rdi + 0x58], eax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000046e5d : adc dword ptr [rdi + 0x68], eax ; ret
0x000000000010f9aa : adc dword ptr [rdi + 0x78], edi ; ret
0x000000000011036f : adc dword ptr [rdi + 0xf8], edi ; ret
0x0000000000094a6c : adc dword ptr [rdi + 8], eax ; ret
0x000000000013f9e4 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000bec97 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000bee59 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bee5e : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000bee36 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000bee3b : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000019344d : adc dword ptr [rdi - 8], edi ; ret
0x000000000005ae85 : adc dword ptr [rdi], eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000456b5 : adc dword ptr [rdi], eax ; movd xmm0, esi ; ret
0x00000000000bec94 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000047246 : adc dword ptr [rdi], eax ; ret
0x00000000001936a0 : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000002a7ff : adc dword ptr [rdx + 0x48], eax ; ret
0x00000000001539dc : adc dword ptr [rdx], ebx ; ret
0x00000000001502c4 : adc dword ptr [rdx], ecx ; ret
0x00000000001530cc : adc dword ptr [rdx], edx ; ret
0x00000000001539bc : adc dword ptr [rdx], esp ; ret
0x000000000010f95a : adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000061f89 : adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000001937d3 : adc dword ptr [rsi + 3], edx ; ret
0x0000000000193870 : adc dword ptr [rsi + 7], edx ; ret
0x0000000000103707 : adc dword ptr [rsi + 8], eax ; ret
0x000000000014b59c : adc dword ptr [rsi + 8], ecx ; ret
0x0000000000193672 : adc dword ptr [rsi - 1], edx ; ret
0x0000000000158215 : adc dword ptr [rsi], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000004acc4 : adc dword ptr [rsi], eax ; sub ecx, 1 ; jns 0x4ac92 ; xor eax, eax ; ret
0x0000000000116b7e : adc dword ptr [rsp + 0x11], eax ; syscall
0x000000000015acea : adc dword ptr [rsp + 0x18], eax ; call r8
0x0000000000157196 : adc dword ptr [rsp + 0xb8], ebp ; call rax
0x0000000000157102 : adc dword ptr [rsp + 0xd8], eax ; call rax
0x000000000019a74a : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000183b66 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000993b3 : adc eax, 0x10894800 ; ret
0x00000000000d251a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000c113f : adc eax, 0x1171c ; cmovne rax, rdx ; ret
0x00000000000a229f : adc eax, 0x12e7c ; cmovne rax, rdx ; ret
0x00000000000a28af : adc eax, 0x1448c ; cmovne rax, rdx ; ret
0x0000000000098088 : adc eax, 0x152243 ; ret
0x0000000000161e29 : adc eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000000473e1 : adc eax, 0x1a2dc6 ; ret
0x00000000000a3bad : adc eax, 0x1b0be ; cmove rax, rdx ; ret
0x00000000000a383d : adc eax, 0x1b40e ; cmove rax, rdx ; ret
0x00000000000a36dd : adc eax, 0x1b58e ; cmove rax, rdx ; ret
0x00000000000358b4 : adc eax, 0x1b6f24 ; ret
0x00000000000256f9 : adc eax, 0x1ca7b2 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000579db : adc eax, 0x2474ff00 ; or byte ptr [rax + 0xf], cl ; retf 0x854d
0x0000000000057b0a : adc eax, 0x2474ff00 ; sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x000000000009633d : adc eax, 0x2d8d4800 ; ret 0x1562
0x000000000015547e : adc eax, 0x3a2d ; call qword ptr [rax]
0x00000000000d220a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000005dede : adc eax, 0x3d8d4800 ; ret
0x0000000000130d97 : adc eax, 0x3db14 ; cmovne rax, rdx ; ret
0x0000000000130c17 : adc eax, 0x3dcb4 ; cmovne rax, rdx ; ret
0x0000000000130cd7 : adc eax, 0x406e4 ; cmovne rax, rdx ; ret
0x000000000009870d : adc eax, 0x48a77600 ; add esp, 8 ; ret
0x00000000000e1657 : adc eax, 0x48eb894c ; mov edi, ebp ; call r12
0x000000000011deaa : adc eax, 0x49000007 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000019bf73 : adc eax, 0x50f0005 ; pop rbx ; ret
0x000000000008ee3d : adc eax, 0x58d4800 ; ret 0x15d7
0x000000000008fb02 : adc eax, 0x58d4800 ; std ; retf 0x15
0x000000000019bf2a : adc eax, 0x5b010005 ; ret
0x0000000000097d74 : adc eax, 0x5b050f00 ; ret
0x000000000010f7ba : adc eax, 0x5bc33948 ; setl al ; ret
0x0000000000130d76 : adc eax, 0x5dd85 ; cmove rax, rdx ; ret
0x0000000000130cb6 : adc eax, 0x5de65 ; cmove rax, rdx ; ret
0x0000000000130bf6 : adc eax, 0x5df25 ; cmove rax, rdx ; ret
0x00000000000baaf8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x0000000000130dc1 : adc eax, 0x62aba ; cmove rax, rdx ; ret
0x0000000000130d01 : adc eax, 0x62b9a ; cmove rax, rdx ; ret
0x0000000000130c41 : adc eax, 0x62c5a ; cmove rax, rdx ; ret
0x0000000000130e81 : adc eax, 0x62faa ; cmove rax, rdx ; ret
0x00000000000bc24c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00000000001836f1 : adc eax, 0x83480000 ; ret 0xe910
0x000000000007a042 : adc eax, 0x83490000 ; ret 0xbe01
0x0000000000107b07 : adc eax, 0x890003f0 ; ret
0x0000000000050a39 : adc eax, 0x89480000 ; retf 0xf66
0x0000000000167d88 : adc eax, 0x894d0000 ; retf
0x000000000015fcbb : adc eax, 0x8b7d0 ; add rsp, 8 ; ret
0x000000000015637d : adc eax, 0x997be ; mov qword ptr fs:[rax], rdx ; ret
0x000000000010a10e : adc eax, 0xbe0f4890 ; retf 0x8348
0x00000000000a234f : adc eax, 0xc45ec ; cmovne rax, rdx ; ret
0x0000000000045dec : adc eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a2919 : adc eax, 0xc5292 ; cmovne rax, rdx ; ret
0x00000000000a3b67 : adc eax, 0xcad74 ; cmovne rax, rdx ; ret
0x00000000000a37f7 : adc eax, 0xcb0c4 ; cmovne rax, rdx ; ret
0x00000000000a3697 : adc eax, 0xcdd34 ; cmovne rax, rdx ; ret
0x00000000000a3a42 : adc eax, 0xd04c9 ; cmovne rax, rdx ; ret
0x00000000000a39a2 : adc eax, 0xd0549 ; cmovne rax, rdx ; ret
0x00000000000a3a92 : adc eax, 0xd25d9 ; cmovne rax, rdx ; ret
0x00000000000a39f2 : adc eax, 0xd2659 ; cmovne rax, rdx ; ret
0x00000000000bff10 : adc eax, 0xd5b8b ; cmovne rax, rdx ; ret
0x00000000000a23cf : adc eax, 0xd61ec ; cmovne rax, rdx ; ret
0x00000000000a297f : adc eax, 0xd73ec ; cmovne rax, rdx ; ret
0x00000000000a38ef : adc eax, 0xd8ffc ; cmovne rax, rdx ; ret
0x00000000000a394f : adc eax, 0xda7ac ; cmovne rax, rdx ; ret
0x00000000000642c3 : adc eax, 0xdb0f6600 ; ret 0x290f
0x00000000000aae78 : adc eax, 0xe0c14901 ; or byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000d2c9a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000a3b46 : adc eax, 0xeafe5 ; cmove rax, rdx ; ret
0x00000000000a37d6 : adc eax, 0xeb335 ; cmove rax, rdx ; ret
0x00000000000a3676 : adc eax, 0xeb4b5 ; cmove rax, rdx ; ret
0x00000000000a3b91 : adc eax, 0xefd1a ; cmove rax, rdx ; ret
0x00000000000a3821 : adc eax, 0xf006a ; cmove rax, rdx ; ret
0x00000000000a36c1 : adc eax, 0xf01ea ; cmove rax, rdx ; ret
0x00000000000a3781 : adc eax, 0xf06ba ; cmove rax, rdx ; ret
0x00000000000a3600 : adc eax, 0xf0d2b ; cmovne rax, rdx ; ret
0x00000000000a22f2 : adc eax, 0xf1d19 ; cmovne rax, rdx ; ret
0x00000000000bf1e8 : adc eax, 0xf880272 ; ret
0x0000000000130ddd : adc eax, 0xfff8de5e ; cmove rax, rdx ; ret
0x0000000000130d1d : adc eax, 0xfff8df3e ; cmove rax, rdx ; ret
0x0000000000130c5d : adc eax, 0xfff8dffe ; cmove rax, rdx ; ret
0x000000000007e268 : adc eax, 0xfffffb2c ; add rax, rdx ; jmp rax
0x0000000000064696 : adc eax, 0xfffffff ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf40
0x0000000000066abe : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000de444 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000018883e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001858f9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001176b1 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000adcd8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000285c2 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000029622 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x0000000000028d15 : adc eax, dword ptr [rax] ; mov rsi, qword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x000000000007a919 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rbx ; jmp rax
0x000000000007a974 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rbx ; jmp rax
0x0000000000098388 : adc eax, dword ptr [rbp + 1] ; sbb byte ptr [r8 + 0x39], cl ; ret
0x00000000000a8095 : adc eax, dword ptr [rbp - 0x77] ; ret 0x8b4b
0x00000000000bfec4 : adc eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000122824 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000b6b08 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000018a23f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000058b5d : adc eax, eax ; ret
0x00000000000db5de : adc eax, ecx ; retf 0x3104
0x0000000000058c96 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000000889b1 : adc ebp, ebx ; retf
0x000000000013394e : adc ebx, ebp ; ret 0x8b48
0x00000000000a51f9 : adc ecx, dword ptr [rax + 0x29] ; retf 0x5ee8
0x00000000000bcbbc : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x000000000004be4f : adc ecx, dword ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x000000000004a5b8 : adc ecx, dword ptr [rax - 0x75] ; jge 0x4a5ca ; call rax
0x0000000000085bdc : adc ecx, dword ptr [rax - 0x75] ; mov edi, 0xe0 ; jmp rax
0x0000000000049cb1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000065c47 : adc ecx, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000019a5ec : adc ecx, dword ptr [rbp - 0x77] ; ret 0x94d
0x00000000000327a4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000006ec92 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x0000000000102e34 : adc ecx, dword ptr [rcx + 0x6c0f66d0] ; ret
0x00000000000f093b : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4d10
0x000000000014b627 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000b6cd4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000b6cf4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000b6d14 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000b6b5e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000006e241 : adc ecx, ebp ; pop rsp ; retf 0xffff
0x000000000013eccf : adc edi, dword ptr [rax - 1] ; ret
0x00000000001694a6 : adc edi, dword ptr [rsi] ; jmp rdx
0x0000000000122319 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000f194c : adc esi, dword ptr [rcx] ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x00000000001442ad : adc esi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x00000000001441a2 : adc esi, ebp ; dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x0000000000086b87 : adc esi, esi ; ret 0xf20
0x00000000000956cf : adc esp, dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0x110f
0x000000000016429d : adc esp, ebp ; dec dword ptr [rax - 0x77] ; ret 0x8b64
0x000000000018a422 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001932ea : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000192f85 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000192f49 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000019344c : adc qword ptr [rdi - 8], rdi ; ret
0x00000000001937d2 : adc qword ptr [rsi + 3], rdx ; ret
0x000000000019386f : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000193671 : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000185a60 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000da645 : adc r9b, r13b ; retf 0xffd6
0x00000000000aae77 : adc rax, -0x1f3eb6ff ; or byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000058c95 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000bf2bf : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000100f69 : add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000bf3b9 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bf30a : add ah, bh ; inc dword ptr [rbx] ; ret
0x00000000001937ce : add ah, byte ptr [rdx - 0xf] ; jl 0x193823 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000082bba : add ah, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b6b5b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000008cf65 : add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x00000000000d89a3 : add al, 0 ; add al, ch ; cmc ; retf
0x00000000001290e5 : add al, 0 ; add al, ch ; ret 0xffef
0x0000000000133b5d : add al, 0 ; add al, ch ; retf
0x000000000002d937 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000031ad1 : add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000f7fcd : add al, 0 ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000033bd3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000039ae4 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x000000000002b1ad : add al, 0 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000f27e4 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181cad : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001867f9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181cd1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000099f3a : add al, 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000009f17a : add al, 0 ; add byte ptr [rax], al ; and rsi, r14 ; call 0x11bc89
0x00000000000ab66d : add al, 0 ; add byte ptr [rax], al ; jmp 0xa8177
0x00000000000d2d23 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000a8958 : add al, 0 ; add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa8919
0x00000000000a99f8 : add al, 0 ; add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa99b9
0x00000000000a67a7 : add al, 0 ; add byte ptr [rax], al ; sub rax, rbp ; add rdx, rax ; jmp 0xa6769
0x00000000000f3fb6 : add al, 0 ; add byte ptr [rax], al ; sub rax, rcx ; add rdx, rax ; jmp 0xf3f59
0x0000000000110754 : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000654c6 : add al, 0 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000aebd8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008409a : add al, 0 ; add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x00000000000efa0f : add al, 0 ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x0000000000141716 : add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000010e387 : add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x0000000000038005 : add al, 0 ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x0000000000142ae5 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012ae73 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000601e7 : add al, 0 ; add dh, dh ; ret
0x0000000000130cda : add al, 0 ; cmovne rax, rdx ; ret
0x00000000000ec988 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000014e104 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000001263f9 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000001264ea : add al, 0x11 ; ret
0x00000000000bf354 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000ad595 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000ad52a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000018e0fe : add al, 0x17 ; vzeroupper ; ret
0x0000000000158e7f : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r8
0x0000000000140057 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000011899d : add al, 0x24 ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000045dd3 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5d59 : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000123591 : add al, 0x24 ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f425 : add al, 0x24 ; add rsp, 0x28 ; ret
0x0000000000123657 : add al, 0x24 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000125a98 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000125af9 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000048a8d : add al, 0x24 ; call rax
0x0000000000048bf2 : add al, 0x24 ; mov r13, r15 ; add r15, rbx ; call rax
0x000000000013b8b0 : add al, 0x24 ; mov rdi, r12 ; call rax
0x0000000000048b7d : add al, 0x24 ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000012848b : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097f67 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002753e : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000027214 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000027523 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000013f7b5 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x0000000000062447 : add al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000005e572 : add al, 0x30 ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000000be139 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be14b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b4c5e : add al, 0x31 ; ret
0x0000000000104555 : add al, 0x34 ; add cl, ch ; retf
0x00000000000b4b5a : add al, 0x37 ; ret
0x00000000000c1166 : add al, 0x39 ; bnd je 0xc1178 ; test edx, edx ; jne 0xc1169 ; ret
0x0000000000099b3c : add al, 0x39 ; ret
0x00000000000eed62 : add al, 0x39 ; retf
0x00000000000ab950 : add al, 0x39 ; sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x000000000008ae5f : add al, 0x3a ; ret
0x00000000000c9c6e : add al, 0x44 ; mov eax, eax ; ret
0x00000000000d232b : add al, 0x44 ; mov eax, ecx ; ret
0x000000000012249c : add al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000123e1f : add al, 0x48 ; add esp, 0x28 ; ret
0x000000000010f635 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005e411 : add al, 0x48 ; cmp edi, eax ; jbe 0x5e413 ; mov rax, r10 ; ret
0x00000000000bb69b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000bc4eb : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x00000000000abd0d : add al, 0x48 ; lea eax, [rdi + rdx - 1] ; ret
0x000000000017dfe9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000017dffb : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x00000000000885fc : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000170eea : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000089132 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000b6bce : add al, 0x48 ; mov eax, edi ; ret
0x00000000000b4f08 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000bffb3 : add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x000000000003145f : add al, 0x4c ; cmp edx, ecx ; jb 0x314ba ; mov r10, rcx ; jmp 0x3142a
0x000000000003145e : add al, 0x4c ; cmp edx, ecx ; jb 0x314bb ; mov r10, rcx ; jmp 0x3142b
0x000000000013fb25 : add al, 0x4c ; lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x00000000000c0337 : add al, 0x4c ; lea ecx, [rsp + 0x18] ; call rbx
0x00000000000c0750 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000130038 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010f6cf : add al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010f75d : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000017dff7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b6bec : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000327a2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000002e177 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000001103b8 : add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x000000000004ab66 : add al, 0x75 ; push rcx ; add rsp, 0x18 ; ret
0x00000000001513aa : add al, 0x75 ; ret
0x000000000015e79b : add al, 0x75 ; retf 0xbd49
0x00000000000371d4 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000371f4 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000037134 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000371b4 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000370d4 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000037174 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000037114 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000037154 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000037274 : add al, 0x78 ; and eax, 1 ; ret
0x00000000000370f4 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000037194 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000370b4 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000abc98 : add al, 0x80 ; add rax, r8 ; jmp rax
0x00000000000a47a9 : add al, 0x80 ; jb 0xa47c1 ; sub al, bl ; ret
0x00000000000bf94c : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xbf938 ; ret
0x000000000006660a : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000007799e : add al, 0x81 ; add rax, rdx ; jmp rax
0x00000000000bf8f2 : add al, 0x81 ; je 0xbf8dc ; ret
0x00000000001833db : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bf8ee : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xbf8e0 ; ret
0x0000000000184cb3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000093307 : add al, 0x82 ; add rax, r10 ; jmp rax
0x0000000000026ecb : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000019811c : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000b1f97 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000093339 : add al, 0x83 ; add rax, r11 ; jmp rax
0x00000000001587f6 : add al, 0x83 ; lcall [rdx] ; cmovae eax, r10d ; jmp 0x15879a
0x000000000008ddd2 : add al, 0x83 ; loop 0x8dddd ; mov eax, edx ; ret
0x000000000013fae4 : add al, 0x83 ; loopne 0x13fb6b ; ret
0x0000000000091058 : add al, 0x83 ; loopne 0x91061 ; ret
0x000000000006258c : add al, 0x83 ; ret
0x0000000000063396 : add al, 0x83 ; ret 0x4802
0x000000000013f92e : add al, 0x83 ; ret 0x8108
0x0000000000162a93 : add al, 0x83 ; ret 0xf601
0x000000000009f5dc : add al, 0x83 ; retf 0x8902
0x000000000010faea : add al, 0x83 ; retf 0xe803
0x0000000000046bb8 : add al, 0x83 ; rol byte ptr [rcx], 0xf7 ; ret 0
0x000000000010c26f : add al, 0x84 ; add rax, r12 ; jmp rax
0x00000000000eca70 : add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xeca58
0x00000000000eca6f : add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xeca59
0x00000000000bfde5 : add al, 0x85 ; sal byte ptr [rbp - 0x12], cl ; xor eax, eax ; ret
0x000000000013212b : add al, 0x85 ; sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x00000000000c116a : add al, 0x85 ; sal byte ptr [rbp - 0xf], cl ; ret
0x0000000000077161 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000007abdd : add al, 0x86 ; add rax, rbx ; jmp rax
0x000000000008228b : add al, 0x86 ; add rax, rdx ; jmp rax
0x00000000000836fc : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000007ac3b : add al, 0x87 ; add rax, rbx ; jmp rax
0x0000000000083eb4 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000017dfe6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000b6bcb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000007a91d : add al, 0x88 ; add rax, rbx ; jmp rax
0x00000000000810ec : add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000bf950 : add al, 0x88 ; je 0xbf934 ; ret
0x00000000000785e5 : add al, 0x89 ; ret 0xf41
0x00000000001255d9 : add al, 0x89 ; retf 0x8d49
0x0000000000125731 : add al, 0x89 ; retf 0x8d4d
0x000000000004b2d0 : add al, 0x89 ; retf 0xe0c1
0x0000000000162bd1 : add al, 0x89 ; retf 0xeac0
0x0000000000034b0b : add al, 0x8a ; add r8, rdx ; jmp r8
0x00000000000b6bb4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f1122 : add al, 0x8b ; push rbp ; add al, 1 ; ret 0x341
0x000000000006f9bd : add al, 0x8e ; add rax, rsi ; jmp rax
0x0000000000150298 : add al, 0x8f ; add rax, rdi ; jmp rax
0x000000000007a978 : add al, 0x90 ; add rax, rbx ; jmp rax
0x0000000000067a1d : add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000bf323 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000bffea : add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2de7 : add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000126292 : add al, 0xa ; ret
0x0000000000067100 : add al, 0xa1 ; add rax, rcx ; jmp rax
0x00000000000676e4 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000094fb2 : add al, 0xa8 ; add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x00000000000956bc : add al, 0xa8 ; add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x00000000000e82e9 : add al, 0xaa ; add rax, rdx ; jmp rax
0x00000000000e7955 : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000000fff67 : add al, 0xb7 ; add rax, rdi ; jmp rax
0x000000000015ab07 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003748c : add al, 0xb8 ; ret
0x00000000000ffe04 : add al, 0xba ; add rax, r10 ; jmp rax
0x0000000000104314 : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000ffcb2 : add al, 0xbe ; add rax, r14 ; jmp rax
0x00000000000bf25b : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000eca77 : add al, 0xc2 ; jmp 0xeca51
0x0000000000058929 : add al, 0xc8 ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x000000000005892d : add al, 0xc9 ; xor eax, eax ; ret
0x00000000000a3a44 : add al, 0xd ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e051c : add al, 0xd0 ; ret
0x0000000000163f3b : add al, 0xd7 ; xor eax, eax ; ret
0x000000000019b949 : add al, 0xd8 ; test rax, rax ; je 0x19b959 ; call rax
0x00000000000e4598 : add al, 0xe ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000033d1f : add al, 0xe0 ; test rax, rax ; je 0x33d2f ; call rax
0x00000000000e8898 : add al, 0xe8 ; xchg eax, edx ; retf 0xfff3
0x00000000001387ff : add al, 0xe9 ; retf
0x000000000010f83e : add al, 0xeb ; ret
0x00000000000370d9 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00000000000abba1 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc5e : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000001814ed : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000015a794 : add al, 0xf ; retf 0x1689
0x000000000015a754 : add al, 0xf ; retf 0x5089
0x00000000000c28d3 : add al, 0xf ; test ah, bl ; or eax, 0x89480000 ; retf 0x8548
0x0000000000143ff6 : add al, 0xf ; test byte ptr [rbx - 0x7d000000], ah ; ret 0x4801
0x00000000000d2115 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000ba8cb : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000015ec01 : add al, 0xf ; xchg byte ptr [rax - 0x76ffffff], ah ; retf 0x894c
0x0000000000171253 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000135e98 : add al, 0xf5 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012522e : add al, 0xfd ; sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000013f08e : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d2148 : add al, 1 ; add byte ptr [rax], al ; ret
0x0000000000112688 : add al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000660ab : add al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e0ffd : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1125 : add al, 1 ; ret 0x341
0x000000000011ca35 : add al, 1 ; ror dword ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000066122 : add al, 1 ; xor eax, eax ; ret
0x0000000000036e2d : add al, 2 ; mov eax, r8d ; ret
0x000000000014c5ae : add al, 2 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000036dcb : add al, 2 ; test eax, eax ; jne 0x36de1 ; mov eax, r8d ; ret
0x0000000000191d17 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007ac37 : add al, 3 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rbx ; jmp rax
0x000000000007abd9 : add al, 3 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rbx ; jmp rax
0x00000000000baa18 : add al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b4671 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000b489c : add al, 7 ; ret
0x000000000018e7b4 : add al, 7 ; vzeroupper ; ret
0x000000000008fde7 : add al, 8 ; add byte ptr [rax], al ; ret
0x0000000000125b6b : add al, 8 ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000ad6ff : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000102561 : add al, 9 ; ret
0x00000000000bad1b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011c84f : add al, bl ; retf 0xed83
0x000000000019b47e : add al, bpl ; retf
0x00000000000eb2bf : add al, byte ptr [r8 - 0x6bf0a206] ; ret 0xb60f
0x000000000018b322 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000b9b91 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000000eb2c0 : add al, byte ptr [rax - 0x6bf0a206] ; ret 0xb60f
0x00000000000613f6 : add al, byte ptr [rax] ; add al, ch ; ret 0x279
0x000000000012eae6 : add al, byte ptr [rax] ; add al, ch ; ret 0xfffc
0x000000000013636e : add al, byte ptr [rax] ; add al, ch ; retf 0x118
0x00000000000624a6 : add al, byte ptr [rax] ; add bh, bl ; call 0x1205aec5
0x00000000000a8f62 : add al, byte ptr [rax] ; add bh, dh ; ret
0x000000000002debf : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000f371c : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000fc6b8 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x728d
0x00000000000af0e2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000008db61 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; je 0x8db95 ; adc al, ch ; ret 0xf977
0x0000000000112b2a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e68f9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d7583 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000193978 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000198211 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000714b3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181e4d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a74b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000184a71 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181e71 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002c78d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x0000000000036cb6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000150e23 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000153933 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000152ff3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00000000001157f1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x111aa6
0x0000000000158e81 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r8
0x0000000000105d35 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000154e96 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x00000000000463e0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000005ae35 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001300a3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000012021a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000089c1b : add al, byte ptr [rax] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000f1399 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x00000000000aed58 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000047896 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000038543 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x000000000010cc1d : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6af0fe05], al ; ret
0x000000000010746f : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b7fd07], al ; ret 0x940f
0x000000000012f7e9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7af0fe05], al ; retf
0x00000000001956b4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000009b66b : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000011dba8 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000083956 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x76b3d395], cl ; ret 0x8348
0x0000000000110884 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ror byte ptr [rax - 0x77], 1 ; retf
0x000000000002fbab : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; xor ecx, dword ptr [rcx - 0x77] ; retf
0x000000000011cece : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000000a75e5 : add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret
0x0000000000129b2d : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000010fe46 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf02
0x000000000010fe3d : add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000000d998a : add al, byte ptr [rax] ; add dh, dh ; rol dword ptr [rdi + rcx], 0x84 ; ret
0x000000000018e0c8 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000011fe48 : add al, byte ptr [rax] ; mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x000000000013b8ac : add al, byte ptr [rax] ; mov rax, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x000000000013b7aa : add al, byte ptr [rax] ; mov rdi, r12 ; call rbx
0x000000000019a746 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000137f0b : add al, byte ptr [rax] ; pop r12 ; pop r13 ; ret
0x000000000013f99f : add al, byte ptr [rax] ; ret
0x000000000018c638 : add al, byte ptr [rax] ; vzeroupper ; ret
0x0000000000036dcc : add al, byte ptr [rbp + 0x440775c0] ; mov eax, eax ; ret
0x000000000013f8e7 : add al, byte ptr [rbp - 0x77] ; sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x00000000001229a7 : add al, byte ptr [rbx + 0x377426f8] ; mov eax, r8d ; ret
0x00000000000e9d6d : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000097912 : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000105ae1 : add al, byte ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000098014 : add al, byte ptr [rcx + rcx*4 - 0x40] ; add rsp, 0x18 ; ret
0x0000000000036e2e : add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d7354 : add al, byte ptr [rcx - 0x70a3d706] ; add dh, byte ptr [rsi + 3] ; ret
0x0000000000056556 : add al, byte ptr [rcx - 0x77] ; ret
0x0000000000072e6d : add al, byte ptr [rcx - 9] ; ret
0x000000000013f0b8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000110f25 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000d446f : add al, byte ptr [rcx] ; ret
0x000000000005ad13 : add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x00000000000bab1a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000135486 : add al, ch ; adc al, 0xff ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000107b05 : add al, ch ; adc eax, 0x890003f0 ; ret
0x00000000000e4596 : add al, ch ; add al, 0xe ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000135e96 : add al, ch ; add al, 0xf5 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011950a : add al, ch ; add byte ptr [rdi + 0x148fff0], bh ; ret
0x00000000000e2376 : add al, ch ; and al, 0x30 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015fa41 : add al, ch ; cdq ; ret
0x00000000001090b1 : add al, ch ; cdq ; ret 0xfff1
0x00000000000d89a5 : add al, ch ; cmc ; retf
0x00000000001157f4 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000011458c : add al, ch ; dec byte ptr [rsi] ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000142941 : add al, ch ; fsincos ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000136756 : add al, ch ; in al, dx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009c1ee : add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x000000000002fcc7 : add al, ch ; jb 0x2fcd4 ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000014f526 : add al, ch ; je 0x14f590 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000fe5ab : add al, ch ; jg 0xfe624 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000fedab : add al, ch ; jg 0xfee1c ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001637c9 : add al, ch ; jno 0x1637f2 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000011959a : add al, ch ; jo 0x119564 ; lock dec dword ptr [rax + 1] ; ret
0x0000000000142d7d : add al, ch ; lodsd eax, dword ptr [rsi] ; and eax, 0x8948ffee ; ret
0x000000000012eb39 : add al, ch ; loope 0x12ebaf ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000128e10 : add al, ch ; mov al, ch ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000eaae3 : add al, ch ; mov bh, 0xa9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fc8c4 : add al, ch ; mov dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff09c : add al, ch ; mov fs, word ptr [rdx - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000014f6f6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009a306 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 7
0x000000000013d1e7 : add al, ch ; movsxd rax, dword ptr [rcx - 0x7cb70012] ; ret
0x00000000000f6736 : add al, ch ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000143e3f : add al, ch ; pop rbx ; push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000014afad : add al, ch ; popfq ; retf 0xffee
0x000000000012d42a : add al, ch ; push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000012d92a : add al, ch ; push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x00000000000e2546 : add al, ch ; push rsp ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000013b796 : add al, ch ; push rsp ; mov ecx, 0x89480000 ; ret
0x000000000009c166 : add al, ch ; push rsp ; ret
0x000000000002ac78 : add al, ch ; ret
0x00000000000613f8 : add al, ch ; ret 0x279
0x000000000008f248 : add al, ch ; ret 0x66
0x0000000000146968 : add al, ch ; ret 0xede9
0x0000000000144bf8 : add al, ch ; ret 0xef23
0x0000000000143988 : add al, ch ; ret 0xef40
0x00000000000ff088 : add al, ch ; ret 0xf262
0x000000000011f268 : add al, ch ; ret 0xf698
0x00000000000c6bf8 : add al, ch ; ret 0xf703
0x00000000001290e7 : add al, ch ; ret 0xffef
0x000000000012eae8 : add al, ch ; ret 0xfffc
0x000000000009c20d : add al, ch ; ret 0xffff
0x000000000002e4ef : add al, ch ; retf
0x0000000000136370 : add al, ch ; retf 0x118
0x00000000001126f0 : add al, ch ; retf 0x45
0x00000000000314f0 : add al, ch ; retf 0x5a
0x00000000000e2df0 : add al, ch ; retf 0x648
0x00000000000e2270 : add al, ch ; retf 0x659
0x000000000004a850 : add al, ch ; retf 0x75d
0x00000000000c46f0 : add al, ch ; retf 0xf728
0x000000000009fd80 : add al, ch ; retf 0xf97c
0x000000000009ba7a : add al, ch ; retf 0xffff
0x0000000000055d1c : add al, ch ; sahf ; sti ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133aa8 : add al, ch ; sbb bh, ch ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000103745 : add al, ch ; sbb eax, 0x8948fff2 ; ret 0x8b64
0x00000000000f5c5f : add al, ch ; sbb edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000143df0 : add al, ch ; stosb byte ptr [rdi], al ; push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000e4766 : add al, ch ; xor al, 0xc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000126f66 : add al, ch ; xor al, 0xe4 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000104553 : add al, dh ; add al, 0x34 ; add cl, ch ; retf
0x000000000005ad11 : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x0000000000162f36 : add bh, bh ; adc bl, ch ; retf
0x0000000000049caf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000014d61f : add bh, bh ; add byte ptr [rax + 0x31], cl ; ret 0xc148
0x0000000000197c6f : add bh, bh ; dec dword ptr [rax + 0x21] ; retf 0x944
0x00000000001987a3 : add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x00000000000579dc : add bh, bh ; je 0x57a0c ; or byte ptr [rax + 0xf], cl ; retf 0x854d
0x0000000000057b0b : add bh, bh ; je 0x57b3b ; sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x000000000010f9cc : add bh, bh ; jne 0x10f9de ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000d1268 : add bh, bh ; ret
0x00000000000624a8 : add bh, bl ; call 0x1205aec3
0x000000000005ac59 : add bh, byte ptr [rax + 1] ; ret
0x000000000005ae88 : add bh, byte ptr [rax + 2] ; ret
0x00000000001164ed : add bh, byte ptr [rax - 1] ; jmp 0x1164bf
0x0000000000123d8d : add bh, byte ptr [rax - 1] ; jmp 0x123d5f
0x0000000000123e45 : add bh, byte ptr [rax - 1] ; jmp 0x123e17
0x000000000012408d : add bh, byte ptr [rax - 1] ; jmp 0x12405f
0x00000000000466cb : add bh, byte ptr [rax - 1] ; ret
0x0000000000195a82 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000012cf6f : add bh, byte ptr [rcx] ; ret 0x840f
0x00000000000ee168 : add bh, byte ptr [rcx] ; retf
0x00000000001988a4 : add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x00000000000a8f64 : add bh, dh ; ret
0x000000000002d945 : add bh, dh ; ret 0
0x000000000002d939 : add bh, dh ; ret 0xf800
0x000000000004c09f : add bh, dh ; ret 0xffef
0x00000000000462d7 : add bl, al ; call 0x132dd4
0x00000000000980be : add bl, al ; endbr64 ; xor eax, eax ; ret
0x000000000014b5c2 : add bl, al ; mov dword ptr [rsi], 0xa ; ret
0x000000000014b5c9 : add bl, al ; mov dword ptr [rsi], 0xb ; ret
0x00000000000e893c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ef31d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e7ebc : add bl, al ; nop ; mov eax, 0x7e ; ret
0x0000000000153a9d : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000abbfa : add bl, al ; nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x000000000019c1df : add bl, al ; nop dword ptr [rax] ; ret
0x00000000000a1a14 : add bl, al ; ret
0x000000000013f0c4 : add bl, al ; xor eax, eax ; ret
0x000000000004501b : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000004517f : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000eb342 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000119b31 : add bl, byte ptr [rax + rsi + 0x31] ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000119af1 : add bl, byte ptr [rax + rsi + 0x31] ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x00000000001197b6 : add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000119994 : add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x8004
0x000000000014c5af : add bl, byte ptr [rbx + 0x5d] ; mov eax, r8d ; ret
0x00000000000eb343 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006588d : add bl, byte ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000d663b : add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e60ed : add bl, ch ; ret
0x000000000014c118 : add bl, ch ; ret 0x2bf
0x00000000000843c3 : add bl, ch ; ret 0x43c7
0x000000000010f70b : add bl, ch ; ret 0x9066
0x00000000000c3756 : add bl, ch ; ret 0xc748
0x00000000000843ba : add bl, ch ; retf
0x0000000000161ab4 : add bl, ch ; retf 0x14e8
0x00000000000d668e : add bl, ch ; retf 0x8948
0x00000000000e1f8a : add bl, ch ; retf 0x8d48
0x00000000000db41b : add bl, ch ; retf 0x9066
0x000000000010f854 : add bl, ch ; retf 0xcb8
0x0000000000150fe4 : add bl, ch ; retf 0xe4e8
0x0000000000095847 : add bl, ch ; retf 0xf66
0x000000000004580f : add bl, dh ; addps xmm0, xmm0 ; ret
0x00000000000bb0cf : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000bb0df : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000019a747 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000000457b6 : add bl, dh ; mulps xmm0, xmmword ptr [rip + 0x179ee9] ; ret
0x0000000000045791 : add bl, dh ; mulps xmm0, xmmword ptr [rip + 0x179f12] ; ret
0x00000000001157ef : add byte ptr [r10], r8b ; add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000011f7d3 : add byte ptr [r11 + rcx*4 + 0x7d], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011682f : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000d5fed : add byte ptr [r8 + 9], r9b ; ret 0x850f
0x00000000000a5447 : add byte ptr [r8 - 0x77], r9b ; ret 0x14eb
0x00000000001085ef : add byte ptr [r8 - 0x77], r9b ; ret 0xb70f
0x000000000006978f : add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000131568 : add byte ptr [r8 - 0x7d], r9b ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000000c5fe5 : add byte ptr [r8], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x00000000000d322d : add byte ptr [r8], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x00000000000a514a : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000a5270 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000a7197 : add byte ptr [r9 + 0xf], 0x93 ; ret
0x000000000013f0b6 : add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x0000000000066117 : add byte ptr [rax + 0x10], bh ; ret
0x0000000000116e29 : add byte ptr [rax + 0x10], bh ; syscall
0x0000000000122428 : add byte ptr [rax + 0x119], bh ; syscall
0x00000000000e6092 : add byte ptr [rax + 0x142], bh ; syscall
0x000000000019425e : add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000018211e : add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x0000000000130217 : add byte ptr [rax + 0x16], bh ; ret
0x0000000000130216 : add byte ptr [rax + 0x16], dil ; ret
0x000000000004564f : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x0000000000196272 : add byte ptr [rax + 0x21], cl ; ret 0x8548
0x0000000000054ecf : add byte ptr [rax + 0x21], cl ; ret 0x8948
0x00000000000bffa5 : add byte ptr [rax + 0x21], cl ; ret 0x8d48
0x0000000000095b97 : add byte ptr [rax + 0x29], cl ; enter -0x177d, 1 ; ret
0x00000000000f3fb9 : add byte ptr [rax + 0x29], cl ; enter 0x148, -0x3e ; jmp 0xf3f56
0x000000000007d48e : add byte ptr [rax + 0x29], cl ; ret
0x00000000000d814b : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002cefe : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000162067 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000162cc4 : add byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000387e7 : add byte ptr [rax + 0x29], cl ; retf
0x000000000012a9c6 : add byte ptr [rax + 0x29], cl ; retf 0x1e8
0x000000000005840f : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x00000000000819d3 : add byte ptr [rax + 0x29], cl ; retf 0x8949
0x000000000012a814 : add byte ptr [rax + 0x29], cl ; retf 0xb3e8
0x000000000009c54b : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000000d3a2c : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000014d621 : add byte ptr [rax + 0x31], cl ; ret 0xc148
0x000000000002dafb : add byte ptr [rax + 0x39], cl ; ret
0x000000000010b92e : add byte ptr [rax + 0x39], cl ; ret 0x2e74
0x000000000010d80d : add byte ptr [rax + 0x39], cl ; ret 0x3074
0x000000000010a2b2 : add byte ptr [rax + 0x39], cl ; ret 0x6076
0x000000000010b73d : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000091aa7 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000097b33 : add byte ptr [rax + 0x39], cl ; ret 0x8c75
0x00000000000a6144 : add byte ptr [rax + 0x39], cl ; ret 0xc019
0x0000000000098fdf : add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x000000000002ce08 : add byte ptr [rax + 0x39], cl ; retf
0x0000000000169896 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000001701af : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000002c2f4 : add byte ptr [rax + 0x39], cl ; retf 0x3775
0x000000000005918f : add byte ptr [rax + 0x39], cl ; retf 0x777
0x000000000008b9a9 : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000016e963 : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000097147 : add byte ptr [rax + 0x39], cl ; retf 0x860f
0x0000000000097065 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000001693a6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000097197 : add byte ptr [rax + 0x39], cl ; retf 0xbb77
0x0000000000193f97 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000018f0d4 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000035788 : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000fca39 : add byte ptr [rax + 0x45894800], al ; xor al, ch ; retf
0x00000000000bf337 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000116651 : add byte ptr [rax + 0x48], bh ; syscall
0x0000000000045378 : add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x000000000013a0cc : add byte ptr [rax + 0x578b4803], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000256fd : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000014b64e : add byte ptr [rax + 0x5d5bc031], dl ; pop r12 ; ret
0x0000000000152a33 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000083fb1 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000043b8e : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000066607 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000080fed : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rdx ; jmp rax
0x0000000000026ec8 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000198119 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000082288 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdx ; jmp rax
0x00000000000ebc53 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000007a91a : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rbx ; jmp rax
0x00000000000810e9 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rdx ; jmp rax
0x000000000006f9ba : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rax, rsi ; jmp rax
0x000000000007a975 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rbx ; jmp rax
0x000000000010d292 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000e82e6 : add byte ptr [rax + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x0000000000104311 : add byte ptr [rax + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000bf258 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000013ea71 : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x0000000000083f4d : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000000655fe : add byte ptr [rax + 0x63], cl ; ret
0x000000000012cf5d : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000aa49a : add byte ptr [rax + 0x63], cl ; ret 0x4e8d
0x000000000010329f : add byte ptr [rax + 0x63], cl ; ret 0x5489
0x00000000000fc6ba : add byte ptr [rax + 0x63], cl ; ret 0x728d
0x0000000000186e5b : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000000000d99a2 : add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000033df0 : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000102cbf : add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000001052cf : add byte ptr [rax + 0x63], cl ; ret 0x8b4d
0x00000000000fd90c : add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000db573 : add byte ptr [rax + 0x63], cl ; ret 0xd789
0x000000000004db5e : add byte ptr [rax + 0x63], cl ; retf
0x00000000000f1a08 : add byte ptr [rax + 0x63], cl ; retf 0x25eb
0x00000000000f8aa1 : add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000004d92b : add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x0000000000050773 : add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000001018f7 : add byte ptr [rax + 0x63], cl ; retf 0x8eb
0x00000000000f42ac : add byte ptr [rax + 0x63], cl ; ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x0000000000186f3f : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 1], 0xf8 ; ret
0x00000000000b9b8f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000011a08f : add byte ptr [rax + 0x7522017f], al ; ret 0x8d48
0x000000000018db2f : add byte ptr [rax + 0x77f8c517], cl ; ret
0x00000000000bb63f : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000046718 : add byte ptr [rax + 0x7f], bh ; syscall
0x000000000013fd9f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x0000000000047437 : add byte ptr [rax + 0x80], bh ; syscall
0x0000000000046764 : add byte ptr [rax + 0x82], bh ; syscall
0x00000000001229b7 : add byte ptr [rax + 0x95], bh ; syscall
0x0000000000057f6d : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000000f531f : add byte ptr [rax + 0xc], bh ; ret
0x0000000000025a35 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000004653e : add byte ptr [rax + 0xd], bh ; syscall
0x00000000000463e3 : add byte ptr [rax + 0xe], bh ; syscall
0x000000000004bfa3 : add byte ptr [rax + 0xf48f685], al ; ret 0x13eb
0x0000000000037178 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00000000000b4ab9 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000001086df : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480142 ; ret 0x8401
0x000000000002a407 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480142 ; ret 0xf01
0x000000000012e48f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480143 ; ret
0x0000000000129b8f : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348014a ; ret 0x4801
0x000000000012d61f : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348014b ; ret
0x00000000000e3707 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480153 ; ret
0x00000000000e20d0 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000e7c20 : add byte ptr [rax + 0xf], cl ; ret 0x19e9
0x000000000015c2a6 : add byte ptr [rax + 0xf], cl ; ret 0x3145
0x00000000000e7e7d : add byte ptr [rax + 0xf], cl ; ret 0x49c3
0x00000000001620c0 : add byte ptr [rax + 0xf], cl ; ret 0x4fe9
0x00000000000e7ad5 : add byte ptr [rax + 0xf], cl ; ret 0x64e9
0x00000000000a23fc : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e7bcb : add byte ptr [rax + 0xf], cl ; ret 0x6ee9
0x000000000015f788 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000e43f3 : add byte ptr [rax + 0xf], cl ; ret 0x854d
0x000000000002cb1c : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000113b2a : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000e7f79 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000e7b89 : add byte ptr [rax + 0xf], cl ; ret 0xb0e9
0x00000000000e7c84 : add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x0000000000118f85 : add byte ptr [rax + 0xf], cl ; ret 0xc7e9
0x00000000000e7c6a : add byte ptr [rax + 0xf], cl ; ret 0xcfe9
0x00000000000e7b53 : add byte ptr [rax + 0xf], cl ; ret 0xe6e9
0x00000000000a5a8a : add byte ptr [rax + 0xf], cl ; ret 0xf3c3
0x00000000000a367a : add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x00000000000a22a3 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e792a : add byte ptr [rax + 0xf], cl ; ret 0xfe9
0x00000000001423b6 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000e7c3a : add byte ptr [rax + 0xf], cl ; ret 0xffe9
0x0000000000157088 : add byte ptr [rax + 0xf], cl ; retf 0x3948
0x00000000000c044c : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000009b381 : add byte ptr [rax + 0xf], cl ; retf 0xc183
0x00000000000e7eb7 : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000e7eb6 : add byte ptr [rax + 0xfc17], dil ; ret
0x00000000000e7fe7 : add byte ptr [rax + 0xff], bh ; ret
0x00000000000e7fe6 : add byte ptr [rax + 0xff], dil ; ret
0x000000000010f7cf : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000005ac20 : add byte ptr [rax + 1], bh ; ret
0x00000000000af0e4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000187fb9 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000000cc6a1 : add byte ptr [rax + 1], cl ; dec byte ptr [rcx - 0x76b34eec] ; retf 0x8348
0x00000000000c7e28 : add byte ptr [rax + 1], cl ; jmp 0xffffffff8d5740be
0x0000000000098804 : add byte ptr [rax + 1], cl ; ret
0x00000000000d37ff : add byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000d995b : add byte ptr [rax + 1], cl ; ret 0x7b8b
0x0000000000187fb0 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013e425 : add byte ptr [rax + 1], cl ; ret 0xe183
0x00000000000f8b8c : add byte ptr [rax + 1], cl ; ret 0xf66
0x00000000000494f4 : add byte ptr [rax + 1], cl ; retf
0x000000000017026d : add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000448ee : add byte ptr [rax + 1], cl ; retf 0xdeb
0x000000000010f7ce : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x0000000000097336 : add byte ptr [rax + 1], dil ; ret
0x000000000005ae33 : add byte ptr [rax + 2], bh ; ret
0x000000000018763c : add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000d5fee : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000014db0c : add byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000ab8c7 : add byte ptr [rax + rax*8 - 0x76b2d38c], al ; ret
0x00000000000bac9c : add byte ptr [rax + rax], 0 ; ret
0x00000000001290e4 : add byte ptr [rax + rax], al ; add al, ch ; ret 0xffef
0x0000000000133b5c : add byte ptr [rax + rax], al ; add al, ch ; retf
0x00000000000f7fcc : add byte ptr [rax + rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000009b26c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000011c9a2 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000a1b0d : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d27e5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x000000000019b9b3 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004a5b4 : add byte ptr [rax + rcx*2 - 0x77], ah ; adc ecx, dword ptr [rax - 0x75] ; jge 0x4a5ce ; call rax
0x00000000000a5205 : add byte ptr [rax + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000083ff7 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x0000000000151d94 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000046e9d : add byte ptr [rax - 0x2d], cl ; loopne 0x46ef3 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000002723e : add byte ptr [rax - 0x2f7600cf], dl ; syscall
0x0000000000045714 : add byte ptr [rax - 0x3991f09a], al ; ret
0x0000000000140054 : add byte ptr [rax - 0x39], cl ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000004d02f : add byte ptr [rax - 0x39], cl ; ret
0x000000000005b4bc : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d2d0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2cff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000004646f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000119977 : add byte ptr [rax - 0x3d7cb7fe], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000888b8 : add byte ptr [rax - 0x3d8b0000], al ; jmp 0x88858
0x0000000000044f29 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000013394a : add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x00000000000256eb : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000003344d : add byte ptr [rax - 0x3f], cl ; ret 0x4911
0x0000000000033421 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000001343a9 : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000d302d : add byte ptr [rax - 0x3f], cl ; retf 0x4804
0x00000000000d37cd : add byte ptr [rax - 0x3f], cl ; retf 0x4c02
0x0000000000046139 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000819e8 : add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rcx + 0x29] ; retf
0x0000000000116a24 : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000da02f : add byte ptr [rax - 0x41], cl ; ret
0x000000000004e27c : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000051327 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000011a7e7 : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x000000000011f902 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x000000000003591f : add byte ptr [rax - 0x73], cl ; add eax, 0x180aac ; ret
0x00000000000d282f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d283f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000e4b66 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109632 ; syscall
0x00000000000e4a26 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109772 ; syscall
0x00000000000e496e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10982a ; syscall
0x00000000000e4892 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1098fe ; syscall
0x00000000000e46c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109a8e ; syscall
0x00000000000e44fe : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109c0a ; syscall
0x00000000000e4144 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x109f6c ; syscall
0x00000000000e2c36 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b3f2 ; syscall
0x00000000000e2af6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b532 ; syscall
0x00000000000e2a3e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b5ea ; syscall
0x00000000000e2672 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b9ae ; syscall
0x00000000000e24a2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10bb3e ; syscall
0x00000000000e22de : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10bcba ; syscall
0x00000000000e19f6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10c54a ; syscall
0x00000000000d5c42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x118216 ; syscall
0x00000000000d5a0e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x11844a ; syscall
0x00000000000cd802 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1226b6 ; syscall
0x000000000009f9c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14b1b6 ; syscall
0x00000000000a134e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14c88a ; syscall
0x00000000000a116e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ca6a ; syscall
0x00000000000a0f82 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cc56 ; syscall
0x00000000000a0f12 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ccc6 ; syscall
0x00000000000a0ce2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cef6 ; syscall
0x000000000009cc42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14df36 ; syscall
0x000000000009cbe2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14df96 ; syscall
0x000000000009c822 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14e356 ; syscall
0x000000000009c5c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14e5b6 ; syscall
0x000000000009bf7a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ebfe ; syscall
0x000000000009bf42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ec36 ; syscall
0x000000000009dbf2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14ff66 ; syscall
0x000000000009d156 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1509f2 ; syscall
0x00000000000991f3 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x154955 ; syscall
0x00000000000991c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x154996 ; syscall
0x0000000000098f42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x154c16 ; syscall
0x0000000000098a1e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x15513a ; syscall
0x0000000000097f43 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x155595 ; syscall
0x0000000000097d6e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x15576a ; syscall
0x0000000000097bd2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x155906 ; syscall
0x0000000000096a94 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x156a04 ; syscall
0x0000000000096554 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x156f44 ; syscall
0x00000000000961b0 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1572e8 ; syscall
0x0000000000095e44 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x157654 ; syscall
0x00000000000947c0 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x158cd8 ; syscall
0x0000000000094500 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x158f98 ; syscall
0x000000000009418c : add byte ptr [rax - 0x73], cl ; cmp eax, 0x15930c ; syscall
0x00000000000873d1 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x166087 ; syscall
0x0000000000086fd4 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x166484 ; syscall
0x0000000000086f29 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x16652f ; syscall
0x00000000000850c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x16adf6 ; syscall
0x0000000000064186 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1892a2 ; syscall
0x0000000000063f02 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x189522 ; syscall
0x0000000000061d2e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x18b6ee ; syscall
0x0000000000061bee : add byte ptr [rax - 0x73], cl ; cmp eax, 0x18b82e ; syscall
0x0000000000057e52 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1955b6 ; syscall
0x0000000000057c72 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x195796 ; syscall
0x0000000000057742 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x195cc6 ; syscall
0x00000000000554ce : add byte ptr [rax - 0x73], cl ; cmp eax, 0x197d0a ; syscall
0x000000000005537a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x197e5e ; syscall
0x0000000000055345 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x197e93 ; syscall
0x000000000004abae : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a260a ; syscall
0x000000000004aaee : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a26ca ; syscall
0x000000000004aa26 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a2792 ; syscall
0x000000000004a94e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a286a ; syscall
0x0000000000049a46 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a2f1a ; syscall
0x0000000000049981 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a2fdf ; syscall
0x00000000000497df : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a3181 ; syscall
0x0000000000049705 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1a325b ; syscall
0x000000000003b71f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b11f1 ; syscall
0x0000000000039d9c : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b2b3c ; syscall
0x0000000000038a55 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b3ddb ; syscall
0x0000000000038a28 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b3e08 ; syscall
0x00000000000388e3 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1b3f4d ; syscall
0x00000000000296c6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c67f2 ; syscall
0x000000000002955a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c695e ; syscall
0x000000000002943a : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c6a7e ; syscall
0x0000000000025885 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1c70a3 ; syscall
0x000000000019bdae : add byte ptr [rax - 0x73], cl ; cmp eax, 0x50bb2 ; syscall
0x000000000019bf6e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x5156a ; syscall
0x000000000019c29e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x52f72 ; syscall
0x000000000016156e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x8ee42 ; syscall
0x0000000000160386 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9002a ; syscall
0x00000000001602a6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9010a ; syscall
0x00000000001600be : add byte ptr [rax - 0x73], cl ; cmp eax, 0x902f2 ; syscall
0x000000000016001e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x90392 ; syscall
0x000000000015ff7e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x90432 ; syscall
0x000000000015fece : add byte ptr [rax - 0x73], cl ; cmp eax, 0x904e2 ; syscall
0x000000000015f94e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x90a62 ; syscall
0x000000000015571e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a3ca ; syscall
0x00000000001555be : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a52a ; syscall
0x00000000001553b2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a736 ; syscall
0x0000000000155212 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9a8d6 ; syscall
0x000000000015507e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9aa6a ; syscall
0x0000000000154f3e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9abaa ; syscall
0x0000000000154dde : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ad0a ; syscall
0x0000000000154cce : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ae1a ; syscall
0x000000000015181e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9e2c6 ; syscall
0x000000000014fb06 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ff1a ; syscall
0x000000000014f9c6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa005a ; syscall
0x000000000014f90e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa0112 ; syscall
0x000000000014f822 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa01f6 ; syscall
0x000000000014f652 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa0396 ; syscall
0x000000000014f48e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa0532 ; syscall
0x0000000000149b20 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa5d3c ; syscall
0x0000000000147982 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa7e46 ; syscall
0x000000000014762a : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa819e ; syscall
0x00000000001472da : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa84ee ; syscall
0x00000000001470b4 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8714 ; syscall
0x0000000000146f52 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8876 ; syscall
0x0000000000146d15 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8ab3 ; syscall
0x00000000001462be : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9452 ; syscall
0x000000000014613c : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa95d4 ; syscall
0x0000000000146102 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa960e ; syscall
0x0000000000145fea : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9726 ; syscall
0x00000000001457a6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9f6a ; syscall
0x00000000001456de : add byte ptr [rax - 0x73], cl ; cmp eax, 0xaa032 ; syscall
0x00000000001455c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xaa14e ; syscall
0x00000000001441ef : add byte ptr [rax - 0x73], cl ; cmp eax, 0xab2c9 ; syscall
0x0000000000140aae : add byte ptr [rax - 0x73], cl ; cmp eax, 0xae762 ; syscall
0x00000000001407b2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xaea5e ; syscall
0x000000000013c482 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb2d7a ; syscall
0x000000000013bf02 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb32de ; syscall
0x000000000013bd3e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb345a ; syscall
0x000000000013bc76 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb34c2 ; syscall
0x000000000013bb36 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb3602 ; syscall
0x000000000013ba7e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb36ba ; syscall
0x000000000013b38e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb3da2 ; syscall
0x000000000013b06e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb40c2 ; syscall
0x000000000013aeb2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb427e ; syscall
0x0000000000137b16 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb74aa ; syscall
0x00000000001379d6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb75ea ; syscall
0x000000000013791e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb76a2 ; syscall
0x000000000013783e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb777a ; syscall
0x0000000000137372 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb7bce ; syscall
0x0000000000136da2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb813e ; syscall
0x0000000000136882 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8616 ; syscall
0x00000000001366b6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb87a2 ; syscall
0x0000000000136576 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb88e2 ; syscall
0x00000000001364be : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb899a ; syscall
0x00000000001363de : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8a72 ; syscall
0x0000000000135fc2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb8e46 ; syscall
0x00000000001359a6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9402 ; syscall
0x000000000013584e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb955a ; syscall
0x000000000013578e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb961a ; syscall
0x00000000001356a6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb96fa ; syscall
0x00000000001355c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb97a6 ; syscall
0x0000000000134f62 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9dc6 ; syscall
0x0000000000134d56 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9f8a ; syscall
0x0000000000134bfe : add byte ptr [rax - 0x73], cl ; cmp eax, 0xba0e2 ; syscall
0x0000000000134b3e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xba1a2 ; syscall
0x0000000000134a56 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xba282 ; syscall
0x0000000000133e42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbae1e ; syscall
0x0000000000133bd2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbb04e ; syscall
0x0000000000133452 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbb76e ; syscall
0x0000000000129716 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5412 ; syscall
0x00000000001295d6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5552 ; syscall
0x000000000012951e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc560a ; syscall
0x0000000000129144 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc59dc ; syscall
0x0000000000128f42 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5ba6 ; syscall
0x0000000000128d62 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5d3e ; syscall
0x0000000000128b9e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5eba ; syscall
0x0000000000128ace : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc5f36 ; syscall
0x0000000000128a04 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6000 ; syscall
0x000000000012896f : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6095 ; syscall
0x0000000000127c66 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6d6a ; syscall
0x0000000000127b26 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6eaa ; syscall
0x0000000000127a6e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc6f62 ; syscall
0x0000000000127474 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc7554 ; syscall
0x0000000000127272 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc76fe ; syscall
0x0000000000127092 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc7876 ; syscall
0x0000000000126ece : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc79d2 ; syscall
0x000000000011b8ee : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd2c5a ; syscall
0x000000000011b7d2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd2d76 ; syscall
0x000000000011b372 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd31d6 ; syscall
0x000000000011ae47 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd3701 ; syscall
0x0000000000109d27 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xe4551 ; syscall
0x00000000000573b7 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d281f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000011d1e7 : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000119298 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000045471 : add byte ptr [rax - 0x73], cl ; retf 0x42e9
0x0000000000100fe7 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000009950f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000199dfb : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000013b8ad : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; mov rdi, r12 ; call rax
0x000000000011ec77 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000004a6c9 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000a16cf : add byte ptr [rax - 0x75], cl ; add eax, 0x148879 ; call qword ptr [rax]
0x000000000009aa41 : add byte ptr [rax - 0x75], cl ; add eax, 0x14f377 ; call qword ptr [rax]
0x000000000015fe5f : add byte ptr [rax - 0x75], cl ; add eax, 0x8b629 ; call qword ptr [rax]
0x000000000015f852 : add byte ptr [rax - 0x75], cl ; add eax, 0x8bc36 ; call qword ptr [rax]
0x0000000000162f2f : add byte ptr [rax - 0x75], cl ; add eax, 0x8cf51 ; call qword ptr [rax]
0x000000000014b215 : add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000013ac04 : add byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdi, rbx ; call rax
0x0000000000154b37 : add byte ptr [rax - 0x75], cl ; cmp ebp, ebx ; ret
0x000000000014c60d : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f5d37 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000019a23c : add byte ptr [rax - 0x75], cl ; je 0x19a26d ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000009db67 : add byte ptr [rax - 0x75], cl ; je 0x9db99 ; mov rdi, r13 ; call rax
0x000000000009ee8f : add byte ptr [rax - 0x75], cl ; je 0x9eec1 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x00000000000a17fb : add byte ptr [rax - 0x75], cl ; jg 0xa1850 ; mov rsi, rbp ; call rax
0x0000000000025712 : add byte ptr [rax - 0x75], cl ; jl 0x25742 ; or cl, ch ; retf
0x0000000000028d16 : add byte ptr [rax - 0x75], cl ; jne 0x28cb3 ; mov rdi, rbx ; call rsi
0x00000000000a1a3f : add byte ptr [rax - 0x75], cl ; jnp 0xa1a91 ; call rax
0x000000000006d99c : add byte ptr [rax - 0x75], cl ; lea edx, [rax - 0x7c000005] ; ret 0x4830
0x0000000000120227 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000144807 : add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0x7401
0x000000000010fac2 : add byte ptr [rax - 0x75], cl ; push rdx ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000016addf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004af3f : add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x00000000000abbe7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x00000000001262bc : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x0000000000125146 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000008fd87 : add byte ptr [rax - 0x75], cl ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000012a477 : add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000162e08 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000008a737 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000000a51f6 : add byte ptr [rax - 0x77], cl ; adc ecx, dword ptr [rax + 0x29] ; retf 0x5ee8
0x00000000000a2a14 : add byte ptr [rax - 0x77], cl ; add eax, 0x14b1ec ; ret
0x000000000009841a : add byte ptr [rax - 0x77], cl ; add eax, 0x151e6e ; ret
0x00000000000983f1 : add byte ptr [rax - 0x77], cl ; add eax, 0x151e8f ; ret
0x00000000000983d1 : add byte ptr [rax - 0x77], cl ; add eax, 0x151ea7 ; ret
0x00000000001632f3 : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000132ae8 : add byte ptr [rax - 0x77], cl ; and al, 0x10 ; call 0x8ed48
0x00000000000b995f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018eaef : add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x0000000000101d6d : add byte ptr [rax - 0x77], cl ; cmp byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000931e7 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000067cdb : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000698ff : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000000000fff7e : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; retf 0
0x000000000009dfef : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 0xca] ; syscall
0x000000000005727c : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8949
0x00000000000f4c98 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000965d6 : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000151760 : add byte ptr [rax - 0x77], cl ; in eax, 0x89 ; ret
0x000000000011c903 : add byte ptr [rax - 0x77], cl ; je 0x11c917 ; pop rbx ; ret
0x000000000008db63 : add byte ptr [rax - 0x77], cl ; je 0x8db93 ; adc al, ch ; ret 0xf977
0x00000000000d9127 : add byte ptr [rax - 0x77], cl ; jl 0xd9158 ; sbb al, ch ; pop rsi ; ret
0x00000000000a1087 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x000000000014a67a : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000004a079 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 0xca ; syscall
0x00000000000256b6 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000a5448 : add byte ptr [rax - 0x77], cl ; ret 0x14eb
0x000000000007750c : add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000033bd5 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008aac7 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000002991e : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000004497e : add byte ptr [rax - 0x77], cl ; ret 0x394c
0x0000000000039ae6 : add byte ptr [rax - 0x77], cl ; ret 0x448b
0x000000000006c6c3 : add byte ptr [rax - 0x77], cl ; ret 0x54e8
0x000000000012e5fb : add byte ptr [rax - 0x77], cl ; ret 0x57e9
0x00000000000a9363 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000006276f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x00000000000d6182 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000704dc : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000d6fdf : add byte ptr [rax - 0x77], cl ; ret 0x88e9
0x0000000000064ad5 : add byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000009c924 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000019748d : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000621b7 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000062d3f : add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000068900 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e89ab : add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000011f83e : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000e19cb : add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x00000000001085f0 : add byte ptr [rax - 0x77], cl ; ret 0xb70f
0x0000000000057824 : add byte ptr [rax - 0x77], cl ; ret 0xbf41
0x00000000000a15ea : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000054f92 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e40f3 : add byte ptr [rax - 0x77], cl ; ret 0xcce9
0x00000000000a1de7 : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000000bfb59 : add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x00000000000ac016 : add byte ptr [rax - 0x77], cl ; ret 0xe1e8
0x000000000004e15c : add byte ptr [rax - 0x77], cl ; ret 0xf4d
0x0000000000093a88 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000002b1af : add byte ptr [rax - 0x77], cl ; retf
0x0000000000183474 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000008f268 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000181542 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000062d70 : add byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000008b23c : add byte ptr [rax - 0x77], cl ; retf 0x4966
0x00000000001047f4 : add byte ptr [rax - 0x77], cl ; retf 0x4be9
0x00000000001047dc : add byte ptr [rax - 0x77], cl ; retf 0x55e9
0x00000000001814a0 : add byte ptr [rax - 0x77], cl ; retf 0x6666
0x00000000001816e2 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000003522c : add byte ptr [rax - 0x77], cl ; retf 0x850f
0x00000000000a8245 : add byte ptr [rax - 0x77], cl ; retf 0x8548
0x00000000000587ff : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000f7631 : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000059087 : add byte ptr [rax - 0x77], cl ; retf 0x8b49
0x00000000000ed411 : add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x000000000018228a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000005aa17 : add byte ptr [rax - 0x77], cl ; retf 0xa0e8
0x000000000010480c : add byte ptr [rax - 0x77], cl ; retf 0xa7e9
0x00000000000a0a4e : add byte ptr [rax - 0x77], cl ; retf 0xb4eb
0x000000000004dce9 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001886cc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000000ab7d7 : add byte ptr [rax - 0x77], cl ; sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000bed94 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000162dc0 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000002f70d : add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x1f0f
0x0000000000115fae : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000000fca3b : add byte ptr [rax - 0x77], cl ; xor r8b, r13b ; retf
0x00000000000ab63b : add byte ptr [rax - 0x78], 0x7d ; ret 0x2bf
0x00000000000a76b0 : add byte ptr [rax - 0x78], 0x7d ; ret 0x8944
0x000000000019a69e : add byte ptr [rax - 0x7ab70000], al ; ret
0x000000000008a54e : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000045335 : add byte ptr [rax - 0x7b], cl ; ret 0x574
0x000000000002704b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x0000000000074874 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000b73c3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000112861 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xd321
0x000000000014ad22 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*2 + 0x41], 0x83 ; call qword ptr [rbx]
0x000000000011923e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x52], cl ; xor eax, eax ; pop rbp ; ret
0x000000000011fe25 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + 0x48], 0x39 ; ret
0x0000000000110604 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rsi + 0x31], 0xd2 ; call rax
0x000000000004c3b4 : add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x000000000013150c : add byte ptr [rax - 0x7bf10000], al ; ret 0
0x000000000017fba7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000f9ea7 : add byte ptr [rax - 0x7d], cl ; and al, 0x30 ; adc al, 0x83 ; ret
0x00000000000573df : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33ebbef
0x000000000009e423 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009fd41 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000010aaf1 : add byte ptr [rax - 0x7d], cl ; clc ; push qword ptr [rax + rbx*8 - 0x77] ; ret 0xc085
0x000000000004541f : add byte ptr [rax - 0x7d], cl ; clc ; retf
0x0000000000145d5c : add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x000000000014521f : add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax + 0xf] ; retf 0xe8c0
0x000000000009c78f : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000013e057 : add byte ptr [rax - 0x7d], cl ; out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x0000000000029888 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b477 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000010bfb2 : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000000be66f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000006875d : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000004d137 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000bf8d7 : add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000028355 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f5037 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000012b81f : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000002a436 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000071e43 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000018156f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000119b75 : add byte ptr [rax - 0x7d], cl ; ret 0x6602
0x00000000000cd37f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a24e7 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000012c6f7 : add byte ptr [rax - 0x7d], cl ; ret 0x8330
0x00000000000ece08 : add byte ptr [rax - 0x7d], cl ; ret 0x8b02
0x000000000013fdb7 : add byte ptr [rax - 0x7d], cl ; ret 0x8d01
0x000000000009bc86 : add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000000fb26f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000139da1 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000a2f50 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000183553 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181593 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d460f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000999ea : add byte ptr [rax - 0x7d], cl ; retf
0x000000000009b2df : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000009a698 : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000000ad63f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000b503f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000f3bc7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0x840f
0x000000000003265d : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000131569 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000056477 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000002c78f : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x00000000001635d4 : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000036cb8 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000000e7efc : add byte ptr [rax - 0x7f], cl ; ret 0x231b
0x000000000016ea6b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000086eef : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000525df : add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x000000000013f075 : add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x000000000004466d : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x0000000000027b35 : add byte ptr [rax - 1], bh ; ret
0x0000000000093eae : add byte ptr [rax - 1], dil ; ret
0x0000000000142974 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000018f0d1 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000ff018 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000000978e0 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000187fad : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8b89 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000017026a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000fff7b : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; retf 0
0x0000000000093a85 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000139d9e : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000001871d2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000a2a9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009f7ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x9c227
0x000000000009f3bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000abbf3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000abc1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017125b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000120223 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000a1a3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000012f6d9 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x00000000000bf2eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000000cd223 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000573f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000018cfcd : add byte ptr [rax], 0 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000044373 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ecef4 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; fmul qword ptr [rax - 0x77] ; retf
0x0000000000070d3d : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x9bef71d], al ; ret
0x00000000000563e1 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret
0x00000000001565bb : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000056c88 : add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0xfde9
0x000000000013f934 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000fcc61 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000190d33 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009af1b : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000888b9 : add byte ptr [rax], 0 ; jne 0x88884 ; jmp 0x88857
0x00000000000e5dd5 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x000000000012b246 : add byte ptr [rax], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000371b8 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000015fa3f : add byte ptr [rax], al ; add al, ch ; cdq ; ret
0x00000000001157f2 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000014afab : add byte ptr [rax], al ; add al, ch ; popfq ; retf 0xffee
0x000000000012d428 : add byte ptr [rax], al ; add al, ch ; push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000012d928 : add byte ptr [rax], al ; add al, ch ; push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x000000000010fed5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000008f246 : add byte ptr [rax], al ; add al, ch ; ret 0x66
0x0000000000146966 : add byte ptr [rax], al ; add al, ch ; ret 0xede9
0x00000000000668dd : add byte ptr [rax], al ; add al, ch ; retf
0x000000000005ad0f : add byte ptr [rax], al ; add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000019bfed : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000197c6d : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x21] ; retf 0x944
0x00000000001987a1 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x000000000004c57d : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x0000000000066341 : add byte ptr [rax], al ; add bl, al ; call 0x132dd6
0x00000000000e893a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000153a9b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000a1a12 : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000045019 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000e60eb : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000843c1 : add byte ptr [rax], al ; add bl, ch ; ret 0x43c7
0x000000000010f709 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x00000000000c3754 : add byte ptr [rax], al ; add bl, ch ; ret 0xc748
0x00000000000843b8 : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000161ab2 : add byte ptr [rax], al ; add bl, ch ; retf 0x14e8
0x00000000000db419 : add byte ptr [rax], al ; add bl, ch ; retf 0x9066
0x000000000010f852 : add byte ptr [rax], al ; add bl, ch ; retf 0xcb8
0x00000000000bb0cd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000bb0dd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000122426 : add byte ptr [rax], al ; add byte ptr [rax + 0x119], bh ; syscall
0x000000000019425c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000018211c : add byte ptr [rax], al ; add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x00000000000f3fb7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; enter 0x148, -0x3e ; jmp 0xf3f58
0x000000000007d48c : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d8149 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000162065 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000162cc2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000054653 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x000000000005840d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x00000000000819d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8949
0x00000000000d3a2a : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000080192 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010c9b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000002ce06 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000169894 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000172cc1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000002c2f2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3775
0x00000000000592cd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x000000000008b9a7 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000018f0d2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000035786 : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000011664f : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000013ea6f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000000c3515 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000aa498 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x4e8d
0x000000000010329d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x5489
0x0000000000033dee : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000102cbd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000004db5c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000004d929 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x0000000000050771 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000bb63d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000046716 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000013fd9d : add byte ptr [rax], al ; add byte ptr [rax + 0x7fffffff], bh ; ret
0x0000000000047435 : add byte ptr [rax], al ; add byte ptr [rax + 0x80], bh ; syscall
0x0000000000046762 : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000001229b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x95], bh ; syscall
0x00000000000f531d : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; ret
0x0000000000025a33 : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000004653c : add byte ptr [rax], al ; add byte ptr [rax + 0xd], bh ; syscall
0x00000000000463e1 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x000000000004bfa1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f685], al ; ret 0x13eb
0x00000000000e20ce : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000015c2a4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x3145
0x00000000000e7e7b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x49c3
0x00000000000e7e3e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e7bc9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x6ee9
0x000000000015f786 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000002cb1a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e7f77 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000e7b87 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb0e9
0x00000000000e7c82 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x00000000000e7b51 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xe6e9
0x00000000000a5a88 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf3c3
0x00000000000e7e24 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e7928 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfe9
0x00000000001423b4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c044a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000005ac1e : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000d2454 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000187fb7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000187fae : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8b8a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000017026b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000005ae31 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000d27e3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000083ff5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000002723c : add byte ptr [rax], al ; add byte ptr [rax - 0x2f7600cf], dl ; syscall
0x0000000000045712 : add byte ptr [rax], al ; add byte ptr [rax - 0x3991f09a], al ; ret
0x00000000000c2d45 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000133948 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x00000000000256e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000003344b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4911
0x000000000003341f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000001343a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000d37cb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x4c02
0x0000000000046137 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000819e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rcx + 0x29] ; retf
0x0000000000116a22 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000da1e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x41], cl ; ret
0x00000000000d282d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d283d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d281d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000014c60b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f5d35 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1a3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jnp 0xa1a93 ; call rax
0x0000000000120225 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000001262ba : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x000000000012a475 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000008a735 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000000bc46d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018eaed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x00000000000fff7c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; retf 0
0x000000000005727a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8949
0x00000000000f4c96 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000a1085 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x0000000000054429 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007750a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000008a304 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008aac5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000079fb1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000006c6c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x54e8
0x00000000000a9361 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000007f01d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000156a3a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000009c922 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000621b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000062d3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000086df6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e89a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001128ab : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000bfb57 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x000000000004e15a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf4d
0x0000000000093a86 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000479c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000008f266 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000008b23a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x4966
0x00000000001047f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x4be9
0x00000000001047da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x55e9
0x000000000018149e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x00000000000587fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000f762f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000ed40f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000182288 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000010480a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xa7e9
0x00000000001832f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001886ca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000019a69c : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret
0x000000000008a54c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000074872 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000009e421 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009c78d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003542d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b475 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000be66d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000bf8d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000028353 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f968d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000012b81d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000a910d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000183093 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000cd37d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000ece06 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8b02
0x00000000000fb26d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000139d9f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000184c11 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001830bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009bd1c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000009a696 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000000ad63d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000e7efa : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x231b
0x0000000000170264 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000086eed : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000525dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x000000000004466b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbp ; ret
0x0000000000027b33 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000160c93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000008f244 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x66
0x00000000000668db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000019bfeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000197c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x21] ; retf 0x944
0x000000000019879f : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret
0x000000000004c57b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000a514b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000bb0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000086deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000592cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x00000000000c5e7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000010329b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x5489
0x0000000000102cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000d282b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d283b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d281b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000bc46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000019767b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c6bf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x54e8
0x0000000000062d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x00000000000587fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000003542b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000be66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000ca64b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a910b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000cd37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000009a694 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000086eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000525db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; sti ; ret 0xffbf
0x0000000000160c91 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000008f242 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x66
0x0000000000105b1d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000a5271 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001510a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013f60b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000be8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000009fb1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x0000000000105b1e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000014243b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xc641
0x00000000000c310b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000166adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000ac29b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000010561b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x840f
0x00000000000d458b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; retf 0x8104
0x0000000000138fe7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000012bedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x00000000000d2ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000009d90c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000a2a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000013918b : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x115be6
0x000000000009f7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x9c226
0x000000000019bfec : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000140059 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000115d88 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000123f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000001189d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a5a87 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000130b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; ret
0x0000000000045018 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000133ba4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133b7a
0x0000000000133e14 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133dea
0x00000000000a514c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa5122
0x00000000000804c5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000005811a : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x5812b ; push r10 ; ret
0x0000000000058623 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x58634 ; push r10 ; ret
0x00000000001942dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000001942ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000001942fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000019430c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000019431c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000019426c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000019427c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000019428c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000019429c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000001942ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000001942bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000001942cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000d281c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000d283c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000d282c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009f3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000abbf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000bb63c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b9ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000abc1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017bc8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017bc5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013fd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000001229b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x95 ; syscall
0x00000000000f531c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x00000000000473ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000005ac1d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000005ae30 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000004a883 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000105b1f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000017125c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000017bc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000bb05c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000014b5b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120224 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bc46c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a1a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000009fb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000000bb0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000bb0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008ad35 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000012f6da : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x0000000000094b31 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000010371a : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000bf2ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000001713ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000019425b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000019424b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x00000000000bb00b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bb01b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017bc3a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000baffa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000d252a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x00000000000bacd8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000af889 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a5272 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000cd224 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000bf2a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x00000000000a5225 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003332a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000027540 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018cfce : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018809c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000a20e6 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000044374 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d284c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000090d35 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x0000000000118ac1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; ret
0x0000000000163eac : add byte ptr [rax], al ; add byte ptr [rbp + 0x13], dh ; add rsp, 0x38 ; ret
0x00000000000d33c0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x00000000001222b6 : add byte ptr [rax], al ; add byte ptr [rbp + 0x18], dh ; add rsp, 0x68 ; ret
0x00000000000d7302 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x000000000005e952 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x0000000000157420 : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; ret
0x000000000013998c : add byte ptr [rax], al ; add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x00000000000d57ef : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret
0x00000000000d5580 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; retf
0x000000000015fc5f : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x0000000000091a0c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000a6ba5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; fild dword ptr [rbp - 0x77] ; ret 0x8948
0x00000000000a3cae : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000118c11 : add byte ptr [rax], al ; add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x0000000000162f11 : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], dh ; add rsp, 0x58 ; ret
0x00000000001423d5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf
0x000000000019a65b : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret
0x0000000000119d85 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x0000000000119e54 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000016326a : add byte ptr [rax], al ; add byte ptr [rbp + 0x3d], dh ; add rsp, 0x38 ; ret
0x0000000000063feb : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000469d7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000004bfa2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x440f48f6], 0xc2 ; jmp 0x4bfc8
0x0000000000124270 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x0000000000116638 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x00000000001166c7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x00000000001167af : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x0000000000163008 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x68 ; ret
0x000000000011684d : add byte ptr [rax], al ; add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x00000000001631a1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x68 ; ret
0x000000000009185a : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x00000000000e21cc : add byte ptr [rax], al ; add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x0000000000105c4e : add byte ptr [rax], al ; add byte ptr [rbp + 0x53], dh ; add rsp, 0x38 ; ret
0x0000000000117c5c : add byte ptr [rax], al ; add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; ret
0x00000000000e739c : add byte ptr [rax], al ; add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x0000000000117db1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x00000000001328f5 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000116dca : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x0000000000065ed4 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x000000000005811b : add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; push r10 ; ret
0x0000000000045f72 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000004a740 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000139a29 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000158e93 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000156be2 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x0000000000154e97 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x14 ; call qword ptr [rax]
0x000000000015566d : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x0000000000026ab2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3c], dh ; ret
0x000000000019983d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76b63fb6], cl ; ret 0xd349
0x000000000010f16a : add byte ptr [rax], al ; add byte ptr [rbp - 0x76b7febd], cl ; ret
0x00000000000ecef5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fmul qword ptr [rax - 0x77] ; retf
0x0000000000183048 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000196228 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x894c
0x0000000000196b82 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x894d
0x0000000000158c6e : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; ret
0x000000000007a5f9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; retf
0x000000000004ce39 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x000000000009320d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008424d : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c83480e], cl ; retf 0x4800
0x00000000000ab57e : add byte ptr [rax], al ; add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x00000000000bf2a8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x00000000000475aa : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000046860 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008639c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000192e68 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000000491ed : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000011a19c : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xd42
0x00000000001605c3 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; retf
0x0000000000081816 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50743], al ; call qword ptr [rax]
0x000000000010cdb5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6af0fd05], al ; ret
0x0000000000126b9c : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x000000000013f5af : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000000af7c2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000bf5a6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x00000000001060ed : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf00001], al ; ret
0x00000000000cedda : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0d403], al ; ret 7
0x00000000000c236a : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0d403], al ; retf 1
0x0000000000144667 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7efab], cl ; ret
0x0000000000144535 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7efbb], cl ; ret
0x00000000000bfc3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x00000000000f39ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x000000000018c581 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x0000000000070d3e : add byte ptr [rax], al ; add byte ptr [rbx - 0x9bef71d], al ; ret
0x00000000001981bf : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000000d9d39 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x00000000000db62a : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8d43
0x00000000000d9ddf : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0xbe0f
0x0000000000080db6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000ba313 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000017bc8d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000fbd99 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000fbf59 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x0000000000062449 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000062291 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x1773
0x000000000002d0ae : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000001302f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000e01b9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x00000000000d09e8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000c367e : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x000000000005dac3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0xd231
0x00000000001539c6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x00000000001530a3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x000000000007de55 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000039acf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; retf 0x8949
0x00000000000563e2 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000116b8d : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x00000000000a8959 : add byte ptr [rax], al ; add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa8918
0x00000000000a99f9 : add byte ptr [rax], al ; add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa99b8
0x0000000000143466 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x00000000000f7890 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x8b48
0x000000000014340e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000039235 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x254a8
0x000000000009fb1d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x00000000000a0e20 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000a08c6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000161742 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x00000000000d322e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x000000000004460b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x0000000000032c52 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000084b10 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000000d4251 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000008fdd3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000001565bc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000009b26e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000018bedd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000054746 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000011db48 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11db56 ; call rbx
0x000000000013e7cb : add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x000000000002d09a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000d9da0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000001330be : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ror dword ptr [rdi], 0x97 ; ret 0x840
0x00000000000889aa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; call 0xffffffffcbf39d48
0x0000000000081685 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x00000000000313fa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x313b9
0x0000000000199a0b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000d0480 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2e66
0x0000000000054621 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000014243d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xc641
0x0000000000116c54 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x0000000000026dbe : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000043d09 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a3d09 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000166add : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a3c94 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xbd01
0x00000000000ac29d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011ce73 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x000000000013c77b : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000000000009f17b : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], cl ; call 0x11bc88
0x000000000006f797 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000000af994 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000000af9ba : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000a3622 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xa35eb ; ret
0x00000000000bff32 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xbfefb ; ret
0x0000000000056c89 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfde9
0x000000000015eaaf : add byte ptr [rax], al ; add byte ptr [rcx], al ; retf 0x27e8
0x000000000003a885 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x7477
0x000000000010561d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x840f
0x000000000018787d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x00000000000cd1c5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000df404 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8948
0x00000000000dc069 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x0000000000117485 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x00000000000dddb3 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd729
0x0000000000027602 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; retf
0x000000000002ac93 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x1089
0x000000000004ccef : add byte ptr [rax], al ; add byte ptr [rcx], dh ; div bh ; ret 0
0x000000000011bb3a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000090a3b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000af2ca : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000009ae6e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x34 ; ret
0x00000000000a20e7 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000154b4b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xbb ; retf
0x00000000000d2252 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001960a2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000163b88 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x854d
0x000000000008ad36 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000012f6db : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], edi ; call rcx
0x0000000000094b32 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000001539d8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x00000000001502c0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x00000000001530c8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x00000000001539b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x00000000001102de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000010371b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000014b598 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x00000000000463b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000003a7bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3fcf, -0x77 ; retf 0xeac1
0x000000000017133d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000a1031 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000014564b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x00000000000a1214 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0x14c9
0x0000000000135e44 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0xb8f
0x000000000014f3f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; retf
0x0000000000061b4f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0xd ; retf
0x00000000001713ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000003b28d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003c025 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004c51d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bf2ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000af30d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000e43b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000470ef : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x31c3
0x0000000000115d89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x41c3
0x00000000000dbc4f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x5841
0x0000000000056ea1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x6de9
0x0000000000130209 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000001300b9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x89c3
0x0000000000033471 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000105d36 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000fae3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x000000000015264d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000000570d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2ae9
0x0000000000199a7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x00000000001970a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x00000000000fcc62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000098409 : add byte ptr [rax], al ; add byte ptr [rdx], al ; jbe 0x98416 ; ret
0x00000000001660cc : add byte ptr [rax], al ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000190d34 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009af1c : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x0000000000163aa5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x44c7
0x00000000000af71a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af232 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000012872b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; endbr64 ; ret
0x000000000017bc3b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000baffb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000be0cb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000d252b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x00000000000c9c6a : add byte ptr [rax], al ; add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x00000000001126e9 : add byte ptr [rax], al ; add byte ptr [rsp + rax*2 - 0x75], ah ; insd dword ptr [rdi], dx ; add al, ch ; retf 0x45
0x00000000000d458d : add byte ptr [rax], al ; add cl, al ; retf 0x8104
0x000000000012b9d3 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0x53ff
0x000000000012d1b0 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0xff41
0x0000000000031596 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000619f5 : add byte ptr [rax], al ; add cl, ch ; ret 0xffe2
0x000000000007ed59 : add byte ptr [rax], al ; add cl, ch ; ret 0xffea
0x0000000000056e7b : add byte ptr [rax], al ; add cl, ch ; ret 0xfff3
0x000000000010c8c5 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff9
0x00000000000e38a7 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000000879a2 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000031e75 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000618ed : add byte ptr [rax], al ; add cl, ch ; retf 0xffe3
0x00000000000cfc3b : add byte ptr [rax], al ; add cl, ch ; retf 0xfff1
0x00000000000fc421 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x000000000008c7c6 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x000000000002ee59 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x000000000004917d : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000ab66e : add byte ptr [rax], al ; add cl, ch ; sti ; retf 0xffff
0x000000000005a9a5 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000abbf5 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000000781b2 : add byte ptr [rax], al ; add dh, al ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000007ee5f : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000121f93 : add byte ptr [rax], al ; add dh, byte ptr [rax + rcx - 0x77] ; ret 0xeac1
0x000000000009840a : add byte ptr [rax], al ; add dh, byte ptr [rsi + 1] ; ret
0x0000000000066cf8 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000012bedd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x0000000000195511 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000014d53e : add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x00000000000f62c2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000b53a0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000b53a9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x0000000000062645 : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000f0b10 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x0000000000151a28 : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x000000000014121a : add byte ptr [rax], al ; add edx, 1 ; syscall
0x000000000002c6b2 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x2c68c
0x00000000000d2cce : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000af0e3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000187fb8 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x0000000000150e25 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000153935 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000152ff5 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00000000001501f8 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000448ed : add byte ptr [rax], al ; add rdx, rcx ; jmp 0x44905
0x000000000008cac4 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009d90e : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000045f1f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000000001518b3 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001590f5 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001118ab : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000008d471 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000155191 : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000141233 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000118365 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000000000110ff9 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x000000000010439a : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011176a : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000111174 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000027370 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000011a59c : add byte ptr [rax], al ; add rsp, 8 ; mov eax, r8d ; ret
0x00000000000a5ace : add byte ptr [rax], al ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000014bd54 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x0000000000028486 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045216 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000004580e : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000122088 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x00000000000374bf : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000009f17c : add byte ptr [rax], al ; and rsi, r14 ; call 0x11bc87
0x00000000000af30e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000b4fa0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b4ab8 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000001157f3 : add byte ptr [rax], al ; call 0x111aa4
0x000000000013918d : add byte ptr [rax], al ; call 0x115be4
0x000000000005b585 : add byte ptr [rax], al ; call 0x198004
0x0000000000119053 : add byte ptr [rax], al ; call 0x25334
0x000000000004921e : add byte ptr [rax], al ; call 0x25494
0x00000000000d8b0d : add byte ptr [rax], al ; call 0x255a4
0x000000000014afac : add byte ptr [rax], al ; call 0x37a54
0x000000000009f7ae : add byte ptr [rax], al ; call 0x9c224
0x0000000000154d66 : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000019bfee : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000011cc8f : add byte ptr [rax], al ; call r12
0x0000000000032815 : add byte ptr [rax], al ; call r15
0x0000000000158e83 : add byte ptr [rax], al ; call r8
0x0000000000027218 : add byte ptr [rax], al ; call rax
0x0000000000049ba3 : add byte ptr [rax], al ; call rdx
0x000000000013020a : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x0000000000115d8a : add byte ptr [rax], al ; cmova eax, edx ; ret
0x000000000013f936 : add byte ptr [rax], al ; cmovb eax, edx ; ret
0x0000000000123f5d : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000105a96 : add byte ptr [rax], al ; cmovbe rsi, r8 ; syscall
0x00000000000470f0 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001189db : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bf2e2 : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000a35b5 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d2363 : add byte ptr [rax], al ; cmovg r9d, eax ; mov eax, r9d ; ret
0x00000000000d2341 : add byte ptr [rax], al ; cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000001300ba : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000a5a48 : add byte ptr [rax], al ; cmovne r8, rax ; mov rax, r8 ; ret
0x00000000000e7e8d : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000012ac5e : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000017fba6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000105cbc : add byte ptr [rax], al ; cmp dx, 2 ; je 0x105cd0 ; ret
0x000000000008a509 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x8a521 ; ret
0x00000000000969ce : add byte ptr [rax], al ; endbr64 ; mov rax, rdi ; ret
0x000000000014a1be : add byte ptr [rax], al ; endbr64 ; push rbp ; call 0x156439
0x000000000009698e : add byte ptr [rax], al ; endbr64 ; ret
0x00000000001494ce : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; ret
0x00000000001168ce : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; syscall
0x000000000004517e : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x000000000004501a : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a13aa : add byte ptr [rax], al ; je 0xa13b4 ; ret
0x00000000000c9c6b : add byte ptr [rax], al ; je 0xc9c7a ; mov eax, r8d ; ret
0x00000000000d27e4 : add byte ptr [rax], al ; je 0xd2858 ; lea rax, [rdi - 0x10] ; ret
0x00000000001960a3 : add byte ptr [rax], al ; jg 0x1960b6 ; neg eax ; ret
0x00000000000d2253 : add byte ptr [rax], al ; jg 0xd225f ; neg eax ; ret
0x0000000000192e69 : add byte ptr [rax], al ; jl 0x192e76 ; neg eax ; ret
0x000000000010f85a : add byte ptr [rax], al ; jmp 0x10f824
0x0000000000123c53 : add byte ptr [rax], al ; jmp 0x123c1d
0x0000000000133ba6 : add byte ptr [rax], al ; jmp 0x133b78
0x0000000000133e16 : add byte ptr [rax], al ; jmp 0x133de8
0x000000000015973c : add byte ptr [rax], al ; jmp 0x159706
0x00000000000843b9 : add byte ptr [rax], al ; jmp 0x8438b
0x00000000000a514e : add byte ptr [rax], al ; jmp 0xa5120
0x00000000000ab66f : add byte ptr [rax], al ; jmp 0xa8175
0x00000000000e60ec : add byte ptr [rax], al ; jmp 0xe60b6
0x0000000000027527 : add byte ptr [rax], al ; jmp rax
0x00000000001501ff : add byte ptr [rax], al ; jmp rcx
0x0000000000105c4f : add byte ptr [rax], al ; jne 0x105cae ; add rsp, 0x38 ; ret
0x0000000000110409 : add byte ptr [rax], al ; jne 0x110429 ; add rsp, 0x28 ; ret
0x00000000001106de : add byte ptr [rax], al ; jne 0x1106ef ; add rsp, 0x18 ; ret
0x0000000000110730 : add byte ptr [rax], al ; jne 0x110741 ; add rsp, 0x18 ; ret
0x0000000000116639 : add byte ptr [rax], al ; jne 0x11668b ; add rsp, 0x68 ; ret
0x00000000001166c8 : add byte ptr [rax], al ; jne 0x11671b ; add rsp, 0x18 ; ret
0x00000000001167b0 : add byte ptr [rax], al ; jne 0x116803 ; add rsp, 0x58 ; ret
0x000000000011684e : add byte ptr [rax], al ; jne 0x1168a3 ; add rsp, 0x58 ; ret
0x0000000000116dcb : add byte ptr [rax], al ; jne 0x116de3 ; add rsp, 0x18 ; ret
0x0000000000117c5d : add byte ptr [rax], al ; jne 0x117cc3 ; add rsp, 0x38 ; ret
0x0000000000117cfd : add byte ptr [rax], al ; jne 0x117d63 ; add rsp, 0x38 ; ret
0x0000000000117db2 : add byte ptr [rax], al ; jne 0x117e33 ; add rsp, 0x38 ; ret
0x0000000000117e82 : add byte ptr [rax], al ; jne 0x117f03 ; add rsp, 0x38 ; ret
0x0000000000117f7c : add byte ptr [rax], al ; jne 0x117f8d ; add rsp, 0x28 ; ret
0x0000000000118ac2 : add byte ptr [rax], al ; jne 0x118adf ; add rsp, 0x58 ; ret
0x0000000000118b3b : add byte ptr [rax], al ; jne 0x118b4c ; add rsp, 0x28 ; ret
0x0000000000118c12 : add byte ptr [rax], al ; jne 0x118c55 ; add rsp, 0x68 ; ret
0x0000000000119d86 : add byte ptr [rax], al ; jne 0x119dcd ; add rsp, 0x38 ; ret
0x0000000000119e55 : add byte ptr [rax], al ; jne 0x119e9d ; add rsp, 0x38 ; ret
0x000000000011c8c7 : add byte ptr [rax], al ; jne 0x11c8d8 ; add rsp, 0x18 ; ret
0x00000000001222b7 : add byte ptr [rax], al ; jne 0x1222db ; add rsp, 0x68 ; ret
0x0000000000123cdc : add byte ptr [rax], al ; jne 0x123ced ; add rsp, 0x18 ; ret
0x0000000000124271 : add byte ptr [rax], al ; jne 0x1242c3 ; add rsp, 0x58 ; ret
0x0000000000130432 : add byte ptr [rax], al ; jne 0x130516 ; leave ; ret
0x00000000001328f6 : add byte ptr [rax], al ; jne 0x13290d ; add rsp, 0x28 ; ret
0x0000000000132956 : add byte ptr [rax], al ; jne 0x13296d ; add rsp, 0x28 ; ret
0x000000000013998d : add byte ptr [rax], al ; jne 0x1399c1 ; add rsp, 0x38 ; ret
0x0000000000139a2a : add byte ptr [rax], al ; jne 0x139a3b ; add rsp, 0x38 ; ret
0x0000000000139a97 : add byte ptr [rax], al ; jne 0x139aa8 ; add rsp, 0x28 ; ret
0x000000000013fab0 : add byte ptr [rax], al ; jne 0x13fac8 ; add rsp, 0x18 ; ret
0x00000000001414d7 : add byte ptr [rax], al ; jne 0x1414fe ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014152c : add byte ptr [rax], al ; jne 0x14153d ; add rsp, 0x18 ; ret
0x000000000014157f : add byte ptr [rax], al ; jne 0x141590 ; add rsp, 0x28 ; ret
0x0000000000141e0e : add byte ptr [rax], al ; jne 0x141e1f ; add rsp, 0x18 ; ret
0x0000000000149599 : add byte ptr [rax], al ; jne 0x1495ac ; add rsp, 0x40 ; pop rbp ; ret
0x000000000014c36f : add byte ptr [rax], al ; jne 0x14c3bc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c8e2 : add byte ptr [rax], al ; jne 0x14c91b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c980 : add byte ptr [rax], al ; jne 0x14c9be ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014d593 : add byte ptr [rax], al ; jne 0x14d5b0 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000154921 : add byte ptr [rax], al ; jne 0x15494a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154eea : add byte ptr [rax], al ; jne 0x154f63 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000015502a : add byte ptr [rax], al ; jne 0x1550a3 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000156be3 : add byte ptr [rax], al ; jne 0x156bf4 ; add rsp, 0x78 ; ret
0x0000000000156c59 : add byte ptr [rax], al ; jne 0x156c6a ; add rsp, 0x78 ; ret
0x0000000000156cc9 : add byte ptr [rax], al ; jne 0x156cda ; add rsp, 0x78 ; ret
0x0000000000156d39 : add byte ptr [rax], al ; jne 0x156d4a ; add rsp, 0x78 ; ret
0x0000000000156d9a : add byte ptr [rax], al ; jne 0x156dab ; add rsp, 0x78 ; ret
0x0000000000156dfe : add byte ptr [rax], al ; jne 0x156e0f ; add rsp, 0x78 ; ret
0x0000000000156e69 : add byte ptr [rax], al ; jne 0x156e7a ; add rsp, 0x78 ; ret
0x0000000000156eec : add byte ptr [rax], al ; jne 0x156efd ; add rsp, 0x78 ; ret
0x0000000000157421 : add byte ptr [rax], al ; jne 0x157450 ; add rsp, 0x28 ; ret
0x0000000000158e94 : add byte ptr [rax], al ; jne 0x158ea5 ; add rsp, 0x48 ; ret
0x0000000000158eff : add byte ptr [rax], al ; jne 0x158f4c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000158f8f : add byte ptr [rax], al ; jne 0x158fdb ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015905f : add byte ptr [rax], al ; jne 0x1590ae ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001594af : add byte ptr [rax], al ; jne 0x1594fd ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015953f : add byte ptr [rax], al ; jne 0x15958c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015970f : add byte ptr [rax], al ; jne 0x159762 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015979f : add byte ptr [rax], al ; jne 0x1597ec ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a48f : add byte ptr [rax], al ; jne 0x15a4de ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a51f : add byte ptr [rax], al ; jne 0x15a56e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a5af : add byte ptr [rax], al ; jne 0x15a5fe ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a63f : add byte ptr [rax], al ; jne 0x15a68e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015ae58 : add byte ptr [rax], al ; jne 0x15ae6b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015aecb : add byte ptr [rax], al ; jne 0x15aede ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015fc60 : add byte ptr [rax], al ; jne 0x15fc9c ; add rsp, 0x18 ; ret
0x0000000000160117 : add byte ptr [rax], al ; jne 0x160155 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001601a7 : add byte ptr [rax], al ; jne 0x1601e5 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000162f12 : add byte ptr [rax], al ; jne 0x162f56 ; add rsp, 0x58 ; ret
0x0000000000163009 : add byte ptr [rax], al ; jne 0x16305c ; add rsp, 0x68 ; ret
0x00000000001631a2 : add byte ptr [rax], al ; jne 0x1631fc ; add rsp, 0x68 ; ret
0x000000000016326b : add byte ptr [rax], al ; jne 0x1632b4 ; add rsp, 0x38 ; ret
0x0000000000163ead : add byte ptr [rax], al ; jne 0x163ecc ; add rsp, 0x38 ; ret
0x0000000000166859 : add byte ptr [rax], al ; jne 0x16686c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001668df : add byte ptr [rax], al ; jne 0x1668f2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000188382 : add byte ptr [rax], al ; jne 0x188298 ; ret
0x000000000018f2c0 : add byte ptr [rax], al ; jne 0x18f248 ; ret
0x0000000000026ab3 : add byte ptr [rax], al ; jne 0x26a7f ; ret
0x0000000000045f73 : add byte ptr [rax], al ; jne 0x45f84 ; add rsp, 0x18 ; ret
0x0000000000046ca4 : add byte ptr [rax], al ; jne 0x46ccb ; add rsp, 0x40 ; pop rbx ; ret
0x000000000004a741 : add byte ptr [rax], al ; jne 0x4a752 ; add rsp, 0x28 ; ret
0x000000000004a831 : add byte ptr [rax], al ; jne 0x4a842 ; add rsp, 0x28 ; ret
0x000000000004b0bb : add byte ptr [rax], al ; jne 0x4b0cc ; add rsp, 0x18 ; ret
0x000000000004b108 : add byte ptr [rax], al ; jne 0x4b119 ; add rsp, 0x18 ; ret
0x000000000004b15a : add byte ptr [rax], al ; jne 0x4b16b ; add rsp, 0x18 ; ret
0x000000000004b1a7 : add byte ptr [rax], al ; jne 0x4b1b8 ; add rsp, 0x18 ; ret
0x000000000004b1fa : add byte ptr [rax], al ; jne 0x4b20b ; add rsp, 0x18 ; ret
0x000000000004b247 : add byte ptr [rax], al ; jne 0x4b258 ; add rsp, 0x18 ; ret
0x000000000005811c : add byte ptr [rax], al ; jne 0x58129 ; push r10 ; ret
0x0000000000058625 : add byte ptr [rax], al ; jne 0x58632 ; push r10 ; ret
0x000000000005a9a0 : add byte ptr [rax], al ; jne 0x5aa2e ; leave ; ret
0x000000000005e953 : add byte ptr [rax], al ; jne 0x5e97d ; add rsp, 0x38 ; ret
0x0000000000065ed5 : add byte ptr [rax], al ; jne 0x65eef ; add rsp, 0x18 ; ret
0x00000000000888ba : add byte ptr [rax], al ; jne 0x88883 ; jmp 0x88856
0x0000000000090d36 : add byte ptr [rax], al ; jne 0x90d53 ; add rsp, 0x48 ; ret
0x000000000009c3b9 : add byte ptr [rax], al ; jne 0x9c403 ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000cd281 : add byte ptr [rax], al ; jne 0xcd2ad ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d33c1 : add byte ptr [rax], al ; jne 0xd33e1 ; add rsp, 0x28 ; ret
0x00000000000d343b : add byte ptr [rax], al ; jne 0xd344e ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000d7303 : add byte ptr [rax], al ; jne 0xd7329 ; add rsp, 0x28 ; ret
0x00000000000d7434 : add byte ptr [rax], al ; jne 0xd744e ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000dd80a : add byte ptr [rax], al ; jne 0xdd81b ; add rsp, 0x18 ; ret
0x00000000000e00da : add byte ptr [rax], al ; jne 0xe00eb ; add rsp, 0x18 ; ret
0x00000000000e21cd : add byte ptr [rax], al ; jne 0xe222b ; add rsp, 0x38 ; ret
0x00000000000e6504 : add byte ptr [rax], al ; jne 0xe6552 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e66d4 : add byte ptr [rax], al ; jne 0xe6722 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e702d : add byte ptr [rax], al ; jne 0xe708b ; add rsp, 0x38 ; ret
0x00000000000e70cd : add byte ptr [rax], al ; jne 0xe712b ; add rsp, 0x38 ; ret
0x00000000000e739d : add byte ptr [rax], al ; jne 0xe740b ; add rsp, 0x38 ; ret
0x00000000000e744d : add byte ptr [rax], al ; jne 0xe74bb ; add rsp, 0x38 ; ret
0x00000000000e7e63 : add byte ptr [rax], al ; jne 0xe7e8c ; mov eax, 0xfffa ; ret
0x00000000000e7f84 : add byte ptr [rax], al ; jne 0xe7f99 ; mov eax, 0x40 ; ret
0x0000000000154e98 : add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x000000000015566e : add byte ptr [rax], al ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000014a739 : add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001942de : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000001942ee : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000001942fe : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000019430e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000019431e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000019423d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000019426e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000019427e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000019428e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000019429e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000001942ae : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000001941ea : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x00000000001942be : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000001942ce : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000d26bb : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000d281e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000d283e : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000d282e : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009f3be : add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x000000000003591e : add byte ptr [rax], al ; lea rax, [rip + 0x180aac] ; ret
0x00000000000e4b65 : add byte ptr [rax], al ; lea rdi, [rip + 0x109632] ; syscall
0x00000000000e4a25 : add byte ptr [rax], al ; lea rdi, [rip + 0x109772] ; syscall
0x00000000000e496d : add byte ptr [rax], al ; lea rdi, [rip + 0x10982a] ; syscall
0x00000000000e4891 : add byte ptr [rax], al ; lea rdi, [rip + 0x1098fe] ; syscall
0x00000000000e46c1 : add byte ptr [rax], al ; lea rdi, [rip + 0x109a8e] ; syscall
0x00000000000e44fd : add byte ptr [rax], al ; lea rdi, [rip + 0x109c0a] ; syscall
0x00000000000e4143 : add byte ptr [rax], al ; lea rdi, [rip + 0x109f6c] ; syscall
0x00000000000e2c35 : add byte ptr [rax], al ; lea rdi, [rip + 0x10b3f2] ; syscall
0x00000000000e2af5 : add byte ptr [rax], al ; lea rdi, [rip + 0x10b532] ; syscall
0x00000000000e2a3d : add byte ptr [rax], al ; lea rdi, [rip + 0x10b5ea] ; syscall
0x00000000000e2671 : add byte ptr [rax], al ; lea rdi, [rip + 0x10b9ae] ; syscall
0x00000000000e24a1 : add byte ptr [rax], al ; lea rdi, [rip + 0x10bb3e] ; syscall
0x00000000000e22dd : add byte ptr [rax], al ; lea rdi, [rip + 0x10bcba] ; syscall
0x00000000000e19f5 : add byte ptr [rax], al ; lea rdi, [rip + 0x10c54a] ; syscall
0x00000000000d5c41 : add byte ptr [rax], al ; lea rdi, [rip + 0x118216] ; syscall
0x00000000000d5a0d : add byte ptr [rax], al ; lea rdi, [rip + 0x11844a] ; syscall
0x00000000000cd801 : add byte ptr [rax], al ; lea rdi, [rip + 0x1226b6] ; syscall
0x000000000009f9c1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14b1b6] ; syscall
0x00000000000a134d : add byte ptr [rax], al ; lea rdi, [rip + 0x14c88a] ; syscall
0x00000000000a116d : add byte ptr [rax], al ; lea rdi, [rip + 0x14ca6a] ; syscall
0x00000000000a0f81 : add byte ptr [rax], al ; lea rdi, [rip + 0x14cc56] ; syscall
0x00000000000a0f11 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ccc6] ; syscall
0x00000000000a0ce1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14cef6] ; syscall
0x000000000009cc41 : add byte ptr [rax], al ; lea rdi, [rip + 0x14df36] ; syscall
0x000000000009cbe1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14df96] ; syscall
0x000000000009c821 : add byte ptr [rax], al ; lea rdi, [rip + 0x14e356] ; syscall
0x000000000009c5c1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14e5b6] ; syscall
0x000000000009bf79 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ebfe] ; syscall
0x000000000009bf41 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ec36] ; syscall
0x000000000009dbf1 : add byte ptr [rax], al ; lea rdi, [rip + 0x14ff66] ; syscall
0x000000000009d155 : add byte ptr [rax], al ; lea rdi, [rip + 0x1509f2] ; syscall
0x00000000000991f2 : add byte ptr [rax], al ; lea rdi, [rip + 0x154955] ; syscall
0x00000000000991c1 : add byte ptr [rax], al ; lea rdi, [rip + 0x154996] ; syscall
0x0000000000098f41 : add byte ptr [rax], al ; lea rdi, [rip + 0x154c16] ; syscall
0x0000000000098a1d : add byte ptr [rax], al ; lea rdi, [rip + 0x15513a] ; syscall
0x0000000000097f42 : add byte ptr [rax], al ; lea rdi, [rip + 0x155595] ; syscall
0x0000000000097d6d : add byte ptr [rax], al ; lea rdi, [rip + 0x15576a] ; syscall
0x0000000000097bd1 : add byte ptr [rax], al ; lea rdi, [rip + 0x155906] ; syscall
0x0000000000096a93 : add byte ptr [rax], al ; lea rdi, [rip + 0x156a04] ; syscall
0x0000000000096553 : add byte ptr [rax], al ; lea rdi, [rip + 0x156f44] ; syscall
0x00000000000961af : add byte ptr [rax], al ; lea rdi, [rip + 0x1572e8] ; syscall
0x0000000000095e43 : add byte ptr [rax], al ; lea rdi, [rip + 0x157654] ; syscall
0x00000000000947bf : add byte ptr [rax], al ; lea rdi, [rip + 0x158cd8] ; syscall
0x00000000000944ff : add byte ptr [rax], al ; lea rdi, [rip + 0x158f98] ; syscall
0x000000000009418b : add byte ptr [rax], al ; lea rdi, [rip + 0x15930c] ; syscall
0x00000000000873d0 : add byte ptr [rax], al ; lea rdi, [rip + 0x166087] ; syscall
0x0000000000086fd3 : add byte ptr [rax], al ; lea rdi, [rip + 0x166484] ; syscall
0x0000000000086f28 : add byte ptr [rax], al ; lea rdi, [rip + 0x16652f] ; syscall
0x00000000000850c1 : add byte ptr [rax], al ; lea rdi, [rip + 0x16adf6] ; syscall
0x0000000000064185 : add byte ptr [rax], al ; lea rdi, [rip + 0x1892a2] ; syscall
0x0000000000063f01 : add byte ptr [rax], al ; lea rdi, [rip + 0x189522] ; syscall
0x0000000000061d2d : add byte ptr [rax], al ; lea rdi, [rip + 0x18b6ee] ; syscall
0x0000000000061bed : add byte ptr [rax], al ; lea rdi, [rip + 0x18b82e] ; syscall
0x0000000000057e51 : add byte ptr [rax], al ; lea rdi, [rip + 0x1955b6] ; syscall
0x0000000000057c71 : add byte ptr [rax], al ; lea rdi, [rip + 0x195796] ; syscall
0x0000000000057741 : add byte ptr [rax], al ; lea rdi, [rip + 0x195cc6] ; syscall
0x00000000000554cd : add byte ptr [rax], al ; lea rdi, [rip + 0x197d0a] ; syscall
0x0000000000055379 : add byte ptr [rax], al ; lea rdi, [rip + 0x197e5e] ; syscall
0x0000000000055344 : add byte ptr [rax], al ; lea rdi, [rip + 0x197e93] ; syscall
0x000000000004abad : add byte ptr [rax], al ; lea rdi, [rip + 0x1a260a] ; syscall
0x000000000004aaed : add byte ptr [rax], al ; lea rdi, [rip + 0x1a26ca] ; syscall
0x000000000004aa25 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a2792] ; syscall
0x000000000004a94d : add byte ptr [rax], al ; lea rdi, [rip + 0x1a286a] ; syscall
0x0000000000049a45 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a2f1a] ; syscall
0x0000000000049980 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a2fdf] ; syscall
0x00000000000497de : add byte ptr [rax], al ; lea rdi, [rip + 0x1a3181] ; syscall
0x0000000000049704 : add byte ptr [rax], al ; lea rdi, [rip + 0x1a325b] ; syscall
0x000000000003b71e : add byte ptr [rax], al ; lea rdi, [rip + 0x1b11f1] ; syscall
0x0000000000039d9b : add byte ptr [rax], al ; lea rdi, [rip + 0x1b2b3c] ; syscall
0x0000000000038a54 : add byte ptr [rax], al ; lea rdi, [rip + 0x1b3ddb] ; syscall
0x0000000000038a27 : add byte ptr [rax], al ; lea rdi, [rip + 0x1b3e08] ; syscall
0x00000000000388e2 : add byte ptr [rax], al ; lea rdi, [rip + 0x1b3f4d] ; syscall
0x00000000000296c5 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c67f2] ; syscall
0x0000000000029559 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c695e] ; syscall
0x0000000000029439 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c6a7e] ; syscall
0x0000000000025884 : add byte ptr [rax], al ; lea rdi, [rip + 0x1c70a3] ; syscall
0x000000000019bdad : add byte ptr [rax], al ; lea rdi, [rip + 0x50bb2] ; syscall
0x000000000019bf6d : add byte ptr [rax], al ; lea rdi, [rip + 0x5156a] ; syscall
0x000000000019c29d : add byte ptr [rax], al ; lea rdi, [rip + 0x52f72] ; syscall
0x000000000016156d : add byte ptr [rax], al ; lea rdi, [rip + 0x8ee42] ; syscall
0x0000000000160385 : add byte ptr [rax], al ; lea rdi, [rip + 0x9002a] ; syscall
0x00000000001602a5 : add byte ptr [rax], al ; lea rdi, [rip + 0x9010a] ; syscall
0x00000000001600bd : add byte ptr [rax], al ; lea rdi, [rip + 0x902f2] ; syscall
0x000000000016001d : add byte ptr [rax], al ; lea rdi, [rip + 0x90392] ; syscall
0x000000000015ff7d : add byte ptr [rax], al ; lea rdi, [rip + 0x90432] ; syscall
0x000000000015fecd : add byte ptr [rax], al ; lea rdi, [rip + 0x904e2] ; syscall
0x000000000015f94d : add byte ptr [rax], al ; lea rdi, [rip + 0x90a62] ; syscall
0x000000000015571d : add byte ptr [rax], al ; lea rdi, [rip + 0x9a3ca] ; syscall
0x00000000001555bd : add byte ptr [rax], al ; lea rdi, [rip + 0x9a52a] ; syscall
0x00000000001553b1 : add byte ptr [rax], al ; lea rdi, [rip + 0x9a736] ; syscall
0x0000000000155211 : add byte ptr [rax], al ; lea rdi, [rip + 0x9a8d6] ; syscall
0x000000000015507d : add byte ptr [rax], al ; lea rdi, [rip + 0x9aa6a] ; syscall
0x0000000000154f3d : add byte ptr [rax], al ; lea rdi, [rip + 0x9abaa] ; syscall
0x0000000000154ddd : add byte ptr [rax], al ; lea rdi, [rip + 0x9ad0a] ; syscall
0x0000000000154ccd : add byte ptr [rax], al ; lea rdi, [rip + 0x9ae1a] ; syscall
0x000000000015181d : add byte ptr [rax], al ; lea rdi, [rip + 0x9e2c6] ; syscall
0x000000000014fb05 : add byte ptr [rax], al ; lea rdi, [rip + 0x9ff1a] ; syscall
0x000000000014f9c5 : add byte ptr [rax], al ; lea rdi, [rip + 0xa005a] ; syscall
0x000000000014f90d : add byte ptr [rax], al ; lea rdi, [rip + 0xa0112] ; syscall
0x000000000014f821 : add byte ptr [rax], al ; lea rdi, [rip + 0xa01f6] ; syscall
0x000000000014f651 : add byte ptr [rax], al ; lea rdi, [rip + 0xa0396] ; syscall
0x000000000014f48d : add byte ptr [rax], al ; lea rdi, [rip + 0xa0532] ; syscall
0x0000000000149b1f : add byte ptr [rax], al ; lea rdi, [rip + 0xa5d3c] ; syscall
0x0000000000147981 : add byte ptr [rax], al ; lea rdi, [rip + 0xa7e46] ; syscall
0x0000000000147629 : add byte ptr [rax], al ; lea rdi, [rip + 0xa819e] ; syscall
0x00000000001472d9 : add byte ptr [rax], al ; lea rdi, [rip + 0xa84ee] ; syscall
0x00000000001470b3 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8714] ; syscall
0x0000000000146f51 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8876] ; syscall
0x0000000000146d14 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8ab3] ; syscall
0x00000000001462bd : add byte ptr [rax], al ; lea rdi, [rip + 0xa9452] ; syscall
0x000000000014613b : add byte ptr [rax], al ; lea rdi, [rip + 0xa95d4] ; syscall
0x0000000000146101 : add byte ptr [rax], al ; lea rdi, [rip + 0xa960e] ; syscall
0x0000000000145fe9 : add byte ptr [rax], al ; lea rdi, [rip + 0xa9726] ; syscall
0x00000000001457a5 : add byte ptr [rax], al ; lea rdi, [rip + 0xa9f6a] ; syscall
0x00000000001456dd : add byte ptr [rax], al ; lea rdi, [rip + 0xaa032] ; syscall
0x00000000001455c1 : add byte ptr [rax], al ; lea rdi, [rip + 0xaa14e] ; syscall
0x00000000001441ee : add byte ptr [rax], al ; lea rdi, [rip + 0xab2c9] ; syscall
0x0000000000140aad : add byte ptr [rax], al ; lea rdi, [rip + 0xae762] ; syscall
0x00000000001407b1 : add byte ptr [rax], al ; lea rdi, [rip + 0xaea5e] ; syscall
0x000000000013c481 : add byte ptr [rax], al ; lea rdi, [rip + 0xb2d7a] ; syscall
0x000000000013bf01 : add byte ptr [rax], al ; lea rdi, [rip + 0xb32de] ; syscall
0x000000000013bd3d : add byte ptr [rax], al ; lea rdi, [rip + 0xb345a] ; syscall
0x000000000013bc75 : add byte ptr [rax], al ; lea rdi, [rip + 0xb34c2] ; syscall
0x000000000013bb35 : add byte ptr [rax], al ; lea rdi, [rip + 0xb3602] ; syscall
0x000000000013ba7d : add byte ptr [rax], al ; lea rdi, [rip + 0xb36ba] ; syscall
0x000000000013b38d : add byte ptr [rax], al ; lea rdi, [rip + 0xb3da2] ; syscall
0x000000000013b06d : add byte ptr [rax], al ; lea rdi, [rip + 0xb40c2] ; syscall
0x000000000013aeb1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb427e] ; syscall
0x0000000000137b15 : add byte ptr [rax], al ; lea rdi, [rip + 0xb74aa] ; syscall
0x00000000001379d5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb75ea] ; syscall
0x000000000013791d : add byte ptr [rax], al ; lea rdi, [rip + 0xb76a2] ; syscall
0x000000000013783d : add byte ptr [rax], al ; lea rdi, [rip + 0xb777a] ; syscall
0x0000000000137371 : add byte ptr [rax], al ; lea rdi, [rip + 0xb7bce] ; syscall
0x0000000000136da1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb813e] ; syscall
0x0000000000136881 : add byte ptr [rax], al ; lea rdi, [rip + 0xb8616] ; syscall
0x00000000001366b5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb87a2] ; syscall
0x0000000000136575 : add byte ptr [rax], al ; lea rdi, [rip + 0xb88e2] ; syscall
0x00000000001364bd : add byte ptr [rax], al ; lea rdi, [rip + 0xb899a] ; syscall
0x00000000001363dd : add byte ptr [rax], al ; lea rdi, [rip + 0xb8a72] ; syscall
0x0000000000135fc1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb8e46] ; syscall
0x00000000001359a5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb9402] ; syscall
0x000000000013584d : add byte ptr [rax], al ; lea rdi, [rip + 0xb955a] ; syscall
0x000000000013578d : add byte ptr [rax], al ; lea rdi, [rip + 0xb961a] ; syscall
0x00000000001356a5 : add byte ptr [rax], al ; lea rdi, [rip + 0xb96fa] ; syscall
0x00000000001355c1 : add byte ptr [rax], al ; lea rdi, [rip + 0xb97a6] ; syscall
0x0000000000134f61 : add byte ptr [rax], al ; lea rdi, [rip + 0xb9dc6] ; syscall
0x0000000000134d55 : add byte ptr [rax], al ; lea rdi, [rip + 0xb9f8a] ; syscall
0x0000000000134bfd : add byte ptr [rax], al ; lea rdi, [rip + 0xba0e2] ; syscall
0x0000000000134b3d : add byte ptr [rax], al ; lea rdi, [rip + 0xba1a2] ; syscall
0x0000000000134a55 : add byte ptr [rax], al ; lea rdi, [rip + 0xba282] ; syscall
0x0000000000133e41 : add byte ptr [rax], al ; lea rdi, [rip + 0xbae1e] ; syscall
0x0000000000133bd1 : add byte ptr [rax], al ; lea rdi, [rip + 0xbb04e] ; syscall
0x0000000000133451 : add byte ptr [rax], al ; lea rdi, [rip + 0xbb76e] ; syscall
0x0000000000129715 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5412] ; syscall
0x00000000001295d5 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5552] ; syscall
0x000000000012951d : add byte ptr [rax], al ; lea rdi, [rip + 0xc560a] ; syscall
0x0000000000129143 : add byte ptr [rax], al ; lea rdi, [rip + 0xc59dc] ; syscall
0x0000000000128f41 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5ba6] ; syscall
0x0000000000128d61 : add byte ptr [rax], al ; lea rdi, [rip + 0xc5d3e] ; syscall
0x0000000000128b9d : add byte ptr [rax], al ; lea rdi, [rip + 0xc5eba] ; syscall
0x0000000000128acd : add byte ptr [rax], al ; lea rdi, [rip + 0xc5f36] ; syscall
0x0000000000128a03 : add byte ptr [rax], al ; lea rdi, [rip + 0xc6000] ; syscall
0x000000000012896e : add byte ptr [rax], al ; lea rdi, [rip + 0xc6095] ; syscall
0x0000000000127c65 : add byte ptr [rax], al ; lea rdi, [rip + 0xc6d6a] ; syscall
0x0000000000127b25 : add byte ptr [rax], al ; lea rdi, [rip + 0xc6eaa] ; syscall
0x0000000000127a6d : add byte ptr [rax], al ; lea rdi, [rip + 0xc6f62] ; syscall
0x0000000000127473 : add byte ptr [rax], al ; lea rdi, [rip + 0xc7554] ; syscall
0x0000000000127271 : add byte ptr [rax], al ; lea rdi, [rip + 0xc76fe] ; syscall
0x0000000000127091 : add byte ptr [rax], al ; lea rdi, [rip + 0xc7876] ; syscall
0x0000000000126ecd : add byte ptr [rax], al ; lea rdi, [rip + 0xc79d2] ; syscall
0x000000000011b8ed : add byte ptr [rax], al ; lea rdi, [rip + 0xd2c5a] ; syscall
0x000000000011b7d1 : add byte ptr [rax], al ; lea rdi, [rip + 0xd2d76] ; syscall
0x000000000011b371 : add byte ptr [rax], al ; lea rdi, [rip + 0xd31d6] ; syscall
0x000000000011ae46 : add byte ptr [rax], al ; lea rdi, [rip + 0xd3701] ; syscall
0x0000000000109d26 : add byte ptr [rax], al ; lea rdi, [rip + 0xe4551] ; syscall
0x0000000000085b8b : add byte ptr [rax], al ; lea rsi, [rsp + 8] ; call rax
0x000000000005a9a6 : add byte ptr [rax], al ; leave ; ret
0x00000000000abbf6 : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x000000000018ccc3 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ef353 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000bb63e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b9ffe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000abc1e : add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017bc8e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017bc7e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017bc5e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013e7cc : add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000abcee : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000bb03e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000005ad10 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000098440 : add byte ptr [rax], al ; mov dword ptr [rip + 0x151e64], eax ; ret
0x000000000014b587 : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001102f8 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000bacfe : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000116e28 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x0000000000122427 : add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000116650 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000046717 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000013fd9e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x0000000000047436 : add byte ptr [rax], al ; mov eax, 0x80 ; syscall
0x0000000000046763 : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000001229b6 : add byte ptr [rax], al ; mov eax, 0x95 ; syscall
0x0000000000057f6c : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000000f531e : add byte ptr [rax], al ; mov eax, 0xc ; ret
0x0000000000025a34 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000004653d : add byte ptr [rax], al ; mov eax, 0xd ; syscall
0x00000000000463e2 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000004466c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000027b34 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000005ac1f : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000005ae32 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000004a885 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000018137e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000009d125 : add byte ptr [rax], al ; mov eax, ebx ; syscall
0x00000000000463ad : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000132ec6 : add byte ptr [rax], al ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000a08c7 : add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x0000000000161743 : add byte ptr [rax], al ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000011744a : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a55d : add byte ptr [rax], al ; mov eax, r8d ; add rsp, 8 ; ret
0x0000000000116ba2 : add byte ptr [rax], al ; mov eax, r8d ; mov ebx, dword ptr fs:[r10] ; syscall
0x0000000000032c53 : add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000084b11 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000046bfd : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000008fdd4 : add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000ba03e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000011904e : add byte ptr [rax], al ; mov edi, 0x1fc0 ; call 0x25339
0x00000000001290e1 : add byte ptr [rax], al ; mov edi, 0x400 ; call 0x25339
0x0000000000115832 : add byte ptr [rax], al ; mov edi, dword ptr [rbp + 0x3c] ; call 0x111aa7
0x000000000013dc07 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000013da1e : add byte ptr [rax], al ; mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x0000000000055400 : add byte ptr [rax], al ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000118293 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0xc] ; syscall
0x000000000012247e : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000124103 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 8] ; syscall
0x0000000000164131 : add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000e5fce : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000001224da : add byte ptr [rax], al ; mov edx, 8 ; syscall
0x00000000000ba02e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000979aa : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000009d120 : add byte ptr [rax], al ; mov esi, 0x81 ; mov eax, ebx ; syscall
0x0000000000162e07 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000162dbf : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001632f2 : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000017bcce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017bcde : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017bcee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bcfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017bcbe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017bc9e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb04e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000ab889 : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000bb08e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb09e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb0ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb0be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb07e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000bb05e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000005ac38 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000858c8 : add byte ptr [rax], al ; mov qword ptr [rdx + 0xf0], rcx ; ret
0x0000000000098419 : add byte ptr [rax], al ; mov qword ptr [rip + 0x151e6e], rax ; ret
0x00000000000983f0 : add byte ptr [rax], al ; mov qword ptr [rip + 0x151e8f], rax ; ret
0x00000000000983d0 : add byte ptr [rax], al ; mov qword ptr [rip + 0x151ea7], rax ; ret
0x000000000014b578 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004b456 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000014b514 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000132ae7 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x10], rax ; call 0x8ed49
0x00000000000d8a49 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x30], rdi ; call 0x25499
0x000000000003757d : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000007bba6 : add byte ptr [rax], al ; mov r10, qword ptr [rbp - 0x518] ; jmp rax
0x000000000014243e : add byte ptr [rax], al ; mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000007b019 : add byte ptr [rax], al ; mov r10, rdx ; jmp rax
0x00000000000889ab : add byte ptr [rax], al ; mov r8, rbp ; mov edx, dword ptr [rbx] ; jmp 0x88987
0x000000000008243e : add byte ptr [rax], al ; mov r9, qword ptr [rbp - 0x508] ; jmp rax
0x0000000000081686 : add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x000000000003119b : add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x31158
0x00000000000313fb : add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x313b8
0x000000000004630c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000d2cfe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000d2d0e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000d2d1e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000d2d2e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000d2d3e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000d2d4e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000008c9d2 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000120226 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000004a6c8 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014c37e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a16ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x148879] ; call qword ptr [rax]
0x000000000009aa40 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x14f377] ; call qword ptr [rax]
0x0000000000162f2e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8cf51] ; call qword ptr [rax]
0x000000000014b214 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000004460c : add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000000d322f : add byte ptr [rax], al ; mov rax, r12 ; pop r12 ; ret
0x0000000000065735 : add byte ptr [rax], al ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000011a4a3 : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ce5f : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001565bd : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x000000000009b26f : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000018bede : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000003bec5 : add byte ptr [rax], al ; mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009266b : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000931e6 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb2ce : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000018eaee : add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x00000000000bed93 : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011dae9 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call rbx
0x000000000011dba9 : add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x000000000003fee7 : add byte ptr [rax], al ; mov rdi, qword ptr [r15 + 0x18] ; call 0x3c128
0x000000000011dd1a : add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000000a1a3e : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000a17fa : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000014bfe7 : add byte ptr [rax], al ; mov rdi, r12 ; call qword ptr [rbx]
0x0000000000039236 : add byte ptr [rax], al ; mov rdi, r13 ; call 0x254a7
0x000000000012dfae : add byte ptr [rax], al ; mov rdi, r15 ; call 0x12a1d7
0x0000000000084315 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000083d1f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000ba06e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a047f : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, r12 ; call rax
0x0000000000115fad : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000009fb1e : add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000000a0e21 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a1086 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000005e5ae : add byte ptr [rax], al ; mov rsp, rdx ; ret
0x0000000000116f59 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000abb2e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018db3e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x000000000004b498 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000bb0ce : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000bb0de : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000813a6 : add byte ptr [rax], al ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000080fec : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000082287 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x00000000001539c7 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x00000000001530a4 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000008ad37 : add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x0000000000144df5 : add byte ptr [rax], al ; movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x000000000009582c : add byte ptr [rax], al ; movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x000000000012f6dc : add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x0000000000094b33 : add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x00000000001502c1 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530c9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539d9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539b9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x00000000001102df : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010371c : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000014b599 : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000093f51 : add byte ptr [rax], al ; movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf2ee : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000001713ae : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000017133e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000012872c : add byte ptr [rax], al ; nop ; endbr64 ; ret
0x000000000019425d : add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000019424d : add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x000000000017bc6c : add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bb00d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bb02c : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb01d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017bcad : add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000bb06d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000018ddad : add byte ptr [rax], al ; nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017bc4d : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc3c : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000baffc : add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x0000000000034a1c : add byte ptr [rax], al ; nop ; ret
0x0000000000187c4d : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000be0cc : add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000014b64d : add byte ptr [rax], al ; nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002723d : add byte ptr [rax], al ; nop ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000d252c : add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x000000000019bf91 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000149b7b : add byte ptr [rax], al ; nop dword ptr [rax] ; endbr64 ; ret
0x000000000017bc2a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000bafea : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000b995a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000bacda : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000af88b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000130f48 : add byte ptr [rax], al ; nop word ptr [rax + rax] ; ret
0x0000000000045377 : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x00000000000bf279 : add byte ptr [rax], al ; or byte ptr [rdi], 0xa2 ; jmp 0xbf249
0x0000000000116c1f : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9b75
0x00000000001302f2 : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000000e01ba : add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x000000000014bda3 : add byte ptr [rax], al ; pop rbp ; jmp rcx
0x000000000006653d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063fec : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000469d8 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000005e69a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000bf2a9 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x000000000009cd82 : add byte ptr [rax], al ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000011313e : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000475ab : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046861 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008639d : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000003332c : add byte ptr [rax], al ; pop rbx ; ret
0x000000000009320e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000119fae : add byte ptr [rax], al ; pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000027377 : add byte ptr [rax], al ; ret
0x0000000000105d56 : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x00000000000e802e : add byte ptr [rax], al ; setne al ; ret
0x000000000009bb9f : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x000000000010f8ea : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019177c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000044f18 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000117486 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000013f52f : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000a895a : add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa8917
0x00000000000a99fa : add byte ptr [rax], al ; sub rax, r9 ; add r10, rax ; jmp 0xa99b7
0x00000000000a67a9 : add byte ptr [rax], al ; sub rax, rbp ; add rdx, rax ; jmp 0xa6767
0x00000000000f3fb8 : add byte ptr [rax], al ; sub rax, rcx ; add rdx, rax ; jmp 0xf3f57
0x0000000000095b96 : add byte ptr [rax], al ; sub rax, rcx ; sub eax, 1 ; ret
0x00000000000bead1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000025a39 : add byte ptr [rax], al ; syscall
0x000000000014b483 : add byte ptr [rax], al ; test eax, eax ; je 0x14b498 ; xor eax, eax ; ret
0x000000000011126a : add byte ptr [rax], al ; test eax, eax ; jne 0x111286 ; syscall
0x00000000000e80b7 : add byte ptr [rax], al ; test edi, edi ; js 0xe80c6 ; ret
0x0000000000066174 : add byte ptr [rax], al ; test edx, edx ; jne 0x66189 ; sub dword ptr [rdi], 1 ; ret
0x0000000000110603 : add byte ptr [rax], al ; test rax, rax ; je 0x110649 ; xor edx, edx ; call rax
0x0000000000130122 : add byte ptr [rax], al ; test rax, rax ; je 0x130167 ; call rax
0x000000000018cfd0 : add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018809e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000d332c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000a20e8 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000090a3c : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf266 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000044376 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001878ae : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000004b07a : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000011703e : add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000039344 : add byte ptr [rax], al ; xor esi, esi ; call 0x25606
0x0000000000091466 : add byte ptr [rax], al ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d225e : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000123c4d : add byte ptr [rax], cl ; add byte ptr [rbp + 5], bh ; jmp 0x123c23
0x0000000000037118 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000000371f8 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x0000000000028485 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000478d1 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000004580d : add byte ptr [rax], r8b ; addss xmm0, xmm0 ; ret
0x000000000004921d : add byte ptr [rax], r8b ; call 0x25495
0x00000000000999fd : add byte ptr [rax], r8b ; call rax
0x000000000009698d : add byte ptr [rax], r8b ; endbr64 ; ret
0x00000000001494cd : add byte ptr [rax], r8b ; endbr64 ; xor eax, eax ; ret
0x00000000001168cd : add byte ptr [rax], r8b ; endbr64 ; xor eax, eax ; syscall
0x000000000004517d : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000065f65 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000008b525 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000e8935 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000010290d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x0000000000128add : add byte ptr [rax], r8b ; mov eax, r8d ; ret
0x00000000000e5fcd : add byte ptr [rax], r8b ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000ba02d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011fe55 : add byte ptr [rax], r8b ; mov rax, r8 ; ret
0x00000000000bb2cd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000012dfad : add byte ptr [rax], r8b ; mov rdi, r15 ; call 0x12a1d8
0x00000000000ba06d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a15b5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000014be25 : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000332b5 : add byte ptr [rax], r8b ; ret
0x0000000000095b95 : add byte ptr [rax], r8b ; sub rax, rcx ; sub eax, 1 ; ret
0x00000000000bf265 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000058cd5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000001878ad : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x00000000000a5a0d : add byte ptr [rax], r8b ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d225d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x000000000014d594 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000090d37 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x0000000000118ac3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x58 ; ret
0x0000000000163eae : add byte ptr [rbp + 0x13], dh ; add rsp, 0x38 ; ret
0x00000000000d33c2 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x0000000000161e27 : add byte ptr [rbp + 0x15], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001222b8 : add byte ptr [rbp + 0x18], dh ; add rsp, 0x68 ; ret
0x00000000001414d8 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d7304 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x0000000000046ca5 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000154922 : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e7e64 : add byte ptr [rbp + 0x1c], dh ; mov eax, 0xfffa ; ret
0x000000000005e954 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x00000000000cd282 : add byte ptr [rbp + 0x1f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000157422 : add byte ptr [rbp + 0x23], dh ; add rsp, 0x28 ; ret
0x0000000000124253 : add byte ptr [rbp + 0x24], dh ; mov eax, 0x42 ; syscall
0x000000000013da0c : add byte ptr [rbp + 0x28], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013998e : add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x00000000000d57f1 : add byte ptr [rbp + 0x29], al ; ret
0x00000000000d5582 : add byte ptr [rbp + 0x29], al ; retf
0x00000000000d99d4 : add byte ptr [rbp + 0x29], al ; shr dword ptr [rcx], cl ; ret 0x8945
0x000000000016637f : add byte ptr [rbp + 0x29], cl ; retf 0x8d4b
0x00000000000cd056 : add byte ptr [rbp + 0x29dd75db], al ; ret
0x000000000014c8e3 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e7ff : add byte ptr [rbp + 0x2e], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000054de9 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015fc61 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; ret
0x0000000000091a0e : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000a6ba7 : add byte ptr [rbp + 0x31], al ; fild dword ptr [rbp - 0x77] ; ret 0x8948
0x000000000015d453 : add byte ptr [rbp + 0x31], al ; fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000000d323f : add byte ptr [rbp + 0x31], al ; in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x000000000014238f : add byte ptr [rbp + 0x31], al ; rol byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000000a3cb0 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000131ae6 : add byte ptr [rbp + 0x31], al ; shl byte ptr [rbx + rax*4 + 0x39], 0xb ; jne 0x131ac3 ; jmp 0x131ab3
0x0000000000160118 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbp ; ret
0x000000000014c981 : add byte ptr [rbp + 0x31], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014a94e : add byte ptr [rbp + 0x34], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000118c13 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x68 ; ret
0x0000000000162f13 : add byte ptr [rbp + 0x38], dh ; add rsp, 0x58 ; ret
0x00000000000cd0b2 : add byte ptr [rbp + 0x391974db], al ; ret
0x00000000000cd1a7 : add byte ptr [rbp + 0x391c74db], al ; ret
0x00000000001423d7 : add byte ptr [rbp + 0x39], al ; retf
0x000000000019a65d : add byte ptr [rbp + 0x39], cl ; ret
0x000000000009a796 : add byte ptr [rbp + 0x39], cl ; ret 0x850f
0x00000000000981f1 : add byte ptr [rbp + 0x39], cl ; ret 0xd977
0x0000000000160f11 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000119d87 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x38 ; ret
0x0000000000119e56 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000016326c : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x38 ; ret
0x000000000009c3ba : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x40 ; pop rbp ; ret
0x000000000011fdef : add byte ptr [rbp + 0x3e], dh ; mov rdx, rax ; jmp 0x11fe0e
0x0000000000158f90 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c370 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009e4ff : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; jmp rax
0x000000000006653e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000063fed : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000469d9 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001594b0 : add byte ptr [rbp + 0x41], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e6505 : add byte ptr [rbp + 0x41], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000159060 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbp ; ret
0x000000000015a490 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000004bfa4 : add byte ptr [rbp + 0x440f48f6], 0xc2 ; jmp 0x4bfc6
0x0000000000159710 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013fbac : add byte ptr [rbp + 0x46], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000124272 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x58 ; ret
0x000000000011663a : add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x00000000001166c9 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x00000000001167b1 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x000000000016300a : add byte ptr [rbp + 0x47], dh ; add rsp, 0x68 ; ret
0x000000000011684f : add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x0000000000118878 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009d648 : add byte ptr [rbp + 0x4c], bl ; mov eax, eax ; pop r12 ; pop r13 ; ret
0x000000000009e7df : add byte ptr [rbp + 0x4c], bl ; mov esi, esp ; pop r12 ; pop r13 ; jmp rax
0x00000000001595cf : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001631a3 : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x68 ; ret
0x0000000000085980 : add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000005e139 : add byte ptr [rbp + 0x51], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e21ce : add byte ptr [rbp + 0x52], dh ; add rsp, 0x38 ; ret
0x0000000000105c50 : add byte ptr [rbp + 0x53], dh ; add rsp, 0x38 ; ret
0x000000000014007a : add byte ptr [rbp + 0x54], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000054f67 : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000117c5e : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; ret
0x0000000000054e99 : add byte ptr [rbp + 0x5f], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e739e : add byte ptr [rbp + 0x62], dh ; add rsp, 0x38 ; ret
0x0000000000154eeb : add byte ptr [rbp + 0x6c], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e43ca : add byte ptr [rbp + 0x6f], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c74 : add byte ptr [rbp + 0x73], dh ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000117db3 : add byte ptr [rbp + 0x75], dh ; add rsp, 0x38 ; ret
0x000000000014a6dd : add byte ptr [rbp + 0x77], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000115ce4 : add byte ptr [rbp + 0x7f], dh ; add rsp, 0x40 ; pop r12 ; ret
0x00000000001328f7 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000116dcc : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x00000000000d7435 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000065ed6 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x18 ; ret
0x00000000000e5c64 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001554b2 : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005956f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000005945f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000d5f2b : add byte ptr [rbp + 1], cl ; retf 0x8d49
0x000000000005811d : add byte ptr [rbp + 3], dh ; push r10 ; ret
0x0000000000123c4f : add byte ptr [rbp + 5], bh ; jmp 0x123c21
0x0000000000045f74 : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000004a742 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000139a2b : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000158e95 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000156be4 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000015ae59 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d343c : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbp ; ret
0x0000000000147c2c : add byte ptr [rbp + 7], dh ; add rsp, 0x10 ; pop r12 ; ret
0x000000000004a66e : add byte ptr [rbp + 7], dh ; pop rbx ; ret
0x00000000000e7f85 : add byte ptr [rbp + 8], dh ; mov eax, 0x40 ; ret
0x0000000000116830 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000317fc : add byte ptr [rbp + rcx*4 + 0x41], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x0000000000154e99 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x14 ; call qword ptr [rax]
0x000000000015566f : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000014a73a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x000000000014a488 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x00000000000f08d7 : add byte ptr [rbp + rcx*4 + 0x52], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8349
0x00000000000590df : add byte ptr [rbp + rcx*4 + 0x54], cl ; retf 0x4cf0
0x00000000000a4a0f : add byte ptr [rbp + rcx*4 + 0x58], cl ; dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000019656f : add byte ptr [rbp + rcx*4 + 0x5f], cl ; add dword ptr [rcx - 9], eax ; ret
0x000000000008998d : add byte ptr [rbp + rcx*4 + 5], cl ; retf
0x0000000000026ab4 : add byte ptr [rbp - 0x3c], dh ; ret
0x00000000000888bb : add byte ptr [rbp - 0x3e], dh ; jmp 0x88855
0x00000000000cdaef : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000196ae7 : add byte ptr [rbp - 0x76b23fb6], cl ; retf
0x00000000001964c6 : add byte ptr [rbp - 0x76b33fb6], cl ; retf
0x000000000019983f : add byte ptr [rbp - 0x76b63fb6], cl ; ret 0xd349
0x000000000010f16c : add byte ptr [rbp - 0x76b7febd], cl ; ret
0x00000000000f139b : add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x00000000000fb07f : add byte ptr [rbp - 0x76db8b40], al ; ret 0xe283
0x00000000000f770c : add byte ptr [rbp - 0x77], al ; loopne 0xf7766 ; mov ecx, ebp ; call 0xf3959
0x00000000000d5627 : add byte ptr [rbp - 0x77], al ; ret 0x8341
0x00000000000a8092 : add byte ptr [rbp - 0x77], cl ; adc eax, dword ptr [rbp - 0x77] ; ret 0x8b4b
0x00000000000ecef7 : add byte ptr [rbp - 0x77], cl ; fmul qword ptr [rax - 0x77] ; retf
0x000000000010877e : add byte ptr [rbp - 0x77], cl ; in eax, 0xe8 ; leave ; retf
0x00000000000d894c : add byte ptr [rbp - 0x77], cl ; out 0x89, eax ; ret 0x44c7
0x000000000002ff54 : add byte ptr [rbp - 0x77], cl ; ret
0x00000000000ad8fd : add byte ptr [rbp - 0x77], cl ; retf
0x000000000019622a : add byte ptr [rbp - 0x77], cl ; retf 0x894c
0x0000000000196b84 : add byte ptr [rbp - 0x77], cl ; retf 0x894d
0x00000000000a0788 : add byte ptr [rbp - 0x7acc812e], al ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000158c70 : add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; ret
0x000000000002b809 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ed15b : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; retf
0x000000000007a5fb : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; retf
0x000000000006fb3f : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8341
0x000000000004ce3b : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x00000000000f0f0f : add byte ptr [rbp - 0x7cdf872e], al ; ret 0x4801
0x000000000011b5f8 : add byte ptr [rbp - 0x8f38b25], al ; ret
0x000000000011ac6f : add byte ptr [rbp - 0x8f38b2e], al ; ret 0xfc07
0x0000000000057417 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000e7c1d : add byte ptr [rbp], bh ; add byte ptr [rax + 0xf], cl ; ret 0x19e9
0x00000000000e7c37 : add byte ptr [rbp], bh ; add byte ptr [rax + 0xf], cl ; ret 0xffe9
0x00000000000e76a2 : add byte ptr [rbp], bh ; add cl, ch ; ret
0x00000000001833d9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000009bedb : add byte ptr [rbx + 0x14ec9d2d], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000096a15 : add byte ptr [rbx + 0x156a8705], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000011ae2f : add byte ptr [rbx + 0x17f01f8], al ; ret
0x000000000009f39b : add byte ptr [rbx + 0x22], dh ; lea rax, [rax - 8] ; ret
0x000000000004ed50 : add byte ptr [rbx + 0x29482404], cl ; retf
0x000000000009320f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000013da1f : add byte ptr [rbx + 0x3b83b], cl ; add byte ptr [rax], al ; syscall
0x000000000008424f : add byte ptr [rbx + 0x3c83480e], cl ; retf 0x4800
0x000000000011313f : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ab580 : add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x0000000000110b46 : add byte ptr [rbx + 0x47426f8], al ; mov eax, r9d ; ret
0x00000000000ba03f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000017dfcf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000018137f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000467ad : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000bc4bf : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x00000000000bf2aa : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x000000000009cd83 : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000170b3f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000ef722 : add byte ptr [rbx + 0x5b010447], al ; pop rbp ; pop r12 ; ret
0x000000000008e6d5 : add byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; pop r12 ; ret
0x00000000000666c4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000475ac : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000046862 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008639e : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115833 : add byte ptr [rbx + 0x64e83c7d], cl ; ret 0xffff
0x0000000000039410 : add byte ptr [rbx + 0x6c0f6600], cl ; ret 0xf41
0x000000000002a99f : add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x0000000000192e6a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001513a6 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x000000000009aeae : add byte ptr [rbx + rcx*4 + 0x25], cl ; ret 0x14ee
0x00000000000abee9 : add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret 0x854d
0x0000000000063df5 : add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x18
0x0000000000038545 : add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x00000000000ce15b : add byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x10 ; call r14
0x000000000009afa7 : add byte ptr [rbx + rcx*4 + 0x50], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000005abb7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000058c87 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000104be5 : add byte ptr [rbx + rcx*4 + 0x63], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000491ef : add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000011f7d4 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d6cd6 : add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x1171
0x000000000011a19e : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xd42
0x00000000001605c5 : add byte ptr [rbx + rcx*4 + 5], cl ; retf
0x00000000000f0ed5 : add byte ptr [rbx - 0x157cfe15], al ; add dword ptr [rax + 0x63], ecx ; ret
0x00000000000e91a7 : add byte ptr [rbx - 0x30373], al ; call qword ptr [rax]
0x000000000008a93f : add byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bf37e : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000bf377 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000bf370 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000bf369 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000bf38c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000bf385 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000011ff7f : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000014438a : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x1443a0 ; ret
0x00000000000bf5fd : add byte ptr [rbx - 0x3f7cfe3e], al ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x000000000014281c : add byte ptr [rbx - 0x49f0fe0d], al ; ret
0x0000000000081818 : add byte ptr [rbx - 0x50743], al ; call qword ptr [rax]
0x00000000000bf614 : add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xcfe9
0x000000000002f2c1 : add byte ptr [rbx - 0x57f3f1e], al ; or byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000010cdb7 : add byte ptr [rbx - 0x6af0fd05], al ; ret
0x000000000010cc1f : add byte ptr [rbx - 0x6af0fe05], al ; ret
0x0000000000198b8b : add byte ptr [rbx - 0x70f08b06], al ; retf
0x000000000019621b : add byte ptr [rbx - 0x70f0c006], al ; ret
0x00000000000f3984 : add byte ptr [rbx - 0x72bed3a7], cl ; add dword ptr [rcx], edi ; ret
0x0000000000126b9e : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x000000000004a6cc : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000cd127 : add byte ptr [rbx - 0x76b30383], cl ; out 0x89, al ; ret
0x0000000000107471 : add byte ptr [rbx - 0x76b7fd07], al ; ret 0x940f
0x000000000013f5b1 : add byte ptr [rbx - 0x77], dl ; retf
0x000000000013f530 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x13f541 ; ret
0x000000000007d805 : add byte ptr [rbx - 0x78f0f808], al ; ret 8
0x00000000000af7c4 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000007fdbc : add byte ptr [rbx - 0x7af00008], al ; jmp rax
0x00000000000bf5a8 : add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x000000000012f7eb : add byte ptr [rbx - 0x7af0fe05], al ; retf
0x00000000001060ef : add byte ptr [rbx - 0x7bf00001], al ; ret
0x00000000000ceddc : add byte ptr [rbx - 0x7bf0d403], al ; ret 7
0x00000000000c236c : add byte ptr [rbx - 0x7bf0d403], al ; retf 1
0x00000000001956b6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000f79b7 : add byte ptr [rbx - 0x7bf0f71e], al ; ret 0xfffc
0x000000000003c5d4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0x1a
0x000000000004006c : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000003ef29 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x000000000003dbc3 : add byte ptr [rbx - 0x7bf0fd08], al ; call qword ptr [rcx]
0x0000000000040797 : add byte ptr [rbx - 0x7bf0fd08], al ; retf 8
0x000000000003d17b : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000414b0 : add byte ptr [rbx - 0x7bf0fe08], al ; retf
0x0000000000041ccf : add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x00000000000404e8 : add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x14
0x000000000012f6a7 : add byte ptr [rbx - 0x7cb7e7ad], cl ; ret
0x0000000000144669 : add byte ptr [rbx - 0x7cb7efab], cl ; ret
0x0000000000144537 : add byte ptr [rbx - 0x7cb7efbb], cl ; ret
0x00000000000eb747 : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000000000bfc3f : add byte ptr [rbx - 0x7cb7fb8d], cl ; ret
0x000000000008409c : add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000063d8f : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret
0x0000000000083fc7 : add byte ptr [rbx - 0x7cb7fbbe], cl ; ret 0x4104
0x00000000000bfcd7 : add byte ptr [rbx - 0x7cb7fbbe], cl ; ret 0x8504
0x000000000014410f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3928
0x00000000000f39af : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x000000000018c583 : add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x0000000000070d40 : add byte ptr [rbx - 0x9bef71d], al ; ret
0x000000000011a0f3 : add byte ptr [rbx], ah ; mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x0000000000096707 : add byte ptr [rbx], ch ; push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000132f57 : add byte ptr [rcx + 0x18e8c1f8], cl ; ret
0x0000000000150332 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000001981c1 : add byte ptr [rcx + 0x21], cl ; ret
0x00000000000d9d3b : add byte ptr [rcx + 0x29], al ; ret
0x00000000000db5f1 : add byte ptr [rcx + 0x29], al ; ret 0x8944
0x00000000000db62c : add byte ptr [rcx + 0x29], al ; ret 0x8d43
0x00000000000d9de1 : add byte ptr [rcx + 0x29], al ; ret 0xbe0f
0x0000000000080db8 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000ba315 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000005e93f : add byte ptr [rcx + 0x29], cl ; retf 0x8d4b
0x000000000008c7af : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000000853b7 : add byte ptr [rcx + 0x31c289df], cl ; shr al, 0x4d ; ret
0x000000000017bc8f : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000002f68b : add byte ptr [rcx + 0x3948fc51], cl ; ret
0x00000000000fbd9b : add byte ptr [rcx + 0x39], al ; ret
0x00000000000d9eb1 : add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000fbf5b : add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x00000000000d9f51 : add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x000000000006244b : add byte ptr [rcx + 0x39], cl ; ret
0x0000000000062293 : add byte ptr [rcx + 0x39], cl ; ret 0x1773
0x00000000000a6094 : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000002d0b0 : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000164132 : add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x000000000010582a : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000037725 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000011c398 : add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000001302f3 : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000e01bb : add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x000000000011c35f : add byte ptr [rcx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000105627 : add byte ptr [rcx + 0x63482c53], cl ; ret 0x2de9
0x000000000007715e : add byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000190a30 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000d09ea : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000fce68 : add byte ptr [rcx + 0x63], cl ; ret 0x8341
0x000000000006f8dd : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x00000000000c3680 : add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x000000000005dac5 : add byte ptr [rcx + 0x63], cl ; ret 0xd231
0x00000000000ff99e : add byte ptr [rcx + 0x63], cl ; retf
0x0000000000045e9f : add byte ptr [rcx + 0x6f0f66ef], cl ; ret 0x5e8
0x00000000000d9ca1 : add byte ptr [rcx + 0x76bc3], al ; add byte ptr [rdi], cl ; ret
0x00000000000a7198 : add byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000001539c8 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x00000000001530a5 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x00000000000ee66f : add byte ptr [rcx + 0xf], al ; mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000066f3f : add byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add dword ptr [rax - 0x7d], ecx ; ret 0xbe02
0x000000000007de57 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000f400f : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000d5606 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x3ee9
0x00000000000d58ae : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0xe1e9
0x0000000000062755 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x3145
0x0000000000039ad1 : add byte ptr [rcx + 0xf], cl ; retf 0x8949
0x00000000000dceae : add byte ptr [rcx + 1], al ; ret 0x8944
0x00000000000563e4 : add byte ptr [rcx + 1], cl ; ret
0x0000000000116b8f : add byte ptr [rcx + 9], al ; ret 0x8941
0x0000000000196556 : add byte ptr [rcx + 9], cl ; retf 0x8548
0x00000000000a895b : add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa8916
0x00000000000a99fb : add byte ptr [rcx + rbp - 0x38], cl ; add r10, rax ; jmp 0xa99b6
0x000000000010a21a : add byte ptr [rcx + rbx*2 + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000035691 : add byte ptr [rcx + rcx*4 + 0x25], al ; ret
0x0000000000143468 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x00000000000f7892 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x8b48
0x0000000000143410 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x0000000000143020 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x00000000000ce354 : add byte ptr [rcx + rcx*4 + 0x42], 4 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000011dfdc : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000009aba3 : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000012bfb5 : add byte ptr [rcx + rcx*4 + 0x45], cl ; test al, 0x89 ; ret 0xc031
0x00000000000abb57 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000ab8e8 : add byte ptr [rcx + rcx*4 + 7], cl ; mov rax, r12 ; pop r12 ; ret
0x0000000000039237 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x254a6
0x00000000000d92fe : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x255a6
0x000000000004a40b : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, 0xca ; syscall
0x00000000000a0480 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r12 ; call rax
0x00000000001245fc : add byte ptr [rcx + rcx*4 - 0x19], al ; mov eax, 0x14 ; syscall
0x000000000014bfe8 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rbx]
0x000000000013b7ab : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000049e22 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 0xca ; syscall
0x000000000009fb1f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x0000000000048b93 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r15 ; call 0x255d9
0x00000000000a0e22 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000115cc4 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov eax, 0x10f ; syscall
0x00000000000a08c8 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000128906 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000161744 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000011744b : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d3230 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000085d13 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000065736 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x000000000011a4a4 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004460d : add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000003bec6 : add byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000154daa : add byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0x000000000011a55e : add byte ptr [rcx + rcx*4 - 0x40], al ; add rsp, 8 ; ret
0x0000000000116ba3 : add byte ptr [rcx + rcx*4 - 0x40], al ; mov ebx, dword ptr fs:[r10] ; syscall
0x0000000000032c54 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000084b12 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x0000000000046bfe : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000008b0b4 : add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000011a8a2 : add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; ret
0x000000000009ce60 : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001565be : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000009b270 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000018bedf : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000011faf8 : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r15 ; call 0x4bde9
0x000000000012dfaf : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x12a1d6
0x000000000009f2ea : add byte ptr [rcx + rcx*4 - 1], cl ; mov eax, 0xca ; syscall
0x00000000000e1c24 : add byte ptr [rcx + rcx*4 - 8], cl ; call rax
0x0000000000049c2b : add byte ptr [rcx + rcx*4 - 9], cl ; mov eax, 0xca ; syscall
0x000000000011cc71 : add byte ptr [rcx + rsi + 0x48], dh ; mov edi, ebp ; xor esi, esi ; call r12
0x0000000000093194 : add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0x1389
0x00000000000609ae : add byte ptr [rcx - 0x1177b], cl ; ljmp [rcx] ; ret
0x0000000000054748 : add byte ptr [rcx - 0x39], cl ; ret
0x000000000014afa7 : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x37a59
0x0000000000196224 : add byte ptr [rcx - 0x45], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x894c
0x0000000000031182 : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000002f640 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000009a45b : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 - 0x7b] ; ret 0x850f
0x000000000009b66d : add byte ptr [rcx - 0x73], cl ; push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000015a7ca : add byte ptr [rcx - 0x74b7d7b9], cl ; sbb byte ptr [r15], r9b ; retf 0x8348
0x00000000000efa11 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000011dbaa : add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000000591df : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000003fee8 : add byte ptr [rcx - 0x75], cl ; jg 0x3ff0c ; call 0x3c127
0x000000000011daea : add byte ptr [rcx - 0x75], cl ; jge 0x11daf4 ; call rbx
0x000000000011db1a : add byte ptr [rcx - 0x75], cl ; jge 0x11db24 ; call rbx
0x000000000011db4a : add byte ptr [rcx - 0x75], cl ; jge 0x11db54 ; call rbx
0x000000000008c99c : add byte ptr [rcx - 0x75], cl ; mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000f841f : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r9], al ; retf
0x0000000000083958 : add byte ptr [rcx - 0x76b3d395], cl ; ret 0x8348
0x0000000000083c08 : add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x000000000013e7cd : add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x0000000000026d83 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000f68e2 : add byte ptr [rcx - 0x77], al ; ret 0x3941
0x00000000000ebd35 : add byte ptr [rcx - 0x77], al ; ret 0x3b4c
0x000000000002e2c8 : add byte ptr [rcx - 0x77], al ; ret 0x5a58
0x0000000000116b1b : add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000000de24d : add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000ebc40 : add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x000000000004d387 : add byte ptr [rcx - 0x77], al ; ret 0xd231
0x000000000015bccb : add byte ptr [rcx - 0x77], al ; ret 0xf883
0x00000000000d9da2 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000110886 : add byte ptr [rcx - 0x77], al ; ror byte ptr [rax - 0x77], 1 ; retf
0x00000000001330c0 : add byte ptr [rcx - 0x77], al ; ror dword ptr [rdi], 0x97 ; ret 0x840
0x000000000002fbad : add byte ptr [rcx - 0x77], al ; xor ecx, dword ptr [rcx - 0x77] ; retf
0x00000000000889ac : add byte ptr [rcx - 0x77], cl ; call 0xffffffffcbf39d46
0x00000000001029b7 : add byte ptr [rcx - 0x77], cl ; dec byte ptr [rbp - 0x77] ; ret
0x00000000000f2545 : add byte ptr [rcx - 0x77], cl ; dec dword ptr [rax - 0x77] ; retf 0xd349
0x0000000000031666 : add byte ptr [rcx - 0x77], cl ; dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x000000000003c067 : add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x000000000011fe49 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x0000000000119bcf : add byte ptr [rcx - 0x77], cl ; fsubp st(1) ; retf
0x0000000000081687 : add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x000000000003119c : add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x31157
0x00000000000313fc : add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x313b7
0x000000000009b2ea : add byte ptr [rcx - 0x77], cl ; push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000065c49 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000d0482 : add byte ptr [rcx - 0x77], cl ; ret 0x2e66
0x00000000000a2d17 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000054623 : add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000006202f : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000014db95 : add byte ptr [rcx - 0x77], cl ; ret 0xb43
0x00000000001963ca : add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x000000000014243f : add byte ptr [rcx - 0x77], cl ; ret 0xc641
0x000000000002fccc : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000100b47 : add byte ptr [rcx - 0x77], cl ; retf 0x8b49
0x00000000000a837d : add byte ptr [rcx - 0x77], cl ; retf 0x8b4c
0x0000000000118d02 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x73], 5 ; retf 0x9f2
0x0000000000044b39 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000000f1363 : add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x000000000019a6a1 : add byte ptr [rcx - 0x7b], cl ; ret
0x0000000000060abf : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000010d2de : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rbx]
0x0000000000141718 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000f343f : add byte ptr [rcx - 0x7d], al ; ret 0x8d01
0x000000000006f50f : add byte ptr [rcx - 0x7d], al ; retf
0x000000000019a5a7 : add byte ptr [rcx - 0x7d], al ; retf 0x4101
0x000000000019a167 : add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x0000000000026dc0 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000043d0b : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012552c : add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x00000000000a3d0b : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000004d3df : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000071b1b : add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x0000000000166adf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a3c96 : add byte ptr [rcx - 0x7d], cl ; ret 0xbd01
0x000000000007a044 : add byte ptr [rcx - 0x7d], cl ; ret 0xbe01
0x000000000012de40 : add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000000ac29f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011ced0 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000011ce75 : add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x000000000002b39f : add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx], 0x89 ; xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000006f4ff : add byte ptr [rcx - 0x7f], al ; retf
0x000000000010e389 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000010bd6f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000010e53a : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x00000000000345ae : add byte ptr [rcx - 0x8373], cl ; dec dword ptr [rcx + 1] ; ret 0x8d48
0x000000000012f64f : add byte ptr [rcx - 0x877b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007dfa8 : add byte ptr [rcx - 0x8ef63], cl ; dec dword ptr [rax - 0x77] ; retf
0x000000000002b27f : add byte ptr [rcx - 0xa], al ; ret
0x00000000000a98f6 : add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000009f17d : add byte ptr [rcx - 0xa], cl ; call 0x11bc86
0x0000000000132ec7 : add byte ptr [rcx - 0xda08], cl ; inc dword ptr [rax] ; ret
0x00000000001109aa : add byte ptr [rcx - 0xfff1e], al ; dec dword ptr [rcx] ; retf 0x9489
0x000000000006f799 : add byte ptr [rcx - 9], al ; ret
0x00000000000af996 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000000af9bc : add byte ptr [rcx - 9], cl ; ret 2
0x000000000014c186 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015e34d : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000015e6e5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000374bd : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000116f57 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013f0ca : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000beacf : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000049f22 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d59c1 : add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000a3624 : add byte ptr [rcx], al ; je 0xa35e9 ; ret
0x00000000000bff34 : add byte ptr [rcx], al ; je 0xbfef9 ; ret
0x0000000000128a7a : add byte ptr [rcx], al ; mov eax, r8d ; add rsp, 8 ; ret
0x000000000013adce : add byte ptr [rcx], al ; mov eax, r8d ; pop rbp ; ret
0x0000000000064137 : add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000015ffd1 : add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x00000000000371d8 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000004a8fe : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000057db5 : add byte ptr [rcx], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000055460 : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000086fb1 : add byte ptr [rcx], al ; ret
0x00000000000f521e : add byte ptr [rcx], al ; ret 0xc083
0x0000000000056c8b : add byte ptr [rcx], al ; ret 0xfde9
0x000000000015eab1 : add byte ptr [rcx], al ; retf 0x27e8
0x000000000004513a : add byte ptr [rcx], al ; retf 0xfe0d
0x00000000000df1f8 : add byte ptr [rcx], al ; ror dword ptr [rcx - 0x35d6bb36], 0x81 ; ret 0x17e
0x0000000000049a01 : add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; ret
0x000000000004a2d4 : add byte ptr [rcx], al ; xor esi, esi ; mov rdi, r9 ; call r8
0x000000000018fadf : add byte ptr [rcx], bh ; enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000cd037 : add byte ptr [rcx], bh ; ret
0x0000000000105443 : add byte ptr [rcx], bh ; ret 0x1874
0x000000000009a6b6 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000ee01f : add byte ptr [rcx], bh ; retf
0x000000000003a887 : add byte ptr [rcx], bh ; retf 0x7477
0x000000000010561f : add byte ptr [rcx], bh ; retf 0x840f
0x0000000000102f22 : add byte ptr [rcx], bh ; retf 0x8c0f
0x0000000000105309 : add byte ptr [rcx], bh ; retf 0xe74
0x0000000000198823 : add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000198942 : add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001873af : add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x000000000018787f : add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x00000000000cd1c7 : add byte ptr [rcx], ch ; ret
0x00000000000df406 : add byte ptr [rcx], ch ; ret 0x8948
0x00000000000dc06b : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000d9b44 : add byte ptr [rcx], ch ; ret 0x8d44
0x0000000000117487 : add byte ptr [rcx], ch ; ret 0xc085
0x00000000000dddb5 : add byte ptr [rcx], ch ; ret 0xd729
0x0000000000027604 : add byte ptr [rcx], ch ; retf
0x00000000000de206 : add byte ptr [rcx], ch ; ror dword ptr [rcx - 0x35d6bb36], 0x81 ; ret 0x17e
0x0000000000054eef : add byte ptr [rcx], cl ; ret 0x8f74
0x000000000002ac95 : add byte ptr [rcx], cl ; retf 0x1089
0x0000000000112bcc : add byte ptr [rcx], cl ; retf 0xea81
0x000000000005268f : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000138ddc : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000124991 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000004ccf1 : add byte ptr [rcx], dh ; div bh ; ret 0
0x000000000011bb3c : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000045527 : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x0000000000090a3d : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000af2cc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000163faf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x000000000009ae70 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x34 ; ret
0x00000000000a20e9 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000004b371 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000beb82 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018f25f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000110878 : add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x0000000000114bec : add byte ptr [rcx], dh ; shr al, 0x8c ; ret
0x0000000000154b4d : add byte ptr [rcx], dh ; shr al, 0xbb ; retf
0x000000000009be7c : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call 0x980d8
0x000000000011950c : add byte ptr [rdi + 0x148fff0], bh ; ret
0x000000000011904f : add byte ptr [rdi + 0x1fc0], bh ; call 0x25338
0x00000000001290e2 : add byte ptr [rdi + 0x400], bh ; call 0x25338
0x00000000000d2254 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001960a4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000011d8e8 : add byte ptr [rdi + rbp + 0x48], dh ; mov edi, ebp ; xor esi, esi ; call r12
0x0000000000163b8a : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x854d
0x00000000000d2342 : add byte ptr [rdi + rcx + 0x4c], al ; enter -0x76bc, -0x38 ; ret
0x00000000000d2364 : add byte ptr [rdi + rcx + 0x4f], al ; enter -0x76bc, -0x38 ; ret
0x00000000000934ea : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x00000000001982a9 : add byte ptr [rdi + rcx - 0x43], cl ; ret 0x8349
0x00000000000d5467 : add byte ptr [rdi + rcx - 0x49], al ; retf
0x000000000014dc30 : add byte ptr [rdi + rcx - 0x49], al ; retf 0xc148
0x00000000000370d8 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x0000000000045877 : add byte ptr [rdi], bh ; mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x000000000008ad38 : add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x0000000000144df6 : add byte ptr [rdi], cl ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000009582d : add byte ptr [rdi], cl ; adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x000000000012f6dd : add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], edi ; call rcx
0x0000000000094b34 : add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000001539da : add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x00000000001502c2 : add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x00000000001530ca : add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x00000000001539ba : add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x00000000001102e0 : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000010371d : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000014b59a : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x0000000000157194 : add byte ptr [rdi], cl ; adc dword ptr [rsp + 0xb8], ebp ; call rax
0x0000000000157100 : add byte ptr [rdi], cl ; adc dword ptr [rsp + 0xd8], eax ; call rax
0x00000000000a3823 : add byte ptr [rdi], cl ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000463ba : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x00000000001702f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000038007 : add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x0000000000039fb6 : add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0xd289
0x000000000003a7c1 : add byte ptr [rdi], cl ; enter -0x3fcf, -0x77 ; retf 0xeac1
0x000000000017133f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000125cb4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x125c45 ; loopne 0x125cc5 ; ret
0x0000000000037271 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x37202 ; loopne 0x37282 ; ret
0x00000000000d9eba : add byte ptr [rdi], cl ; mov bh, 5 ; ret 0xd7c
0x00000000000a1033 : add byte ptr [rdi], cl ; mov cl, 0x15 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000014564d : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x00000000000a1216 : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0x14c9
0x0000000000135e46 : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret 0xb8f
0x000000000014f3f5 : add byte ptr [rdi], cl ; mov cl, 0x15 ; retf
0x0000000000061b51 : add byte ptr [rdi], cl ; mov cl, 0xd ; retf
0x00000000001713af : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018da4f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000003b28f : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000ed47f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000003c027 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004c007 : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e9bef : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000062487 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf01
0x00000000000d8009 : add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000043a9e : add byte ptr [rdi], cl ; mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x00000000000bf2ef : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000093f52 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad53f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000018830f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000af7ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af80f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000af7ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000af2ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000af32f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af31f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000af30f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000064567 : add byte ptr [rdi], cl ; push rax ; ret 0xb60f
0x000000000004566b : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000d9ca7 : add byte ptr [rdi], cl ; ret
0x00000000000470f1 : add byte ptr [rdi], cl ; ret 0x31c3
0x0000000000115d8b : add byte ptr [rdi], cl ; ret 0x41c3
0x00000000000dbc51 : add byte ptr [rdi], cl ; ret 0x5841
0x000000000013f091 : add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000056ea3 : add byte ptr [rdi], cl ; ret 0x6de9
0x000000000013020b : add byte ptr [rdi], cl ; ret 0x8348
0x00000000001300bb : add byte ptr [rdi], cl ; ret 0x89c3
0x0000000000151da3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000013f0bb : add byte ptr [rdi], cl ; ret 0xb8c3
0x0000000000033473 : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000105d38 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000002a9a3 : add byte ptr [rdi], cl ; retf 0x1489
0x000000000014ba5b : add byte ptr [rdi], cl ; retf 0xfa81
0x00000000000d4e71 : add byte ptr [rdi], cl ; sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001822cf : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000010fbc5 : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xa0], eax ; syscall
0x000000000004639f : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000199a07 : add byte ptr [rdi], cl ; test bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000198d3f : add byte ptr [rdi], cl ; test byte ptr [rdx], bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x000000000013768f : add byte ptr [rdi], cl ; test byte ptr [rsi + rdi*8 + 0x3d80ffff], ch ; ret
0x00000000000a6f2f : add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005a9a1 : add byte ptr [rdi], cl ; test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x0000000000073711 : add byte ptr [rdi], cl ; test ebp, edi ; retf
0x0000000000130433 : add byte ptr [rdi], cl ; test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x000000000014d430 : add byte ptr [rdi], cl ; xchg dword ptr [rcx - 0x77000000], ebx ; retf 0x8b48
0x000000000005831f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ebp ; retf 0xc183
0x000000000005833f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ebx ; retf 0xc183
0x000000000005835f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ecx ; retf 0xc183
0x00000000000582ff : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], edi ; retf 0xc183
0x000000000005b885 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000fae3f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x00000000000f1952 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x000000000015264f : add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000000d791b : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xc283
0x00000000000d994d : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x6348
0x0000000000199181 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2040
0x00000000001967f0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2041
0x00000000000570d8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2ae9
0x0000000000084f71 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b48
0x0000000000199a80 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x00000000001970aa : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x00000000000fcc64 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000001014af : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x00000000001561fc : add byte ptr [rdx + 0x3c], ch ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000179c5f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000006f72b : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000010c443 : add byte ptr [rdx + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x000000000019752b : add byte ptr [rdx + 0x63], cl ; or al, 0xa7 ; add rcx, rdi ; jmp rcx
0x00000000001224db : add byte ptr [rdx + 8], bh ; syscall
0x000000000009b89c : add byte ptr [rdx - 0x7d], cl ; xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000001157f0 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000119230 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e68b9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000003757b : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000003722a : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000002a5f6 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000012ae75 : add byte ptr [rdx], al ; call rax
0x000000000009840b : add byte ptr [rdx], al ; jbe 0x98414 ; ret
0x0000000000037138 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000044609 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000012b22b : add byte ptr [rdx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000122089 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x0000000000197744 : add byte ptr [rsi + 0x63], cl ; and al, 0xa7 ; add rdi, r12 ; jmp rdi
0x00000000000979ab : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000009d121 : add byte ptr [rsi + 0x81], bh ; mov eax, ebx ; syscall
0x0000000000155ddb : add byte ptr [rsi + 0xa], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000190d36 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009af1e : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x0000000000163aa7 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x44c7
0x000000000008cdda : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x7589
0x0000000000039412 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000117d21 : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ror dword ptr [rax - 0x75], 5 ; ret
0x000000000005eeef : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000061f85 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000045f15 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xc764
0x000000000005ef18 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000af71c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af234 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d26cf : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000009870e : add byte ptr [rsi - 0x59], dh ; add rsp, 8 ; ret
0x000000000012872d : add byte ptr [rsi - 0x70], ah ; endbr64 ; ret
0x000000000017bc6d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bb02d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000ba00d : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000017bc3d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000baffd : add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x0000000000034a1d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000000be0cd : add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000d252d : add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x000000000013d6bb : add byte ptr [rsi - 0x77], ah ; rol r14, 0x45 ; ret
0x000000000015b1e0 : add byte ptr [rsi - 0x77], ah ; shl byte ptr [rsi + 0xf], 0xc5 ; retf
0x00000000000e60e9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000879a0 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000000c9c6c : add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x00000000001126eb : add byte ptr [rsp + rax*2 - 0x75], ah ; insd dword ptr [rdi], dx ; add al, ch ; retf 0x45
0x000000000005eb3a : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000119297 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000011c902 : add byte ptr ds:[rax - 0x77], cl ; je 0x11c918 ; pop rbx ; ret
0x000000000016a1c3 : add byte ptr es:[rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000046f6e : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013d5e3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f1951 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000c367d : add byte ptr ss:[rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8945
0x00000000000fac5f : add ch, al ; retf
0x0000000000187e8e : add ch, al ; std ; je 0x187efb ; and ch, al ; std ; xlatb ; ret
0x0000000000187f7c : add ch, al ; std ; je 0x187fe9 ; and ch, al ; std ; xlatb ; ret
0x0000000000187f22 : add ch, al ; std ; xlatb ; ret
0x0000000000187f2e : add ch, al ; std ; xlatb ; ret 0xc085
0x000000000018bb0f : add ch, al ; std ; xlatb ; retf 0xc985
0x0000000000116d81 : add ch, bl ; retf
0x00000000000d7ade : add ch, byte ptr [rcx] ; retf 0xc8d
0x000000000008af2a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000473a6 : add ch, byte ptr [rsi] ; sbb al, byte ptr [rax] ; ret
0x000000000007433f : add ch, cl ; cwde ; ret 0xffff
0x0000000000046dfa : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000d458f : add cl, al ; retf 0x8104
0x00000000000d42ef : add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000317ff : add cl, byte ptr [r13 + 0x39] ; ret 0x820f
0x000000000011fe66 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000b6b9c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000ed482 : add cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000ee673 : add cl, byte ptr [r9 - 0x7d] ; ret
0x00000000000dc224 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000dc3cc : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000002f644 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000013ec3a : add cl, byte ptr [rax + 0x39] ; ret 0x1072
0x00000000000a79cd : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000090f87 : add cl, byte ptr [rax + 0x39] ; ret 0x870f
0x000000000013ec48 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x000000000011fe67 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000002fe1f : add cl, byte ptr [rax + 0x39] ; retf
0x000000000013ec14 : add cl, byte ptr [rax + 0x39] ; retf 0x3672
0x000000000004e9ee : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000018f0f8 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000151fd0 : add cl, byte ptr [rax + 0xf] ; ret 0x8944
0x0000000000151daa : add cl, byte ptr [rax + 0xf] ; retf 0xc689
0x000000000008c60d : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000008c44d : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000d37c1 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 1], cl ; ret 0x1b8
0x00000000000f42e1 : add cl, byte ptr [rax + 1] ; retf 0x1f0f
0x000000000009b86e : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x00000000000b6b9d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000b6b09 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000088cdf : add cl, byte ptr [rax - 0x77] ; ret
0x000000000012b9d5 : add cl, byte ptr [rax - 0x77] ; ret 0x53ff
0x0000000000107474 : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000012d1b2 : add cl, byte ptr [rax - 0x77] ; ret 0xff41
0x00000000000a7364 : add cl, byte ptr [rax - 0x77] ; retf
0x000000000002b192 : add cl, byte ptr [rax - 0x77] ; retf 0x2948
0x00000000000838df : add cl, byte ptr [rax - 0x77] ; retf 0x8948
0x00000000000da075 : add cl, byte ptr [rax - 0x77] ; retf 0xb948
0x00000000000da045 : add cl, byte ptr [rax - 0x77] ; retf 0xc148
0x00000000000d2aa3 : add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x000000000006dc51 : add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000077263 : add cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000002b8c3 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000000b9b20 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000119799 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000002ab24 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x00000000000a46f3 : add cl, byte ptr [rax - 0x7d] ; ret 0x6610
0x00000000000e9a27 : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x0000000000083d98 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x00000000000b9b83 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000003920d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000015a810 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000031800 : add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x00000000000eed5e : add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x0000000000171182 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000116664 : add cl, byte ptr [rbx + 0x750c2444] ; ret 0xd8f7
0x000000000007b183 : add cl, byte ptr [rbx - 0x4ef7b] ; inc dword ptr [rcx] ; retf
0x0000000000107b03 : add cl, byte ptr [rbx] ; add al, ch ; adc eax, 0x890003f0 ; ret
0x00000000000819ec : add cl, byte ptr [rcx + 0x29] ; retf
0x00000000000f0859 : add cl, byte ptr [rcx + 0x39] ; ret 0x3176
0x00000000000d7bfb : add cl, byte ptr [rcx + rcx*4 - 0x40] ; add rsp, 8 ; ret
0x00000000000a7582 : add cl, byte ptr [rcx - 0x76b774fc] ; ror dword ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000089c6c : add cl, byte ptr [rcx - 0x77] ; ret
0x00000000001301e4 : add cl, byte ptr [rcx - 0x77] ; retf 0x440f
0x00000000000ee674 : add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000e8a60 : add cl, byte ptr [rcx] ; ret 0xf089
0x000000000004b2cc : add cl, byte ptr [rdi] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000370f8 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000fb34d : add cl, byte ptr [rdi] ; test ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000012de3a : add cl, byte ptr [rdi] ; test bh, bl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000013e41f : add cl, byte ptr [rdi] ; test dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x000000000010cdba : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000084549 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00000000000a7363 : add cl, byte ptr cs:[rax - 0x77] ; retf
0x00000000000a7db7 : add cl, byte ptr ss:[rax - 0x77] ; retf
0x0000000000034a18 : add cl, ch ; mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x0000000000031598 : add cl, ch ; ret
0x00000000000619f7 : add cl, ch ; ret 0xffe2
0x000000000007ed5b : add cl, ch ; ret 0xffea
0x0000000000056e7d : add cl, ch ; ret 0xfff3
0x000000000005fe24 : add cl, ch ; ret 0xfff6
0x000000000010c8c7 : add cl, ch ; ret 0xfff9
0x0000000000197ea5 : add cl, ch ; ret 0xfffb
0x00000000000e38a9 : add cl, ch ; ret 0xfffd
0x00000000000879a4 : add cl, ch ; ret 0xfffe
0x0000000000031e77 : add cl, ch ; retf
0x00000000000618ef : add cl, ch ; retf 0xffe3
0x00000000000cfc3d : add cl, ch ; retf 0xfff1
0x00000000000fc423 : add cl, ch ; retf 0xfff6
0x00000000000ec594 : add cl, ch ; retf 0xfff7
0x0000000000066a20 : add cl, ch ; retf 0xfffb
0x000000000008c7c8 : add cl, ch ; retf 0xfffc
0x000000000002ee5b : add cl, ch ; retf 0xfffd
0x000000000004917f : add cl, ch ; retf 0xfffe
0x00000000000ab670 : add cl, ch ; sti ; retf 0xffff
0x000000000005a9a7 : add cl, cl ; ret
0x0000000000133e10 : add dh, 0xb ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000abbf7 : add dh, al ; add byte ptr [rax], al ; ret
0x00000000000ab7c7 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x000000000012a527 : add dh, al ; jmp qword ptr [rax]
0x0000000000140bd9 : add dh, al ; ret
0x00000000000781b4 : add dh, al ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000007ee61 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000171333 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000121f95 : add dh, byte ptr [rax + rcx - 0x77] ; ret 0xeac1
0x00000000000be10b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000011805b : add dh, byte ptr [rbp + rdi*4 - 0x77] ; retf 0xf41
0x000000000009840c : add dh, byte ptr [rsi + 1] ; ret
0x00000000000d735a : add dh, byte ptr [rsi + 3] ; ret
0x000000000013bb3a : add dh, byte ptr [rsi] ; or eax, dword ptr [rax] ; syscall
0x000000000009b62e : add dh, byte ptr [rsp - 0x77] ; ret 0xb48b
0x000000000005f10f : add dh, dh ; ret
0x000000000012bedf : add dh, dh ; ret 0x4804
0x000000000008ce20 : add dh, dh ; ret 0x7402
0x000000000008898f : add dh, dh ; ret 0x7420
0x00000000001940e7 : add dh, dh ; ret 0x7501
0x00000000001940f4 : add dh, dh ; ret 0x7502
0x0000000000194101 : add dh, dh ; ret 0x7504
0x000000000014d540 : add dh, dh ; ret 0x7507
0x00000000001940b9 : add dh, dh ; ret 0x7510
0x00000000001940c6 : add dh, dh ; ret 0x7520
0x00000000000f62c4 : add dh, dh ; ret 0x7540
0x000000000009b167 : add dh, dh ; ret 0xf01
0x000000000010fe48 : add dh, dh ; ret 0xf02
0x0000000000104677 : add dh, dh ; ret 0xf04
0x00000000000b53a2 : add dh, dh ; ret 0xf20
0x000000000007de8f : add dh, dh ; ret 0xf40
0x0000000000062647 : add dh, dh ; ret 0xf50
0x000000000010fe3f : add dh, dh ; ret 0xf80
0x00000000000d998c : add dh, dh ; rol dword ptr [rdi + rcx], 0x84 ; ret
0x00000000000e9817 : add dh, dh ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000000d1267 : add dil, r15b ; ret
0x000000000003b864 : add dl, byte ptr [rbx - 0x77] ; retf
0x0000000000116c52 : add dl, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x00000000000454af : add dl, dh ; addps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000045417 : add dl, dh ; mulps xmm0, xmm1 ; ret
0x00000000000a7996 : add dword ptr [r8 + 0x39], ecx ; ret 0x860f
0x000000000002fd07 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000010eedf : add dword ptr [r8 + 1], ecx ; ror dword ptr [rax + 1], 1 ; ret 0x8948
0x000000000005e4a3 : add dword ptr [r8 + r8*8 - 0x7cb6f78c], eax ; ret
0x000000000010f16e : add dword ptr [r8 - 0x77], ecx ; ret
0x00000000001589bc : add dword ptr [r8 - 0x77], r9d ; ret 0x4c88
0x000000000003b244 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000066f43 : add dword ptr [r8 - 0x7d], r9d ; ret 0xbe02
0x00000000000fca33 : add dword ptr [r8 - 0x7f], r9d ; retf 0
0x000000000018cea6 : add dword ptr [r8], r8d ; vzeroupper ; ret
0x00000000000ee4b9 : add dword ptr [r9 - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000ed35f : add dword ptr [r9 - 0x7d], eax ; call 0xffffffffc3921b71
0x00000000000ef37d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000017df91 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000614d2 : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000061497 : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x00000000000f3f47 : add dword ptr [rax + 0x29], ecx ; ret 0x1f0f
0x00000000000e5dd7 : add dword ptr [rax + 0x38], edi ; syscall
0x000000000002fd54 : add dword ptr [rax + 0x39480751], ecx ; ret
0x000000000002f99e : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000113ad3 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000004c73b : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x00000000000a7997 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000019c960 : add dword ptr [rax + 0x39], ecx ; ret 0x9974
0x0000000000113ac5 : add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x000000000002beb3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000ece1f : add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000015d51f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x000000000005872b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000cb498 : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000cc523 : add dword ptr [rax + 0x39], ecx ; retf 0x1774
0x00000000000bf938 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x00000000000cbb0b : add dword ptr [rax + 0x39], ecx ; retf 0x1f74
0x00000000000a9503 : add dword ptr [rax + 0x39], ecx ; retf 0x2674
0x00000000000a8843 : add dword ptr [rax + 0x39], ecx ; retf 0x2c74
0x00000000000ee853 : add dword ptr [rax + 0x39], ecx ; retf 0x3274
0x00000000000a87f3 : add dword ptr [rax + 0x39], ecx ; retf 0x840f
0x00000000000cbac3 : add dword ptr [rax + 0x39], ecx ; retf 0xc73
0x00000000000e62fd : add dword ptr [rax + 0x39], ecx ; retf 0xed75
0x000000000005897b : add dword ptr [rax + 0x39], ecx ; retf 0xef75
0x000000000019c923 : add dword ptr [rax + 0x39], ecx ; sal dword ptr [rdi + rcx*4 + 0x48], 0x89 ; ret 0xc148
0x000000000013076e : add dword ptr [rax + 0x3b], ecx ; pop rbp ; mov eax, 0x89483e74 ; ret
0x00000000000ff017 : add dword ptr [rax + 0x48000000], 0x63 ; ret 0x8948
0x00000000000f0edb : add dword ptr [rax + 0x63], ecx ; ret
0x00000000000d9bc4 : add dword ptr [rax + 0x63], ecx ; ret 0xd789
0x000000000009f3b3 : add dword ptr [rax + 0xf], ecx ; ret 0xfc3
0x0000000000067f23 : add dword ptr [rax + 1], ecx ; ret
0x000000000015c8eb : add dword ptr [rax + 1], ecx ; retf
0x0000000000026fda : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000004434f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000010eee0 : add dword ptr [rax + 1], ecx ; ror dword ptr [rax + 1], 1 ; ret 0x8948
0x00000000000ef34f : add dword ptr [rax + 1], edi ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000ef300 : add dword ptr [rax + 1], edi ; ret
0x000000000011d823 : add dword ptr [rax + 9], ecx ; retf 0x8948
0x00000000000eb0f0 : add dword ptr [rax + rax*8 - 0x3fce538b], eax ; ret
0x000000000005e4a4 : add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x00000000000ec987 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000a8802 : add dword ptr [rax + rdi + 0x5c], eax ; syscall
0x000000000007a76d : add dword ptr [rax - 0x50743], eax ; jmp qword ptr [rax]
0x000000000011fe63 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000126ba1 : add dword ptr [rax - 0x75], ecx ; push rsp ; retf 0x8b40
0x000000000008dfbd : add dword ptr [rax - 0x75], ecx ; sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x000000000010d206 : add dword ptr [rax - 0x75], ecx ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b6b76 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000098085 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x152243 ; ret
0x0000000000179bf2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000004ccd7 : add dword ptr [rax - 0x77], ecx ; push rbp ; add bh, dh ; ret 0
0x00000000000910b1 : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000009b5aa : add dword ptr [rax - 0x77], ecx ; push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a87b1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000005ca31 : add dword ptr [rax - 0x77], ecx ; ret 0x44f6
0x000000000009f381 : add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x00000000001589bd : add dword ptr [rax - 0x77], ecx ; ret 0x4c88
0x0000000000125086 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000092986 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000e9f87 : add dword ptr [rax - 0x77], ecx ; ret 0xb60f
0x0000000000108668 : add dword ptr [rax - 0x77], ecx ; ret 0xb70f
0x00000000000fd088 : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000000e94e4 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000077581 : add dword ptr [rax - 0x77], ecx ; retf 0x3948
0x00000000000e3990 : add dword ptr [rax - 0x77], ecx ; retf 0x44f6
0x00000000000ffd43 : add dword ptr [rax - 0x77], ecx ; retf 0xc148
0x0000000000164eee : add dword ptr [rax - 0x77], ecx ; retf 0xd4eb
0x00000000000e9e4d : add dword ptr [rax - 0x77], ecx ; retf 0xd5eb
0x000000000013f533 : add dword ptr [rax - 0x78], eax ; ja 0x13f53e ; ret
0x00000000000a20bb : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000003be8f : add dword ptr [rax - 0x7cb700b8], ecx ; ret 0x4901
0x000000000017fbaa : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000028f58 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f39b2 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000144112 : add dword ptr [rax - 0x7d], ecx ; ret 0x3928
0x0000000000129d32 : add dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x00000000000488a5 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x0000000000047ca4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000f17fb : add dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x000000000002d34c : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000013eb40 : add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x000000000013e0fb : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d6fa3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c08
0x000000000003b293 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000063f94 : add dword ptr [rax - 0x7d], ecx ; ret 0x8404
0x0000000000029d36 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000066f44 : add dword ptr [rax - 0x7d], ecx ; ret 0xbe02
0x000000000002a40c : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000055663 : add dword ptr [rax - 0x7f], ecx ; ret
0x00000000000fca34 : add dword ptr [rax - 0x7f], ecx ; retf 0
0x0000000000077ef2 : add dword ptr [rax - 0x8ff43], eax ; jmp qword ptr [rax]
0x000000000007eb5a : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000003baa8 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000049e1f : add dword ptr [rax], 0x894c0000 ; out 0xb8, eax ; retf 0
0x000000000009d123 : add dword ptr [rax], 0xd8890000 ; syscall
0x000000000012514c : add dword ptr [rax], 1 ; ret
0x00000000000462d5 : add dword ptr [rax], eax ; add bl, al ; call 0x132dd6
0x000000000013f0cb : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000013f0c2 : add dword ptr [rax], eax ; add bl, al ; xor eax, eax ; ret
0x00000000000c3c36 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000097063 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000193f95 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000013e855 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000db602 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000001052cd : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b4d
0x00000000000db571 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0xd789
0x00000000000f8a9f : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000e7ad3 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x64e9
0x00000000000da02d : add dword ptr [rax], eax ; add byte ptr [rax - 0x41], cl ; ret
0x000000000014b213 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000001632f1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000014685a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a5782 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000163e79 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000199b5e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000bed92 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000002f70b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x1f0f
0x0000000000115fac : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x000000000004c3b2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x0000000000029886 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181fed : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e6208 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000009bc84 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000000a2f4e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018999f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181f41 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001635d2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000028351 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000118d64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011cc8d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x00000000000470ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001960a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x1960b8 ; neg eax ; ret
0x00000000000d2251 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xd2261 ; neg eax ; ret
0x0000000000192e67 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x192e78 ; neg eax ; ret
0x000000000015973a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x159708
0x0000000000079dd0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000ef351 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x0000000000150344 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000a08c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000008fdd2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000005ac36 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000014b576 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000007b017 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r10, rdx ; jmp rax
0x0000000000081684 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x0000000000084313 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000083d1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000001539c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x00000000001530a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000001502bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000063fea : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a605 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000a1cc4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008639b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000010f7d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005870f : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000111311 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e80b5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edi, edi ; js 0xe80c8 ; ret
0x00000000000d99d2 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x29], al ; shr dword ptr [rcx], cl ; ret 0x8945
0x0000000000065436 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000317fa : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x41], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x00000000000f08d5 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x52], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8349
0x00000000000aeed8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000002b807 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ed159 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; retf
0x000000000004ed4e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x29482404], cl ; retf
0x0000000000141033 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000118196 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000115831 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x64e83c7d], cl ; ret 0xffff
0x0000000000104be3 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x63], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000db5ef : add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], al ; ret 0x8944
0x000000000002f689 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000105625 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63482c53], cl ; ret 0x2de9
0x00000000000ff99c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x00000000000dceac : add dword ptr [rax], eax ; add byte ptr [rcx + 1], al ; ret 0x8944
0x00000000000a047e : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r12 ; call rax
0x000000000014bfe6 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rbx]
0x0000000000163d73 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000046bfc : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000313e0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000011dc68 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000011dae8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x11daf6 ; call rbx
0x000000000011db18 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x11db26 ; call rbx
0x0000000000083c06 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x00000000000eb983 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000f68e0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3941
0x0000000000116b19 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000198050 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000014db93 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0xb43
0x0000000000044b37 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x0000000000071b30 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000071b19 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000000000a776f : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x0000000000105441 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1874
0x0000000000138dda : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000110876 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x00000000000934e8 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x0000000000039fb4 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0xd289
0x000000000013f08f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x66c3
0x000000000013f0b9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xb8c3
0x00000000001224d9 : add dword ptr [rax], eax ; add byte ptr [rdx + 8], bh ; syscall
0x0000000000187f20 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x0000000000187f2c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x00000000000d42ed : add dword ptr [rax], eax ; add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000f8073 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000001940e5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001940f2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001940ff : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001940b7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001940c4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001940d1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000013a758 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000a2815 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000a22a2 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000011fdee : add dword ptr [rax], eax ; jne 0x11fe36 ; mov rdx, rax ; jmp 0x11fe0f
0x0000000000057416 : add dword ptr [rax], eax ; jne 0x57415 ; pop rbx ; ret
0x000000000004b414 : add dword ptr [rax], eax ; ret
0x000000000018cea7 : add dword ptr [rax], eax ; vzeroupper ; ret
0x00000000000ab8d2 : add dword ptr [rax], edi ; ret 0xf41
0x00000000000ab882 : add dword ptr [rax], edi ; retf 0xe975
0x0000000000057f6a : add dword ptr [rax], esi ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000002b806 : add dword ptr [rax], r8d ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000116b18 : add dword ptr [rax], r8d ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000000a28b1 : add dword ptr [rax], r8d ; cmovne rax, rdx ; ret
0x00000000000a98f2 : add dword ptr [rbp + 0x19], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000000a77a6 : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4105
0x00000000000a8fa6 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8806
0x000000000012aaee : add dword ptr [rbp + 0x38], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c6e7 : add dword ptr [rbp + 0x440f45c9], eax ; ror dword ptr [rax - 0x7d], 1 ; ret
0x000000000012c792 : add dword ptr [rbp + 0x440f45f6], eax ; retf
0x0000000000110e8e : add dword ptr [rbp + 0x47], esi ; mov eax, 0x10c ; syscall
0x00000000000d9def : add dword ptr [rbp + rcx*4 + 0x14], eax ; ret
0x00000000000c06e0 : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x20 ; call rbx
0x00000000000c01dd : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x28 ; call rbx
0x0000000000159002 : add dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000a45a3 : add dword ptr [rbp - 0x16], esi ; ret
0x000000000005870b : add dword ptr [rbp - 0x1e], esi ; mov eax, 1 ; ret
0x00000000000a1a6a : add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x000000000011929c : add dword ptr [rbp - 0x2f], esi ; ret
0x000000000009bee2 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x00000000000cda9b : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000013f804 : add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0x8041
0x000000000013f8a3 : add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0xc639
0x0000000000142359 : add dword ptr [rbp - 0x77], eax ; ret 0x394c
0x0000000000149433 : add dword ptr [rbp - 0x7e], esi ; ret
0x000000000009a6b0 : add dword ptr [rbx + 0x14fbf905], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x00000000001711f2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015aba0 : add dword ptr [rbx + 0x28], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9d26 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000a65a4 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x14c
0x00000000000f40ae : add dword ptr [rbx + 0x294803e1], eax ; retf 0x14c
0x0000000000049dda : add dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f95a9 : add dword ptr [rbx + 0x48b4818], ecx ; and al, 0x39 ; ret
0x00000000000e0ffe : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000f0ed8 : add dword ptr [rbx + 0x634801ea], eax ; ret
0x000000000011d775 : add dword ptr [rbx + 0x94901e0], eax ; ret
0x0000000000080e27 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000080df8 : add dword ptr [rbx - 0x50743], eax ; call qword ptr [rax]
0x00000000000bf600 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0x518d
0x000000000007a741 : add dword ptr [rbx - 0x51743], eax ; call qword ptr [rax]
0x000000000006d80c : add dword ptr [rbx - 0x64f7b], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000004149e : add dword ptr [rbx - 0x7bf0fd08], eax ; ret 0x1d
0x0000000000043976 : add dword ptr [rbx - 0x7cb60030], eax ; ret
0x00000000000e9d83 : add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xe901
0x00000000000ec58e : add dword ptr [rcx + 0x101c5715], ecx ; add cl, ch ; retf 0xfff7
0x0000000000098121 : add dword ptr [rcx + 0x21], ecx ; ret 0x8d4d
0x00000000000f67bc : add dword ptr [rcx + 0x21], ecx ; retf 0x854d
0x00000000000a3d26 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000a6413 : add dword ptr [rcx + 0x39], ecx ; ret 0x2774
0x00000000000a6393 : add dword ptr [rcx + 0x39], ecx ; ret 0x2f74
0x000000000012476d : add dword ptr [rcx + 0x39], ecx ; ret 0x4f73
0x00000000000a6353 : add dword ptr [rcx + 0x39], ecx ; ret 0x840f
0x00000000000f0a81 : add dword ptr [rcx + 0x39], ecx ; ret 0xe877
0x00000000000ab53a : add dword ptr [rcx + 0x39], ecx ; sal dword ptr [rbp - 0x11], 0xe9 ; retf 0xffd5
0x000000000010fe94 : add dword ptr [rcx + 0x63], ecx ; add al, 0x84 ; add rax, r12 ; jmp rax
0x00000000000a5ff5 : add dword ptr [rcx + 0x63], ecx ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000140dc7 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000001085eb : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret 0xb70f
0x000000000011026e : add dword ptr [rcx + 0xf], ecx ; ret
0x000000000011d778 : add dword ptr [rcx + 9], ecx ; ret
0x00000000000e2296 : add dword ptr [rcx + rax*2 - 0x77], esp ; sbb dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; ret
0x0000000000094fb4 : add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x0000000000161527 : add dword ptr [rcx + rcx*4 - 0x20], eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000128a7b : add dword ptr [rcx + rcx*4 - 0x40], eax ; add rsp, 8 ; ret
0x000000000013adcf : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x00000000000886f2 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064138 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000125dc2 : add dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x000000000013f998 : add dword ptr [rcx + rcx*4 - 0x40], ecx ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000015ffd2 : add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x000000000013104b : add dword ptr [rcx + rcx*8 - 0x76b7578b], eax ; clc ; ret
0x00000000000aba6b : add dword ptr [rcx + rcx*8 - 0xec6f78c], eax ; jne 0xaba69 ; ret
0x000000000013e3fa : add dword ptr [rcx - 0x39], ecx ; ret 0xffff
0x000000000004acc8 : add dword ptr [rcx - 0x42], edi ; xor eax, eax ; ret
0x00000000000ee4ba : add dword ptr [rcx - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000b6bb6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000002f885 : add dword ptr [rcx - 0x77], eax ; ret 0x8341
0x000000000007764d : add dword ptr [rcx - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000005a190 : add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000196d00 : add dword ptr [rcx - 0x77], ecx ; retf
0x0000000000124743 : add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x000000000004c9b0 : add dword ptr [rcx - 0x77], ecx ; xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000056448 : add dword ptr [rcx - 0x78], eax ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000a8a64 : add dword ptr [rcx - 0x7c2de63f], ecx ; ret 0x8305
0x00000000000ed360 : add dword ptr [rcx - 0x7d], eax ; call 0xffffffffc3921b70
0x00000000000a6a32 : add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x000000000002d58b : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000013f81c : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000012b8d6 : add dword ptr [rcx - 0x7d], ecx ; ret 0xe901
0x00000000000ee4be : add dword ptr [rcx - 0x7f], ecx ; ret
0x0000000000100029 : add dword ptr [rcx - 0x80], eax ; lcall [rdi + 0xf] ; xchg eax, esp ; ret 0xd009
0x0000000000196573 : add dword ptr [rcx - 9], eax ; ret
0x00000000000d271b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000013f0c1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000000000110fd5 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000007e3f5 : add dword ptr [rcx], eax ; ret
0x00000000000f398b : add dword ptr [rcx], edi ; ret
0x00000000000f1a63 : add dword ptr [rcx], edi ; ret 0xc775
0x00000000000f1835 : add dword ptr [rcx], edi ; ret 0xee7f
0x000000000004a2d5 : add dword ptr [rcx], esi ; test byte ptr [rcx + rcx*4 - 0x31], 0x41 ; call rax
0x00000000000bf1e6 : add dword ptr [rdi + 0x15], esi ; jb 0xbf1f4 ; mov byte ptr [rdi], cl ; ret
0x000000000015ab04 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000015ab14 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000110750 : add dword ptr [rdi + 0x2d], esi ; mov eax, 4 ; syscall
0x0000000000110810 : add dword ptr [rdi + 0x2d], esi ; mov eax, 6 ; syscall
0x00000000001107af : add dword ptr [rdi + 0x2e], esi ; mov eax, 5 ; syscall
0x0000000000110c55 : add dword ptr [rdi + 0x30], esi ; mov eax, 0x106 ; syscall
0x000000000011ae32 : add dword ptr [rdi + 1], edi ; ret
0x00000000000ef723 : add dword ptr [rdi + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014480e : add dword ptr [rdi + rbp - 9], esi ; ret 0
0x00000000000f7648 : add dword ptr [rdi + rsi*2 - 0x75], esi ; pop rax ; or bh, dh ; ret
0x00000000000956be : add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x00000000000a53d4 : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b576 : add dword ptr [rdi - 2], -1 ; dec dword ptr [rax + 0x39] ; retf 0x9775
0x000000000002c6b5 : add dword ptr [rdi], 1 ; jmp 0x2c689
0x0000000000047244 : add dword ptr [rdi], ecx ; adc dword ptr [rdi], eax ; ret
0x00000000000a36c3 : add dword ptr [rdi], ecx ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000f0b12 : add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x00000000000371d9 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000ab9b3 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0xab9b9 ; ret
0x000000000009c9ca : add dword ptr [rdi], ecx ; ret 0x8348
0x00000000001519c9 : add dword ptr [rdi], ecx ; retf 0x5489
0x00000000000bf603 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x00000000000bf617 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xcfe9
0x00000000000bf609 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000011aed1 : add dword ptr [rdi], ecx ; test byte ptr [rdx], cl ; add al, byte ptr [rax] ; add bh, dh ; ret
0x000000000017ba6e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000010cc22 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000004e4b1 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc220
0x0000000000059807 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8948
0x000000000013f569 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000054403 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2040
0x0000000000056b07 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x0000000000107232 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000000bf8ef : add dword ptr [rdx + 0x2b], 0xe2748104 ; ret
0x00000000000b6b74 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000105d33 : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x00000000001936f0 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000066120 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000193021 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000124e7f : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000000e88f3 : add dword ptr [rdx - 0x75], ecx ; cmp al, 0xf3 ; call 0x25357
0x0000000000161ab0 : add dword ptr [rdx], eax ; add byte ptr [rax], al ; add bl, ch ; retf 0x14e8
0x000000000013f602 : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000000ce159 : add dword ptr [rdx], ebp ; mov r9, qword ptr [rsp + 0x10] ; call r14
0x000000000013f601 : add dword ptr [rdx], r8d ; pop rbx ; ret
0x0000000000096a16 : add dword ptr [rip + 0x156a87], 1 ; pop rbx ; ret
0x00000000000b6b05 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000144a2f : add dword ptr [rsi + rbp - 9], esi ; ret 0
0x00000000000b6b87 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a22a1 : add dword ptr cs:[rax], eax ; cmovne rax, rdx ; ret
0x000000000018b447 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a2854 : add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x000000000013e7aa : add eax, 0x10 ; ret
0x00000000000bfec2 : add eax, 0x113a9 ; cmove rax, rdx ; ret
0x00000000000d3302 : add eax, 0x11aa59 ; add rsp, 8 ; ret
0x00000000000bfa02 : add eax, 0x11b99 ; cmove rax, rdx ; ret
0x00000000000a29c2 : add eax, 0x12099 ; cmove rax, rdx ; ret
0x00000000000a2812 : add eax, 0x12549 ; cmove rax, rdx ; ret
0x00000000000a2852 : add eax, 0x126a9 ; cmove rax, rdx ; ret
0x00000000000bfbb2 : add eax, 0x126b9 ; cmove rax, rdx ; ret
0x00000000000bfca2 : add eax, 0x12899 ; cmove rax, rdx ; ret
0x00000000000bfa28 : add eax, 0x12953 ; cmovne rax, rdx ; ret
0x00000000000bf9c2 : add eax, 0x129e9 ; cmove rax, rdx ; ret
0x00000000000bfb12 : add eax, 0x12fa9 ; cmove rax, rdx ; ret
0x00000000000a1983 : add eax, 0x1485c8 ; call qword ptr [rax]
0x00000000000a17a2 : add eax, 0x1487a9 ; call qword ptr [rax]
0x00000000000a16d2 : add eax, 0x148879 ; call qword ptr [rax]
0x00000000000a2a55 : add eax, 0x14b1ae ; add rsp, 8 ; ret
0x00000000000a2a17 : add eax, 0x14b1ec ; ret
0x000000000009d27a : add eax, 0x14cc61 ; mov qword ptr [rax], rdi ; ret
0x000000000009aa8a : add eax, 0x14f331 ; xor edi, edi ; call qword ptr [rax]
0x000000000009aa44 : add eax, 0x14f377 ; call qword ptr [rax]
0x000000000009d20f : add eax, 0x150938 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000993b0 : add eax, 0x150b2b ; mov qword ptr [rax], rdx ; ret
0x0000000000098443 : add eax, 0x151e64 ; ret
0x000000000009841d : add eax, 0x151e6e ; ret
0x00000000000983f4 : add eax, 0x151e8f ; ret
0x00000000000983d4 : add eax, 0x151ea7 ; ret
0x00000000000980ba : add eax, 0x152229 ; ret
0x00000000000980a2 : add eax, 0x152239 ; ret
0x000000000009804a : add eax, 0x152249 ; ret
0x000000000009803a : add eax, 0x152261 ; ret
0x00000000000969a6 : add eax, 0x154bf5 ; ret
0x0000000000098459 : add eax, 0x155706 ; ret
0x0000000000096ab1 : add eax, 0x1569ee ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000097a48 : add eax, 0x1587af ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d736e : add eax, 0x16d ; ret
0x00000000000454a0 : add eax, 0x179b6b ; ret
0x0000000000045805 : add eax, 0x179ea6 ; ret
0x00000000000457ba : add eax, 0x179ee9 ; ret
0x0000000000045795 : add eax, 0x179f12 ; ret
0x0000000000035922 : add eax, 0x180aac ; ret
0x0000000000045f76 : add eax, 0x18c48348 ; ret
0x00000000000272d6 : add eax, 0x18ec2c ; ret
0x00000000000272e6 : add eax, 0x190a9f ; ret
0x0000000000055c4a : add eax, 0x1976f1 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000047404 : add eax, 0x1a2d9f ; mov eax, edx ; ret
0x00000000000473b5 : add eax, 0x1a2dee ; ret
0x00000000000473a5 : add eax, 0x1a2e02 ; ret
0x000000000004b286 : add eax, 0x1a4d9b ; add rsp, 8 ; ret
0x00000000000a34bb : add eax, 0x1b0d0 ; cmove rax, rdx ; ret
0x0000000000036d42 : add eax, 0x1b30a1 ; mov qword ptr [rax], rdx ; ret
0x00000000000a375b : add eax, 0x1b940 ; cmovne rax, rdx ; ret
0x0000000000032af6 : add eax, 0x1b9b4d ; ret
0x00000000000a2ca8 : add eax, 0x1bee3 ; cmovne rax, rdx ; ret
0x00000000000a29e8 : add eax, 0x1c0f3 ; cmovne rax, rdx ; ret
0x000000000002a5d9 : add eax, 0x1c2056 ; test eax, eax ; je 0x2a5f1 ; ret
0x00000000000a23f8 : add eax, 0x1c633 ; cmovne rax, rdx ; ret
0x0000000000029136 : add eax, 0x1c6d7d ; ret
0x0000000000029126 : add eax, 0x1c6d9d ; ret
0x0000000000026a91 : add eax, 0x1c95b2 ; ret
0x0000000000187bfa : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000003757a : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000004a744 : add eax, 0x28c48348 ; ret
0x000000000017baf4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x000000000019b8bd : add eax, 0x358d4800 ; retf 0xffff
0x00000000000abd82 : add eax, 0x3819 ; cmove rax, rdx ; ret
0x0000000000139a2d : add eax, 0x38c48348 ; ret
0x000000000002daf9 : add eax, 0x39480000 ; ret
0x00000000000a9513 : add eax, 0x3948ea74 ; retf 0x1474
0x00000000000a6422 : add eax, 0x3949eb74 ; ret 0x1674
0x0000000000187c1a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x00000000001302f0 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x0000000000130e43 : add eax, 0x440f4800 ; ret 0x66c3
0x0000000000130bf9 : add eax, 0x440f4800 ; ret 0xf6c3
0x000000000015fe78 : add eax, 0x48010009 ; add esp, 8 ; ret
0x000000000017e028 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000179cd8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000ba0c6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000158e97 : add eax, 0x48c48348 ; ret
0x000000000019bd69 : add eax, 0x50bee ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019c09e : add eax, 0x51d49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019c1d7 : add eax, 0x52990 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e0a9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000179d19 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000130e3c : add eax, 0x58d4800 ; retf
0x000000000019bf74 : add eax, 0x5b050f00 ; ret
0x0000000000137c30 : add eax, 0x5bf08948 ; ret
0x000000000019c1b9 : add eax, 0x5c74800 ; ret 0x529
0x000000000010a278 : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000019c2a4 : add eax, 0x5d050f00 ; ret
0x0000000000157141 : add eax, 0x5d5b0000 ; pop r12 ; pop r13 ; ret
0x0000000000130e40 : add eax, 0x5e1cb ; cmove rax, rdx ; ret
0x0000000000188053 : add eax, 0x60 ; add rax, rdi ; ret
0x0000000000187c3a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000004dbfb : add eax, 0x63485374 ; retf
0x00000000000cd1a6 : add eax, 0x74db8500 ; sbb al, 0x39 ; ret
0x00000000000cd0b1 : add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x0000000000156be6 : add eax, 0x78c48348 ; ret
0x00000000000ba8ee : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000726f0 : add eax, 0x83480000 ; ret
0x0000000000181bdd : add eax, 0x83480000 ; ret 0x4910
0x0000000000184731 : add eax, 0x83480000 ; ret 0xe910
0x0000000000181b31 : add eax, 0x83480000 ; ret 0xeb10
0x000000000017e02b : add eax, 0x8428d48 ; ret
0x000000000006ac8a : add eax, 0x89000035 ; retf 0xc183
0x00000000000463bc : add eax, 0x8944c689 ; ret 0xeab8
0x00000000000d7635 : add eax, 0x89480000 ; ret
0x00000000000ac014 : add eax, 0x89480000 ; ret 0xe1e8
0x00000000000cc646 : add eax, 0x89490000 ; ret
0x00000000000ee712 : add eax, 0x8949eb74 ; retf 0x3949
0x000000000015f734 : add eax, 0x894c0000 ; loopne 0x15f784 ; pop rsp ; ret
0x00000000000aea58 : add eax, 0x894d0000 ; retf
0x000000000015fe62 : add eax, 0x8b629 ; call qword ptr [rax]
0x000000000015f855 : add eax, 0x8bc36 ; call qword ptr [rax]
0x0000000000162f32 : add eax, 0x8cf51 ; call qword ptr [rax]
0x00000000000d37b7 : add eax, 0x8f5cba49 ; ret 0x28f5
0x0000000000034a1b : add eax, 0x90660000 ; ret
0x0000000000123f14 : add eax, 0x907a7 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000156471 : add eax, 0x996a6 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bbfd2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00000000000a4e32 : add eax, 0xa559 ; cmove rax, rdx ; ret
0x000000000014a21a : add eax, 0xa565d ; add rsp, 8 ; ret
0x000000000014a205 : add eax, 0xa5672 ; test eax, eax ; je 0x14a219 ; ret
0x0000000000144476 : add eax, 0xa5b75 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000149624 : add eax, 0xa61d7 ; ret
0x00000000001495f8 : add eax, 0xa6203 ; add rsp, 8 ; ret
0x0000000000143f39 : add eax, 0xab586 ; test eax, eax ; je 0x143f51 ; ret
0x000000000013b8f4 : add eax, 0xb4c07 ; add rsp, 8 ; ret
0x00000000000a35b2 : add eax, 0xbaa9 ; cmove rax, rdx ; ret
0x000000000013037d : add eax, 0xbe7f6 ; pop rbp ; ret
0x0000000000191a6a : add eax, 0xc0310000 ; ret
0x000000000017e0ad : add eax, 0xc428d48 ; ret
0x0000000000125a36 : add eax, 0xc4425 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000bb74d : add eax, 0xc478d48 ; ret
0x0000000000124e11 : add eax, 0xc5546 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124de8 : add eax, 0xc556f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124db7 : add eax, 0xc55a0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000124d91 : add eax, 0xc55c6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011c3e4 : add eax, 0xd21d7 ; add rsp, 0x18 ; ret
0x000000000011c394 : add eax, 0xd2267 ; pop r12 ; pop r13 ; ret
0x000000000011be9c : add eax, 0xd26cf ; add rsp, 8 ; ret
0x000000000011a90f : add eax, 0xd3b7c ; add rsp, 8 ; ret
0x000000000011a86e : add eax, 0xd3c1d ; mov rax, r8 ; ret
0x00000000000bc5ad : add eax, 0xd478d48 ; ret
0x0000000000118e6d : add eax, 0xd54c6 ; add rsp, 8 ; ret
0x00000000001191a4 : add eax, 0xd7297 ; add rsp, 8 ; ret
0x000000000019beb8 : add eax, 0xdb854800 ; jne 0x19bea8 ; pop rbx ; ret
0x00000000001018f3 : add eax, 0xe85f0 ; movsxd rcx, edx ; jmp 0x10190c
0x0000000000123c51 : add eax, 0xeb000000 ; ret
0x00000000000a3740 : add eax, 0xeb8db ; cmove rax, rdx ; ret
0x00000000000a39a4 : add eax, 0xf48000d ; ret 0xfc3
0x00000000001711e3 : add eax, 0xf7f0ff3 ; ret
0x00000000000a4e72 : add eax, 0xf9d9 ; cmove rax, rdx ; ret
0x0000000000055d1b : add eax, 0xfb9ee800 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130e5b : add eax, 0xfff8e230 ; cmovne rax, rdx ; ret
0x00000000001104e8 : add eax, 0xffffff43 ; cmove rax, rdx ; ret
0x00000000000952a8 : add eax, 1 ; cmp rbx, rax ; jne 0x952a9 ; jmp 0x95286
0x00000000001250f2 : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000125132 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x000000000002833d : add eax, 1 ; push rax ; call rbx
0x00000000000a386f : add eax, 1 ; ret
0x00000000000d2cb8 : add eax, 2 ; ret
0x00000000000d2cd1 : add eax, 3 ; ret
0x00000000000bfde3 : add eax, 4 ; test edx, edx ; jne 0xbfde1 ; xor eax, eax ; ret
0x000000000002753d : add eax, dword ptr [0] ; ret
0x000000000010fe33 : add eax, dword ptr [r8] ; add dh, dh ; ret 0xf20
0x00000000000f2e4a : add eax, dword ptr [rax - 0x6bf0a005] ; ret 0xd009
0x000000000002decb : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000013e423 : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x00000000000448ec : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0xdeb
0x000000000005b4ba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000004e27a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000698fd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7d] ; ret
0x0000000000057822 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbf41
0x0000000000181d7d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001848d1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181da1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ed40d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x00000000001249ea : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014afaa : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x37a56
0x00000000001300b8 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000843b7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x8438d
0x00000000000ab683 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0xa8177
0x0000000000154fd6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x000000000013dc05 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000d2d13 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000111ab1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000182d78 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000551ba : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000bf612 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xcfe9
0x0000000000031180 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000002f63e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000011dbd8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000000f841d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r9], al ; retf
0x0000000000026d81 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001029b5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; dec byte ptr [rbp - 0x77] ; ret
0x000000000003119a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x31159
0x00000000001963c8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x00000000000a837b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; retf 0x8b4c
0x000000000012552a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x000000000012de3e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000010e538 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000002b27d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000102f20 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0x8c0f
0x0000000000105307 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0xe74
0x00000000001982a7 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x43], cl ; ret 0x8349
0x00000000000979a9 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000009b165 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf01
0x000000000010fe34 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf20
0x0000000000130c1a : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000bf2c1 : add eax, dword ptr [rax] ; ret
0x00000000000a5446 : add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0xa5467
0x0000000000140dd3 : add eax, dword ptr [rbx + rcx*4 + 0x56] ; adc al, 0xf ; xchg eax, ebp ; ret 0x2144
0x000000000008b0b1 : add eax, dword ptr [rbx + rcx*4] ; mov eax, r8d ; ret
0x000000000017bab9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000005811f : add eax, dword ptr [rcx + 0x52] ; ret
0x0000000000026de9 : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000001264e9 : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000110bff : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000126291 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000017bbb9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000018b23f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000abc9b : add eax, eax ; jmp rax
0x0000000000061b18 : add eax, eax ; mov eax, r8d ; ret
0x00000000000f12a8 : add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000188121 : add eax, eax ; vzeroupper ; ret
0x00000000001040fb : add eax, ebp ; call qword ptr [rbx]
0x000000000007616f : add eax, ebp ; retf
0x0000000000049630 : add eax, ebp ; retf 0xfdbe
0x000000000010cf36 : add eax, ebp ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000007a920 : add eax, ebx ; jmp rax
0x0000000000130ecb : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018b848 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000013fd93 : add eax, ecx ; cmovs eax, edx ; ret
0x000000000006660d : add eax, ecx ; jmp rax
0x00000000000af0e9 : add eax, ecx ; ret
0x0000000000186d86 : add eax, ecx ; sub rax, rdi ; ret
0x000000000018bbed : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000014942e : add eax, ecx ; sub rdx, 1 ; jne 0x1493c0 ; ret
0x0000000000187a76 : add eax, ecx ; vzeroupper ; ret
0x000000000018811e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x00000000000af0e6 : add eax, edi ; add rax, rcx ; ret
0x0000000000187a73 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000000af91a : add eax, edi ; add rax, rsi ; ret
0x00000000000676e7 : add eax, edi ; jmp rax
0x00000000000abb19 : add eax, edi ; ret
0x000000000018bca5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000187bea : add eax, edi ; vzeroupper ; ret
0x0000000000034b0e : add eax, edx ; jmp r8
0x0000000000026ece : add eax, edx ; jmp rax
0x00000000000b4ef6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000d2a1b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000006f256 : add eax, esi ; jmp rax
0x00000000000af91d : add eax, esi ; ret
0x000000000010c272 : add eax, esp ; jmp rax
0x0000000000164eec : add ebp, 1 ; mov rdx, rcx ; jmp 0x164ecd
0x00000000000e9e4b : add ebp, 1 ; mov rdx, rcx ; jmp 0xe9e2d
0x00000000000ddb40 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005f72f : add ebp, eax ; retf
0x000000000011021e : add ebp, ecx ; ret 0xfffd
0x00000000000f884d : add ebx, 0x20 ; call 0x25355
0x00000000000393af : add ebx, 1 ; call 0x255d5
0x00000000001632f6 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000a1b66 : add ebx, dword ptr [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a02be : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000098391 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000445f0 : add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x000000000012515d : add ebx, eax ; nop ; ret
0x0000000000058cd1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001882db : add ebx, eax ; nop dword ptr [rax] ; ret
0x000000000012231b : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000012eaab : add ebx, ebp ; ret 0x9066
0x000000000002c6b7 : add ebx, ebp ; retf
0x00000000001713a3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000bf1cb : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xbf1c0 ; ret
0x00000000000b6c0a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000139108 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000098c3c : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000a9d29 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000a65a7 : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x00000000000f40b1 : add ecx, dword ptr [rax + 0x29] ; retf 0x14c
0x0000000000162ce7 : add ecx, dword ptr [rax + 0x29] ; retf 0xceb
0x0000000000051fa1 : add ecx, dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000a79e8 : add ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000007abda : add ecx, dword ptr [rax + 0x63] ; add al, 0x86 ; add rax, rbx ; jmp rax
0x000000000007ac38 : add ecx, dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rbx ; jmp rax
0x000000000011f807 : add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x000000000012ed6e : add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000019bfe2 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x000000000013a0ce : add ecx, dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000b6c0e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000002dbdc : add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000eb555 : add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000012e46f : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x00000000000980ef : add ecx, dword ptr [rax - 0x77] ; retf 0x3141
0x00000000000f5ce4 : add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000001701b4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000000a009b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000013e05b : add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x00000000000673f3 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a5455 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000a6ee5 : add ecx, dword ptr [rbp + 0x29] ; retf 0x14d
0x00000000000aa261 : add ecx, dword ptr [rbp + 0x39] ; ret
0x0000000000049ca7 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x00000000001998bd : add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000171112 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000151a2a : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000000ba064 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000001052ae : add ecx, dword ptr [rcx + 0x4b8b3053] ; sub al, 0x39 ; retf 0x57d
0x0000000000196c6b : add ecx, dword ptr [rcx + 9] ; retf 0x894d
0x0000000000196f51 : add ecx, dword ptr [rcx + 9] ; retf 0xe583
0x00000000000b6c0b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000014db67 : add ecx, dword ptr [rcx - 0x77] ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001564f7 : add ecx, dword ptr [rcx - 0x77] ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x000000000005644b : add ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000015fff5 : add ecx, dword ptr [rcx] ; add al, ch ; ret
0x00000000000deb37 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000160077 : add ecx, dword ptr [rcx] ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000015ffcf : add ecx, dword ptr [rcx] ; add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x000000000013d3ec : add ecx, dword ptr [rdi] ; test byte ptr [rbp - 0x7d000000], cl ; ret 0x8103
0x00000000000f4bc2 : add ecx, dword ptr [rdi] ; test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba8b0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000fa68f : add ecx, dword ptr [rdi] ; test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000cc91e : add ecx, dword ptr [rdi] ; xchg bh, cl ; add eax, 0x89490000 ; ret
0x00000000000cc642 : add ecx, dword ptr [rdi] ; xchg dl, bh ; add eax, 0x89490000 ; ret
0x000000000002daf5 : add ecx, dword ptr [rdi] ; xchg dword ptr [rax + 0x39480000], esp ; ret
0x00000000000cdaa1 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000cdaf5 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000031acd : add ecx, dword ptr [rdi] ; xchg ebp, ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x000000000011f266 : add ecx, dword ptr [rdx] ; add al, ch ; ret 0xf698
0x00000000000de7d2 : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e6090 : add ecx, dword ptr [rip + 0x142b800] ; add byte ptr [rax], al ; syscall
0x000000000002b58c : add ecx, ebp ; retf
0x00000000000cec76 : add ecx, ebp ; retf 0xfffb
0x0000000000141c40 : add ecx, ebp ; retf 0xfffc
0x00000000000e3803 : add ecx, ebp ; retf 0xfffd
0x000000000016936f : add ecx, ebx ; jmp r9
0x0000000000190a36 : add ecx, ebx ; jmp rcx
0x000000000011c854 : add ecx, ebx ; ret
0x0000000000132b25 : add ecx, ecx ; jmp 0x8ed44
0x00000000000abb06 : add ecx, ecx ; jmp rcx
0x0000000000083f53 : add ecx, edi ; jmp rcx
0x00000000001017ee : add ecx, edx ; jmp rcx
0x00000000000bf294 : add ecx, esi ; jmp rcx
0x0000000000150e01 : add edi, 0x10 ; jmp rcx
0x000000000014bd9f : add edi, 0x23b0 ; pop rbp ; jmp rcx
0x0000000000153938 : add edi, 0x58 ; jmp rcx
0x0000000000152ff8 : add edi, 0x68 ; jmp rcx
0x00000000001501fb : add edi, 0xc8 ; jmp rcx
0x00000000000eb0ee : add edi, 1 ; test al, al ; jne 0xeb0aa ; xor eax, eax ; ret
0x0000000000159738 : add edi, dword ptr [rax + 1] ; jmp 0x15970a
0x000000000004794f : add edi, dword ptr [rsp] ; mov rsi, r15 ; call r14
0x00000000001197b4 : add edi, eax ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000119992 : add edi, eax ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x8004
0x000000000004b5f2 : add edi, eax ; cmp rdi, r8 ; jb 0x4b5de ; xor eax, eax ; ret
0x000000000019a7b0 : add edi, ebp ; call r12
0x0000000000122a81 : add edi, ebp ; xor eax, eax ; ret
0x0000000000048bf8 : add edi, ebx ; call rax
0x000000000016936c : add edi, edx ; add r9, r11 ; jmp r9
0x000000000013f8c8 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000046bbb : add edi, esi ; ret 0
0x000000000019774a : add edi, esp ; jmp rdi
0x000000000018c5c6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18c56d
0x000000000018cce6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18cc8d
0x000000000018d366 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18d30d
0x000000000018d7b6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18d74d
0x000000000018e056 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18dffd
0x000000000018e4d6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18e462
0x00000000000966c2 : add edx, 0x60 ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000014121c : add edx, 1 ; syscall
0x000000000013f81e : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000045deb : add edx, dword ptr [rip - 0x3b7cb800] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000af828 : add edx, eax ; jl 0xaf897 ; add rax, rdi ; ret
0x00000000000af838 : add edx, eax ; jl 0xaf899 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af858 : add edx, eax ; jl 0xaf899 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af878 : add edx, eax ; jl 0xaf899 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000a67af : add edx, eax ; jmp 0xa6761
0x00000000000a6e2e : add edx, eax ; jmp 0xa6de1
0x00000000000a8960 : add edx, eax ; jmp 0xa8911
0x00000000000a9a00 : add edx, eax ; jmp 0xa99b1
0x00000000000f3ac0 : add edx, eax ; jmp 0xf3ad2
0x00000000000f3fbe : add edx, eax ; jmp 0xf3f51
0x0000000000152a39 : add edx, eax ; jmp rdx
0x0000000000059bd2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000448f0 : add edx, ecx ; jmp 0x44902
0x0000000000055fa4 : add edx, ecx ; jmp rdx
0x0000000000043cc2 : add edx, edi ; jmp r10
0x0000000000043b94 : add edx, edi ; jmp rdx
0x00000000001974f1 : add edx, edx ; jmp rdx
0x0000000000058270 : add edx, esi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000fca15 : add edx, esi ; jmp rdx
0x00000000000fc36e : add esi, 8 ; mov rdi, r12 ; call 0xf8da8
0x00000000000be169 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009b615 : add esi, dword ptr [rbp + rdi - 0x77] ; ret 0xb48b
0x000000000014b9bf : add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000005647b : add esi, eax ; jmp qword ptr [rax]
0x000000000015a71a : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x00000000001712c3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000becfe : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000162747 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009bba3 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dfd : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000018c5c4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18c56f
0x000000000018cce4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18cc8f
0x000000000018d364 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d30f
0x000000000018d7b4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d74f
0x000000000018e054 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18dfff
0x000000000018e4d4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e464
0x0000000000192e6c : add esi, edi ; fadd st(3) ; ret
0x00000000000bf3bc : add esi, edi ; int1 ; mov eax, eax ; ret
0x00000000000f7670 : add esi, esi ; ret
0x000000000014baca : add esi, esi ; ret 0x7402
0x0000000000105fec : add esi, esi ; ret 0xf01
0x00000000000f906d : add esi, esi ; ret 0xf04
0x00000000000a0693 : add esp, 0x10 ; mov eax, r12d ; pop r12 ; ret
0x0000000000155586 : add esp, 0x10 ; mov eax, r8d ; pop r12 ; ret
0x00000000001105cc : add esp, 0x10 ; mov eax, r8d ; pop rbp ; ret
0x000000000009c750 : add esp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x000000000009c559 : add esp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x000000000009113a : add esp, 0x10 ; movzx eax, al ; pop rbx ; neg eax ; ret
0x0000000000147c30 : add esp, 0x10 ; pop r12 ; ret
0x0000000000033458 : add esp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000992a1 : add esp, 0x10 ; pop rbp ; ret
0x0000000000094b95 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000065646 : add esp, 0x10 ; pop rbx ; pop r12 ; pop r13 ; ret
0x00000000000841f5 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c75 : add esp, 0x10 ; pop rbx ; ret
0x00000000000beacd : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000065926 : add esp, 0x1010 ; pop rbp ; ret
0x0000000000046402 : add esp, 0x118 ; ret
0x0000000000112598 : add esp, 0x130 ; pop rbp ; ret
0x00000000000462d2 : add esp, 0x148 ; ret
0x000000000009d91e : add esp, 0x18 ; jmp rax
0x000000000014a366 : add esp, 0x18 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x000000000004a16c : add esp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000a012b : add esp, 0x18 ; mov rax, r8 ; pop rbx ; pop r12 ; ret
0x0000000000065f1a : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000004a9c2 : add esp, 0x18 ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000007d4c8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045dd6 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000037a1b : add esp, 0x18 ; ret
0x0000000000097b18 : add esp, 0x20 ; and eax, 0xc ; pop rbx ; ret
0x000000000013b317 : add esp, 0x20 ; mov eax, r8d ; pop rbp ; ret
0x00000000000e2bbf : add esp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x0000000000045e91 : add esp, 0x20 ; movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000045f22 : add esp, 0x20 ; pop rbp ; ret
0x00000000000952f1 : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000032d7d : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd286 : add esp, 0x20 ; pop rbx ; ret
0x00000000000957a3 : add esp, 0x20 ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000155e89 : add esp, 0x28 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x0000000000084948 : add esp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000876f8 : add esp, 0x28 ; mov edx, r12d ; pop rbx ; pop r12 ; jmp rax
0x000000000008dc2e : add esp, 0x28 ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000006580b : add esp, 0x28 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000001556c5 : add esp, 0x28 ; pop rbx ; pop r12 ; ret
0x0000000000045ab3 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005e13d : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004a746 : add esp, 0x28 ; ret
0x000000000019a538 : add esp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x00000000001162ed : add esp, 0x30 ; pop rbp ; ret
0x00000000000943c9 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a11f : add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000d7439 : add esp, 0x30 ; pop rbx ; ret
0x0000000000029216 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054f6b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005e958 : add esp, 0x38 ; ret
0x0000000000115ce8 : add esp, 0x40 ; pop r12 ; ret
0x000000000009c3be : add esp, 0x40 ; pop rbp ; ret
0x0000000000046ca9 : add esp, 0x40 ; pop rbx ; ret
0x0000000000125afc : add esp, 0x40 ; ret
0x000000000011f1de : add esp, 0x418 ; ret
0x000000000005e696 : add esp, 0x450 ; pop rbp ; ret
0x00000000000e82a5 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000155194 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000090d3b : add esp, 0x48 ; ret
0x0000000000151acf : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000582ed : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000141236 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000112e29 : add esp, 0x58 ; ret
0x0000000000116bdf : add esp, 0x60 ; mov eax, r11d ; pop rbx ; ret
0x0000000000117158 : add esp, 0x60 ; mov rax, r12 ; pop r12 ; ret
0x0000000000118368 : add esp, 0x60 ; pop rbp ; ret
0x0000000000110ffc : add esp, 0x68 ; pop rbp ; pop r12 ; ret
0x00000000000c012e : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010439d : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011176d : add esp, 0x68 ; ret
0x00000000000c0283 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111177 : add esp, 0x78 ; ret
0x000000000011fd1d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000015ad1c : add esp, 0x90 ; pop rbx ; ret
0x00000000000469d4 : add esp, 0x98 ; pop rbp ; pop r12 ; ret
0x0000000000027373 : add esp, 0x98 ; ret
0x0000000000123fd0 : add esp, 0xa0 ; pop rbx ; ret
0x00000000000e1506 : add esp, 0xa8 ; pop rbp ; pop r12 ; ret
0x0000000000047735 : add esp, 0xa8 ; ret
0x00000000000e785b : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000055e58 : add esp, 0xd8 ; ret
0x00000000000e0a18 : add esp, 0xe0 ; pop rbx ; ret
0x00000000000f12a5 : add esp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013f7b1 : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000008ce6b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000015102a : add esp, 8 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000005ea11 : add esp, 8 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x00000000000854d4 : add esp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000011a59f : add esp, 8 ; mov eax, r8d ; ret
0x0000000000105ac9 : add esp, 8 ; mov eax, r9d ; ret
0x000000000004aa9f : add esp, 8 ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x00000000000a3bf1 : add esp, 8 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x0000000000086282 : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000159873 : add esp, 8 ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000008a789 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000151063 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x0000000000027b19 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014be80 : add esp, 8 ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000014d347 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000055506 : add esp, 8 ; movzx eax, al ; ret
0x000000000014448e : add esp, 8 ; movzx eax, ax ; ret
0x000000000015af06 : add esp, 8 ; not eax ; shr eax, 0x1f ; ret
0x0000000000158e16 : add esp, 8 ; pop rbp ; pop r12 ; jmp rax
0x000000000008848a : add esp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000027624 : add esp, 8 ; pop rbx ; pop r14 ; ret
0x000000000014bd57 : add esp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000008e577 : add esp, 8 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000058768 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028489 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a5f9 : add esp, 8 ; ret
0x0000000000166265 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012eb1c : add esp, 8 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000096753 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004c00a : add qword ptr [r8 - 0x7d], rcx ; ret
0x000000000004c9af : add qword ptr [r9 - 0x77], r9 ; xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c1bf7 : add qword ptr [r9 - 0x77], rcx ; xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000077580 : add qword ptr [rax - 0x77], rcx ; retf 0x3948
0x0000000000129b93 : add qword ptr [rax - 0x7d], rcx ; ret 0x4801
0x00000000000a776e : add qword ptr [rax], r8 ; add byte ptr [rcx - 9], al ; ret
0x00000000000462d4 : add qword ptr [rax], rax ; add bl, al ; call 0x132dd7
0x00000000000c01dc : add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x28 ; call rbx
0x000000000013104a : add qword ptr [rcx + rcx*8 - 0x76b7578b], rax ; clc ; ret
0x000000000002c6b4 : add qword ptr [rdi], 1 ; jmp 0x2c68a
0x000000000017ba6d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000043cc1 : add r10, r15 ; jmp r10
0x00000000000a6e2d : add r10, rax ; jmp 0xa6de2
0x00000000000a895f : add r10, rax ; jmp 0xa8912
0x00000000000a99ff : add r10, rax ; jmp 0xa99b2
0x00000000000445ef : add r11, qword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x0000000000095846 : add r11b, r13b ; retf 0xf66
0x00000000001713a2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000164eeb : add r13, 1 ; mov rdx, rcx ; jmp 0x164ece
0x00000000000e9e4a : add r13, 1 ; mov rdx, rcx ; jmp 0xe9e2e
0x0000000000171332 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001712c2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000004794e : add r15, qword ptr [rsp] ; mov rsi, r15 ; call r14
0x0000000000048bf7 : add r15, rbx ; call rax
0x000000000002deca : add r8, qword ptr [r8] ; add bh, dh ; ret 0
0x0000000000186960 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182df4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034b0d : add r8, rdx ; jmp r8
0x00000000000aac61 : add r8b, byte ptr [r8] ; add bh, dh ; ret
0x000000000018c637 : add r8b, byte ptr [r8] ; vzeroupper ; ret
0x000000000014e4d6 : add r8b, r13b ; ret
0x0000000000061b17 : add r8d, eax ; mov eax, r8d ; ret
0x000000000016936e : add r9, r11 ; jmp r9
0x000000000004b2cb : add r9b, byte ptr [r15] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x000000000002f643 : add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000013ec39 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1072
0x00000000000f0858 : add r9b, byte ptr [r9 + 0x39] ; ret 0x3176
0x000000000018b022 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000017baf3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a39a3 : add rax, 0xf48000d ; ret 0xfc3
0x00000000000d2cc0 : add rax, 1 ; ret
0x00000000000d2cb7 : add rax, 2 ; ret
0x00000000000d2cd0 : add rax, 3 ; ret
0x000000000002753c : add rax, qword ptr [0] ; ret
0x000000000009b164 : add rax, qword ptr [rax] ; add dh, dh ; ret 0xf01
0x00000000000a5445 : add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa5468
0x000000000002753b : add rax, qword ptr fs:[0] ; ret
0x0000000000093309 : add rax, r10 ; jmp rax
0x000000000009333b : add rax, r11 ; jmp rax
0x000000000010c271 : add rax, r12 ; jmp rax
0x0000000000077163 : add rax, r14 ; jmp rax
0x00000000000abc9a : add rax, r8 ; jmp rax
0x0000000000188120 : add rax, r8 ; vzeroupper ; ret
0x000000000007a91f : add rax, rbx ; jmp rax
0x0000000000130eca : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018b847 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000006660c : add rax, rcx ; jmp rax
0x00000000000af0e8 : add rax, rcx ; ret
0x0000000000186d85 : add rax, rcx ; sub rax, rdi ; ret
0x000000000018bbec : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000187a75 : add rax, rcx ; vzeroupper ; ret
0x000000000018811d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000af0e5 : add rax, rdi ; add rax, rcx ; ret
0x0000000000187a72 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000af919 : add rax, rdi ; add rax, rsi ; ret
0x00000000000676e6 : add rax, rdi ; jmp rax
0x00000000000abb18 : add rax, rdi ; ret
0x000000000018bca4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000187be9 : add rax, rdi ; vzeroupper ; ret
0x0000000000026ecd : add rax, rdx ; jmp rax
0x00000000000b4ef5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000006f255 : add rax, rsi ; jmp rax
0x00000000000af91c : add rax, rsi ; ret
0x00000000000f884c : add rbx, 0x20 ; call 0x25356
0x00000000000393ae : add rbx, 1 ; call 0x255d6
0x00000000001017ed : add rcx, r10 ; jmp rcx
0x0000000000190a35 : add rcx, r11 ; jmp rcx
0x00000000000abb05 : add rcx, r9 ; jmp rcx
0x0000000000083f52 : add rcx, rdi ; jmp rcx
0x00000000000bf293 : add rcx, rsi ; jmp rcx
0x0000000000150e00 : add rdi, 0x10 ; jmp rcx
0x000000000014bd9e : add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x0000000000153937 : add rdi, 0x58 ; jmp rcx
0x0000000000152ff7 : add rdi, 0x68 ; jmp rcx
0x00000000001501fa : add rdi, 0xc8 ; jmp rcx
0x0000000000197749 : add rdi, r12 ; jmp rdi
0x000000000019a7af : add rdi, rbp ; call r12
0x000000000016936b : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000013f8c7 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001974f0 : add rdx, r10 ; jmp rdx
0x0000000000059bd1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000055fa3 : add rdx, r9 ; jmp rdx
0x00000000000af827 : add rdx, rax ; jl 0xaf898 ; add rax, rdi ; ret
0x00000000000af826 : add rdx, rax ; jl 0xaf899 ; add rax, rdi ; ret
0x00000000000a67ae : add rdx, rax ; jmp 0xa6762
0x00000000000f3abf : add rdx, rax ; jmp 0xf3ad3
0x00000000000f3fbd : add rdx, rax ; jmp 0xf3f52
0x0000000000152a38 : add rdx, rax ; jmp rdx
0x00000000000448ef : add rdx, rcx ; jmp 0x44903
0x0000000000083fb6 : add rdx, rcx ; jmp rdx
0x0000000000043b93 : add rdx, rdi ; jmp rdx
0x000000000005826f : add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000fca14 : add rdx, rsi ; jmp rdx
0x00000000000fc36d : add rsi, 8 ; mov rdi, r12 ; call 0xf8da9
0x000000000018c5c3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18c570
0x000000000018cce3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18cc90
0x000000000018d363 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d310
0x000000000018d7b3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d750
0x000000000018e053 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e000
0x000000000018e4d3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e465
0x00000000000a0692 : add rsp, 0x10 ; mov eax, r12d ; pop r12 ; ret
0x0000000000155585 : add rsp, 0x10 ; mov eax, r8d ; pop r12 ; ret
0x00000000001105cb : add rsp, 0x10 ; mov eax, r8d ; pop rbp ; ret
0x000000000009c74f : add rsp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x000000000009c558 : add rsp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x0000000000147c2f : add rsp, 0x10 ; pop r12 ; ret
0x0000000000033457 : add rsp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000992a0 : add rsp, 0x10 ; pop rbp ; ret
0x0000000000094b94 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000065645 : add rsp, 0x10 ; pop rbx ; pop r12 ; pop r13 ; ret
0x00000000000841f4 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c74 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000065925 : add rsp, 0x1010 ; pop rbp ; ret
0x0000000000046401 : add rsp, 0x118 ; ret
0x0000000000112597 : add rsp, 0x130 ; pop rbp ; ret
0x00000000000462d1 : add rsp, 0x148 ; ret
0x000000000009d91d : add rsp, 0x18 ; jmp rax
0x000000000004a16b : add rsp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000065f19 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000045dd5 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000037a1a : add rsp, 0x18 ; ret
0x0000000000097b17 : add rsp, 0x20 ; and eax, 0xc ; pop rbx ; ret
0x000000000013b316 : add rsp, 0x20 ; mov eax, r8d ; pop rbp ; ret
0x00000000000e2bbe : add rsp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x0000000000045e90 : add rsp, 0x20 ; movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000045f21 : add rsp, 0x20 ; pop rbp ; ret
0x00000000000952f0 : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000032d7c : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd285 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000957a2 : add rsp, 0x20 ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000084947 : add rsp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000001556c4 : add rsp, 0x28 ; pop rbx ; pop r12 ; ret
0x000000000005e13c : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004a745 : add rsp, 0x28 ; ret
0x000000000019a537 : add rsp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x00000000001162ec : add rsp, 0x30 ; pop rbp ; ret
0x00000000000943c8 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a11e : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000d7438 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000054f6a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005e957 : add rsp, 0x38 ; ret
0x0000000000115ce7 : add rsp, 0x40 ; pop r12 ; ret
0x000000000009c3bd : add rsp, 0x40 ; pop rbp ; ret
0x0000000000046ca8 : add rsp, 0x40 ; pop rbx ; ret
0x0000000000125afb : add rsp, 0x40 ; ret
0x000000000011f1dd : add rsp, 0x418 ; ret
0x000000000005e695 : add rsp, 0x450 ; pop rbp ; ret
0x0000000000155193 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000090d3a : add rsp, 0x48 ; ret
0x0000000000151ace : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000141235 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000112e28 : add rsp, 0x58 ; ret
0x0000000000116bde : add rsp, 0x60 ; mov eax, r11d ; pop rbx ; ret
0x0000000000117157 : add rsp, 0x60 ; mov rax, r12 ; pop r12 ; ret
0x0000000000118367 : add rsp, 0x60 ; pop rbp ; ret
0x0000000000110ffb : add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x000000000010439c : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011176c : add rsp, 0x68 ; ret
0x00000000000c0282 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111176 : add rsp, 0x78 ; ret
0x000000000011fd1c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000015ad1b : add rsp, 0x90 ; pop rbx ; ret
0x0000000000027372 : add rsp, 0x98 ; ret
0x0000000000123fcf : add rsp, 0xa0 ; pop rbx ; ret
0x0000000000047734 : add rsp, 0xa8 ; ret
0x00000000000e785a : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000055e57 : add rsp, 0xd8 ; ret
0x00000000000e0a17 : add rsp, 0xe0 ; pop rbx ; ret
0x00000000000f12a4 : add rsp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013f7b0 : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000008ce6a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000854d3 : add rsp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000011a59e : add rsp, 8 ; mov eax, r8d ; ret
0x0000000000105ac8 : add rsp, 8 ; mov eax, r9d ; ret
0x0000000000086281 : add rsp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000008a788 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000027b18 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014d346 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000055505 : add rsp, 8 ; movzx eax, al ; ret
0x000000000014448d : add rsp, 8 ; movzx eax, ax ; ret
0x000000000015af05 : add rsp, 8 ; not eax ; shr eax, 0x1f ; ret
0x0000000000158e15 : add rsp, 8 ; pop rbp ; pop r12 ; jmp rax
0x0000000000088489 : add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000027623 : add rsp, 8 ; pop rbx ; pop r14 ; ret
0x000000000014bd56 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000008e576 : add rsp, 8 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000028488 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a5f8 : add rsp, 8 ; ret
0x0000000000166264 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012eb1b : add rsp, 8 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000096752 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001319be : add sil, sil ; ret 0x7420
0x00000000000e9816 : add sil, sil ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x000000000012514b : add word ptr [rax], 1 ; ret
0x0000000000124e7e : add word ptr [rdx + rax*2], 1 ; ret
0x000000000004552b : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000004559f : addps xmm0, xmm0 ; ret
0x00000000000454b1 : addps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000004552a : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000004559e : addsd xmm0, xmm0 ; ret
0x00000000000454b0 : addsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000045810 : addss xmm0, xmm0 ; ret
0x00000000000a8f6e : and al, 0 ; add bh, dh ; ret
0x00000000000b73c1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a5224 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d7265 : and al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000b2195 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011899e : and al, 0 ; mov rax, r12 ; pop r12 ; ret
0x000000000012b6e1 : and al, 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015f124 : and al, 0x10 ; call 0x11bb84
0x0000000000132aec : and al, 0x10 ; call 0x8ed44
0x0000000000132aeb : and al, 0x10 ; call 0x8ed45
0x000000000009a741 : and al, 0x10 ; call qword ptr [rax]
0x00000000000ce15f : and al, 0x10 ; call r14
0x0000000000150e67 : and al, 0x10 ; call rax
0x00000000000c0ff5 : and al, 0x10 ; call rbx
0x0000000000163d35 : and al, 0x10 ; call rsi
0x0000000000044f5b : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000e5b80 : and al, 0x10 ; mov eax, 0xf7 ; syscall
0x00000000001162cb : and al, 0x10 ; mov edi, dword ptr [rsp + 8] ; syscall
0x00000000000abbeb : and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x0000000000153cc2 : and al, 0x10 ; mov rdi, r15 ; call rcx
0x0000000000159116 : and al, 0x10 ; mov rdi, rbp ; call qword ptr [rax]
0x000000000014c2cd : and al, 0x10 ; mov rdx, rax ; jmp 0x14c266
0x000000000014c2cc : and al, 0x10 ; mov rdx, rax ; jmp 0x14c267
0x0000000000048430 : and al, 0x10 ; mov rdx, rbp ; mov rdi, r12 ; call rbx
0x0000000000123639 : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; syscall
0x000000000012229f : and al, 0x10 ; syscall
0x000000000012ae6e : and al, 0x10 ; xor esi, esi ; mov edi, 0x2000004 ; call rax
0x0000000000116b80 : and al, 0x11 ; syscall
0x0000000000154c2f : and al, 0x14 ; call qword ptr [rax]
0x00000000001183b2 : and al, 0x14 ; syscall
0x00000000000abba5 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000009d91b : and al, 0x18 ; add rsp, 0x18 ; jmp rax
0x00000000001164c6 : and al, 0x18 ; add rsp, 0x28 ; ret
0x000000000015acec : and al, 0x18 ; call r8
0x00000000000271df : and al, 0x18 ; call rax
0x00000000000c033b : and al, 0x18 ; call rbx
0x000000000014ab97 : and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000e8893 : and al, 0x18 ; lea rdi, [r12 + rax] ; call 0x25338
0x00000000000e8892 : and al, 0x18 ; lea rdi, [r12 + rax] ; call 0x25339
0x00000000001111da : and al, 0x18 ; mov eax, 0x101 ; syscall
0x00000000001164a7 : and al, 0x18 ; mov eax, 0x115 ; syscall
0x0000000000123d47 : and al, 0x18 ; mov eax, 0x120 ; syscall
0x0000000000124047 : and al, 0x18 ; mov eax, 0x45 ; syscall
0x00000000001183ae : and al, 0x18 ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000abb13 : and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000cda33 : and al, 0x18 ; mov rcx, r12 ; mov rdx, r13 ; call rbx
0x000000000009ce2e : and al, 0x18 ; mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000047b2b : and al, 0x18 ; mov rdx, rbp ; mov rsi, r12 ; call rbx
0x000000000014a0f6 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000163d30 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x000000000009d403 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000158a40 : and al, 0x18 ; xor eax, eax ; call 0x25496
0x0000000000158a3f : and al, 0x18 ; xor eax, eax ; call 0x25497
0x00000000000282c8 : and al, 0x18 ; xor r8d, r8d ; call rbx
0x0000000000056b05 : and al, 0x1c ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x0000000000155673 : and al, 0x1c ; call qword ptr [rax]
0x0000000000114662 : and al, 0x20 ; call 0xe10b4
0x000000000014a681 : and al, 0x20 ; call qword ptr [rax]
0x000000000002c5ec : and al, 0x20 ; call rax
0x00000000000c06e4 : and al, 0x20 ; call rbx
0x0000000000118bea : and al, 0x20 ; mov eax, 0x65 ; syscall
0x000000000009aab3 : and al, 0x20 ; mov qword ptr [rsp + 0x18], r8 ; call rax
0x00000000000c23a2 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc23c0
0x00000000000c23a1 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc23c1
0x00000000000c4d52 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc4d70
0x00000000000c4d51 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc4d71
0x00000000000c7572 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc7590
0x00000000000c7571 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xc7591
0x00000000000cee12 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xcee30
0x00000000000cee11 : and al, 0x20 ; mov r12, r13 ; setne dl ; jmp 0xcee31
0x000000000015072c : and al, 0x20 ; mov rdi, r12 ; call rdx
0x000000000002aa4b : and al, 0x28 ; call rax
0x00000000000c01e1 : and al, 0x28 ; call rbx
0x00000000000e1dbd : and al, 0x28 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000150511 : and al, 0x28 ; mov rdi, r12 ; call rcx
0x000000000009ee93 : and al, 0x28 ; mov rdi, r12 ; call rdx
0x000000000012229a : and al, 0x28 ; movaps xmmword ptr [rsp + 0x10], xmm0 ; syscall
0x000000000014a48c : and al, 0x2c ; call qword ptr [rax]
0x00000000000f9eab : and al, 0x30 ; adc al, 0x83 ; ret
0x00000000000d89d1 : and al, 0x30 ; call 0x25494
0x000000000002b7ee : and al, 0x30 ; call rax
0x00000000000c091f : and al, 0x30 ; call rbx
0x00000000000e2378 : and al, 0x30 ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000116b07 : and al, 0x30 ; mov eax, 0x10 ; syscall
0x000000000014b15d : and al, 0x31 ; ror byte ptr [rax - 0x77], 0xdf ; call rcx
0x000000000002edf0 : and al, 0x38 ; call r15
0x000000000002e7fc : and al, 0x38 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000150522 : and al, 0x38 ; mov rdi, r12 ; call 0x14cff7
0x00000000000f900e : and al, 0x39 ; ret
0x0000000000155fae : and al, 0x3a ; call qword ptr [rax]
0x000000000014ab9c : and al, 0x40 ; call qword ptr [rax]
0x000000000002d86e : and al, 0x40 ; call r14
0x000000000002ddbc : and al, 0x40 ; call rbx
0x000000000002edeb : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000097fe2 : and al, 0x41 ; mov eax, eax ; mov eax, 0x23 ; syscall
0x0000000000111c58 : and al, 0x41 ; mov eax, eax ; mov eax, 0x55 ; syscall
0x00000000000a5124 : and al, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000094bb8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000045dd4 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5d5a : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000123592 : and al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000000000117280 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f426 : and al, 0x48 ; add esp, 0x28 ; ret
0x0000000000123658 : and al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000000000019a182 : and al, 0x48 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000125a99 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000125afa : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000002d17b : and al, 0x48 ; call rbx
0x0000000000162d31 : and al, 0x48 ; mov eax, dword ptr [rax + 0x1b0] ; jmp rax
0x00000000001076a5 : and al, 0x48 ; mov eax, dword ptr [rbp - 0x1e0] ; call rax
0x0000000000091c22 : and al, 0x48 ; mov edi, ebp ; call rax
0x00000000000fb3fc : and al, 0x48 ; mov rcx, rbx ; call 0xf7e17
0x000000000002d869 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002ddb7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000009db6b : and al, 0x48 ; mov rdi, r13 ; call rax
0x000000000015f120 : and al, 0x49 ; mov esi, dword ptr [rsp + 0x10] ; call 0x11bb88
0x000000000013b8b1 : and al, 0x4c ; mov edi, esp ; call rax
0x0000000000048a87 : and al, 0x4c ; mov edx, esi ; mov rax, qword ptr [rsp] ; call rax
0x0000000000047951 : and al, 0x4c ; mov esi, edi ; call r14
0x000000000014b24f : and al, 0x4c ; mov esi, edi ; mov rdi, rbx ; xor eax, eax ; call rcx
0x0000000000048b7e : and al, 0x4c ; mov esi, esp ; mov rdi, r13 ; call rax
0x0000000000048bf3 : and al, 0x4d ; mov ebp, edi ; add r15, rbx ; call rax
0x000000000002fb7a : and al, 0x50 ; call rbx
0x0000000000030e8d : and al, 0x50 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002f790 : and al, 0x50 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002d176 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002acf0 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002c240 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002ba5a : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x00000000000d3655 : and al, 0x50 ; mov rsi, r15 ; mov rdi, rbp ; call rbx
0x0000000000108875 : and al, 0x50 ; shl rdi, 3 ; call 0x25338
0x000000000002acf5 : and al, 0x58 ; call r14
0x000000000002c245 : and al, 0x58 ; call r15
0x000000000002ba5f : and al, 0x58 ; call rbx
0x000000000002bdc0 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e7 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa46 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7e9 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002fb75 : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x000000000002b46f : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x00000000000d3536 : and al, 0x58 ; xor eax, eax ; mov qword ptr [rsp + 0x50], r12 ; call rbx
0x000000000012848c : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a5dbb : and al, 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e1b18 : and al, 0x60 ; call r12
0x000000000002b474 : and al, 0x60 ; call r15
0x000000000002b031 : and al, 0x60 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000015ace7 : and al, 0x60 ; movups xmmword ptr [rsp + 0x18], xmm0 ; call r8
0x000000000010e845 : and al, 0x68 ; lea rdi, [rsp + 0x78] ; call 0x10b339
0x00000000000358b5 : and al, 0x6f ; sbb eax, dword ptr [rax] ; ret
0x000000000010e84a : and al, 0x78 ; call 0x10b334
0x0000000000142973 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000139d9d : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000563e0 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000056c87 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfde9
0x0000000000116c1b : and al, 0x81 ; retf 0
0x00000000000625b8 : and al, 0x83 ; ret
0x00000000001128a9 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000005461f : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000013a76c : and al, 0x88 ; or dh, dh ; ret 0xf02
0x00000000000c1654 : and al, 0x89 ; ret
0x000000000009b630 : and al, 0x89 ; ret 0xb48b
0x00000000000fb083 : and al, 0x89 ; ret 0xe283
0x000000000009256d : and al, 0x89 ; ror dword ptr [rbp + 0x29], 1 ; in eax, 0x83 ; retf 0x8310
0x000000000009f5d3 : and al, 0x8b ; je 0x9f566 ; retf 0x4c89
0x000000000010c9b3 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000143464 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x000000000014340c : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301c : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000110874 : and al, 0x98 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x000000000010c8c3 : and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff9
0x0000000000197747 : and al, 0xa7 ; add rdi, r12 ; jmp rdi
0x00000000000ecc30 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000013b77b : and al, 0xa8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000162063 : and al, 0xb5 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000010f4b7 : and al, 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010f407 : and al, 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000130249 : and al, 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x00000000000e5cc5 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000e5b9f : and al, 0xc ; add rsp, 0x28 ; ret
0x00000000001182b1 : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000123ea5 : and al, 0xc ; mov eax, 0x133 ; syscall
0x0000000000123326 : and al, 0xc ; mov eax, 0x2b ; syscall
0x0000000000122655 : and al, 0xc ; mov eax, 0xe8 ; syscall
0x00000000000abb84 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x0000000000118297 : and al, 0xc ; syscall
0x0000000000142f5d : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000045a21 : and al, 0xc8 ; ret
0x0000000000138dd8 : and al, 0xd0 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000045a1b : and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x0000000000079faf : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000019a74c : and al, 0xd8 ; ret
0x00000000000abc62 : and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x000000000008f264 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000001431de : and al, 0xe8 ; and rsi, r13 ; dec dword ptr [rax - 0x77] ; ret
0x000000000003f620 : and al, 0xe8 ; cli ; retf 0xffff
0x000000000004508c : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x000000000003f529 : and al, 0xe8 ; int1 ; retf
0x0000000000132ca6 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x000000000003f676 : and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000005e205 : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x000000000003f5ca : and al, 0xe8 ; push rax ; retf
0x0000000000042657 : and al, 0xe8 ; ret
0x00000000000f6568 : and al, 0xe8 ; ret 0xf2ed
0x0000000000042b88 : and al, 0xe8 ; ret 0xfe27
0x0000000000043758 : and al, 0xe8 ; ret 0xff89
0x0000000000042358 : and al, 0xe8 ; ret 0xff9d
0x000000000003ef58 : and al, 0xe8 ; ret 0xffd1
0x000000000003e84f : and al, 0xe8 ; retf
0x000000000004a9f0 : and al, 0xe8 ; retf 0x4ce
0x0000000000043450 : and al, 0xe8 ; retf 0xff8c
0x0000000000101258 : and al, 0xe8 ; rol byte ptr [rax - 0xe], cl ; dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x000000000003ee17 : and al, 0xe9 ; ret 0xffed
0x000000000003f4e1 : and al, 0xe9 ; retf
0x0000000000115100 : and al, 0xe9 ; retf 0xfffe
0x000000000011b920 : and al, 0xea ; or al, 0 ; ret
0x000000000010a10c : and al, 0xeb ; adc eax, 0xbe0f4890 ; retf 0x8348
0x000000000012a624 : and al, 0xeb ; retf 0xf66
0x00000000000abc49 : and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000019c633 : and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000119a34 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x119a71
0x0000000000119a33 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x119a72
0x00000000000d90fb : and al, 0xf ; ret 0x4c80
0x000000000014c5e4 : and al, 0xf ; retf 0x1089
0x0000000000046c6b : and al, 0xf ; xchg eax, ebp ; ret 0x8948
0x000000000004514b : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000044fc8 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000d346a : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000d3470 : and al, 0xf0 ; ret
0x00000000000abc31 : and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb6c : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc13 : and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb4e : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000c153e : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111b95 : and al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000047b16 : and al, 1 ; mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000049dd9 : and al, 1 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000011737a : and al, 1 ; retf 0x5389
0x000000000012249b : and al, 4 ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000123e1e : and al, 4 ; add rsp, 0x28 ; ret
0x000000000004ab65 : and al, 4 ; jne 0x4abc2 ; add rsp, 0x18 ; ret
0x000000000004ab64 : and al, 4 ; jne 0x4abc3 ; add rsp, 0x18 ; ret
0x0000000000122482 : and al, 4 ; syscall
0x00000000000ba9f8 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000001014ad : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x0000000000116662 : and al, 8 ; add cl, byte ptr [rbx + 0x750c2444] ; ret 0xd8f7
0x0000000000037a18 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000095325 : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000004b577 : and al, 8 ; add rsp, 0x28 ; ret
0x00000000001162ea : and al, 8 ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000124123 : and al, 8 ; add rsp, 0x38 ; ret
0x000000000014c42a : and al, 8 ; call qword ptr [rax]
0x0000000000085b90 : and al, 8 ; call rax
0x000000000009aad3 : and al, 8 ; call rdx
0x0000000000045182 : and al, 8 ; fadd st(0) ; ret
0x00000000000450de : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000045044 : and al, 8 ; fsubrp st(1) ; ret
0x000000000013fc47 : and al, 8 ; jne 0x13fc81 ; add rsp, 0x38 ; ret
0x0000000000122705 : and al, 8 ; mov eax, 0x114 ; syscall
0x0000000000116556 : and al, 8 ; mov eax, 0x11d ; syscall
0x000000000011783f : and al, 8 ; mov eax, 0x127 ; syscall
0x00000000001178ff : and al, 8 ; mov eax, 0x128 ; syscall
0x00000000001176e4 : and al, 8 ; mov eax, 0x13 ; syscall
0x0000000000122922 : and al, 8 ; mov eax, 0x130 ; syscall
0x000000000004b556 : and al, 8 ; mov eax, 0x13e ; syscall
0x0000000000117784 : and al, 8 ; mov eax, 0x14 ; syscall
0x000000000011bc26 : and al, 8 ; mov eax, 0x1a ; syscall
0x00000000001233f2 : and al, 8 ; mov eax, 0x2a ; syscall
0x0000000000123834 : and al, 8 ; mov eax, 0x2e ; syscall
0x00000000001236d4 : and al, 8 ; mov eax, 0x2f ; syscall
0x000000000012230c : and al, 8 ; mov eax, 0x38 ; syscall
0x00000000000e5a7d : and al, 8 ; mov eax, 0x3d ; syscall
0x00000000001117ce : and al, 8 ; mov eax, 0x48 ; syscall
0x0000000000111346 : and al, 8 ; mov eax, 1 ; syscall
0x0000000000115c26 : and al, 8 ; mov eax, 7 ; syscall
0x000000000003f61b : and al, 8 ; mov qword ptr [rsp], r9 ; call 0x3c128
0x000000000003f61a : and al, 8 ; mov qword ptr [rsp], r9 ; call 0x3c129
0x000000000013feb5 : and al, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011dfe0 : and al, 8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000011465d : and al, 8 ; mov rdi, qword ptr [rsp + 0x20] ; call 0xe10b9
0x000000000011ce2b : and al, 8 ; mov rdi, r13 ; call rax
0x000000000008c301 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000149cb5 : and al, 8 ; mov rdi, rbp ; call rcx
0x000000000013ac08 : and al, 8 ; mov rdi, rbx ; call rax
0x00000000000f482e : and al, 8 ; mov rsi, r8 ; call 0xf0ab7
0x00000000000f482d : and al, 8 ; mov rsi, r8 ; call 0xf0ab8
0x0000000000044f5f : and al, 8 ; ret
0x00000000001162cf : and al, 8 ; syscall
0x00000000001112a6 : and al, 8 ; xor eax, eax ; syscall
0x000000000009aba7 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000045f1d : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000045214 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000005b583 : and al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x198006
0x00000000000e5c91 : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b233e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000067c89 : and al, byte ptr [rbx - 0x61f43] ; call qword ptr [rax]
0x0000000000122515 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000856bb : and al, byte ptr [rcx] ; add cl, ch ; ret
0x00000000000b9b9a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000c7927 : and al, ch ; ret
0x0000000000114663 : and al, ch ; retf 0xfffc
0x00000000000ffb50 : and al, ch ; retf 0xfffd
0x00000000000f884f : and al, ch ; sti ; retf 0xfff2
0x00000000000371d6 : and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000371f6 : and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000037136 : and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000371b6 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000370d6 : and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000037176 : and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000037116 : and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000037156 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00000000000c7232 : and bh, cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bafd7 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000083ffb : and bl, ch ; retf 0x9066
0x00000000000d433c : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000008c719 : and byte ptr [r11 + rcx*4 + 0x6d], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000008c747 : and byte ptr [r8 + 1], r9b ; ret
0x000000000008f18a : and byte ptr [r8 - 0x75], r9b ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000be486 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000122101 : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x000000000008f18f : and byte ptr [rax + 0x29], cl ; ret 0x6348
0x0000000000187a86 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000009bd7d : and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000015bfd6 : and byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000009b671 : and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008bd66 : and byte ptr [rax + 0x39], cl ; ret 0x894c
0x000000000015d14d : and byte ptr [rax + 0x39], cl ; ret 0xac74
0x000000000004a3aa : and byte ptr [rax + 0x39], cl ; ret 0xb677
0x000000000004a3ba : and byte ptr [rax + 0x39], cl ; ret 0xe076
0x000000000004a360 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x000000000018b75a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000118beb : and byte ptr [rax + 0x65], bh ; syscall
0x00000000001539d5 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x0000000000187bfc : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000008c748 : and byte ptr [rax + 1], cl ; ret
0x0000000000188086 : and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000af856 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000004a62e : and byte ptr [rax + 9], cl ; clc ; ret
0x000000000005e1f8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b4eed : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b50ae : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000002a5db : and byte ptr [rax + rax], bl ; test eax, eax ; je 0x2a5ef ; ret
0x000000000008f18b : and byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000cdbb6 : and byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000028764 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000138902 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000053597 : and byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000034fd8 : and byte ptr [rax - 0x77], cl ; std ; test rax, rax ; je 0x34fec ; call rax
0x000000000019b043 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff7
0x000000000019af43 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff8
0x000000000019ae43 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff9
0x000000000019ad43 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfffa
0x00000000000e0279 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000187e4b : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000012450f : and byte ptr [rax - 0x7d], cl ; ret 0x4c14
0x00000000000d7e26 : and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000917c2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000011f900 : and byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x00000000000714d8 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e7f0d : and byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7fdb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000802e4 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000bf37b : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000111b35 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000b258e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019917f : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2040
0x00000000001967ee : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2041
0x00000000000bc14c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000be487 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0514 : and byte ptr [rbp + rcx*4 + 0x60], cl ; xor byte ptr [rax + 0x31], cl ; ret 0x8948
0x000000000018f7dd : and byte ptr [rbp - 0x27], dh ; vzeroupper ; ret
0x00000000000c23a3 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xc23bf
0x00000000000c4d53 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xc4d6f
0x00000000000c7573 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xc758f
0x00000000000cee13 : and byte ptr [rbp - 0x77], cl ; in al, dx ; setne dl ; jmp 0xcee2f
0x000000000019a8cb : and byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf
0x00000000000d4ab7 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d433d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000032d7f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008c71a : and byte ptr [rbx + rcx*4 + 0x6d], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000019029a : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000002cca1 : and byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000054ee9 : and byte ptr [rcx + 0xfffffe2], al ; add byte ptr [rcx], cl ; ret 0x8f74
0x000000000006216c : and byte ptr [rcx + 9], cl ; ret
0x000000000009aab4 : and byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x18 ; call rax
0x000000000015072d : and byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000011ec87 : and byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r15 ; call r14
0x00000000000e2163 : and byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085d7b : and byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000445f2 : and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x000000000013b319 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; ret
0x00000000000e2bc1 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000001387fb : and byte ptr [rcx - 0x16fbdbbc], cl ; retf
0x00000000000ec523 : and byte ptr [rcx - 0x17d7dbbc], cl ; ret
0x0000000000043a39 : and byte ptr [rcx - 0x77], cl ; ret 0x1c74
0x00000000000d9dc9 : and byte ptr [rcx - 0x77], cl ; ret 0xd889
0x0000000000057038 : and byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a29c4 : and byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000123d04 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e5dd6 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000d448a : and byte ptr [rcx], al ; ret 0xfac1
0x00000000000de058 : and byte ptr [rcx], al ; retf 0xfac1
0x000000000018cd68 : and byte ptr [rcx], ch ; retf 0x3944
0x000000000018e4d8 : and byte ptr [rcx], ch ; retf 0x81eb
0x000000000018d7b8 : and byte ptr [rcx], ch ; retf 0x8ceb
0x000000000018c5c8 : and byte ptr [rcx], ch ; retf 0x9ceb
0x000000000015e34b : and byte ptr [rcx], cl ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000005e181 : and byte ptr [rcx], cl ; ret 0x9574
0x000000000004b2f1 : and byte ptr [rcx], cl ; retf 0x948
0x000000000009e8f5 : and byte ptr [rcx], dh ; imul al ; ret
0x0000000000094ae7 : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010f564 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bef75 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000371b9 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000001196f6 : and byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000014b86f : and byte ptr [rdi], cl ; retf 0x5089
0x00000000000d757f : and byte ptr [rdi], cl ; test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000bacc9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000010fe39 : and byte ptr [rdi], cl ; test ebp, edi ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000001940c0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000142bf5 : and byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000011ae2c : and byte ptr [rdi], dh ; or eax, 0x1f88300 ; jg 0x11ae3f ; ret
0x0000000000064bfd : and byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000015f733 : and byte ptr [rip - 0x76b40000], al ; loopne 0x15f785 ; pop rsp ; ret
0x0000000000190aca : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015ec2d : and byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0xf66
0x0000000000045e93 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xc35d
0x000000000012ef41 : and byte ptr [rsp + rcx + 0x5b], dh ; ret
0x00000000000d2cb2 : and ch, 0xf ; je 0xd2cd9 ; add rax, 2 ; ret
0x00000000000bf338 : and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000018ba8b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000187e93 : and ch, al ; std ; xlatb ; ret
0x000000000018c9f4 : and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000011b306 : and ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000d2c9d : and cl, 0xf ; je 0xd2cc5 ; ret
0x000000000011c395 : and cl, byte ptr [eip + 0x415c4100] ; pop rbp ; ret
0x000000000011fe2a : and cl, byte ptr [rax + 0x39] ; ret
0x000000000009f39d : and cl, byte ptr [rax - 0x73] ; clc ; ret
0x00000000000a3d2e : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faa78 : and cl, byte ptr [rdi] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x000000000011c396 : and cl, byte ptr [rip + 0x415c4100] ; pop rbp ; ret
0x0000000000138726 : and cl, ch ; ret 0
0x000000000006483f : and cl, ch ; retf
0x00000000001133b9 : and cl, dh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000e5fdd : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000006460f : and dh, dh ; ret 0x7450
0x0000000000099e17 : and dword ptr [rax + 0x39], ecx ; ret 0x840f
0x0000000000111b65 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000015d451 : and dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000001763ce : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006f8db : and dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000010fa2b : and dword ptr [rax], ecx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000008ad90 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008adec : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000afa4e : and dword ptr [rcx - 0x77], ecx ; ret
0x00000000001224d8 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edx, 8 ; syscall
0x0000000000163f3a : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000091044 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000046ef4 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000008b5a7 : and dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000045e7e : and dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000000baafb : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000002b1ab : and dword ptr [rsp + rax], 0 ; add byte ptr [rax - 0x77], cl ; retf
0x000000000002753f : and eax, 0 ; ret
0x0000000000097f68 : and eax, 0x10 ; ret
0x0000000000116977 : and eax, 0x100f ; ret
0x0000000000111267 : and eax, 0x18 ; test eax, eax ; jne 0x111289 ; syscall
0x000000000004519e : and eax, 0x200 ; ret
0x0000000000027215 : and eax, 0x30 ; call rax
0x0000000000049ba0 : and eax, 0x30 ; call rdx
0x0000000000027524 : and eax, 0x30 ; jmp rax
0x00000000000e01b7 : and eax, 0x30 ; pop r13 ; pop r14 ; jmp rax
0x00000000000bf2be : and eax, 0x3fc00 ; ret
0x00000000000bf3b8 : and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x00000000000bf309 : and eax, 0x3fffc00 ; ret
0x00000000000cbe12 : and eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000130bf7 : and eax, 0x480005df ; cmove eax, edx ; ret
0x00000000001461f7 : and eax, 0x48000a95 ; test eax, eax ; jne 0x146211 ; ret
0x0000000000116d5e : and eax, 0x48c88944 ; add esp, 0x38 ; ret
0x000000000008a5ea : and eax, 0x6e0f4866 ; ret
0x00000000000372e6 : and eax, 0x7f ; ret
0x00000000000bf3a1 : and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x00000000000bf357 : and eax, 0x7ff80000 ; ret
0x0000000000045568 : and eax, 0x80 ; ret
0x000000000008fde6 : and eax, 0x804 ; ret
0x000000000002e179 : and eax, 0x833fe283 ; retf 0x4180
0x0000000000142d80 : and eax, 0x8948ffee ; ret
0x00000000001090ad : and eax, 0xaab2e ; call 0x25357
0x000000000009798b : and eax, 0xc ; cmp eax, 4 ; je 0x9799c ; ret
0x0000000000097b1b : and eax, 0xc ; pop rbx ; ret
0x000000000009e8f4 : and eax, 0xe8f63120 ; ret
0x0000000000105d44 : and eax, 0xf ; ret
0x00000000000a2814 : and eax, 0xf480001 ; ret 0xfc3
0x00000000000a3a94 : and eax, 0xf48000d ; ret 0xfc3
0x000000000012208a : and eax, 0xfffff000 ; or eax, edx ; ret
0x0000000000132eca : and eax, 0xffffff ; ret
0x000000000011976f : and eax, 0xfffffff0 ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1197b2
0x000000000011994f : and eax, 0xfffffff0 ; mov r14, r8 ; mov rdx, r8 ; jmp 0x119990
0x000000000013e7a7 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009f3b1 : and eax, 1 ; cmovne rax, rdx ; ret
0x0000000000125dc0 : and eax, 1 ; mov eax, r8d ; ret
0x0000000000037276 : and eax, 1 ; ret
0x00000000000370f6 : and eax, 2 ; movzx eax, ax ; ret
0x0000000000058ccc : and eax, 2 ; sub eax, 1 ; ret
0x0000000000122ac3 : and eax, 3 ; ret
0x0000000000037196 : and eax, 4 ; movzx eax, ax ; ret
0x00000000000370b6 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000045898 : and eax, 8 ; ret
0x0000000000097fa1 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000176225 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cabb0 : and eax, dword ptr [rax] ; add dh, dh ; ret
0x0000000000116b79 : and eax, dword ptr [rcx + rcx*4 - 0x40] ; movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x0000000000122ce5 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000017bb99 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000044ed3 : and eax, ecx ; ret
0x0000000000122103 : and eax, edi ; or rax, rsi ; ret
0x0000000000045253 : and eax, edx ; ret
0x0000000000045294 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000374c1 : and eax, esi ; ret
0x00000000000888b6 : and ebp, 0x8000 ; jne 0x88887 ; jmp 0x8885a
0x000000000008ad91 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008aded : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097926 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x97939 ; ret
0x0000000000088984 : and ebx, dword ptr [rbx + 0x4c] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000144cdd : and ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000004b076 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x0000000000192045 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000191778 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000119a37 : and ecx, 0xfffffff0 ; mov rdx, r9 ; jmp 0x119a6e
0x000000000002de5d : and ecx, dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000cc7b7 : and ecx, dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000001248e5 : and ecx, dword ptr [rax - 0x77] ; ret 0x2548
0x00000000000a7553 : and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x00000000000d31fc : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000000989b5 : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a0f4 : and ecx, dword ptr [rcx + rcx*4 - 0x40] ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000011a72a : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x000000000011a7ea : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000018d7f7 : and ecx, ebp ; ret
0x00000000000372f6 : and edi, 0xffffff80 ; sete al ; ret
0x00000000001388c1 : and edx, 0xfffffff0 ; lea r8, [rbp - 0x78] ; call 0xe4b89
0x000000000008ddd3 : and edx, 1 ; mov eax, edx ; ret
0x000000000004537b : and edx, eax ; mov qword ptr [rdi], rdx ; ret
0x000000000004530c : and edx, eax ; movq xmm0, rdx ; ret
0x00000000000831d3 : and edx, edi ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x00000000000456e0 : and esi, 0x80000000 ; mov dword ptr [rdi], esi ; ret
0x00000000000d7e23 : and esi, 0x80402000 ; call qword ptr [rax]
0x00000000001431e1 : and esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f17f : and esi, esi ; call 0x11bc84
0x0000000000163f39 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000046ef3 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000888b5 : and r13d, 0x8000 ; jne 0x88888 ; jmp 0x8885b
0x000000000011994e : and r8, 0xfffffffffffffff0 ; mov r14, r8 ; mov rdx, r8 ; jmp 0x119991
0x0000000000125dbf : and r8d, 1 ; mov eax, r8d ; ret
0x0000000000119a36 : and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x119a6f
0x00000000000a2813 : and rax, 0xf480001 ; ret 0xfc3
0x0000000000122102 : and rax, rdi ; or rax, rsi ; ret
0x000000000004537a : and rdx, rax ; mov qword ptr [rdi], rdx ; ret
0x000000000004530b : and rdx, rax ; movq xmm0, rdx ; ret
0x00000000001431e0 : and rsi, r13 ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f17e : and rsi, r14 ; call 0x11bc85
0x000000000004566f : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000004566c : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000314a7 : bnd jb 0x314bd ; mov r9, rsi ; mov r10, rcx ; jmp 0x31472
0x00000000000ab9b9 : bnd je 0xab9b3 ; ret
0x00000000000c1168 : bnd je 0xc1176 ; test edx, edx ; jne 0xc1167 ; ret
0x00000000000af3fa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000af310 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000187c61 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000af320 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000af330 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000af300 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000000af25f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b4897 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000a3869 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00000000000b4d9a : bsf eax, edx ; ret
0x00000000000d2907 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000000b4ef2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000b49b0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000000b4de2 : bsf rax, rdx ; ret
0x00000000000d2906 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000188050 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x00000000000af916 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x00000000000af746 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000187f3f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000af7f0 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000af800 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000af810 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x00000000000b4d4b : bsr eax, esi ; add rax, rdi ; ret
0x00000000000b4c59 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000000b4b55 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000000b4aba : bsr rax, rax ; add rax, rdi ; ret
0x00000000000b4d4a : bsr rax, rsi ; add rax, rdi ; ret
0x00000000000b4c58 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000000b4b54 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x0000000000153a3d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000132e86 : bswap eax ; ret
0x0000000000055d7d : call 0x102812
0x000000000010d7b6 : call 0x10a282
0x000000000010d7b5 : call 0x10a283
0x000000000010e84c : call 0x10b332
0x000000000007a5a6 : call 0x1107a5a8
0x000000000007a744 : call 0x1107a746
0x000000000007a7c2 : call 0x1107a7c4
0x000000000007ab85 : call 0x1107ab87
0x000000000007b116 : call 0x1107b118
0x00000000001157f5 : call 0x111aa2
0x0000000000115a22 : call 0x111ce2
0x000000000013918f : call 0x115be2
0x000000000009a307 : call 0x1165b2
0x0000000000039e83 : call 0x1168d2
0x000000000015f126 : call 0x11bb82
0x000000000009f181 : call 0x11bc82
0x00000000000624aa : call 0x1205aec1
0x000000000012dee1 : call 0x12a1d2
0x000000000012dd97 : call 0x12a882
0x0000000000046af7 : call 0x132dd2
0x0000000000108206 : call 0x144c82
0x0000000000150527 : call 0x14cff2
0x000000000014a1c5 : call 0x156432
0x000000000005b587 : call 0x198002
0x0000000000119055 : call 0x25332
0x00000000000290dd : call 0x25352
0x00000000000e88f7 : call 0x25353
0x00000000000f88ff : call 0x253a2
0x00000000000d9143 : call 0x253b2
0x00000000000889e2 : call 0x25422
0x00000000000889e1 : call 0x25423
0x0000000000049220 : call 0x25492
0x000000000003923b : call 0x254a2
0x0000000000048a2f : call 0x25502
0x00000000000d9302 : call 0x255a2
0x00000000000393b2 : call 0x255d2
0x0000000000039348 : call 0x25602
0x0000000000122173 : call 0x2e78ec65
0x000000000010a504 : call 0x36fc2
0x000000000014afae : call 0x37a52
0x000000000003feed : call 0x3c122
0x000000000011faff : call 0x4bde2
0x000000000005d105 : call 0x593a2
0x000000000007a692 : call 0x76902
0x000000000007e006 : call 0x8a242
0x0000000000132aee : call 0x8ed42
0x000000000013ae7c : call 0x978c2
0x000000000009be82 : call 0x980d2
0x000000000009c1ef : call 0x98462
0x000000000009ba7b : call 0x984c2
0x000000000009cf87 : call 0x99262
0x000000000009fa67 : call 0x9bc72
0x000000000009f7b0 : call 0x9c222
0x0000000000165830 : call 0xa1b22
0x0000000000145f11 : call 0xa21a2
0x00000000000c10a2 : call 0xcd2b2
0x0000000000114664 : call 0xe10b2
0x00000000001388c8 : call 0xe4b82
0x0000000000049cbd : call 0xe5fb2
0x00000000000ef14a : call 0xebb52
0x00000000000f4833 : call 0xf0ab2
0x00000000000f7713 : call 0xf3952
0x00000000000fb401 : call 0xf7e12
0x00000000000fc374 : call 0xf8da2
0x000000000010febb : call 0xffffffff8b59c141
0x00000000000ba934 : call 0xffffffffc30ba944
0x0000000000125b70 : call 0xffffffffc3143bfc
0x0000000000125c00 : call 0xffffffffc3143c8c
0x0000000000125ca0 : call 0xffffffffc3143d2c
0x0000000000125d30 : call 0xffffffffc3143dbc
0x0000000000125e60 : call 0xffffffffc3143eec
0x0000000000125f00 : call 0xffffffffc3143f8c
0x0000000000125fa0 : call 0xffffffffc314402c
0x0000000000126040 : call 0xffffffffc31440cc
0x00000000001260d0 : call 0xffffffffc314415c
0x000000000012616b : call 0xffffffffc31441f7
0x0000000000126200 : call 0xffffffffc314428c
0x00000000001263fc : call 0xffffffffc3144488
0x0000000000126552 : call 0xffffffffc31445de
0x00000000001265e2 : call 0xffffffffc314466e
0x0000000000126672 : call 0xffffffffc31446fe
0x00000000001266f2 : call 0xffffffffc314477e
0x0000000000126812 : call 0xffffffffc314489e
0x00000000001268a2 : call 0xffffffffc314492e
0x0000000000126932 : call 0xffffffffc31449be
0x00000000001269c2 : call 0xffffffffc3144a4e
0x0000000000126a52 : call 0xffffffffc3144ade
0x0000000000126adf : call 0xffffffffc3144b6b
0x0000000000126b62 : call 0xffffffffc3144bee
0x0000000000126d3c : call 0xffffffffc3144dc8
0x0000000000122ac2 : call 0xffffffffc3160b4e
0x00000000000573e2 : call 0xffffffffc33ebbec
0x000000000009c522 : call 0xffffffffc3430d2c
0x00000000001194a0 : call 0xffffffffc34adcaa
0x00000000000aa903 : call 0xffffffffc38eb810
0x00000000000eb612 : call 0xffffffffc391fe1c
0x00000000000ed363 : call 0xffffffffc3921b6d
0x000000000019bc71 : call 0xffffffffc39d0579
0x000000000017e955 : call 0xffffffffc39df86e
0x000000000017f9d5 : call 0xffffffffc39e08ee
0x00000000000b9c97 : call 0xffffffffc3dc25e8
0x00000000000b9ba7 : call 0xffffffffc40424f8
0x00000000000bcce7 : call 0xffffffffc4045638
0x000000000019a256 : call 0xffffffffcb3aeb8f
0x00000000000ba50d : call 0xffffffffcb91b456
0x00000000000889af : call 0xffffffffcbf39d43
0x000000000009b5f3 : call qword ptr [r9]
0x0000000000131f0e : call qword ptr [rax - 0x3c0776b8]
0x00000000000453c6 : call qword ptr [rax - 0x3d]
0x0000000000067c8f : call qword ptr [rax]
0x0000000000049cb0 : call qword ptr [rbx]
0x000000000003dbc9 : call qword ptr [rcx]
0x000000000007e86a : call qword ptr [rdx]
0x00000000000b2eb2 : call qword ptr [rsi]
0x00000000001480b7 : call r10
0x00000000000285c7 : call r12
0x0000000000029627 : call r14
0x000000000002b476 : call r15
0x000000000004a2db : call r8
0x000000000012f60f : call r9
0x00000000000271e1 : call rax
0x00000000000282cd : call rbx
0x00000000000a165e : call rcx
0x000000000002b477 : call rdi
0x0000000000033fa3 : call rdx
0x0000000000028d1e : call rsi
0x00000000000285c8 : call rsp
0x0000000000168067 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004dbb4 : cdq ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000091a0b : cdq ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000083c05 : cdq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x00000000000cd1a5 : cdq ; add eax, 0x74db8500 ; sbb al, 0x39 ; ret
0x00000000000a29c3 : cdq ; and byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000004a648 : cdq ; idiv rsi ; ret
0x00000000000daaff : cdq ; jo 0xdab15 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000164253 : cdq ; or byte ptr [rax], al ; ret
0x000000000012b9f9 : cdq ; out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000015fa43 : cdq ; ret
0x000000000013dbd3 : cdq ; ret 0xa
0x00000000001090b3 : cdq ; ret 0xfff1
0x00000000000d9303 : cdq ; ret 0xfff4
0x00000000000bfa03 : cdq ; sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000bfca3 : cdq ; sub byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000018f81f : cdq ; vzeroupper ; ret
0x000000000004a5f6 : cdq ; xor eax, edx ; sub eax, edx ; ret
0x000000000004a608 : cdq ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000072e6c : clc ; add al, byte ptr [rcx - 9] ; ret
0x000000000013db3c : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001102dd : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000008c60c : clc ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000088cde : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000d2aa2 : clc ; add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x000000000005fe23 : clc ; add cl, ch ; ret 0xfff6
0x00000000000a77a5 : clc ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4105
0x0000000000159001 : clc ; add dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000043975 : clc ; add dword ptr [rbx - 0x7cb60030], eax ; ret
0x00000000000a8a63 : clc ; add dword ptr [rcx - 0x7c2de63f], ecx ; ret 0x8305
0x000000000011074f : clc ; add dword ptr [rdi + 0x2d], esi ; mov eax, 4 ; syscall
0x000000000011080f : clc ; add dword ptr [rdi + 0x2d], esi ; mov eax, 6 ; syscall
0x00000000001107ae : clc ; add dword ptr [rdi + 0x2e], esi ; mov eax, 5 ; syscall
0x000000000011ae31 : clc ; add dword ptr [rdi + 1], edi ; ret
0x00000000000a53d3 : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107231 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x000000000013e7a9 : clc ; add eax, 0x10 ; ret
0x000000000012ed6d : clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000014b9be : clc ; add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000018811f : clc ; add rax, r8 ; vzeroupper ; ret
0x00000000000af0e7 : clc ; add rax, rcx ; ret
0x0000000000187a74 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000000af91b : clc ; add rax, rsi ; ret
0x00000000000372e5 : clc ; and eax, 0x7f ; ret
0x0000000000132ec9 : clc ; and eax, 0xffffff ; ret
0x0000000000132e85 : clc ; bswap eax ; ret
0x00000000000e1c27 : clc ; call rax
0x000000000004a5f5 : clc ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000058d21 : clc ; clc ; jne 0x58d17 ; mov rax, rdx ; ret
0x000000000013e789 : clc ; cmc ; je 0x13e785 ; pop rbx ; ret
0x0000000000191fe9 : clc ; cmp rcx, rax ; jne 0x19201b ; xor eax, eax ; ret
0x0000000000191fe8 : clc ; cmp rcx, rax ; jne 0x19201c ; xor eax, eax ; ret
0x0000000000192e29 : clc ; cmp rcx, rax ; jne 0x192e5b ; xor eax, eax ; ret
0x0000000000192e28 : clc ; cmp rcx, rax ; jne 0x192e5c ; xor eax, eax ; ret
0x000000000004a646 : clc ; cqo ; idiv rsi ; ret
0x000000000004a606 : clc ; cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000130c60 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009fd44 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000130e5e : clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000078d9a : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ce90b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000561c5 : clc ; dec dword ptr [rdi] ; ret 0x8b48
0x0000000000163fb3 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x0000000000077f42 : clc ; idiv bh ; call qword ptr [rax]
0x000000000007905b : clc ; idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000007ea7f : clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x000000000007f1f9 : clc ; idiv bh ; inc dword ptr [rcx] ; retf
0x000000000007d8ac : clc ; idiv bh ; inc esi ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000018e85d : clc ; ja 0x18e82b ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000013eccd : clc ; jae 0x13eceb ; mov eax, 0xffffffff ; ret
0x000000000005e47f : clc ; jae 0x5e437 ; mov rax, r10 ; pop rbx ; ret
0x0000000000110b48 : clc ; je 0x110b57 ; mov eax, r9d ; ret
0x00000000001229a9 : clc ; je 0x1229eb ; mov eax, r8d ; ret
0x00000000000676e8 : clc ; jmp rax
0x0000000000195f9a : clc ; jne 0x1960a7 ; ret
0x0000000000195f99 : clc ; jne 0x1960a8 ; ret
0x0000000000058d22 : clc ; jne 0x58d16 ; mov rax, rdx ; ret
0x00000000000a3aec : clc ; lcall [rbp + 0x31] ; rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x00000000000a1a82 : clc ; lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000a2557 : clc ; lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000018e7ef : clc ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000e650b : clc ; leave ; ret
0x00000000000d8b0a : clc ; mov al, 0 ; add byte ptr [rax], al ; call 0x255a7
0x000000000018cf0f : clc ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x000000000011a075 : clc ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000016adc7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016b737 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001706b7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b937 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170627 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016bb37 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170597 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ade3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bf1f2 : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000018f111 : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000192ff0 : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000bedbe : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000006c39b : clc ; mov r12, r14 ; jmp 0x68dde
0x000000000005e78b : clc ; or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x0000000000132ee3 : clc ; or eax, esi ; bswap eax ; ret
0x0000000000122104 : clc ; or rax, rsi ; ret
0x0000000000140d7b : clc ; pcmpeqd mm3, qword ptr [rip + 0x3948c289] ; retf 0x1677
0x0000000000098832 : clc ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000000ac08e : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010aaf4 : clc ; push qword ptr [rax + rbx*8 - 0x77] ; ret 0xc085
0x0000000000065fff : clc ; push qword ptr [rbp + rcx + 0x44] ; mov eax, eax ; ret
0x00000000001568a9 : clc ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000e7de6 : clc ; push rbx ; pop rax ; jne 0xe7df7 ; ret
0x000000000004a631 : clc ; ret
0x0000000000045422 : clc ; retf
0x0000000000132e95 : clc ; rol ax, 8 ; ret
0x00000000001887b4 : clc ; rol ch, 1 ; jns 0x188795 ; retf 0xead3
0x0000000000188904 : clc ; rol ch, 1 ; jns 0x1888e5 ; retf 0xead3
0x0000000000188a54 : clc ; rol ch, 1 ; jns 0x188a35 ; retf 0xead3
0x0000000000188ba4 : clc ; rol ch, 1 ; jns 0x188b85 ; retf 0xead3
0x0000000000188cf4 : clc ; rol ch, 1 ; jns 0x188cd5 ; retf 0xead3
0x0000000000188e44 : clc ; rol ch, 1 ; jns 0x188e25 ; retf 0xead3
0x0000000000188f94 : clc ; rol ch, 1 ; jns 0x188f75 ; retf 0xead3
0x00000000001890e4 : clc ; rol ch, 1 ; jns 0x1890c5 ; retf 0xead3
0x0000000000189234 : clc ; rol ch, 1 ; jns 0x189215 ; retf 0xead3
0x0000000000189384 : clc ; rol ch, 1 ; jns 0x189365 ; retf 0xead3
0x00000000001894d4 : clc ; rol ch, 1 ; jns 0x1894b5 ; retf 0xead3
0x0000000000189624 : clc ; rol ch, 1 ; jns 0x189605 ; retf 0xead3
0x0000000000189774 : clc ; rol ch, 1 ; jns 0x189755 ; retf 0xead3
0x00000000001898c4 : clc ; rol ch, 1 ; jns 0x1898a5 ; retf 0xead3
0x0000000000189a14 : clc ; rol ch, 1 ; jns 0x1899f5 ; retf 0xead3
0x0000000000189e94 : clc ; rol ch, 1 ; jns 0x189e75 ; retf 0xead3
0x000000000018a014 : clc ; rol ch, 1 ; jns 0x189ff5 ; retf 0xead3
0x000000000018a194 : clc ; rol ch, 1 ; jns 0x18a175 ; retf 0xead3
0x000000000018a314 : clc ; rol ch, 1 ; jns 0x18a2f5 ; retf 0xead3
0x000000000018a494 : clc ; rol ch, 1 ; jns 0x18a475 ; retf 0xead3
0x000000000018a614 : clc ; rol ch, 1 ; jns 0x18a5f5 ; retf 0xead3
0x000000000018a794 : clc ; rol ch, 1 ; jns 0x18a775 ; retf 0xead3
0x000000000018a914 : clc ; rol ch, 1 ; jns 0x18a8f5 ; retf 0xead3
0x000000000018aa94 : clc ; rol ch, 1 ; jns 0x18aa75 ; retf 0xead3
0x000000000018ac14 : clc ; rol ch, 1 ; jns 0x18abf5 ; retf 0xead3
0x000000000018ad94 : clc ; rol ch, 1 ; jns 0x18ad75 ; retf 0xead3
0x000000000018af14 : clc ; rol ch, 1 ; jns 0x18aef5 ; retf 0xead3
0x000000000018b094 : clc ; rol ch, 1 ; jns 0x18b075 ; retf 0xead3
0x000000000018b214 : clc ; rol ch, 1 ; jns 0x18b1f5 ; retf 0xead3
0x000000000018b394 : clc ; rol ch, 1 ; jns 0x18b375 ; retf 0xead3
0x0000000000132d4f : clc ; sar rax, 6 ; ret
0x00000000000ecdd5 : clc ; sbb byte ptr [rcx], bh ; ret
0x00000000000d31f9 : clc ; sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x00000000000594aa : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000132f59 : clc ; shr eax, 0x18 ; ret
0x00000000000d2a1f : clc ; shr rax, 2 ; ret
0x00000000000332fb : clc ; std ; je 0x3331d ; pop rbx ; ret
0x000000000018bca6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000033f9d : clc ; test rdx, rdx ; je 0x33fab ; call rdx
0x0000000000187beb : clc ; vzeroupper ; ret
0x00000000000e7eba : cld ; add byte ptr [rax], al ; ret
0x00000000000bf2c0 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000196092 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1960a8 ; xor eax, eax ; ret
0x0000000000196091 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1960a9 ; xor eax, eax ; ret
0x0000000000114667 : cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000057391 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000d5cde : cld ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000005e23e : cld ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000100f6a : cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000450db : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000bf3ba : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bf30b : cld ; inc dword ptr [rbx] ; ret
0x00000000000ab6d2 : cld ; jmp 0xa790e
0x0000000000192c36 : cld ; jne 0x192e6f ; xor eax, eax ; ret
0x0000000000196095 : cld ; jne 0x1960a5 ; xor eax, eax ; ret
0x0000000000196094 : cld ; jne 0x1960a6 ; xor eax, eax ; ret
0x0000000000195fb5 : cld ; jne 0x1960a7 ; ret
0x0000000000195fb4 : cld ; jne 0x1960a8 ; ret
0x000000000018e7cd : cld ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x000000000018ceed : cld ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x00000000000ab6cd : cld ; mov dword ptr [r9 + rdi - 4], r10d ; jmp 0xa7913
0x000000000016b552 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b755 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b955 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016bb55 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bf1fa : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000018f11c : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000193002 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000bedcc : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000bedc6 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015a759 : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x000000000016b186 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170846 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b366 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001707c6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b546 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170746 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016afa6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001708c6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a4ce6 : cld ; or byte ptr [rax + 0xf], cl ; ret
0x00000000000d601b : cld ; push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000bed0f : cld ; ret
0x000000000007471a : cld ; retf 0xffff
0x0000000000055ca4 : cld ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000018da9d : cld ; vzeroupper ; ret
0x00000000000a8128 : cld ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000d41ab : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000000bffb2 : cli ; add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x00000000001103b7 : cli ; add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000e7c81 : cli ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x00000000000d7add : cli ; add ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000dc223 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000dc3cb : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000008c44c : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000ed282 : cli ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000140dc6 : cli ; add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000000bf1e5 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xbf1f5 ; mov byte ptr [rdi], cl ; ret
0x000000000015ab13 : cli ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000054402 : cli ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2040
0x00000000001936ef : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000193020 : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000004dbfa : cli ; add eax, 0x63485374 ; retf
0x00000000000cc645 : cli ; add eax, 0x89490000 ; ret
0x00000000000cdaa0 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000cdaf4 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000110633 : cli ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000142bf4 : cli ; and byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000011b305 : cli ; and ch, byte ptr [rcx] ; retf 0xc8d
0x0000000000091043 : cli ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000011a7e9 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000000e802b : cli ; cmc ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000000e00f3 : cli ; cmp esi, 1 ; je 0xe0108 ; xor eax, eax ; ret
0x0000000000094ff3 : cli ; cmp qword ptr [rdi + 0x38], 0 ; je 0x95008 ; ret
0x0000000000131b03 : cli ; cmp rdx, rcx ; ja 0x131b3c ; xor eax, eax ; syscall
0x00000000000a7108 : cli ; dec dword ptr [rax + 0xf] ; shr ebx, 1 ; retf 0x3948
0x000000000007e743 : cli ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000007f865 : cli ; dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x000000000007cdcc : cli ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000831d4 : cli ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x0000000000081b31 : cli ; emms ; jrcxz 0x81b24 ; ret
0x00000000000bf2df : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x0000000000084f92 : cli ; inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018ec1d : cli ; jg 0x18ec30 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018f106 : cli ; jg 0x18f116 ; vzeroupper ; ret
0x0000000000192fdb : cli ; jg 0x192fee ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001936ba : cli ; jg 0x1936cc ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001939c5 : cli ; jg 0x1939d8 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000193fdc : cli ; jg 0x193fec ; vzeroupper ; ret
0x0000000000043cc3 : cli ; jmp r10
0x0000000000043b95 : cli ; jmp rdx
0x00000000000272d3 : cli ; lea rax, [rip + 0x18ec2c] ; ret
0x00000000000272e3 : cli ; lea rax, [rip + 0x190a9f] ; ret
0x00000000000abc14 : cli ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abcdc : cli ; mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000abb4f : cli ; mov byte ptr [rdi + 2], dl ; ret
0x000000000010f9f3 : cli ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000016b958 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000117673 : cli ; mov eax, 0x10 ; syscall
0x0000000000110f23 : cli ; mov eax, 0x102 ; syscall
0x0000000000112f93 : cli ; mov eax, 0x107 ; syscall
0x0000000000112ed3 : cli ; mov eax, 0x10a ; syscall
0x0000000000123013 : cli ; mov eax, 0x110 ; syscall
0x0000000000123073 : cli ; mov eax, 0x11b ; syscall
0x00000000001230d3 : cli ; mov eax, 0x11f ; syscall
0x0000000000122513 : cli ; mov eax, 0x122 ; syscall
0x0000000000122ce3 : cli ; mov eax, 0x123 ; syscall
0x0000000000111b93 : cli ; mov eax, 0x124 ; syscall
0x0000000000111bf3 : cli ; mov eax, 0x125 ; syscall
0x0000000000122e03 : cli ; mov eax, 0x126 ; syscall
0x0000000000123103 : cli ; mov eax, 0x12c ; syscall
0x0000000000122c23 : cli ; mov eax, 0x131 ; syscall
0x00000000001185b3 : cli ; mov eax, 0x132 ; syscall
0x0000000000123163 : cli ; mov eax, 0x134 ; syscall
0x00000000001231f3 : cli ; mov eax, 0x13f ; syscall
0x0000000000123223 : cli ; mov eax, 0x14a ; syscall
0x0000000000123253 : cli ; mov eax, 0x14b ; syscall
0x00000000001113d3 : cli ; mov eax, 0x15 ; syscall
0x0000000000111bc3 : cli ; mov eax, 0x16 ; syscall
0x0000000000098023 : cli ; mov eax, 0x18 ; syscall
0x000000000011bcb3 : cli ; mov eax, 0x1b ; syscall
0x000000000011bc83 : cli ; mov eax, 0x1c ; syscall
0x0000000000124303 : cli ; mov eax, 0x1e ; syscall
0x00000000001243a3 : cli ; mov eax, 0x1f ; syscall
0x0000000000111b33 : cli ; mov eax, 0x20 ; syscall
0x0000000000111b63 : cli ; mov eax, 0x21 ; syscall
0x00000000001168a3 : cli ; mov eax, 0x22 ; syscall
0x0000000000116723 : cli ; mov eax, 0x23 ; syscall
0x00000000000d7263 : cli ; mov eax, 0x24 ; syscall
0x00000000000e5be3 : cli ; mov eax, 0x25 ; syscall
0x00000000000d7293 : cli ; mov eax, 0x26 ; syscall
0x00000000000e6f63 : cli ; mov eax, 0x27 ; syscall
0x00000000001239c3 : cli ; mov eax, 0x29 ; syscall
0x0000000000123993 : cli ; mov eax, 0x30 ; syscall
0x0000000000123383 : cli ; mov eax, 0x31 ; syscall
0x00000000001234e3 : cli ; mov eax, 0x32 ; syscall
0x0000000000123483 : cli ; mov eax, 0x33 ; syscall
0x0000000000123453 : cli ; mov eax, 0x34 ; syscall
0x00000000000e6013 : cli ; mov eax, 0x3b ; syscall
0x00000000000466e3 : cli ; mov eax, 0x3e ; syscall
0x00000000000e5903 : cli ; mov eax, 0x3f ; syscall
0x00000000001241f3 : cli ; mov eax, 0x40 ; syscall
0x00000000001241c3 : cli ; mov eax, 0x41 ; syscall
0x0000000000124333 : cli ; mov eax, 0x43 ; syscall
0x0000000000124163 : cli ; mov eax, 0x44 ; syscall
0x0000000000124193 : cli ; mov eax, 0x47 ; syscall
0x0000000000111813 : cli ; mov eax, 0x49 ; syscall
0x0000000000119ee3 : cli ; mov eax, 0x4c ; syscall
0x0000000000119f13 : cli ; mov eax, 0x4d ; syscall
0x0000000000111cb3 : cli ; mov eax, 0x50 ; syscall
0x0000000000111ce3 : cli ; mov eax, 0x51 ; syscall
0x0000000000065f73 : cli ; mov eax, 0x52 ; syscall
0x0000000000110ef3 : cli ; mov eax, 0x53 ; syscall
0x0000000000112fc3 : cli ; mov eax, 0x54 ; syscall
0x0000000000112e43 : cli ; mov eax, 0x56 ; syscall
0x0000000000112f63 : cli ; mov eax, 0x57 ; syscall
0x0000000000112ea3 : cli ; mov eax, 0x58 ; syscall
0x0000000000112f03 : cli ; mov eax, 0x59 ; syscall
0x0000000000110e03 : cli ; mov eax, 0x5a ; syscall
0x0000000000110e33 : cli ; mov eax, 0x5b ; syscall
0x00000000001125f3 : cli ; mov eax, 0x5c ; syscall
0x0000000000112623 : cli ; mov eax, 0x5d ; syscall
0x0000000000112653 : cli ; mov eax, 0x5e ; syscall
0x0000000000110df3 : cli ; mov eax, 0x5f ; syscall
0x00000000000d4053 : cli ; mov eax, 0x60 ; syscall
0x00000000001170b3 : cli ; mov eax, 0x62 ; syscall
0x0000000000122fe3 : cli ; mov eax, 0x63 ; syscall
0x00000000000e5933 : cli ; mov eax, 0x64 ; syscall
0x00000000000e6f83 : cli ; mov eax, 0x66 ; syscall
0x0000000000122e63 : cli ; mov eax, 0x67 ; syscall
0x00000000000e6fa3 : cli ; mov eax, 0x68 ; syscall
0x00000000000e6f93 : cli ; mov eax, 0x6b ; syscall
0x00000000000e6fb3 : cli ; mov eax, 0x6c ; syscall
0x00000000000e7243 : cli ; mov eax, 0x6d ; syscall
0x00000000000e6f73 : cli ; mov eax, 0x6e ; syscall
0x00000000000e7273 : cli ; mov eax, 0x6f ; syscall
0x00000000000e72d3 : cli ; mov eax, 0x70 ; syscall
0x00000000000e6fc3 : cli ; mov eax, 0x73 ; syscall
0x00000000000e7303 : cli ; mov eax, 0x76 ; syscall
0x00000000000e7333 : cli ; mov eax, 0x78 ; syscall
0x00000000000e7213 : cli ; mov eax, 0x79 ; syscall
0x00000000001223b3 : cli ; mov eax, 0x7a ; syscall
0x00000000001223e3 : cli ; mov eax, 0x7b ; syscall
0x00000000000e72a3 : cli ; mov eax, 0x7c ; syscall
0x0000000000122bc3 : cli ; mov eax, 0x7d ; syscall
0x0000000000122bf3 : cli ; mov eax, 0x7e ; syscall
0x0000000000046cd3 : cli ; mov eax, 0x83 ; syscall
0x0000000000110673 : cli ; mov eax, 0x84 ; syscall
0x0000000000123043 : cli ; mov eax, 0x86 ; syscall
0x00000000001225d3 : cli ; mov eax, 0x87 ; syscall
0x0000000000110ca3 : cli ; mov eax, 0x89 ; syscall
0x0000000000110cd3 : cli ; mov eax, 0x8a ; syscall
0x0000000000117473 : cli ; mov eax, 0x8c ; syscall
0x00000000001174b3 : cli ; mov eax, 0x8d ; syscall
0x0000000000105903 : cli ; mov eax, 0x8e ; syscall
0x0000000000105933 : cli ; mov eax, 0x8f ; syscall
0x0000000000105963 : cli ; mov eax, 0x90 ; syscall
0x0000000000105993 : cli ; mov eax, 0x91 ; syscall
0x00000000001059f3 : cli ; mov eax, 0x92 ; syscall
0x0000000000105a23 : cli ; mov eax, 0x93 ; syscall
0x0000000000105a53 : cli ; mov eax, 0x94 ; syscall
0x000000000011bd13 : cli ; mov eax, 0x95 ; syscall
0x000000000011bd43 : cli ; mov eax, 0x96 ; syscall
0x000000000011bd73 : cli ; mov eax, 0x97 ; syscall
0x000000000011bda3 : cli ; mov eax, 0x98 ; syscall
0x00000000001188f3 : cli ; mov eax, 0x99 ; syscall
0x0000000000122b23 : cli ; mov eax, 0x9a ; syscall
0x0000000000122f23 : cli ; mov eax, 0x9b ; syscall
0x0000000000122af3 : cli ; mov eax, 0x9e ; syscall
0x0000000000122b93 : cli ; mov eax, 0x9f ; syscall
0x000000000011bbb3 : cli ; mov eax, 0xa ; syscall
0x0000000000118433 : cli ; mov eax, 0xa1 ; syscall
0x00000000001184f3 : cli ; mov eax, 0xa2 ; syscall
0x0000000000118403 : cli ; mov eax, 0xa3 ; syscall
0x00000000000d4133 : cli ; mov eax, 0xa4 ; syscall
0x0000000000122353 : cli ; mov eax, 0xa6 ; syscall
0x0000000000118923 : cli ; mov eax, 0xa7 ; syscall
0x0000000000118953 : cli ; mov eax, 0xa8 ; syscall
0x00000000001180b3 : cli ; mov eax, 0xaa ; syscall
0x0000000000118203 : cli ; mov eax, 0xab ; syscall
0x0000000000122213 : cli ; mov eax, 0xac ; syscall
0x00000000001221e3 : cli ; mov eax, 0xad ; syscall
0x0000000000122c53 : cli ; mov eax, 0xae ; syscall
0x000000000011bb83 : cli ; mov eax, 0xb ; syscall
0x0000000000122c83 : cli ; mov eax, 0xb0 ; syscall
0x0000000000122d43 : cli ; mov eax, 0xb1 ; syscall
0x0000000000122ef3 : cli ; mov eax, 0xb4 ; syscall
0x0000000000123283 : cli ; mov eax, 0xba ; syscall
0x0000000000122383 : cli ; mov eax, 0xbb ; syscall
0x0000000000117553 : cli ; mov eax, 0xc ; syscall
0x0000000000120083 : cli ; mov eax, 0xc2 ; syscall
0x00000000001200e3 : cli ; mov eax, 0xc3 ; syscall
0x000000000011ffc3 : cli ; mov eax, 0xc4 ; syscall
0x0000000000120173 : cli ; mov eax, 0xc5 ; syscall
0x0000000000120113 : cli ; mov eax, 0xc6 ; syscall
0x000000000011fff3 : cli ; mov eax, 0xc7 ; syscall
0x00000000000d3f93 : cli ; mov eax, 0xc9 ; syscall
0x0000000000105af3 : cli ; mov eax, 0xcb ; syscall
0x0000000000122cb3 : cli ; mov eax, 0xd5 ; syscall
0x0000000000122b53 : cli ; mov eax, 0xe4 ; syscall
0x00000000001300d3 : cli ; mov eax, 0xe5 ; syscall
0x0000000000123293 : cli ; mov eax, 0xea ; syscall
0x0000000000119cc3 : cli ; mov eax, 0xeb ; syscall
0x0000000000122dd3 : cli ; mov eax, 0xfd ; syscall
0x0000000000122da3 : cli ; mov eax, 0xfe ; syscall
0x0000000000122e33 : cli ; mov eax, 0xff ; syscall
0x000000000004acf3 : cli ; mov eax, 0xffffffff ; ret
0x00000000001494c3 : cli ; mov eax, 1 ; ret
0x0000000000116943 : cli ; mov eax, 1 ; syscall
0x000000000014bcf3 : cli ; mov eax, 2 ; ret
0x00000000001165b3 : cli ; mov eax, 3 ; syscall
0x00000000001113a3 : cli ; mov eax, 8 ; syscall
0x00000000000966d3 : cli ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000015ab23 : cli ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010f9e3 : cli ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000116973 : cli ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008fe13 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008fde3 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000e10a3 : cli ; mov eax, dword ptr [rdi] ; ret
0x0000000000091053 : cli ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000091063 : cli ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000473b3 : cli ; mov eax, dword ptr [rip + 0x1a2dee] ; ret
0x00000000000473a3 : cli ; mov eax, dword ptr [rip + 0x1a2e02] ; ret
0x00000000000372e3 : cli ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000132e83 : cli ; mov eax, edi ; bswap eax ; ret
0x000000000004a5f3 : cli ; mov eax, edi ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x0000000000132e93 : cli ; mov eax, edi ; rol ax, 8 ; ret
0x000000000013d963 : cli ; mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x0000000000112683 : cli ; mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000065fa3 : cli ; mov r10, rcx ; mov eax, 0x108 ; syscall
0x0000000000112e73 : cli ; mov r10, rcx ; mov eax, 0x109 ; syscall
0x0000000000112f33 : cli ; mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000001230a3 : cli ; mov r10, rcx ; mov eax, 0x11e ; syscall
0x0000000000122b63 : cli ; mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000001225a3 : cli ; mov r10, rcx ; mov eax, 0x12e ; syscall
0x0000000000123133 : cli ; mov r10, rcx ; mov eax, 0x12f ; syscall
0x0000000000123193 : cli ; mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000001231c3 : cli ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x0000000000122ec3 : cli ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000116233 : cli ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000001239f3 : cli ; mov r10, rcx ; mov eax, 0x35 ; syscall
0x0000000000123963 : cli ; mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000001234b3 : cli ; mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000e5af3 : cli ; mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000122f53 : cli ; mov r10, rcx ; mov eax, 0x9d ; syscall
0x0000000000122e93 : cli ; mov r10, rcx ; mov eax, 0xa5 ; syscall
0x0000000000122d73 : cli ; mov r10, rcx ; mov eax, 0xaf ; syscall
0x0000000000122f83 : cli ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x0000000000122fb3 : cli ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x00000000001201a3 : cli ; mov r10, rcx ; mov eax, 0xbc ; syscall
0x0000000000120143 : cli ; mov r10, rcx ; mov eax, 0xbd ; syscall
0x0000000000120023 : cli ; mov r10, rcx ; mov eax, 0xbe ; syscall
0x0000000000120053 : cli ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000001200b3 : cli ; mov r10, rcx ; mov eax, 0xc0 ; syscall
0x000000000011ff93 : cli ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000011bce3 : cli ; mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000001242c3 : cli ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x0000000000122d13 : cli ; mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000110b23 : cli ; mov r10d, ecx ; mov eax, 0x14c ; syscall
0x0000000000115d73 : cli ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x0000000000095a63 : cli ; mov rax, -1 ; ret
0x000000000015a6a3 : cli ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1053 : cli ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000969c3 : cli ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000969a3 : cli ; mov rax, qword ptr [rip + 0x154bf5] ; ret
0x0000000000032af3 : cli ; mov rax, qword ptr [rip + 0x1b9b4d] ; ret
0x0000000000029133 : cli ; mov rax, qword ptr [rip + 0x1c6d7d] ; ret
0x0000000000029123 : cli ; mov rax, qword ptr [rip + 0x1c6d9d] ; ret
0x000000000004a643 : cli ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000969d3 : cli ; mov rax, rdi ; ret
0x00000000000a0b5c : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000137cdf : cli ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x0000000000045e03 : cli ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000012f83c : cli ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000010f9b3 : cli ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000afa69 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000003629a : cli ; or al, 0x74 ; cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000182646 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002f2c6 : cli ; or byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000013a753 : cli ; or byte ptr [rdi], cl ; xor dword ptr [rbp + 1], 0 ; add dh, dh ; ret 0xf04
0x0000000000145d5f : cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000145222 : cli ; or cl, byte ptr [rax + 0xf] ; retf 0xe8c0
0x00000000000a2483 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x00000000000a2432 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x0000000000142bfa : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd308
0x0000000000126c92 : cli ; out 0xef, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000045893 : cli ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000005e53e : cli ; pop rbx ; cmovb r10, rdi ; mov rax, r10 ; ret
0x00000000000e5f73 : cli ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000000fb45b : cli ; push qword ptr [rdi + rax + 1] ; retf 0x4801
0x000000000014a1c3 : cli ; push rbp ; call 0x156434
0x00000000000e8047 : cli ; push rsp ; push rbx ; setne al ; ret
0x00000000000bf106 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000026f63 : cli ; ret
0x000000000006db72 : cli ; ret 0x17
0x000000000003f622 : cli ; retf 0xffff
0x000000000009f182 : cli ; retf 7
0x0000000000097303 : cli ; setae al ; ret
0x00000000000659ad : cli ; sti ; dec dword ptr [rax - 0x77] ; ret 0x12eb
0x00000000000d7356 : cli ; sub byte ptr [rdi + rcx*4 + 2], bl ; jbe 0xd7367 ; ret
0x00000000000bf0f3 : cli ; test rdx, rdx ; jne 0xbf106 ; mov rax, rdi ; ret
0x00000000000b4f03 : cli ; test rsi, rsi ; jne 0xb4f16 ; xor rax, rax ; ret
0x00000000000d2863 : cli ; test rsi, rsi ; jne 0xd2876 ; xor rax, rax ; ret
0x00000000001356aa : cli ; xchg eax, esi ; or eax, dword ptr [rax] ; syscall
0x00000000000372f3 : cli ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000097f83 : cli ; xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x00000000000959e3 : cli ; xor eax, eax ; ret
0x00000000001168d3 : cli ; xor eax, eax ; syscall
0x000000000008fdf3 : cli ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008fe03 : cli ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000093a13 : cli ; xor eax, eax ; test rdx, rdx ; jne 0x93a28 ; ret
0x0000000000124363 : cli ; xor r10d, r10d ; mov eax, 0x1d ; syscall
0x0000000000116903 : cli ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x000000000019728f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000186bb8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000934e7 : cmc ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000014c2c8 : cmc ; dec dword ptr [rax - 0x77] ; and al, 0x10 ; mov rdx, rax ; jmp 0x14c26b
0x0000000000142945 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d2a98 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000012a61f : cmc ; dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xeb ; retf 0xf66
0x000000000013e78a : cmc ; je 0x13e784 ; pop rbx ; ret
0x00000000000e802c : cmc ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000001707ca : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b1de : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000049cba : cmc ; mov edi, ebp ; call 0xe5fb5
0x00000000001955a3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000135e99 : cmc ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d89a7 : cmc ; retf
0x000000000006e270 : cmc ; retf 0xffff
0x00000000000da1f0 : cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000000da1eb : cmc ; sub byte ptr [rdi + rcx*4 - 0x3e], bl ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000001955a7 : cmc ; sub eax, edx ; ret
0x000000000013020c : cmova eax, edx ; add rsp, 0x28 ; ret
0x0000000000115d8c : cmova eax, edx ; ret
0x00000000000e1071 : cmova edx, eax ; mov eax, 0xd9 ; syscall
0x00000000000e1070 : cmova rdx, rax ; mov eax, 0xd9 ; syscall
0x000000000009700d : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000001587fb : cmovae eax, edx ; jmp 0x158795
0x00000000001587fa : cmovae eax, r10d ; jmp 0x158796
0x000000000009700c : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000123f60 : cmovb eax, edx ; ret
0x000000000005e541 : cmovb edx, edi ; mov rax, r10 ; ret
0x000000000005e540 : cmovb r10, rdi ; mov rax, r10 ; ret
0x0000000000123f5f : cmovb rax, rdx ; ret
0x00000000000a250d : cmovbe eax, edx ; ret
0x0000000000105a99 : cmovbe esi, eax ; syscall
0x0000000000105a98 : cmovbe rsi, r8 ; syscall
0x00000000000d2aa8 : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001189de : cmove eax, ebx ; pop rbx ; ret
0x00000000000bf2e5 : cmove eax, ecx ; ret
0x00000000000a386c : cmove eax, edx ; add eax, 1 ; ret
0x00000000000d4025 : cmove eax, edx ; add rsp, 0x28 ; ret
0x000000000009fd47 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000004bfa8 : cmove eax, edx ; jmp 0x4bfc2
0x0000000000036c6f : cmove eax, edx ; ret
0x00000000001189dd : cmove rax, rbx ; pop rbx ; ret
0x00000000000bf2e4 : cmove rax, rcx ; ret
0x00000000000a388d : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000d4024 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000009fd46 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000004bfa7 : cmove rax, rdx ; jmp 0x4bfc3
0x0000000000036c6e : cmove rax, rdx ; ret
0x0000000000089e8b : cmovg eax, ecx ; test rdx, rdx ; jne 0x89e88 ; ret
0x0000000000094853 : cmovg eax, ecx ; test rdx, rdx ; jne 0x94850 ; ret
0x00000000000d2366 : cmovg ecx, eax ; mov eax, r9d ; ret
0x00000000000d2365 : cmovg r9d, eax ; mov eax, r9d ; ret
0x0000000000089e8a : cmovg rax, rcx ; test rdx, rdx ; jne 0x89e89 ; ret
0x0000000000094852 : cmovg rax, rcx ; test rdx, rdx ; jne 0x94851 ; ret
0x0000000000131e40 : cmovl ecx, dword ptr [rcx + 0x415d5be0] ; pop rsp ; ret
0x000000000014db74 : cmovl ecx, dword ptr [rcx] ; ror byte ptr [rcx - 0x77], cl ; ret 0xc149
0x00000000000d2344 : cmovl ecx, eax ; mov eax, r9d ; ret
0x00000000000d2343 : cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000000a5a4b : cmovne eax, eax ; mov rax, r8 ; ret
0x000000000008d7b5 : cmovne eax, ecx ; ret
0x00000000000a51a7 : cmovne eax, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a5dee : cmovne eax, edi ; ret
0x000000000015f78a : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000009f3b5 : cmovne eax, edx ; ret
0x000000000018b624 : cmovne eax, edx ; vzeroupper ; ret
0x000000000012c633 : cmovne eax, esi ; ret
0x000000000008fef0 : cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a5a4a : cmovne r8, rax ; mov rax, r8 ; ret
0x000000000008d7b4 : cmovne rax, rcx ; ret
0x00000000000a5ded : cmovne rax, rdi ; ret
0x000000000015f789 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000009f3b4 : cmovne rax, rdx ; ret
0x000000000018b623 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000012ac61 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000002be96 : cmovns eax, dword ptr [rbx + 0x394804c7] ; ret 0x2074
0x00000000000e8b0d : cmovns eax, dword ptr [rbx + 0x394810c1] ; ret
0x00000000000a8712 : cmovns eax, dword ptr [rbx + 0x394c01c1] ; retf 0xed75
0x000000000007bc8e : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret
0x000000000008085f : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret 0x8d48
0x0000000000119a35 : cmovns eax, dword ptr [rbx - 0x76b30f1f] ; retf 0x2aeb
0x000000000015c7b6 : cmovns eax, dword ptr [rcx] ; retf 0x8948
0x000000000011748c : cmovns eax, edx ; ret
0x000000000012ac60 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000af0ac : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000000823f0 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret
0x000000000014a7a8 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x00000000000ead7c : cmovs eax, dword ptr [rbx - 0x76b70f1f] ; retf
0x0000000000107441 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; ret
0x00000000000af5e0 : cmovs eax, dword ptr [rbx - 0x7cb7ef39] ; ret 0x4810
0x000000000002a880 : cmovs eax, edx ; ret
0x00000000000feed3 : cmovs ebp, dword ptr [rcx] ; ret 0x8348
0x00000000000589e7 : cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x0000000000099b35 : cmovs ecx, dword ptr [rbx - 0x173ef7be] ; add al, 0x39 ; ret
0x0000000000095b88 : cmovs edi, dword ptr [rcx] ; int1 ; ja 0x95b89 ; lea eax, [rdx + rdi] ; ret
0x00000000000bf28e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000bf320 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000187278 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x0000000000186fff : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000186fc8 : cmp ah, byte ptr [rbx - 0x2e] ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x00000000000e88c4 : cmp ah, cl ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25359
0x000000000002723b : cmp al, 0 ; add byte ptr [rax], al ; nop ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000122327 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014396c : cmp al, 0x23 ; jne 0x1438f5 ; jmp 0x14394a
0x0000000000094bb7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000011da83 : cmp al, 0x24 ; call rbx
0x000000000010f406 : cmp al, 0x24 ; mov eax, 0x11 ; syscall
0x00000000001227b5 : cmp al, 0x24 ; mov eax, 0x116 ; syscall
0x000000000010f4b6 : cmp al, 0x24 ; mov eax, 0x12 ; syscall
0x0000000000130248 : cmp al, 0x24 ; mov eax, 0xe6 ; syscall
0x0000000000162d30 : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x0000000000048a86 : cmp al, 0x24 ; mov rdx, r14 ; mov rax, qword ptr [rsp] ; call rax
0x000000000015f11f : cmp al, 0x24 ; mov rsi, qword ptr [r12 + 0x10] ; call 0x11bb89
0x0000000000047950 : cmp al, 0x24 ; mov rsi, r15 ; call r14
0x0000000000146ab2 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039da0 : cmp al, 0x2b ; sbb eax, dword ptr [rax] ; syscall
0x00000000000eb0b3 : cmp al, 0x3f ; jne 0xeb0f2 ; mov eax, 1 ; ret
0x00000000000eb0d4 : cmp al, 0x3f ; jne 0xeb112 ; mov eax, 1 ; ret
0x0000000000119e58 : cmp al, 0x48 ; add esp, 0x38 ; ret
0x00000000001561fe : cmp al, 0x4c ; lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000149b24 : cmp al, 0x5d ; or al, byte ptr [rax] ; syscall
0x000000000013b449 : cmp al, 0xb ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000065c6e : cmp al, 0xc ; ret 0x4489
0x000000000011a870 : cmp al, 0xd ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000115836 : cmp al, 0xe8 ; ret 0xffff
0x0000000000197b86 : cmp al, 0xf ; mov gs, word ptr [rdi - 0x72000006] ; ret
0x00000000000d3ad5 : cmp al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000000e88f6 : cmp al, 0xf3 ; call 0x25354
0x00000000001300a1 : cmp al, 0xfd ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000065fed : cmp al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000192c13 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e8897 : cmp al, 4 ; call 0x25334
0x00000000000babe0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000e5f76 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018e6b2 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000195a66 : cmp al, byte ptr [rsi - 1] ; jne 0x195a8c ; xor eax, eax ; ret
0x000000000010d2c0 : cmp al, ch ; retf 0xf181
0x00000000000af306 : cmp al, dh ; ret
0x00000000000af305 : cmp al, r14b ; ret
0x0000000000044f2a : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000012c5ba : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000186fcb : cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000012c631 : cmp bh, cl ; cmovne eax, esi ; ret
0x0000000000095077 : cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000012da30 : cmp byte ptr [r11 + r12*2 + 0x2d], r9b ; ret
0x00000000000d2236 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000095830 : cmp byte ptr [r13 + 0x41], r11b ; pop rsp ; ret
0x000000000012de8a : cmp byte ptr [r13 - 0x77], r9b ; outsd dx, dword ptr [rsi] ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000012dde0 : cmp byte ptr [r13 - 0x77], r9b ; sbb byte ptr [eax - 0x77], cl ; ret 0x2b49
0x0000000000156ea9 : cmp byte ptr [r14 + 0xf], r12b ; insb byte ptr [rdi], dx ; ret 0x8948
0x000000000012a907 : cmp byte ptr [r8 + 0x39], r9b ; ret
0x000000000009228c : cmp byte ptr [r8 + 0xf], r9b ; ret 0x110f
0x000000000008be8d : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000012b1ee : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000012da8b : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x000000000012b4a1 : cmp byte ptr [r8 - 0x7d], cl ; ret
0x0000000000101e38 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000818f9 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000015bda1 : cmp byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000144820 : cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000010f6a7 : cmp byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000009228d : cmp byte ptr [rax + 0xf], cl ; ret 0x110f
0x000000000011fdec : cmp byte ptr [rax + 1], 0 ; jne 0x11fe38 ; mov rdx, rax ; jmp 0x11fe11
0x0000000000057414 : cmp byte ptr [rax + 1], 0 ; jne 0x57417 ; pop rbx ; ret
0x00000000000af347 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000002e7fd : cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000008be8e : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000591e2 : cmp byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000008cf44 : cmp byte ptr [rax - 0x75], cl ; xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000957fd : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000012b1ef : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000012da8c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000149582 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014ba74 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000012b4a2 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000441a3 : cmp byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000004416d : cmp byte ptr [rax - 0x7d], cl ; retf 0x480d
0x00000000000441ee : cmp byte ptr [rax - 0x7d], cl ; retf 0xe90c
0x00000000000441d9 : cmp byte ptr [rax - 0x7d], cl ; retf 0xeb0a
0x00000000000573e9 : cmp byte ptr [rax - 1], 0x2f ; jne 0x573e7 ; pop rbx ; ret
0x0000000000119f76 : cmp byte ptr [rax - 1], bh ; ret
0x000000000017fba8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000af336 : cmp byte ptr [rax], ah ; ret
0x00000000000abd84 : cmp byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cfc39 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff1
0x00000000000e5dd9 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000015bcc9 : cmp byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xf883
0x0000000000094ff7 : cmp byte ptr [rax], al ; je 0x95004 ; ret
0x0000000000101e39 : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4674 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000af816 : cmp byte ptr [rax], dh ; ret
0x00000000000af326 : cmp byte ptr [rax], dl ; ret
0x00000000000af325 : cmp byte ptr [rax], r10b ; ret
0x00000000000af335 : cmp byte ptr [rax], r12b ; ret
0x00000000000af815 : cmp byte ptr [rax], r14b ; ret
0x00000000000b4673 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d223a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000d2239 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000002df06 : cmp byte ptr [rbp + 0x39], cl ; ret 0x820f
0x0000000000095831 : cmp byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000014dbbd : cmp byte ptr [rbp + 9], cl ; ror dword ptr [rcx - 0x77], 1 ; retf 0xb43
0x000000000011ff82 : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000012de8b : cmp byte ptr [rbp - 0x77], cl ; outsd dx, dword ptr [rsi] ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000012dde1 : cmp byte ptr [rbp - 0x77], cl ; sbb byte ptr [eax - 0x77], cl ; ret 0x2b49
0x000000000012da31 : cmp byte ptr [rbx + 0x2d], cl ; ret
0x0000000000029218 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000095078 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000054f6d : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000010aebd : cmp byte ptr [rbx + 0xf6610e3], al ; insb byte ptr [rdi], dx ; ret 0x8948
0x00000000000d2237 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000150523 : cmp byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x14cff6
0x0000000000089476 : cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x000000000008e028 : cmp byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101d70 : cmp byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000094fd1 : cmp byte ptr [rcx - 0x3b7cb7fd], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f0aff : cmp byte ptr [rcx - 0x6bf0f7b0], cl ; ret 0x8040
0x000000000005318e : cmp byte ptr [rcx - 0x77], al ; ret 0x4489
0x000000000013ce35 : cmp byte ptr [rcx - 0xa], al ; ret
0x00000000001243da : cmp byte ptr [rcx], 0 ; je 0x1243e5 ; ret
0x00000000000c0448 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000017fba9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000bc034 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x000000000012aaf0 : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000099a2e : cmp byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000004a66c : cmp byte ptr [rdi], 0 ; jne 0x4a67e ; pop rbx ; ret
0x00000000000f364e : cmp byte ptr [rdi], cl ; mov dh, 0x14 ; cmp ch, cl ; ret
0x00000000001914bd : cmp byte ptr [rdi], dl ; ret
0x0000000000191fd0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191fb9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191fa2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000190a5e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f364d : cmp byte ptr [rdi], r9b ; mov dh, 0x14 ; cmp ch, cl ; ret
0x000000000011ac6d : cmp byte ptr [rip + 0x74d28500], cl ; or al, 0xf7 ; ret 0xfc07
0x000000000003590d : cmp byte ptr [rsi + 0x17], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001294f4 : cmp byte ptr [rsi + 0xc], dl ; add al, ch ; ret
0x0000000000156eaa : cmp byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8948
0x0000000000119296 : cmp byte ptr [rsi], 0 ; lea rdx, [rsi + 1] ; jne 0x119279 ; ret
0x0000000000187002 : cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000f3652 : cmp ch, cl ; ret
0x00000000000677b1 : cmp cl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f73d : cmp cl, byte ptr [rax + 0x63] ; ret 0xc283
0x000000000014191b : cmp cl, byte ptr [rax - 0x77] ; ret
0x00000000001418dc : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000083deb : cmp cl, byte ptr [rcx - 0x77] ; ror byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000169982 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000169ad2 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000169c22 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000169d72 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000169ec2 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000016a012 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000016a162 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000016a2b2 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000016a402 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000016a552 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000016a6a2 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000016a7f2 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000016a942 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000016aa92 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000016abe2 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000016ebda : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000016ed5a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000016eeda : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000016f05a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000016f1da : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000016f35a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000016f4da : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000016f65a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000016f7da : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000016f95a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000016fada : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000016fc5a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000016fdda : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000016ff5a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000001700da : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000005756c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000012c5f7 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000018b621 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000f3abc : cmp dh, byte ptr [rcx] ; test byte ptr [rax + 1], 0xc2 ; jmp 0xf3ad6
0x0000000000193fbe : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000012c668 : cmp dh, cl ; cmovne eax, edx ; ret
0x0000000000126352 : cmp dh, cl ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fb2cc : cmp dh, dh ; ret
0x00000000000b5385 : cmp dh, dh ; ret 0x7501
0x00000000000faa7c : cmp dh, dh ; ret 0xf08
0x000000000012c5b9 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000012c630 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000bf1e4 : cmp dl, 1 ; ja 0xbf207 ; jb 0xbf1f6 ; mov byte ptr [rdi], cl ; ret
0x000000000019301f : cmp dl, 1 ; jb 0x193031 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001936ee : cmp dl, 1 ; jb 0x1936fc ; mov byte ptr [rdi], cl ; ret
0x00000000000a24d0 : cmp dl, 3 ; je 0xa24e8 ; movsx eax, dl ; ret
0x000000000009f41d : cmp dl, al ; jne 0x9f410 ; sub rax, 0x10 ; ret
0x000000000009f41c : cmp dl, r8b ; jne 0x9f411 ; sub rax, 0x10 ; ret
0x00000000000bfe7b : cmp dword ptr [r9], edx ; jne 0xbfe1e ; test edx, edx ; jne 0xbfe69 ; ret
0x000000000008a50c : cmp dword ptr [rax + 0x30], 0 ; je 0x8a51e ; ret
0x000000000012ffda : cmp dword ptr [rax + 8], edi ; jne 0x12ffd9 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000168ec7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182507 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003629d : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000000000481ad : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000001243db : cmp dword ptr [rax], eax ; je 0x1243e4 ; ret
0x000000000015696d : cmp dword ptr [rax], ebx ; je 0x156988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004ac4f : cmp dword ptr [rbp + 0x39], ecx ; retf 0xbb75
0x000000000009d0fe : cmp dword ptr [rbx + 0x150a4a2d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000097d16 : cmp dword ptr [rbx + 0x1557c22d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000088690 : cmp dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011f23f : cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000001702f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000a5203 : cmp dword ptr [rbx], 0 ; je 0xa5221 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131aec : cmp dword ptr [rbx], ecx ; jne 0x131abd ; jmp 0x131aad
0x0000000000131aeb : cmp dword ptr [rcx], 0xb ; jne 0x131abe ; jmp 0x131aae
0x00000000000bfe7c : cmp dword ptr [rcx], edx ; jne 0xbfe1d ; test edx, edx ; jne 0xbfe68 ; ret
0x0000000000094ff5 : cmp dword ptr [rdi + 0x38], 0 ; je 0x95006 ; ret
0x00000000000a20cf : cmp dword ptr [rdi + 8], esi ; jb 0xa20e8 ; mov qword ptr [rdi], rsi ; ret
0x00000000000ccdbf : cmp dword ptr [rdi + rcx], edx ; xchg eax, ebx ; ret 0x3948
0x000000000013005c : cmp dword ptr [rdi], 0 ; je 0x130075 ; ret
0x000000000008d7b2 : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000026aaf : cmp dword ptr [rdx + 0xd8], eax ; jne 0x26a83 ; ret
0x00000000000a13a5 : cmp dword ptr [rip + 0x14c83c], 0 ; je 0xa13b9 ; ret
0x000000000011c901 : cmp dword ptr [rsi], 0 ; mov rbx, rsi ; je 0x11c919 ; pop rbx ; ret
0x0000000000131aea : cmp dword ptr fs:[rcx], 0xb ; jne 0x131abf ; jmp 0x131aaf
0x0000000000105cbe : cmp dx, 2 ; je 0x105cce ; ret
0x0000000000115fbd : cmp eax, -0x5f ; je 0x115fcf ; neg eax ; ret
0x000000000011620d : cmp eax, -0x5f ; je 0x11621f ; neg eax ; ret
0x000000000013e788 : cmp eax, -0xb ; je 0x13e786 ; pop rbx ; ret
0x0000000000065ffe : cmp eax, -1 ; je 0x66018 ; mov eax, r8d ; ret
0x0000000000163fb2 : cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000332fa : cmp eax, -3 ; je 0x3331e ; pop rbx ; ret
0x0000000000058d20 : cmp eax, -8 ; jne 0x58d18 ; mov rax, rdx ; ret
0x0000000000160076 : cmp eax, 0x1000903 ; add rsp, 8 ; ret
0x00000000000e4b69 : cmp eax, 0x109632 ; syscall
0x00000000000e4a29 : cmp eax, 0x109772 ; syscall
0x00000000000e4971 : cmp eax, 0x10982a ; syscall
0x00000000000e4895 : cmp eax, 0x1098fe ; syscall
0x00000000000e46c5 : cmp eax, 0x109a8e ; syscall
0x00000000000e4501 : cmp eax, 0x109c0a ; syscall
0x00000000000e4147 : cmp eax, 0x109f6c ; syscall
0x00000000000e2c39 : cmp eax, 0x10b3f2 ; syscall
0x00000000000e2af9 : cmp eax, 0x10b532 ; syscall
0x00000000000e2a41 : cmp eax, 0x10b5ea ; syscall
0x00000000000e2675 : cmp eax, 0x10b9ae ; syscall
0x00000000000e24a5 : cmp eax, 0x10bb3e ; syscall
0x00000000000e22e1 : cmp eax, 0x10bcba ; syscall
0x00000000000e19f9 : cmp eax, 0x10c54a ; syscall
0x00000000000d5c45 : cmp eax, 0x118216 ; syscall
0x00000000000d5a11 : cmp eax, 0x11844a ; syscall
0x000000000009c1ea : cmp eax, 0x11b41c ; call 0x98467
0x000000000009c209 : cmp eax, 0x11f49a ; call 0x98467
0x000000000009ba76 : cmp eax, 0x11fbbd ; call 0x984c7
0x00000000000cd805 : cmp eax, 0x1226b6 ; syscall
0x000000000009fa62 : cmp eax, 0x14b119 ; call 0x9bc77
0x000000000009f9c5 : cmp eax, 0x14b1b6 ; syscall
0x00000000000a1351 : cmp eax, 0x14c88a ; syscall
0x00000000000a1171 : cmp eax, 0x14ca6a ; syscall
0x00000000000a0f85 : cmp eax, 0x14cc56 ; syscall
0x00000000000a0f15 : cmp eax, 0x14ccc6 ; syscall
0x00000000000a0ce5 : cmp eax, 0x14cef6 ; syscall
0x000000000009cc45 : cmp eax, 0x14df36 ; syscall
0x000000000009cbe5 : cmp eax, 0x14df96 ; syscall
0x000000000009c825 : cmp eax, 0x14e356 ; syscall
0x000000000009c5c5 : cmp eax, 0x14e5b6 ; syscall
0x000000000009f37c : cmp eax, 0x14e7be ; add dword ptr [rax - 0x77], ecx ; ret 0x4974
0x000000000009bf7d : cmp eax, 0x14ebfe ; syscall
0x000000000009bf45 : cmp eax, 0x14ec36 ; syscall
0x000000000009dbf5 : cmp eax, 0x14ff66 ; syscall
0x000000000009d159 : cmp eax, 0x1509f2 ; syscall
0x00000000000991f6 : cmp eax, 0x154955 ; syscall
0x00000000000991c5 : cmp eax, 0x154996 ; syscall
0x0000000000098f45 : cmp eax, 0x154c16 ; syscall
0x0000000000098a21 : cmp eax, 0x15513a ; syscall
0x0000000000097f46 : cmp eax, 0x155595 ; syscall
0x0000000000097d71 : cmp eax, 0x15576a ; syscall
0x0000000000097bd5 : cmp eax, 0x155906 ; syscall
0x0000000000096a97 : cmp eax, 0x156a04 ; syscall
0x0000000000096557 : cmp eax, 0x156f44 ; syscall
0x00000000000961b3 : cmp eax, 0x1572e8 ; syscall
0x0000000000095e47 : cmp eax, 0x157654 ; syscall
0x00000000000947c3 : cmp eax, 0x158cd8 ; syscall
0x0000000000094503 : cmp eax, 0x158f98 ; syscall
0x000000000009418f : cmp eax, 0x15930c ; syscall
0x00000000000873d4 : cmp eax, 0x166087 ; syscall
0x0000000000086fd7 : cmp eax, 0x166484 ; syscall
0x0000000000086f2c : cmp eax, 0x16652f ; syscall
0x00000000000850c5 : cmp eax, 0x16adf6 ; syscall
0x0000000000064189 : cmp eax, 0x1892a2 ; syscall
0x0000000000063f05 : cmp eax, 0x189522 ; syscall
0x0000000000061d31 : cmp eax, 0x18b6ee ; syscall
0x0000000000061bf1 : cmp eax, 0x18b82e ; syscall
0x0000000000057e55 : cmp eax, 0x1955b6 ; syscall
0x0000000000057c75 : cmp eax, 0x195796 ; syscall
0x0000000000057745 : cmp eax, 0x195cc6 ; syscall
0x0000000000055d78 : cmp eax, 0x1975e3 ; call 0x102817
0x00000000000554d1 : cmp eax, 0x197d0a ; syscall
0x000000000005537d : cmp eax, 0x197e5e ; syscall
0x0000000000055348 : cmp eax, 0x197e93 ; syscall
0x000000000004abb1 : cmp eax, 0x1a260a ; syscall
0x000000000004aaf1 : cmp eax, 0x1a26ca ; syscall
0x000000000004aa29 : cmp eax, 0x1a2792 ; syscall
0x000000000004a951 : cmp eax, 0x1a286a ; syscall
0x0000000000049a49 : cmp eax, 0x1a2f1a ; syscall
0x0000000000049984 : cmp eax, 0x1a2fdf ; syscall
0x00000000000497e2 : cmp eax, 0x1a3181 ; syscall
0x0000000000049708 : cmp eax, 0x1a325b ; syscall
0x000000000003b722 : cmp eax, 0x1b11f1 ; syscall
0x0000000000039d9f : cmp eax, 0x1b2b3c ; syscall
0x0000000000038a58 : cmp eax, 0x1b3ddb ; syscall
0x0000000000038a2b : cmp eax, 0x1b3e08 ; syscall
0x00000000000388e6 : cmp eax, 0x1b3f4d ; syscall
0x00000000000296c9 : cmp eax, 0x1c67f2 ; syscall
0x000000000002955d : cmp eax, 0x1c695e ; syscall
0x000000000002943d : cmp eax, 0x1c6a7e ; syscall
0x0000000000025888 : cmp eax, 0x1c70a3 ; syscall
0x0000000000098408 : cmp eax, 0x2000000 ; jbe 0x98417 ; ret
0x0000000000110b47 : cmp eax, 0x26 ; je 0x110b58 ; mov eax, r9d ; ret
0x00000000001229a8 : cmp eax, 0x26 ; je 0x1229ec ; mov eax, r8d ; ret
0x000000000016326e : cmp eax, 0x38c48348 ; ret
0x000000000009c3bc : cmp eax, 0x40c48348 ; pop rbp ; ret
0x000000000019bdb1 : cmp eax, 0x50bb2 ; syscall
0x000000000019bf71 : cmp eax, 0x5156a ; syscall
0x000000000019c2a1 : cmp eax, 0x52f72 ; syscall
0x00000000000e7de5 : cmp eax, 0x58465342 ; jne 0xe7df8 ; ret
0x000000000018ba14 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000161571 : cmp eax, 0x8ee42 ; syscall
0x0000000000160389 : cmp eax, 0x9002a ; syscall
0x00000000001602a9 : cmp eax, 0x9010a ; syscall
0x00000000001600c1 : cmp eax, 0x902f2 ; syscall
0x0000000000160021 : cmp eax, 0x90392 ; syscall
0x000000000015ff81 : cmp eax, 0x90432 ; syscall
0x000000000015fed1 : cmp eax, 0x904e2 ; syscall
0x000000000015f951 : cmp eax, 0x90a62 ; syscall
0x0000000000155721 : cmp eax, 0x9a3ca ; syscall
0x00000000001555c1 : cmp eax, 0x9a52a ; syscall
0x00000000001553b5 : cmp eax, 0x9a736 ; syscall
0x0000000000155215 : cmp eax, 0x9a8d6 ; syscall
0x0000000000155081 : cmp eax, 0x9aa6a ; syscall
0x0000000000154f41 : cmp eax, 0x9abaa ; syscall
0x0000000000154de1 : cmp eax, 0x9ad0a ; syscall
0x0000000000154cd1 : cmp eax, 0x9ae1a ; syscall
0x0000000000151821 : cmp eax, 0x9e2c6 ; syscall
0x000000000014fb09 : cmp eax, 0x9ff1a ; syscall
0x000000000014f9c9 : cmp eax, 0xa005a ; syscall
0x000000000014f911 : cmp eax, 0xa0112 ; syscall
0x000000000014f825 : cmp eax, 0xa01f6 ; syscall
0x000000000014f655 : cmp eax, 0xa0396 ; syscall
0x000000000014f491 : cmp eax, 0xa0532 ; syscall
0x0000000000149b23 : cmp eax, 0xa5d3c ; syscall
0x0000000000147985 : cmp eax, 0xa7e46 ; syscall
0x000000000014762d : cmp eax, 0xa819e ; syscall
0x00000000001472dd : cmp eax, 0xa84ee ; syscall
0x00000000001470b7 : cmp eax, 0xa8714 ; syscall
0x0000000000146f55 : cmp eax, 0xa8876 ; syscall
0x0000000000146d18 : cmp eax, 0xa8ab3 ; syscall
0x00000000001462c1 : cmp eax, 0xa9452 ; syscall
0x000000000014613f : cmp eax, 0xa95d4 ; syscall
0x0000000000146105 : cmp eax, 0xa960e ; syscall
0x0000000000145fed : cmp eax, 0xa9726 ; syscall
0x00000000001457a9 : cmp eax, 0xa9f6a ; syscall
0x00000000001456e1 : cmp eax, 0xaa032 ; syscall
0x00000000001455c5 : cmp eax, 0xaa14e ; syscall
0x00000000001441f2 : cmp eax, 0xab2c9 ; syscall
0x0000000000140ab1 : cmp eax, 0xae762 ; syscall
0x00000000001407b5 : cmp eax, 0xaea5e ; syscall
0x000000000010a4ff : cmp eax, 0xb200c ; call 0x36fc7
0x000000000013c485 : cmp eax, 0xb2d7a ; syscall
0x000000000013bf05 : cmp eax, 0xb32de ; syscall
0x000000000013bd41 : cmp eax, 0xb345a ; syscall
0x000000000013bc79 : cmp eax, 0xb34c2 ; syscall
0x000000000013bb39 : cmp eax, 0xb3602 ; syscall
0x000000000013ba81 : cmp eax, 0xb36ba ; syscall
0x000000000013b391 : cmp eax, 0xb3da2 ; syscall
0x000000000013b071 : cmp eax, 0xb40c2 ; syscall
0x000000000013b00b : cmp eax, 0xb40d0 ; call rax
0x000000000013aeb5 : cmp eax, 0xb427e ; syscall
0x000000000013ae77 : cmp eax, 0xb42bc ; call 0x978c7
0x0000000000137b19 : cmp eax, 0xb74aa ; syscall
0x00000000001379d9 : cmp eax, 0xb75ea ; syscall
0x0000000000137921 : cmp eax, 0xb76a2 ; syscall
0x0000000000137841 : cmp eax, 0xb777a ; syscall
0x0000000000137375 : cmp eax, 0xb7bce ; syscall
0x0000000000136da5 : cmp eax, 0xb813e ; syscall
0x0000000000136885 : cmp eax, 0xb8616 ; syscall
0x00000000001366b9 : cmp eax, 0xb87a2 ; syscall
0x0000000000136579 : cmp eax, 0xb88e2 ; syscall
0x00000000001364c1 : cmp eax, 0xb899a ; syscall
0x00000000001363e1 : cmp eax, 0xb8a72 ; syscall
0x0000000000135fc5 : cmp eax, 0xb8e46 ; syscall
0x00000000001359a9 : cmp eax, 0xb9402 ; syscall
0x0000000000135851 : cmp eax, 0xb955a ; syscall
0x0000000000135791 : cmp eax, 0xb961a ; syscall
0x00000000001356a9 : cmp eax, 0xb96fa ; syscall
0x00000000001355c5 : cmp eax, 0xb97a6 ; syscall
0x0000000000134f65 : cmp eax, 0xb9dc6 ; syscall
0x0000000000134d59 : cmp eax, 0xb9f8a ; syscall
0x0000000000134c01 : cmp eax, 0xba0e2 ; syscall
0x0000000000134b41 : cmp eax, 0xba1a2 ; syscall
0x0000000000134a59 : cmp eax, 0xba282 ; syscall
0x0000000000133e45 : cmp eax, 0xbae1e ; syscall
0x0000000000133bd5 : cmp eax, 0xbb04e ; syscall
0x0000000000133455 : cmp eax, 0xbb76e ; syscall
0x0000000000129719 : cmp eax, 0xc5412 ; syscall
0x00000000001295d9 : cmp eax, 0xc5552 ; syscall
0x0000000000129521 : cmp eax, 0xc560a ; syscall
0x0000000000129147 : cmp eax, 0xc59dc ; syscall
0x0000000000128f45 : cmp eax, 0xc5ba6 ; syscall
0x0000000000128d65 : cmp eax, 0xc5d3e ; syscall
0x0000000000128ba1 : cmp eax, 0xc5eba ; syscall
0x0000000000128ad1 : cmp eax, 0xc5f36 ; syscall
0x0000000000128a07 : cmp eax, 0xc6000 ; syscall
0x0000000000128972 : cmp eax, 0xc6095 ; syscall
0x0000000000127c69 : cmp eax, 0xc6d6a ; syscall
0x0000000000127b29 : cmp eax, 0xc6eaa ; syscall
0x0000000000127a71 : cmp eax, 0xc6f62 ; syscall
0x0000000000127477 : cmp eax, 0xc7554 ; syscall
0x0000000000127275 : cmp eax, 0xc76fe ; syscall
0x0000000000127095 : cmp eax, 0xc7876 ; syscall
0x0000000000126ed1 : cmp eax, 0xc79d2 ; syscall
0x000000000011b91f : cmp eax, 0xcea24 ; ret
0x000000000011b8f1 : cmp eax, 0xd2c5a ; syscall
0x000000000011b7d5 : cmp eax, 0xd2d76 ; syscall
0x000000000011b375 : cmp eax, 0xd31d6 ; syscall
0x000000000011ae4a : cmp eax, 0xd3701 ; syscall
0x0000000000109d2a : cmp eax, 0xe4551 ; syscall
0x000000000010f3cb : cmp eax, 0xfffff000 ; ja 0x10f437 ; ret
0x000000000010f47b : cmp eax, 0xfffff000 ; ja 0x10f4e7 ; ret
0x000000000011075b : cmp eax, 0xfffff000 ; ja 0x11076f ; ret
0x00000000001107ba : cmp eax, 0xfffff000 ; ja 0x1107cf ; ret
0x000000000011081b : cmp eax, 0xfffff000 ; ja 0x11082f ; ret
0x0000000000110ba3 : cmp eax, 0xfffff000 ; ja 0x110bb7 ; ret
0x0000000000110c06 : cmp eax, 0xfffff000 ; ja 0x110c17 ; ret
0x0000000000110c60 : cmp eax, 0xfffff000 ; ja 0x110c77 ; ret
0x0000000000110e99 : cmp eax, 0xfffff000 ; ja 0x110eaf ; ret
0x0000000000111273 : cmp eax, 0xfffff000 ; ja 0x1112d7 ; ret
0x0000000000111318 : cmp eax, 0xfffff000 ; ja 0x111377 ; ret
0x00000000001113ac : cmp eax, 0xfffff000 ; ja 0x1113bf ; ret
0x00000000001113dc : cmp eax, 0xfffff000 ; ja 0x1113ef ; ret
0x0000000000111ab8 : cmp eax, 0xfffff000 ; ja 0x111b07 ; ret
0x0000000000111c38 : cmp eax, 0xfffff000 ; ja 0x111c87 ; ret
0x0000000000115bf8 : cmp eax, 0xfffff000 ; ja 0x115c57 ; ret
0x000000000011627b : cmp eax, 0xfffff000 ; ja 0x1162ff ; ret
0x0000000000116344 : cmp eax, 0xfffff000 ; ja 0x116357 ; ret
0x0000000000116398 : cmp eax, 0xfffff000 ; ja 0x1163a7 ; ret
0x000000000011646b : cmp eax, 0xfffff000 ; ja 0x1164d7 ; ret
0x000000000011651b : cmp eax, 0xfffff000 ; ja 0x116587 ; ret
0x00000000001165bc : cmp eax, 0xfffff000 ; ja 0x1165cf ; ret
0x000000000011672c : cmp eax, 0xfffff000 ; ja 0x11673f ; ret
0x00000000001168ac : cmp eax, 0xfffff000 ; ja 0x1168bf ; ret
0x00000000001168d9 : cmp eax, 0xfffff000 ; ja 0x1168ef ; ret
0x000000000011690f : cmp eax, 0xfffff000 ; ja 0x116927 ; ret
0x000000000011694c : cmp eax, 0xfffff000 ; ja 0x11695f ; ret
0x0000000000116e32 : cmp eax, 0xfffff000 ; ja 0x116e8f ; ret
0x0000000000117045 : cmp eax, 0xfffff000 ; ja 0x117057 ; ret
0x0000000000117086 : cmp eax, 0xfffff000 ; ja 0x117097 ; ret
0x00000000001176b8 : cmp eax, 0xfffff000 ; ja 0x117717 ; ret
0x0000000000117758 : cmp eax, 0xfffff000 ; ja 0x1177b7 ; ret
0x00000000001177fe : cmp eax, 0xfffff000 ; ja 0x11786f ; ret
0x00000000001178be : cmp eax, 0xfffff000 ; ja 0x11792f ; ret
0x000000000011824b : cmp eax, 0xfffff000 ; ja 0x1182c7 ; ret
0x0000000000118478 : cmp eax, 0xfffff000 ; ja 0x1184c7 ; ret
0x0000000000118538 : cmp eax, 0xfffff000 ; ja 0x118587 ; ret
0x00000000001185f8 : cmp eax, 0xfffff000 ; ja 0x118607 ; ret
0x0000000000119ccc : cmp eax, 0xfffff000 ; ja 0x119cdf ; ret
0x0000000000119eb1 : cmp eax, 0xfffff000 ; ja 0x119ec7 ; ret
0x0000000000119eec : cmp eax, 0xfffff000 ; ja 0x119eff ; ret
0x0000000000119f1c : cmp eax, 0xfffff000 ; ja 0x119f2f ; ret
0x000000000011baf7 : cmp eax, 0xfffff000 ; ja 0x11bb69 ; pop rbx ; pop rbp ; ret
0x000000000011bbf8 : cmp eax, 0xfffff000 ; ja 0x11bc57 ; ret
0x000000000011f6d3 : cmp eax, 0xfffff000 ; ja 0x11f6e7 ; ret
0x000000000012238c : cmp eax, 0xfffff000 ; ja 0x12239f ; ret
0x0000000000122431 : cmp eax, 0xfffff000 ; ja 0x1224af ; ret
0x00000000001224e4 : cmp eax, 0xfffff000 ; ja 0x1224f7 ; ret
0x000000000012261b : cmp eax, 0xfffff000 ; ja 0x122687 ; ret
0x00000000001226cb : cmp eax, 0xfffff000 ; ja 0x122737 ; ret
0x000000000012277b : cmp eax, 0xfffff000 ; ja 0x1227e7 ; ret
0x000000000012282b : cmp eax, 0xfffff000 ; ja 0x1228af ; ret
0x00000000001228f8 : cmp eax, 0xfffff000 ; ja 0x122957 ; ret
0x0000000000122a24 : cmp eax, 0xfffff000 ; ja 0x122a37 ; ret
0x00000000001232f8 : cmp eax, 0xfffff000 ; ja 0x123357 ; ret
0x00000000001233c8 : cmp eax, 0xfffff000 ; ja 0x123427 ; ret
0x0000000000123531 : cmp eax, 0xfffff000 ; ja 0x1235a7 ; ret
0x00000000001235eb : cmp eax, 0xfffff000 ; ja 0x123667 ; ret
0x00000000001236a8 : cmp eax, 0xfffff000 ; ja 0x123707 ; ret
0x0000000000123751 : cmp eax, 0xfffff000 ; ja 0x1237c7 ; ret
0x0000000000123808 : cmp eax, 0xfffff000 ; ja 0x123867 ; ret
0x00000000001238ab : cmp eax, 0xfffff000 ; ja 0x12392f ; ret
0x0000000000123d0b : cmp eax, 0xfffff000 ; ja 0x123d77 ; ret
0x0000000000123dbb : cmp eax, 0xfffff000 ; ja 0x123e2f ; ret
0x0000000000123e6b : cmp eax, 0xfffff000 ; ja 0x123ed7 ; ret
0x000000000012400b : cmp eax, 0xfffff000 ; ja 0x124077 ; ret
0x00000000001240bb : cmp eax, 0xfffff000 ; ja 0x124137 ; ret
0x000000000012416c : cmp eax, 0xfffff000 ; ja 0x12417f ; ret
0x000000000012419c : cmp eax, 0xfffff000 ; ja 0x1241af ; ret
0x00000000001241cc : cmp eax, 0xfffff000 ; ja 0x1241df ; ret
0x00000000001241fc : cmp eax, 0xfffff000 ; ja 0x12420f ; ret
0x00000000001242cf : cmp eax, 0xfffff000 ; ja 0x1242e7 ; ret
0x000000000012430c : cmp eax, 0xfffff000 ; ja 0x12431f ; ret
0x000000000012433c : cmp eax, 0xfffff000 ; ja 0x12434f ; ret
0x000000000012436f : cmp eax, 0xfffff000 ; ja 0x124387 ; ret
0x00000000001243ac : cmp eax, 0xfffff000 ; ja 0x1243bf ; ret
0x00000000001300dc : cmp eax, 0xfffff000 ; ja 0x1300ef ; ret
0x0000000000130196 : cmp eax, 0xfffff000 ; ja 0x1301a7 ; ret
0x0000000000131b0e : cmp eax, 0xfffff000 ; ja 0x131b27 ; ret
0x00000000000466b2 : cmp eax, 0xfffff000 ; ja 0x466c7 ; ret
0x0000000000046721 : cmp eax, 0xfffff000 ; ja 0x46737 ; ret
0x000000000004676d : cmp eax, 0xfffff000 ; ja 0x467c7 ; ret
0x000000000004b528 : cmp eax, 0xfffff000 ; ja 0x4b587 ; ret
0x0000000000065f7c : cmp eax, 0xfffff000 ; ja 0x65f8f ; ret
0x0000000000065faf : cmp eax, 0xfffff000 ; ja 0x65fc7 ; ret
0x00000000000d405c : cmp eax, 0xfffff000 ; ja 0xd406f ; ret
0x00000000000e107c : cmp eax, 0xfffff000 ; ja 0xe108f ; ret
0x00000000000e59b5 : cmp eax, 0xfffff000 ; ja 0xe5a0f ; ret
0x00000000000e5a4b : cmp eax, 0xfffff000 ; ja 0xe5aaf ; ret
0x00000000000e5b3e : cmp eax, 0xfffff000 ; ja 0xe5bb7 ; ret
0x00000000000e5c98 : cmp eax, 0xfffff000 ; ja 0xe5cd7 ; ret
0x00000000000e5d18 : cmp eax, 0xfffff000 ; ja 0xe5d67 ; ret
0x000000000010590c : cmp eax, 0xfffff001 ; jae 0x10591b ; ret
0x000000000010593c : cmp eax, 0xfffff001 ; jae 0x10594b ; ret
0x000000000010596c : cmp eax, 0xfffff001 ; jae 0x10597b ; ret
0x000000000010599c : cmp eax, 0xfffff001 ; jae 0x1059ab ; ret
0x00000000001059cc : cmp eax, 0xfffff001 ; jae 0x1059db ; ret
0x00000000001059fc : cmp eax, 0xfffff001 ; jae 0x105a0b ; ret
0x0000000000105a2c : cmp eax, 0xfffff001 ; jae 0x105a3b ; ret
0x0000000000105a5c : cmp eax, 0xfffff001 ; jae 0x105a6b ; ret
0x000000000011067c : cmp eax, 0xfffff001 ; jae 0x11068b ; ret
0x0000000000110cac : cmp eax, 0xfffff001 ; jae 0x110cbb ; ret
0x0000000000110cdc : cmp eax, 0xfffff001 ; jae 0x110ceb ; ret
0x0000000000110e0c : cmp eax, 0xfffff001 ; jae 0x110e1b ; ret
0x0000000000110e3c : cmp eax, 0xfffff001 ; jae 0x110e4b ; ret
0x0000000000110efc : cmp eax, 0xfffff001 ; jae 0x110f0b ; ret
0x0000000000110f2c : cmp eax, 0xfffff001 ; jae 0x110f3b ; ret
0x000000000011181c : cmp eax, 0xfffff001 ; jae 0x11182b ; ret
0x0000000000111b3c : cmp eax, 0xfffff001 ; jae 0x111b4b ; ret
0x0000000000111b6c : cmp eax, 0xfffff001 ; jae 0x111b7b ; ret
0x0000000000111b9c : cmp eax, 0xfffff001 ; jae 0x111bab ; ret
0x0000000000111bcc : cmp eax, 0xfffff001 ; jae 0x111bdb ; ret
0x0000000000111bfc : cmp eax, 0xfffff001 ; jae 0x111c0b ; ret
0x0000000000111cbc : cmp eax, 0xfffff001 ; jae 0x111ccb ; ret
0x0000000000111cec : cmp eax, 0xfffff001 ; jae 0x111cfb ; ret
0x00000000001125fc : cmp eax, 0xfffff001 ; jae 0x11260b ; ret
0x000000000011262c : cmp eax, 0xfffff001 ; jae 0x11263b ; ret
0x000000000011265c : cmp eax, 0xfffff001 ; jae 0x11266b ; ret
0x000000000011268f : cmp eax, 0xfffff001 ; jae 0x11269e ; ret
0x0000000000112e4c : cmp eax, 0xfffff001 ; jae 0x112e5b ; ret
0x0000000000112e7f : cmp eax, 0xfffff001 ; jae 0x112e8e ; ret
0x0000000000112eac : cmp eax, 0xfffff001 ; jae 0x112ebb ; ret
0x0000000000112edc : cmp eax, 0xfffff001 ; jae 0x112eeb ; ret
0x0000000000112f0c : cmp eax, 0xfffff001 ; jae 0x112f1b ; ret
0x0000000000112f3f : cmp eax, 0xfffff001 ; jae 0x112f4e ; ret
0x0000000000112f6c : cmp eax, 0xfffff001 ; jae 0x112f7b ; ret
0x0000000000112f9c : cmp eax, 0xfffff001 ; jae 0x112fab ; ret
0x0000000000112fcc : cmp eax, 0xfffff001 ; jae 0x112fdb ; ret
0x000000000011623f : cmp eax, 0xfffff001 ; jae 0x11624e ; ret
0x00000000001170bc : cmp eax, 0xfffff001 ; jae 0x1170cb ; ret
0x00000000001174bc : cmp eax, 0xfffff001 ; jae 0x1174cb ; ret
0x000000000011767c : cmp eax, 0xfffff001 ; jae 0x11768b ; ret
0x00000000001180bc : cmp eax, 0xfffff001 ; jae 0x1180cb ; ret
0x000000000011820c : cmp eax, 0xfffff001 ; jae 0x11821b ; ret
0x000000000011840c : cmp eax, 0xfffff001 ; jae 0x11841b ; ret
0x000000000011843c : cmp eax, 0xfffff001 ; jae 0x11844b ; ret
0x00000000001184fc : cmp eax, 0xfffff001 ; jae 0x11850b ; ret
0x00000000001185bc : cmp eax, 0xfffff001 ; jae 0x1185cb ; ret
0x00000000001188fc : cmp eax, 0xfffff001 ; jae 0x11890b ; ret
0x000000000011892c : cmp eax, 0xfffff001 ; jae 0x11893b ; ret
0x000000000011895c : cmp eax, 0xfffff001 ; jae 0x11896b ; ret
0x000000000011b94e : cmp eax, 0xfffff001 ; jae 0x11b95d ; ret
0x000000000011bb8c : cmp eax, 0xfffff001 ; jae 0x11bb9b ; ret
0x000000000011bbbc : cmp eax, 0xfffff001 ; jae 0x11bbcb ; ret
0x000000000011bc8c : cmp eax, 0xfffff001 ; jae 0x11bc9b ; ret
0x000000000011bcbc : cmp eax, 0xfffff001 ; jae 0x11bccb ; ret
0x000000000011bcef : cmp eax, 0xfffff001 ; jae 0x11bcfe ; ret
0x000000000011bd1c : cmp eax, 0xfffff001 ; jae 0x11bd2b ; ret
0x000000000011bd4c : cmp eax, 0xfffff001 ; jae 0x11bd5b ; ret
0x000000000011bd7c : cmp eax, 0xfffff001 ; jae 0x11bd8b ; ret
0x000000000011bdac : cmp eax, 0xfffff001 ; jae 0x11bdbb ; ret
0x000000000011ff9f : cmp eax, 0xfffff001 ; jae 0x11ffae ; ret
0x000000000011ffcc : cmp eax, 0xfffff001 ; jae 0x11ffdb ; ret
0x000000000011fffc : cmp eax, 0xfffff001 ; jae 0x12000b ; ret
0x000000000012002f : cmp eax, 0xfffff001 ; jae 0x12003e ; ret
0x000000000012005f : cmp eax, 0xfffff001 ; jae 0x12006e ; ret
0x000000000012008c : cmp eax, 0xfffff001 ; jae 0x12009b ; ret
0x00000000001200bf : cmp eax, 0xfffff001 ; jae 0x1200ce ; ret
0x00000000001200ec : cmp eax, 0xfffff001 ; jae 0x1200fb ; ret
0x000000000012011c : cmp eax, 0xfffff001 ; jae 0x12012b ; ret
0x000000000012014f : cmp eax, 0xfffff001 ; jae 0x12015e ; ret
0x000000000012017c : cmp eax, 0xfffff001 ; jae 0x12018b ; ret
0x00000000001201af : cmp eax, 0xfffff001 ; jae 0x1201be ; ret
0x00000000001221ec : cmp eax, 0xfffff001 ; jae 0x1221fb ; ret
0x000000000012221c : cmp eax, 0xfffff001 ; jae 0x12222b ; ret
0x000000000012235c : cmp eax, 0xfffff001 ; jae 0x12236b ; ret
0x00000000001223bc : cmp eax, 0xfffff001 ; jae 0x1223cb ; ret
0x00000000001223ec : cmp eax, 0xfffff001 ; jae 0x1223fb ; ret
0x000000000012251c : cmp eax, 0xfffff001 ; jae 0x12252b ; ret
0x00000000001225af : cmp eax, 0xfffff001 ; jae 0x1225be ; ret
0x00000000001225dc : cmp eax, 0xfffff001 ; jae 0x1225eb ; ret
0x0000000000122afc : cmp eax, 0xfffff001 ; jae 0x122b0b ; ret
0x0000000000122b2c : cmp eax, 0xfffff001 ; jae 0x122b3b ; ret
0x0000000000122b6f : cmp eax, 0xfffff001 ; jae 0x122b7e ; ret
0x0000000000122b9c : cmp eax, 0xfffff001 ; jae 0x122bab ; ret
0x0000000000122bcc : cmp eax, 0xfffff001 ; jae 0x122bdb ; ret
0x0000000000122bfc : cmp eax, 0xfffff001 ; jae 0x122c0b ; ret
0x0000000000122c2c : cmp eax, 0xfffff001 ; jae 0x122c3b ; ret
0x0000000000122c5c : cmp eax, 0xfffff001 ; jae 0x122c6b ; ret
0x0000000000122c8c : cmp eax, 0xfffff001 ; jae 0x122c9b ; ret
0x0000000000122cbc : cmp eax, 0xfffff001 ; jae 0x122ccb ; ret
0x0000000000122cec : cmp eax, 0xfffff001 ; jae 0x122cfb ; ret
0x0000000000122d1f : cmp eax, 0xfffff001 ; jae 0x122d2e ; ret
0x0000000000122d4c : cmp eax, 0xfffff001 ; jae 0x122d5b ; ret
0x0000000000122d7f : cmp eax, 0xfffff001 ; jae 0x122d8e ; ret
0x0000000000122dac : cmp eax, 0xfffff001 ; jae 0x122dbb ; ret
0x0000000000122ddc : cmp eax, 0xfffff001 ; jae 0x122deb ; ret
0x0000000000122e0c : cmp eax, 0xfffff001 ; jae 0x122e1b ; ret
0x0000000000122e3c : cmp eax, 0xfffff001 ; jae 0x122e4b ; ret
0x0000000000122e6c : cmp eax, 0xfffff001 ; jae 0x122e7b ; ret
0x0000000000122e9f : cmp eax, 0xfffff001 ; jae 0x122eae ; ret
0x0000000000122ecf : cmp eax, 0xfffff001 ; jae 0x122ede ; ret
0x0000000000122efc : cmp eax, 0xfffff001 ; jae 0x122f0b ; ret
0x0000000000122f2c : cmp eax, 0xfffff001 ; jae 0x122f3b ; ret
0x0000000000122f5f : cmp eax, 0xfffff001 ; jae 0x122f6e ; ret
0x0000000000122f8f : cmp eax, 0xfffff001 ; jae 0x122f9e ; ret
0x0000000000122fbf : cmp eax, 0xfffff001 ; jae 0x122fce ; ret
0x0000000000122fec : cmp eax, 0xfffff001 ; jae 0x122ffb ; ret
0x000000000012301c : cmp eax, 0xfffff001 ; jae 0x12302b ; ret
0x000000000012304c : cmp eax, 0xfffff001 ; jae 0x12305b ; ret
0x000000000012307c : cmp eax, 0xfffff001 ; jae 0x12308b ; ret
0x00000000001230af : cmp eax, 0xfffff001 ; jae 0x1230be ; ret
0x00000000001230dc : cmp eax, 0xfffff001 ; jae 0x1230eb ; ret
0x000000000012310c : cmp eax, 0xfffff001 ; jae 0x12311b ; ret
0x000000000012313f : cmp eax, 0xfffff001 ; jae 0x12314e ; ret
0x000000000012316c : cmp eax, 0xfffff001 ; jae 0x12317b ; ret
0x000000000012319f : cmp eax, 0xfffff001 ; jae 0x1231ae ; ret
0x00000000001231cf : cmp eax, 0xfffff001 ; jae 0x1231de ; ret
0x00000000001231fc : cmp eax, 0xfffff001 ; jae 0x12320b ; ret
0x000000000012322c : cmp eax, 0xfffff001 ; jae 0x12323b ; ret
0x000000000012325c : cmp eax, 0xfffff001 ; jae 0x12326b ; ret
0x000000000012329c : cmp eax, 0xfffff001 ; jae 0x1232ab ; ret
0x000000000012338c : cmp eax, 0xfffff001 ; jae 0x12339b ; ret
0x000000000012345c : cmp eax, 0xfffff001 ; jae 0x12346b ; ret
0x000000000012348c : cmp eax, 0xfffff001 ; jae 0x12349b ; ret
0x00000000001234bf : cmp eax, 0xfffff001 ; jae 0x1234ce ; ret
0x00000000001234ec : cmp eax, 0xfffff001 ; jae 0x1234fb ; ret
0x000000000012396f : cmp eax, 0xfffff001 ; jae 0x12397e ; ret
0x000000000012399c : cmp eax, 0xfffff001 ; jae 0x1239ab ; ret
0x00000000001239cc : cmp eax, 0xfffff001 ; jae 0x1239db ; ret
0x00000000001239ff : cmp eax, 0xfffff001 ; jae 0x123a0e ; ret
0x00000000000466ec : cmp eax, 0xfffff001 ; jae 0x466fb ; ret
0x0000000000046cdc : cmp eax, 0xfffff001 ; jae 0x46ceb ; ret
0x0000000000057fe2 : cmp eax, 0xfffff001 ; jae 0x57ff5 ; xor eax, eax ; ret
0x00000000000d413c : cmp eax, 0xfffff001 ; jae 0xd414b ; ret
0x00000000000d726c : cmp eax, 0xfffff001 ; jae 0xd727b ; ret
0x00000000000d729c : cmp eax, 0xfffff001 ; jae 0xd72ab ; ret
0x00000000000e590c : cmp eax, 0xfffff001 ; jae 0xe591b ; ret
0x00000000000e5aff : cmp eax, 0xfffff001 ; jae 0xe5b0e ; ret
0x00000000000e5bec : cmp eax, 0xfffff001 ; jae 0xe5bfb ; ret
0x00000000000e601c : cmp eax, 0xfffff001 ; jae 0xe602b ; ret
0x00000000000e6fcc : cmp eax, 0xfffff001 ; jae 0xe6fdb ; ret
0x00000000000e721c : cmp eax, 0xfffff001 ; jae 0xe722b ; ret
0x00000000000e724c : cmp eax, 0xfffff001 ; jae 0xe725b ; ret
0x00000000000e72ac : cmp eax, 0xfffff001 ; jae 0xe72bb ; ret
0x00000000000e72dc : cmp eax, 0xfffff001 ; jae 0xe72eb ; ret
0x00000000000e730c : cmp eax, 0xfffff001 ; jae 0xe731b ; ret
0x00000000000e733c : cmp eax, 0xfffff001 ; jae 0xe734b ; ret
0x00000000001303ff : cmp eax, 0xfffffe7c ; call rax
0x00000000000a53d2 : cmp eax, 1 ; ja 0xa53b9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ae30 : cmp eax, 1 ; jg 0x11ae3b ; ret
0x0000000000159000 : cmp eax, 1 ; jne 0x158ffe ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000bf8a6 : cmp eax, 2 ; je 0xbf8bf ; xor eax, eax ; ret
0x0000000000158ff5 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000f4e12 : cmp eax, 3 ; je 0xf4e78 ; xor eax, eax ; pop rbp ; ret
0x000000000009798e : cmp eax, 4 ; je 0x97999 ; ret
0x000000000005e78a : cmp eax, 9 ; ja 0x5e768 ; mov rax, r8 ; ret
0x00000000000e6015 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a5204 : cmp eax, dword ptr [rax] ; je 0xa5220 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116bb4 : cmp eax, dword ptr [rcx - 0x77] ; ret
0x00000000000d215e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xd2259 ; ret
0x00000000000d2173 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xd2259 ; ret
0x00000000000d2188 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xd2259 ; ret
0x00000000000d21a3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xd2259 ; ret
0x00000000000d21be : cmp eax, dword ptr [rsi + 0x20] ; jne 0xd2259 ; ret
0x00000000000d21d3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xd2255 ; ret
0x00000000000d21e8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xd2255 ; ret
0x00000000000d21f3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xd2255 ; ret
0x00000000000d220e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xd2255 ; ret
0x00000000000d2223 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xd2255 ; ret
0x00000000000d2238 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xd2255 ; ret
0x00000000000d2243 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xd2255 ; ret
0x00000000000d2143 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xd2259 ; ret
0x00000000000d2113 : cmp eax, dword ptr [rsi + 4] ; jne 0xd2259 ; ret
0x00000000000d2128 : cmp eax, dword ptr [rsi + 8] ; jne 0xd2259 ; ret
0x0000000000195f6a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x1960a9 ; ret
0x0000000000195f83 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x1960a9 ; ret
0x0000000000196093 : cmp eax, dword ptr [rsi - 4] ; jne 0x1960a7 ; xor eax, eax ; ret
0x0000000000195fb3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1960a9 ; ret
0x0000000000195f98 : cmp eax, dword ptr [rsi - 8] ; jne 0x1960a9 ; ret
0x00000000000d20fd : cmp eax, dword ptr [rsi] ; jne 0xd2258 ; ret
0x00000000000e7df7 : cmp eax, eax ; jne 0xe7e76 ; mov eax, 0x7d00 ; ret
0x00000000000aba42 : cmp eax, ecx ; je 0xaba2f ; mov rax, r8 ; ret
0x00000000000d2328 : cmp eax, ecx ; jne 0xd2337 ; mov eax, r9d ; ret
0x0000000000195a83 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000013eccc : cmp eax, edi ; jae 0x13ecec ; mov eax, 0xffffffff ; ret
0x000000000005e47e : cmp eax, edi ; jae 0x5e438 ; mov rax, r10 ; pop rbx ; ret
0x0000000000096aef : cmp eax, edx ; jae 0x96b1f ; movzx eax, byte ptr [rax] ; ret
0x000000000013ed0a : cmp eax, edx ; jne 0x13ece9 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000ab951 : cmp eax, edx ; jne 0xab947 ; mov rax, r8 ; ret
0x000000000008ae5a : cmp eax, esi ; ja 0x8ae57 ; lea eax, [rdx + rdi] ; ret
0x000000000012a7dd : cmp eax, esi ; jb 0x12a7f9 ; mov eax, 1 ; ret
0x00000000000ab91d : cmp eax, esi ; jne 0xab917 ; mov rax, r8 ; ret
0x000000000010df37 : cmp ebp, eax ; ret
0x0000000000029180 : cmp ebp, eax ; retf 0xa3
0x0000000000154b3a : cmp ebp, ebx ; ret
0x000000000010904e : cmp ebp, esp ; je 0x108fe5 ; mov rdi, r13 ; call 0x25359
0x000000000010907f : cmp ebp, esp ; je 0x109094 ; mov rdi, r13 ; call 0x25359
0x000000000009792a : cmp ebx, 0xa ; je 0x97935 ; ret
0x000000000011fe2c : cmp ebx, eax ; je 0x11fe66 ; mov rdx, rax ; jmp 0x11fe47
0x000000000009838e : cmp ebx, eax ; je 0x9839b ; pop rbx ; pop rbp ; ret
0x00000000000952ac : cmp ebx, eax ; jne 0x952a5 ; jmp 0x95282
0x000000000010f7bc : cmp ebx, eax ; pop rbx ; setl al ; ret
0x000000000009d05c : cmp ebx, ebp ; jne 0x9d048 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014242d : cmp ebx, ecx ; jg 0x1423ee ; mov byte ptr [r10], 0 ; ret
0x00000000000e05d5 : cmp ebx, esp ; jne 0xe05c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059604 : cmp ecx, -1 ; jne 0x59600 ; mov rax, rdx ; ret
0x0000000000058272 : cmp ecx, 0x2f ; jmp rdx
0x00000000000a47a5 : cmp ecx, 0xd ; je 0xa47b7 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000014c610 : cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x000000000014b624 : cmp ecx, dword ptr [rax - 0x75] ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x0000000000156a44 : cmp ecx, dword ptr [rax - 0x77] ; retf
0x0000000000028408 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000105cec : cmp ecx, dword ptr [rax - 0xc] ; jne 0x105ce8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000018f7da : cmp ecx, dword ptr [rsi + rdx + 0x20] ; jne 0x18f7c2 ; vzeroupper ; ret
0x000000000018f7fa : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x18f7c2 ; vzeroupper ; ret
0x000000000018f81a : cmp ecx, dword ptr [rsi + rdx + 0x60] ; jne 0x18f7c2 ; vzeroupper ; ret
0x000000000018fc56 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x18fc31 ; vzeroupper ; ret
0x0000000000191feb : cmp ecx, eax ; jne 0x192019 ; xor eax, eax ; ret
0x0000000000192e2b : cmp ecx, eax ; jne 0x192e59 ; xor eax, eax ; ret
0x0000000000192e5f : cmp ecx, eax ; jne 0x192e6c ; xor eax, eax ; ret
0x00000000000ab9f0 : cmp ecx, edx ; je 0xab9f0 ; cmp ecx, esi ; je 0xab9f0 ; ret
0x0000000000113014 : cmp ecx, edx ; seta al ; sbb eax, 0 ; ret
0x0000000000095b8a : cmp ecx, esi ; ja 0x95b87 ; lea eax, [rdx + rdi] ; ret
0x00000000000ab9f4 : cmp ecx, esi ; je 0xab9ec ; ret
0x00000000000aba70 : cmp ecx, esi ; jne 0xaba64 ; ret
0x00000000001587f7 : cmp edi, 0x1a ; cmovae eax, r10d ; jmp 0x158799
0x000000000013da21 : cmp edi, dword ptr [rax + 3] ; syscall
0x000000000011756e : cmp edi, eax ; ja 0x11759e ; xor eax, eax ; ret
0x000000000004b5f5 : cmp edi, eax ; jb 0x4b5db ; xor eax, eax ; ret
0x000000000005e413 : cmp edi, eax ; jbe 0x5e411 ; mov rax, r10 ; ret
0x000000000011f6c7 : cmp edi, eax ; jne 0x11f701 ; mov eax, 0x88 ; syscall
0x0000000000061b01 : cmp edi, ecx ; ja 0x61aef ; mov eax, r8d ; ret
0x00000000000becfb : cmp edi, edx ; jb 0xbed08 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000120206 : cmp edi, edx ; jne 0x120200 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000110459 : cmp edi, esi ; ja 0x11044f ; mov eax, r8d ; ret
0x0000000000097f87 : cmp edi, esi ; sete al ; ret
0x00000000000ab6cc : cmp edi, esp ; mov dword ptr [r9 + rdi - 4], r10d ; jmp 0xa7914
0x00000000000e805e : cmp edx, 0x1badface ; setne al ; ret
0x00000000000e8079 : cmp edx, 0x1cd1 ; setne al ; ret
0x00000000000d7355 : cmp edx, 0x28f5c28 ; jbe 0xd7368 ; ret
0x00000000000e8046 : cmp edx, 0x5346544e ; setne al ; ret
0x0000000000132eb9 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000e802a : cmp edx, 0xadf5 ; setne al ; ret
0x0000000000105cbf : cmp edx, 2 ; je 0x105ccd ; ret
0x0000000000077d35 : cmp edx, dword ptr [edi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000077d36 : cmp edx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000018f264 : cmp edx, dword ptr [rsi] ; jne 0x18f250 ; ret
0x0000000000110b97 : cmp edx, eax ; jne 0x110bd1 ; mov eax, 0x85 ; syscall
0x0000000000110bfa : cmp edx, eax ; jne 0x110c31 ; mov eax, 0x103 ; syscall
0x000000000013ec4a : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000131b05 : cmp edx, ecx ; ja 0x131b3a ; xor eax, eax ; syscall
0x000000000005e706 : cmp edx, ecx ; jae 0x5e6f3 ; mov rax, r8 ; ret
0x0000000000031461 : cmp edx, ecx ; jb 0x314b8 ; mov r10, rcx ; jmp 0x31428
0x0000000000186d4a : cmp edx, ecx ; jle 0x186d6b ; movsxd rax, ecx ; ret
0x0000000000186d49 : cmp edx, ecx ; jle 0x186d6c ; movsxd rax, ecx ; ret
0x0000000000186fcc : cmp edx, ecx ; jle 0x187078 ; ret
0x000000000018f0d6 : cmp edx, ecx ; jne 0x18f0c2 ; vzeroupper ; ret
0x0000000000193f99 : cmp edx, ecx ; jne 0x193f7d ; vzeroupper ; ret
0x00000000000bf1cf : cmp edx, ecx ; jne 0xbf1bc ; ret
0x0000000000097302 : cmp edx, edi ; setae al ; ret
0x00000000000314a6 : cmp edx, esi ; jb 0x314be ; mov r9, rsi ; mov r10, rcx ; jmp 0x31473
0x00000000000ab9b8 : cmp edx, esi ; je 0xab9b4 ; ret
0x00000000000c1167 : cmp edx, esi ; je 0xc1177 ; test edx, edx ; jne 0xc1168 ; ret
0x000000000013f932 : cmp esi, 0x80 ; cmovb eax, edx ; ret
0x00000000000e00f4 : cmp esi, 1 ; je 0xe0107 ; xor eax, eax ; ret
0x000000000008feed : cmp esi, 2 ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000332d8 : cmp esi, 3 ; je 0x332e5 ; ret
0x0000000000190160 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000013018b : cmp esi, dword ptr [rdi + 0x2a] ; mov eax, 0xe3 ; syscall
0x000000000014c512 : cmp esi, dword ptr [rdx + 0x28] ; ja 0x14c509 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018ec09 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000013f7f0 : cmp esi, eax ; ja 0x13f7e5 ; mov eax, 0xffffffff ; ret
0x0000000000049cb7 : cmp esp, ebx ; jne 0x49cb8 ; mov edi, ebp ; call 0xe5fb8
0x00000000000ab6d1 : cmp esp, edi ; jmp 0xa790f
0x000000000008a50b : cmp qword ptr [rax + 0x30], 0 ; je 0x8a51f ; ret
0x000000000015696c : cmp qword ptr [rax], rbx ; je 0x156989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094ff4 : cmp qword ptr [rdi + 0x38], 0 ; je 0x95007 ; ret
0x00000000000a20ce : cmp qword ptr [rdi + 8], rsi ; jb 0xa20e9 ; mov qword ptr [rdi], rsi ; ret
0x000000000013005b : cmp qword ptr [rdi], 0 ; je 0x130076 ; ret
0x000000000008d7b1 : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x0000000000026aae : cmp qword ptr [rdx + 0xd8], rax ; jne 0x26a84 ; ret
0x0000000000097929 : cmp r11d, 0xa ; je 0x97936 ; ret
0x000000000014242c : cmp r11d, r9d ; jg 0x1423ef ; mov byte ptr [r10], 0 ; ret
0x0000000000049cb6 : cmp r12, rbx ; jne 0x49cb9 ; mov edi, ebp ; call 0xe5fb9
0x0000000000058d1f : cmp r8, -8 ; jne 0x58d19 ; mov rax, rdx ; ret
0x00000000000e7de4 : cmp r8, 0x58465342 ; jne 0xe7df9 ; ret
0x000000000010f3ca : cmp rax, -0x1000 ; ja 0x10f438 ; ret
0x000000000010f47a : cmp rax, -0x1000 ; ja 0x10f4e8 ; ret
0x000000000011075a : cmp rax, -0x1000 ; ja 0x110770 ; ret
0x00000000001107b9 : cmp rax, -0x1000 ; ja 0x1107d0 ; ret
0x000000000011081a : cmp rax, -0x1000 ; ja 0x110830 ; ret
0x0000000000110ba2 : cmp rax, -0x1000 ; ja 0x110bb8 ; ret
0x0000000000110c05 : cmp rax, -0x1000 ; ja 0x110c18 ; ret
0x0000000000110c5f : cmp rax, -0x1000 ; ja 0x110c78 ; ret
0x0000000000110e98 : cmp rax, -0x1000 ; ja 0x110eb0 ; ret
0x0000000000111272 : cmp rax, -0x1000 ; ja 0x1112d8 ; ret
0x0000000000111317 : cmp rax, -0x1000 ; ja 0x111378 ; ret
0x00000000001113ab : cmp rax, -0x1000 ; ja 0x1113c0 ; ret
0x00000000001113db : cmp rax, -0x1000 ; ja 0x1113f0 ; ret
0x0000000000111ab7 : cmp rax, -0x1000 ; ja 0x111b08 ; ret
0x0000000000111c37 : cmp rax, -0x1000 ; ja 0x111c88 ; ret
0x0000000000115bf7 : cmp rax, -0x1000 ; ja 0x115c58 ; ret
0x000000000011627a : cmp rax, -0x1000 ; ja 0x116300 ; ret
0x0000000000116343 : cmp rax, -0x1000 ; ja 0x116358 ; ret
0x0000000000116397 : cmp rax, -0x1000 ; ja 0x1163a8 ; ret
0x000000000011646a : cmp rax, -0x1000 ; ja 0x1164d8 ; ret
0x000000000011651a : cmp rax, -0x1000 ; ja 0x116588 ; ret
0x00000000001165bb : cmp rax, -0x1000 ; ja 0x1165d0 ; ret
0x000000000011672b : cmp rax, -0x1000 ; ja 0x116740 ; ret
0x00000000001168ab : cmp rax, -0x1000 ; ja 0x1168c0 ; ret
0x00000000001168d8 : cmp rax, -0x1000 ; ja 0x1168f0 ; ret
0x000000000011690e : cmp rax, -0x1000 ; ja 0x116928 ; ret
0x000000000011694b : cmp rax, -0x1000 ; ja 0x116960 ; ret
0x0000000000116e31 : cmp rax, -0x1000 ; ja 0x116e90 ; ret
0x0000000000117044 : cmp rax, -0x1000 ; ja 0x117058 ; ret
0x0000000000117085 : cmp rax, -0x1000 ; ja 0x117098 ; ret
0x00000000001176b7 : cmp rax, -0x1000 ; ja 0x117718 ; ret
0x0000000000117757 : cmp rax, -0x1000 ; ja 0x1177b8 ; ret
0x00000000001177fd : cmp rax, -0x1000 ; ja 0x117870 ; ret
0x00000000001178bd : cmp rax, -0x1000 ; ja 0x117930 ; ret
0x000000000011824a : cmp rax, -0x1000 ; ja 0x1182c8 ; ret
0x0000000000118477 : cmp rax, -0x1000 ; ja 0x1184c8 ; ret
0x0000000000118537 : cmp rax, -0x1000 ; ja 0x118588 ; ret
0x00000000001185f7 : cmp rax, -0x1000 ; ja 0x118608 ; ret
0x0000000000119ccb : cmp rax, -0x1000 ; ja 0x119ce0 ; ret
0x0000000000119eb0 : cmp rax, -0x1000 ; ja 0x119ec8 ; ret
0x0000000000119eeb : cmp rax, -0x1000 ; ja 0x119f00 ; ret
0x0000000000119f1b : cmp rax, -0x1000 ; ja 0x119f30 ; ret
0x000000000011bbf7 : cmp rax, -0x1000 ; ja 0x11bc58 ; ret
0x000000000011f6d2 : cmp rax, -0x1000 ; ja 0x11f6e8 ; ret
0x000000000012238b : cmp rax, -0x1000 ; ja 0x1223a0 ; ret
0x0000000000122430 : cmp rax, -0x1000 ; ja 0x1224b0 ; ret
0x00000000001224e3 : cmp rax, -0x1000 ; ja 0x1224f8 ; ret
0x000000000012261a : cmp rax, -0x1000 ; ja 0x122688 ; ret
0x00000000001226ca : cmp rax, -0x1000 ; ja 0x122738 ; ret
0x000000000012277a : cmp rax, -0x1000 ; ja 0x1227e8 ; ret
0x000000000012282a : cmp rax, -0x1000 ; ja 0x1228b0 ; ret
0x00000000001228f7 : cmp rax, -0x1000 ; ja 0x122958 ; ret
0x0000000000122a23 : cmp rax, -0x1000 ; ja 0x122a38 ; ret
0x00000000001232f7 : cmp rax, -0x1000 ; ja 0x123358 ; ret
0x00000000001233c7 : cmp rax, -0x1000 ; ja 0x123428 ; ret
0x0000000000123530 : cmp rax, -0x1000 ; ja 0x1235a8 ; ret
0x00000000001235ea : cmp rax, -0x1000 ; ja 0x123668 ; ret
0x00000000001236a7 : cmp rax, -0x1000 ; ja 0x123708 ; ret
0x0000000000123750 : cmp rax, -0x1000 ; ja 0x1237c8 ; ret
0x0000000000123807 : cmp rax, -0x1000 ; ja 0x123868 ; ret
0x00000000001238aa : cmp rax, -0x1000 ; ja 0x123930 ; ret
0x0000000000123d0a : cmp rax, -0x1000 ; ja 0x123d78 ; ret
0x0000000000123dba : cmp rax, -0x1000 ; ja 0x123e30 ; ret
0x0000000000123e6a : cmp rax, -0x1000 ; ja 0x123ed8 ; ret
0x000000000012400a : cmp rax, -0x1000 ; ja 0x124078 ; ret
0x00000000001240ba : cmp rax, -0x1000 ; ja 0x124138 ; ret
0x000000000012416b : cmp rax, -0x1000 ; ja 0x124180 ; ret
0x000000000012419b : cmp rax, -0x1000 ; ja 0x1241b0 ; ret
0x00000000001241cb : cmp rax, -0x1000 ; ja 0x1241e0 ; ret
0x00000000001241fb : cmp rax, -0x1000 ; ja 0x124210 ; ret
0x00000000001242ce : cmp rax, -0x1000 ; ja 0x1242e8 ; ret
0x000000000012430b : cmp rax, -0x1000 ; ja 0x124320 ; ret
0x000000000012433b : cmp rax, -0x1000 ; ja 0x124350 ; ret
0x000000000012436e : cmp rax, -0x1000 ; ja 0x124388 ; ret
0x00000000001243ab : cmp rax, -0x1000 ; ja 0x1243c0 ; ret
0x00000000001300db : cmp rax, -0x1000 ; ja 0x1300f0 ; ret
0x0000000000130195 : cmp rax, -0x1000 ; ja 0x1301a8 ; ret
0x0000000000131b0d : cmp rax, -0x1000 ; ja 0x131b28 ; ret
0x00000000000466b1 : cmp rax, -0x1000 ; ja 0x466c8 ; ret
0x0000000000046720 : cmp rax, -0x1000 ; ja 0x46738 ; ret
0x000000000004676c : cmp rax, -0x1000 ; ja 0x467c8 ; ret
0x000000000004b527 : cmp rax, -0x1000 ; ja 0x4b588 ; ret
0x0000000000065f7b : cmp rax, -0x1000 ; ja 0x65f90 ; ret
0x0000000000065fae : cmp rax, -0x1000 ; ja 0x65fc8 ; ret
0x00000000000d405b : cmp rax, -0x1000 ; ja 0xd4070 ; ret
0x00000000000e107b : cmp rax, -0x1000 ; ja 0xe1090 ; ret
0x00000000000e59b4 : cmp rax, -0x1000 ; ja 0xe5a10 ; ret
0x00000000000e5a4a : cmp rax, -0x1000 ; ja 0xe5ab0 ; ret
0x00000000000e5b3d : cmp rax, -0x1000 ; ja 0xe5bb8 ; ret
0x00000000000e5c97 : cmp rax, -0x1000 ; ja 0xe5cd8 ; ret
0x00000000000e5d17 : cmp rax, -0x1000 ; ja 0xe5d68 ; ret
0x000000000010590b : cmp rax, -0xfff ; jae 0x10591c ; ret
0x000000000010593b : cmp rax, -0xfff ; jae 0x10594c ; ret
0x000000000010596b : cmp rax, -0xfff ; jae 0x10597c ; ret
0x000000000010599b : cmp rax, -0xfff ; jae 0x1059ac ; ret
0x00000000001059cb : cmp rax, -0xfff ; jae 0x1059dc ; ret
0x00000000001059fb : cmp rax, -0xfff ; jae 0x105a0c ; ret
0x0000000000105a2b : cmp rax, -0xfff ; jae 0x105a3c ; ret
0x0000000000105a5b : cmp rax, -0xfff ; jae 0x105a6c ; ret
0x000000000011067b : cmp rax, -0xfff ; jae 0x11068c ; ret
0x0000000000110cab : cmp rax, -0xfff ; jae 0x110cbc ; ret
0x0000000000110cdb : cmp rax, -0xfff ; jae 0x110cec ; ret
0x0000000000110e0b : cmp rax, -0xfff ; jae 0x110e1c ; ret
0x0000000000110e3b : cmp rax, -0xfff ; jae 0x110e4c ; ret
0x0000000000110efb : cmp rax, -0xfff ; jae 0x110f0c ; ret
0x0000000000110f2b : cmp rax, -0xfff ; jae 0x110f3c ; ret
0x000000000011181b : cmp rax, -0xfff ; jae 0x11182c ; ret
0x0000000000111b3b : cmp rax, -0xfff ; jae 0x111b4c ; ret
0x0000000000111b6b : cmp rax, -0xfff ; jae 0x111b7c ; ret
0x0000000000111b9b : cmp rax, -0xfff ; jae 0x111bac ; ret
0x0000000000111bcb : cmp rax, -0xfff ; jae 0x111bdc ; ret
0x0000000000111bfb : cmp rax, -0xfff ; jae 0x111c0c ; ret
0x0000000000111cbb : cmp rax, -0xfff ; jae 0x111ccc ; ret
0x0000000000111ceb : cmp rax, -0xfff ; jae 0x111cfc ; ret
0x00000000001125fb : cmp rax, -0xfff ; jae 0x11260c ; ret
0x000000000011262b : cmp rax, -0xfff ; jae 0x11263c ; ret
0x000000000011265b : cmp rax, -0xfff ; jae 0x11266c ; ret
0x000000000011268e : cmp rax, -0xfff ; jae 0x11269f ; ret
0x0000000000112e4b : cmp rax, -0xfff ; jae 0x112e5c ; ret
0x0000000000112e7e : cmp rax, -0xfff ; jae 0x112e8f ; ret
0x0000000000112eab : cmp rax, -0xfff ; jae 0x112ebc ; ret
0x0000000000112edb : cmp rax, -0xfff ; jae 0x112eec ; ret
0x0000000000112f0b : cmp rax, -0xfff ; jae 0x112f1c ; ret
0x0000000000112f3e : cmp rax, -0xfff ; jae 0x112f4f ; ret
0x0000000000112f6b : cmp rax, -0xfff ; jae 0x112f7c ; ret
0x0000000000112f9b : cmp rax, -0xfff ; jae 0x112fac ; ret
0x0000000000112fcb : cmp rax, -0xfff ; jae 0x112fdc ; ret
0x000000000011623e : cmp rax, -0xfff ; jae 0x11624f ; ret
0x00000000001170bb : cmp rax, -0xfff ; jae 0x1170cc ; ret
0x00000000001174bb : cmp rax, -0xfff ; jae 0x1174cc ; ret
0x000000000011767b : cmp rax, -0xfff ; jae 0x11768c ; ret
0x00000000001180bb : cmp rax, -0xfff ; jae 0x1180cc ; ret
0x000000000011820b : cmp rax, -0xfff ; jae 0x11821c ; ret
0x000000000011840b : cmp rax, -0xfff ; jae 0x11841c ; ret
0x000000000011843b : cmp rax, -0xfff ; jae 0x11844c ; ret
0x00000000001184fb : cmp rax, -0xfff ; jae 0x11850c ; ret
0x00000000001185bb : cmp rax, -0xfff ; jae 0x1185cc ; ret
0x00000000001188fb : cmp rax, -0xfff ; jae 0x11890c ; ret
0x000000000011892b : cmp rax, -0xfff ; jae 0x11893c ; ret
0x000000000011895b : cmp rax, -0xfff ; jae 0x11896c ; ret
0x000000000011b94d : cmp rax, -0xfff ; jae 0x11b95e ; ret
0x000000000011bb8b : cmp rax, -0xfff ; jae 0x11bb9c ; ret
0x000000000011bbbb : cmp rax, -0xfff ; jae 0x11bbcc ; ret
0x000000000011bc8b : cmp rax, -0xfff ; jae 0x11bc9c ; ret
0x000000000011bcbb : cmp rax, -0xfff ; jae 0x11bccc ; ret
0x000000000011bcee : cmp rax, -0xfff ; jae 0x11bcff ; ret
0x000000000011bd1b : cmp rax, -0xfff ; jae 0x11bd2c ; ret
0x000000000011bd4b : cmp rax, -0xfff ; jae 0x11bd5c ; ret
0x000000000011bd7b : cmp rax, -0xfff ; jae 0x11bd8c ; ret
0x000000000011bdab : cmp rax, -0xfff ; jae 0x11bdbc ; ret
0x000000000011ff9e : cmp rax, -0xfff ; jae 0x11ffaf ; ret
0x000000000011ffcb : cmp rax, -0xfff ; jae 0x11ffdc ; ret
0x000000000011fffb : cmp rax, -0xfff ; jae 0x12000c ; ret
0x000000000012002e : cmp rax, -0xfff ; jae 0x12003f ; ret
0x000000000012005e : cmp rax, -0xfff ; jae 0x12006f ; ret
0x000000000012008b : cmp rax, -0xfff ; jae 0x12009c ; ret
0x00000000001200be : cmp rax, -0xfff ; jae 0x1200cf ; ret
0x00000000001200eb : cmp rax, -0xfff ; jae 0x1200fc ; ret
0x000000000012011b : cmp rax, -0xfff ; jae 0x12012c ; ret
0x000000000012014e : cmp rax, -0xfff ; jae 0x12015f ; ret
0x000000000012017b : cmp rax, -0xfff ; jae 0x12018c ; ret
0x00000000001201ae : cmp rax, -0xfff ; jae 0x1201bf ; ret
0x00000000001221eb : cmp rax, -0xfff ; jae 0x1221fc ; ret
0x000000000012221b : cmp rax, -0xfff ; jae 0x12222c ; ret
0x000000000012235b : cmp rax, -0xfff ; jae 0x12236c ; ret
0x00000000001223bb : cmp rax, -0xfff ; jae 0x1223cc ; ret
0x00000000001223eb : cmp rax, -0xfff ; jae 0x1223fc ; ret
0x000000000012251b : cmp rax, -0xfff ; jae 0x12252c ; ret
0x00000000001225ae : cmp rax, -0xfff ; jae 0x1225bf ; ret
0x00000000001225db : cmp rax, -0xfff ; jae 0x1225ec ; ret
0x0000000000122afb : cmp rax, -0xfff ; jae 0x122b0c ; ret
0x0000000000122b2b : cmp rax, -0xfff ; jae 0x122b3c ; ret
0x0000000000122b6e : cmp rax, -0xfff ; jae 0x122b7f ; ret
0x0000000000122b9b : cmp rax, -0xfff ; jae 0x122bac ; ret
0x0000000000122bcb : cmp rax, -0xfff ; jae 0x122bdc ; ret
0x0000000000122bfb : cmp rax, -0xfff ; jae 0x122c0c ; ret
0x0000000000122c2b : cmp rax, -0xfff ; jae 0x122c3c ; ret
0x0000000000122c5b : cmp rax, -0xfff ; jae 0x122c6c ; ret
0x0000000000122c8b : cmp rax, -0xfff ; jae 0x122c9c ; ret
0x0000000000122cbb : cmp rax, -0xfff ; jae 0x122ccc ; ret
0x0000000000122ceb : cmp rax, -0xfff ; jae 0x122cfc ; ret
0x0000000000122d1e : cmp rax, -0xfff ; jae 0x122d2f ; ret
0x0000000000122d4b : cmp rax, -0xfff ; jae 0x122d5c ; ret
0x0000000000122d7e : cmp rax, -0xfff ; jae 0x122d8f ; ret
0x0000000000122dab : cmp rax, -0xfff ; jae 0x122dbc ; ret
0x0000000000122ddb : cmp rax, -0xfff ; jae 0x122dec ; ret
0x0000000000122e0b : cmp rax, -0xfff ; jae 0x122e1c ; ret
0x0000000000122e3b : cmp rax, -0xfff ; jae 0x122e4c ; ret
0x0000000000122e6b : cmp rax, -0xfff ; jae 0x122e7c ; ret
0x0000000000122e9e : cmp rax, -0xfff ; jae 0x122eaf ; ret
0x0000000000122ece : cmp rax, -0xfff ; jae 0x122edf ; ret
0x0000000000122efb : cmp rax, -0xfff ; jae 0x122f0c ; ret
0x0000000000122f2b : cmp rax, -0xfff ; jae 0x122f3c ; ret
0x0000000000122f5e : cmp rax, -0xfff ; jae 0x122f6f ; ret
0x0000000000122f8e : cmp rax, -0xfff ; jae 0x122f9f ; ret
0x0000000000122fbe : cmp rax, -0xfff ; jae 0x122fcf ; ret
0x0000000000122feb : cmp rax, -0xfff ; jae 0x122ffc ; ret
0x000000000012301b : cmp rax, -0xfff ; jae 0x12302c ; ret
0x000000000012304b : cmp rax, -0xfff ; jae 0x12305c ; ret
0x000000000012307b : cmp rax, -0xfff ; jae 0x12308c ; ret
0x00000000001230ae : cmp rax, -0xfff ; jae 0x1230bf ; ret
0x00000000001230db : cmp rax, -0xfff ; jae 0x1230ec ; ret
0x000000000012310b : cmp rax, -0xfff ; jae 0x12311c ; ret
0x000000000012313e : cmp rax, -0xfff ; jae 0x12314f ; ret
0x000000000012316b : cmp rax, -0xfff ; jae 0x12317c ; ret
0x000000000012319e : cmp rax, -0xfff ; jae 0x1231af ; ret
0x00000000001231ce : cmp rax, -0xfff ; jae 0x1231df ; ret
0x00000000001231fb : cmp rax, -0xfff ; jae 0x12320c ; ret
0x000000000012322b : cmp rax, -0xfff ; jae 0x12323c ; ret
0x000000000012325b : cmp rax, -0xfff ; jae 0x12326c ; ret
0x000000000012329b : cmp rax, -0xfff ; jae 0x1232ac ; ret
0x000000000012338b : cmp rax, -0xfff ; jae 0x12339c ; ret
0x000000000012345b : cmp rax, -0xfff ; jae 0x12346c ; ret
0x000000000012348b : cmp rax, -0xfff ; jae 0x12349c ; ret
0x00000000001234be : cmp rax, -0xfff ; jae 0x1234cf ; ret
0x00000000001234eb : cmp rax, -0xfff ; jae 0x1234fc ; ret
0x000000000012396e : cmp rax, -0xfff ; jae 0x12397f ; ret
0x000000000012399b : cmp rax, -0xfff ; jae 0x1239ac ; ret
0x00000000001239cb : cmp rax, -0xfff ; jae 0x1239dc ; ret
0x00000000001239fe : cmp rax, -0xfff ; jae 0x123a0f ; ret
0x00000000000466eb : cmp rax, -0xfff ; jae 0x466fc ; ret
0x0000000000046cdb : cmp rax, -0xfff ; jae 0x46cec ; ret
0x00000000000d413b : cmp rax, -0xfff ; jae 0xd414c ; ret
0x00000000000d726b : cmp rax, -0xfff ; jae 0xd727c ; ret
0x00000000000d729b : cmp rax, -0xfff ; jae 0xd72ac ; ret
0x00000000000e590b : cmp rax, -0xfff ; jae 0xe591c ; ret
0x00000000000e5afe : cmp rax, -0xfff ; jae 0xe5b0f ; ret
0x00000000000e5beb : cmp rax, -0xfff ; jae 0xe5bfc ; ret
0x00000000000e601b : cmp rax, -0xfff ; jae 0xe602c ; ret
0x00000000000e6fcb : cmp rax, -0xfff ; jae 0xe6fdc ; ret
0x00000000000e721b : cmp rax, -0xfff ; jae 0xe722c ; ret
0x00000000000e724b : cmp rax, -0xfff ; jae 0xe725c ; ret
0x00000000000e72ab : cmp rax, -0xfff ; jae 0xe72bc ; ret
0x00000000000e72db : cmp rax, -0xfff ; jae 0xe72ec ; ret
0x00000000000e730b : cmp rax, -0xfff ; jae 0xe731c ; ret
0x00000000000e733b : cmp rax, -0xfff ; jae 0xe734c ; ret
0x0000000000098407 : cmp rax, 0x2000000 ; jbe 0x98418 ; ret
0x000000000005e789 : cmp rax, 9 ; ja 0x5e769 ; mov rax, r8 ; ret
0x000000000005e47d : cmp rax, rdi ; jae 0x5e439 ; mov rax, r10 ; pop rbx ; ret
0x0000000000096aee : cmp rax, rdx ; jae 0x96b20 ; movzx eax, byte ptr [rax] ; ret
0x000000000008ae59 : cmp rax, rsi ; ja 0x8ae58 ; lea eax, [rdx + rdi] ; ret
0x00000000000e05d4 : cmp rbx, r12 ; jne 0xe05c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fe2b : cmp rbx, rax ; je 0x11fe67 ; mov rdx, rax ; jmp 0x11fe48
0x000000000009838d : cmp rbx, rax ; je 0x9839c ; pop rbx ; pop rbp ; ret
0x00000000000952ab : cmp rbx, rax ; jne 0x952a6 ; jmp 0x95283
0x000000000010f7bb : cmp rbx, rax ; pop rbx ; setl al ; ret
0x000000000009d05b : cmp rbx, rbp ; jne 0x9d049 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059603 : cmp rcx, -1 ; jne 0x59601 ; mov rax, rdx ; ret
0x0000000000191fea : cmp rcx, rax ; jne 0x19201a ; xor eax, eax ; ret
0x0000000000192e2a : cmp rcx, rax ; jne 0x192e5a ; xor eax, eax ; ret
0x0000000000113013 : cmp rcx, rdx ; seta al ; sbb eax, 0 ; ret
0x0000000000095b89 : cmp rcx, rsi ; ja 0x95b88 ; lea eax, [rdx + rdi] ; ret
0x000000000004b5f4 : cmp rdi, r8 ; jb 0x4b5dc ; xor eax, eax ; ret
0x000000000011756d : cmp rdi, rax ; ja 0x11759f ; xor eax, eax ; ret
0x000000000005e412 : cmp rdi, rax ; jbe 0x5e412 ; mov rax, r10 ; ret
0x00000000000becfa : cmp rdi, rdx ; jb 0xbed09 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000120205 : cmp rdi, rdx ; jne 0x120201 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000110458 : cmp rdi, rsi ; ja 0x110450 ; mov eax, r8d ; ret
0x0000000000097f86 : cmp rdi, rsi ; sete al ; ret
0x0000000000031460 : cmp rdx, r9 ; jb 0x314b9 ; mov r10, rcx ; jmp 0x31429
0x000000000013ec49 : cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000131b04 : cmp rdx, rcx ; ja 0x131b3b ; xor eax, eax ; syscall
0x000000000005e705 : cmp rdx, rcx ; jae 0x5e6f4 ; mov rax, r8 ; ret
0x000000000018f0d5 : cmp rdx, rcx ; jne 0x18f0c3 ; vzeroupper ; ret
0x0000000000193f98 : cmp rdx, rcx ; jne 0x193f7e ; vzeroupper ; ret
0x00000000000bf1ce : cmp rdx, rcx ; jne 0xbf1bd ; ret
0x00000000000bf1cd : cmp rdx, rcx ; jne 0xbf1be ; ret
0x0000000000097301 : cmp rdx, rdi ; setae al ; ret
0x000000000012c5f6 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000012c667 : cmp sil, cl ; cmovne eax, edx ; ret
0x000000000018a0c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a3c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fc6b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x728d
0x000000000018b2c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018afc7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000191a69 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000d9ede : cmpsb byte ptr [rsi], byte ptr [rdi] ; jl 0xd9ef4 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000001841e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018acc7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a9c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128f46 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; or al, 0 ; syscall
0x000000000014c296 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000001157f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000136326 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0xffff
0x00000000001355c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, edi ; or eax, dword ptr [rax] ; syscall
0x0000000000156472 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, esi ; or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000053665 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000000285c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x00000000000bf5a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x0000000000115830 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x64e83c7d], cl ; ret 0xffff
0x00000000000676e5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000019752f : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rcx, rdi ; jmp rcx
0x0000000000197748 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rdi, r12 ; jmp rdi
0x0000000000098710 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rsp, 8 ; ret
0x00000000000b73c0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000daaef : cmpsd dword ptr [rsi], dword ptr [rdi] ; jo 0xdab05 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000001553b7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; syscall
0x00000000000a3951 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, 0x450f4800 ; ret 0xfc3
0x00000000001614fd : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000256fb : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001553b6 : cmpsd dword ptr ss:[rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; syscall
0x00000000000bf27c : cpuid ; jmp 0xbf246
0x000000000004a647 : cqo ; idiv rsi ; ret
0x000000000004a607 : cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000156970 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000000e4897 : cwde ; adc byte ptr [rax], al ; syscall
0x000000000008b9a6 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000008f241 : cwde ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x66
0x00000000000469d6 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000110875 : cwde ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x00000000000f4480 : cwde ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000290e5 : cwde ; call 0x25353
0x00000000000d9eee : cwde ; jl 0xd9f04 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000012e180 : cwde ; lock dec dword ptr [rax - 0x7d] ; ret
0x0000000000124e7b : cwde ; or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000bffeb : cwde ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd214 : cwde ; ret
0x0000000000074341 : cwde ; ret 0xffff
0x00000000000b8909 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000b68f1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000b890a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b68f2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000193a91 : dec byte ptr [rax + 0x7f] ; jl 0x193ab6 ; cld ; vzeroupper ; ret
0x00000000000a026f : dec byte ptr [rax + 3] ; push rax ; adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x000000000009b418 : dec byte ptr [rax - 0x73] ; ret
0x00000000000d3659 : dec byte ptr [rax - 0x77] ; out dx, eax ; call rbx
0x000000000003a6bd : dec byte ptr [rax - 0x77] ; ret
0x000000000011d0e6 : dec byte ptr [rax - 0x77] ; retf 0x8b48
0x00000000000cbdbb : dec byte ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x00000000000df18c : dec byte ptr [rax - 0x7d] ; ret
0x00000000000cce42 : dec byte ptr [rax - 0x7d] ; ret 0x4102
0x000000000013eb3a : dec byte ptr [rbp + 0x2c6fe48] ; add dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x000000000011ce98 : dec byte ptr [rbp - 0x75] ; pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x00000000001029ba : dec byte ptr [rbp - 0x77] ; ret
0x00000000000d5477 : dec byte ptr [rbp - 0x77] ; retf
0x000000000011d166 : dec byte ptr [rcx + 9] ; retf 0x894c
0x0000000000047b70 : dec byte ptr [rcx + rcx*4 - 0x19] ; call rbx
0x00000000000cc6a4 : dec byte ptr [rcx - 0x76b34eec] ; retf 0x8348
0x000000000011661a : dec byte ptr [rcx] ; je 0x116651 ; mov eax, 0x48 ; syscall
0x00000000001166a9 : dec byte ptr [rcx] ; je 0x1166e1 ; mov eax, 0x48 ; syscall
0x000000000011443d : dec byte ptr [rdi] ; retf 0xc985
0x000000000018e7b1 : dec byte ptr [rdx - 0x73] ; add al, 7 ; vzeroupper ; ret
0x000000000011458e : dec byte ptr [rsi] ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x00000000000600d7 : dec dword ptr [r8 - 0x77] ; ret 0xf748
0x000000000009a45e : dec dword ptr [r9 - 0x7b] ; ret 0x850f
0x0000000000197c71 : dec dword ptr [rax + 0x21] ; retf 0x944
0x0000000000098796 : dec dword ptr [rax + 0x21] ; retf 0x949
0x0000000000027e91 : dec dword ptr [rax + 0x29] ; ret
0x00000000000b8a8a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b6a32 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000e9ba3 : dec dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000104fc1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000098264 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x000000000007eaf8 : dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000007f5bb : dec dword ptr [rax + 0x29] ; ret 0xf48
0x0000000000027c30 : dec dword ptr [rax + 0x29] ; retf
0x000000000005a9cd : dec dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0x3948
0x00000000000a010e : dec dword ptr [rax + 0x31] ; ret 0x894c
0x000000000002d359 : dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000111e56 : dec dword ptr [rax + 0x39] ; je 0x111e87 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000000000573bb : dec dword ptr [rax + 0x39] ; ret
0x000000000007da37 : dec dword ptr [rax + 0x39] ; ret 0x2675
0x0000000000091a11 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000070d1a : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000788e3 : dec dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000f088f : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000000e550c : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000000481bd : dec dword ptr [rax + 0x39] ; ret 0xe575
0x00000000000f0982 : dec dword ptr [rax + 0x39] ; ret 0xe76
0x0000000000058fc0 : dec dword ptr [rax + 0x39] ; retf
0x000000000002b57a : dec dword ptr [rax + 0x39] ; retf 0x9775
0x000000000007799b : dec dword ptr [rax + 0x63] ; add al, 0x81 ; add rax, rdx ; jmp rax
0x00000000000815aa : dec dword ptr [rax + 0x63] ; add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000001043dd : dec dword ptr [rax + 0x63] ; add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000aa06f : dec dword ptr [rax + 0x63] ; dec dword ptr [rcx - 0x77] ; retf
0x00000000000faf8a : dec dword ptr [rax + 0x63] ; ret
0x00000000000bf409 : dec dword ptr [rax + 0x63] ; ret 0xfac1
0x00000000000667fa : dec dword ptr [rax + 0x63] ; retf 0x3948
0x00000000000b4d49 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000000a3888 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000036c6d : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009fd45 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000125805 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000130e5f : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000479d7 : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000a7109 : dec dword ptr [rax + 0xf] ; shr ebx, 1 ; retf 0x3948
0x000000000005569b : dec dword ptr [rax + 1] ; ret
0x000000000006b2f7 : dec dword ptr [rax + 1] ; ret 0x348
0x00000000000caed2 : dec dword ptr [rax + 1] ; retf
0x00000000000eace3 : dec dword ptr [rax + 1] ; ror byte ptr [rax + 1], 1 ; ret
0x00000000001569bb : dec dword ptr [rax - 0x2d] ; ret 0x2149
0x0000000000046eef : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000052698 : dec dword ptr [rax - 0x39] ; ret
0x000000000004d3f4 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000079adb : dec dword ptr [rax - 0x55063] ; dec dword ptr [rax - 0x77] ; retf
0x000000000015547b : dec dword ptr [rax - 0x73] ; adc eax, 0x3a2d ; call qword ptr [rax]
0x00000000000bffe7 : dec dword ptr [rax - 0x73] ; add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb33f : dec dword ptr [rax - 0x73] ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000000f0855 : dec dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + 0x39] ; ret 0x3176
0x00000000001388fe : dec dword ptr [rax - 0x73] ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000eb23f : dec dword ptr [rax - 0x73] ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000071942 : dec dword ptr [rax - 0x73] ; or byte ptr [r8 - 0x77], cl ; ret
0x00000000001698a6 : dec dword ptr [rax - 0x73] ; push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x000000000006e23e : dec dword ptr [rax - 0x75] ; adc ecx, ebp ; pop rsp ; retf 0xffff
0x000000000010f422 : dec dword ptr [rax - 0x75] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x000000000010b92b : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x2e74
0x000000000010b73a : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007433c : dec dword ptr [rax - 0x75] ; add ch, cl ; cwde ; ret 0xffff
0x00000000000a1980 : dec dword ptr [rax - 0x75] ; add eax, 0x1485c8 ; call qword ptr [rax]
0x000000000012e3ef : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000290ea : dec dword ptr [rax - 0x75] ; jge 0x29076 ; call 0x25357
0x00000000000290e1 : dec dword ptr [rax - 0x75] ; jge 0x29085 ; call 0x25357
0x0000000000135cb3 : dec dword ptr [rax - 0x75] ; jl 0x135ce3 ; sub al, ch ; ret 0xef
0x000000000014c27a : dec dword ptr [rax - 0x75] ; jl 0x14c2aa ; adc al, ch ; retf
0x000000000014c279 : dec dword ptr [rax - 0x75] ; jl 0x14c2ab ; adc al, ch ; retf
0x00000000000f8854 : dec dword ptr [rax - 0x75] ; jnp 0xf8840 ; call 0x25357
0x00000000000f8853 : dec dword ptr [rax - 0x75] ; jnp 0xf8841 ; call 0x25358
0x000000000004d02b : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a02bb : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000014c2c9 : dec dword ptr [rax - 0x77] ; and al, 0x10 ; mov rdx, rax ; jmp 0x14c26a
0x000000000009aacf : dec dword ptr [rax - 0x77] ; and al, 8 ; call rdx
0x000000000018eadf : dec dword ptr [rax - 0x77] ; clc ; vzeroupper ; ret
0x000000000004d471 : dec dword ptr [rax - 0x77] ; fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000701db : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0x00000000000def74 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x0000000000038765 : dec dword ptr [rax - 0x77] ; imul eax ; ret 0xfecb
0x000000000005f487 : dec dword ptr [rax - 0x77] ; jrcxz 0x5f41a ; retf 0xfac1
0x0000000000029ec3 : dec dword ptr [rax - 0x77] ; ret
0x00000000000659af : dec dword ptr [rax - 0x77] ; ret 0x12eb
0x000000000015da81 : dec dword ptr [rax - 0x77] ; ret 0x14c
0x00000000000e9cac : dec dword ptr [rax - 0x77] ; ret 0x14eb
0x00000000000de8bc : dec dword ptr [rax - 0x77] ; ret 0x2548
0x00000000000d2a99 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000012d115 : dec dword ptr [rax - 0x77] ; ret 0x2b49
0x0000000000114789 : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000099e20 : dec dword ptr [rax - 0x77] ; ret 0x394c
0x0000000000114591 : dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000092774 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015e3a7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000004c24b : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000002a307 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000002d22f : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000010374a : dec dword ptr [rax - 0x77] ; ret 0x8b64
0x000000000011a235 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000ea463 : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000065b20 : dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x0000000000082812 : dec dword ptr [rax - 0x77] ; ret 0xa1e9
0x000000000007e744 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000152dbe : dec dword ptr [rax - 0x77] ; ret 0xbeeb
0x0000000000038fab : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000f6061 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000007f866 : dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x000000000003b967 : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000000e5504 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000004f58f : dec dword ptr [rax - 0x77] ; retf
0x00000000000cc067 : dec dword ptr [rax - 0x77] ; retf 0x1f0f
0x000000000012fe63 : dec dword ptr [rax - 0x77] ; retf 0x3948
0x000000000010186f : dec dword ptr [rax - 0x77] ; retf 0x3be9
0x000000000007a862 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000012f74a : dec dword ptr [rax - 0x77] ; retf 0xcee9
0x00000000000f2548 : dec dword ptr [rax - 0x77] ; retf 0xd349
0x000000000007159b : dec dword ptr [rax - 0x77] ; sbb byte ptr [rax + 1], cl ; retf
0x000000000004a4e2 : dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000d4020 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000130373 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000124701 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000070e97 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000d5cdf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000859fd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000010d868 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 3
0x00000000000d601e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000000000018046c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x000000000011fde1 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x00000000000a5b08 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x89 ; ret 0x894c
0x000000000005fe1e : dec dword ptr [rax - 0x7d] ; adc al, 0xf8 ; add cl, ch ; ret 0xfff6
0x000000000009c51f : dec dword ptr [rax - 0x7d] ; call 0xffffffffc3430d2f
0x0000000000078d97 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000002c2da : dec dword ptr [rax - 0x7d] ; ret
0x0000000000056df8 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000007b7a7 : dec dword ptr [rax - 0x7d] ; ret 0x4420
0x000000000010de8b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000015d501 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000000000015420c : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x000000000003be92 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000083b6b : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000056d60 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x88 ; or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000056b98 : dec dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x88 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000011f8fb : dec dword ptr [rax - 0x7f] ; ret
0x00000000001702fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009851d : dec dword ptr [rax - 9] ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000a9e95 : dec dword ptr [rbp + 0x39] ; ret
0x000000000007ea82 : dec dword ptr [rbp + 0x63] ; ret
0x000000000007cd8d : dec dword ptr [rbp + rcx*4 + 0x1d] ; retf
0x00000000001133bb : dec dword ptr [rbp + rcx*4 + 0x24] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000008b5a3 : dec dword ptr [rbp + rcx*4 + 0x2c] ; and dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000154c2b : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x14 ; call qword ptr [rax]
0x0000000000124769 : dec dword ptr [rbp + rcx*4 + 0x53] ; add dword ptr [rcx + 0x39], ecx ; ret 0x4f73
0x000000000010125d : dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x000000000010890a : dec dword ptr [rbp - 0x75] ; jg 0x10892e ; call 0x25357
0x0000000000196fe8 : dec dword ptr [rbp - 0x76b63fb6] ; ret 0xd349
0x0000000000122170 : dec dword ptr [rbp - 0x77] ; call 0x2e78ec68
0x000000000006909c : dec dword ptr [rbp - 0x77] ; loopne 0x6908f ; ret 0xffdc
0x00000000000e6359 : dec dword ptr [rbp - 0x77] ; ret
0x000000000002fd67 : dec dword ptr [rbp - 0x77] ; ret 0x2de9
0x0000000000031669 : dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x0000000000158301 : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0x00000000000fd4fa : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000f79a8 : dec dword ptr [rbx + 0x154245c] ; retf
0x0000000000123e1b : dec dword ptr [rbx + 0x48042444] ; add esp, 0x28 ; ret
0x00000000000e59fa : dec dword ptr [rbx + 0x48082444] ; add esp, 0x18 ; ret
0x0000000000115c42 : dec dword ptr [rbx + 0x48082444] ; add esp, 0x28 ; ret
0x00000000000e5cc2 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x18 ; ret
0x00000000000e5b9c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x28 ; ret
0x00000000001182ae : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000001164c3 : dec dword ptr [rbx + 0x48182444] ; add esp, 0x28 ; ret
0x00000000000ffe01 : dec dword ptr [rbx + 0x63] ; add al, 0xba ; add rax, r10 ; jmp rax
0x00000000000ffcaf : dec dword ptr [rbx + 0x63] ; add al, 0xbe ; add rax, r14 ; jmp rax
0x000000000009f25d : dec dword ptr [rbx + 0x9082454] ; ret 0x37e9
0x00000000000f82db : dec dword ptr [rbx + rcx*4 + 0x3c] ; ret 0x1be8
0x000000000003ee13 : dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xe9 ; ret 0xffed
0x000000000012a620 : dec dword ptr [rbx + rcx*4 + 4] ; and al, 0xeb ; retf 0xf66
0x000000000007f1f5 : dec dword ptr [rbx + rcx*4 - 0x73] ; clc ; idiv bh ; inc dword ptr [rcx] ; retf
0x0000000000081ae9 : dec dword ptr [rbx - 0x4df7b] ; inc dword ptr [rcx + 1] ; retf
0x000000000007b2d3 : dec dword ptr [rbx - 0x4ef7b] ; inc dword ptr [rcx] ; retf
0x0000000000093d6a : dec dword ptr [rbx - 0x7c2e76ed] ; retf 0x8320
0x00000000000f182e : dec dword ptr [rbx - 0x7cb7d3ad] ; rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x000000000007801b : dec dword ptr [rbx - 0x8ef7b] ; inc dword ptr [rcx] ; ret
0x000000000007eaf2 : dec dword ptr [rbx - 0x8ff4b] ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000009b37f : dec dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; retf 0xc183
0x00000000001987a5 : dec dword ptr [rcx + 0x21] ; ret
0x00000000000e5ca8 : dec dword ptr [rcx + 0x22b8c7] ; add byte ptr [rax], al ; syscall
0x00000000000e644b : dec dword ptr [rcx + 0x29] ; ret
0x0000000000038293 : dec dword ptr [rcx + 0x29] ; ret 0x8348
0x00000000000f08db : dec dword ptr [rcx + 0x29] ; ret 0x8349
0x000000000019924a : dec dword ptr [rcx + 0x29] ; retf
0x000000000005a944 : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x00000000001441a4 : dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x000000000002facc : dec dword ptr [rcx + 0x3948fc51] ; ret
0x00000000001282e3 : dec dword ptr [rcx + 0x39] ; fimul word ptr [rax + 0xf] ; ret 0x8948
0x0000000000128119 : dec dword ptr [rcx + 0x39] ; fmul qword ptr [rax + 0xf] ; ret 0x8948
0x00000000000f0873 : dec dword ptr [rcx + 0x39] ; ret 0x1776
0x000000000019a45d : dec dword ptr [rcx + 0x39] ; retf
0x00000000000e71b9 : dec dword ptr [rcx + 0x39db01da] ; ret 0x9674
0x000000000003a963 : dec dword ptr [rcx + 0x3c8348c9] ; retf
0x0000000000079003 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000011007f : dec dword ptr [rcx + 0x75b8c6] ; add byte ptr [rax], al ; syscall
0x00000000001100a8 : dec dword ptr [rcx + 0x77b8c6] ; add byte ptr [rax], al ; syscall
0x00000000000cb3bb : dec dword ptr [rcx + 1] ; ret
0x00000000000345b4 : dec dword ptr [rcx + 1] ; ret 0x8d48
0x00000000000ccd70 : dec dword ptr [rcx + 1] ; ror dword ptr [rax + 1], cl ; retf 0x8b41
0x00000000000617c3 : dec dword ptr [rcx + rcx*4 + 0x44] ; ret 0xe9f8
0x00000000000606fc : dec dword ptr [rcx + rcx*4 + 4] ; ret 0x85c7
0x00000000000e88c7 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25356
0x00000000000e88c6 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25357
0x0000000000159ca4 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000015a960 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbx ; call rcx
0x000000000011bed7 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x0000000000087472 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001175fd : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015aa8e : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x0000000000109093 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x25356
0x00000000000a19cd : dec dword ptr [rcx + rcx*4 - 9] ; call rax
0x00000000000d70c9 : dec dword ptr [rcx - 0x107cb736] ; adc byte ptr [rcx], ch ; ret 0x5589
0x0000000000105de4 : dec dword ptr [rcx - 0x17f3dbbc] ; ret 0xfffe
0x000000000015d519 : dec dword ptr [rcx - 0x3f7cb739] ; add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000ece19 : dec dword ptr [rcx - 0x3f7cb73f] ; add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000007b34d : dec dword ptr [rcx - 0x4f773] ; ljmp [rcx] ; retf 0xda29
0x0000000000067aef : dec dword ptr [rcx - 0x60f43] ; dec dword ptr [rax + 0x39] ; ret
0x000000000015eeec : dec dword ptr [rcx - 0x73] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x2548
0x000000000002fe1b : dec dword ptr [rcx - 0x73] ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000113ac1 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x00000000000f4c31 : dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x000000000002dbd9 : dec dword ptr [rcx - 0x75] ; add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000012da2d : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r11 + r12*2 + 0x2d], r9b ; ret
0x000000000012dc7c : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x000000000003fef1 : dec dword ptr [rcx - 0x75] ; jg 0x3ff0d ; call 0x3c127
0x000000000003fefa : dec dword ptr [rcx - 0x75] ; jg 0x3ff0e ; call 0x3c127
0x000000000019a7aa : dec dword ptr [rcx - 0x75] ; jge 0x19a7c8 ; add rdi, rbp ; call r12
0x0000000000107894 : dec dword ptr [rcx - 0x75] ; or al, 0x24 ; call rax
0x000000000011d149 : dec dword ptr [rcx - 0x75] ; push rdx ; adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000000f84b2 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [r9], al ; retf
0x000000000006970d : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x000000000002fe35 : dec dword ptr [rcx - 0x77] ; mov r10, rcx ; jmp 0x2fdf7
0x000000000002fe85 : dec dword ptr [rcx - 0x77] ; mov r10, rcx ; jmp 0x2fe47
0x000000000005e23f : dec dword ptr [rcx - 0x77] ; ret
0x00000000000a4a13 : dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000007825f : dec dword ptr [rcx - 0x77] ; ret 0x8445
0x0000000000078215 : dec dword ptr [rcx - 0x77] ; ret 0x8548
0x0000000000199748 : dec dword ptr [rcx - 0x77] ; ret 0x8948
0x0000000000080d90 : dec dword ptr [rcx - 0x77] ; ret 0x894c
0x00000000000ffa3a : dec dword ptr [rcx - 0x77] ; ret 0x8b41
0x0000000000078295 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000007c847 : dec dword ptr [rcx - 0x77] ; ret 0x8e9
0x0000000000080d50 : dec dword ptr [rcx - 0x77] ; ret 0xbd83
0x000000000007cc89 : dec dword ptr [rcx - 0x77] ; ret 0xbfe9
0x0000000000196dee : dec dword ptr [rcx - 0x77] ; ret 0xc148
0x0000000000081098 : dec dword ptr [rcx - 0x77] ; ret 0xcee9
0x000000000002fc99 : dec dword ptr [rcx - 0x77] ; retf
0x0000000000196c9f : dec dword ptr [rcx - 0x77] ; ror dword ptr [rcx + 9], cl ; retf
0x000000000009a45f : dec dword ptr [rcx - 0x7b] ; ret 0x850f
0x000000000007616b : dec dword ptr [rcx - 0x7d] ; in al, dx ; add eax, ebp ; retf
0x0000000000030b44 : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000071e04 : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x000000000013dd2c : dec dword ptr [rcx - 0x8b7b] ; inc dword ptr [rbp - 0x77] ; ret
0x0000000000098152 : dec dword ptr [rcx - 9] ; ret
0x0000000000085cd3 : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d42f : dec dword ptr [rcx] ; ret
0x000000000009319a : dec dword ptr [rcx] ; ret 0x1389
0x0000000000100f6b : dec dword ptr [rcx] ; retf 0x5089
0x00000000001109b0 : dec dword ptr [rcx] ; retf 0x9489
0x0000000000125dd7 : dec dword ptr [rcx] ; setbe r8b ; mov eax, r8d ; ret
0x00000000000cbf0c : dec dword ptr [rdi + rcx + 0x46] ; ret 0x8548
0x0000000000045333 : dec dword ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ret 0x574
0x0000000000054eed : dec dword ptr [rdi] ; add byte ptr [rcx], cl ; ret 0x8f74
0x000000000006be54 : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000126685 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x126616 ; loopne 0x126696 ; ret
0x000000000003730a : dec dword ptr [rdi] ; mov bh, 4 ; js 0x3729b ; loopne 0x3731b ; ret
0x000000000006e6c7 : dec dword ptr [rdi] ; mov dh, 0x30 ; jmp 0x6b198
0x00000000000e9c6c : dec dword ptr [rdi] ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000064699 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf40
0x00000000000ee164 : dec dword ptr [rdi] ; mov dh, 0x55 ; add bh, byte ptr [rcx] ; retf
0x0000000000060896 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f1f3 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000056552 : dec dword ptr [rdi] ; mov esi, 0x89410257 ; ret
0x00000000000ce6d6 : dec dword ptr [rdi] ; mov word ptr [rbx], fs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000005b4b6 : dec dword ptr [rdi] ; mov word ptr [rbx], gs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001081e4 : dec dword ptr [rdi] ; ret
0x000000000002a87f : dec dword ptr [rdi] ; ret 0x66c3
0x00000000000561c6 : dec dword ptr [rdi] ; ret 0x8b48
0x00000000000ddde6 : dec dword ptr [rdi] ; ret 0x8d89
0x000000000013f07a : dec dword ptr [rdi] ; ret 0x90c3
0x00000000000a250c : dec dword ptr [rdi] ; ret 0xfc3
0x000000000003578b : dec dword ptr [rdi] ; retf 0xd88
0x000000000004faf5 : dec dword ptr [rdi] ; test ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a8125 : dec dword ptr [rdi] ; test ah, bh ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x000000000004cccd : dec dword ptr [rdi] ; test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002d93f : dec dword ptr [rdi] ; test byte ptr [rbp + rax], al ; add bh, dh ; ret 0
0x00000000000a75fb : dec dword ptr [rdi] ; test byte ptr [rdx], bh ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x00000000000726ec : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; add eax, 0x83480000 ; ret
0x00000000000a8f6a : dec dword ptr [rdi] ; test byte ptr [rsp], dh ; add bh, dh ; ret
0x0000000000051321 : dec dword ptr [rdi] ; test cl, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000013c777 : dec dword ptr [rdi] ; test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000141712 : dec dword ptr [rdi] ; test dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000195910 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000070236 : dec dword ptr [rdi] ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000196970 : dec dword ptr [rdi] ; test ecx, ebp ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000116b15 : dec dword ptr [rdi] ; xchg dword ptr [rcx + rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000000a792b : dec dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000116b89 : dec dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x000000000006d570 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000163fb4 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x00000000000670fd : dec dword ptr [rdx + 0x63] ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000009e8f0 : dec dword ptr [rdx - 0x73] ; jl 0x9e923 ; and byte ptr [rcx], dh ; imul al ; ret
0x00000000000fedae : dec dword ptr gs:[rax - 0x77] ; ret 0x8548
0x00000000000b8a89 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000b6a31 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000098795 : dec qword ptr [rax + 0x21] ; retf 0x949
0x000000000002d358 : dec qword ptr [rax + 0x3948074a] ; ret
0x000000000003be91 : dec qword ptr [rax - 0x7d] ; ret 0x4901
0x000000000004ccf3 : div bh ; ret 0
0x00000000000332d5 : div byte ptr [rax + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x332e8 ; ret
0x000000000011db70 : div byte ptr [rbp + 0x1d] ; mov rdi, qword ptr [r13] ; call rbx
0x000000000011d973 : div byte ptr [rbp + 0xa] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046019 : div byte ptr [rbp + 0xc] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000b4f06 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000ab7be : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x00000000000a599c : div byte ptr [rcx + rsi*2 - 0x70] ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59ce
0x00000000000faa76 : div byte ptr [rdx + 0xf] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x000000000012e7cd : div byte ptr [rdx + rsi - 0x80] ; retf 0xa880
0x0000000000116339 : div byte ptr [rsi - 0x48] ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000011045a : div dword ptr [rdi - 0x15] ; mov eax, r8d ; ret
0x0000000000061b15 : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000bf3bd : div ecx ; mov eax, eax ; ret
0x00000000000bf3a6 : div esi ; mov eax, eax ; ret
0x0000000000081b32 : emms ; jrcxz 0x81b23 ; ret
0x0000000000091040 : endbr64 ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000010f9f0 : endbr64 ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000117670 : endbr64 ; mov eax, 0x10 ; syscall
0x0000000000110f20 : endbr64 ; mov eax, 0x102 ; syscall
0x0000000000112f90 : endbr64 ; mov eax, 0x107 ; syscall
0x0000000000112ed0 : endbr64 ; mov eax, 0x10a ; syscall
0x0000000000123010 : endbr64 ; mov eax, 0x110 ; syscall
0x0000000000123070 : endbr64 ; mov eax, 0x11b ; syscall
0x00000000001230d0 : endbr64 ; mov eax, 0x11f ; syscall
0x0000000000122510 : endbr64 ; mov eax, 0x122 ; syscall
0x0000000000122ce0 : endbr64 ; mov eax, 0x123 ; syscall
0x0000000000111b90 : endbr64 ; mov eax, 0x124 ; syscall
0x0000000000111bf0 : endbr64 ; mov eax, 0x125 ; syscall
0x0000000000122e00 : endbr64 ; mov eax, 0x126 ; syscall
0x0000000000123100 : endbr64 ; mov eax, 0x12c ; syscall
0x0000000000122c20 : endbr64 ; mov eax, 0x131 ; syscall
0x00000000001185b0 : endbr64 ; mov eax, 0x132 ; syscall
0x0000000000123160 : endbr64 ; mov eax, 0x134 ; syscall
0x00000000001231f0 : endbr64 ; mov eax, 0x13f ; syscall
0x0000000000123220 : endbr64 ; mov eax, 0x14a ; syscall
0x0000000000123250 : endbr64 ; mov eax, 0x14b ; syscall
0x00000000001113d0 : endbr64 ; mov eax, 0x15 ; syscall
0x0000000000111bc0 : endbr64 ; mov eax, 0x16 ; syscall
0x0000000000098020 : endbr64 ; mov eax, 0x18 ; syscall
0x000000000011bcb0 : endbr64 ; mov eax, 0x1b ; syscall
0x000000000011bc80 : endbr64 ; mov eax, 0x1c ; syscall
0x0000000000124300 : endbr64 ; mov eax, 0x1e ; syscall
0x00000000001243a0 : endbr64 ; mov eax, 0x1f ; syscall
0x0000000000111b30 : endbr64 ; mov eax, 0x20 ; syscall
0x0000000000111b60 : endbr64 ; mov eax, 0x21 ; syscall
0x00000000001168a0 : endbr64 ; mov eax, 0x22 ; syscall
0x0000000000116720 : endbr64 ; mov eax, 0x23 ; syscall
0x00000000000d7260 : endbr64 ; mov eax, 0x24 ; syscall
0x00000000000e5be0 : endbr64 ; mov eax, 0x25 ; syscall
0x00000000000d7290 : endbr64 ; mov eax, 0x26 ; syscall
0x00000000000e6f60 : endbr64 ; mov eax, 0x27 ; syscall
0x00000000001239c0 : endbr64 ; mov eax, 0x29 ; syscall
0x0000000000123990 : endbr64 ; mov eax, 0x30 ; syscall
0x0000000000123380 : endbr64 ; mov eax, 0x31 ; syscall
0x00000000001234e0 : endbr64 ; mov eax, 0x32 ; syscall
0x0000000000123480 : endbr64 ; mov eax, 0x33 ; syscall
0x0000000000123450 : endbr64 ; mov eax, 0x34 ; syscall
0x00000000000e6010 : endbr64 ; mov eax, 0x3b ; syscall
0x00000000000466e0 : endbr64 ; mov eax, 0x3e ; syscall
0x00000000000e5900 : endbr64 ; mov eax, 0x3f ; syscall
0x00000000001241f0 : endbr64 ; mov eax, 0x40 ; syscall
0x00000000001241c0 : endbr64 ; mov eax, 0x41 ; syscall
0x0000000000124330 : endbr64 ; mov eax, 0x43 ; syscall
0x0000000000124160 : endbr64 ; mov eax, 0x44 ; syscall
0x0000000000124190 : endbr64 ; mov eax, 0x47 ; syscall
0x0000000000111810 : endbr64 ; mov eax, 0x49 ; syscall
0x0000000000119ee0 : endbr64 ; mov eax, 0x4c ; syscall
0x0000000000119f10 : endbr64 ; mov eax, 0x4d ; syscall
0x0000000000111cb0 : endbr64 ; mov eax, 0x50 ; syscall
0x0000000000111ce0 : endbr64 ; mov eax, 0x51 ; syscall
0x0000000000065f70 : endbr64 ; mov eax, 0x52 ; syscall
0x0000000000110ef0 : endbr64 ; mov eax, 0x53 ; syscall
0x0000000000112fc0 : endbr64 ; mov eax, 0x54 ; syscall
0x0000000000112e40 : endbr64 ; mov eax, 0x56 ; syscall
0x0000000000112f60 : endbr64 ; mov eax, 0x57 ; syscall
0x0000000000112ea0 : endbr64 ; mov eax, 0x58 ; syscall
0x0000000000112f00 : endbr64 ; mov eax, 0x59 ; syscall
0x0000000000110e00 : endbr64 ; mov eax, 0x5a ; syscall
0x0000000000110e30 : endbr64 ; mov eax, 0x5b ; syscall
0x00000000001125f0 : endbr64 ; mov eax, 0x5c ; syscall
0x0000000000112620 : endbr64 ; mov eax, 0x5d ; syscall
0x0000000000112650 : endbr64 ; mov eax, 0x5e ; syscall
0x0000000000110df0 : endbr64 ; mov eax, 0x5f ; syscall
0x00000000000d4050 : endbr64 ; mov eax, 0x60 ; syscall
0x00000000001170b0 : endbr64 ; mov eax, 0x62 ; syscall
0x0000000000122fe0 : endbr64 ; mov eax, 0x63 ; syscall
0x00000000000e5930 : endbr64 ; mov eax, 0x64 ; syscall
0x00000000000e6f80 : endbr64 ; mov eax, 0x66 ; syscall
0x0000000000122e60 : endbr64 ; mov eax, 0x67 ; syscall
0x00000000000e6fa0 : endbr64 ; mov eax, 0x68 ; syscall
0x00000000000e6f90 : endbr64 ; mov eax, 0x6b ; syscall
0x00000000000e6fb0 : endbr64 ; mov eax, 0x6c ; syscall
0x00000000000e7240 : endbr64 ; mov eax, 0x6d ; syscall
0x00000000000e6f70 : endbr64 ; mov eax, 0x6e ; syscall
0x00000000000e7270 : endbr64 ; mov eax, 0x6f ; syscall
0x00000000000e72d0 : endbr64 ; mov eax, 0x70 ; syscall
0x00000000000e6fc0 : endbr64 ; mov eax, 0x73 ; syscall
0x00000000000e7300 : endbr64 ; mov eax, 0x76 ; syscall
0x00000000000e7330 : endbr64 ; mov eax, 0x78 ; syscall
0x00000000000e7210 : endbr64 ; mov eax, 0x79 ; syscall
0x00000000001223b0 : endbr64 ; mov eax, 0x7a ; syscall
0x00000000001223e0 : endbr64 ; mov eax, 0x7b ; syscall
0x00000000000e72a0 : endbr64 ; mov eax, 0x7c ; syscall
0x0000000000122bc0 : endbr64 ; mov eax, 0x7d ; syscall
0x0000000000122bf0 : endbr64 ; mov eax, 0x7e ; syscall
0x0000000000046cd0 : endbr64 ; mov eax, 0x83 ; syscall
0x0000000000110670 : endbr64 ; mov eax, 0x84 ; syscall
0x0000000000123040 : endbr64 ; mov eax, 0x86 ; syscall
0x00000000001225d0 : endbr64 ; mov eax, 0x87 ; syscall
0x0000000000110ca0 : endbr64 ; mov eax, 0x89 ; syscall
0x0000000000110cd0 : endbr64 ; mov eax, 0x8a ; syscall
0x0000000000117470 : endbr64 ; mov eax, 0x8c ; syscall
0x00000000001174b0 : endbr64 ; mov eax, 0x8d ; syscall
0x0000000000105900 : endbr64 ; mov eax, 0x8e ; syscall
0x0000000000105930 : endbr64 ; mov eax, 0x8f ; syscall
0x0000000000105960 : endbr64 ; mov eax, 0x90 ; syscall
0x0000000000105990 : endbr64 ; mov eax, 0x91 ; syscall
0x00000000001059f0 : endbr64 ; mov eax, 0x92 ; syscall
0x0000000000105a20 : endbr64 ; mov eax, 0x93 ; syscall
0x0000000000105a50 : endbr64 ; mov eax, 0x94 ; syscall
0x000000000011bd10 : endbr64 ; mov eax, 0x95 ; syscall
0x000000000011bd40 : endbr64 ; mov eax, 0x96 ; syscall
0x000000000011bd70 : endbr64 ; mov eax, 0x97 ; syscall
0x000000000011bda0 : endbr64 ; mov eax, 0x98 ; syscall
0x00000000001188f0 : endbr64 ; mov eax, 0x99 ; syscall
0x0000000000122b20 : endbr64 ; mov eax, 0x9a ; syscall
0x0000000000122f20 : endbr64 ; mov eax, 0x9b ; syscall
0x0000000000122af0 : endbr64 ; mov eax, 0x9e ; syscall
0x0000000000122b90 : endbr64 ; mov eax, 0x9f ; syscall
0x000000000011bbb0 : endbr64 ; mov eax, 0xa ; syscall
0x0000000000118430 : endbr64 ; mov eax, 0xa1 ; syscall
0x00000000001184f0 : endbr64 ; mov eax, 0xa2 ; syscall
0x0000000000118400 : endbr64 ; mov eax, 0xa3 ; syscall
0x00000000000d4130 : endbr64 ; mov eax, 0xa4 ; syscall
0x0000000000122350 : endbr64 ; mov eax, 0xa6 ; syscall
0x0000000000118920 : endbr64 ; mov eax, 0xa7 ; syscall
0x0000000000118950 : endbr64 ; mov eax, 0xa8 ; syscall
0x00000000001180b0 : endbr64 ; mov eax, 0xaa ; syscall
0x0000000000118200 : endbr64 ; mov eax, 0xab ; syscall
0x0000000000122210 : endbr64 ; mov eax, 0xac ; syscall
0x00000000001221e0 : endbr64 ; mov eax, 0xad ; syscall
0x0000000000122c50 : endbr64 ; mov eax, 0xae ; syscall
0x000000000011bb80 : endbr64 ; mov eax, 0xb ; syscall
0x0000000000122c80 : endbr64 ; mov eax, 0xb0 ; syscall
0x0000000000122d40 : endbr64 ; mov eax, 0xb1 ; syscall
0x0000000000122ef0 : endbr64 ; mov eax, 0xb4 ; syscall
0x0000000000123280 : endbr64 ; mov eax, 0xba ; syscall
0x0000000000122380 : endbr64 ; mov eax, 0xbb ; syscall
0x0000000000117550 : endbr64 ; mov eax, 0xc ; syscall
0x0000000000120080 : endbr64 ; mov eax, 0xc2 ; syscall
0x00000000001200e0 : endbr64 ; mov eax, 0xc3 ; syscall
0x000000000011ffc0 : endbr64 ; mov eax, 0xc4 ; syscall
0x0000000000120170 : endbr64 ; mov eax, 0xc5 ; syscall
0x0000000000120110 : endbr64 ; mov eax, 0xc6 ; syscall
0x000000000011fff0 : endbr64 ; mov eax, 0xc7 ; syscall
0x00000000000d3f90 : endbr64 ; mov eax, 0xc9 ; syscall
0x0000000000105af0 : endbr64 ; mov eax, 0xcb ; syscall
0x0000000000122cb0 : endbr64 ; mov eax, 0xd5 ; syscall
0x0000000000122b50 : endbr64 ; mov eax, 0xe4 ; syscall
0x00000000001300d0 : endbr64 ; mov eax, 0xe5 ; syscall
0x0000000000123290 : endbr64 ; mov eax, 0xea ; syscall
0x0000000000119cc0 : endbr64 ; mov eax, 0xeb ; syscall
0x0000000000122dd0 : endbr64 ; mov eax, 0xfd ; syscall
0x0000000000122da0 : endbr64 ; mov eax, 0xfe ; syscall
0x0000000000122e30 : endbr64 ; mov eax, 0xff ; syscall
0x000000000004acf0 : endbr64 ; mov eax, 0xffffffff ; ret
0x00000000001494c0 : endbr64 ; mov eax, 1 ; ret
0x0000000000116940 : endbr64 ; mov eax, 1 ; syscall
0x000000000014bcf0 : endbr64 ; mov eax, 2 ; ret
0x00000000001165b0 : endbr64 ; mov eax, 3 ; syscall
0x00000000001113a0 : endbr64 ; mov eax, 8 ; syscall
0x000000000015ab20 : endbr64 ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e10a0 : endbr64 ; mov eax, dword ptr [rdi] ; ret
0x00000000000372e0 : endbr64 ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000132e80 : endbr64 ; mov eax, edi ; bswap eax ; ret
0x00000000000e1050 : endbr64 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000969c0 : endbr64 ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000969d0 : endbr64 ; mov rax, rdi ; ret
0x000000000014a1c0 : endbr64 ; push rbp ; call 0x156437
0x0000000000026f60 : endbr64 ; ret
0x00000000000959e0 : endbr64 ; xor eax, eax ; ret
0x00000000001168d0 : endbr64 ; xor eax, eax ; syscall
0x0000000000095b9a : enter -0x177d, 1 ; ret
0x00000000000aba43 : enter -0x1d8c, 0x4c ; mov eax, eax ; ret
0x0000000000055b97 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x0000000000187c97 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000000b5381 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000c9d1c : enter -0x3ca5, 0x45 ; xor ecx, ecx ; mov eax, r9d ; ret
0x000000000014d83f : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x0000000000038009 : enter -0x3f77, 0xf ; retf 0x149
0x0000000000039fb8 : enter -0x3f77, 0xf ; retf 0xd289
0x000000000003a7c4 : enter -0x3fcf, -0x77 ; retf 0xeac1
0x0000000000195a84 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000058d93 : enter -0x72b4, 0x34 ; ret 0x8d4a
0x00000000000b8906 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b68ee : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000b8a86 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b6a2e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000098792 : enter -0x72b8, 0x4a ; dec dword ptr [rax + 0x21] ; retf 0x949
0x00000000001873d0 : enter -0x73b, 0x77 ; ret
0x000000000004560e : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000011b945 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x000000000005892a : enter -0x76b7, 4 ; leave ; xor eax, eax ; ret
0x0000000000045362 : enter -0x76b8, 7 ; subsd xmm0, xmm1 ; ret
0x00000000000d2346 : enter -0x76bc, -0x38 ; ret
0x0000000000064ca6 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x00000000000a8aef : enter -0x7780, 0x45 ; ret 0xd889
0x000000000010543d : enter -0x7bf1, -0x24 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1874
0x000000000019c9a8 : enter -0x7bf1, -0x52 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000105303 : enter -0x7bf1, 0x6e ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0xe74
0x000000000014942f : enter -0x7cb8, -0x16 ; add dword ptr [rbp - 0x7e], esi ; ret
0x0000000000130414 : enter -0x7cb8, 0x7c ; retf 0x1f8
0x000000000002b1a9 : enter -0x7cf1, 0x24 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001883c4 : enter -2, -1 ; ret
0x000000000007a68e : enter -6, -1 ; call 0x76906
0x0000000000121f91 : enter 0, 0 ; add dh, byte ptr [rax + rcx - 0x77] ; ret 0xeac1
0x000000000015024c : enter 0, 0 ; call rax
0x00000000001501fd : enter 0, 0 ; jmp rcx
0x00000000000a13a8 : enter 0x14, 0 ; je 0xa13b6 ; ret
0x00000000000f3fbc : enter 0x148, -0x3e ; jmp 0xf3f53
0x000000000018b849 : enter 0x148, -8 ; vzeroupper ; ret
0x00000000000a1984 : enter 0x1485, 0 ; call qword ptr [rax]
0x00000000000a6e2c : enter 0x149, -0x3e ; jmp 0xa6de3
0x00000000000a895e : enter 0x149, -0x3e ; jmp 0xa8913
0x00000000000a99fe : enter 0x149, -0x3e ; jmp 0xa99b3
0x00000000001974ef : enter 0x14c, -0x2e ; jmp rdx
0x00000000001873b1 : enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000187881 : enter 0x2275, -0x7d ; ret 0x8101
0x00000000000456d1 : enter 0x280f, -0x3f ; ret
0x000000000005acf6 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018bbee : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000004b5dc : enter 0x2948, -2 ; syscall
0x0000000000186d87 : enter 0x2948, -8 ; ret
0x000000000018fae1 : enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000ad52d : enter 0x31c3, -0x40 ; ret
0x000000000008b0af : enter 0x373, 0x44 ; mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x000000000007d198 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000153a7b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000153983 : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000a81f7 : enter 0x4480, -0x78 ; ret 0x8945
0x00000000000a85eb : enter 0x4480, -0x78 ; ret 0xb841
0x00000000000d2329 : enter 0x475, 0x44 ; mov eax, ecx ; ret
0x000000000013fd94 : enter 0x480f, -0x3e ; ret
0x000000000011a770 : enter 0x4866, 0xf ; outsb dx, byte ptr [rsi] ; ret
0x00000000000d55df : enter 0x5c29, -0x71 ; ret 0x8141
0x00000000000d53b0 : enter 0x5c29, -0x71 ; ret 0xc181
0x000000000003bec9 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000000d44f2 : enter 0x6b74, -0x77 ; ret 0x408d
0x0000000000133ba1 : enter 0xb, 0 ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000062764 : enter 0xf41, -0x6c ; ret
0x00000000001020fb : enter 0xf41, -0x6d ; ret
0x000000000002a981 : enter 0xf49, 0x4f ; ret 0x8548
0x00000000000fc56a : enter 0xf66, -0x11 ; ret 0xf41
0x0000000000191b16 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b46c9 : enter 0xf66, -0x15 ; ret
0x000000000015b1ed : enter 0xf66, -0x3b ; retf 0x6600
0x000000000012538e : enter 0xf66, -0xc ; ret 0xf66
0x00000000000bc3a4 : enter 5, 0 ; ret
0x0000000000157105 : fadd dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000000000026ab1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; jne 0x26a81 ; ret
0x0000000000055e5a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bce8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011301a : fadd dword ptr [rax] ; ret
0x00000000000a81a5 : fadd dword ptr [rbp - 0x77] ; retf 0xc141
0x0000000000065888 : fadd dword ptr [rbp - 0x7b] ; sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000015bb14 : fadd dword ptr [rbx + 0x14807e0] ; ret
0x00000000000785df : fadd dword ptr [rbx - 0x1f3efe20] ; add al, 0x89 ; ret 0xf41
0x000000000015d7c4 : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000000d9db8 : fadd dword ptr [rbx - 0x76b7f840] ; ret
0x00000000000ef6eb : fadd dword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cafd2 : fadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000004d474 : fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000081afb : fadd dword ptr [rcx - 0x77] ; ret
0x000000000014dfef : fadd dword ptr [rcx - 0x77] ; retf
0x00000000000d7634 : fadd dword ptr [rip - 0x76b80000] ; ret
0x00000000001242c8 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000130c19 : fadd qword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000451d8 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000045184 : fadd st(0) ; ret
0x00000000001960a8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000192e6e : fadd st(3) ; ret
0x00000000000bf953 : fadd st(3), st(0) ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000bfe83 : fadd st(3), st(0) ; ret
0x000000000018714d : faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x000000000018f83e : faddp st(5) ; in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000191661 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012216d : fbstp tbyte ptr [rcx] ; lock dec dword ptr [rbp - 0x77] ; call 0x2e78ec6b
0x00000000000abacd : fcmovb st(0), st(3) ; nop ; ret
0x000000000018bd0b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000000256b4 : fcom dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009df95 : fcom dword ptr [rcx] ; add al, ch ; ret
0x00000000000d7567 : fcomip st(4) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a5deb : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x00000000000cd1cb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd0d7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000909e5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008ce6f : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000029064 : fcomp dword ptr [rbx + rdx - 0x2076b800] ; call r12
0x00000000000f8860 : fdiv qword ptr [rbp - 0x1b] ; mov rdi, qword ptr [rbp - 0x70] ; call 0x25359
0x0000000000049cb8 : fdiv qword ptr [rbp - 0xb] ; mov edi, ebp ; call 0xe5fb7
0x000000000006089c : fdiv st(6) ; ret
0x00000000000714bc : fdiv st(7), st(0) ; inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7d], al ; retf
0x00000000000714cd : fdiv st(7), st(0) ; inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7f], al ; retf
0x0000000000130ddf : fdivp st(0) ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009333d : fdivr dword ptr [rsi] ; jmp rax
0x00000000000a58ee : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000012d42d : fdivr st(7) ; dec dword ptr [rcx] ; ret
0x000000000017fbad : fdivr st(7) ; ret
0x00000000000b97be : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000f33a5 : fdivrp st(6) ; ret
0x00000000000a7687 : ffreep st(1) ; call qword ptr [rdx]
0x0000000000187151 : ffreep st(5) ; std ; xlatb ; retf
0x000000000004c084 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000004e77f : fiadd dword ptr [rbp + 0x450f48ed] ; ret 0x8948
0x00000000000a5ff2 : fiadd dword ptr [rbx + 0x634901c0] ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x00000000000a7936 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000006f043 : fiadd dword ptr [rcx + 1] ; retf 0x8948
0x000000000018e712 : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000e71bb : fiadd dword ptr [rcx] ; fstp xword ptr [rcx] ; ret 0x9674
0x000000000008417d : fiadd dword ptr [rcx] ; rol byte ptr [rcx + rbp - 0x36], 0x39 ; ret 0x2b7c
0x00000000000a7193 : fiadd dword ptr [rdi + rcx - 0x4a] ; add byte ptr [r9 + 0xf], 0x93 ; ret
0x00000000000c07c2 : fiadd dword ptr [rsi + 0x39480012] ; ret
0x00000000000cc62d : fiadd word ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000000902ea : fiadd word ptr [rcx + rcx*4 - 1] ; mov eax, r9d ; syscall
0x000000000018d9de : fiadd word ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000130cb8 : fiadd word ptr [rip + 0x440f4800] ; ret 0xf6c3
0x0000000000130cb7 : fiadd word ptr gs:[rip + 0x440f4800] ; ret 0xf6c3
0x000000000007d9c7 : ficom word ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000013bf06 : fidiv word ptr [rdx] ; or eax, dword ptr [rax] ; syscall
0x000000000007ed33 : fidivr dword ptr [rcx] ; ret 0x820f
0x0000000000078638 : fidivr dword ptr [rcx] ; ret 0x830f
0x0000000000057568 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00000000000790c8 : fild dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a6baa : fild dword ptr [rbp - 0x77] ; ret 0x8948
0x0000000000130d99 : fild dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000df6f9 : fild dword ptr [rcx + 0xf] ; ret
0x000000000015d456 : fild dword ptr [rcx - 0x77] ; ret 0xf883
0x00000000000a80cd : fild dword ptr [rcx - 0x7d] ; ret
0x0000000000049985 : fild qword ptr [rdi] ; sbb al, byte ptr [rax] ; syscall
0x00000000000a766a : fild word ptr [rbp - 0x77] ; retf 0xffc1
0x00000000000ec481 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xf883
0x0000000000197b5f : fild word ptr [rcx - 0x73] ; ret
0x00000000000f1a05 : fild word ptr [rdi + rcx - 0x359cb800] ; jmp 0xf1a39
0x0000000000130bf8 : fild word ptr [rip + 0x440f4800] ; ret 0xf6c3
0x0000000000099972 : fimul dword ptr [rax + 0x21] ; ret 0x8949
0x000000000002ad0a : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000614d5 : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000006149a : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000010c1ec : fimul dword ptr [rax + 0x63] ; add al, 0x91 ; add rax, rcx ; jmp rax
0x0000000000045988 : fimul dword ptr [rax + 9] ; ret 0x8948
0x0000000000182466 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002cefb : fimul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000011baeb : fimul dword ptr [rax - 0x77] ; out dx, eax ; mov eax, 9 ; syscall
0x00000000000701de : fimul dword ptr [rax - 0x77] ; ret
0x0000000000048efc : fimul dword ptr [rax - 0x77] ; retf 0x4866
0x0000000000044a39 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000155bdb : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000013910b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000a80a8 : fimul dword ptr [rbp + 0x29] ; fld qword ptr [rbp + 1] ; ret 0x8341
0x00000000001971fd : fimul dword ptr [rbp - 0x77] ; retf
0x00000000000cc609 : fimul dword ptr [rcx + 0x29] ; ret 0xc149
0x00000000000aaeff : fimul dword ptr [rcx + 0x39] ; retf 0xf41
0x0000000000039e7c : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov edi, r12d ; call 0x1168d9
0x000000000017e952 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39df871
0x000000000017f9d2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39e08f1
0x00000000000f72fb : fimul dword ptr [rcx] ; ret 0x840f
0x0000000000044f06 : fimul dword ptr [rcx] ; ret 0xc889
0x00000000000613f2 : fimul dword ptr [rdi] ; test byte ptr [rax - 0x17fffffe], ah ; ret 0x279
0x000000000004d0fa : fimul word ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x00000000001282e6 : fimul word ptr [rax + 0xf] ; ret 0x8948
0x0000000000156fe1 : fimul word ptr [rax - 0x77] ; out dx, eax ; call qword ptr [rax]
0x0000000000067915 : fimul word ptr [rax - 0x77] ; ret
0x0000000000069902 : fimul word ptr [rax - 0x7d] ; ret
0x00000000000fff81 : fimul word ptr [rax - 0x7f] ; retf 0
0x0000000000058c2c : fimul word ptr [rbp + 0x11] ; retf
0x000000000009eada : fimul word ptr [rcx + rcx*4 - 0x3e] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ab991 : fimul word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000f3718 : fimul word ptr [rdi] ; mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000009cbe7 : fist word ptr [rax + rax] ; syscall
0x00000000000e2437 : fist word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000009cc46 : fist word ptr ss:[rax + rax] ; syscall
0x000000000009dff2 : fistp qword ptr [rax + 0xca] ; syscall
0x0000000000098520 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000197854 : fisttp dword ptr [rax + 0x39] ; retf
0x00000000000f2de4 : fisttp dword ptr [rax + 0x63] ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000004d4e4 : fisttp dword ptr [rax + 0xf] ; retf 0xf48
0x000000000013ea74 : fisttp dword ptr [rax + 1] ; ret
0x000000000019a102 : fisttp dword ptr [rax + 9] ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000059b35 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000124c67 : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc56f1 ; pop rbx ; ret
0x0000000000124c4d : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc570b ; pop rbx ; ret
0x00000000000c40af : fisttp dword ptr [rcx - 0x77] ; ret 0x48e9
0x0000000000059b4f : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000054951 : fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x00000000000c93e9 : fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000e948b : fisttp dword ptr [rcx - 0x77] ; test byte ptr [rdi], 0x94 ; ret
0x00000000001625fb : fisttp dword ptr [rcx] ; ret
0x000000000009342a : fisttp dword ptr [rcx] ; retf 0x8948
0x000000000004db58 : fisttp dword ptr [rdi] ; mov dl, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000140190 : fisttp dword ptr [rdi] ; ret 0x8b48
0x000000000013e851 : fisttp dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000006a364 : fisttp dword ptr [rdi] ; test dword ptr [rsi], edx ; retf 0xffff
0x00000000000a3699 : fisttp qword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000011d204 : fisttp qword ptr [rax - 0x77] ; out dx, eax ; call r12
0x00000000000e6220 : fisttp qword ptr [rax - 0x7d] ; ret 0x4901
0x00000000001620be : fisttp qword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x4fe9
0x00000000000ee440 : fisttp qword ptr [rcx - 0x77] ; ret
0x00000000000ee3f6 : fisttp qword ptr [rcx - 0x7d] ; ret
0x000000000014f0e3 : fisttp qword ptr [rdi] ; xchg eax, ebx ; ret 0x841
0x000000000005727f : fisttp word ptr [rax - 0x77] ; ret 0x8949
0x000000000003c06a : fisttp word ptr [rax - 0x7d] ; ret
0x000000000003beb3 : fisttp word ptr [rax - 0x7d] ; ret 0x4001
0x0000000000059bcf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000001480b3 : fisttp word ptr [rcx + rcx*4 - 0x17] ; call r10
0x00000000000853b9 : fisttp word ptr [rcx - 0x173fce3e] ; ret
0x000000000003b241 : fisttp word ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cc0db : fisttp word ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000a9218 : fisttp word ptr [rdi] ; xchg eax, ebx ; ret 0x841
0x0000000000188d7d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000191a31 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f766b : fisub dword ptr [rsi - 0x7f] ; loope 0xf7676 ; add esi, esi ; ret
0x00000000001988a6 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x0000000000191731 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018ffd1 : fisubr word ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000e1075 : fld dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000cafe1 : fld dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000000a85e8 : fld dword ptr [rcx - 0x7d] ; enter 0x4480, -0x78 ; ret 0xb841
0x00000000000d5471 : fld dword ptr [rdi + 0xf] ; mov bh, 0x4c ; dec byte ptr [rbp - 0x77] ; retf
0x000000000011dc97 : fld dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000115d78 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a80ab : fld qword ptr [rbp + 1] ; ret 0x8341
0x0000000000130d78 : fld qword ptr [rip + 0x440f4800] ; ret 0xf6c3
0x000000000004436e : fld st(3) ; ret
0x000000000018b9e6 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x000000000018ba42 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000d9db4 : fld xword ptr [rcx] ; ret
0x0000000000045180 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x00000000000450dc : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000045042 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000044f5d : fld xword ptr [rsp + 8] ; ret
0x0000000000044fcc : fld xword ptr [rsp - 0x18] ; ret
0x00000000000a3a93 : fldenv [rip + 0xf48000d] ; ret 0xfc3
0x00000000000d1459 : fldenv [rsi + 0xf] ; jbe 0xd14b6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af249 : fldenv [rsi + 0xf] ; je 0xaf2a6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af537 : fldenv [rsi + 0xf] ; je 0xaf594 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000191ab1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000af141 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000d263c : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000058c94 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000be847 : fmul dword ptr [rax + 9] ; retf 0x4466
0x00000000000529a8 : fmul dword ptr [rax - 0x39] ; ret
0x000000000008d2ce : fmul dword ptr [rax - 0x77] ; ret
0x00000000000eb056 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000106577 : fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x000000000015bb11 : fmul dword ptr [rax - 9] ; fadd dword ptr [rbx + 0x14807e0] ; ret
0x000000000006eff1 : fmul dword ptr [rbx + 0xf660446] ; insb byte ptr [rdi], dx ; ret
0x00000000000a6e29 : fmul dword ptr [rcx + rbp - 0x38] ; add r10, rax ; jmp 0xa6de6
0x000000000011fe4c : fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x00000000000ef146 : fmul dword ptr [rcx + rcx*4 - 1] ; call 0xebb56
0x00000000000cb73a : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000012811c : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x0000000000069710 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000ecefa : fmul qword ptr [rax - 0x77] ; retf
0x00000000000e1593 : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000ac2e9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000b014f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000ee1af : fmul qword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c28d6 : fmul qword ptr [rip - 0x76b80000] ; retf 0x8548
0x000000000019c04e : fnsave dword ptr [rbp - 0x11] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018b9e4 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000169370 : fnstcw word ptr [rsi] ; jmp r9
0x0000000000190a37 : fnstcw word ptr [rsi] ; jmp rcx
0x00000000000d6cd3 : fnstenv [rcx + 0x11] ; add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x1171
0x000000000007b5b1 : fnstenv [rcx] ; fucomi st(1) ; ret 0xfff1
0x000000000004519a : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000191831 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000450e0 : fscale ; fstp st(1) ; ret
0x0000000000142943 : fsincos ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e2607 : fst qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000144d8e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a53d6 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e467b : fstp dword ptr [rdx - 0x7bf0fff0] ; retf 0xfffe
0x000000000013b74f : fstp qword ptr [rbx - 0x76b70012] ; ret
0x000000000004519c : fstp st(0) ; and eax, 0x200 ; ret
0x00000000000450e2 : fstp st(1) ; ret
0x00000000000a3741 : fstp xword ptr [rax + 0xf48000e] ; ret 0x66c3
0x00000000000eca72 : fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xeca56
0x00000000000e71bd : fstp xword ptr [rcx] ; ret 0x9674
0x0000000000045040 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x000000000004508e : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000044fca : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000466fc : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000466c8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000004519d : fsub dword ptr [rip + 0x200] ; ret
0x0000000000066eaf : fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000090724 : fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0xf66
0x0000000000191b31 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b5764 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000be98b : fsub qword ptr [rsi + 0xf] ; jmp 0xbe957
0x0000000000191931 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b47ec : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000019c49c : fsub st(3), st(0) ; mov cl, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119bd2 : fsubp st(1) ; retf
0x00000000001878a3 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000045046 : fsubrp st(1) ; ret
0x000000000015cdbf : fucomi st(0) ; retf
0x00000000000f2643 : fucomi st(1) ; ret
0x000000000007b5b3 : fucomi st(1) ; ret 0xfff1
0x000000000011ff0d : fucomi st(3) ; or al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000def77 : fucomip st(0) ; ret
0x000000000008fb78 : fucomip st(0) ; ret 0x36
0x00000000000f9ab8 : fucomip st(0) ; ret 0xfff4
0x000000000007d2ff : fucomip st(0) ; retf
0x00000000000855a0 : fucomip st(0) ; retf 0x20
0x00000000000f83b9 : fucomip st(0) ; sal r10d, 1 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000013b7a6 : fucomip st(0) ; xchg eax, esp ; jne 0x13b7b6 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000a4e73 : fyl2xp1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000001859b9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009c20b : hlt ; adc dword ptr [rax], eax ; call 0x98465
0x000000000002dcd2 : hlt ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000001868b9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ab9f3 : hlt ; cmp ecx, esi ; je 0xab9ed ; ret
0x00000000000d7568 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e237a : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011bed6 : hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x000000000006c39e : hlt ; jmp 0x68ddb
0x0000000000105cee : hlt ; jne 0x105ce6 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000105ced : hlt ; jne 0x105ce7 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000195f85 : hlt ; jne 0x1960a7 ; ret
0x0000000000195f84 : hlt ; jne 0x1960a8 ; ret
0x000000000011c41b : hlt ; lcall [rax + 0x4c] ; mov eax, esp ; pop rdx ; pop r12 ; ret
0x00000000000abc32 : hlt ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abd0a : hlt ; mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000abb6d : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000017074a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b3ce : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e5fde : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000195593 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000000ab9bb : hlt ; ret
0x0000000000125363 : hlt ; ret 0x4566
0x0000000000125391 : hlt ; ret 0xf66
0x0000000000039058 : hlt ; ret 0xfffe
0x0000000000125395 : hlt ; retf 0x4166
0x000000000012535e : hlt ; retf 0x4466
0x0000000000195597 : hlt ; sub eax, edx ; ret
0x0000000000077f43 : idiv bh ; call qword ptr [rax]
0x000000000007f5b9 : idiv bh ; dec dword ptr [rax + 0x29] ; ret 0xf48
0x000000000007905c : idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000007e872 : idiv bh ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000000d6737 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000056df6 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000007ea80 : idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x00000000001999b8 : idiv bh ; dec dword ptr [rbp - 0x76b63fb6] ; ret 0xd349
0x000000000007825d : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8445
0x0000000000078213 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x0000000000078293 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000007f1fa : idiv bh ; inc dword ptr [rcx] ; retf
0x000000000007914d : idiv bh ; inc edi ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000007d8ad : idiv bh ; inc esi ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000007d8b3 : idiv bh ; jmp qword ptr [rax]
0x00000000000bfacb : idiv bh ; pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011638f : idiv byte ptr [rax + 0x118] ; syscall
0x000000000015d84e : idiv byte ptr [rcx] ; retf 0x850f
0x000000000012ae71 : idiv byte ptr [rdi + 0x2000004] ; call rax
0x000000000002a87a : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000049c2e : idiv dword ptr [rax + 0xca] ; syscall
0x0000000000091495 : idiv dword ptr [rdi] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000abfd0 : idiv edi ; add rsp, 8 ; ret
0x0000000000131f0c : idiv edi ; call qword ptr [rax - 0x3c0776b8]
0x000000000007eaf6 : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000007da35 : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x2675
0x00000000000788e1 : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000dbc65 : idiv edi ; dec dword ptr [rax + 1] ; ret
0x000000000010b929 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x2e74
0x000000000010b738 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000010b4b5 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007dfac : idiv edi ; dec dword ptr [rax - 0x77] ; retf
0x000000000007f28a : idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000001246ff : idiv edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000078d95 : idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000078411 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000078042 : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x00000000001246f3 : idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x0000000000078c1d : idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000007801f : idiv edi ; inc dword ptr [rcx] ; ret
0x0000000000077eb1 : idiv edi ; jmp qword ptr [rax]
0x000000000004a64a : idiv esi ; ret
0x0000000000078c1c : idiv rdi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000004a649 : idiv rsi ; ret
0x000000000009f180 : imul al ; cli ; retf 7
0x0000000000036f42 : imul al ; mov byte ptr [rbx + 0xe], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009e8f7 : imul al ; ret
0x000000000007f575 : imul cl ; or eax, 0xf6fffff8 ; ret 0xf10
0x0000000000061935 : imul cl ; ret 0xfffb
0x00000000000b8fb8 : imul cl ; ret 8
0x00000000000dffdd : imul cl ; retf 0xffef
0x00000000000f9179 : imul dword ptr [rcx] ; ret
0x0000000000197a87 : imul dword ptr [rcx] ; ret 0xd189
0x00000000000eb7b1 : imul eax ; jns 0xeb758 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e6dae : imul eax ; or al, 0xe6 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004ba27 : imul eax ; ret
0x000000000013a418 : imul eax ; ret 0xeeaf
0x000000000008c988 : imul eax ; ret 0xf989
0x0000000000038768 : imul eax ; ret 0xfecb
0x00000000000e08bf : imul eax ; retf
0x0000000000070060 : imul eax ; retf 0xb61
0x00000000000ca267 : imul eax, dword ptr [rax + rbp*8], 0x32 ; retf
0x00000000000e0f55 : imul eax, dword ptr [rcx + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e0ffc : imul eax, dword ptr [rcx + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000004c3b1 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x00000000001940f1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000000a71f3 : imul eax, dword ptr [rcx], 0x634c0000 ; ret 0x7a8d
0x00000000000aeed7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000d5464 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi + rcx - 0x49], al ; retf
0x00000000000d9ca4 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi], cl ; ret
0x0000000000198f33 : imul eax, dword ptr [rdi], 0x89480000 ; ret 0x8949
0x00000000000ae8d7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000196126 : imul eax, edi ; shr rax, 0x38 ; ret
0x000000000015aba1 : imul ebp, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000008395a : imul ebp, dword ptr [rsp + rcx*2], -0x77 ; ret 0x8348
0x000000000014ce6b : imul ebx, dword ptr [rax + 0x48], -0x77 ; ret 0x2948
0x000000000012ac14 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090646 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ab74 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000168797 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000008c744 : imul ecx, dword ptr [rcx + 0x2b], 0x47 ; and byte ptr [rax + 1], cl ; ret
0x00000000001827d7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x00000000001693a3 : imul ecx, dword ptr [rdi], 0x39480008 ; retf 0x8949
0x00000000000ae5d7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000012aa85 : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000151599 : imul edi, dword ptr [rdi - 0x72b7fffa], 0x3d ; retf 0x64e
0x0000000000199745 : imul edi, ebx, -1 ; dec dword ptr [rcx - 0x77] ; ret 0x8948
0x0000000000098261 : imul edi, edi, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8d49
0x00000000000a913f : imul edi, esp, 0x894cffff ; ret 0xf41
0x000000000012abc4 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000adfd7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000000adcd7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000000ad9d7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000048a2c : imul edx, ebp ; call 0x25505
0x000000000009ba13 : imul esi, ecx, 0x39480014 ; ret
0x00000000000716f4 : imul esi, edx, -1 ; inc dword ptr [rcx - 9] ; ret
0x00000000000965d9 : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000176224 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000005494c : imul esp, edx, -1 ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x0000000000196125 : imul rax, rdi ; shr rax, 0x38 ; ret
0x0000000000048a2b : imul rdx, rbp ; call 0x25506
0x000000000013ac5a : in al, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000195fb8 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e0138 : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000002cf9f : in al, 0x29 ; ret
0x000000000019a66a : in al, 0x38 ; retf 0x840f
0x0000000000142388 : in al, 0x44 ; mov eax, edx ; ret
0x000000000014c426 : in al, 0x48 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x00000000000676e1 : in al, 0x4a ; movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x00000000000d3242 : in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x0000000000033504 : in al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001104ba : in al, 0x5b ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000037b75 : in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000a3546 : in al, 0x5d ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000067c87 : in al, 0x74 ; and al, byte ptr [rbx - 0x61f43] ; call qword ptr [rax]
0x00000000000b9b9c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000158c73 : in al, 0x74 ; ret
0x00000000000a5ca1 : in al, 0x74 ; ret 0x1f0f
0x000000000011f23d : in al, 0x75 ; cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000c16a3 : in al, 0x75 ; ret 0x894c
0x000000000011da3d : in al, 0x75 ; sub byte ptr [rax - 0x75], cl ; jge 0x11da4b ; call rbx
0x00000000000e0e8b : in al, 0xeb ; retf
0x0000000000126f69 : in al, 0xef ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000078047 : in al, 0xf ; lahf ; ret
0x0000000000158304 : in al, 0xf ; xchg eax, esp ; ret 0x854d
0x000000000017072a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000bf1d2 : in al, 0xf3 ; ret
0x00000000000c40ab : in al, 0xff ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0x48e9
0x000000000019b9b1 : in al, 4 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000130cd8 : in al, 6 ; add al, 0 ; cmovne rax, rdx ; ret
0x00000000000baa38 : in al, 6 ; add byte ptr [rax], al ; ret
0x000000000009bedf : in al, dx ; adc al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x000000000009bf47 : in al, dx ; adc al, 0 ; syscall
0x000000000009c60a : in al, dx ; adc byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000098464 : in al, dx ; adc byte ptr [rcx - 0x77], al ; ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x00000000000cf83e : in al, dx ; adc eax, 0x89480000 ; retf 0xf66
0x0000000000154da9 : in al, dx ; add byte ptr [rcx + rcx*4 - 0x40], 0x5d ; ret
0x0000000000077ef1 : in al, dx ; add dword ptr [rax - 0x8ff43], eax ; jmp qword ptr [rax]
0x0000000000181b30 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000007616e : in al, dx ; add eax, ebp ; retf
0x000000000015d6da : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000015e3a6 : in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000016429e : in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8b64
0x0000000000158300 : in al, dx ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0x00000000000a2980 : in al, dx ; jae 0xa2997 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000011a0db : in al, dx ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000016b3ca : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000abc4a : in al, dx ; mov word ptr [rax + 4], dx ; ret
0x0000000000170b2a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a2350 : in al, dx ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000091492 : in al, dx ; or al, ch ; idiv dword ptr [rdi] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000460ce : in al, dx ; or al, ch ; retf
0x0000000000055ca0 : in al, dx ; or al, ch ; sbb esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d2a93 : in al, dx ; or al, ch ; xchg byte ptr [rdx], ch ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000131cbb : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x976
0x000000000012b1ea : in al, dx ; or byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x0000000000182854 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000131ba6 : in al, dx ; or byte ptr [rcx - 0x77], cl ; retf 0x8944
0x0000000000136759 : in al, dx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000091302 : in al, dx ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000004b570 : in al, dx ; ret
0x00000000000272d8 : in al, dx ; sbb byte ptr [rax], al ; ret
0x0000000000110d59 : in al, dx ; sbb byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00000000000c23a6 : in al, dx ; setne dl ; jmp 0xc23bc
0x00000000000c4d56 : in al, dx ; setne dl ; jmp 0xc4d6c
0x00000000000c7576 : in al, dx ; setne dl ; jmp 0xc758c
0x00000000000cee16 : in al, dx ; setne dl ; jmp 0xcee2c
0x000000000007ce40 : in al, dx ; test dl, bh ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000888b7 : in eax, 0 ; add byte ptr [rax], 0 ; jne 0x88886 ; jmp 0x88859
0x00000000001300d5 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f8862 : in eax, 0x48 ; mov edi, dword ptr [rbp - 0x70] ; call 0x25357
0x000000000018714f : in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x000000000010904f : in eax, 0x74 ; mov cl, byte ptr [rcx + rcx*4 - 0x11] ; call 0x25358
0x0000000000109080 : in eax, 0x74 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x25358
0x000000000018f840 : in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000092572 : in eax, 0x83 ; retf 0x8310
0x0000000000151763 : in eax, 0x89 ; ret
0x0000000000162d0a : in eax, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006249e : in eax, 0xdf ; loopne 0x6242f ; ret
0x0000000000108781 : in eax, 0xe8 ; leave ; retf
0x00000000000d2cb3 : in eax, 0xf ; je 0xd2cd8 ; add rax, 2 ; ret
0x00000000000bf339 : in eax, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000001707aa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000110e8d : in eax, 1 ; jne 0x110ee1 ; mov eax, 0x10c ; syscall
0x00000000000e83c2 : in eax, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015ffce : in eax, 3 ; or dword ptr [rax], eax ; add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x000000000016bd8f : in eax, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000012a9c4 : in eax, 8 ; add byte ptr [rax + 0x29], cl ; retf 0x1e8
0x0000000000060ac2 : in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000011c853 : in eax, dx ; add ecx, ebx ; ret
0x0000000000149f68 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000014f52a : in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011da7e : in eax, dx ; jne 0x11dad7 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011daae : in eax, dx ; jne 0x11db37 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000019bba5 : in eax, dx ; jne 0x19bb97 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a5da : in eax, dx ; jne 0x4a5a9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097dcb : in eax, dx ; jne 0x97e03 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be8a2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000000be269 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be27f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2a1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2bf : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be2df : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be305 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be321 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be341 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be361 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be387 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3a9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3c7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be3e7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be403 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be423 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be443 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be463 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be489 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be4d9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be1af : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1cd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1ed : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be20f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be22f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be24f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000be0e5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000be0f7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be10d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be125 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be13b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be14d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000be16b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be177 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000be18d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be0d1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000016b1da : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000eb2e2 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000170baa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001863c0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012231e : in eax, dx ; pop rax ; pop rdi ; call rax
0x0000000000089e92 : in eax, dx ; ret
0x00000000000be9f2 : in eax, dx ; sub rax, 1 ; ret
0x00000000001971f9 : in eax, dx ; xor cl, byte ptr [rbp + 0x21] ; fimul dword ptr [rbp - 0x77] ; retf
0x00000000000a1a02 : in eax, dx ; xor eax, eax ; ret
0x00000000001936ec : inc bl ; cmp dl, 1 ; jb 0x1936fe ; mov byte ptr [rdi], cl ; ret
0x0000000000056caf : inc byte ptr [r11 - 0x6bf00220] ; ret 0xf983
0x000000000013f933 : inc byte ptr [rax + 0xf000000] ; ret 0xfc3
0x0000000000122da5 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000056cb0 : inc byte ptr [rbx - 0x6bf00220] ; ret 0xf983
0x00000000000332d9 : inc byte ptr [rbx] ; je 0x332e4 ; ret
0x00000000000c2c8d : inc byte ptr [rcx + 0x29] ; ret
0x00000000000c7e78 : inc byte ptr [rcx + 0x29] ; sar dword ptr [rcx], cl ; ret 0x1d74
0x00000000000e00f5 : inc byte ptr [rcx] ; je 0xe0106 ; xor eax, eax ; ret
0x000000000013950e : inc byte ptr [rdi] ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000008feee : inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000ab7c9 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x0000000000033bd2 : inc dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000038c72 : inc dword ptr [rax - 0x76b7bcc8] ; ret
0x00000000000eb2f8 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000000e840b : inc dword ptr [rax - 0x7af0f506] ; ret
0x000000000007889a : inc dword ptr [rax - 0x8ff43] ; jmp qword ptr [rax]
0x000000000007f056 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x00000000001988a2 : inc dword ptr [rax] ; add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x000000000019748b : inc dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000078413 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000066cf6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000bf2e0 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000c9c69 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xc9c7c ; mov eax, r8d ; ret
0x00000000000e7fe9 : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000192047 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000122e35 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000198754 : inc dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000198821 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000198940 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000100f68 : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001248b8 : inc dword ptr [rax] ; mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x0000000000132ee0 : inc dword ptr [rax] ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x00000000000ab7ca : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x000000000011a078 : inc dword ptr [rax] ; mov rax, r8 ; ret
0x0000000000045c58 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000011a0fa : inc dword ptr [rax] ; ret
0x00000000000e0e88 : inc dword ptr [rbp + 0x31] ; in al, 0xeb ; retf
0x00000000000718b3 : inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x718d4
0x0000000000073d34 : inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x73d55
0x00000000001387aa : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x000000000002f4b9 : inc dword ptr [rbp + 0x31] ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x00000000000f0915 : inc dword ptr [rbp + 0x31] ; shl byte ptr [rsi + 0xf], cl ; outsb dx, byte ptr [rsi] ; ret
0x0000000000156b54 : inc dword ptr [rbp + 0x5b0775db] ; pop rbp ; pop r12 ; ret
0x00000000000a6a2e : inc dword ptr [rbp + rcx*4 + 0x60] ; add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x000000000010f837 : inc dword ptr [rbp - 0x74f38a40] ; push rbx ; add al, 0xeb ; ret
0x000000000006c398 : inc dword ptr [rbp - 0x77] ; clc ; mov r12, r14 ; jmp 0x68de1
0x000000000013dd32 : inc dword ptr [rbp - 0x77] ; ret
0x00000000000a7dc9 : inc dword ptr [rbp - 0x77] ; ret 0x8d4e
0x00000000000df6f6 : inc dword ptr [rbp - 0x7b] ; fild dword ptr [rcx + 0xf] ; ret
0x0000000000078044 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x00000000000ddece : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf
0x000000000011abbc : inc dword ptr [rbp - 0x7cc08b40] ; ret
0x00000000000714be : inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7d], al ; retf
0x00000000000714aa : inc dword ptr [rbx + rcx*4 + 0x63] ; or byte ptr [rcx - 0x7f], al ; retf
0x000000000002b588 : inc dword ptr [rbx - 0x16feeb93] ; retf
0x000000000007a73e : inc dword ptr [rbx - 0x427cfe20] ; call 0x1107a74c
0x0000000000081c9f : inc dword ptr [rbx - 0x4f743] ; jmp qword ptr [rax]
0x00000000001301e1 : inc dword ptr [rbx - 0x76b6fd01] ; retf 0x440f
0x00000000000ab50d : inc dword ptr [rbx - 0x76be071f] ; retf
0x0000000000074252 : inc dword ptr [rbx - 0x78f0d008] ; ret
0x0000000000082d31 : inc dword ptr [rbx - 0x78f0d008] ; ret 3
0x0000000000042a62 : inc dword ptr [rbx - 0x7af0fe08] ; jmp rbx
0x0000000000042e5c : inc dword ptr [rbx - 0x7af0fe08] ; ret 0xfff2
0x000000000003ea03 : inc dword ptr [rbx - 0x7af0fe08] ; retf
0x000000000009365b : inc dword ptr [rbx - 0x7ebf8bb3] ; retf 0
0x00000000000782e4 : inc dword ptr [rbx - 0x90743] ; call qword ptr [rax]
0x000000000013e787 : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000004b078 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000bf3bb : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000bf30c : inc dword ptr [rbx] ; ret
0x000000000015fd59 : inc dword ptr [rcx + 0x5c] ; pop r13 ; ret
0x00000000000d9202 : inc dword ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000162bcc : inc dword ptr [rcx + 0xf] ; mov dh, 0x4a ; add al, 0x89 ; retf 0xeac0
0x000000000007fa05 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000006f800 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x000000000006230d : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8545
0x0000000000152649 : inc dword ptr [rcx + 0xfffb] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x0000000000112bc6 : inc dword ptr [rcx + 0xfffe1] ; add byte ptr [rcx], cl ; retf 0xea81
0x000000000007b5ae : inc dword ptr [rcx + 1] ; fnstenv [rcx] ; fucomi st(1) ; ret 0xfff1
0x0000000000081aef : inc dword ptr [rcx + 1] ; retf
0x00000000001246f5 : inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x0000000000115a1e : inc dword ptr [rcx + rcx*4 - 0x11] ; call 0x111ce6
0x00000000000ebaf3 : inc dword ptr [rcx + rcx*4 - 0x17] ; jmp 0xebac1
0x00000000000ed824 : inc dword ptr [rcx + rcx*4 - 0x17] ; jmp 0xed7f2
0x00000000000e5e6e : inc dword ptr [rcx + rcx*4 - 0x18] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084f93 : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9d19 : inc dword ptr [rcx + rcx*4 - 0x38] ; pop rbx ; ret
0x00000000000902ed : inc dword ptr [rcx + rcx*4 - 0x38] ; syscall
0x00000000000884a1 : inc dword ptr [rcx + rcx*4 - 0x40] ; pop rbp ; pop r12 ; ret
0x0000000000057e95 : inc dword ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000003dbc0 : inc dword ptr [rcx - 0x75] ; add byte ptr [rbx - 0x7bf0fd08], al ; call qword ptr [rcx]
0x0000000000040794 : inc dword ptr [rcx - 0x75] ; add byte ptr [rbx - 0x7bf0fd08], al ; retf 8
0x0000000000067912 : inc dword ptr [rcx - 0x77] ; fimul word ptr [rax - 0x77] ; ret
0x0000000000105e74 : inc dword ptr [rcx - 0x77] ; ret 0xce0f
0x000000000005b892 : inc dword ptr [rcx - 0x77] ; retf 0xd348
0x00000000000a789e : inc dword ptr [rcx - 0x7d] ; ret
0x000000000006f4f0 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000011bb3e : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000006f6c2 : inc dword ptr [rcx - 0x7f] ; retf
0x00000000000705a0 : inc dword ptr [rcx - 0xa] ; ret
0x0000000000078c1f : inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000006ffb4 : inc dword ptr [rcx - 9] ; ret
0x0000000000080190 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000015d77a : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000081683 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x00000000000eaab9 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000078021 : inc dword ptr [rcx] ; ret
0x000000000007b189 : inc dword ptr [rcx] ; retf
0x0000000000196270 : inc dword ptr [rdi] ; add byte ptr [rax + 0x21], cl ; ret 0x8548
0x000000000018955d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000044f2d : inc eax ; shr eax, 0x1f ; ret
0x00000000001884ec : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000164267 : inc ebx ; mov eax, 0xfffffffe ; ret
0x0000000000195a89 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ddb3e : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000deb35 : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000de7d0 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007914f : inc edi ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x0000000000119301 : inc esi ; jmp qword ptr [r8]
0x0000000000140bd5 : inc esi ; rol byte ptr [r8], 0xc6 ; ret
0x0000000000077ead : inc esi ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000007d8af : inc esi ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000182fd4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000154eed : insb byte ptr [rdi], dx ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000108874 : insb byte ptr [rdi], dx ; and al, 0x50 ; shl rdi, 3 ; call 0x25339
0x000000000004508b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000044fcd : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000045181 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000450dd : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000045043 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x0000000000044f5e : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000007e742 : insb byte ptr [rdi], dx ; cli ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000e4148 : insb byte ptr [rdi], dx ; lahf ; adc byte ptr [rax], al ; syscall
0x0000000000143f53 : insb byte ptr [rdi], dx ; mov ch, 0xa ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000150328 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000028e83 : insb byte ptr [rdi], dx ; ret
0x000000000005ae18 : insb byte ptr [rdi], dx ; ret 0x110f
0x000000000014dfb2 : insb byte ptr [rdi], dx ; ret 0x290f
0x0000000000163aaa : insb byte ptr [rdi], dx ; ret 0x44c7
0x000000000008cddd : insb byte ptr [rdi], dx ; ret 0x7589
0x00000000000551ed : insb byte ptr [rdi], dx ; ret 0x7c89
0x000000000010aec3 : insb byte ptr [rdi], dx ; ret 0x8948
0x00000000001636f6 : insb byte ptr [rdi], dx ; ret 0x8d48
0x0000000000028a13 : insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000090727 : insb byte ptr [rdi], dx ; ret 0xf66
0x000000000009c1f0 : insb byte ptr [rdi], dx ; ret 0xffff
0x000000000008cdb7 : insb byte ptr [rdi], dx ; retf
0x0000000000153bf2 : insb byte ptr [rdi], dx ; retf 0x290f
0x000000000015ac77 : insb byte ptr [rdi], dx ; retf 0x4866
0x000000000004afe6 : insb byte ptr [rdi], dx ; rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; adc dword ptr [rdi], eax ; ret
0x000000000008cf61 : insb byte ptr [rdi], dx ; ror byte ptr [rdi], 0x11 ; add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x0000000000098fdb : insb byte ptr [rdi], dx ; ror byte ptr [rdi], 0x11 ; add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x0000000000117d24 : insb byte ptr [rdi], dx ; ror dword ptr [rax - 0x75], 5 ; ret
0x000000000002a7fc : insb byte ptr [rdi], dx ; ror dword ptr [rdi], 0x11 ; ret
0x0000000000185c40 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001126ef : insd dword ptr [rdi], dx ; add al, ch ; retf 0x45
0x000000000004a2d3 : insd dword ptr [rdi], dx ; add byte ptr [rcx], al ; xor esi, esi ; mov rdi, r9 ; call r8
0x0000000000186b40 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000db5ee : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], al ; ret 0x8944
0x00000000000d42ec : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add cl, al ; stc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000fe5ae : insd dword ptr [rdi], dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000127c6b : insd dword ptr [rdi], dx ; or al, 0 ; syscall
0x000000000010bfaf : insd dword ptr [rdi], dx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000012e07f : insd dword ptr [rdi], dx ; ret
0x000000000015635f : insd dword ptr [rdi], dx ; retf 0xfffd
0x0000000000029128 : insd dword ptr [rdi], dx ; sbb al, 0 ; ret
0x0000000000108ff5 : insd dword ptr [rdi], dx ; sbb al, ch ; push rsp ; ret
0x000000000008c71d : insd dword ptr [rdi], dx ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000001488d2 : int 0x80
0x000000000002d0ad : int1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000061b16 : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000105ceb : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x105ce9 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000114788 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000114590 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000108f59 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000010d867 : int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 3
0x00000000001133ba : int1 ; dec dword ptr [rbp + rcx*4 + 0x24] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000113ac0 : int1 ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x0000000000095b8b : int1 ; ja 0x95b86 ; lea eax, [rdx + rdi] ; ret
0x00000000000ab9f5 : int1 ; je 0xab9eb ; ret
0x000000000019366f : int1 ; jl 0x1936c0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000193690 : int1 ; jl 0x1936e1 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001936a3 : int1 ; jl 0x1936f4 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000193778 : int1 ; jl 0x1937c9 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001937d0 : int1 ; jl 0x193821 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000019386d : int1 ; jl 0x1938be ; adc dword ptr [rsi + 7], edx ; ret
0x000000000008168a : int1 ; jmp rax
0x00000000000bf295 : int1 ; jmp rcx
0x00000000000aba71 : int1 ; jne 0xaba63 ; ret
0x000000000018e143 : int1 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000000bf276 : int1 ; mov eax, 0x80000006 ; cpuid ; jmp 0xbf24c
0x00000000000bf3be : int1 ; mov eax, eax ; ret
0x000000000017059b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b99f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c4f0 : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000003119f : int1 ; mov r10, rcx ; jmp 0x31154
0x00000000000313ff : int1 ; mov r10, rcx ; jmp 0x313b4
0x00000000000314ac : int1 ; mov r10, rcx ; jmp 0x3146d
0x000000000012ffde : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000147cbb : int1 ; mov rdi, r13 ; call r12
0x000000000008d891 : int1 ; mov rdi, r15 ; call r12
0x00000000000282c4 : int1 ; mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x0000000000081047 : int1 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000150295 : int1 ; movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x00000000000db4d7 : int1 ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000195563 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000126353 : int1 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000573ee : int1 ; pop rbx ; ret
0x0000000000124c6b : int1 ; push rsi ; or al, 0 ; pop rbx ; ret
0x00000000000c116e : int1 ; ret
0x000000000003f52b : int1 ; retf
0x0000000000195567 : int1 ; sub eax, edx ; ret
0x000000000018c693 : int1 ; vzeroupper ; ret
0x00000000001693a4 : invd ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000004a2da : iretd ; call r8
0x000000000011007e : iretd ; dec dword ptr [rcx + 0x75b8c6] ; add byte ptr [rax], al ; syscall
0x00000000001100a7 : iretd ; dec dword ptr [rcx + 0x77b8c6] ; add byte ptr [rax], al ; syscall
0x0000000000162f34 : iretd ; or byte ptr [rax], al ; call qword ptr [rax]
0x0000000000122125 : iretd ; sub rsp, 8 ; call rsi
0x0000000000105b7f : ja 0x105b8f ; setne al ; movzx eax, al ; ret
0x000000000010f3d0 : ja 0x10f432 ; ret
0x000000000010f480 : ja 0x10f4e2 ; ret
0x000000000010f9f5 : ja 0x10f9ff ; xor eax, eax ; ret
0x00000000001100ac : ja 0x1100b2 ; add byte ptr [rax], al ; syscall
0x000000000011045b : ja 0x11044d ; mov eax, r8d ; ret
0x00000000001104a7 : ja 0x110499 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110658 : ja 0x110628 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x0000000000110760 : ja 0x11076a ; ret
0x0000000000110751 : ja 0x110787 ; mov eax, 4 ; syscall
0x00000000001107bf : ja 0x1107ca ; ret
0x00000000001107b0 : ja 0x1107e7 ; mov eax, 5 ; syscall
0x0000000000110820 : ja 0x11082a ; ret
0x0000000000110811 : ja 0x110847 ; mov eax, 6 ; syscall
0x0000000000110ba8 : ja 0x110bb2 ; ret
0x0000000000110c0b : ja 0x110c12 ; ret
0x0000000000110c65 : ja 0x110c72 ; ret
0x0000000000110c56 : ja 0x110c8f ; mov eax, 0x106 ; syscall
0x0000000000110e9e : ja 0x110eaa ; ret
0x0000000000111278 : ja 0x1112d2 ; ret
0x000000000011131d : ja 0x111372 ; ret
0x00000000001113b1 : ja 0x1113ba ; ret
0x00000000001113e1 : ja 0x1113ea ; ret
0x0000000000111abd : ja 0x111b02 ; ret
0x0000000000111c3d : ja 0x111c82 ; ret
0x0000000000115a77 : ja 0x115a88 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000115bfd : ja 0x115c52 ; ret
0x0000000000116280 : ja 0x1162fa ; ret
0x0000000000116349 : ja 0x116352 ; ret
0x000000000011639d : ja 0x1163a2 ; ret
0x0000000000116470 : ja 0x1164d2 ; ret
0x0000000000116520 : ja 0x116582 ; ret
0x00000000001165c1 : ja 0x1165ca ; ret
0x0000000000116731 : ja 0x11673a ; ret
0x00000000001168b1 : ja 0x1168ba ; ret
0x00000000001168de : ja 0x1168ea ; ret
0x0000000000116914 : ja 0x116922 ; ret
0x0000000000116951 : ja 0x11695a ; ret
0x00000000001169c7 : ja 0x1169d3 ; ret
0x0000000000116a10 : ja 0x116a1c ; ret
0x0000000000116e37 : ja 0x116e8a ; ret
0x000000000011704a : ja 0x117052 ; ret
0x000000000011708b : ja 0x117092 ; ret
0x0000000000117570 : ja 0x11759c ; xor eax, eax ; ret
0x00000000001176bd : ja 0x117712 ; ret
0x000000000011775d : ja 0x1177b2 ; ret
0x0000000000117803 : ja 0x11786a ; ret
0x00000000001178c3 : ja 0x11792a ; ret
0x0000000000117e68 : ja 0x117e6e ; add byte ptr [rax], al ; syscall
0x0000000000118250 : ja 0x1182c2 ; ret
0x000000000011847d : ja 0x1184c2 ; ret
0x000000000011853d : ja 0x118582 ; ret
0x00000000001185fd : ja 0x118602 ; ret
0x0000000000119cd1 : ja 0x119cda ; ret
0x0000000000119eb6 : ja 0x119ec2 ; ret
0x0000000000119ef1 : ja 0x119efa ; ret
0x0000000000119f21 : ja 0x119f2a ; ret
0x000000000011bafc : ja 0x11bb64 ; pop rbx ; pop rbp ; ret
0x000000000011bbfd : ja 0x11bc52 ; ret
0x000000000011f6d8 : ja 0x11f6e2 ; ret
0x0000000000122391 : ja 0x12239a ; ret
0x0000000000122436 : ja 0x1224aa ; ret
0x00000000001224e9 : ja 0x1224f2 ; ret
0x0000000000122620 : ja 0x122682 ; ret
0x00000000001226d0 : ja 0x122732 ; ret
0x0000000000122780 : ja 0x1227e2 ; ret
0x0000000000122830 : ja 0x1228aa ; ret
0x00000000001228fd : ja 0x122952 ; ret
0x00000000001229c5 : ja 0x122a00 ; mov r8d, eax ; mov eax, r8d ; ret
0x0000000000122a29 : ja 0x122a32 ; ret
0x00000000001232fd : ja 0x123352 ; ret
0x00000000001233cd : ja 0x123422 ; ret
0x0000000000123536 : ja 0x1235a2 ; ret
0x00000000001235f0 : ja 0x123662 ; ret
0x00000000001236ad : ja 0x123702 ; ret
0x0000000000123756 : ja 0x1237c2 ; ret
0x000000000012380d : ja 0x123862 ; ret
0x00000000001238b0 : ja 0x12392a ; ret
0x0000000000123d10 : ja 0x123d72 ; ret
0x0000000000123dc0 : ja 0x123e2a ; ret
0x0000000000123e70 : ja 0x123ed2 ; ret
0x0000000000124010 : ja 0x124072 ; ret
0x00000000001240c0 : ja 0x124132 ; ret
0x0000000000124171 : ja 0x12417a ; ret
0x00000000001241a1 : ja 0x1241aa ; ret
0x00000000001241d1 : ja 0x1241da ; ret
0x0000000000124201 : ja 0x12420a ; ret
0x00000000001242d4 : ja 0x1242e2 ; ret
0x0000000000124311 : ja 0x12431a ; ret
0x0000000000124341 : ja 0x12434a ; ret
0x0000000000124374 : ja 0x124382 ; ret
0x00000000001243b1 : ja 0x1243ba ; ret
0x0000000000127207 : ja 0x12721a ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000127206 : ja 0x12721b ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000128cf7 : ja 0x128d0a ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000001300e1 : ja 0x1300ea ; ret
0x0000000000130175 : ja 0x130145 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000013019b : ja 0x1301a2 ; ret
0x000000000013018c : ja 0x1301bf ; mov eax, 0xe3 ; syscall
0x0000000000131b13 : ja 0x131b22 ; ret
0x0000000000131b07 : ja 0x131b38 ; xor eax, eax ; syscall
0x0000000000132d4b : ja 0x132d5e ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000013f536 : ja 0x13f53b ; ret
0x000000000013f7f2 : ja 0x13f7e3 ; mov eax, 0xffffffff ; ret
0x0000000000149495 : ja 0x1494e8 ; mov rdi, r8 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000014a6df : ja 0x14a730 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014c515 : ja 0x14c506 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015a6e6 : ja 0x15a705 ; mov eax, r8d ; ret
0x000000000015a71e : ja 0x15a73d ; mov rax, r8 ; ret
0x000000000018e85e : ja 0x18e82a ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000018ec08 : ja 0x18ec4e ; jb 0x18ec1a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018f0f5 : ja 0x18f12c ; jb 0x18f104 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000190949 : ja 0x190917 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000193447 : ja 0x19344b ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000193998 : ja 0x1939f6 ; jb 0x1939aa ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000193fbd : ja 0x194002 ; jb 0x193fcc ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000466b7 : ja 0x466c2 ; ret
0x0000000000046726 : ja 0x46732 ; ret
0x0000000000046772 : ja 0x467c2 ; ret
0x000000000004b52d : ja 0x4b582 ; ret
0x0000000000055cae : ja 0x55cce ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000055cad : ja 0x55ccf ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005e78d : ja 0x5e765 ; mov rax, r8 ; ret
0x0000000000061b03 : ja 0x61aed ; mov eax, r8d ; ret
0x0000000000065f81 : ja 0x65f8a ; ret
0x0000000000065fb4 : ja 0x65fc2 ; ret
0x000000000008ae5c : ja 0x8ae55 ; lea eax, [rdx + rdi] ; ret
0x00000000000909e1 : ja 0x909f9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000956c0 : ja 0x95647 ; retf 0x6601
0x0000000000095b8c : ja 0x95b85 ; lea eax, [rdx + rdi] ; ret
0x000000000009aa45 : ja 0x9aa3e ; adc al, 0 ; call qword ptr [rax]
0x00000000000a20d0 : ja 0xa20e1 ; jb 0xa20e7 ; mov qword ptr [rdi], rsi ; ret
0x00000000000a53d5 : ja 0xa53b6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba027 : ja 0xba02d ; ret
0x00000000000ba043 : ja 0xba04d ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba084 : ja 0xba093 ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba109 : ja 0xba11d ; ret
0x00000000000ba15f : ja 0xba177 ; ret
0x00000000000ba1e1 : ja 0xba1fd ; ret
0x00000000000bb667 : ja 0xbb671 ; lea rax, [rdi + 2] ; ret
0x00000000000bb683 : ja 0xbb691 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000bb6d4 : ja 0xbb6e7 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000bb7b9 : ja 0xbb7d1 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb82f : ja 0xbb84b ; lea rax, [rdi + 0x14] ; ret
0x00000000000bb8b1 : ja 0xbb8d1 ; lea rax, [rdi + 0x18] ; ret
0x00000000000bd337 : ja 0xbd33d ; ret
0x00000000000bd353 : ja 0xbd35d ; mov dword ptr [rdi], ecx ; ret
0x00000000000bd394 : ja 0xbd3a3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000bd419 : ja 0xbd42d ; ret
0x00000000000bd46f : ja 0xbd487 ; ret
0x00000000000bd4f1 : ja 0xbd50d ; ret
0x00000000000bde27 : ja 0xbde2d ; ret
0x00000000000bde43 : ja 0xbde4d ; mov dword ptr [rdi], ecx ; ret
0x00000000000bde84 : ja 0xbde93 ; mov qword ptr [rdi], rcx ; ret
0x00000000000bdf09 : ja 0xbdf1d ; ret
0x00000000000bdf5f : ja 0xbdf77 ; ret
0x00000000000bdfe1 : ja 0xbdffd ; ret
0x00000000000beda8 : ja 0xbedd9 ; jb 0xbedba ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf1e7 : ja 0xbf204 ; jb 0xbf1f3 ; mov byte ptr [rdi], cl ; ret
0x00000000000d2519 : ja 0xd2539 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000d4061 : ja 0xd406a ; ret
0x00000000000e1081 : ja 0xe108a ; ret
0x00000000000e59ba : ja 0xe5a0a ; ret
0x00000000000e5a50 : ja 0xe5aaa ; ret
0x00000000000e5b43 : ja 0xe5bb2 ; ret
0x00000000000e5c9d : ja 0xe5cd2 ; ret
0x00000000000e5d1d : ja 0xe5d62 ; ret
0x00000000000e5fdc : ja 0xe6008 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e7433 : ja 0xe7439 ; add byte ptr [rax], al ; syscall
0x00000000000f764a : ja 0xf75dc ; pop rax ; or bh, dh ; ret
0x0000000000105911 : jae 0x105916 ; ret
0x0000000000105941 : jae 0x105946 ; ret
0x0000000000105971 : jae 0x105976 ; ret
0x00000000001059a1 : jae 0x1059a6 ; ret
0x00000000001059d1 : jae 0x1059d6 ; ret
0x0000000000105a01 : jae 0x105a06 ; ret
0x0000000000105a31 : jae 0x105a36 ; ret
0x0000000000105a61 : jae 0x105a66 ; ret
0x0000000000110681 : jae 0x110686 ; ret
0x0000000000110cb1 : jae 0x110cb6 ; ret
0x0000000000110ce1 : jae 0x110ce6 ; ret
0x0000000000110e11 : jae 0x110e16 ; ret
0x0000000000110e41 : jae 0x110e46 ; ret
0x0000000000110f01 : jae 0x110f06 ; ret
0x0000000000110f31 : jae 0x110f36 ; ret
0x0000000000111821 : jae 0x111826 ; ret
0x0000000000111b41 : jae 0x111b46 ; ret
0x0000000000111b71 : jae 0x111b76 ; ret
0x0000000000111ba1 : jae 0x111ba6 ; ret
0x0000000000111bd1 : jae 0x111bd6 ; ret
0x0000000000111c01 : jae 0x111c06 ; ret
0x0000000000111cc1 : jae 0x111cc6 ; ret
0x0000000000111cf1 : jae 0x111cf6 ; ret
0x0000000000112601 : jae 0x112606 ; ret
0x0000000000112631 : jae 0x112636 ; ret
0x0000000000112661 : jae 0x112666 ; ret
0x0000000000112694 : jae 0x112699 ; ret
0x0000000000112e51 : jae 0x112e56 ; ret
0x0000000000112e84 : jae 0x112e89 ; ret
0x0000000000112eb1 : jae 0x112eb6 ; ret
0x0000000000112ee1 : jae 0x112ee6 ; ret
0x0000000000112f11 : jae 0x112f16 ; ret
0x0000000000112f44 : jae 0x112f49 ; ret
0x0000000000112f71 : jae 0x112f76 ; ret
0x0000000000112fa1 : jae 0x112fa6 ; ret
0x0000000000112fd1 : jae 0x112fd6 ; ret
0x0000000000116244 : jae 0x116249 ; ret
0x0000000000116df9 : jae 0x116e0b ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000001170c1 : jae 0x1170c6 ; ret
0x00000000001174c1 : jae 0x1174c6 ; ret
0x0000000000117681 : jae 0x117686 ; ret
0x00000000001180c1 : jae 0x1180c6 ; ret
0x0000000000118211 : jae 0x118216 ; ret
0x0000000000118411 : jae 0x118416 ; ret
0x0000000000118441 : jae 0x118446 ; ret
0x0000000000118501 : jae 0x118506 ; ret
0x00000000001185c1 : jae 0x1185c6 ; ret
0x0000000000118901 : jae 0x118906 ; ret
0x0000000000118931 : jae 0x118936 ; ret
0x0000000000118961 : jae 0x118966 ; ret
0x000000000011b953 : jae 0x11b958 ; ret
0x000000000011bb91 : jae 0x11bb96 ; ret
0x000000000011bbc1 : jae 0x11bbc6 ; ret
0x000000000011bc91 : jae 0x11bc96 ; ret
0x000000000011bcc1 : jae 0x11bcc6 ; ret
0x000000000011bcf4 : jae 0x11bcf9 ; ret
0x000000000011bd21 : jae 0x11bd26 ; ret
0x000000000011bd51 : jae 0x11bd56 ; ret
0x000000000011bd81 : jae 0x11bd86 ; ret
0x000000000011bdb1 : jae 0x11bdb6 ; ret
0x000000000011ec86 : jae 0x11ecb1 ; mov rsi, r12 ; mov rdi, r15 ; call r14
0x000000000011ffa4 : jae 0x11ffa9 ; ret
0x000000000011ffd1 : jae 0x11ffd6 ; ret
0x0000000000120001 : jae 0x120006 ; ret
0x0000000000120034 : jae 0x120039 ; ret
0x0000000000120064 : jae 0x120069 ; ret
0x0000000000120091 : jae 0x120096 ; ret
0x00000000001200c4 : jae 0x1200c9 ; ret
0x00000000001200f1 : jae 0x1200f6 ; ret
0x0000000000120121 : jae 0x120126 ; ret
0x0000000000120154 : jae 0x120159 ; ret
0x0000000000120181 : jae 0x120186 ; ret
0x00000000001201b4 : jae 0x1201b9 ; ret
0x00000000001221f1 : jae 0x1221f6 ; ret
0x0000000000122221 : jae 0x122226 ; ret
0x0000000000122361 : jae 0x122366 ; ret
0x00000000001223c1 : jae 0x1223c6 ; ret
0x00000000001223f1 : jae 0x1223f6 ; ret
0x0000000000122521 : jae 0x122526 ; ret
0x00000000001225b4 : jae 0x1225b9 ; ret
0x00000000001225e1 : jae 0x1225e6 ; ret
0x0000000000122b01 : jae 0x122b06 ; ret
0x0000000000122b31 : jae 0x122b36 ; ret
0x0000000000122b74 : jae 0x122b79 ; ret
0x0000000000122ba1 : jae 0x122ba6 ; ret
0x0000000000122bd1 : jae 0x122bd6 ; ret
0x0000000000122c01 : jae 0x122c06 ; ret
0x0000000000122c31 : jae 0x122c36 ; ret
0x0000000000122c61 : jae 0x122c66 ; ret
0x0000000000122c91 : jae 0x122c96 ; ret
0x0000000000122cc1 : jae 0x122cc6 ; ret
0x0000000000122cf1 : jae 0x122cf6 ; ret
0x0000000000122d24 : jae 0x122d29 ; ret
0x0000000000122d51 : jae 0x122d56 ; ret
0x0000000000122d84 : jae 0x122d89 ; ret
0x0000000000122db1 : jae 0x122db6 ; ret
0x0000000000122de1 : jae 0x122de6 ; ret
0x0000000000122e11 : jae 0x122e16 ; ret
0x0000000000122e41 : jae 0x122e46 ; ret
0x0000000000122e71 : jae 0x122e76 ; ret
0x0000000000122ea4 : jae 0x122ea9 ; ret
0x0000000000122ed4 : jae 0x122ed9 ; ret
0x0000000000122f01 : jae 0x122f06 ; ret
0x0000000000122f31 : jae 0x122f36 ; ret
0x0000000000122f64 : jae 0x122f69 ; ret
0x0000000000122f94 : jae 0x122f99 ; ret
0x0000000000122fc4 : jae 0x122fc9 ; ret
0x0000000000122ff1 : jae 0x122ff6 ; ret
0x0000000000123021 : jae 0x123026 ; ret
0x0000000000123051 : jae 0x123056 ; ret
0x0000000000123081 : jae 0x123086 ; ret
0x00000000001230b4 : jae 0x1230b9 ; ret
0x00000000001230e1 : jae 0x1230e6 ; ret
0x0000000000123111 : jae 0x123116 ; ret
0x0000000000123144 : jae 0x123149 ; ret
0x0000000000123171 : jae 0x123176 ; ret
0x00000000001231a4 : jae 0x1231a9 ; ret
0x00000000001231d4 : jae 0x1231d9 ; ret
0x0000000000123201 : jae 0x123206 ; ret
0x0000000000123231 : jae 0x123236 ; ret
0x0000000000123261 : jae 0x123266 ; ret
0x00000000001232a1 : jae 0x1232a6 ; ret
0x0000000000123391 : jae 0x123396 ; ret
0x0000000000123461 : jae 0x123466 ; ret
0x0000000000123491 : jae 0x123496 ; ret
0x00000000001234c4 : jae 0x1234c9 ; ret
0x00000000001234f1 : jae 0x1234f6 ; ret
0x0000000000123974 : jae 0x123979 ; ret
0x00000000001239a1 : jae 0x1239a6 ; ret
0x00000000001239d1 : jae 0x1239d6 ; ret
0x0000000000123a04 : jae 0x123a09 ; ret
0x00000000001290f1 : jae 0x129104 ; add byte ptr [rax - 0x77], cl ; ret 0xcce9
0x000000000013ecce : jae 0x13ecea ; mov eax, 0xffffffff ; ret
0x000000000014d039 : jae 0x14d063 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000154c76 : jae 0x154cc7 ; add esp, 0x10 ; pop r12 ; ret
0x000000000015a839 : jae 0x15a850 ; xor r8d, r8d ; mov eax, r8d ; ret
0x0000000000162d09 : jae 0x162cf7 ; mov eax, 1 ; ret
0x000000000004601d : jae 0x46064 ; xor eax, eax ; pop rbx ; ret
0x0000000000046040 : jae 0x46085 ; pop rbx ; ret
0x00000000000466f1 : jae 0x466f6 ; ret
0x0000000000046ce1 : jae 0x46ce6 ; ret
0x0000000000057fe7 : jae 0x57ff0 ; xor eax, eax ; ret
0x0000000000059512 : jae 0x59564 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005e480 : jae 0x5e436 ; mov rax, r10 ; pop rbx ; ret
0x000000000005e708 : jae 0x5e6f1 ; mov rax, r8 ; ret
0x00000000000832ed : jae 0x83306 ; add al, ch ; retf
0x000000000008b0b0 : jae 0x8b0bd ; mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000096af1 : jae 0x96b1d ; movzx eax, byte ptr [rax] ; ret
0x000000000009f39c : jae 0x9f3c6 ; lea rax, [rax - 8] ; ret
0x00000000000a2981 : jae 0xa2996 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000d4141 : jae 0xd4146 ; ret
0x00000000000d7271 : jae 0xd7276 ; ret
0x00000000000d72a1 : jae 0xd72a6 ; ret
0x00000000000e5911 : jae 0xe5916 ; ret
0x00000000000e5b04 : jae 0xe5b09 ; ret
0x00000000000e5bf1 : jae 0xe5bf6 ; ret
0x00000000000e6021 : jae 0xe6026 ; ret
0x00000000000e6fc5 : jae 0xe6fcb ; add byte ptr [rax], al ; syscall
0x00000000000e6fd1 : jae 0xe6fd6 ; ret
0x00000000000e7221 : jae 0xe7226 ; ret
0x00000000000e7251 : jae 0xe7256 ; ret
0x00000000000e72b1 : jae 0xe72b6 ; ret
0x00000000000e72e1 : jae 0xe72e6 ; ret
0x00000000000e7311 : jae 0xe7316 ; ret
0x00000000000e7341 : jae 0xe7346 ; ret
0x00000000000e9ad9 : jae 0xe9a9a ; dec dword ptr [rax - 0x77] ; ret
0x0000000000117ce3 : jb 0x117ce9 ; add byte ptr [rax], al ; syscall
0x000000000012628b : jb 0x1262a6 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001262f3 : jb 0x12630e ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000126bdb : jb 0x126bf6 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000126c3b : jb 0x126c56 ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012a7df : jb 0x12a7f7 ; mov eax, 1 ; ret
0x0000000000130e3a : jb 0x130e24 ; add eax, 0x58d4800 ; retf
0x00000000001363e2 : jb 0x136372 ; or eax, dword ptr [rax] ; syscall
0x000000000013f893 : jb 0x13f885 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000014a206 : jb 0x14a266 ; or al, byte ptr [rax] ; test eax, eax ; je 0x14a218 ; ret
0x000000000014c519 : jb 0x14c53d ; ret
0x000000000014c513 : jb 0x14c545 ; ja 0x14c508 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001699ab : jb 0x1699bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169afb : jb 0x169b0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169c4b : jb 0x169c5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169d9b : jb 0x169dad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000169eeb : jb 0x169efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a03b : jb 0x16a04d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a18b : jb 0x16a19d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a2db : jb 0x16a2ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a42b : jb 0x16a43d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a57b : jb 0x16a58d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a6cb : jb 0x16a6dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a81b : jb 0x16a82d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a96b : jb 0x16a97d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016aabb : jb 0x16aacd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ac0b : jb 0x16ac1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c38b : jb 0x16c39d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c4db : jb 0x16c4ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c62b : jb 0x16c63d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c77b : jb 0x16c78d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016c8cb : jb 0x16c8dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ca1b : jb 0x16ca2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016cb6b : jb 0x16cb7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ccbb : jb 0x16cccd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ce0b : jb 0x16ce1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016cf5b : jb 0x16cf6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d0ab : jb 0x16d0bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d1fb : jb 0x16d20d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d34b : jb 0x16d35d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d49b : jb 0x16d4ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d5eb : jb 0x16d5fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000018ec0a : jb 0x18ec18 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018f0f7 : jb 0x18f102 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000193022 : jb 0x19302e ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001936d9 : jb 0x1936e8 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001936e4 : jb 0x1936f7 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000001936f1 : jb 0x1936f9 ; mov byte ptr [rdi], cl ; ret
0x000000000019399a : jb 0x1939a8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000193fbf : jb 0x193fca ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000019c2a2 : jb 0x19c2da ; add eax, 0x5d050f00 ; ret
0x000000000002fcca : jb 0x2fcd1 ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000002fcc9 : jb 0x2fcd2 ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000031463 : jb 0x314b6 ; mov r10, rcx ; jmp 0x31426
0x00000000000314a8 : jb 0x314bc ; mov r9, rsi ; mov r10, rcx ; jmp 0x31471
0x000000000004b5f7 : jb 0x4b5d9 ; xor eax, eax ; ret
0x000000000005c183 : jb 0x5c110 ; retf 0x703d
0x000000000005c182 : jb 0x5c111 ; retf 0x703d
0x000000000005e23d : jb 0x5e240 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000089135 : jb 0x8915b ; mov dword ptr [rcx], eax ; ret
0x00000000000892dc : jb 0x89302 ; mov dword ptr [rcx], eax ; ret
0x00000000000a20d2 : jb 0xa20e5 ; mov qword ptr [rdi], rsi ; ret
0x00000000000a2113 : jb 0xa2124 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a47ab : jb 0xa47bf ; sub al, bl ; ret
0x00000000000bbffa : jb 0xbc009 ; add byte ptr [rax], al ; ret
0x00000000000becfd : jb 0xbed06 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000bedaa : jb 0xbedb8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000beda9 : jb 0xbedb9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf1e9 : jb 0xbf1f1 ; mov byte ptr [rdi], cl ; ret
0x00000000000cf075 : jb 0xcf002 ; retf 0x703d
0x00000000000cf074 : jb 0xcf003 ; retf 0x703d
0x00000000000e4a2a : jb 0xe49c7 ; adc byte ptr [rax], al ; syscall
0x0000000000115fbb : jbe 0x115fe1 ; cmp eax, -0x5f ; je 0x115fd1 ; neg eax ; ret
0x000000000011620b : jbe 0x116231 ; cmp eax, -0x5f ; je 0x116221 ; neg eax ; ret
0x0000000000127096 : jbe 0x127114 ; or al, 0 ; syscall
0x000000000012dc7a : jbe 0x12dc74 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x0000000000137c0b : jbe 0x137b82 ; xor eax, eax ; pop rbx ; ret
0x0000000000146f56 : jbe 0x146ee4 ; or al, byte ptr [rax] ; syscall
0x000000000014b9c0 : jbe 0x14b9d7 ; mov eax, 2 ; ret
0x000000000014cb27 : jbe 0x14cb79 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000001556c3 : jbe 0x155715 ; add esp, 0x28 ; pop rbx ; pop r12 ; ret
0x000000000015ab9e : jbe 0x15abb9 ; add dword ptr [rbx + 0x28], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187be7 : jbe 0x187c58 ; add rax, rdi ; vzeroupper ; ret
0x000000000018e776 : jbe 0x18e780 ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018f697 : jbe 0x18f708 ; add rax, rdi ; vzeroupper ; ret
0x000000000003590e : jbe 0x3592e ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000055d29 : jbe 0x55d49 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005e415 : jbe 0x5e40f ; mov rax, r10 ; ret
0x000000000009840d : jbe 0x98412 ; ret
0x000000000009870f : jbe 0x986be ; add rsp, 8 ; ret
0x00000000000a518d : jbe 0xa51b9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000af346 : jbe 0xaf385 ; add rax, rdi ; ret
0x00000000000af356 : jbe 0xaf387 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af366 : jbe 0xaf387 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af376 : jbe 0xaf387 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b5399 : jbe 0xb5393 ; ret 0xf10
0x00000000000b6fb9 : jbe 0xb6fb3 ; ret 0xf10
0x00000000000d145c : jbe 0xd14b3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000d1556 : jbe 0xd1595 ; add rax, rdi ; ret
0x00000000000d1566 : jbe 0xd1597 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000d1576 : jbe 0xd1597 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000d1586 : jbe 0xd1597 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d735b : jbe 0xd7362 ; ret
0x00000000000e7305 : jbe 0xe730b ; add byte ptr [rax], al ; syscall
0x000000000010285d : je 0x10288b ; adc byte ptr [rbx - 0x76f3dbb4], cl ; ret 0x8b4c
0x00000000001041b9 : je 0x1041cb ; mov rdi, rbx ; call r15
0x0000000000105cc2 : je 0x105cca ; ret
0x0000000000109050 : je 0x108fe3 ; mov rdi, r13 ; call 0x25357
0x0000000000109081 : je 0x109092 ; mov rdi, r13 ; call 0x25357
0x000000000010a21b : je 0x10a27e ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001103b9 : je 0x1103cb ; mov eax, 0x1c ; syscall
0x0000000000110565 : je 0x1105a1 ; xor edx, edx ; xor esi, esi ; mov rdi, rbp ; call rax
0x0000000000110608 : je 0x110644 ; xor edx, edx ; call rax
0x0000000000110b4a : je 0x110b55 ; mov eax, r9d ; ret
0x0000000000110b49 : je 0x110b56 ; mov eax, r9d ; ret
0x0000000000111e59 : je 0x111e84 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000000001150fa : je 0x115128 ; sub byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xe9 ; retf 0xfffe
0x0000000000115fc0 : je 0x115fcc ; neg eax ; ret
0x0000000000116210 : je 0x11621c ; neg eax ; ret
0x000000000011633a : je 0x116369 ; mov eax, 0x118 ; syscall
0x000000000011661c : je 0x11664f ; mov eax, 0x48 ; syscall
0x00000000001166ab : je 0x1166df ; mov eax, 0x48 ; syscall
0x0000000000116831 : je 0x116867 ; mov eax, 0x101 ; syscall
0x000000000011783e : je 0x11786c ; or byte ptr [rax + 0x127], bh ; syscall
0x00000000001178fe : je 0x11792c ; or byte ptr [rax + 0x128], bh ; syscall
0x0000000000117f12 : je 0x117f17 ; ret
0x0000000000119ea7 : je 0x119edf ; mov eax, 0x105 ; syscall
0x0000000000119fd7 : je 0x119fe1 ; mov qword ptr [rax], rdx ; ret
0x000000000011a0da : je 0x11a0d1 ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000011b91c : je 0x11b92c ; mov dword ptr [rip + 0xcea24], edi ; ret
0x000000000011c907 : je 0x11c913 ; pop rbx ; ret
0x000000000011c906 : je 0x11c914 ; pop rbx ; ret
0x000000000011cc72 : je 0x11ccad ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011cd02 : je 0x11cd3d ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011d8e9 : je 0x11d922 ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011d99a : je 0x11d9d5 ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000011f30c : je 0x11f372 ; call rax
0x000000000011f4ed : je 0x11f5e6 ; call rax
0x000000000011fe29 : je 0x11fe56 ; cmp rbx, rax ; je 0x11fe69 ; mov rdx, rax ; jmp 0x11fe4a
0x000000000011fe2e : je 0x11fe64 ; mov rdx, rax ; jmp 0x11fe45
0x0000000000122159 : je 0x122172 ; mov rsi, r8 ; mov rdi, rbp ; call r12
0x000000000012231a : je 0x12231f ; ret
0x0000000000122986 : je 0x1229bf ; mov eax, 0x145 ; syscall
0x00000000001229ab : je 0x1229e9 ; mov eax, r8d ; ret
0x00000000001229aa : je 0x1229ea ; mov eax, r8d ; ret
0x0000000000122a1a : je 0x122a4f ; mov eax, 0x149 ; syscall
0x00000000001243dd : je 0x1243e2 ; ret
0x00000000001250f0 : je 0x125167 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000125130 : je 0x125168 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000128474 : je 0x12848e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ee5f : je 0x12ee8a ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012ef17 : je 0x12ef27 ; mov eax, 7 ; ret
0x000000000012ef42 : je 0x12ef53 ; pop rbx ; ret
0x000000000012ef31 : je 0x12ef69 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000013005f : je 0x130072 ; ret
0x0000000000130127 : je 0x130162 ; call rax
0x00000000001302d8 : je 0x1302f6 ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000131c20 : je 0x131c36 ; add rsp, 8 ; ret
0x000000000013ac27 : je 0x13ac33 ; mov rdi, rbx ; call rax
0x000000000013af3f : je 0x13af4b ; mov rdi, rbx ; call rax
0x000000000013b007 : je 0x13b01b ; lea rdi, [rip + 0xb40d0] ; call rax
0x000000000013e78b : je 0x13e783 ; pop rbx ; ret
0x000000000013f6e9 : je 0x13f701 ; test eax, eax ; jne 0x13f711 ; mov eax, r8d ; ret
0x0000000000143f40 : je 0x143f4a ; ret
0x0000000000144dc6 : je 0x144dd6 ; add rsp, 8 ; ret
0x0000000000145a6a : je 0x145a4e ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000149586 : je 0x149592 ; mov rdi, rbp ; call rax
0x0000000000149edd : je 0x149ee9 ; mov rdi, rbp ; call rax
0x000000000014a20c : je 0x14a212 ; ret
0x000000000014af0c : je 0x14af18 ; mov rdi, rbx ; call rax
0x000000000014b174 : je 0x14b007 ; mov rdi, rbx ; call rax
0x000000000014b269 : je 0x14b275 ; mov rdi, rbx ; call rax
0x000000000014b487 : je 0x14b494 ; xor eax, eax ; ret
0x000000000014ba78 : je 0x14ba84 ; mov rdi, r13 ; call rax
0x000000000014bfe3 : je 0x14c11a ; mov rdi, r12 ; call qword ptr [rbx]
0x000000000014e232 : je 0x14e248 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014e2f2 : je 0x14e308 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014e3f2 : je 0x14e408 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014f528 : je 0x14f58e ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000150247 : je 0x15025b ; lea rdi, [rbp + 0xc8] ; call rax
0x0000000000150521 : je 0x15054f ; cmp byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x14cff8
0x0000000000150c7d : je 0x150c89 ; mov rdi, rbp ; call rax
0x0000000000150e62 : je 0x150e72 ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000152121 : je 0x15212d ; mov rdi, rbp ; call rax
0x0000000000152206 : je 0x152212 ; mov rdi, r13 ; call rax
0x0000000000153034 : je 0x153042 ; lea rdi, [rbp + 0x68] ; call rax
0x000000000015376c : je 0x153778 ; mov rdi, rbp ; call rax
0x0000000000153ad4 : je 0x153ae2 ; lea rdi, [rbp + 0x58] ; call rax
0x00000000001564c2 : je 0x15644c ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000156443 : je 0x156453 ; pop rbx ; ret
0x00000000001564f6 : je 0x156504 ; mov r8, rax ; mov rax, r8 ; pop rbx ; ret
0x000000000015696f : je 0x156986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000157542 : je 0x157552 ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000157c8b : je 0x157c9b ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000159115 : je 0x159141 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159145 : je 0x159170 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000159205 : je 0x159231 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159235 : je 0x159260 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001592f5 : je 0x159321 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159325 : je 0x159350 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001593e5 : je 0x159411 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159415 : je 0x159440 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015a3c5 : je 0x15a3f5 ; mov eax, r8d ; ret
0x000000000015a415 : je 0x15a445 ; mov eax, r8d ; ret
0x000000000015f123 : je 0x15f14e ; adc al, ch ; push rbp ; retf 0xfffb
0x0000000000164ee9 : je 0x164f1d ; add r13, 1 ; mov rdx, rcx ; jmp 0x164ed0
0x0000000000181463 : je 0x18142e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000182135 : je 0x18213d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000182233 : je 0x1821fe ; lea r10, [r10 + r9] ; jmp r10
0x000000000018311a : je 0x183122 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000183273 : je 0x18323e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000184e43 : je 0x184e0e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000186ed8 : je 0x186ebc ; xor eax, eax ; ret
0x0000000000187e91 : je 0x187ef8 ; and ch, al ; std ; xlatb ; ret
0x0000000000187f7f : je 0x187fe6 ; and ch, al ; std ; xlatb ; ret
0x00000000001882d5 : je 0x1882e7 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000188663 : je 0x18862e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000189d03 : je 0x189cce ; lea r10, [r10 + r9] ; jmp r10
0x000000000018c59f : je 0x18c628 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018c9f2 : je 0x18ca53 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018d33f : je 0x18d3c8 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018d4b5 : je 0x18d516 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018dd9a : je 0x18da59 ; vzeroupper ; ret
0x000000000018dc76 : je 0x18db39 ; vzeroupper ; ret
0x000000000018e1c2 : je 0x18e223 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018e9a6 : je 0x18e869 ; vzeroupper ; ret
0x0000000000191da7 : je 0x191db1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019a196 : je 0x19a14f ; xor r10d, r10d ; jmp 0x19a16e
0x000000000019a23f : je 0x19a26a ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000019b94e : je 0x19b954 ; call rax
0x000000000019ba4b : je 0x19ba56 ; call rax
0x000000000019c60e : je 0x19c601 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002726e : je 0x2727a ; mov rdi, rbp ; call rax
0x000000000002a5e0 : je 0x2a5ea ; ret
0x000000000002acef : je 0x2ad1e ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002b46e : je 0x2b49d ; pop rax ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x000000000002ba59 : je 0x2ba87 ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002c23f : je 0x2c26e ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002c856 : je 0x2c884 ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002d175 : je 0x2d1a3 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002d868 : je 0x2d897 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002ddb6 : je 0x2dde4 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002edea : je 0x2ee19 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002fb74 : je 0x2fba2 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x00000000000306f5 : je 0x30723 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000000312d9 : je 0x31307 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000031e58 : je 0x31e86 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000000326a2 : je 0x326d1 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000332db : je 0x332e2 ; ret
0x00000000000332d6 : je 0x332e7 ; cmp esi, 3 ; je 0x332e7 ; ret
0x00000000000332fd : je 0x3331b ; pop rbx ; ret
0x0000000000033d24 : je 0x33d2a ; call rax
0x0000000000033fa1 : je 0x33fa7 ; call rdx
0x0000000000034fdf : je 0x34fe5 ; call rax
0x000000000003522a : je 0x3524c ; add byte ptr [rax - 0x77], cl ; retf 0x850f
0x000000000003bb4e : je 0x3bb5e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000448e9 : je 0x44ca8 ; add rdx, rcx ; jmp 0x44909
0x00000000000450bb : je 0x4500e ; ret
0x00000000000450ba : je 0x4500f ; ret
0x0000000000045339 : je 0x45342 ; ret
0x0000000000045709 : je 0x45712 ; ret
0x000000000004a764 : je 0x4a775 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000004b60d : je 0x4b5d7 ; mov eax, 0xffffffff ; ret
0x000000000004c718 : je 0x4c6ad ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000055b94 : je 0x55bac ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000005733a : je 0x57366 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000573e7 : je 0x573f8 ; cmp byte ptr [rax - 1], 0x2f ; jne 0x573e9 ; pop rbx ; ret
0x00000000000579de : je 0x57a0a ; or byte ptr [rax + 0xf], cl ; retf 0x854d
0x0000000000057b0d : je 0x57b39 ; sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x000000000005ba55 : je 0x5ba83 ; or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x0000000000066001 : je 0x66015 ; mov eax, r8d ; ret
0x0000000000065fea : je 0x66037 ; mov eax, 0x13c ; syscall
0x000000000006c0f8 : je 0x68afe ; jmp 0x68bdb
0x0000000000085afb : je 0x85b0f ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000085bdb : je 0x85bf9 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000008868f : je 0x886d3 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000089f6c : je 0x89fbd ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000089f6b : je 0x89fbe ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008a510 : je 0x8a51a ; ret
0x000000000008a603 : je 0x8a5c6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008a570 : je 0x8a5d2 ; pop rbp ; pop r12 ; ret
0x000000000008a61e : je 0x8a60d ; retf 0x1f0f
0x000000000008a61d : je 0x8a60e ; retf 0x1f0f
0x000000000008db66 : je 0x8db90 ; adc al, ch ; ret 0xf977
0x000000000008df3a : je 0x8df51 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8df51 ; ret
0x0000000000090455 : je 0x90462 ; ret
0x00000000000908b5 : je 0x908c2 ; ret
0x00000000000916f3 : je 0x91703 ; pop rbx ; ret
0x0000000000094ff9 : je 0x95002 ; ret
0x000000000009792d : je 0x97932 ; ret
0x0000000000097991 : je 0x97996 ; ret
0x0000000000097dec : je 0x97df2 ; call rax
0x0000000000097e75 : je 0x97e7b ; call rax
0x0000000000097ee5 : je 0x97eeb ; call rax
0x0000000000098390 : je 0x98399 ; pop rbx ; pop rbp ; ret
0x000000000009c11c : je 0x9c128 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009c39f : je 0x9c3a5 ; call rax
0x000000000009d402 : je 0x9d42f ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000009db59 : je 0x9db83 ; or cl, ch ; ret 0xfffe
0x000000000009db6a : je 0x9db96 ; mov rdi, r13 ; call rax
0x000000000009ee92 : je 0x9eebe ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000009f5d6 : je 0x9f563 ; retf 0x4c89
0x000000000009f5d5 : je 0x9f564 ; retf 0x4c89
0x000000000009ff67 : je 0xa0046 ; call rax
0x00000000000a009f : je 0xa0176 ; call rax
0x00000000000a02ab : je 0xa0318 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a13ac : je 0xa13b2 ; ret
0x00000000000a14a7 : je 0xa1509 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000a199f : je 0xa19d7 ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r14 ; call rax
0x00000000000a24d3 : je 0xa24e5 ; movsx eax, dl ; ret
0x00000000000a25c6 : je 0xa25d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3287 : je 0xa329d ; adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x00000000000a3626 : je 0xa35e7 ; ret
0x00000000000a3b68 : je 0xa3b1f ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000a47a8 : je 0xa47b4 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000a51f4 : je 0xa5203 ; add byte ptr [rax - 0x77], cl ; adc ecx, dword ptr [rax + 0x29] ; retf 0x5ee8
0x00000000000a5206 : je 0xa521e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5443 : je 0xa54ae ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa546a
0x00000000000a599d : je 0xa5a18 ; nop ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59cd
0x00000000000a6420 : je 0xa6439 ; add eax, 0x3949eb74 ; ret 0x1674
0x00000000000ab91b : je 0xab92a ; cmp eax, esi ; jne 0xab919 ; mov rax, r8 ; ret
0x00000000000ab94f : je 0xab95e ; cmp eax, edx ; jne 0xab949 ; mov rax, r8 ; ret
0x00000000000ab9ba : je 0xab9b2 ; ret
0x00000000000ab9f6 : je 0xab9ea ; ret
0x00000000000ab9f2 : je 0xab9ee ; cmp ecx, esi ; je 0xab9ee ; ret
0x00000000000aba44 : je 0xaba2d ; mov rax, r8 ; ret
0x00000000000aba6e : je 0xaba7e ; cmp ecx, esi ; jne 0xaba66 ; ret
0x00000000000af24c : je 0xaf2a3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af53a : je 0xaf591 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000af8bc : je 0xaf898 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000b4895 : je 0xb48a9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000b4d98 : je 0xb4da3 ; bsf eax, edx ; ret
0x00000000000b4e3d : je 0xb4e56 ; bsf rax, rdx ; ret
0x00000000000b4de0 : je 0xb4e66 ; bsf rax, rdx ; ret
0x00000000000b500c : je 0xb5036 ; bsf rax, rdx ; ret
0x00000000000ba32d : je 0xba37e ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bb9fa : je 0xbba4b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bd8fa : je 0xbd94b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bee37 : je 0xbee58 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000bf8a4 : je 0xbf8b9 ; cmp eax, 2 ; je 0xbf8c1 ; xor eax, eax ; ret
0x00000000000bf8a9 : je 0xbf8bc ; xor eax, eax ; ret
0x00000000000bf8f4 : je 0xbf8da ; ret
0x00000000000bf952 : je 0xbf932 ; ret
0x00000000000bfa77 : je 0xbfa69 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bff36 : je 0xbfef7 ; ret
0x00000000000c1169 : je 0xc1175 ; test edx, edx ; jne 0xc1166 ; ret
0x00000000000c2062 : je 0xc2062 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c9c6d : je 0xc9c78 ; mov eax, r8d ; ret
0x00000000000cda32 : je 0xcda61 ; sbb byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdx, r13 ; call rbx
0x00000000000cec65 : je 0xcec93 ; or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x00000000000d27e6 : je 0xd2856 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d2c99 : je 0xd2cb9 ; mov cl, dl ; and cl, 0xf ; je 0xd2cc9 ; ret
0x00000000000d2ca0 : je 0xd2cc2 ; ret
0x00000000000d2cb5 : je 0xd2cd6 ; add rax, 2 ; ret
0x00000000000d3ce2 : je 0xd3d10 ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000d3ed3 : je 0xd3f01 ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000e00f7 : je 0xe0104 ; xor eax, eax ; ret
0x00000000000e011b : je 0xe0139 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000e0277 : je 0xe02a2 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000e0557 : je 0xe058a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1656 : je 0xe1676 ; mov rbx, r13 ; mov rdi, rbp ; call r12
0x00000000000e21b3 : je 0xe21b9 ; add byte ptr [rax], al ; syscall
0x00000000000e91d9 : je 0xe91eb ; mov rdi, rbx ; call r15
0x00000000000e9e48 : je 0xe9e7d ; add r13, 1 ; mov rdx, rcx ; jmp 0xe9e30
0x00000000000efa03 : je 0xefa2d ; sbb al, 0x89 ; ret 0x8348
0x00000000000f0e9d : je 0xf0eda ; ret
0x00000000000f125b : je 0xf12a3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3abb : je 0xf3afd ; xor esi, esi ; add rdx, rax ; jmp 0xf3ad7
0x00000000000f4e15 : je 0xf4e75 ; xor eax, eax ; pop rbp ; ret
0x000000000010890d : jg 0x10892b ; call 0x25354
0x0000000000109ba6 : jg 0x109bba ; ret 0x8589
0x000000000010f957 : jg 0x10f9d7 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9ab : jg 0x10fa27 ; ret
0x0000000000115ce6 : jg 0x115d37 ; add esp, 0x40 ; pop r12 ; ret
0x000000000011ae33 : jg 0x11ae38 ; ret
0x000000000011dab0 : jg 0x11db00 ; mov edi, dword ptr [rsp] ; call rbx
0x000000000011dd18 : jg 0x11dd24 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000013fd92 : jg 0x13fd9b ; enter 0x480f, -0x3e ; ret
0x000000000014242f : jg 0x1423ec ; mov byte ptr [r10], 0 ; ret
0x0000000000151046 : jg 0x151090 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151058 ; ret
0x0000000000157706 : jg 0x157750 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157718 ; ret
0x000000000016b589 : jg 0x16b5dc ; ret
0x000000000016b5d0 : jg 0x16b620 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000016b5d5 : jg 0x16b628 ; retf
0x000000000016b60f : jg 0x16b65a ; ret
0x000000000016b64f : jg 0x16b69a ; retf
0x000000000016b789 : jg 0x16b7dc ; ret 0x894c
0x000000000016b7d0 : jg 0x16b820 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000016b7d5 : jg 0x16b828 ; retf 0x894c
0x000000000016b80f : jg 0x16b85a ; ret 0x894c
0x000000000016b84b : jg 0x16b896 ; retf 0x894c
0x000000000016df69 : jg 0x16dfbc ; ret
0x000000000016dfb0 : jg 0x16e000 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000016dfb5 : jg 0x16e008 ; retf
0x000000000016dfef : jg 0x16e03a ; ret
0x000000000016e02f : jg 0x16e07a ; retf
0x000000000016e169 : jg 0x16e1bc ; ret 0x894c
0x000000000016e1b0 : jg 0x16e200 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000016e1b5 : jg 0x16e208 ; retf 0x894c
0x000000000016e1ef : jg 0x16e23a ; ret 0x894c
0x000000000016e22b : jg 0x16e276 ; retf 0x894c
0x0000000000170578 : jg 0x1705c9 ; loope 0x170577 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001705ef : jg 0x17063a ; ret 0xff2
0x0000000000170608 : jg 0x170659 ; loop 0x170607 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017067f : jg 0x1706ca ; ret
0x0000000000170698 : jg 0x1706e9 ; jrcxz 0x170697 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170728 : jg 0x170779 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001707a8 : jg 0x1707f9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170828 : jg 0x170879 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001708a8 : jg 0x1708f9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170a05 : jg 0x170a55 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000170a0f : jg 0x170a5a ; retf 0xff2
0x0000000000170a85 : jg 0x170ad5 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000170a8f : jg 0x170ada ; retf
0x0000000000170b28 : jg 0x170b79 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170ba8 : jg 0x170bf9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170c38 : jg 0x170c89 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170cb8 : jg 0x170d09 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170d2c : jg 0x170d37 ; ret
0x0000000000170d86 : jg 0x170d99 ; ret
0x0000000000170d81 : jg 0x170dd1 ; psllq mm1, qword ptr [rdi] ; jg 0x170d9e ; ret
0x0000000000170df6 : jg 0x170e09 ; ret
0x0000000000170e66 : jg 0x170e79 ; ret
0x0000000000170e61 : jg 0x170eb1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000170ed6 : jg 0x170ee9 ; ret
0x0000000000170ed1 : jg 0x170f21 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170f46 : jg 0x170f59 ; ret
0x0000000000170f41 : jg 0x170f91 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170fb6 : jg 0x170fc9 ; ret
0x0000000000170fb1 : jg 0x171001 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171026 : jg 0x171039 ; ret
0x0000000000171021 : jg 0x171071 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171096 : jg 0x1710a9 ; ret
0x0000000000171091 : jg 0x1710e1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171106 : jg 0x171119 ; ret
0x0000000000171176 : jg 0x171189 ; ret
0x00000000001711e6 : jg 0x1711f9 ; ret
0x00000000001711e1 : jg 0x171231 ; add eax, 0xf7f0ff3 ; ret
0x0000000000171256 : jg 0x171269 ; ret
0x0000000000171251 : jg 0x1712a1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001712c6 : jg 0x1712d9 ; ret
0x00000000001712c1 : jg 0x171311 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171336 : jg 0x171349 ; ret
0x0000000000171331 : jg 0x171381 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001713a6 : jg 0x1713b9 ; ret
0x00000000001713a1 : jg 0x1713f1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001730a8 : jg 0x1730f9 ; loope 0x1730a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017311f : jg 0x17316a ; ret 0xff2
0x0000000000173138 : jg 0x173189 ; loop 0x173137 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001731af : jg 0x1731fa ; ret
0x00000000001731c8 : jg 0x173219 ; jrcxz 0x1731c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173258 : jg 0x1732a9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001732d8 : jg 0x173329 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173358 : jg 0x1733a9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001733d8 : jg 0x173429 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173535 : jg 0x173585 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000017353f : jg 0x17358a ; retf 0xff2
0x00000000001735b5 : jg 0x173605 ; mov ebx, 0x46f00ff2 ; retf
0x00000000001735bf : jg 0x17360a ; retf
0x0000000000173658 : jg 0x1736a9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001736d8 : jg 0x173729 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173768 : jg 0x1737b9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001737e8 : jg 0x173839 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000017385c : jg 0x173867 ; ret
0x00000000001738b6 : jg 0x1738c9 ; ret
0x00000000001738b1 : jg 0x173901 ; psllq mm1, qword ptr [rdi] ; jg 0x1738ce ; ret
0x0000000000173926 : jg 0x173939 ; ret
0x0000000000173996 : jg 0x1739a9 ; ret
0x0000000000173991 : jg 0x1739e1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000173a06 : jg 0x173a19 ; ret
0x0000000000173a01 : jg 0x173a51 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173a76 : jg 0x173a89 ; ret
0x0000000000173a71 : jg 0x173ac1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173ae6 : jg 0x173af9 ; ret
0x0000000000173ae1 : jg 0x173b31 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173b56 : jg 0x173b69 ; ret
0x0000000000173b51 : jg 0x173ba1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173bc6 : jg 0x173bd9 ; ret
0x0000000000173bc1 : jg 0x173c11 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173c36 : jg 0x173c49 ; ret
0x0000000000173ca6 : jg 0x173cb9 ; ret
0x0000000000173d16 : jg 0x173d29 ; ret
0x0000000000173d11 : jg 0x173d61 ; add eax, 0xf7f0ff3 ; ret
0x0000000000173d86 : jg 0x173d99 ; ret
0x0000000000173d81 : jg 0x173dd1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173df6 : jg 0x173e09 ; ret
0x0000000000173df1 : jg 0x173e41 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173e66 : jg 0x173e79 ; ret
0x0000000000173e61 : jg 0x173eb1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000173ed6 : jg 0x173ee9 ; ret
0x0000000000173ed1 : jg 0x173f21 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000018c432 : jg 0x18c44e ; pextrw edi, mm5, 0x74 ; retf
0x000000000018cb0d : jg 0x18cb29 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018d1d2 : jg 0x18d1ee ; pextrw edi, mm5, 0x74 ; retf
0x000000000018d5cd : jg 0x18d5e9 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018dcc9 : jg 0x18dd30 ; vzeroupper ; ret
0x000000000018dec2 : jg 0x18dede ; pextrw edi, mm5, 0x74 ; retf
0x000000000018e2dd : jg 0x18e2f9 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018ec1e : jg 0x18ec2f ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018edaf : jg 0x18edd9 ; vzeroupper ; ret
0x000000000018ee56 : jg 0x18ee60 ; vzeroupper ; ret
0x000000000018eee2 : jg 0x18ef0c ; vzeroupper ; ret
0x000000000018ef72 : jg 0x18ef7c ; vzeroupper ; ret
0x000000000018efe8 : jg 0x18eff6 ; vzeroupper ; ret
0x000000000018f048 : jg 0x18f056 ; vzeroupper ; ret
0x000000000018f107 : jg 0x18f115 ; vzeroupper ; ret
0x0000000000192fc8 : jg 0x192fd9 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000192fdc : jg 0x192fed ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000019344e : jg 0x19344a ; ret
0x00000000001936bb : jg 0x1936cb ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001936b1 : jg 0x1936d1 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000001939c6 : jg 0x1939d7 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000193baa : jg 0x193bd4 ; vzeroupper ; ret
0x0000000000193ba9 : jg 0x193bd5 ; vzeroupper ; ret
0x0000000000193c70 : jg 0x193c7a ; vzeroupper ; ret
0x0000000000193c6f : jg 0x193c7b ; vzeroupper ; ret
0x0000000000193d35 : jg 0x193d5f ; vzeroupper ; ret
0x0000000000193d34 : jg 0x193d60 ; vzeroupper ; ret
0x0000000000193dfa : jg 0x193e04 ; vzeroupper ; ret
0x0000000000193df9 : jg 0x193e05 ; vzeroupper ; ret
0x0000000000193e79 : jg 0x193e87 ; vzeroupper ; ret
0x0000000000193e78 : jg 0x193e88 ; vzeroupper ; ret
0x0000000000193ee5 : jg 0x193ef3 ; vzeroupper ; ret
0x0000000000193ee4 : jg 0x193ef4 ; vzeroupper ; ret
0x0000000000193fcf : jg 0x193fdd ; vzeroupper ; ret
0x0000000000193fdd : jg 0x193feb ; vzeroupper ; ret
0x00000000001960a5 : jg 0x1960b4 ; neg eax ; ret
0x0000000000196633 : jg 0x19663a ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000197c2b : jg 0x197bb8 ; ror byte ptr [rax + 0xf], cl ; retf
0x0000000000198fc7 : jg 0x198fce ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003feeb : jg 0x3ff09 ; call 0x3c124
0x000000000003fef4 : jg 0x3ff0a ; call 0x3c124
0x000000000003fefd : jg 0x3ff0b ; call 0x3c124
0x00000000000450b8 : jg 0x450cc ; je 0x45011 ; ret
0x0000000000045707 : jg 0x4570d ; je 0x45714 ; ret
0x00000000000459a4 : jg 0x459f6 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000004671a : jg 0x46720 ; add byte ptr [rax], al ; syscall
0x000000000004af9c : jg 0x4af2f ; adc byte ptr [rcx - 0x3f76bbea], cl ; ret
0x0000000000055403 : jg 0x55417 ; syscall
0x000000000005acc9 : jg 0x5ad48 ; loopne 0x5ac8d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000783a3 : jg 0x783d0 ; retf 0xc239
0x0000000000078636 : jg 0x78665 ; fidivr dword ptr [rcx] ; ret 0x830f
0x000000000007eba7 : jg 0x7ebc0 ; test byte ptr [rbp - 0x7c000012], dh ; ret
0x000000000007ed31 : jg 0x7ed60 ; fidivr dword ptr [rcx] ; ret 0x820f
0x000000000008feec : jg 0x8fe7a ; inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a17fe : jg 0xa184d ; mov rsi, rbp ; call rax
0x00000000000ba0f6 : jg 0xba101 ; ret
0x00000000000ba106 : jg 0xba114 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba11a : jg 0xba129 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba139 : jg 0xba147 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba149 : jg 0xba157 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba159 : jg 0xba16a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000ba17a : jg 0xba189 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba19a : jg 0xba1a9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba1ba : jg 0xba1c9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba1da : jg 0xba1ec ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba21d : jg 0xba22f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba23d : jg 0xba24f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba25b : jg 0xba26b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba27b : jg 0xba28b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba29b : jg 0xba2ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba2bb : jg 0xba2cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba868 : jg 0xba873 ; jne 0xbb128 ; ret
0x00000000000ba88c : jg 0xba898 ; jne 0xbb128 ; ret
0x00000000000ba8af : jg 0xba8bc ; jne 0xbb128 ; ret
0x00000000000ba8ca : jg 0xba8d8 ; jne 0xbb128 ; ret
0x00000000000ba8ed : jg 0xba8fc ; jne 0xbb128 ; ret
0x00000000000ba912 : jg 0xba922 ; jne 0xbb128 ; ret
0x00000000000ba930 : jg 0xba941 ; jne 0xbb128 ; ret
0x00000000000ba94c : jg 0xba95e ; jne 0xbb128 ; ret
0x00000000000ba96f : jg 0xba982 ; jne 0xbb128 ; ret
0x00000000000ba994 : jg 0xba9a8 ; jne 0xbb128 ; ret
0x00000000000ba9b2 : jg 0xba9c7 ; jne 0xbb128 ; ret
0x00000000000ba9d2 : jg 0xba9e8 ; jne 0xbb128 ; ret
0x00000000000ba9f4 : jg 0xbaa0b ; jne 0xbb128 ; ret
0x00000000000baa14 : jg 0xbaa2c ; jne 0xbb128 ; ret
0x00000000000baa34 : jg 0xbaa4d ; jne 0xbb128 ; ret
0x00000000000baa4e : jg 0xbaa68 ; jne 0xbb128 ; ret
0x00000000000baa71 : jg 0xbaa8c ; jne 0xbb128 ; ret
0x00000000000baa96 : jg 0xbaab2 ; jne 0xbb128 ; ret
0x00000000000baab4 : jg 0xbaad1 ; jne 0xbb128 ; ret
0x00000000000baad4 : jg 0xbaaf2 ; jne 0xbb128 ; ret
0x00000000000baaf7 : jg 0xbab16 ; jne 0xbb128 ; ret
0x00000000000bab16 : jg 0xbab36 ; jne 0xbb128 ; ret
0x00000000000bab36 : jg 0xbab57 ; jne 0xbb128 ; ret
0x00000000000bab56 : jg 0xbab78 ; jne 0xbb128 ; ret
0x00000000000bab79 : jg 0xbab9c ; jne 0xbb128 ; ret
0x00000000000babae : jg 0xbabd2 ; jne 0xbb128 ; ret
0x00000000000babdc : jg 0xbac01 ; jne 0xbb128 ; ret
0x00000000000bac0c : jg 0xbac32 ; jne 0xbb128 ; ret
0x00000000000bac38 : jg 0xbac5f ; jne 0xbb128 ; ret
0x00000000000bac68 : jg 0xbac90 ; jne 0xbb128 ; ret
0x00000000000bac98 : jg 0xbacc1 ; jne 0xbb128 ; ret
0x00000000000bacc8 : jg 0xbacf2 ; jne 0xbb128 ; ret
0x00000000000bade6 : jg 0xbadf1 ; ret
0x00000000000badf9 : jg 0xbae07 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000bae0a : jg 0xbae19 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bae29 : jg 0xbae37 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bae39 : jg 0xbae47 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bae4c : jg 0xbae5d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000bae6a : jg 0xbae79 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bae8a : jg 0xbae99 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000baeaa : jg 0xbaeb9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000baecd : jg 0xbaedf ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000baf0d : jg 0xbaf1f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000baf2d : jg 0xbaf3f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000baf4b : jg 0xbaf5b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000baf6b : jg 0xbaf7b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000baf8b : jg 0xbaf9b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000bafab : jg 0xbafbb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bb0e2 : jg 0xbb0ed ; ret
0x00000000000bb226 : jg 0xbb25a ; ret
0x00000000000bb7a6 : jg 0xbb7b5 ; lea rax, [rdi + 0xf] ; ret
0x00000000000bb7b6 : jg 0xbb7c8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb7e9 : jg 0xbb7fb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bb809 : jg 0xbb81b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bb92f : jg 0xbb98f ; or eax, 0x1c478d48 ; ret
0x00000000000bbf4b : jg 0xbbf56 ; jne 0xbc978 ; ret
0x00000000000bbf70 : jg 0xbbf7c ; jne 0xbc978 ; ret
0x00000000000bbf93 : jg 0xbbfa0 ; jne 0xbc978 ; ret
0x00000000000bbfae : jg 0xbbfbc ; jne 0xbc978 ; ret
0x00000000000bbfd1 : jg 0xbbfe0 ; jne 0xbc978 ; ret
0x00000000000bbff6 : jg 0xbc006 ; jne 0xbc978 ; ret
0x00000000000bc014 : jg 0xbc025 ; jne 0xbc978 ; ret
0x00000000000bc030 : jg 0xbc042 ; jne 0xbc978 ; ret
0x00000000000bc053 : jg 0xbc066 ; jne 0xbc978 ; ret
0x00000000000bc078 : jg 0xbc08c ; jne 0xbc978 ; ret
0x00000000000bc0a6 : jg 0xbc0bb ; jne 0xbc978 ; ret
0x00000000000bc0c6 : jg 0xbc0dc ; jne 0xbc978 ; ret
0x00000000000bc0e8 : jg 0xbc0ff ; jne 0xbc978 ; ret
0x00000000000bc118 : jg 0xbc130 ; jne 0xbc978 ; ret
0x00000000000bc148 : jg 0xbc161 ; jne 0xbc978 ; ret
0x00000000000bc172 : jg 0xbc18c ; jne 0xbc978 ; ret
0x00000000000bc195 : jg 0xbc1b0 ; jne 0xbc978 ; ret
0x00000000000bc1ba : jg 0xbc1d6 ; jne 0xbc978 ; ret
0x00000000000bc1e8 : jg 0xbc205 ; jne 0xbc978 ; ret
0x00000000000bc218 : jg 0xbc236 ; jne 0xbc978 ; ret
0x00000000000bc24b : jg 0xbc26a ; jne 0xbc978 ; ret
0x00000000000bc27a : jg 0xbc29a ; jne 0xbc978 ; ret
0x00000000000bc2aa : jg 0xbc2cb ; jne 0xbc978 ; ret
0x00000000000bc2da : jg 0xbc2fc ; jne 0xbc978 ; ret
0x00000000000bc30d : jg 0xbc330 ; jne 0xbc978 ; ret
0x00000000000bc342 : jg 0xbc366 ; jne 0xbc978 ; ret
0x00000000000bc370 : jg 0xbc395 ; jne 0xbc978 ; ret
0x00000000000bc3a0 : jg 0xbc3c6 ; jne 0xbc978 ; ret
0x00000000000bc3cc : jg 0xbc3f3 ; jne 0xbc978 ; ret
0x00000000000bc3fc : jg 0xbc424 ; jne 0xbc978 ; ret
0x00000000000bc42c : jg 0xbc455 ; jne 0xbc978 ; ret
0x00000000000bc45c : jg 0xbc486 ; jne 0xbc978 ; ret
0x00000000000bc606 : jg 0xbc615 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bc619 : jg 0xbc62b ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc659 : jg 0xbc66b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc679 : jg 0xbc68b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000bc79f : jg 0xbc7ff ; or eax, 0x1d478d48 ; ret
0x00000000000bc932 : jg 0xbc93d ; ret
0x00000000000bca76 : jg 0xbcaae ; lea rax, [rdi + 0x40] ; ret
0x00000000000bca75 : jg 0xbcafd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000bd406 : jg 0xbd411 ; ret
0x00000000000bd416 : jg 0xbd424 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bd42a : jg 0xbd439 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bd449 : jg 0xbd457 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd459 : jg 0xbd467 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bd469 : jg 0xbd47a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bd48a : jg 0xbd499 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bd4aa : jg 0xbd4b9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bd4ca : jg 0xbd4d9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bd4ea : jg 0xbd4fc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000bd52d : jg 0xbd53f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000bd54d : jg 0xbd55f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000bd56b : jg 0xbd57b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000bd58b : jg 0xbd59b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000bd5ab : jg 0xbd5bb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000bd5cb : jg 0xbd5db ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bdef6 : jg 0xbdf01 ; ret
0x00000000000bdf06 : jg 0xbdf14 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bdf1a : jg 0xbdf29 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bdf39 : jg 0xbdf47 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdf49 : jg 0xbdf57 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bdf59 : jg 0xbdf6a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bdf7a : jg 0xbdf89 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bdf9a : jg 0xbdfa9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bdfba : jg 0xbdfc9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bdfda : jg 0xbdfec ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000be01d : jg 0xbe02f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000be03d : jg 0xbe04f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000be05b : jg 0xbe06b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000be07b : jg 0xbe08b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000be09b : jg 0xbe0ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000be0bb : jg 0xbe0cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000be266 : jg 0xbe276 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be43f : jg 0xbe4a0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be45f : jg 0xbe4c0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be4d6 : jg 0xbe50f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be4d5 : jg 0xbe55e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bef78 : jg 0xbefb0 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bf046 : jg 0xbf07e ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bf0d4 : jg 0xbf0df ; ret
0x00000000000bf150 : jg 0xbf15b ; ret
0x00000000000bf1c7 : jg 0xbf213 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000bf35b : jg 0xbf329 ; nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000000d2255 : jg 0xd225d ; neg eax ; ret
0x00000000000d31fb : jg 0xd3227 ; mov rax, r12 ; pop r12 ; ret
0x00000000000e6414 : jg 0xe642e ; test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e65e4 : jg 0xe65fe ; test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e68f5 : jg 0xe690f ; test ah, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e6aed : jg 0xe6b07 ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e7e23 : jg 0xe7e2d ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7e3d : jg 0xe7e47 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7e7a : jg 0xe7e84 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e7e8b : jg 0xe7e95 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e7eab : jg 0xe7eb5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000fe5ad : jg 0xfe622 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000fedad : jg 0xfee1a ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000115835 : jge 0x115877 ; call 0x111aa4
0x000000000011cd91 : jge 0x11cd95 ; call rbx
0x000000000011da42 : jge 0x11da46 ; call rbx
0x000000000011daed : jge 0x11daf1 ; call rbx
0x000000000011db1d : jge 0x11db21 ; call rbx
0x000000000011db4d : jge 0x11db51 ; call rbx
0x000000000011db75 : jge 0x11db79 ; call rbx
0x000000000011dfaf : jge 0x11dffe ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000122bc5 : jge 0x122bcb ; add byte ptr [rax], al ; syscall
0x000000000012f6e0 : jge 0x12f66c ; call rcx
0x000000000012fb35 : jge 0x12fac1 ; call rax
0x000000000012fd1d : jge 0x12fca9 ; call rax
0x000000000012fe4b : jge 0x12fdd7 ; call rax
0x000000000013dc0a : jge 0x13dbae ; syscall
0x0000000000153038 : jge 0x1530a4 ; call rax
0x0000000000153ad8 : jge 0x153b34 ; call rax
0x000000000015d6d9 : jge 0x15d6cc ; dec dword ptr [rax - 0x77] ; ret
0x000000000015e799 : jge 0x15e79f ; add al, 0x75 ; retf 0xbd49
0x000000000018fa1d : jge 0x18fa5c ; ret 0xe2c4
0x000000000018fecd : jge 0x18ff0c ; ret 0xe2c4
0x000000000019a7ad : jge 0x19a7c5 ; add rdi, rbp ; call r12
0x00000000000290ed : jge 0x29073 ; call 0x25354
0x00000000000290e4 : jge 0x29082 ; call 0x25354
0x0000000000029137 : jge 0x291aa ; sbb al, 0 ; ret
0x000000000004a5bb : jge 0x4a5c7 ; call rax
0x000000000005545e : jge 0x5547e ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000005756a : jge 0x57571 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000593f8 : jge 0x5944a ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005a9a4 : jge 0x5a9ab ; add byte ptr [rax], al ; leave ; ret
0x000000000005b883 : jge 0x5b88a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000a15e8 : jge 0xa1600 ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000cd0af : jge 0xcd04b ; add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x00000000000cea93 : jge 0xcea9a ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000d6180 : jge 0xd6198 ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000e76a3 : jge 0xe76a9 ; add cl, ch ; ret
0x00000000000e7c1e : jge 0xe7c26 ; add byte ptr [rax + 0xf], cl ; ret 0x19e9
0x00000000000e7c38 : jge 0xe7c40 ; add byte ptr [rax + 0xf], cl ; ret 0xffe9
0x00000000000f5249 : jge 0xf5281 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8865 : jge 0xf87fb ; call 0x25354
0x000000000010069e : jl 0x1006db ; ret 0x8f0f
0x00000000001111d9 : jl 0x111207 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000111345 : jl 0x111373 ; or byte ptr [rax + 1], bh ; syscall
0x00000000001117cd : jl 0x1117fb ; or byte ptr [rax + 0x48], bh ; syscall
0x0000000000114661 : jl 0x11468c ; and al, ch ; retf 0xfffc
0x0000000000115c25 : jl 0x115c53 ; or byte ptr [rax + 7], bh ; syscall
0x00000000001164a6 : jl 0x1164d4 ; sbb byte ptr [rax + 0x115], bh ; syscall
0x0000000000116555 : jl 0x116583 ; or byte ptr [rax + 0x11d], bh ; syscall
0x00000000001176e3 : jl 0x117711 ; or byte ptr [rax + 0x13], bh ; syscall
0x0000000000117783 : jl 0x1177b1 ; or byte ptr [rax + 0x14], bh ; syscall
0x000000000011bc25 : jl 0x11bc53 ; or byte ptr [rax + 0x1a], bh ; syscall
0x0000000000122318 : jl 0x122331 ; je 0x122321 ; ret
0x0000000000122704 : jl 0x122732 ; or byte ptr [rax + 0x114], bh ; syscall
0x0000000000122921 : jl 0x12294f ; or byte ptr [rax + 0x130], bh ; syscall
0x0000000000123325 : jl 0x123353 ; or al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001233f1 : jl 0x12341f ; or byte ptr [rax + 0x2a], bh ; syscall
0x00000000001236d3 : jl 0x123701 ; or byte ptr [rax + 0x2f], bh ; syscall
0x0000000000123833 : jl 0x123861 ; or byte ptr [rax + 0x2e], bh ; syscall
0x0000000000123d46 : jl 0x123d74 ; sbb byte ptr [rax + 0x120], bh ; syscall
0x0000000000123ea4 : jl 0x123ed2 ; or al, 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000124046 : jl 0x124074 ; sbb byte ptr [rax + 0x45], bh ; syscall
0x0000000000135cb6 : jl 0x135ce0 ; sub al, ch ; ret 0xef
0x000000000014ab96 : jl 0x14abc4 ; sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x000000000014c27d : jl 0x14c2a7 ; adc al, ch ; retf
0x000000000014e4d1 : jl 0x14e4ff ; or byte ptr [rax - 0x77], cl ; add r8b, r13b ; ret
0x00000000001607c6 : jl 0x1607f1 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000018d7f5 : jl 0x18d812 ; and ecx, ebp ; ret
0x000000000018d940 : jl 0x18d94b ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000192e6b : jl 0x192e74 ; neg eax ; ret
0x0000000000192f48 : jl 0x192f97 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000192f84 : jl 0x192fd3 ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000193182 : jl 0x1931d1 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001932e9 : jl 0x193338 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000019344b : jl 0x19349a ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000193670 : jl 0x1936bf ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000193691 : jl 0x1936e0 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001936a4 : jl 0x1936f3 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000193779 : jl 0x1937c8 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001937d1 : jl 0x193820 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000019386e : jl 0x1938bd ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000193a94 : jl 0x193ab3 ; cld ; vzeroupper ; ret
0x0000000000199fc2 : jl 0x199fed ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000025715 : jl 0x2573f ; or cl, ch ; retf
0x00000000000285c0 : jl 0x28571 ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000002aa45 : jl 0x2aa73 ; pop rax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002acf4 : jl 0x2ad1e ; pop rax ; call r14
0x000000000002b7e8 : jl 0x2b816 ; pop rax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002ba5e : jl 0x2ba87 ; pop rax ; call rbx
0x000000000002bdbf : jl 0x2bded ; pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c244 : jl 0x2c26e ; pop rax ; call r15
0x000000000002c5e6 : jl 0x2c614 ; pop rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002c85b : jl 0x2c884 ; pop rax ; call rbx
0x000000000002d17a : jl 0x2d1a3 ; call rbx
0x000000000002d86d : jl 0x2d897 ; call r14
0x000000000002ddbb : jl 0x2dde4 ; call rbx
0x000000000002e7fb : jl 0x2e829 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000002f78f : jl 0x2f7bd ; push rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002fb00 : jl 0x2fb2b ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000002fb79 : jl 0x2fba2 ; push rax ; call rbx
0x00000000000306fa : jl 0x30723 ; call rbx
0x0000000000030e8c : jl 0x30eba ; push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000312de : jl 0x31307 ; push rax ; call rbx
0x0000000000031e5d : jl 0x31e86 ; call rbx
0x000000000003baa6 : jl 0x3bab7 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000004b555 : jl 0x4b583 ; or byte ptr [rax + 0x13e], bh ; syscall
0x0000000000058383 : jl 0x58310 ; retf 0xc183
0x000000000006249a : jl 0x624c8 ; adc cl, bl ; in eax, 0xdf ; loopne 0x62433 ; ret
0x000000000009e8f3 : jl 0x9e920 ; and byte ptr [rcx], dh ; imul al ; ret
0x00000000000a22a0 : jl 0xa22d8 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000a4c12 : jl 0xa4c50 ; adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x00000000000a7682 : jl 0xa76a0 ; rol dword ptr [rcx + rcx*4 - 0x21], 0xc1 ; call qword ptr [rdx]
0x00000000000a806a : jl 0xa808b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a85aa : jl 0xa85c9 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a8607 : jl 0xa8628 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a9511 : jl 0xa9533 ; add eax, 0x3948ea74 ; retf 0x1474
0x00000000000af82a : jl 0xaf895 ; add rax, rdi ; ret
0x00000000000af83a : jl 0xaf897 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af85a : jl 0xaf897 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af87a : jl 0xaf897 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ccdbe : jl 0xccdfe ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x00000000000d02a5 : jl 0xd02d0 ; or byte ptr [rcx - 0x77], al ; ret 0x7b75
0x00000000000d03d6 : jl 0xd0401 ; or byte ptr [rcx - 0x77], al ; ret 0x2a74
0x00000000000d6830 : jl 0xd67e2 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d912a : jl 0xd9155 ; sbb al, ch ; pop rsi ; ret
0x00000000000d9eaf : jl 0xd9ec3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9ebf : jl 0xd9ed3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9ecf : jl 0xd9ee3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9edf : jl 0xd9ef3 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9eef : jl 0xd9f03 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9eff : jl 0xd9f13 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f0f : jl 0xd9f23 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f1f : jl 0xd9f33 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f2f : jl 0xd9f43 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f3f : jl 0xd9f53 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f4f : jl 0xd9f63 ; add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x00000000000d9f4e : jl 0xd9f64 ; add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x00000000000dbe3b : jl 0xdbe66 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000e3801 : jl 0xe380a ; add ecx, ebp ; retf 0xfffd
0x00000000000e5a7c : jl 0xe5aaa ; or byte ptr [rax + 0x3d], bh ; syscall
0x00000000000e72a5 : jl 0xe72ab ; add byte ptr [rax], al ; syscall
0x00000000000fae4e : jl 0xfae62 ; pushfq ; ret 0x5c3b
0x00000000000fb3fb : jl 0xfb429 ; mov rcx, rbx ; call 0xf7e18
0x000000000010f95b : jle 0x10f9cf ; ret
0x000000000010f9a7 : jle 0x10fa1f ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000001102e3 : jle 0x110357 ; ret
0x000000000011036c : jle 0x1103e7 ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x000000000011abba : jle 0x11abc3 ; inc dword ptr [rbp - 0x7cc08b40] ; ret
0x0000000000122bf5 : jle 0x122bfb ; add byte ptr [rax], al ; syscall
0x000000000013aeb6 : jle 0x13aefe ; or eax, dword ptr [rax] ; syscall
0x00000000001518b1 : jle 0x1518bc ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000155ddc : jle 0x155df0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000186d4c : jle 0x186d69 ; movsxd rax, ecx ; ret
0x0000000000186fce : jle 0x187076 ; ret
0x000000000002943e : jle 0x294ae ; sbb al, 0 ; syscall
0x000000000003330a : jle 0x33339 ; sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000009af19 : jle 0x9aea6 ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000b4de1 : jle 0xb4e30 ; bsf eax, edx ; ret
0x00000000000e7ec1 : jle 0xe7ec7 ; add byte ptr [rax], al ; ret
0x00000000000ed4e8 : jle 0xed4e2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ed4e7 : jle 0xed4e3 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000efa01 : jle 0xef994 ; je 0xefa2f ; sbb al, 0x89 ; ret 0x8348
0x000000000010ac3c : jmp 0x10ac02
0x000000000010f83f : jmp 0x10f805
0x000000000010f85c : jmp 0x10f822
0x0000000000115390 : jmp 0x11535e
0x00000000001164f3 : jmp 0x1164b9
0x0000000000116d82 : jmp 0x116d50
0x0000000000123c55 : jmp 0x123c1b
0x0000000000123d93 : jmp 0x123d59
0x0000000000123e4b : jmp 0x123e11
0x0000000000124093 : jmp 0x124059
0x000000000012e82d : jmp 0x12e7f3
0x0000000000133ba8 : jmp 0x133b76
0x0000000000133e18 : jmp 0x133de6
0x000000000013ee48 : jmp 0x13ee16
0x0000000000143974 : jmp 0x143942
0x0000000000154b3b : jmp 0x154b01
0x000000000015973e : jmp 0x159704
0x0000000000162f39 : jmp 0x162f07
0x0000000000166787 : jmp 0x16674d
0x0000000000190eb8 : jmp 0x190e86
0x0000000000190f36 : jmp 0x190f04
0x00000000001913c8 : jmp 0x191396
0x0000000000191446 : jmp 0x191414
0x00000000001924e8 : jmp 0x1924b6
0x0000000000192566 : jmp 0x192534
0x00000000001929f8 : jmp 0x1929c6
0x0000000000192a76 : jmp 0x192a44
0x000000000019a19b : jmp 0x19a169
0x0000000000048a5e : jmp 0x25502
0x000000000002c6b8 : jmp 0x2c686
0x000000000013fcfe : jmp 0x3baec705
0x0000000000046dc4 : jmp 0x46d8a
0x000000000006c0fe : jmp 0x68bd5
0x000000000006c39f : jmp 0x68dda
0x000000000006e1a5 : jmp 0x6aca2
0x000000000006e242 : jmp 0x6aca5
0x000000000006e26f : jmp 0x6ad6b
0x000000000006e6cb : jmp 0x6b194
0x0000000000073580 : jmp 0x6f7d8
0x0000000000074340 : jmp 0x705df
0x0000000000074719 : jmp 0x7121c
0x0000000000076709 : jmp 0x72913
0x00000000000826fa : jmp 0x826c0
0x00000000000843bb : jmp 0x84389
0x00000000000889b2 : jmp 0x88980
0x000000000008eb43 : jmp 0x8eb09
0x0000000000132b27 : jmp 0x8ed42
0x00000000000952b0 : jmp 0x9527e
0x000000000009574f : jmp 0x9571d
0x00000000000a5150 : jmp 0xa511e
0x00000000000ab6d3 : jmp 0xa790d
0x00000000000ab671 : jmp 0xa8173
0x00000000000b46cc : jmp 0xb4692
0x00000000000b48ec : jmp 0xb48b2
0x00000000000be84e : jmp 0xbe814
0x00000000000be91f : jmp 0xbe8e5
0x00000000000be98e : jmp 0xbe954
0x00000000000bf27e : jmp 0xbf244
0x00000000000bf6df : jmp 0xbf6ad
0x00000000000c8911 : jmp 0xc88df
0x00000000000e0e8c : jmp 0xe0e5a
0x00000000000e60ee : jmp 0xe60b4
0x000000000015c1b0 : jmp 0xe8c9f
0x00000000000ebaf7 : jmp 0xebabd
0x00000000000ed828 : jmp 0xed7ee
0x00000000000c7e2b : jmp 0xffffffff8d5740bb
0x00000000000457bb : jmp 0xffffffffc3046f62
0x00000000000d2163 : jmp 0xffffffffc30d216c
0x0000000000059515 : jmp 0xffffffffc3151e6a
0x00000000001998bc : jmp 0xffffffffcba2e5c8
0x0000000000151d99 : jmp 0xffffffffead6e029
0x0000000000104ac6 : jmp 0xfffffffffafa14ce
0x0000000000119303 : jmp qword ptr [r8]
0x0000000000048ea2 : jmp qword ptr [rax]
0x00000000000d9b94 : jmp qword ptr [rbx]
0x000000000010e38c : jmp qword ptr [rcx]
0x000000000010bd72 : jmp qword ptr [rdi]
0x00000000000ffdf6 : jmp qword ptr [rdx]
0x0000000000043cc5 : jmp r10
0x0000000000034b11 : jmp r8
0x0000000000169372 : jmp r9
0x0000000000026ed1 : jmp rax
0x000000000003dd1d : jmp rbx
0x0000000000083f56 : jmp rcx
0x00000000000e5f99 : jmp rdi
0x0000000000043b97 : jmp rdx
0x000000000003b805 : jmp rsi
0x00000000000f6e4d : jmp rsp
0x0000000000105c51 : jne 0x105cac ; add rsp, 0x38 ; ret
0x0000000000105cef : jne 0x105ce5 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000109df3 : jne 0x109de0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f3c1 : jne 0x10f3df ; mov eax, 0x11 ; syscall
0x000000000010f471 : jne 0x10f48f ; mov eax, 0x12 ; syscall
0x000000000010f83a : jne 0x10f84e ; mov edx, dword ptr [rbx + 4] ; jmp 0x10f80a
0x000000000010f9ce : jne 0x10f9dc ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000110083 : jne 0x110089 ; add byte ptr [rax], al ; syscall
0x000000000011040b : jne 0x110427 ; add rsp, 0x28 ; ret
0x00000000001106e0 : jne 0x1106ed ; add rsp, 0x18 ; ret
0x0000000000110732 : jne 0x11073f ; add rsp, 0x18 ; ret
0x0000000000110b99 : jne 0x110bcf ; mov eax, 0x85 ; syscall
0x0000000000110bfc : jne 0x110c2f ; mov eax, 0x103 ; syscall
0x0000000000110e8f : jne 0x110edf ; mov eax, 0x10c ; syscall
0x000000000011114d : jne 0x1111b7 ; mov eax, 0x101 ; syscall
0x000000000011126e : jne 0x111282 ; syscall
0x000000000011130e : jne 0x111327 ; mov eax, 1 ; syscall
0x0000000000111782 : jne 0x1117b7 ; mov eax, 0x48 ; syscall
0x0000000000111aae : jne 0x111ac7 ; mov eax, 3 ; syscall
0x0000000000111c2e : jne 0x111c47 ; mov eax, 0x55 ; syscall
0x0000000000112e23 : jne 0x112e36 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000115bee : jne 0x115c07 ; mov eax, 7 ; syscall
0x0000000000115ce5 : jne 0x115d6e ; add rsp, 0x40 ; pop r12 ; ret
0x0000000000116271 : jne 0x11628f ; mov eax, 0x146 ; syscall
0x0000000000116461 : jne 0x11647f ; mov eax, 0x115 ; syscall
0x0000000000116511 : jne 0x11652f ; mov eax, 0x11d ; syscall
0x000000000011663b : jne 0x116689 ; add rsp, 0x68 ; ret
0x00000000001166ca : jne 0x116719 ; add rsp, 0x18 ; ret
0x00000000001167b2 : jne 0x116801 ; add rsp, 0x58 ; ret
0x0000000000116850 : jne 0x1168a1 ; add rsp, 0x58 ; ret
0x0000000000116d5d : jne 0x116d8d ; mov eax, r9d ; add rsp, 0x38 ; ret
0x0000000000116dcd : jne 0x116de1 ; add rsp, 0x18 ; ret
0x00000000001176ae : jne 0x1176c7 ; mov eax, 0x13 ; syscall
0x000000000011774e : jne 0x117767 ; mov eax, 0x14 ; syscall
0x0000000000117c40 : jne 0x117c77 ; mov eax, 0x71 ; syscall
0x0000000000117c5f : jne 0x117cc1 ; add rsp, 0x38 ; ret
0x0000000000117ce0 : jne 0x117d17 ; mov eax, 0x72 ; syscall
0x0000000000117cff : jne 0x117d61 ; add rsp, 0x38 ; ret
0x0000000000117d98 : jne 0x117d9e ; add byte ptr [rax], al ; syscall
0x0000000000117db5 : jne 0x117e04 ; add esp, 0x38 ; ret
0x0000000000117db4 : jne 0x117e31 ; add rsp, 0x38 ; ret
0x0000000000117e85 : jne 0x117ed4 ; add esp, 0x38 ; ret
0x0000000000117e84 : jne 0x117f01 ; add rsp, 0x38 ; ret
0x0000000000117f7e : jne 0x117f8b ; add rsp, 0x28 ; ret
0x0000000000118241 : jne 0x11825f ; mov eax, 0x17 ; syscall
0x0000000000118342 : jne 0x118377 ; mov eax, 0x10e ; syscall
0x000000000011846e : jne 0x118487 ; mov eax, 0x4a ; syscall
0x000000000011852e : jne 0x118547 ; mov eax, 0x4b ; syscall
0x0000000000118879 : jne 0x1188cd ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000118ac4 : jne 0x118add ; add rsp, 0x58 ; ret
0x0000000000118b3d : jne 0x118b4a ; add rsp, 0x28 ; ret
0x0000000000118c14 : jne 0x118c53 ; add rsp, 0x68 ; ret
0x0000000000118ffa : jne 0x118fd8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001190db : jne 0x1190b8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000119242 : jne 0x1191f7 ; xor eax, eax ; pop rbp ; ret
0x000000000011929d : jne 0x119272 ; ret
0x0000000000119d88 : jne 0x119dcb ; add rsp, 0x38 ; ret
0x0000000000119e57 : jne 0x119e9b ; add rsp, 0x38 ; ret
0x000000000011a5be : jne 0x11a5d7 ; mov eax, 1 ; ret
0x000000000011ae1a : jne 0x11ae31 ; sub dword ptr [rip + 0xd372d], 1 ; ret
0x000000000011b4a8 : jne 0x11b4bb ; add rsp, 0xd8 ; ret
0x000000000011b581 : jne 0x11b594 ; add rsp, 0xd8 ; ret
0x000000000011bbee : jne 0x11bc07 ; mov eax, 0x1a ; syscall
0x000000000011c8c9 : jne 0x11c8d6 ; add rsp, 0x18 ; ret
0x000000000011cd8d : jne 0x11cdbc ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011d8c6 : jne 0x11d8d9 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000011d974 : jne 0x11d987 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011da3e : jne 0x11da6e ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011da7f : jne 0x11dad6 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011daaf : jne 0x11db36 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011db71 : jne 0x11db96 ; mov rdi, qword ptr [r13] ; call rbx
0x000000000011dcc1 : jne 0x11dd06 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dced : jne 0x11dd5d ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dba5 : jne 0x11ddbb ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc65 : jne 0x11de15 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc35 : jne 0x11de6f ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc05 : jne 0x11dec9 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dbd5 : jne 0x11df23 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dc95 : jne 0x11df7d ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011df85 : jne 0x11dfc7 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfae : jne 0x11e032 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd16 : jne 0x11e0a4 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de7b : jne 0x11e112 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd9a : jne 0x11e180 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011df2f : jne 0x11e1ee ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ddf4 : jne 0x11e25c ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ddc7 : jne 0x11e2ca ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de4e : jne 0x11e338 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ded5 : jne 0x11e3a6 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd40 : jne 0x11e414 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011de21 : jne 0x11e482 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011df02 : jne 0x11e4f0 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dd6d : jne 0x11e55e ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dea8 : jne 0x11e5cc ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011df5c : jne 0x11e63a ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011ef3d : jne 0x11ef50 ; add rsp, 0xd8 ; ret
0x000000000011effd : jne 0x11f010 ; add rsp, 0xd8 ; ret
0x000000000011f1db : jne 0x11f1ee ; add rsp, 0x418 ; ret
0x000000000011f23e : jne 0x11f27f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f444 : jne 0x11f457 ; add rsp, 0xd8 ; ret
0x000000000011f6b1 : jne 0x11f6c4 ; add rsp, 0xd8 ; ret
0x000000000011f6c9 : jne 0x11f6ff ; mov eax, 0x88 ; syscall
0x000000000011fdf0 : jne 0x11fe34 ; mov rdx, rax ; jmp 0x11fe0d
0x0000000000120208 : jne 0x1201fe ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001222b9 : jne 0x1222d9 ; add rsp, 0x68 ; ret
0x0000000000122611 : jne 0x12262f ; mov eax, 0xe8 ; syscall
0x00000000001226c1 : jne 0x1226df ; mov eax, 0x114 ; syscall
0x0000000000122771 : jne 0x12278f ; mov eax, 0x116 ; syscall
0x0000000000122821 : jne 0x12283f ; mov eax, 0x113 ; syscall
0x00000000001228ee : jne 0x122907 ; mov eax, 0x130 ; syscall
0x00000000001232ee : jne 0x123307 ; mov eax, 0x2b ; syscall
0x00000000001233be : jne 0x1233d7 ; mov eax, 0x2a ; syscall
0x00000000001235e1 : jne 0x1235ff ; mov eax, 0x2d ; syscall
0x000000000012369e : jne 0x1236b7 ; mov eax, 0x2f ; syscall
0x00000000001237fe : jne 0x123817 ; mov eax, 0x2e ; syscall
0x00000000001238a1 : jne 0x1238bf ; mov eax, 0x2c ; syscall
0x0000000000123cde : jne 0x123ceb ; add rsp, 0x18 ; ret
0x0000000000123d01 : jne 0x123d1f ; mov eax, 0x120 ; syscall
0x0000000000123db1 : jne 0x123dcf ; mov eax, 0x12b ; syscall
0x0000000000123e61 : jne 0x123e7f ; mov eax, 0x133 ; syscall
0x0000000000124001 : jne 0x12401f ; mov eax, 0x45 ; syscall
0x00000000001240b1 : jne 0x1240cf ; mov eax, 0x46 ; syscall
0x0000000000124254 : jne 0x124281 ; mov eax, 0x42 ; syscall
0x0000000000124273 : jne 0x1242c1 ; add rsp, 0x58 ; ret
0x0000000000126281 : jne 0x12628a ; ret
0x00000000001262ea : jne 0x1262f2 ; ret
0x00000000001264d3 : jne 0x1264e2 ; ret
0x0000000000126bd1 : jne 0x126bda ; ret
0x0000000000126c2e : jne 0x126c3a ; ret
0x0000000000126e03 : jne 0x126e12 ; ret
0x000000000012aaae : jne 0x12aabe ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cccf : jne 0x12cce2 ; add rsp, 0xd8 ; ret
0x000000000012e800 : jne 0x12e838 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e9f8 : jne 0x12ea0b ; add rsp, 0xd8 ; ret
0x000000000012ea96 : jne 0x12ea86 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fa67 : jne 0x12f9f3 ; call rax
0x000000000012ffdd : jne 0x12ffd6 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000130059 : jne 0x130070 ; cmp qword ptr [rdi], 0 ; je 0x130078 ; ret
0x00000000001301f5 : jne 0x130227 ; mov eax, 0xe6 ; syscall
0x00000000001303fb : jne 0x1303e6 ; lea rdi, [rip - 0x184] ; call rax
0x0000000000130434 : jne 0x130514 ; leave ; ret
0x000000000013104e : jne 0x130ffd ; mov rax, rdi ; ret
0x00000000001311b9 : jne 0x1311d1 ; add rsp, 0xd8 ; ret
0x00000000001312af : jne 0x1312ce ; add rsp, 0xd8 ; ret
0x00000000001313c9 : jne 0x1313dc ; add rsp, 0xd8 ; ret
0x0000000000131491 : jne 0x1314a4 ; add rsp, 0xd8 ; ret
0x0000000000131aee : jne 0x131abb ; jmp 0x131aab
0x0000000000131e3f : jne 0x131e59 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013212e : jne 0x1320de ; mov rax, rdi ; ret
0x00000000001322cf : jne 0x1322ee ; add rsp, 0xd8 ; ret
0x00000000001323e9 : jne 0x1323fc ; add rsp, 0xd8 ; ret
0x00000000001324b1 : jne 0x1324c4 ; add rsp, 0xd8 ; ret
0x00000000001328f8 : jne 0x13290b ; add rsp, 0x28 ; ret
0x0000000000132958 : jne 0x13296b ; add rsp, 0x28 ; ret
0x0000000000132a21 : jne 0x132a34 ; add rsp, 0xd8 ; ret
0x0000000000132b01 : jne 0x132b14 ; add rsp, 0xd8 ; ret
0x0000000000132be1 : jne 0x132bf4 ; add rsp, 0xd8 ; ret
0x000000000013998f : jne 0x1399bf ; add rsp, 0x38 ; ret
0x0000000000139a2c : jne 0x139a39 ; add rsp, 0x38 ; ret
0x0000000000139a99 : jne 0x139aa6 ; add rsp, 0x28 ; ret
0x000000000013af23 : jne 0x13af13 ; pop rbx ; ret
0x000000000013b7a9 : jne 0x13b7b3 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000013da0d : jne 0x13da3f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013ed0c : jne 0x13ece7 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013f6ed : jne 0x13f70d ; mov eax, r8d ; ret
0x000000000013fab2 : jne 0x13fac6 ; add rsp, 0x18 ; ret
0x000000000013fbad : jne 0x13fbfd ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013fc49 : jne 0x13fc7f ; add rsp, 0x38 ; ret
0x000000000014007b : jne 0x1400d9 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001414d9 : jne 0x1414fc ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014152e : jne 0x14153b ; add rsp, 0x18 ; ret
0x0000000000141581 : jne 0x14158e ; add rsp, 0x28 ; ret
0x0000000000141e10 : jne 0x141e1d ; add rsp, 0x18 ; ret
0x0000000000142387 : jne 0x142372 ; mov eax, r10d ; ret
0x000000000014396e : jne 0x1438f3 ; jmp 0x143948
0x0000000000144390 : jne 0x14439a ; ret
0x00000000001443d4 : jne 0x1443c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001444be : jne 0x1444ce ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000144477 : jne 0x1444dc ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000001461fe : jne 0x14620a ; ret
0x0000000000147c2d : jne 0x147c3e ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000149434 : jne 0x1493ba ; ret
0x000000000014959b : jne 0x1495aa ; add rsp, 0x40 ; pop rbp ; ret
0x000000000014a737 : jne 0x14a729 ; add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000014a6de : jne 0x14a75f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014a94f : jne 0x14a98d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014b527 : jne 0x14b538 ; mov dword ptr [rsi], 0 ; ret
0x000000000014c371 : jne 0x14c3ba ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c8e4 : jne 0x14c919 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014c982 : jne 0x14c9bc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014d595 : jne 0x14d5ae ; add rsp, 0x40 ; pop rbx ; ret
0x000000000015104c : jne 0x151052 ; ret
0x00000000001517c7 : jne 0x151832 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000154923 : jne 0x154948 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154c75 : jne 0x154cf2 ; add rsp, 0x10 ; pop r12 ; ret
0x0000000000154eec : jne 0x154f61 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000015502c : jne 0x1550a1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001554b3 : jne 0x1554cb ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001556c2 : jne 0x155743 ; add rsp, 0x28 ; pop rbx ; pop r12 ; ret
0x0000000000156b57 : jne 0x156b66 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000156be5 : jne 0x156bf2 ; add rsp, 0x78 ; ret
0x0000000000156c5b : jne 0x156c68 ; add rsp, 0x78 ; ret
0x0000000000156ccb : jne 0x156cd8 ; add rsp, 0x78 ; ret
0x0000000000156d3b : jne 0x156d48 ; add rsp, 0x78 ; ret
0x0000000000156d9c : jne 0x156da9 ; add rsp, 0x78 ; ret
0x0000000000156e00 : jne 0x156e0d ; add rsp, 0x78 ; ret
0x0000000000156e6b : jne 0x156e78 ; add rsp, 0x78 ; ret
0x0000000000156eee : jne 0x156efb ; add rsp, 0x78 ; ret
0x0000000000157423 : jne 0x15744e ; add rsp, 0x28 ; ret
0x000000000015770c : jne 0x157712 ; ret
0x0000000000158e96 : jne 0x158ea3 ; add rsp, 0x48 ; ret
0x0000000000158f01 : jne 0x158f4a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000158f91 : jne 0x158fd9 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159003 : jne 0x158ffb ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000159061 : jne 0x1590ac ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001594b1 : jne 0x1594fb ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159541 : jne 0x15958a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001595d0 : jne 0x159628 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000159670 : jne 0x1596c8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000159711 : jne 0x159760 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001597a1 : jne 0x1597ea ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159eeb : jne 0x159ec9 ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000015a491 : jne 0x15a4dc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a521 : jne 0x15a56c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a5b1 : jne 0x15a5fc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015a641 : jne 0x15a68c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015ad8d : jne 0x15ada0 ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015adee : jne 0x15ae01 ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015ae5a : jne 0x15ae69 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015aecd : jne 0x15aedc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015fc62 : jne 0x15fc9a ; add rsp, 0x18 ; ret
0x000000000015fe10 : jne 0x15fe25 ; xor eax, eax ; pop rbp ; ret
0x0000000000160119 : jne 0x160153 ; add rsp, 0x10 ; pop rbp ; ret
0x00000000001601a9 : jne 0x1601e3 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000160f12 : jne 0x160f56 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000161e28 : jne 0x161e47 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000162f14 : jne 0x162f54 ; add rsp, 0x58 ; ret
0x000000000016300b : jne 0x16305a ; add rsp, 0x68 ; ret
0x00000000001631a4 : jne 0x1631fa ; add rsp, 0x68 ; ret
0x000000000016326d : jne 0x1632b2 ; add rsp, 0x38 ; ret
0x0000000000163eaf : jne 0x163eca ; add rsp, 0x38 ; ret
0x0000000000163fa2 : jne 0x163fb3 ; pop rbx ; ret
0x0000000000163fd2 : jne 0x163fe3 ; pop rbx ; ret
0x0000000000164125 : jne 0x164143 ; mov eax, 0x27 ; syscall
0x000000000016685b : jne 0x16686a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001668e1 : jne 0x1668f0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017b811 : jne 0x17bdc6 ; ret
0x0000000000186ed4 : jne 0x186f48 ; test esi, esi ; je 0x186ec0 ; xor eax, eax ; ret
0x00000000001873cd : jne 0x1873b7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001878a2 : jne 0x187887 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000187bd3 : jne 0x187bf7 ; xor eax, eax ; vzeroupper ; ret
0x000000000018828a : jne 0x188295 ; vzeroupper ; ret
0x0000000000188384 : jne 0x188296 ; ret
0x00000000001884cf : jne 0x188299 ; vzeroupper ; ret
0x000000000018bf13 : jne 0x18bf48 ; mov rax, r8 ; vzeroupper ; ret
0x000000000018d790 : jne 0x18dbc9 ; vzeroupper ; ret
0x000000000018e4a8 : jne 0x18e8f9 ; vzeroupper ; ret
0x000000000018f0d8 : jne 0x18f0c0 ; vzeroupper ; ret
0x000000000018f23a : jne 0x18f245 ; vzeroupper ; ret
0x000000000018f2c2 : jne 0x18f246 ; ret
0x000000000018f40f : jne 0x18f249 ; vzeroupper ; ret
0x000000000018f266 : jne 0x18f24e ; ret
0x000000000018f683 : jne 0x18f6a7 ; xor eax, eax ; vzeroupper ; ret
0x000000000018f7de : jne 0x18f7be ; vzeroupper ; ret
0x000000000018f7fd : jne 0x18f7bf ; vzeroupper ; ret
0x000000000018f949 : jne 0x18f7c2 ; vzeroupper ; ret
0x000000000018f8f2 : jne 0x18f931 ; retf
0x000000000018fa22 : jne 0x18fa61 ; retf
0x000000000018fafb : jne 0x18fae7 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018fc59 : jne 0x18fc2e ; vzeroupper ; ret
0x000000000018fdcf : jne 0x18fc32 ; vzeroupper ; ret
0x000000000018fd6f : jne 0x18fdae ; retf
0x000000000018fed2 : jne 0x18ff11 ; retf
0x000000000018ffd0 : jne 0x18ffb7 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000191fed : jne 0x192017 ; xor eax, eax ; ret
0x00000000001915e1 : jne 0x19201b ; xor eax, eax ; ret
0x0000000000191609 : jne 0x192027 ; xor eax, eax ; ret
0x0000000000192e2d : jne 0x192e57 ; xor eax, eax ; ret
0x0000000000192c11 : jne 0x192e5b ; xor eax, eax ; ret
0x0000000000192e61 : jne 0x192e6a ; xor eax, eax ; ret
0x0000000000192c37 : jne 0x192e6e ; xor eax, eax ; ret
0x0000000000193f9b : jne 0x193f7b ; vzeroupper ; ret
0x0000000000194105 : jne 0x194096 ; lea rax, [rdi + 3] ; ret
0x00000000001940d7 : jne 0x194096 ; lea rax, [rdi + 7] ; ret
0x00000000001940d6 : jne 0x194097 ; lea rax, [rdi + 7] ; ret
0x0000000000195864 : jne 0x195a78 ; xor eax, eax ; ret
0x0000000000195a69 : jne 0x195a89 ; xor eax, eax ; ret
0x0000000000195911 : jne 0x195a8d ; xor eax, eax ; ret
0x0000000000195a81 : jne 0x195a8e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000196096 : jne 0x1960a4 ; xor eax, eax ; ret
0x0000000000195f6d : jne 0x1960a6 ; ret
0x000000000019a855 : jne 0x19a840 ; pop rbx ; ret
0x000000000019bace : jne 0x19bab6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019bba6 : jne 0x19bb96 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019bbf9 : jne 0x19bbd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019be1b : jne 0x19be08 ; pop rbx ; ret
0x000000000019bebd : jne 0x19bea3 ; pop rbx ; ret
0x000000000019c04f : jne 0x19c048 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000026ab5 : jne 0x26a7d ; ret
0x0000000000028d19 : jne 0x28cb0 ; mov rdi, rbx ; call rsi
0x0000000000036dcf : jne 0x36ddd ; mov eax, r8d ; ret
0x000000000004436d : jne 0x4434a ; ret
0x00000000000451d6 : jne 0x451e8 ; fadd st(0) ; add rsp, 8 ; ret
0x000000000004559c : jne 0x455ae ; addsd xmm0, xmm0 ; ret
0x0000000000045702 : jne 0x45719 ; test eax, 0x7fffff ; je 0x45719 ; ret
0x00000000000458c8 : jne 0x458d6 ; addss xmm0, xmm0 ; ret
0x0000000000045f75 : jne 0x45f82 ; add rsp, 0x18 ; ret
0x000000000004601a : jne 0x46030 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000462cf : jne 0x462e2 ; add rsp, 0x148 ; ret
0x00000000000468d4 : jne 0x468ee ; add rsp, 0x118 ; ret
0x0000000000046957 : jne 0x46971 ; add rsp, 0x118 ; ret
0x0000000000046a62 : jne 0x46a75 ; add rsp, 0x98 ; ret
0x0000000000046ca6 : jne 0x46cc9 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000047002 : jne 0x47015 ; add rsp, 0x148 ; ret
0x0000000000047732 : jne 0x47745 ; add rsp, 0xa8 ; ret
0x0000000000049cb9 : jne 0x49cb6 ; mov edi, ebp ; call 0xe5fb6
0x000000000004a5db : jne 0x4a5a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a66f : jne 0x4a67b ; pop rbx ; ret
0x000000000004a743 : jne 0x4a750 ; add rsp, 0x28 ; ret
0x000000000004a833 : jne 0x4a840 ; add rsp, 0x28 ; ret
0x000000000004ab67 : jne 0x4abc0 ; add rsp, 0x18 ; ret
0x000000000004b0bd : jne 0x4b0ca ; add rsp, 0x18 ; ret
0x000000000004b10a : jne 0x4b117 ; add rsp, 0x18 ; ret
0x000000000004b15c : jne 0x4b169 ; add rsp, 0x18 ; ret
0x000000000004b1a9 : jne 0x4b1b6 ; add rsp, 0x18 ; ret
0x000000000004b1fc : jne 0x4b209 ; add rsp, 0x18 ; ret
0x000000000004b249 : jne 0x4b256 ; add rsp, 0x18 ; ret
0x000000000004b51e : jne 0x4b537 ; mov eax, 0x13e ; syscall
0x0000000000054dea : jne 0x54e24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000054e9a : jne 0x54f03 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000054f68 : jne 0x54fcc ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000055e55 : jne 0x55e68 ; add rsp, 0xd8 ; ret
0x000000000005722f : jne 0x57242 ; add rsp, 0xd8 ; ret
0x00000000000573ed : jne 0x573e3 ; pop rbx ; ret
0x0000000000057418 : jne 0x57413 ; pop rbx ; ret
0x000000000005811e : jne 0x58127 ; push r10 ; ret
0x0000000000058627 : jne 0x58630 ; push r10 ; ret
0x000000000005870c : jne 0x586f7 ; mov eax, 1 ; ret
0x0000000000058954 : jne 0x5893f ; mov eax, 1 ; ret
0x0000000000058d23 : jne 0x58d15 ; mov rax, rdx ; ret
0x0000000000059607 : jne 0x595fd ; mov rax, rdx ; ret
0x000000000005a9a2 : jne 0x5aa2c ; leave ; ret
0x000000000005acca : jne 0x5acb3 ; mov eax, 1 ; ret
0x000000000005e13a : jne 0x5e195 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005e955 : jne 0x5e97b ; add rsp, 0x38 ; ret
0x0000000000064d58 : jne 0x64d6b ; add rsp, 0xd8 ; ret
0x0000000000064e2d : jne 0x64e40 ; add rsp, 0xd8 ; ret
0x0000000000064ee4 : jne 0x64ef7 ; add rsp, 0xd8 ; ret
0x0000000000064fb6 : jne 0x64fc9 ; add rsp, 0xd8 ; ret
0x0000000000065078 : jne 0x6508b ; add rsp, 0xd8 ; ret
0x0000000000065138 : jne 0x6514b ; add rsp, 0xd8 ; ret
0x0000000000065226 : jne 0x65239 ; add rsp, 0xd8 ; ret
0x00000000000652fd : jne 0x65310 ; add rsp, 0xd8 ; ret
0x000000000006588c : jne 0x65893 ; pop rbx ; ret
0x0000000000065ed7 : jne 0x65eed ; add rsp, 0x18 ; ret
0x0000000000066178 : jne 0x66185 ; sub dword ptr [rdi], 1 ; ret
0x0000000000066260 : jne 0x66273 ; add rsp, 0xd8 ; ret
0x000000000006633b : jne 0x6634e ; add rsp, 0xd8 ; ret
0x00000000000792a1 : jne 0x792ac ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e001 : jne 0x7dfbf ; mov rdi, r13 ; call 0x8a247
0x0000000000086faa : jne 0x86fc1 ; sub dword ptr [rip + 0x1664ad], 1 ; ret
0x00000000000888bc : jne 0x88881 ; jmp 0x88854
0x0000000000089538 : jne 0x8954b ; add rsp, 0xd8 ; ret
0x00000000000895f4 : jne 0x89607 ; add rsp, 0xd8 ; ret
0x00000000000896ed : jne 0x89700 ; add rsp, 0xd8 ; ret
0x00000000000897bd : jne 0x897d0 ; add rsp, 0xd8 ; ret
0x0000000000089876 : jne 0x89889 ; add rsp, 0xd8 ; ret
0x0000000000089e91 : jne 0x89e82 ; ret
0x0000000000090d38 : jne 0x90d51 ; add rsp, 0x48 ; ret
0x00000000000912c2 : jne 0x912d9 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093a19 : jne 0x93a22 ; ret
0x000000000009415e : jne 0x94179 ; sub dword ptr [rip + 0x159339], 1 ; ret
0x0000000000094859 : jne 0x9484a ; ret
0x00000000000952ae : jne 0x952a3 ; jmp 0x95280
0x0000000000095896 : jne 0x9588a ; ret
0x0000000000095b51 : jne 0x95b1b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000966be : jne 0x966b2 ; ret
0x0000000000096a6a : jne 0x96a81 ; sub dword ptr [rip + 0x156a2d], 1 ; ret
0x0000000000097dcc : jne 0x97e02 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097f9e : jne 0x97fcf ; mov eax, 0x23 ; syscall
0x000000000009881d : jne 0x98811 ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000009c3bb : jne 0x9c401 ; add rsp, 0x40 ; pop rbp ; ret
0x000000000009d05e : jne 0x9d046 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f41f : jne 0x9f40e ; sub rax, 0x10 ; ret
0x00000000000a1a01 : jne 0xa19f4 ; xor eax, eax ; ret
0x00000000000a1a6b : jne 0xa1a45 ; mov rdi, rsi ; call rax
0x00000000000a1adb : jne 0xa1ad2 ; ret
0x00000000000a45a4 : jne 0xa4592 ; ret
0x00000000000a4fa7 : jne 0xa4f99 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab7bf : jne 0xab7b5 ; mov qword ptr [rdx], rcx ; ret
0x00000000000ab91f : jne 0xab915 ; mov rax, r8 ; ret
0x00000000000ab953 : jne 0xab945 ; mov rax, r8 ; ret
0x00000000000ab990 : jne 0xab975 ; mov rax, r8 ; ret
0x00000000000aba40 : jne 0xaba31 ; cmp eax, ecx ; je 0xaba31 ; mov rax, r8 ; ret
0x00000000000aba72 : jne 0xaba62 ; ret
0x00000000000abacc : jne 0xabaaa ; ret
0x00000000000ad7ec : jne 0xad7d6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000af2f7 : jne 0xaf354 ; xor eax, eax ; ret
0x00000000000af2c7 : jne 0xaf378 ; xor eax, eax ; ret
0x00000000000af7aa : jne 0xaf824 ; xor eax, eax ; ret
0x00000000000af7d9 : jne 0xaf854 ; xor eax, eax ; ret
0x00000000000b4f07 : jne 0xb4f12 ; xor rax, rax ; ret
0x00000000000ba86a : jne 0xbb126 ; ret
0x00000000000bbf4d : jne 0xbc976 ; ret
0x00000000000be681 : jne 0xbe672 ; ret
0x00000000000be731 : jne 0xbe722 ; ret
0x00000000000be8a1 : jne 0xbe896 ; lea rax, [rcx - 1] ; ret
0x00000000000be9f1 : jne 0xbe9e6 ; sub rax, 1 ; ret
0x00000000000bf0f7 : jne 0xbf102 ; mov rax, rdi ; ret
0x00000000000bf1d1 : jne 0xbf1ba ; ret
0x00000000000bf6d9 : jne 0xbf59c ; jmp 0xbf6b3
0x00000000000bfcf1 : jne 0xbfccd ; mov rax, r8 ; ret
0x00000000000bfde8 : jne 0xbfddc ; xor eax, eax ; ret
0x00000000000bfe7e : jne 0xbfe1b ; test edx, edx ; jne 0xbfe66 ; ret
0x00000000000bfe82 : jne 0xbfe62 ; ret
0x00000000000c116d : jne 0xc1162 ; ret
0x00000000000c99db : jne 0xc9a44 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c9ab9 : jne 0xc9b1d ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c9b8b : jne 0xc9bc5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cd283 : jne 0xcd2ab ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cdd60 : jne 0xcdd73 ; add rsp, 0xd8 ; ret
0x00000000000cde3b : jne 0xcde4e ; add rsp, 0xd8 ; ret
0x00000000000d118b : jne 0xd11e6 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d1507 : jne 0xd1564 ; xor eax, eax ; ret
0x00000000000d14d7 : jne 0xd1588 ; xor eax, eax ; ret
0x00000000000d21d6 : jne 0xd2252 ; ret
0x00000000000d20ff : jne 0xd2256 ; ret
0x00000000000d20de : jne 0xd2258 ; xor eax, eax ; ret
0x00000000000d232a : jne 0xd2335 ; mov eax, r9d ; ret
0x00000000000d27cb : jne 0xd2826 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d2867 : jne 0xd2872 ; xor rax, rax ; ret
0x00000000000d33c3 : jne 0xd33df ; add rsp, 0x28 ; ret
0x00000000000d343d : jne 0xd344c ; add rsp, 0x40 ; pop rbp ; ret
0x00000000000d7305 : jne 0xd7327 ; add rsp, 0x28 ; ret
0x00000000000d7436 : jne 0xd744c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d7bdd : jne 0xd7bf9 ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000dd80c : jne 0xdd819 ; add rsp, 0x18 ; ret
0x00000000000e00dc : jne 0xe00e9 ; add rsp, 0x18 ; ret
0x00000000000e05d7 : jne 0xe05c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e21b0 : jne 0xe21e7 ; mov eax, 0x74 ; syscall
0x00000000000e21cf : jne 0xe2229 ; add rsp, 0x38 ; ret
0x00000000000e43cb : jne 0xe4444 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5c65 : jne 0xe5c7d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e5c8e : jne 0xe5ca7 ; mov eax, 0x22 ; syscall
0x00000000000e5d0e : jne 0xe5d27 ; mov eax, 0x23 ; syscall
0x00000000000e6506 : jne 0xe6550 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e66d6 : jne 0xe6720 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e7010 : jne 0xe7047 ; mov eax, 0x69 ; syscall
0x00000000000e702f : jne 0xe7089 ; add rsp, 0x38 ; ret
0x00000000000e70b0 : jne 0xe70e7 ; mov eax, 0x6a ; syscall
0x00000000000e70cf : jne 0xe7129 ; add rsp, 0x38 ; ret
0x00000000000e7383 : jne 0xe7389 ; add byte ptr [rax], al ; syscall
0x00000000000e7380 : jne 0xe73b7 ; mov eax, 0x75 ; syscall
0x00000000000e739f : jne 0xe7409 ; add rsp, 0x38 ; ret
0x00000000000e7430 : jne 0xe7467 ; mov eax, 0x77 ; syscall
0x00000000000e744f : jne 0xe74b9 ; add rsp, 0x38 ; ret
0x00000000000e7deb : jne 0xe7df2 ; ret
0x00000000000e7df9 : jne 0xe7e74 ; mov eax, 0x7d00 ; ret
0x00000000000e7e65 : jne 0xe7e8a ; mov eax, 0xfffa ; ret
0x00000000000e7f86 : jne 0xe7f97 ; mov eax, 0x40 ; ret
0x00000000000eb0f3 : jne 0xeb0a5 ; xor eax, eax ; ret
0x00000000000eb0b5 : jne 0xeb0f0 ; mov eax, 1 ; ret
0x00000000000eb0d6 : jne 0xeb110 ; mov eax, 1 ; ret
0x00000000000eb1e0 : jne 0xeb1d9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb2e1 : jne 0xeb2d9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1d00 : jne 0xf1d61 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000f8861 : jne 0xf8850 ; mov rdi, qword ptr [rbp - 0x70] ; call 0x25358
0x0000000000117c43 : jno 0x117c49 ; add byte ptr [rax], al ; syscall
0x00000000001637cb : jno 0x1637f0 ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000019189e : jno 0x1918ad ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000192f44 : jno 0x192f4d ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000019317e : jno 0x193187 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000001932e5 : jno 0x1932f6 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000019344a : jno 0x1934ce ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000089131 : jno 0x8913f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000892d8 : jno 0x892e6 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000a599e : jno 0xa5937 ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59cc
0x00000000000d6cd4 : jno 0xd6ced ; add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x1171
0x000000000010d866 : jnp 0x10d861 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 3
0x00000000001223e5 : jnp 0x1223eb ; add byte ptr [rax], al ; syscall
0x000000000013af1e : jnp 0x13af70 ; test rdi, rdi ; jne 0x13af18 ; pop rbx ; ret
0x00000000001568ac : jnp 0x156833 ; ret 0x3901
0x00000000000a19a3 : jnp 0xa19f2 ; mov rsi, r14 ; call rax
0x00000000000a1a42 : jnp 0xa1a8e ; call rax
0x00000000000d89cc : jnp 0xd8a37 ; mov qword ptr [rsp + 0x30], rdi ; call 0x25499
0x00000000000f1361 : jnp 0xf13ce ; add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x00000000000f1950 : jnp 0xf19bc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000f8857 : jnp 0xf883d ; call 0x25354
0x00000000000f884a : jnp 0xf8864 ; add rbx, 0x20 ; call 0x25358
0x0000000000062060 : jnp 0xffffffff8947b783 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000621c4 : jnp 0xffffffff8947b7e7 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000062779 : jnp 0xffffffff8947b89c ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000081b21 : jnp 0xffffffff8949ac44 ; adc cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000151c03 : jns 0x151c56 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001887b7 : jns 0x188792 ; retf 0xead3
0x0000000000188907 : jns 0x1888e2 ; retf 0xead3
0x0000000000188a57 : jns 0x188a32 ; retf 0xead3
0x0000000000188ba7 : jns 0x188b82 ; retf 0xead3
0x0000000000188cf7 : jns 0x188cd2 ; retf 0xead3
0x0000000000188e47 : jns 0x188e22 ; retf 0xead3
0x0000000000188f97 : jns 0x188f72 ; retf 0xead3
0x00000000001890e7 : jns 0x1890c2 ; retf 0xead3
0x0000000000189237 : jns 0x189212 ; retf 0xead3
0x0000000000189387 : jns 0x189362 ; retf 0xead3
0x00000000001894d7 : jns 0x1894b2 ; retf 0xead3
0x0000000000189627 : jns 0x189602 ; retf 0xead3
0x0000000000189777 : jns 0x189752 ; retf 0xead3
0x00000000001898c7 : jns 0x1898a2 ; retf 0xead3
0x0000000000189a17 : jns 0x1899f2 ; retf 0xead3
0x0000000000189e97 : jns 0x189e72 ; retf 0xead3
0x000000000018a017 : jns 0x189ff2 ; retf 0xead3
0x000000000018a197 : jns 0x18a172 ; retf 0xead3
0x000000000018a317 : jns 0x18a2f2 ; retf 0xead3
0x000000000018a497 : jns 0x18a472 ; retf 0xead3
0x000000000018a617 : jns 0x18a5f2 ; retf 0xead3
0x000000000018a797 : jns 0x18a772 ; retf 0xead3
0x000000000018a917 : jns 0x18a8f2 ; retf 0xead3
0x000000000018aa97 : jns 0x18aa72 ; retf 0xead3
0x000000000018ac17 : jns 0x18abf2 ; retf 0xead3
0x000000000018ad97 : jns 0x18ad72 ; retf 0xead3
0x000000000018af17 : jns 0x18aef2 ; retf 0xead3
0x000000000018b097 : jns 0x18b072 ; retf 0xead3
0x000000000018b217 : jns 0x18b1f2 ; retf 0xead3
0x000000000018b397 : jns 0x18b372 ; retf 0xead3
0x0000000000192f4b : jns 0x192f4e ; ret
0x0000000000193185 : jns 0x193188 ; ret
0x00000000001932ec : jns 0x1932f7 ; ret
0x000000000004acc9 : jns 0x4ac8d ; xor eax, eax ; ret
0x000000000009fd7e : jns 0x9fd95 ; add al, ch ; retf 0xf97c
0x00000000000a16d3 : jns 0xa1661 ; adc al, 0 ; call qword ptr [rax]
0x00000000000e7215 : jns 0xe721b ; add byte ptr [rax], al ; syscall
0x00000000000eb7b3 : jns 0xeb756 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000eca73 : jns 0xeca63 ; lea rax, [rdx + rax*8] ; jmp 0xeca55
0x00000000000be166 : jns 0xffffffffed3be4cc ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be1c8 : jns 0xffffffffed3be92e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1e8 : jns 0xffffffffed3bea4e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010f9a8 : jo 0x10f9be ; adc dword ptr [rdi + 0x78], edi ; ret
0x000000000011036d : jo 0x110386 ; adc dword ptr [rdi + 0xf8], edi ; ret
0x000000000011959c : jo 0x119562 ; lock dec dword ptr [rax + 1] ; ret
0x000000000011f830 : jo 0x11f836 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000120945 : jo 0x1208d2 ; ret 0xeac1
0x0000000000120944 : jo 0x1208d3 ; ret 0xeac1
0x000000000015625c : jo 0x1562c2 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015e3a5 : jo 0x15e398 ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000002ff52 : jo 0x2ff59 ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000003568f : jo 0x356b2 ; add byte ptr [rcx + rcx*4 + 0x25], al ; ret
0x0000000000037487 : jo 0x374d8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037486 : jo 0x374d9 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000006e26e : jo 0x6e25c ; cmc ; retf 0xffff
0x000000000008afce : jo 0x8b017 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000a28f4 : jo 0xa28ef ; ret 0
0x00000000000c0285 : jo 0xc02e7 ; pop rbp ; pop r12 ; ret
0x00000000000c077c : jo 0xc07de ; pop rbp ; pop r12 ; ret
0x00000000000d5cdc : jo 0xd5cbb ; cld ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000daaf0 : jo 0xdab04 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab00 : jo 0xdab14 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab10 : jo 0xdab24 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab20 : jo 0xdab34 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab30 : jo 0xdab44 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab40 : jo 0xdab54 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab50 : jo 0xdab64 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab60 : jo 0xdab74 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab5f : jo 0xdab75 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab70 : jo 0xdab84 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab80 : jo 0xdab94 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab90 : jo 0xdaba4 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000daba0 : jo 0xdabb4 ; add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x00000000000e72d5 : jo 0xe72db ; add byte ptr [rax], al ; syscall
0x00000000000f8aa8 : jo 0xf8a2f ; ret 0x4801
0x00000000000f8aa7 : jo 0xf8a30 ; ret 0x4801
0x00000000000f8b08 : jo 0xf8a8f ; ret 0x4801
0x00000000000f8b07 : jo 0xf8a90 ; ret 0x4801
0x00000000000fc41f : jo 0xfc428 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x00000000001223b5 : jp 0x1223bb ; add byte ptr [rax], al ; syscall
0x000000000012ef35 : jp 0x12ef8c ; mov rsi, rdx ; call rax
0x0000000000137842 : jp 0x1378bf ; or eax, dword ptr [rax] ; syscall
0x000000000013c486 : jp 0x13c4b9 ; or eax, dword ptr [rax] ; syscall
0x000000000014c4f3 : jp 0x14c553 ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014f24d : jp 0x14f1da ; retf 0x148
0x000000000018da42 : jp 0x18da4c ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000003590c : jp 0x3594f ; jbe 0x35930 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000004559a : jp 0x455b0 ; jne 0x455b0 ; addsd xmm0, xmm0 ; ret
0x00000000000458c6 : jp 0x458d8 ; jne 0x458d8 ; addss xmm0, xmm0 ; ret
0x0000000000056cc0 : jp 0x56ccc ; ret 0x1d74
0x0000000000109df4 : jrcxz 0x109e45 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f8f7 : jrcxz 0x11f900 ; loop 0x11f901 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000013018f : jrcxz 0x130195 ; add byte ptr [rax], al ; syscall
0x000000000015175e : jrcxz 0x151770 ; add byte ptr [rax - 0x77], cl ; in eax, 0x89 ; ret
0x000000000017069a : jrcxz 0x170695 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170699 : jrcxz 0x170696 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001731ca : jrcxz 0x1731c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001731c9 : jrcxz 0x1731c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000018fafc : jrcxz 0x18fb2d ; enter -0x73b, 0x77 ; ret
0x000000000002fc89 : jrcxz 0x2fcb6 ; ret
0x0000000000055d79 : jrcxz 0x55df6 ; sbb dword ptr [rax], eax ; call 0x102816
0x000000000005f48a : jrcxz 0x5f417 ; retf 0xfac1
0x0000000000061b04 : jrcxz 0x61b4e ; mov eax, eax ; ret
0x00000000000624a4 : jrcxz 0x624af ; add al, byte ptr [rax] ; add bh, bl ; call 0x1205aec7
0x000000000006f8d9 : jrcxz 0x6f8e2 ; and dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000081b34 : jrcxz 0x81b21 ; ret
0x0000000000097927 : jrcxz 0x978ec ; cmp r11d, 0xa ; je 0x97938 ; ret
0x00000000000a2ca9 : jrcxz 0xa2c71 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000c93e5 : jrcxz 0xc93ed ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000e05d6 : jrcxz 0xe0654 ; out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x000000000010f7b9 : js 0x10f7d9 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x000000000010f958 : js 0x10f96e ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000117643 : js 0x117600 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fded : js 0x11fdf7 ; add byte ptr [rbp + 0x3e], dh ; mov rdx, rax ; jmp 0x11fe10
0x0000000000125b88 : js 0x125b14 ; loopne 0x125b9b ; movzx eax, ax ; ret
0x0000000000125cb8 : js 0x125c41 ; loopne 0x125cc1 ; ret
0x0000000000125d48 : js 0x125cd4 ; loopne 0x125d55 ; movzx eax, ax ; ret
0x0000000000126058 : js 0x125fe4 ; loopne 0x126067 ; movzx eax, ax ; ret
0x0000000000126569 : js 0x1264f5 ; loopne 0x12657c ; movzx eax, ax ; ret
0x0000000000126689 : js 0x126612 ; loopne 0x126692 ; ret
0x0000000000126709 : js 0x126695 ; loopne 0x126716 ; movzx eax, ax ; ret
0x00000000001269d9 : js 0x126965 ; loopne 0x1269e8 ; movzx eax, ax ; ret
0x000000000012ffdb : js 0x12ffed ; jne 0x12ffd8 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000013fd10 : js 0x13fd28 ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000151990 : js 0x1519a3 ; retf 0x5489
0x000000000015198f : js 0x1519a4 ; retf 0x5489
0x00000000001568a8 : js 0x1568a8 ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x000000000015fbb8 : js 0x15fbd1 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000018e674 : js 0x18e67f ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000019bc7b : js 0x19bcf6 ; ret 0x8b49
0x000000000002e13a : js 0x2e0c1 ; retf 0x4180
0x00000000000370b5 : js 0x37041 ; loopne 0x370c8 ; movzx eax, ax ; ret
0x00000000000370f5 : js 0x37081 ; loopne 0x37102 ; movzx eax, ax ; ret
0x0000000000037195 : js 0x37121 ; loopne 0x371a4 ; movzx eax, ax ; ret
0x0000000000037275 : js 0x371fe ; loopne 0x3727e ; ret
0x000000000003730e : js 0x37297 ; loopne 0x37317 ; ret
0x000000000003732e : js 0x372ba ; loopne 0x37341 ; movzx eax, ax ; ret
0x000000000003736e : js 0x372fa ; loopne 0x3737b ; movzx eax, ax ; ret
0x000000000003740e : js 0x3739a ; loopne 0x3741d ; movzx eax, ax ; ret
0x0000000000037497 : js 0x374e8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037496 : js 0x374e9 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000043a9c : js 0x43abd ; add byte ptr [rdi], cl ; mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x0000000000057415 : js 0x5741e ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000781aa : js 0x78179 ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x0000000000078fd7 : js 0x78fa6 ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000008df41 : js 0x8df4a ; ret
0x00000000000c6cf4 : js 0xc6d2f ; verw ax ; ret
0x00000000000d6617 : js 0xd662f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d6639 : js 0xd6653 ; add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d6638 : js 0xd6654 ; add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d668c : js 0xd66a3 ; add bl, ch ; retf 0x8948
0x00000000000e7335 : js 0xe733b ; add byte ptr [rax], al ; syscall
0x00000000000e80bb : js 0xe80c2 ; ret
0x00000000000be108 : js 0xffffffffed3be36e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be136 : js 0xffffffffed3be59c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be188 : js 0xffffffffed3be9ee ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000e4149 : lahf ; adc byte ptr [rax], al ; syscall
0x00000000001620bd : lahf ; fisttp qword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x4fe9
0x00000000001457ab : lahf ; or al, byte ptr [rax] ; syscall
0x00000000001892bd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000134d5b : lahf ; or eax, dword ptr [rax] ; syscall
0x0000000000078049 : lahf ; ret
0x0000000000071c6d : lahf ; ret 0x2941
0x0000000000097118 : lahf ; ret 0x3949
0x000000000006a712 : lahf ; ret 0xd129
0x00000000000f0b14 : lahf ; ret 0xd189
0x0000000000097242 : lahf ; ret 0xd1e9
0x0000000000068924 : lahf ; ret 0xd629
0x000000000006be56 : lahf ; ret 0xd729
0x00000000000fc3dd : lahf ; retf
0x0000000000132b23 : lahf ; rol dword ptr [rcx], 0xc9 ; jmp 0x8ed46
0x0000000000047405 : lahf ; sub eax, 0xd089001a ; ret
0x000000000011d00b : lahf ; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x000000000018994d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011cecd : lar eax, word ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000011c41c : lcall [rax + 0x4c] ; mov eax, esp ; pop rdx ; pop r12 ; ret
0x00000000000a3aed : lcall [rbp + 0x31] ; rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x000000000013e8f5 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000049842 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000008a62d : lcall [rbp + 0x41] ; pop rsp ; ret
0x00000000000f5287 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e0517 : lcall [rbx + 0x5d] ; lea rax, [rax + rdx*8] ; ret
0x00000000000e60d5 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d145 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a1a83 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000863c0 : lcall [rbx + 0x5d] ; ret
0x000000000004a69b : lcall [rbx - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x000000000010002c : lcall [rdi + 0xf] ; xchg eax, esp ; ret 0xd009
0x00000000000a2558 : lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001587f8 : lcall [rdx] ; cmovae eax, r10d ; jmp 0x158798
0x0000000000170d26 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013f5ff : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000d1266 : lea eax, [rax + rax - 1] ; ret
0x0000000000105d5b : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000bffe9 : lea eax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af324 : lea eax, [rax + rdi + 0x10] ; ret
0x00000000000af334 : lea eax, [rax + rdi + 0x20] ; ret
0x00000000000af814 : lea eax, [rax + rdi + 0x30] ; ret
0x00000000000af304 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000e051b : lea eax, [rax + rdx*8] ; ret
0x000000000009f39f : lea eax, [rax - 8] ; ret
0x000000000008ab82 : lea eax, [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001174b5 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x000000000007f288 : lea eax, [rax] ; idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000001388c5 : lea eax, [rbp - 0x78] ; call 0xe4b85
0x00000000000eb341 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb241 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f7b4 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000013f600 : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x00000000000f16e7 : lea eax, [rcx + rax - 0x76bc0000] ; retf 0x8944
0x00000000000b4c5d : lea eax, [rcx + rsi] ; ret
0x0000000000054742 : lea eax, [rcx - 0x43] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x000000000008ae6f : lea eax, [rcx - 1] ; ret
0x00000000000bb7bc : lea eax, [rdi + 0x10] ; ret
0x00000000000bb7d1 : lea eax, [rdi + 0x11] ; ret
0x00000000000bb7ef : lea eax, [rdi + 0x12] ; ret
0x00000000000bb80f : lea eax, [rdi + 0x13] ; ret
0x00000000000bb832 : lea eax, [rdi + 0x14] ; ret
0x00000000000bb851 : lea eax, [rdi + 0x15] ; ret
0x00000000000bb871 : lea eax, [rdi + 0x16] ; ret
0x00000000000bb891 : lea eax, [rdi + 0x17] ; ret
0x00000000000bb8b4 : lea eax, [rdi + 0x18] ; ret
0x00000000000bb8d9 : lea eax, [rdi + 0x19] ; ret
0x00000000000bb8f7 : lea eax, [rdi + 0x1a] ; ret
0x00000000000bb917 : lea eax, [rdi + 0x1b] ; ret
0x00000000000bb933 : lea eax, [rdi + 0x1c] ; ret
0x00000000000bb953 : lea eax, [rdi + 0x1d] ; ret
0x00000000000bb973 : lea eax, [rdi + 0x1e] ; ret
0x00000000000bb993 : lea eax, [rdi + 0x1f] ; ret
0x00000000000bc803 : lea eax, [rdi + 0x20] ; ret
0x00000000000bca79 : lea eax, [rdi + 0x40] ; ret
0x000000000018e859 : lea eax, [rdi + 0x41] ; vzeroupper ; ret
0x000000000018e9fc : lea eax, [rdi + 0x80] ; vzeroupper ; ret
0x00000000000bb70d : lea eax, [rdi + 0xa] ; ret
0x00000000000bb72d : lea eax, [rdi + 0xb] ; ret
0x00000000000bb74f : lea eax, [rdi + 0xc] ; ret
0x00000000000bb76f : lea eax, [rdi + 0xd] ; ret
0x00000000000bb78f : lea eax, [rdi + 0xe] ; ret
0x00000000000bb7a9 : lea eax, [rdi + 0xf] ; ret
0x00000000000bb657 : lea eax, [rdi + 1] ; ret
0x000000000018e0b7 : lea eax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bb66a : lea eax, [rdi + 2] ; ret
0x000000000018e0cb : lea eax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb675 : lea eax, [rdi + 3] ; ret
0x000000000018e0e5 : lea eax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bb688 : lea eax, [rdi + 4] ; ret
0x00000000000bb69d : lea eax, [rdi + 5] ; ret
0x00000000000bb6bb : lea eax, [rdi + 6] ; ret
0x00000000000bb6c7 : lea eax, [rdi + 7] ; ret
0x00000000000bb6da : lea eax, [rdi + 8] ; ret
0x000000000013e7a4 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000bb6ef : lea eax, [rdi + 9] ; ret
0x00000000000af359 : lea eax, [rdi + rax + 0x10] ; ret
0x00000000000af369 : lea eax, [rdi + rax + 0x20] ; ret
0x00000000000af263 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000013ec45 : lea eax, [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000018bb05 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b489b : lea eax, [rdi + rax] ; ret
0x000000000018e7b3 : lea eax, [rdi + rax] ; vzeroupper ; ret
0x00000000000abca9 : lea eax, [rdi + rdx - 1] ; ret
0x000000000018e0fd : lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000013fb27 : lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x00000000000b4b59 : lea eax, [rdi + rsi] ; ret
0x00000000000d26be : lea eax, [rdi - 0x10] ; ret
0x00000000000d2821 : lea eax, [rdi - 0xc] ; ret
0x00000000000d2841 : lea eax, [rdi - 4] ; ret
0x00000000000d2831 : lea eax, [rdi - 8] ; ret
0x00000000000bb643 : lea eax, [rdi] ; ret
0x000000000018e035 : lea eax, [rdi] ; vzeroupper ; ret
0x000000000017e06d : lea eax, [rdx + 0xa] ; ret
0x000000000017e08d : lea eax, [rdx + 0xb] ; ret
0x000000000017e0af : lea eax, [rdx + 0xc] ; ret
0x000000000017e0cf : lea eax, [rdx + 0xd] ; ret
0x000000000017e0ef : lea eax, [rdx + 0xe] ; ret
0x000000000017df7f : lea eax, [rdx + 0xf] ; ret
0x000000000017dfa7 : lea eax, [rdx + 1] ; ret
0x000000000017dfbd : lea eax, [rdx + 2] ; ret
0x000000000017dfd5 : lea eax, [rdx + 3] ; ret
0x000000000017dfeb : lea eax, [rdx + 4] ; ret
0x000000000017dffd : lea eax, [rdx + 5] ; ret
0x000000000017e01b : lea eax, [rdx + 6] ; ret
0x000000000017df27 : lea eax, [rdx + 7] ; ret
0x000000000017e02d : lea eax, [rdx + 8] ; ret
0x000000000017e04d : lea eax, [rdx + 9] ; ret
0x00000000000eca76 : lea eax, [rdx + rax*8] ; jmp 0xeca52
0x000000000014c5ad : lea eax, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000008ae5e : lea eax, [rdx + rdi] ; ret
0x00000000000bf353 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000009f3c1 : lea eax, [rdx - 0x10] ; ret
0x000000000017df95 : lea eax, [rdx] ; ret
0x0000000000035921 : lea eax, [rip + 0x180aac] ; ret
0x00000000000272d5 : lea eax, [rip + 0x18ec2c] ; ret
0x00000000000272e5 : lea eax, [rip + 0x190a9f] ; ret
0x0000000000123f13 : lea eax, [rip + 0x907a7] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000149623 : lea eax, [rip + 0xa61d7] ; ret
0x000000000007e564 : lea eax, [rsi + rsi*8 - 0x76b30001] ; ret 0x894c
0x0000000000032810 : lea eax, [rsp + 0xa0] ; call r15
0x000000000007b7a3 : lea ebx, [rdx + rdi*8 - 0x7cb70001] ; ret 0x4420
0x00000000000c01db : lea ecx, [rax + 1] ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000c0335 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x18] ; call rbx
0x00000000000c074e : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000001693d0 : lea ecx, [rbx + rcx] ; jmp r9
0x00000000000b9ebe : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000122abe : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000017b876 : lea ecx, [rdx + 0x10] ; jne 0x17bdc9 ; ret
0x000000000017bb74 : lea ecx, [rdx + 0xa] ; jne 0x17bdc9 ; ret
0x000000000017bb94 : lea ecx, [rdx + 0xb] ; jne 0x17bdc9 ; ret
0x000000000017bbb4 : lea ecx, [rdx + 0xc] ; jne 0x17bdc9 ; ret
0x000000000017bbd6 : lea ecx, [rdx + 0xd] ; jne 0x17bdc9 ; ret
0x000000000017bbf6 : lea ecx, [rdx + 0xe] ; jne 0x17bdc9 ; ret
0x000000000017bc16 : lea ecx, [rdx + 0xf] ; jne 0x17bdc9 ; ret
0x000000000017ba6c : lea ecx, [rdx + 1] ; jne 0x17bdc9 ; ret
0x000000000017ba8e : lea ecx, [rdx + 2] ; jne 0x17bdc9 ; ret
0x000000000017bab4 : lea ecx, [rdx + 3] ; jne 0x17bdc9 ; ret
0x000000000017bacc : lea ecx, [rdx + 4] ; jne 0x17bdc9 ; ret
0x00000000000885fa : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000017baf2 : lea ecx, [rdx + 5] ; jne 0x17bdc9 ; ret
0x000000000017bb14 : lea ecx, [rdx + 6] ; jne 0x17bdc9 ; ret
0x000000000017bb32 : lea ecx, [rdx + 7] ; jne 0x17bdc9 ; ret
0x000000000017b80e : lea ecx, [rdx + 8] ; jne 0x17bdc9 ; ret
0x000000000017bb54 : lea ecx, [rdx + 9] ; jne 0x17bdc9 ; ret
0x00000000000a0a49 : lea ecx, [rip + 0x115984] ; mov rdx, rcx ; jmp 0xa0a10
0x00000000001264e6 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000163a19 : lea ecx, [rsi + rdx] ; mov rdx, r14 ; mov esi, r12d ; call rax
0x0000000000163668 : lea ecx, [rsi + rdx] ; mov rdx, rbp ; mov esi, r12d ; call rax
0x0000000000154c2d : lea ecx, [rsp + 0x14] ; call qword ptr [rax]
0x00000000000c0339 : lea ecx, [rsp + 0x18] ; call rbx
0x0000000000155671 : lea ecx, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000014a67f : lea ecx, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000c06e2 : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000c01df : lea ecx, [rsp + 0x28] ; call rbx
0x000000000014a48a : lea ecx, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000c091d : lea ecx, [rsp + 0x30] ; call rbx
0x0000000000155fac : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014ab9a : lea ecx, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000153ad7 : lea edi, [rbp + 0x58] ; call rax
0x0000000000153037 : lea edi, [rbp + 0x68] ; call rax
0x000000000015024a : lea edi, [rbp + 0xc8] ; call rax
0x000000000016582a : lea edi, [rbp - 0x450] ; call 0xa1b28
0x000000000012f768 : lea edi, [rbx - 0x76ffffff] ; ret 0x2944
0x00000000000baa4d : lea edi, [rdi + 0x10] ; jne 0xbb129 ; ret
0x00000000000bc171 : lea edi, [rdi + 0x10] ; jne 0xbc979 ; ret
0x00000000000baa70 : lea edi, [rdi + 0x11] ; jne 0xbb129 ; ret
0x00000000000bc194 : lea edi, [rdi + 0x11] ; jne 0xbc979 ; ret
0x00000000000baa95 : lea edi, [rdi + 0x12] ; jne 0xbb129 ; ret
0x00000000000bc1b9 : lea edi, [rdi + 0x12] ; jne 0xbc979 ; ret
0x00000000000baab3 : lea edi, [rdi + 0x13] ; jne 0xbb129 ; ret
0x00000000000bc1e7 : lea edi, [rdi + 0x13] ; jne 0xbc979 ; ret
0x00000000000baad3 : lea edi, [rdi + 0x14] ; jne 0xbb129 ; ret
0x00000000000bc217 : lea edi, [rdi + 0x14] ; jne 0xbc979 ; ret
0x00000000000baaf6 : lea edi, [rdi + 0x15] ; jne 0xbb129 ; ret
0x00000000000bc24a : lea edi, [rdi + 0x15] ; jne 0xbc979 ; ret
0x00000000000bab15 : lea edi, [rdi + 0x16] ; jne 0xbb129 ; ret
0x00000000000bc279 : lea edi, [rdi + 0x16] ; jne 0xbc979 ; ret
0x00000000000bab35 : lea edi, [rdi + 0x17] ; jne 0xbb129 ; ret
0x00000000000bc2a9 : lea edi, [rdi + 0x17] ; jne 0xbc979 ; ret
0x00000000000bab55 : lea edi, [rdi + 0x18] ; jne 0xbb129 ; ret
0x00000000000bc2d9 : lea edi, [rdi + 0x18] ; jne 0xbc979 ; ret
0x00000000000bab78 : lea edi, [rdi + 0x19] ; jne 0xbb129 ; ret
0x00000000000bc30c : lea edi, [rdi + 0x19] ; jne 0xbc979 ; ret
0x00000000000babad : lea edi, [rdi + 0x1a] ; jne 0xbb129 ; ret
0x00000000000bc341 : lea edi, [rdi + 0x1a] ; jne 0xbc979 ; ret
0x00000000000babdb : lea edi, [rdi + 0x1b] ; jne 0xbb129 ; ret
0x00000000000bc36f : lea edi, [rdi + 0x1b] ; jne 0xbc979 ; ret
0x00000000000bac0b : lea edi, [rdi + 0x1c] ; jne 0xbb129 ; ret
0x00000000000bc39f : lea edi, [rdi + 0x1c] ; jne 0xbc979 ; ret
0x00000000000bac37 : lea edi, [rdi + 0x1d] ; jne 0xbb129 ; ret
0x00000000000bc3cb : lea edi, [rdi + 0x1d] ; jne 0xbc979 ; ret
0x00000000000bac67 : lea edi, [rdi + 0x1e] ; jne 0xbb129 ; ret
0x00000000000bc3fb : lea edi, [rdi + 0x1e] ; jne 0xbc979 ; ret
0x00000000000bac97 : lea edi, [rdi + 0x1f] ; jne 0xbb129 ; ret
0x00000000000bc42b : lea edi, [rdi + 0x1f] ; jne 0xbc979 ; ret
0x00000000000bacc7 : lea edi, [rdi + 0x20] ; jne 0xbb129 ; ret
0x00000000000bc45b : lea edi, [rdi + 0x20] ; jne 0xbc979 ; ret
0x00000000000ba993 : lea edi, [rdi + 0xa] ; jne 0xbb129 ; ret
0x00000000000bc077 : lea edi, [rdi + 0xa] ; jne 0xbc979 ; ret
0x00000000000ba9b1 : lea edi, [rdi + 0xb] ; jne 0xbb129 ; ret
0x00000000000bc0a5 : lea edi, [rdi + 0xb] ; jne 0xbc979 ; ret
0x00000000000ba9d1 : lea edi, [rdi + 0xc] ; jne 0xbb129 ; ret
0x00000000000bc0c5 : lea edi, [rdi + 0xc] ; jne 0xbc979 ; ret
0x00000000000ba9f3 : lea edi, [rdi + 0xd] ; jne 0xbb129 ; ret
0x00000000000bc0e7 : lea edi, [rdi + 0xd] ; jne 0xbc979 ; ret
0x00000000000baa13 : lea edi, [rdi + 0xe] ; jne 0xbb129 ; ret
0x00000000000bc117 : lea edi, [rdi + 0xe] ; jne 0xbc979 ; ret
0x00000000000baa33 : lea edi, [rdi + 0xf] ; jne 0xbb129 ; ret
0x00000000000bc147 : lea edi, [rdi + 0xf] ; jne 0xbc979 ; ret
0x00000000000ba867 : lea edi, [rdi + 1] ; jne 0xbb129 ; ret
0x00000000000bbf4a : lea edi, [rdi + 1] ; jne 0xbc979 ; ret
0x00000000000ba88b : lea edi, [rdi + 2] ; jne 0xbb129 ; ret
0x00000000000bbf6f : lea edi, [rdi + 2] ; jne 0xbc979 ; ret
0x00000000000ba8ae : lea edi, [rdi + 3] ; jne 0xbb129 ; ret
0x00000000000bbf92 : lea edi, [rdi + 3] ; jne 0xbc979 ; ret
0x00000000000ba8c9 : lea edi, [rdi + 4] ; jne 0xbb129 ; ret
0x00000000000bbfad : lea edi, [rdi + 4] ; jne 0xbc979 ; ret
0x00000000000ba8ec : lea edi, [rdi + 5] ; jne 0xbb129 ; ret
0x00000000000bbfd0 : lea edi, [rdi + 5] ; jne 0xbc979 ; ret
0x00000000000ba911 : lea edi, [rdi + 6] ; jne 0xbb129 ; ret
0x00000000000bbff5 : lea edi, [rdi + 6] ; jne 0xbc979 ; ret
0x00000000000ba92f : lea edi, [rdi + 7] ; jne 0xbb129 ; ret
0x00000000000bc013 : lea edi, [rdi + 7] ; jne 0xbc979 ; ret
0x00000000000ba94b : lea edi, [rdi + 8] ; jne 0xbb129 ; ret
0x00000000000bc02f : lea edi, [rdi + 8] ; jne 0xbc979 ; ret
0x00000000000ba96e : lea edi, [rdi + 9] ; jne 0xbb129 ; ret
0x00000000000bc052 : lea edi, [rdi + 9] ; jne 0xbc979 ; ret
0x00000000000345b0 : lea edi, [rdi + rdi*8 - 1] ; dec dword ptr [rcx + 1] ; ret 0x8d48
0x00000000001300a0 : lea edi, [rdi*8 + 2] ; syscall
0x00000000000e4b68 : lea edi, [rip + 0x109632] ; syscall
0x00000000000e4a28 : lea edi, [rip + 0x109772] ; syscall
0x00000000000e4970 : lea edi, [rip + 0x10982a] ; syscall
0x00000000000e4894 : lea edi, [rip + 0x1098fe] ; syscall
0x00000000000e46c4 : lea edi, [rip + 0x109a8e] ; syscall
0x00000000000e4500 : lea edi, [rip + 0x109c0a] ; syscall
0x00000000000e4146 : lea edi, [rip + 0x109f6c] ; syscall
0x00000000000e2c38 : lea edi, [rip + 0x10b3f2] ; syscall
0x00000000000e2af8 : lea edi, [rip + 0x10b532] ; syscall
0x00000000000e2a40 : lea edi, [rip + 0x10b5ea] ; syscall
0x00000000000e2674 : lea edi, [rip + 0x10b9ae] ; syscall
0x00000000000e24a4 : lea edi, [rip + 0x10bb3e] ; syscall
0x00000000000e22e0 : lea edi, [rip + 0x10bcba] ; syscall
0x00000000000e19f8 : lea edi, [rip + 0x10c54a] ; syscall
0x00000000000d5c44 : lea edi, [rip + 0x118216] ; syscall
0x00000000000d5a10 : lea edi, [rip + 0x11844a] ; syscall
0x000000000009c1e9 : lea edi, [rip + 0x11b41c] ; call 0x98468
0x000000000009c208 : lea edi, [rip + 0x11f49a] ; call 0x98468
0x000000000009ba75 : lea edi, [rip + 0x11fbbd] ; call 0x984c8
0x00000000000cd804 : lea edi, [rip + 0x1226b6] ; syscall
0x000000000009fa61 : lea edi, [rip + 0x14b119] ; call 0x9bc78
0x000000000009f9c4 : lea edi, [rip + 0x14b1b6] ; syscall
0x00000000000a1350 : lea edi, [rip + 0x14c88a] ; syscall
0x00000000000a1170 : lea edi, [rip + 0x14ca6a] ; syscall
0x00000000000a0f84 : lea edi, [rip + 0x14cc56] ; syscall
0x00000000000a0f14 : lea edi, [rip + 0x14ccc6] ; syscall
0x00000000000a0ce4 : lea edi, [rip + 0x14cef6] ; syscall
0x000000000009cc44 : lea edi, [rip + 0x14df36] ; syscall
0x000000000009cbe4 : lea edi, [rip + 0x14df96] ; syscall
0x000000000009c824 : lea edi, [rip + 0x14e356] ; syscall
0x000000000009c5c4 : lea edi, [rip + 0x14e5b6] ; syscall
0x000000000009bf7c : lea edi, [rip + 0x14ebfe] ; syscall
0x000000000009bf44 : lea edi, [rip + 0x14ec36] ; syscall
0x000000000009dbf4 : lea edi, [rip + 0x14ff66] ; syscall
0x000000000009d158 : lea edi, [rip + 0x1509f2] ; syscall
0x00000000000991f5 : lea edi, [rip + 0x154955] ; syscall
0x00000000000991c4 : lea edi, [rip + 0x154996] ; syscall
0x0000000000098f44 : lea edi, [rip + 0x154c16] ; syscall
0x0000000000098a20 : lea edi, [rip + 0x15513a] ; syscall
0x0000000000097f45 : lea edi, [rip + 0x155595] ; syscall
0x0000000000097d70 : lea edi, [rip + 0x15576a] ; syscall
0x0000000000097bd4 : lea edi, [rip + 0x155906] ; syscall
0x0000000000096a96 : lea edi, [rip + 0x156a04] ; syscall
0x0000000000096556 : lea edi, [rip + 0x156f44] ; syscall
0x00000000000961b2 : lea edi, [rip + 0x1572e8] ; syscall
0x0000000000095e46 : lea edi, [rip + 0x157654] ; syscall
0x00000000000947c2 : lea edi, [rip + 0x158cd8] ; syscall
0x0000000000094502 : lea edi, [rip + 0x158f98] ; syscall
0x000000000009418e : lea edi, [rip + 0x15930c] ; syscall
0x00000000000873d3 : lea edi, [rip + 0x166087] ; syscall
0x0000000000086fd6 : lea edi, [rip + 0x166484] ; syscall
0x0000000000086f2b : lea edi, [rip + 0x16652f] ; syscall
0x00000000000850c4 : lea edi, [rip + 0x16adf6] ; syscall
0x0000000000064188 : lea edi, [rip + 0x1892a2] ; syscall
0x0000000000063f04 : lea edi, [rip + 0x189522] ; syscall
0x0000000000061d30 : lea edi, [rip + 0x18b6ee] ; syscall
0x0000000000061bf0 : lea edi, [rip + 0x18b82e] ; syscall
0x0000000000057e54 : lea edi, [rip + 0x1955b6] ; syscall
0x0000000000057c74 : lea edi, [rip + 0x195796] ; syscall
0x0000000000057744 : lea edi, [rip + 0x195cc6] ; syscall
0x0000000000055d77 : lea edi, [rip + 0x1975e3] ; call 0x102818
0x00000000000554d0 : lea edi, [rip + 0x197d0a] ; syscall
0x000000000005537c : lea edi, [rip + 0x197e5e] ; syscall
0x0000000000055347 : lea edi, [rip + 0x197e93] ; syscall
0x000000000004abb0 : lea edi, [rip + 0x1a260a] ; syscall
0x000000000004aaf0 : lea edi, [rip + 0x1a26ca] ; syscall
0x000000000004aa28 : lea edi, [rip + 0x1a2792] ; syscall
0x000000000004a950 : lea edi, [rip + 0x1a286a] ; syscall
0x0000000000049a48 : lea edi, [rip + 0x1a2f1a] ; syscall
0x0000000000049983 : lea edi, [rip + 0x1a2fdf] ; syscall
0x00000000000497e1 : lea edi, [rip + 0x1a3181] ; syscall
0x0000000000049707 : lea edi, [rip + 0x1a325b] ; syscall
0x000000000003b721 : lea edi, [rip + 0x1b11f1] ; syscall
0x0000000000039d9e : lea edi, [rip + 0x1b2b3c] ; syscall
0x0000000000038a57 : lea edi, [rip + 0x1b3ddb] ; syscall
0x0000000000038a2a : lea edi, [rip + 0x1b3e08] ; syscall
0x00000000000388e5 : lea edi, [rip + 0x1b3f4d] ; syscall
0x00000000000296c8 : lea edi, [rip + 0x1c67f2] ; syscall
0x000000000002955c : lea edi, [rip + 0x1c695e] ; syscall
0x000000000002943c : lea edi, [rip + 0x1c6a7e] ; syscall
0x0000000000025887 : lea edi, [rip + 0x1c70a3] ; syscall
0x000000000019bdb0 : lea edi, [rip + 0x50bb2] ; syscall
0x000000000019bf70 : lea edi, [rip + 0x5156a] ; syscall
0x000000000019c2a0 : lea edi, [rip + 0x52f72] ; syscall
0x0000000000161570 : lea edi, [rip + 0x8ee42] ; syscall
0x0000000000160388 : lea edi, [rip + 0x9002a] ; syscall
0x00000000001602a8 : lea edi, [rip + 0x9010a] ; syscall
0x00000000001600c0 : lea edi, [rip + 0x902f2] ; syscall
0x0000000000160020 : lea edi, [rip + 0x90392] ; syscall
0x000000000015ff80 : lea edi, [rip + 0x90432] ; syscall
0x000000000015fed0 : lea edi, [rip + 0x904e2] ; syscall
0x000000000015f950 : lea edi, [rip + 0x90a62] ; syscall
0x0000000000155720 : lea edi, [rip + 0x9a3ca] ; syscall
0x00000000001555c0 : lea edi, [rip + 0x9a52a] ; syscall
0x00000000001553b4 : lea edi, [rip + 0x9a736] ; syscall
0x0000000000155214 : lea edi, [rip + 0x9a8d6] ; syscall
0x0000000000155080 : lea edi, [rip + 0x9aa6a] ; syscall
0x0000000000154f40 : lea edi, [rip + 0x9abaa] ; syscall
0x0000000000154de0 : lea edi, [rip + 0x9ad0a] ; syscall
0x0000000000154cd0 : lea edi, [rip + 0x9ae1a] ; syscall
0x0000000000151820 : lea edi, [rip + 0x9e2c6] ; syscall
0x000000000014fb08 : lea edi, [rip + 0x9ff1a] ; syscall
0x000000000014f9c8 : lea edi, [rip + 0xa005a] ; syscall
0x000000000014f910 : lea edi, [rip + 0xa0112] ; syscall
0x000000000014f824 : lea edi, [rip + 0xa01f6] ; syscall
0x000000000014f654 : lea edi, [rip + 0xa0396] ; syscall
0x000000000014f490 : lea edi, [rip + 0xa0532] ; syscall
0x0000000000149b22 : lea edi, [rip + 0xa5d3c] ; syscall
0x0000000000147984 : lea edi, [rip + 0xa7e46] ; syscall
0x000000000014762c : lea edi, [rip + 0xa819e] ; syscall
0x00000000001472dc : lea edi, [rip + 0xa84ee] ; syscall
0x00000000001470b6 : lea edi, [rip + 0xa8714] ; syscall
0x0000000000146f54 : lea edi, [rip + 0xa8876] ; syscall
0x0000000000146d17 : lea edi, [rip + 0xa8ab3] ; syscall
0x00000000001462c0 : lea edi, [rip + 0xa9452] ; syscall
0x000000000014613e : lea edi, [rip + 0xa95d4] ; syscall
0x0000000000146104 : lea edi, [rip + 0xa960e] ; syscall
0x0000000000145fec : lea edi, [rip + 0xa9726] ; syscall
0x00000000001457a8 : lea edi, [rip + 0xa9f6a] ; syscall
0x00000000001456e0 : lea edi, [rip + 0xaa032] ; syscall
0x00000000001455c4 : lea edi, [rip + 0xaa14e] ; syscall
0x00000000001441f1 : lea edi, [rip + 0xab2c9] ; syscall
0x0000000000140ab0 : lea edi, [rip + 0xae762] ; syscall
0x00000000001407b4 : lea edi, [rip + 0xaea5e] ; syscall
0x000000000010a4fe : lea edi, [rip + 0xb200c] ; call 0x36fc8
0x000000000013c484 : lea edi, [rip + 0xb2d7a] ; syscall
0x000000000013bf04 : lea edi, [rip + 0xb32de] ; syscall
0x000000000013bd40 : lea edi, [rip + 0xb345a] ; syscall
0x000000000013bc78 : lea edi, [rip + 0xb34c2] ; syscall
0x000000000013bb38 : lea edi, [rip + 0xb3602] ; syscall
0x000000000013ba80 : lea edi, [rip + 0xb36ba] ; syscall
0x000000000013b390 : lea edi, [rip + 0xb3da2] ; syscall
0x000000000013b070 : lea edi, [rip + 0xb40c2] ; syscall
0x000000000013b00a : lea edi, [rip + 0xb40d0] ; call rax
0x000000000013aeb4 : lea edi, [rip + 0xb427e] ; syscall
0x000000000013ae76 : lea edi, [rip + 0xb42bc] ; call 0x978c8
0x0000000000137b18 : lea edi, [rip + 0xb74aa] ; syscall
0x00000000001379d8 : lea edi, [rip + 0xb75ea] ; syscall
0x0000000000137920 : lea edi, [rip + 0xb76a2] ; syscall
0x0000000000137840 : lea edi, [rip + 0xb777a] ; syscall
0x0000000000137374 : lea edi, [rip + 0xb7bce] ; syscall
0x0000000000136da4 : lea edi, [rip + 0xb813e] ; syscall
0x0000000000136884 : lea edi, [rip + 0xb8616] ; syscall
0x00000000001366b8 : lea edi, [rip + 0xb87a2] ; syscall
0x0000000000136578 : lea edi, [rip + 0xb88e2] ; syscall
0x00000000001364c0 : lea edi, [rip + 0xb899a] ; syscall
0x00000000001363e0 : lea edi, [rip + 0xb8a72] ; syscall
0x0000000000135fc4 : lea edi, [rip + 0xb8e46] ; syscall
0x00000000001359a8 : lea edi, [rip + 0xb9402] ; syscall
0x0000000000135850 : lea edi, [rip + 0xb955a] ; syscall
0x0000000000135790 : lea edi, [rip + 0xb961a] ; syscall
0x00000000001356a8 : lea edi, [rip + 0xb96fa] ; syscall
0x00000000001355c4 : lea edi, [rip + 0xb97a6] ; syscall
0x0000000000134f64 : lea edi, [rip + 0xb9dc6] ; syscall
0x0000000000134d58 : lea edi, [rip + 0xb9f8a] ; syscall
0x0000000000134c00 : lea edi, [rip + 0xba0e2] ; syscall
0x0000000000134b40 : lea edi, [rip + 0xba1a2] ; syscall
0x0000000000134a58 : lea edi, [rip + 0xba282] ; syscall
0x0000000000133e44 : lea edi, [rip + 0xbae1e] ; syscall
0x0000000000133bd4 : lea edi, [rip + 0xbb04e] ; syscall
0x0000000000133454 : lea edi, [rip + 0xbb76e] ; syscall
0x0000000000129718 : lea edi, [rip + 0xc5412] ; syscall
0x00000000001295d8 : lea edi, [rip + 0xc5552] ; syscall
0x0000000000129520 : lea edi, [rip + 0xc560a] ; syscall
0x0000000000129146 : lea edi, [rip + 0xc59dc] ; syscall
0x0000000000128f44 : lea edi, [rip + 0xc5ba6] ; syscall
0x0000000000128d64 : lea edi, [rip + 0xc5d3e] ; syscall
0x0000000000128ba0 : lea edi, [rip + 0xc5eba] ; syscall
0x0000000000128ad0 : lea edi, [rip + 0xc5f36] ; syscall
0x0000000000128a06 : lea edi, [rip + 0xc6000] ; syscall
0x0000000000128971 : lea edi, [rip + 0xc6095] ; syscall
0x0000000000127c68 : lea edi, [rip + 0xc6d6a] ; syscall
0x0000000000127b28 : lea edi, [rip + 0xc6eaa] ; syscall
0x0000000000127a70 : lea edi, [rip + 0xc6f62] ; syscall
0x0000000000127476 : lea edi, [rip + 0xc7554] ; syscall
0x0000000000127274 : lea edi, [rip + 0xc76fe] ; syscall
0x0000000000127094 : lea edi, [rip + 0xc7876] ; syscall
0x0000000000126ed0 : lea edi, [rip + 0xc79d2] ; syscall
0x000000000011b8f0 : lea edi, [rip + 0xd2c5a] ; syscall
0x000000000011b7d4 : lea edi, [rip + 0xd2d76] ; syscall
0x000000000011b374 : lea edi, [rip + 0xd31d6] ; syscall
0x000000000011ae49 : lea edi, [rip + 0xd3701] ; syscall
0x0000000000109d29 : lea edi, [rip + 0xe4551] ; syscall
0x00000000001303fe : lea edi, [rip - 0x184] ; call rax
0x0000000000150e65 : lea edi, [rsp + 0x10] ; call rax
0x000000000010e848 : lea edi, [rsp + 0x78] ; call 0x10b336
0x00000000000e8896 : lea edi, [rsp + rax] ; call 0x25335
0x00000000000473dd : lea edx, [rax + 1] ; mov dword ptr [rip + 0x1a2dc6], edx ; ret
0x000000000008af94 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000006dc4b : lea edx, [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000006d99f : lea edx, [rax - 0x7c000005] ; ret 0x4830
0x00000000001694a4 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000000e0515 : lea edx, [rdi + rdi*8] ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000ac196 : lea edx, [rdx + rcx] ; jmp r10
0x000000000012628e : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001698a8 : lea edx, [rdx - 0x40] ; jmp r9
0x000000000015547d : lea edx, [rip + 0x3a2d] ; call qword ptr [rax]
0x000000000007e267 : lea edx, [rip - 0x4d4] ; add rax, rdx ; jmp rax
0x000000000011929a : lea edx, [rsi + 1] ; jne 0x119275 ; ret
0x0000000000116b05 : lea edx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x000000000007f668 : lea esi, [rax] ; idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x0000000000089130 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007a655 : lea esi, [rdx + rdi*8 - 0x76b60001] ; ret
0x00000000000bed08 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015997d : lea esi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159114 : lea esi, [rsp + 0x10] ; mov rdi, rbp ; call qword ptr [rax]
0x000000000014c428 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000085b8e : lea esi, [rsp + 8] ; call rax
0x0000000000132ca4 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000e4267 : lea esp, [rbp - 0x10] ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000049370 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000049ca9 : lea esp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000047b15 : lea esp, [rcx + rax] ; mov r13, rax ; mov rdi, r12 ; call rbx
0x00000000001090ac : lea esp, [rip + 0xaab2e] ; call 0x25358
0x00000000000ac195 : lea r10, [r10 + r9] ; jmp r10
0x0000000000049ca8 : lea r12, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001090ab : lea r12, [rip + 0xaab2e] ; call 0x25359
0x00000000001388c4 : lea r8, [rbp - 0x78] ; call 0xe4b86
0x000000000013fb26 : lea r8, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000003280f : lea r8, [rsp + 0xa0] ; call r15
0x000000000014c5ac : lea r8d, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000001693cf : lea r9, [r11 + r9] ; jmp r9
0x0000000000154c2c : lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x00000000000c0338 : lea r9, [rsp + 0x18] ; call rbx
0x0000000000155670 : lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000014a67e : lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000c06e1 : lea r9, [rsp + 0x20] ; call rbx
0x00000000000c01de : lea r9, [rsp + 0x28] ; call rbx
0x000000000014a489 : lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000c091c : lea r9, [rsp + 0x30] ; call rbx
0x0000000000155fab : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014ab99 : lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000e80a1 : lea rax, [rax + rax - 1] ; ret
0x00000000000bffe8 : lea rax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af323 : lea rax, [rax + rdi + 0x10] ; ret
0x00000000000af333 : lea rax, [rax + rdi + 0x20] ; ret
0x00000000000af813 : lea rax, [rax + rdi + 0x30] ; ret
0x00000000000af303 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000e051a : lea rax, [rax + rdx*8] ; ret
0x000000000009f39e : lea rax, [rax - 8] ; ret
0x00000000000eb340 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb240 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4c5c : lea rax, [rcx + rsi] ; ret
0x00000000000be8a3 : lea rax, [rcx - 1] ; ret
0x00000000000bb7bb : lea rax, [rdi + 0x10] ; ret
0x00000000000bb7d0 : lea rax, [rdi + 0x11] ; ret
0x00000000000bb7ee : lea rax, [rdi + 0x12] ; ret
0x00000000000bb80e : lea rax, [rdi + 0x13] ; ret
0x00000000000bb831 : lea rax, [rdi + 0x14] ; ret
0x00000000000bb850 : lea rax, [rdi + 0x15] ; ret
0x00000000000bb870 : lea rax, [rdi + 0x16] ; ret
0x00000000000bb890 : lea rax, [rdi + 0x17] ; ret
0x00000000000bb8b3 : lea rax, [rdi + 0x18] ; ret
0x00000000000bb8d8 : lea rax, [rdi + 0x19] ; ret
0x00000000000bb8f6 : lea rax, [rdi + 0x1a] ; ret
0x00000000000bb916 : lea rax, [rdi + 0x1b] ; ret
0x00000000000bb932 : lea rax, [rdi + 0x1c] ; ret
0x00000000000bb952 : lea rax, [rdi + 0x1d] ; ret
0x00000000000bb972 : lea rax, [rdi + 0x1e] ; ret
0x00000000000bb992 : lea rax, [rdi + 0x1f] ; ret
0x00000000000bc802 : lea rax, [rdi + 0x20] ; ret
0x00000000000bca78 : lea rax, [rdi + 0x40] ; ret
0x000000000018e858 : lea rax, [rdi + 0x41] ; vzeroupper ; ret
0x00000000000bb70c : lea rax, [rdi + 0xa] ; ret
0x00000000000bb72c : lea rax, [rdi + 0xb] ; ret
0x00000000000bb74e : lea rax, [rdi + 0xc] ; ret
0x00000000000bb76e : lea rax, [rdi + 0xd] ; ret
0x00000000000bb78e : lea rax, [rdi + 0xe] ; ret
0x00000000000bb7a8 : lea rax, [rdi + 0xf] ; ret
0x00000000000bb656 : lea rax, [rdi + 1] ; ret
0x000000000018e0b6 : lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bb669 : lea rax, [rdi + 2] ; ret
0x000000000018e0ca : lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb674 : lea rax, [rdi + 3] ; ret
0x000000000018e0e4 : lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bb687 : lea rax, [rdi + 4] ; ret
0x00000000000bb69c : lea rax, [rdi + 5] ; ret
0x00000000000bb6ba : lea rax, [rdi + 6] ; ret
0x00000000000bb6c6 : lea rax, [rdi + 7] ; ret
0x00000000000bb6d9 : lea rax, [rdi + 8] ; ret
0x00000000000bb6ee : lea rax, [rdi + 9] ; ret
0x000000000018e7b2 : lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000af358 : lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af368 : lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af262 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000018bb04 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b489a : lea rax, [rdi + rax] ; ret
0x00000000000abca8 : lea rax, [rdi + rdx - 1] ; ret
0x000000000018e0fc : lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000000b4b58 : lea rax, [rdi + rsi] ; ret
0x00000000000d26bd : lea rax, [rdi - 0x10] ; ret
0x00000000000d2820 : lea rax, [rdi - 0xc] ; ret
0x00000000000d2840 : lea rax, [rdi - 4] ; ret
0x00000000000d2830 : lea rax, [rdi - 8] ; ret
0x00000000000bb642 : lea rax, [rdi] ; ret
0x000000000018e034 : lea rax, [rdi] ; vzeroupper ; ret
0x000000000017e06c : lea rax, [rdx + 0xa] ; ret
0x000000000017e08c : lea rax, [rdx + 0xb] ; ret
0x000000000017e0ae : lea rax, [rdx + 0xc] ; ret
0x000000000017e0ce : lea rax, [rdx + 0xd] ; ret
0x000000000017e0ee : lea rax, [rdx + 0xe] ; ret
0x000000000017df7e : lea rax, [rdx + 0xf] ; ret
0x000000000017dfa6 : lea rax, [rdx + 1] ; ret
0x000000000017dfbc : lea rax, [rdx + 2] ; ret
0x000000000017dfd4 : lea rax, [rdx + 3] ; ret
0x000000000017dfea : lea rax, [rdx + 4] ; ret
0x000000000017dffc : lea rax, [rdx + 5] ; ret
0x000000000017e01a : lea rax, [rdx + 6] ; ret
0x000000000017df26 : lea rax, [rdx + 7] ; ret
0x000000000017e02c : lea rax, [rdx + 8] ; ret
0x000000000017e04c : lea rax, [rdx + 9] ; ret
0x00000000000eca75 : lea rax, [rdx + rax*8] ; jmp 0xeca53
0x000000000009f3c0 : lea rax, [rdx - 0x10] ; ret
0x000000000017df94 : lea rax, [rdx] ; ret
0x0000000000035920 : lea rax, [rip + 0x180aac] ; ret
0x00000000000272d4 : lea rax, [rip + 0x18ec2c] ; ret
0x00000000000272e4 : lea rax, [rip + 0x190a9f] ; ret
0x0000000000149622 : lea rax, [rip + 0xa61d7] ; ret
0x00000000000d27f9 : lea rax, es:[rdi - 0x10] ; ret
0x00000000000b9ebd : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000c01da : lea rcx, [rax + 1] ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000c0334 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x18] ; call rbx
0x00000000000c074d : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000885f9 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000a0a48 : lea rcx, [rip + 0x115984] ; mov rdx, rcx ; jmp 0xa0a11
0x00000000001264e5 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000150e64 : lea rdi, [r12 + 0x10] ; call rax
0x00000000000e8895 : lea rdi, [r12 + rax] ; call 0x25336
0x0000000000153ad6 : lea rdi, [rbp + 0x58] ; call rax
0x0000000000153036 : lea rdi, [rbp + 0x68] ; call rax
0x0000000000150249 : lea rdi, [rbp + 0xc8] ; call rax
0x0000000000165829 : lea rdi, [rbp - 0x450] ; call 0xa1b29
0x00000000000e4b67 : lea rdi, [rip + 0x109632] ; syscall
0x00000000000e4a27 : lea rdi, [rip + 0x109772] ; syscall
0x00000000000e496f : lea rdi, [rip + 0x10982a] ; syscall
0x00000000000e4893 : lea rdi, [rip + 0x1098fe] ; syscall
0x00000000000e46c3 : lea rdi, [rip + 0x109a8e] ; syscall
0x00000000000e44ff : lea rdi, [rip + 0x109c0a] ; syscall
0x00000000000e4145 : lea rdi, [rip + 0x109f6c] ; syscall
0x00000000000e2c37 : lea rdi, [rip + 0x10b3f2] ; syscall
0x00000000000e2af7 : lea rdi, [rip + 0x10b532] ; syscall
0x00000000000e2a3f : lea rdi, [rip + 0x10b5ea] ; syscall
0x00000000000e2673 : lea rdi, [rip + 0x10b9ae] ; syscall
0x00000000000e24a3 : lea rdi, [rip + 0x10bb3e] ; syscall
0x00000000000e22df : lea rdi, [rip + 0x10bcba] ; syscall
0x00000000000e19f7 : lea rdi, [rip + 0x10c54a] ; syscall
0x00000000000d5c43 : lea rdi, [rip + 0x118216] ; syscall
0x00000000000d5a0f : lea rdi, [rip + 0x11844a] ; syscall
0x000000000009c1e8 : lea rdi, [rip + 0x11b41c] ; call 0x98469
0x000000000009c207 : lea rdi, [rip + 0x11f49a] ; call 0x98469
0x000000000009ba74 : lea rdi, [rip + 0x11fbbd] ; call 0x984c9
0x00000000000cd803 : lea rdi, [rip + 0x1226b6] ; syscall
0x000000000009fa60 : lea rdi, [rip + 0x14b119] ; call 0x9bc79
0x000000000009f9c3 : lea rdi, [rip + 0x14b1b6] ; syscall
0x00000000000a134f : lea rdi, [rip + 0x14c88a] ; syscall
0x00000000000a116f : lea rdi, [rip + 0x14ca6a] ; syscall
0x00000000000a0f83 : lea rdi, [rip + 0x14cc56] ; syscall
0x00000000000a0f13 : lea rdi, [rip + 0x14ccc6] ; syscall
0x00000000000a0ce3 : lea rdi, [rip + 0x14cef6] ; syscall
0x000000000009cc43 : lea rdi, [rip + 0x14df36] ; syscall
0x000000000009cbe3 : lea rdi, [rip + 0x14df96] ; syscall
0x000000000009c823 : lea rdi, [rip + 0x14e356] ; syscall
0x000000000009c5c3 : lea rdi, [rip + 0x14e5b6] ; syscall
0x000000000009bf7b : lea rdi, [rip + 0x14ebfe] ; syscall
0x000000000009bf43 : lea rdi, [rip + 0x14ec36] ; syscall
0x000000000009dbf3 : lea rdi, [rip + 0x14ff66] ; syscall
0x000000000009d157 : lea rdi, [rip + 0x1509f2] ; syscall
0x00000000000991f4 : lea rdi, [rip + 0x154955] ; syscall
0x00000000000991c3 : lea rdi, [rip + 0x154996] ; syscall
0x0000000000098f43 : lea rdi, [rip + 0x154c16] ; syscall
0x0000000000098a1f : lea rdi, [rip + 0x15513a] ; syscall
0x0000000000097f44 : lea rdi, [rip + 0x155595] ; syscall
0x0000000000097d6f : lea rdi, [rip + 0x15576a] ; syscall
0x0000000000097bd3 : lea rdi, [rip + 0x155906] ; syscall
0x0000000000096a95 : lea rdi, [rip + 0x156a04] ; syscall
0x0000000000096555 : lea rdi, [rip + 0x156f44] ; syscall
0x00000000000961b1 : lea rdi, [rip + 0x1572e8] ; syscall
0x0000000000095e45 : lea rdi, [rip + 0x157654] ; syscall
0x00000000000947c1 : lea rdi, [rip + 0x158cd8] ; syscall
0x0000000000094501 : lea rdi, [rip + 0x158f98] ; syscall
0x000000000009418d : lea rdi, [rip + 0x15930c] ; syscall
0x00000000000873d2 : lea rdi, [rip + 0x166087] ; syscall
0x0000000000086fd5 : lea rdi, [rip + 0x166484] ; syscall
0x0000000000086f2a : lea rdi, [rip + 0x16652f] ; syscall
0x00000000000850c3 : lea rdi, [rip + 0x16adf6] ; syscall
0x0000000000064187 : lea rdi, [rip + 0x1892a2] ; syscall
0x0000000000063f03 : lea rdi, [rip + 0x189522] ; syscall
0x0000000000061d2f : lea rdi, [rip + 0x18b6ee] ; syscall
0x0000000000061bef : lea rdi, [rip + 0x18b82e] ; syscall
0x0000000000057e53 : lea rdi, [rip + 0x1955b6] ; syscall
0x0000000000057c73 : lea rdi, [rip + 0x195796] ; syscall
0x0000000000057743 : lea rdi, [rip + 0x195cc6] ; syscall
0x0000000000055d76 : lea rdi, [rip + 0x1975e3] ; call 0x102819
0x00000000000554cf : lea rdi, [rip + 0x197d0a] ; syscall
0x000000000005537b : lea rdi, [rip + 0x197e5e] ; syscall
0x0000000000055346 : lea rdi, [rip + 0x197e93] ; syscall
0x000000000004abaf : lea rdi, [rip + 0x1a260a] ; syscall
0x000000000004aaef : lea rdi, [rip + 0x1a26ca] ; syscall
0x000000000004aa27 : lea rdi, [rip + 0x1a2792] ; syscall
0x000000000004a94f : lea rdi, [rip + 0x1a286a] ; syscall
0x0000000000049a47 : lea rdi, [rip + 0x1a2f1a] ; syscall
0x0000000000049982 : lea rdi, [rip + 0x1a2fdf] ; syscall
0x00000000000497e0 : lea rdi, [rip + 0x1a3181] ; syscall
0x0000000000049706 : lea rdi, [rip + 0x1a325b] ; syscall
0x000000000003b720 : lea rdi, [rip + 0x1b11f1] ; syscall
0x0000000000039d9d : lea rdi, [rip + 0x1b2b3c] ; syscall
0x0000000000038a56 : lea rdi, [rip + 0x1b3ddb] ; syscall
0x0000000000038a29 : lea rdi, [rip + 0x1b3e08] ; syscall
0x00000000000388e4 : lea rdi, [rip + 0x1b3f4d] ; syscall
0x00000000000296c7 : lea rdi, [rip + 0x1c67f2] ; syscall
0x000000000002955b : lea rdi, [rip + 0x1c695e] ; syscall
0x000000000002943b : lea rdi, [rip + 0x1c6a7e] ; syscall
0x0000000000025886 : lea rdi, [rip + 0x1c70a3] ; syscall
0x000000000019bdaf : lea rdi, [rip + 0x50bb2] ; syscall
0x000000000019bf6f : lea rdi, [rip + 0x5156a] ; syscall
0x000000000019c29f : lea rdi, [rip + 0x52f72] ; syscall
0x000000000016156f : lea rdi, [rip + 0x8ee42] ; syscall
0x0000000000160387 : lea rdi, [rip + 0x9002a] ; syscall
0x00000000001602a7 : lea rdi, [rip + 0x9010a] ; syscall
0x00000000001600bf : lea rdi, [rip + 0x902f2] ; syscall
0x000000000016001f : lea rdi, [rip + 0x90392] ; syscall
0x000000000015ff7f : lea rdi, [rip + 0x90432] ; syscall
0x000000000015fecf : lea rdi, [rip + 0x904e2] ; syscall
0x000000000015f94f : lea rdi, [rip + 0x90a62] ; syscall
0x000000000015571f : lea rdi, [rip + 0x9a3ca] ; syscall
0x00000000001555bf : lea rdi, [rip + 0x9a52a] ; syscall
0x00000000001553b3 : lea rdi, [rip + 0x9a736] ; syscall
0x0000000000155213 : lea rdi, [rip + 0x9a8d6] ; syscall
0x000000000015507f : lea rdi, [rip + 0x9aa6a] ; syscall
0x0000000000154f3f : lea rdi, [rip + 0x9abaa] ; syscall
0x0000000000154ddf : lea rdi, [rip + 0x9ad0a] ; syscall
0x0000000000154ccf : lea rdi, [rip + 0x9ae1a] ; syscall
0x000000000015181f : lea rdi, [rip + 0x9e2c6] ; syscall
0x000000000014fb07 : lea rdi, [rip + 0x9ff1a] ; syscall
0x000000000014f9c7 : lea rdi, [rip + 0xa005a] ; syscall
0x000000000014f90f : lea rdi, [rip + 0xa0112] ; syscall
0x000000000014f823 : lea rdi, [rip + 0xa01f6] ; syscall
0x000000000014f653 : lea rdi, [rip + 0xa0396] ; syscall
0x000000000014f48f : lea rdi, [rip + 0xa0532] ; syscall
0x0000000000149b21 : lea rdi, [rip + 0xa5d3c] ; syscall
0x0000000000147983 : lea rdi, [rip + 0xa7e46] ; syscall
0x000000000014762b : lea rdi, [rip + 0xa819e] ; syscall
0x00000000001472db : lea rdi, [rip + 0xa84ee] ; syscall
0x00000000001470b5 : lea rdi, [rip + 0xa8714] ; syscall
0x0000000000146f53 : lea rdi, [rip + 0xa8876] ; syscall
0x0000000000146d16 : lea rdi, [rip + 0xa8ab3] ; syscall
0x00000000001462bf : lea rdi, [rip + 0xa9452] ; syscall
0x000000000014613d : lea rdi, [rip + 0xa95d4] ; syscall
0x0000000000146103 : lea rdi, [rip + 0xa960e] ; syscall
0x0000000000145feb : lea rdi, [rip + 0xa9726] ; syscall
0x00000000001457a7 : lea rdi, [rip + 0xa9f6a] ; syscall
0x00000000001456df : lea rdi, [rip + 0xaa032] ; syscall
0x00000000001455c3 : lea rdi, [rip + 0xaa14e] ; syscall
0x00000000001441f0 : lea rdi, [rip + 0xab2c9] ; syscall
0x0000000000140aaf : lea rdi, [rip + 0xae762] ; syscall
0x00000000001407b3 : lea rdi, [rip + 0xaea5e] ; syscall
0x000000000010a4fd : lea rdi, [rip + 0xb200c] ; call 0x36fc9
0x000000000013c483 : lea rdi, [rip + 0xb2d7a] ; syscall
0x000000000013bf03 : lea rdi, [rip + 0xb32de] ; syscall
0x000000000013bd3f : lea rdi, [rip + 0xb345a] ; syscall
0x000000000013bc77 : lea rdi, [rip + 0xb34c2] ; syscall
0x000000000013bb37 : lea rdi, [rip + 0xb3602] ; syscall
0x000000000013ba7f : lea rdi, [rip + 0xb36ba] ; syscall
0x000000000013b38f : lea rdi, [rip + 0xb3da2] ; syscall
0x000000000013b06f : lea rdi, [rip + 0xb40c2] ; syscall
0x000000000013b009 : lea rdi, [rip + 0xb40d0] ; call rax
0x000000000013aeb3 : lea rdi, [rip + 0xb427e] ; syscall
0x000000000013ae75 : lea rdi, [rip + 0xb42bc] ; call 0x978c9
0x0000000000137b17 : lea rdi, [rip + 0xb74aa] ; syscall
0x00000000001379d7 : lea rdi, [rip + 0xb75ea] ; syscall
0x000000000013791f : lea rdi, [rip + 0xb76a2] ; syscall
0x000000000013783f : lea rdi, [rip + 0xb777a] ; syscall
0x0000000000137373 : lea rdi, [rip + 0xb7bce] ; syscall
0x0000000000136da3 : lea rdi, [rip + 0xb813e] ; syscall
0x0000000000136883 : lea rdi, [rip + 0xb8616] ; syscall
0x00000000001366b7 : lea rdi, [rip + 0xb87a2] ; syscall
0x0000000000136577 : lea rdi, [rip + 0xb88e2] ; syscall
0x00000000001364bf : lea rdi, [rip + 0xb899a] ; syscall
0x00000000001363df : lea rdi, [rip + 0xb8a72] ; syscall
0x0000000000135fc3 : lea rdi, [rip + 0xb8e46] ; syscall
0x00000000001359a7 : lea rdi, [rip + 0xb9402] ; syscall
0x000000000013584f : lea rdi, [rip + 0xb955a] ; syscall
0x000000000013578f : lea rdi, [rip + 0xb961a] ; syscall
0x00000000001356a7 : lea rdi, [rip + 0xb96fa] ; syscall
0x00000000001355c3 : lea rdi, [rip + 0xb97a6] ; syscall
0x0000000000134f63 : lea rdi, [rip + 0xb9dc6] ; syscall
0x0000000000134d57 : lea rdi, [rip + 0xb9f8a] ; syscall
0x0000000000134bff : lea rdi, [rip + 0xba0e2] ; syscall
0x0000000000134b3f : lea rdi, [rip + 0xba1a2] ; syscall
0x0000000000134a57 : lea rdi, [rip + 0xba282] ; syscall
0x0000000000133e43 : lea rdi, [rip + 0xbae1e] ; syscall
0x0000000000133bd3 : lea rdi, [rip + 0xbb04e] ; syscall
0x0000000000133453 : lea rdi, [rip + 0xbb76e] ; syscall
0x0000000000129717 : lea rdi, [rip + 0xc5412] ; syscall
0x00000000001295d7 : lea rdi, [rip + 0xc5552] ; syscall
0x000000000012951f : lea rdi, [rip + 0xc560a] ; syscall
0x0000000000129145 : lea rdi, [rip + 0xc59dc] ; syscall
0x0000000000128f43 : lea rdi, [rip + 0xc5ba6] ; syscall
0x0000000000128d63 : lea rdi, [rip + 0xc5d3e] ; syscall
0x0000000000128b9f : lea rdi, [rip + 0xc5eba] ; syscall
0x0000000000128acf : lea rdi, [rip + 0xc5f36] ; syscall
0x0000000000128a05 : lea rdi, [rip + 0xc6000] ; syscall
0x0000000000128970 : lea rdi, [rip + 0xc6095] ; syscall
0x0000000000127c67 : lea rdi, [rip + 0xc6d6a] ; syscall
0x0000000000127b27 : lea rdi, [rip + 0xc6eaa] ; syscall
0x0000000000127a6f : lea rdi, [rip + 0xc6f62] ; syscall
0x0000000000127475 : lea rdi, [rip + 0xc7554] ; syscall
0x0000000000127273 : lea rdi, [rip + 0xc76fe] ; syscall
0x0000000000127093 : lea rdi, [rip + 0xc7876] ; syscall
0x0000000000126ecf : lea rdi, [rip + 0xc79d2] ; syscall
0x000000000011b8ef : lea rdi, [rip + 0xd2c5a] ; syscall
0x000000000011b7d3 : lea rdi, [rip + 0xd2d76] ; syscall
0x000000000011b373 : lea rdi, [rip + 0xd31d6] ; syscall
0x000000000011ae48 : lea rdi, [rip + 0xd3701] ; syscall
0x0000000000109d28 : lea rdi, [rip + 0xe4551] ; syscall
0x00000000001303fd : lea rdi, [rip - 0x184] ; call rax
0x000000000010e847 : lea rdi, [rsp + 0x78] ; call 0x10b337
0x00000000001694a3 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000008af93 : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000012628d : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001698a7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000015547c : lea rdx, [rip + 0x3a2d] ; call qword ptr [rax]
0x0000000000119299 : lea rdx, [rsi + 1] ; jne 0x119276 ; ret
0x00000000000bed07 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015997c : lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159113 : lea rsi, [rsp + 0x10] ; mov rdi, rbp ; call qword ptr [rax]
0x000000000014c427 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000085b8d : lea rsi, [rsp + 8] ; call rax
0x00000000000e4266 : lea rsp, [rbp - 0x10] ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000a3a43 : leave ; add al, 0xd ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000169037 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e9d6f : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000182d77 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000186d84 : leave ; add rax, rcx ; sub rax, rdi ; ret
0x0000000000105ac7 : leave ; add rsp, 8 ; mov eax, r9d ; ret
0x0000000000045529 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000beb86 : leave ; cmove rax, rdx ; ret
0x00000000000d2327 : leave ; cmp eax, ecx ; jne 0xd2338 ; mov eax, r9d ; ret
0x00000000000aba6d : leave ; je 0xaba7f ; cmp ecx, esi ; jne 0xaba67 ; ret
0x0000000000132b26 : leave ; jmp 0x8ed43
0x00000000000abb07 : leave ; jmp rcx
0x0000000000126280 : leave ; jne 0x12628b ; ret
0x00000000001262e9 : leave ; jne 0x1262f3 ; ret
0x0000000000126bd0 : leave ; jne 0x126bdb ; ret
0x0000000000126c2d : leave ; jne 0x126c3b ; ret
0x000000000013104d : leave ; jne 0x130ffe ; mov rax, rdi ; ret
0x00000000000be680 : leave ; jne 0xbe673 ; ret
0x00000000000be730 : leave ; jne 0xbe723 ; ret
0x00000000000be9f0 : leave ; jne 0xbe9e7 ; sub rax, 1 ; ret
0x00000000000bfcf0 : leave ; jne 0xbfcce ; mov rax, r8 ; ret
0x00000000000b97c1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001513a3 : leave ; mov cl, byte ptr [rcx] ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000000c9d21 : leave ; mov eax, r9d ; ret
0x00000000000718b6 : leave ; mov edx, r8d ; jmp 0x718d1
0x0000000000073d37 : leave ; mov edx, r8d ; jmp 0x73d52
0x000000000017145b : leave ; mov es, word ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000ef143 : leave ; mov r8d, ebx ; mov rdi, r15 ; call 0xebb59
0x000000000003bef2 : leave ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000005a9a8 : leave ; ret
0x00000000000528a3 : leave ; ret 0x16
0x0000000000108783 : leave ; retf
0x000000000005892e : leave ; xor eax, eax ; ret
0x0000000000123745 : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000123525 : leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000001874c8 : ljmp [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000609b4 : ljmp [rcx] ; ret
0x00000000000faac2 : ljmp [rcx] ; ret 0x6348
0x00000000000ecdaf : ljmp [rcx] ; ret 0x8b48
0x000000000007b353 : ljmp [rcx] ; retf 0xda29
0x00000000000573eb : ljmp [rdi] ; jne 0x573e5 ; pop rbx ; ret
0x0000000000116b8c : lock add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x0000000000190df0 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a20ba : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000011643c : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000011950e : lock dec dword ptr [rax + 1] ; ret
0x0000000000118e88 : lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011a234 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000011fde0 : lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x000000000012e181 : lock dec dword ptr [rax - 0x7d] ; ret
0x000000000012216f : lock dec dword ptr [rbp - 0x77] ; call 0x2e78ec69
0x0000000000181e70 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000195510 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000139d9c : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000ecc2f : lodsb al, byte ptr [rsi] ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000a3950 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, 0x450f4800 ; ret 0xfc3
0x0000000000182494 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010fac9 : lodsb al, byte ptr [rsi] ; ret 0x8207
0x00000000000eb0f4 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000000e802d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; setne al ; ret
0x00000000000f68df : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3941
0x0000000000142d7f : lodsd eax, dword ptr [rsi] ; and eax, 0x8948ffee ; ret
0x00000000000710ef : lodsd eax, dword ptr [rsi] ; loope 0x710f7 ; inc dword ptr [rcx - 0xa] ; ret
0x000000000009c173 : lodsd eax, dword ptr [rsi] ; mov ah, 0x11 ; add al, ch ; ret
0x0000000000186000 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a3b69 : lodsd eax, dword ptr [rsi] ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000154de3 : lodsd eax, dword ptr [rsi] ; or dword ptr [rax], eax ; syscall
0x0000000000059572 : lodsd eax, dword ptr [rsi] ; ret
0x000000000014ce07 : lodsd eax, dword ptr [rsi] ; retf
0x0000000000100f67 : loop 0x100f6e ; add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x0000000000116ce2 : loop 0x116ca2 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000011dd6f : loop 0x11dd7f ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011f8f9 : loop 0x11f8ff ; dec dword ptr [rax - 0x7f] ; ret
0x000000000012713c : loop 0x127132 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000130e5d : loop 0x130e5d ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000134c02 : loop 0x134ba8 ; or eax, dword ptr [rax] ; syscall
0x000000000013657a : loop 0x136508 ; or eax, dword ptr [rax] ; syscall
0x00000000001388c2 : loop 0x1388bc ; lea r8, [rbp - 0x78] ; call 0xe4b88
0x000000000014d242 : loop 0x14d293 ; mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000014e100 : loop 0x14e18a ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000159d36 : loop 0x159cbd ; ret 0x7401
0x000000000015fed2 : loop 0x15fedc ; or dword ptr [rax], eax ; syscall
0x000000000017060a : loop 0x170605 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170609 : loop 0x170606 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017313a : loop 0x173135 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173139 : loop 0x173136 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000005494d : loop 0x54955 ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x0000000000054eeb : loop 0x54ef2 ; dec dword ptr [rdi] ; add byte ptr [rcx], cl ; ret 0x8f74
0x0000000000057390 : loop 0x57393 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005870d : loop 0x586cd ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000058955 : loop 0x58915 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005e709 : loop 0x5e75b ; mov eax, eax ; ret
0x000000000006692f : loop 0x6695c ; ret 0xc031
0x00000000000876fd : loop 0x8775e ; pop r12 ; jmp rax
0x000000000008ddd4 : loop 0x8dddb ; mov eax, edx ; ret
0x000000000008ded4 : loop 0x8dedb ; mov eax, edx ; ret
0x00000000000a217a : loop 0xa21c2 ; pop rsp ; pop r13 ; ret
0x00000000000a218f : loop 0xa21d7 ; pop rsp ; pop r13 ; ret
0x00000000000aba45 : loop 0xaba97 ; mov eax, eax ; ret
0x00000000000ad7ed : loop 0xad825 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000bab3a : loop 0xbab45 ; add byte ptr [rax], al ; ret
0x00000000000bf827 : loop 0xbf813 ; ret
0x00000000000c9a2c : loop 0xc9a33 ; dec dword ptr [rdi] ; add byte ptr [rcx], cl ; ret 0x8f74
0x00000000001185ee : loope 0x1185f5 ; mov eax, 0xa9 ; syscall
0x0000000000119a38 : loope 0x119a2e ; mov rdx, r9 ; jmp 0x119a6d
0x000000000012c1ab : loope 0x12c145 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000012eb3b : loope 0x12ebad ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000130e42 : loope 0x130e4f ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000155cdf : loope 0x155d30 ; mov edx, ebp ; mov rsi, rbx ; call rax
0x0000000000162ce6 : loope 0x162cef ; sub rdx, rcx ; jmp 0x162cfd
0x000000000017057a : loope 0x170575 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170579 : loope 0x170576 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001730aa : loope 0x1730a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001730a9 : loope 0x1730a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017bbdb : loope 0x17bbe2 ; add byte ptr [rax], al ; ret
0x00000000001873ce : loope 0x1873ff ; enter -0x73b, 0x77 ; ret
0x000000000018e163 : loope 0x18e1b5 ; lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000019423b : loope 0x194245 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000019bebe : loope 0x19bf1d ; ret
0x0000000000038c70 : loope 0x38c79 ; inc dword ptr [rax - 0x76b7bcc8] ; ret
0x00000000000593fb : loope 0x5944d ; mov dword ptr [rdi], ecx ; ret
0x000000000005942c : loope 0x5947f ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000000594ad : loope 0x59500 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000710f0 : loope 0x710f6 ; inc dword ptr [rcx - 0xa] ; ret
0x0000000000078a72 : loope 0x78a79 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009d58d : loope 0x9d5a4 ; add al, ch ; retf
0x00000000000cda37 : loope 0xcda89 ; mov edx, ebp ; call rbx
0x00000000000d2c9e : loope 0xd2cb3 ; je 0xd2cc4 ; ret
0x00000000000f766e : loope 0xf7673 ; add esi, esi ; ret
0x00000000000f906b : loope 0xf9070 ; add esi, esi ; ret 0xf04
0x00000000000fa6e2 : loope 0xfa6e7 ; add esi, esi ; ret 0xf04
0x00000000000fb858 : loope 0xfb85d ; add esi, esi ; ret 0xf04
0x000000000010259d : loopne 0x102604 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001025f2 : loopne 0x10263c ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000102670 : loopne 0x1026d4 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105d45 : loopne 0x105d58 ; ret
0x000000000010a016 : loopne 0x10a07c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c273 : loopne 0x10c2b5 ; jmp rax
0x000000000010dd80 : loopne 0x10ddc2 ; jmp rax
0x000000000010fdec : loopne 0x10fde6 ; ret 0x7504
0x000000000010fe9b : loopne 0x10fedd ; jmp rax
0x00000000001104bf : loopne 0x110505 ; pop rsp ; ret
0x00000000001104ab : loopne 0x11050d ; pop rbp ; pop r12 ; ret
0x0000000000111685 : loopne 0x1116e9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001124e6 : loopne 0x11254b ; pop r12 ; pop r13 ; ret
0x000000000011715d : loopne 0x1171a3 ; pop rsp ; ret
0x000000000011744e : loopne 0x1174b0 ; pop rbp ; pop r12 ; ret
0x0000000000117600 : loopne 0x117662 ; pop rbp ; pop r12 ; ret
0x0000000000117647 : loopne 0x1176a9 ; pop rbp ; pop r12 ; ret
0x00000000001189a2 : loopne 0x1189e8 ; pop rsp ; ret
0x0000000000118cad : loopne 0x118d0f ; pop rbp ; pop r12 ; ret
0x0000000000119770 : loopne 0x11976a ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1197b1
0x0000000000119950 : loopne 0x119949 ; mov r14, r8 ; mov rdx, r8 ; jmp 0x11998f
0x000000000011a4a7 : loopne 0x11a509 ; pop rbp ; pop r12 ; ret
0x000000000011abe6 : loopne 0x11ac4a ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000011b9e0 : loopne 0x11ba42 ; pop rbp ; pop r12 ; ret
0x000000000011beda : loopne 0x11bf20 ; pop rsp ; ret
0x000000000011c420 : loopne 0x11c480 ; pop r12 ; ret
0x000000000011ccaa : loopne 0x11cd0f ; pop r12 ; pop r13 ; jmp rax
0x000000000011cd3a : loopne 0x11cd9f ; pop r12 ; pop r13 ; jmp rax
0x000000000011d923 : loopne 0x11d986 ; pop r12 ; jmp rax
0x000000000011d9d2 : loopne 0x11da37 ; pop r12 ; pop r13 ; jmp rax
0x000000000011d9d9 : loopne 0x11da48 ; nop dword ptr [rax + rax] ; ret
0x000000000011fc7e : loopne 0x11fce2 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000122100 : loopne 0x12212a ; and rax, rdi ; or rax, rsi ; ret
0x0000000000122ac4 : loopne 0x122acb ; ret
0x0000000000125b72 : loopne 0x125b77 ; ret
0x0000000000125b8a : loopne 0x125b99 ; movzx eax, ax ; ret
0x0000000000125c02 : loopne 0x125c07 ; ret
0x0000000000125ca2 : loopne 0x125ca7 ; ret
0x0000000000125cba : loopne 0x125cbf ; ret
0x0000000000125d32 : loopne 0x125d37 ; ret
0x0000000000125d4a : loopne 0x125d53 ; movzx eax, ax ; ret
0x0000000000125dc1 : loopne 0x125dc9 ; mov eax, r8d ; ret
0x0000000000125e62 : loopne 0x125e67 ; ret
0x0000000000125f02 : loopne 0x125f07 ; ret
0x0000000000125fa2 : loopne 0x125fa7 ; ret
0x0000000000126042 : loopne 0x126047 ; ret
0x000000000012605a : loopne 0x126065 ; movzx eax, ax ; ret
0x00000000001260d2 : loopne 0x1260d7 ; ret
0x000000000012616d : loopne 0x126172 ; ret
0x0000000000126202 : loopne 0x126207 ; ret
0x00000000001263fe : loopne 0x126403 ; ret
0x0000000000126554 : loopne 0x126559 ; ret
0x000000000012656b : loopne 0x12657a ; movzx eax, ax ; ret
0x00000000001265e4 : loopne 0x1265e9 ; ret
0x0000000000126674 : loopne 0x126679 ; ret
0x000000000012668b : loopne 0x126690 ; ret
0x00000000001266f4 : loopne 0x1266f9 ; ret
0x000000000012670b : loopne 0x126714 ; movzx eax, ax ; ret
0x0000000000126783 : loopne 0x12678b ; mov eax, r8d ; ret
0x0000000000126814 : loopne 0x126819 ; ret
0x00000000001268a4 : loopne 0x1268a9 ; ret
0x0000000000126934 : loopne 0x126939 ; ret
0x00000000001269c4 : loopne 0x1269c9 ; ret
0x00000000001269db : loopne 0x1269e6 ; movzx eax, ax ; ret
0x0000000000126a54 : loopne 0x126a59 ; ret
0x0000000000126ae1 : loopne 0x126ae6 ; ret
0x0000000000126b64 : loopne 0x126b69 ; ret
0x0000000000126d3e : loopne 0x126d43 ; ret
0x0000000000128909 : loopne 0x12896e ; pop r12 ; pop r13 ; ret
0x000000000012a1bc : loopne 0x12a21e ; pop rbp ; pop r12 ; ret
0x000000000012b2f5 : loopne 0x12b356 ; pop r12 ; ret
0x000000000013003f : loopne 0x130044 ; ret
0x00000000001303fc : loopne 0x13044e ; lea edi, [rip - 0x184] ; call rax
0x0000000000131e43 : loopne 0x131ea5 ; pop rbp ; pop r12 ; ret
0x0000000000131e6f : loopne 0x131eb5 ; pop rsp ; ret
0x0000000000131e97 : loopne 0x131edd ; pop rsp ; ret
0x0000000000132fae : loopne 0x13300e ; pop r12 ; ret
0x0000000000137f98 : loopne 0x137ff8 ; pop r12 ; ret
0x000000000013819e : loopne 0x138202 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e7a8 : loopne 0x13e7a7 ; add eax, 0x10 ; ret
0x000000000013fadf : loopne 0x13faed ; shr rax, 4 ; and eax, 0x7f ; ret
0x000000000013fae6 : loopne 0x13fb69 ; ret
0x000000000013feb9 : loopne 0x13ff1b ; pop rbp ; pop r12 ; ret
0x000000000013fed5 : loopne 0x13ff37 ; pop rbp ; pop r12 ; ret
0x0000000000143793 : loopne 0x1437f7 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001437b2 : loopne 0x143816 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000143957 : loopne 0x1439bd ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001442ac : loopne 0x1442c5 ; out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000144c79 : loopne 0x144cdc ; pop r12 ; ret
0x000000000014546f : loopne 0x1454d1 ; pop rbp ; pop r12 ; ret
0x000000000014577b : loopne 0x1457de ; pop r12 ; ret
0x0000000000148c1a : loopne 0x148c7e ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014a36b : loopne 0x14a3cc ; pop r12 ; ret
0x000000000014bf09 : loopne 0x14bf4f ; pop rsp ; ret
0x000000000014e513 : loopne 0x14e577 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015090e : loopne 0x150972 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015102f : loopne 0x151092 ; pop r12 ; ret
0x00000000001516c1 : loopne 0x151728 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000152223 : loopne 0x152289 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000155e8e : loopne 0x155ef1 ; pop r12 ; ret
0x000000000015681b : loopne 0x156824 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001576ef : loopne 0x157752 ; pop r12 ; ret
0x00000000001577f6 : loopne 0x15785a ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001579f9 : loopne 0x157a5f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000157bb1 : loopne 0x157c18 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000158083 : loopne 0x1580fc ; retf 0x8348
0x00000000001587f5 : loopne 0x158803 ; cmp edi, 0x1a ; cmovae eax, r10d ; jmp 0x15879b
0x000000000015ccc9 : loopne 0x15cd0f ; pop rsp ; ret
0x000000000015cd19 : loopne 0x15cd7b ; pop rbp ; pop r12 ; ret
0x000000000015eb33 : loopne 0x15eb7d ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015eb5c : loopne 0x15ebc3 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015f36a : loopne 0x15f3d0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015f3a6 : loopne 0x15f40d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015f739 : loopne 0x15f77f ; pop rsp ; ret
0x000000000015f813 : loopne 0x15f879 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016152a : loopne 0x16158f ; pop r12 ; pop r13 ; ret
0x0000000000161747 : loopne 0x1617aa ; pop r12 ; ret
0x0000000000163d78 : loopne 0x163dbe ; pop rsp ; ret
0x0000000000169902 : loopne 0x16991a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169901 : loopne 0x16991b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169a52 : loopne 0x169a6a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169a51 : loopne 0x169a6b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169ba2 : loopne 0x169bba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169ba1 : loopne 0x169bbb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169cf2 : loopne 0x169d0a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169cf1 : loopne 0x169d0b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169e42 : loopne 0x169e5a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169e41 : loopne 0x169e5b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169f92 : loopne 0x169faa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169f91 : loopne 0x169fab ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a0e2 : loopne 0x16a0fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a0e1 : loopne 0x16a0fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a230 : loopne 0x16a248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a22f : loopne 0x16a249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a382 : loopne 0x16a39a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a381 : loopne 0x16a39b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a4d2 : loopne 0x16a4ea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a4d1 : loopne 0x16a4eb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a622 : loopne 0x16a63a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a621 : loopne 0x16a63b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a772 : loopne 0x16a78a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a771 : loopne 0x16a78b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a8c2 : loopne 0x16a8da ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016a8c1 : loopne 0x16a8db ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016aa12 : loopne 0x16aa2a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016aa11 : loopne 0x16aa2b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ab62 : loopne 0x16ab7a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ab61 : loopne 0x16ab7b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c2e2 : loopne 0x16c2fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c2e1 : loopne 0x16c2fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c432 : loopne 0x16c44a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c431 : loopne 0x16c44b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c582 : loopne 0x16c59a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c581 : loopne 0x16c59b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c6d2 : loopne 0x16c6ea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c6d1 : loopne 0x16c6eb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c822 : loopne 0x16c83a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c821 : loopne 0x16c83b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c972 : loopne 0x16c98a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016c971 : loopne 0x16c98b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cac2 : loopne 0x16cada ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cac1 : loopne 0x16cadb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cc10 : loopne 0x16cc28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cc0f : loopne 0x16cc29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cd62 : loopne 0x16cd7a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cd61 : loopne 0x16cd7b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ceb2 : loopne 0x16ceca ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ceb1 : loopne 0x16cecb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d002 : loopne 0x16d01a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d001 : loopne 0x16d01b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d152 : loopne 0x16d16a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d151 : loopne 0x16d16b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d2a2 : loopne 0x16d2ba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d2a1 : loopne 0x16d2bb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d3f2 : loopne 0x16d40a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d3f1 : loopne 0x16d40b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d542 : loopne 0x16d55a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d541 : loopne 0x16d55b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000018cf55 : loopne 0x18cfa2 ; mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000018e835 : loopne 0x18e889 ; lea eax, [rdi + rax] ; vzeroupper ; ret
0x000000000019a53d : loopne 0x19a583 ; pop rsp ; ret
0x000000000019a5c0 : loopne 0x19a606 ; pop rsp ; ret
0x000000000019ad7f : loopne 0x19ad6b ; retf
0x000000000019ae7f : loopne 0x19ae6b ; retf
0x000000000019af7f : loopne 0x19af6b ; retf
0x000000000019b07f : loopne 0x19b06b ; retf
0x000000000019bacf : loopne 0x19bb31 ; pop rbp ; pop r12 ; ret
0x0000000000033485 : loopne 0x334ea ; pop r12 ; pop r13 ; ret
0x0000000000033507 : loopne 0x3356c ; pop r12 ; pop r13 ; ret
0x0000000000033d20 : loopne 0x33d70 ; test eax, eax ; je 0x33d2e ; call rax
0x00000000000370b7 : loopne 0x370c6 ; movzx eax, ax ; ret
0x00000000000370f7 : loopne 0x37100 ; movzx eax, ax ; ret
0x0000000000037197 : loopne 0x371a2 ; movzx eax, ax ; ret
0x0000000000037277 : loopne 0x3727c ; ret
0x0000000000037310 : loopne 0x37315 ; ret
0x0000000000037330 : loopne 0x3733f ; movzx eax, ax ; ret
0x00000000000372e7 : loopne 0x3736a ; ret
0x0000000000037370 : loopne 0x37379 ; movzx eax, ax ; ret
0x0000000000037410 : loopne 0x3741b ; movzx eax, ax ; ret
0x0000000000037adc : loopne 0x37b3e ; pop rbp ; pop r12 ; ret
0x0000000000037b7a : loopne 0x37bc0 ; pop rsp ; ret
0x000000000003b7d6 : loopne 0x3b83b ; pop r12 ; pop r13 ; ret
0x00000000000443e4 : loopne 0x44430 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004519b : loopne 0x45182 ; fsub dword ptr [rip + 0x200] ; ret
0x000000000004576d : loopne 0x4578e ; or esi, eax ; movd xmm0, esi ; ret
0x0000000000045899 : loopne 0x458a5 ; ret
0x0000000000045e08 : loopne 0x45e14 ; ret
0x0000000000046ea0 : loopne 0x46ef0 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000047467 : loopne 0x474c9 ; pop rbp ; pop r12 ; ret
0x000000000004747d : loopne 0x474df ; pop rbp ; pop r12 ; ret
0x000000000004a9c8 : loopne 0x4aa0e ; pop rsp ; ret
0x000000000004aaa4 : loopne 0x4ab07 ; pop r12 ; ret
0x0000000000055b99 : loopne 0x55bbd ; or eax, edx ; ret
0x0000000000058ccd : loopne 0x58cd6 ; sub eax, 1 ; ret
0x000000000005accb : loopne 0x5ac8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005ea16 : loopne 0x5ea77 ; pop r12 ; ret
0x000000000005eaae : loopne 0x5eb0f ; pop r12 ; ret
0x000000000005ead5 : loopne 0x5eb36 ; pop r12 ; ret
0x000000000005eaf2 : loopne 0x5eb53 ; pop r12 ; ret
0x00000000000624a0 : loopne 0x6242d ; ret
0x0000000000065739 : loopne 0x6579c ; pop r12 ; ret
0x0000000000065810 : loopne 0x65871 ; pop r12 ; ret
0x00000000000659ac : loopne 0x659ae ; sti ; dec dword ptr [rax - 0x77] ; ret 0x12eb
0x000000000006909f : loopne 0x6908c ; ret 0xffdc
0x000000000007bb6e : loopne 0x7bb05 ; mov r10, rdx ; jmp rax
0x000000000007d0a3 : loopne 0x7d109 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e562 : loopne 0x7e4f6 ; lea eax, [rsi + rsi*8 - 0x76b30001] ; ret 0x894c
0x000000000007fa03 : loopne 0x7fa0d ; inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000008224e : loopne 0x821e5 ; mov r9, rsi ; jmp rax
0x00000000000835b2 : loopne 0x83618 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000083ba2 : loopne 0x83c06 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000843ae : loopne 0x84410 ; pop rbp ; pop r12 ; ret
0x0000000000084f96 : loopne 0x84ff8 ; pop rbp ; pop r12 ; ret
0x0000000000085b00 : loopne 0x85b06 ; add byte ptr [rax], al ; jmp rax
0x0000000000085aa3 : loopne 0x85b07 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085ac9 : loopne 0x85b2d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085b3c : loopne 0x85b42 ; add byte ptr [rax], al ; call rax
0x0000000000085b05 : loopne 0x85b57 ; mov eax, 0xffffffff ; ret
0x0000000000085b89 : loopne 0x85b94 ; add byte ptr [rax], al ; lea rsi, [rsp + 8] ; call rax
0x0000000000085be0 : loopne 0x85be6 ; add byte ptr [rax], al ; jmp rax
0x0000000000085d16 : loopne 0x85d7b ; pop r12 ; pop r13 ; ret
0x0000000000085d7e : loopne 0x85de3 ; pop r12 ; pop r13 ; ret
0x0000000000087456 : loopne 0x874bb ; pop r12 ; pop r13 ; ret
0x0000000000087475 : loopne 0x874da ; pop r12 ; pop r13 ; ret
0x0000000000088a84 : loopne 0x88aeb ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088b66 : loopne 0x88bb0 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000088bab : loopne 0x88c12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089924 : loopne 0x89988 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008dc33 : loopne 0x8dc96 ; pop r12 ; ret
0x000000000008e240 : loopne 0x8e2a6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008e8f3 : loopne 0x8e956 ; pop r12 ; ret
0x000000000008ef6e : loopne 0x8efd2 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f147 : loopne 0x8f1ae ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f1a3 : loopne 0x8f205 ; pop rbp ; pop r12 ; ret
0x000000000008fc09 : loopne 0x8fc6f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009064a : loopne 0x906ac ; pop rbp ; pop r12 ; ret
0x000000000009105a : loopne 0x9105f ; ret
0x000000000009106a : loopne 0x9106f ; ret
0x00000000000912c6 : loopne 0x91328 ; pop rbp ; pop r12 ; ret
0x00000000000912f8 : loopne 0x9133e ; pop rsp ; ret
0x0000000000091307 : loopne 0x9134d ; pop rsp ; ret
0x000000000009138d : loopne 0x913f1 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000913a7 : loopne 0x9140c ; pop r12 ; pop r14 ; ret
0x000000000009304e : loopne 0x930b0 ; pop rbp ; pop r12 ; ret
0x000000000009798c : loopne 0x979a1 ; cmp eax, 4 ; je 0x9799b ; ret
0x0000000000097b1c : loopne 0x97b2d ; pop rbx ; ret
0x00000000000985f8 : loopne 0x9865c ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009862c : loopne 0x98691 ; pop r12 ; pop r13 ; ret
0x00000000000989c7 : loopne 0x98a0d ; pop rsp ; ret
0x00000000000989b8 : loopne 0x98a1a ; pop rbp ; pop r12 ; ret
0x0000000000098e27 : loopne 0x98e8b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009d05f : loopne 0x9d0c1 ; pop rbp ; pop r12 ; ret
0x000000000009f3b2 : loopne 0x9f3bb ; cmovne rax, rdx ; ret
0x00000000000a0698 : loopne 0xa06de ; pop rsp ; ret
0x00000000000a08cb : loopne 0xa0911 ; pop rsp ; ret
0x00000000000a2083 : loopne 0xa20ea ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a354a : loopne 0xa3592 ; pop rsp ; pop r13 ; ret
0x00000000000a3533 : loopne 0xa3598 ; pop r12 ; pop r13 ; ret
0x00000000000a3bf6 : loopne 0xa3c57 ; pop r12 ; ret
0x00000000000a3c0d : loopne 0xa3c6e ; pop r12 ; ret
0x00000000000a4fbf : loopne 0xa5005 ; pop rsp ; ret
0x00000000000a4fab : loopne 0xa500d ; pop rbp ; pop r12 ; ret
0x00000000000ab827 : loopne 0xab888 ; pop r12 ; ret
0x00000000000ab83d : loopne 0xab89e ; pop r12 ; ret
0x00000000000ab8ee : loopne 0xab934 ; pop rsp ; ret
0x00000000000abf23 : loopne 0xabf87 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abf9f : loopne 0xabfe7 ; pop rsp ; pop r13 ; ret
0x00000000000ac025 : loopne 0xac08c ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bac3c : loopne 0xbac46 ; add byte ptr [rax], al ; ret
0x00000000000bf988 : loopne 0xbf9eb ; pop r12 ; ret
0x00000000000bfa7b : loopne 0xbfadd ; pop rbp ; pop r12 ; ret
0x00000000000bfb68 : loopne 0xbfbcf ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9ae0 : loopne 0xc9b43 ; str word ptr [rax - 0x77] ; ret 0xc148
0x00000000000d31ff : loopne 0xd3245 ; pop rsp ; ret
0x00000000000d3233 : loopne 0xd3279 ; pop rsp ; ret
0x00000000000d3245 : loopne 0xd328b ; pop rsp ; ret
0x00000000000d4250 : loopne 0xd425a ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000d4d87 : loopne 0xd4dd1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d4d6e : loopne 0xd4dd5 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e0656 : loopne 0xe06b8 ; pop rbp ; pop r12 ; ret
0x00000000000e06b7 : loopne 0xe06fd ; pop rsp ; ret
0x00000000000e0749 : loopne 0xe07b0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e0817 : loopne 0xe0861 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e0a1a : loopne 0xe0a21 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e0aae : loopne 0xe0ab5 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e0bb7 : loopne 0xe0c1b ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0d37 : loopne 0xe0d9b ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0e5f : loopne 0xe0ec3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e2166 : loopne 0xe21c8 ; pop rbp ; pop r12 ; ret
0x00000000000f0fb9 : loopne 0xf101d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f770f : loopne 0xf7763 ; mov ecx, ebp ; call 0xf3956
0x00000000001503e0 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000122ef5 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x000000000009c1ec : mov ah, 0x11 ; add al, ch ; insb byte ptr [rdi], dx ; ret 0xffff
0x000000000009c164 : mov ah, 0x11 ; add al, ch ; push rsp ; ret
0x000000000009c174 : mov ah, 0x11 ; add al, ch ; ret
0x000000000009f695 : mov ah, 0x14 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010c9b2 : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000015d6d8 : mov ah, 0x7d ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000010877c : mov ah, 0xa ; add byte ptr [rbp - 0x77], cl ; in eax, 0xe8 ; leave ; retf
0x0000000000130c18 : mov ah, 0xdc ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000a3678 : mov ah, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x00000000000a383f : mov ah, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000d8b0b : mov al, 0 ; add byte ptr [rax], al ; call 0x255a6
0x0000000000122c85 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014bda1 : mov al, 0x23 ; add byte ptr [rax], al ; pop rbp ; jmp rcx
0x0000000000119775 : mov al, 0x48 ; mov edx, eax ; jmp 0x1197ac
0x00000000000cade0 : mov al, 0x89 ; ret 0xff25
0x00000000000a37f9 : mov al, 0xc ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000018b79f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000000ed4e5 : mov al, 0xe8 ; jle 0xed4e5 ; dec dword ptr [rax - 0x77] ; ret
0x000000000004a4e0 : mov al, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000a34bd : mov al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000162d35 : mov al, 1 ; add byte ptr [rax], al ; jmp rax
0x0000000000047242 : mov al, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000011df31 : mov al, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000000bac6c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000ba86c : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000110cd5 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b6b9b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b6bc9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b6c4d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000017df90 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b6b75 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000156a38 : mov al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000128e12 : mov al, ch ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000b6b85 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000008013f : mov bh, 0x16 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000171341 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000018c621 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000036e2a : mov bh, 0x44 ; mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x000000000004b2ce : mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000e1105 : mov bh, 0x48 ; adc byte ptr [rax + 1], cl ; retf 0x8b49
0x00000000000fff68 : mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000000db4db : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x00000000001940d8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000000d5474 : mov bh, 0x4c ; dec byte ptr [rbp - 0x77] ; retf
0x000000000004b2ca : mov bh, 0x4d ; add cl, byte ptr [rdi] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000abb82 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc47 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000008c99f : mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000008b9a5 : mov bh, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000eaae5 : mov bh, 0xa9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000370ba : mov bh, 0xc0 ; ret
0x0000000000132efc : mov bh, 0xf6 ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000125b86 : mov bh, 4 ; js 0x125b16 ; loopne 0x125b9d ; movzx eax, ax ; ret
0x0000000000125cb6 : mov bh, 4 ; js 0x125c43 ; loopne 0x125cc3 ; ret
0x0000000000125d46 : mov bh, 4 ; js 0x125cd6 ; loopne 0x125d57 ; movzx eax, ax ; ret
0x0000000000126056 : mov bh, 4 ; js 0x125fe6 ; loopne 0x126069 ; movzx eax, ax ; ret
0x0000000000126567 : mov bh, 4 ; js 0x1264f7 ; loopne 0x12657e ; movzx eax, ax ; ret
0x0000000000126687 : mov bh, 4 ; js 0x126614 ; loopne 0x126694 ; ret
0x0000000000126707 : mov bh, 4 ; js 0x126697 ; loopne 0x126718 ; movzx eax, ax ; ret
0x00000000001269d7 : mov bh, 4 ; js 0x126967 ; loopne 0x1269ea ; movzx eax, ax ; ret
0x00000000000370b3 : mov bh, 4 ; js 0x37043 ; loopne 0x370ca ; movzx eax, ax ; ret
0x00000000000370f3 : mov bh, 4 ; js 0x37083 ; loopne 0x37104 ; movzx eax, ax ; ret
0x0000000000037193 : mov bh, 4 ; js 0x37123 ; loopne 0x371a6 ; movzx eax, ax ; ret
0x0000000000037273 : mov bh, 4 ; js 0x37200 ; loopne 0x37280 ; ret
0x000000000003730c : mov bh, 4 ; js 0x37299 ; loopne 0x37319 ; ret
0x000000000003732c : mov bh, 4 ; js 0x372bc ; loopne 0x37343 ; movzx eax, ax ; ret
0x000000000003736c : mov bh, 4 ; js 0x372fc ; loopne 0x3737d ; movzx eax, ax ; ret
0x000000000003740c : mov bh, 4 ; js 0x3739c ; loopne 0x3741f ; movzx eax, ax ; ret
0x00000000000daafd : mov bh, 5 ; cdq ; jo 0xdab17 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9edc : mov bh, 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jl 0xd9ef6 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000daaed : mov bh, 5 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jo 0xdab07 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9eec : mov bh, 5 ; cwde ; jl 0xd9f06 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f4c : mov bh, 5 ; jl 0xd9f66 ; add byte ptr [rcx + 0x39], al ; ret 0x9d0f
0x00000000000dab5d : mov bh, 5 ; jo 0xdab77 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab0d : mov bh, 5 ; mov esi, dword ptr [rax + 0xd] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f1c : mov bh, 5 ; outsb dx, byte ptr [rsi] ; jl 0xd9f36 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab2d : mov bh, 5 ; outsd dx, dword ptr [rsi] ; jo 0xdab47 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab4d : mov bh, 5 ; push rbx ; jo 0xdab67 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9f3c : mov bh, 5 ; push rdx ; jl 0xd9f56 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d9ebc : mov bh, 5 ; ret 0xd7c
0x00000000000dab8d : mov bh, 5 ; sbb esi, dword ptr [rax + 0xd] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000dab7d : mov bh, 5 ; sub dword ptr [rax + 0xd], esi ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000010f9b5 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000ede48 : mov bh, byte ptr [rcx] ; ret 0x840f
0x0000000000111172 : mov bl, 0 ; add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000122fb8 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x00000000001959ce : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f8b88 : mov bl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xf66
0x0000000000146d19 : mov bl, 0x8a ; or al, byte ptr [rax] ; syscall
0x00000000000ce909 : mov bl, 0xab ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a37d8 : mov bl, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x0000000000034b6b : mov bl, ch ; retf 0x8348
0x0000000000142431 : mov byte ptr [r10], 0 ; ret
0x000000000013f99c : mov byte ptr [r8 + 2], 0 ; ret
0x0000000000029d62 : mov byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000038344 : mov byte ptr [r8 - 0x7d], r9b ; ret 0x481a
0x000000000013f99d : mov byte ptr [rax + 2], 0 ; ret
0x00000000000abc15 : mov byte ptr [rax + 2], dl ; ret
0x00000000000abc33 : mov byte ptr [rax + 4], dl ; ret
0x00000000000abc64 : mov byte ptr [rax + 6], dl ; ret
0x0000000000038004 : mov byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x00000000000a16d4 : mov byte ptr [rax + rax], dl ; call qword ptr [rax]
0x0000000000055c4f : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000029d63 : mov byte ptr [rax - 0x7d], cl ; ret
0x0000000000038345 : mov byte ptr [rax - 0x7d], cl ; ret 0x481a
0x00000000000ab888 : mov byte ptr [rax], 0 ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000abbf8 : mov byte ptr [rax], 0 ; ret
0x000000000012b245 : mov byte ptr [rax], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b22a : mov byte ptr [rax], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fae3b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x000000000011fd1f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011f6cc : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000058148 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e027 : mov byte ptr [rax], bh ; mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089475 : mov byte ptr [rax], bh ; mov eax, r9d ; ret
0x0000000000066abf : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000066ac0 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b97c2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000089474 : mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x000000000006e268 : mov byte ptr [rbp - 0x620], 0x70 ; jmp 0x6ad72
0x00000000001248ba : mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x000000000007e57a : mov byte ptr [rbp - 0x960], cl ; call rax
0x000000000007e579 : mov byte ptr [rbp - 0x960], r9b ; call rax
0x0000000000036f44 : mov byte ptr [rbx + 0xe], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017bc53 : mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc72 : mov byte ptr [rcx + 4], dl ; ret
0x000000000017bcb3 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000ab7c8 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a23fa : mov byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x000000000010cf35 : mov byte ptr [rcx], 0xe8 ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000eb53a : mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017bc30 : mov byte ptr [rcx], dl ; ret
0x00000000000be26a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bc61b : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000badfb : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000be27b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb7b8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000ba108 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000be280 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2a2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2c0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be2e0 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb82e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000ba15e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bc6a1 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000bae51 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000be301 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be306 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be322 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be342 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be362 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bc723 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000baed3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000be383 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb8b0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba1e0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000be388 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3aa : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3c8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be3e8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be404 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be424 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be444 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be464 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bafd5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000be485 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be48a : mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000103701 : mov byte ptr [rdi + 0x38], al ; mov dword ptr [rsi], edx ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000be4da : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000018db25 : mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x000000000018cf78 : mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x00000000000be1b0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1ce : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1ee : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be210 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be230 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be250 : mov byte ptr [rdi + 0xf], ch ; ret
0x000000000018cea5 : mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000be0e6 : mov byte ptr [rdi + 1], ch ; ret
0x000000000013f535 : mov byte ptr [rdi + 1], dh ; ret
0x000000000013f534 : mov byte ptr [rdi + 1], sil ; ret
0x000000000018c636 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000abcdd : mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be0f8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000bb666 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000ba026 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc4a9 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000abb50 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000be109 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be10e : mov byte ptr [rdi + 3], ch ; ret
0x00000000000abd0b : mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be126 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000bb682 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000ba042 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000bc4d7 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000abb6e : mov byte ptr [rdi + 4], dl ; ret
0x00000000000be137 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be13c : mov byte ptr [rdi + 5], ch ; ret
0x00000000000abd44 : mov byte ptr [rdi + 6], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be14e : mov byte ptr [rdi + 6], ch ; ret
0x00000000000abba7 : mov byte ptr [rdi + 6], dl ; ret
0x000000000014e106 : mov byte ptr [rdi + 7], al ; ret
0x00000000000be16c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000ef360 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000ef315 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000ef2e4 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ef390 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000ef3a0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000ef3b5 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000ef2fd : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ef320 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000be178 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000ba083 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000bc529 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000bad79 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000be189 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be18e : mov byte ptr [rdi + 9], ch ; ret
0x000000000018ced2 : mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x000000000018ced3 : mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000013f6fe : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000016af2b : mov byte ptr [rdi - 1], dl ; ret
0x00000000000abcb0 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018e031 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x000000000018c5a1 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ef355 : mov byte ptr [rdi], 0x5b ; ret
0x00000000000ef37e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000be0d2 : mov byte ptr [rdi], ch ; ret
0x00000000000bedaf : mov byte ptr [rdi], cl ; ret
0x000000000018f0f9 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000abb21 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000bb640 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000ba000 : mov byte ptr [rdi], dh ; ret
0x00000000000bc482 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000018e783 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x000000000018cea3 : mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000bacf2 : mov byte ptr [rdi], dl ; ret
0x000000000018da53 : mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000be0e2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000abb20 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b994a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000017dfb9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b6b9e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000017dfe7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b6bcc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b98e0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b6c50 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000137f0a : mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x0000000000142432 : mov byte ptr [rdx], 0 ; ret
0x000000000011de7d : mov byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000017df92 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000009108f : mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x00000000000b6b77 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000358b3 : mov byte ptr [rip + 0x1b6f24], dl ; ret
0x0000000000137c2e : mov byte ptr [rsi + 5], dl ; mov rax, rsi ; pop rbx ; ret
0x00000000000a45a0 : mov byte ptr [rsi + rdx + 1], al ; jne 0xa4596 ; ret
0x00000000000a459d : mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jne 0xa4599 ; ret
0x000000000011a076 : mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000011a0f8 : mov byte ptr [rsi - 1], 0 ; ret
0x000000000002d935 : mov byte ptr [rsi], cl ; add al, 0 ; add bh, dh ; ret 0xf800
0x00000000000bf951 : mov byte ptr [rsp + rbx*8 - 0x3d], dh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000011899c : mov byte ptr [rsp], 0 ; mov rax, r12 ; pop r12 ; ret
0x000000000007eaf4 : mov ch, 0 ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000019c1b7 : mov ch, 0x29 ; add eax, 0x5c74800 ; ret 0x529
0x0000000000142430 : mov ch, 0x41 ; mov byte ptr [rdx], 0 ; ret
0x000000000007e002 : mov ch, 0x4c ; mov edi, ebp ; call 0x8a246
0x0000000000143f54 : mov ch, 0xa ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000a36df : mov ch, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000011dc07 : mov ch, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000191966 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000027f92 : mov ch, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002debd : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000102f1e : mov ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0x8c0f
0x0000000000122d45 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x00000000000e4679 : mov cl, 0x15 ; fstp dword ptr [rdx - 0x7bf0fff0] ; retf 0xfffe
0x00000000000a1035 : mov cl, 0x15 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x00000000000e4549 : mov cl, 0x15 ; or dword ptr [rax + rdx + 0x158b4800], ebx ; retf 0x10be
0x00000000000a1189 : mov cl, 0x15 ; push rcx ; retf 0x14
0x000000000014564f : mov cl, 0x15 ; ret
0x00000000000a1218 : mov cl, 0x15 ; ret 0x14c9
0x0000000000135e48 : mov cl, 0x15 ; ret 0xb8f
0x000000000014f3f7 : mov cl, 0x15 ; retf
0x00000000000e2629 : mov cl, 0x15 ; stc ; mov ecx, 0x840f0010 ; retf 0xfffe
0x000000000019a197 : mov cl, 0x45 ; xor edx, edx ; jmp 0x19a16d
0x00000000001493a0 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000019c49e : mov cl, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000061b53 : mov cl, 0xd ; retf
0x0000000000162744 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000005fb2c : mov cl, 0xeb ; retf 0x4c90
0x00000000000448eb : mov cl, 3 ; add byte ptr [rax], al ; add rdx, rcx ; jmp 0x44907
0x00000000000a1352 : mov cl, al ; adc al, 0 ; syscall
0x0000000000035668 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000d9aea : mov cl, byte ptr [rax + 1] ; ret 0x8d48
0x000000000012627b : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x126290 ; ret
0x00000000001262e4 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x1262f8 ; ret
0x0000000000126bcb : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x126be0 ; ret
0x0000000000126c28 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x126c40 ; ret
0x00000000000b1f95 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000034b0c : mov cl, byte ptr [rcx + 1] ; sar byte ptr [rsi], 1 ; jmp r8
0x00000000001017ec : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0x0000000000109051 : mov cl, byte ptr [rcx + rcx*4 - 0x11] ; call 0x25356
0x00000000001513a4 : mov cl, byte ptr [rcx] ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000000ac194 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000188304 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000105828 : mov cl, byte ptr [rsi] ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000193024 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000d2c9b : mov cl, dl ; and cl, 0xf ; je 0xd2cc7 ; ret
0x000000000012ed6a : mov cs, word ptr [rax - 0x3f] ; clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000000f371a : mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001264cd : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x1264e8 ; ret
0x0000000000126dfd : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x126e18 ; ret
0x00000000000fca10 : mov cs, word ptr [rcx - 0x77] ; std ; add rdx, rsi ; jmp rdx
0x00000000000a467e : mov cs, word ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000188dce : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000ba020 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000094cb1 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008e6d4 : mov dh, 0 ; pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x00000000000910b7 : mov dh, 0 ; ret
0x0000000000044369 : mov dh, 0x11 ; test dl, dl ; jne 0x4434e ; ret
0x00000000000f35dd : mov dh, 0x14 ; adc al, 0xf6 ; ret 0x7580
0x00000000000f42b1 : mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000f3650 : mov dh, 0x14 ; cmp ch, cl ; ret
0x00000000001713b1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018da51 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000afa45 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000000cd806 : mov dh, 0x26 ; adc al, byte ptr [rax] ; syscall
0x000000000006e6c9 : mov dh, 0x30 ; jmp 0x6b196
0x00000000000f55ca : mov dh, 0x40 ; or al, byte ptr [rcx - 0x77] ; retf 0xe8c0
0x00000000000e9d6b : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000129d30 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x000000000003b291 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e9d81 : mov dh, 0x42 ; add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xe901
0x00000000000ed481 : mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ee672 : mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000005e4a2 : mov dh, 0x43 ; add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x000000000003b243 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ee4b8 : mov dh, 0x43 ; add dword ptr [rcx - 0x73], ecx ; push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000000000ed35e : mov dh, 0x43 ; add dword ptr [rcx - 0x7d], eax ; call 0xffffffffc3921b72
0x000000000019c631 : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006978e : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000066f42 : mov dh, 0x45 ; add dword ptr [rax - 0x7d], ecx ; ret 0xbe02
0x0000000000077604 : mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000001955a1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000195591 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000195561 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000195581 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000195571 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000002d357 : mov dh, 0x48 ; dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000162bcf : mov dh, 0x4a ; add al, 0x89 ; retf 0xeac0
0x000000000004c009 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a7196 : mov dh, 0x4d ; add byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000000f6d47 : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000013f8a1 : mov dh, 0x51 ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0xc639
0x000000000013f802 : mov dh, 0x52 ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0x8041
0x000000000013f81a : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000003b261 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000064481 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7401
0x0000000000062489 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf01
0x0000000000084231 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000006469b : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf40
0x00000000000abba3 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc60 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abc2f : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb6a : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc11 : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb4c : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000187276 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ee166 : mov dh, 0x55 ; add bh, byte ptr [rcx] ; retf
0x00000000000eed5c : mov dh, 0x55 ; add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x0000000000057e56 : mov dh, 0x55 ; sbb dword ptr [rax], eax ; syscall
0x00000000001955a5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000195595 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000195565 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000007de5a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000195575 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000faa7a : mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x00000000000fb2ca : mov dh, 0x58 ; cmp dh, dh ; ret
0x0000000000060898 : mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f1f5 : mov dh, 0x58 ; or al, 0xf6 ; ret
0x000000000006b1e6 : mov dh, 0x6b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d800b : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fc976 : mov dh, 0x89 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009f9c6 : mov dh, 0xb1 ; adc al, 0 ; syscall
0x000000000013a76a : mov dh, 0xc ; and al, 0x88 ; or dh, dh ; ret 0xf02
0x00000000000efad9 : mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000043aa0 : mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x000000000002833b : mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x0000000000151067 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015ad90 : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000112e26 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000014d3b5 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1264 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000e809f : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x0000000000065f5c : mov dh, 0xc0 ; neg eax ; pop rbp ; ret
0x0000000000027b1d : mov dh, 0xc0 ; neg eax ; ret
0x000000000014cfde : mov dh, 0xc0 ; pop r12 ; ret
0x000000000014be84 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000009113e : mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000014d34b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000046f40 : mov dh, 0xc0 ; ret
0x00000000000bf2f1 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000142821 : mov dh, 0xc3 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093f54 : mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001974ee : mov dh, 0xc8 ; add rdx, r10 ; jmp rdx
0x00000000000afa6b : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000bedad : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000ad541 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000188314 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000009c5c6 : mov dh, 0xe5 ; adc al, 0 ; syscall
0x0000000000149f67 : mov dh, 0xed ; dec dword ptr [rax - 0x77] ; ret
0x0000000000132f19 : mov dh, 0xf6 ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x000000000015b007 : mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000029ec1 : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f4012 : mov dh, 4 ; adc byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000edef8 : mov dh, 4 ; adc byte ptr [rcx], bh ; retf
0x0000000000188311 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000afa42 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ad544 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000001878c4 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000000fc8c7 : mov dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000001118a9 : mov dl, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000122f88 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000103225 : mov dl, 0x39 ; retf
0x00000000000e7956 : mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000117644 : mov dl, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010095f : mov dl, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000014b69d : mov dl, 0x8b ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000026a92 : mov dl, 0x95 ; sbb al, 0 ; ret
0x00000000000256fa : mov dl, 0xa7 ; sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000011a233 : mov dl, 0xf0 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000126290 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000034a1a : mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x00000000001262b8 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000ed281 : mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fc1b2 : mov dl, byte ptr [rcx - 0x76b70001] ; ret
0x00000000000bad13 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000bad32 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bad73 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000016afb0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bc480 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000bacf0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000be0e0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000007de8b : mov dl, cl ; sbb al, 0 ; add dh, dh ; ret 0xf40
0x000000000004db5a : mov dl, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000983b3 : mov dword ptr [r11 + 0x14], 0 ; ret
0x000000000004adf3 : mov dword ptr [r11], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000139188 : mov dword ptr [r15], 0 ; call 0x115be9
0x0000000000153120 : mov dword ptr [r8 + 0x48], eax ; mov eax, 1 ; ret
0x000000000015317d : mov dword ptr [r8 + 0x54], eax ; mov eax, 1 ; ret
0x000000000015314d : mov dword ptr [r8 + 0x58], eax ; mov eax, 1 ; ret
0x000000000013f821 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000013f8e8 : mov dword ptr [r8], r11d ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000134ae6 : mov dword ptr [r8], r9d ; add rsp, 0x18 ; ret
0x00000000000e29f0 : mov dword ptr [r8], r9d ; add rsp, 8 ; ret
0x00000000000ab6ce : mov dword ptr [r9 + rdi - 4], r10d ; jmp 0xa7912
0x000000000019301a : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000193005 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000e2298 : mov dword ptr [r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x0000000000089ecd : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008a69c : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000098ae7 : mov dword ptr [rax + 0x20], edx ; add rsp, 8 ; ret
0x000000000008fe50 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000089471 : mov dword ptr [rax + 0x28], edx ; mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x0000000000089ed1 : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000089f0f : mov dword ptr [rax + 0x40], edx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008afcd : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000153121 : mov dword ptr [rax + 0x48], eax ; mov eax, 1 ; ret
0x000000000015317e : mov dword ptr [rax + 0x54], eax ; mov eax, 1 ; ret
0x000000000015314e : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x00000000000abc4c : mov dword ptr [rax + 4], edx ; ret
0x0000000000095905 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000f27e3 : mov dword ptr [rax + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015b021 : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000cd5e2 : mov dword ptr [rax], 0x14c0000 ; ret 0x2de9
0x00000000000e60e8 : mov dword ptr [rax], 0x16 ; jmp 0xe60ba
0x000000000011c9e8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000d3348 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000016416c : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000044608 : mov dword ptr [rax], 0x2a ; mov rax, r11 ; ret
0x0000000000085904 : mov dword ptr [rax], 0x89480000 ; ret
0x000000000009b26b : mov dword ptr [rax], 0xc ; mov rax, r8 ; ret
0x000000000011c9a1 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x00000000000a1b0c : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000011758c : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x0000000000120218 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000d21c3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000110ca5 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000169892 : mov dword ptr [rax], ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000006ec93 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f8e9 : mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000134ae7 : mov dword ptr [rax], ecx ; add rsp, 0x18 ; ret
0x00000000000e29f1 : mov dword ptr [rax], ecx ; add rsp, 8 ; ret
0x00000000000885fe : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000abc20 : mov dword ptr [rax], ecx ; ret
0x0000000000119f75 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000101d6f : mov dword ptr [rax], edi ; mov rax, r8 ; ret
0x000000000009d280 : mov dword ptr [rax], edi ; ret
0x00000000001221c7 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013f5fd : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000004af9d : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000013f822 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000036d48 : mov dword ptr [rax], edx ; ret
0x000000000008af98 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000abc01 : mov dword ptr [rax], esi ; ret
0x00000000000f5310 : mov dword ptr [rbp + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5248 : mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f530f : mov dword ptr [rbp + 0x30], r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007357a : mov dword ptr [rbp - 0x4d0], edx ; jmp 0x6f7de
0x0000000000079baf : mov dword ptr [rbp - 0x500], esi ; jmp rax
0x0000000000119773 : mov dword ptr [rbp - 0x50], eax ; mov rdx, rax ; jmp 0x1197ae
0x000000000007a68c : mov dword ptr [rbp - 0x538], edx ; call 0x76908
0x0000000000076703 : mov dword ptr [rbp - 0x598], eax ; jmp 0x72919
0x000000000006e19f : mov dword ptr [rbp - 0x5a0], ecx ; jmp 0x6aca8
0x000000000012f460 : mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm2 ; call rcx
0x000000000012f608 : mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm3 ; call r9
0x00000000001246f0 : mov dword ptr [rbp - 0x830], eax ; mov eax, r14d ; syscall
0x00000000000f88f9 : mov dword ptr [rbp - 0x88], eax ; call 0x253a8
0x00000000000f88f8 : mov dword ptr [rbp - 0x88], r8d ; call 0x253a9
0x0000000000077aa2 : mov dword ptr [rbp - 0x948], ebx ; call rax
0x0000000000077aa1 : mov dword ptr [rbp - 0x948], r11d ; call rax
0x000000000012dedb : mov dword ptr [rbp - 0xb8], ebx ; call 0x12a1d8
0x000000000012deda : mov dword ptr [rbp - 0xb8], r11d ; call 0x12a1d9
0x00000000000604d0 : mov dword ptr [rbp - 0xe8], eax ; call rax
0x00000000000a5149 : mov dword ptr [rbp], 0 ; jmp 0xa5125
0x00000000001157ee : mov dword ptr [rbp], 2 ; call 0x111aa9
0x000000000013d5e2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d5e1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033327 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000162e0a : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012abc3 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000983b4 : mov dword ptr [rbx + 0x14], 0 ; ret
0x000000000015ab76 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000162dc2 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012ac13 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014d038 : mov dword ptr [rbx + 0x20], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001026cf : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008fe69 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000843b4 : mov dword ptr [rbx + 0x34], 3 ; jmp 0x84390
0x00000000001209cd : mov dword ptr [rbx + 0x38], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004603f : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000004601c : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000008aebe : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000965d8 : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000092eee : mov dword ptr [rbx + 0x70], 0xffffffff ; pop rbx ; ret
0x0000000000089f6a : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008a56e : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f633 : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f75b : mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000332f7 : mov dword ptr [rbx + 8], eax ; cmp eax, -3 ; je 0x33321 ; pop rbx ; ret
0x000000000012ab73 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011c9d6 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000094fd2 : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000159737 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x15970b
0x00000000001632f5 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a1b65 : mov dword ptr [rbx], eax ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000a02bd : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001564c6 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000011c97c : mov dword ptr [rbx], eax ; pop rbx ; setne al ; movzx eax, al ; ret
0x0000000000115389 : mov dword ptr [rbx], ebp ; mov eax, 0xffffffff ; jmp 0x115365
0x0000000000063fd6 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004adf4 : mov dword ptr [rbx], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a6a1 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000a165c : mov dword ptr [rbx], edi ; call rcx
0x0000000000066abd : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ec91 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a5b7 : mov dword ptr [rbx], edx ; mov rdi, qword ptr [rbp + 8] ; call rax
0x0000000000163fb8 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000a1733 : mov dword ptr [rbx], esi ; call rcx
0x0000000000085cd6 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000989b4 : mov dword ptr [rbx], esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088983 : mov dword ptr [rbx], esp ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000144cdc : mov dword ptr [rbx], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000144cdb : mov dword ptr [rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e5aa : mov dword ptr [rcx + 0x3a8], edi ; mov rsp, rdx ; ret
0x000000000015c1ab : mov dword ptr [rcx + 0x55], 0xe8e98949 ; retf 0xfff8
0x000000000017bc92 : mov dword ptr [rcx + 3], edx ; ret
0x000000000017bc83 : mov dword ptr [rcx + 4], edx ; ret
0x000000000017bcf4 : mov dword ptr [rcx + 5], edx ; ret
0x000000000017bd04 : mov dword ptr [rcx + 6], edx ; ret
0x000000000017bcd3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000017bcc4 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000abb04 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x000000000005892c : mov dword ptr [rcx + rcx*8], eax ; xor eax, eax ; ret
0x00000000000ab6cf : mov dword ptr [rcx + rdi - 4], edx ; jmp 0xa7911
0x000000000009c73e : mov dword ptr [rcx - 0x78], 0x29481004 ; ret 0x3948
0x00000000000abac8 : mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x000000000019301b : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000193006 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000192ff5 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000137ee2 : mov dword ptr [rcx], 0x83480288 ; ret 0xf01
0x00000000000eb0ef : mov dword ptr [rcx], 0xac75c084 ; xor eax, eax ; ret
0x00000000000466fe : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000089137 : mov dword ptr [rcx], eax ; ret
0x000000000008daaa : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000e2299 : mov dword ptr [rcx], ebx ; mov rax, r8 ; pop rbx ; ret
0x000000000013f8ed : mov dword ptr [rcx], ecx ; ret
0x000000000013f8cb : mov dword ptr [rcx], edi ; ret
0x000000000017bc51 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc70 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000017bcb1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017bc90 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017bcd1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017bce1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017bcf1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd01 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd11 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd21 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017bc80 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017bcc1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013f825 : mov dword ptr [rcx], edx ; ret
0x00000000001103a6 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000bb7cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc63d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bb80b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc67b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000bb88d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000bc6fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba15b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bae4e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000ba1dd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000595bf : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000be29d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2db : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be35d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baed0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000ba220 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba240 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba201 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000011038e : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000116f5c : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000bb8f3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000bc763 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000ba223 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000be3c3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000015a75b : mov dword ptr [rdi + 0x18], eax ; mov eax, r8d ; ret
0x0000000000094a37 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009046f : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000bb8d5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000bc745 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000bb913 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000bc783 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000ba205 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000be3a5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3e3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000015a81d : mov dword ptr [rdi + 0x18], edx ; mov eax, r8d ; ret
0x000000000015a6e5 : mov dword ptr [rdi + 0x18], esi ; mov eax, r8d ; ret
0x000000000015a71d : mov dword ptr [rdi + 0x18], esi ; mov rax, r8 ; ret
0x000000000015afed : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000000d433b : mov dword ptr [rdi + 0x20], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015a8ea : mov dword ptr [rdi + 0x28], edx ; movups xmmword ptr [rdi + 0x18], xmm0 ; ret
0x0000000000094a68 : mov dword ptr [rdi + 0x48], eax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013e7ce : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000bb84d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000bc6bd : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000ba17d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000be31d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb7eb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bc65b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bb86d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000bc6dd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000ba13b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000be2bb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be33d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001711f5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171038 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000001712d8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000171185 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170fc8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb6b7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000bc507 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x0000000000171115 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170f58 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba067 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000be167 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000abd24 : mov dword ptr [rdi + 4], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000004b4e9 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; ret
0x00000000000bb699 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000bc4e9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x0000000000170ee8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000abb87 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000be149 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000010f9f4 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000bb74b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bc5ab : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000170e78 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0cb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000be20b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb76b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000bc5cb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000170e08 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0db : mov dword ptr [rdi + 6], edx ; ret
0x00000000000be22b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb709 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bc569 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bb78b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000bc5eb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x0000000000170d98 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0a9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000be1c9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be24b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000005ae46 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000094a3b : mov dword ptr [rdi + 8], eax ; ret
0x0000000000059548 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000bc54b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bb729 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bc589 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bb6eb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000058b58 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000910b3 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000ba09b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000be1ab : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1e9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000001169c6 : mov dword ptr [rdi + 8], esi ; ret
0x000000000018da7d : mov dword ptr [rdi + r8 - 2], edx ; vzeroupper ; ret
0x000000000018da99 : mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000018da7e : mov dword ptr [rdi + rax - 2], edx ; vzeroupper ; ret
0x000000000018da9a : mov dword ptr [rdi + rax - 4], edx ; vzeroupper ; ret
0x000000000018dabc : mov dword ptr [rdi + rax - 8], edx ; vzeroupper ; ret
0x00000000000bf1ff : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000bedd9 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000018c658 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000bf1f7 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000018f119 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000bedc9 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000018c66c : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x00000000000bf1ef : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bedbb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000016ac75 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016acb3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000594af : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000016affc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170848 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b1dc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001707c8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b3cc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170748 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b59d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001706b9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b79d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170629 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b99d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170599 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000bb010 : mov dword ptr [rdi - 1], edx ; ret
0x000000000016b37d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000016b195 : mov dword ptr [rdi - 2], edx ; ret
0x000000000016b379 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000016b759 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ae2f : mov dword ptr [rdi - 4], edx ; ret
0x000000000016b756 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b956 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016bb56 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000005942e : mov dword ptr [rdi - 8], ecx ; ret
0x000000000016acb7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000016ae2c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af28 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae74 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001708c8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139189 : mov dword ptr [rdi], 0 ; call 0x115be8
0x000000000004a766 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000000abb59 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x00000000000abca6 : mov dword ptr [rdi], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000014d86f : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ab8ea : mov dword ptr [rdi], eax ; mov rax, r12 ; pop r12 ; ret
0x00000000000ab88c : mov dword ptr [rdi], eax ; mov rax, r9 ; ret
0x000000000005e5ff : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000059428 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000059542 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000045364 : mov dword ptr [rdi], eax ; subsd xmm0, xmm1 ; ret
0x0000000000116a26 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000bb685 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000bb6d7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000abcf0 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018c634 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000bb664 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000ba024 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc4a7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000bad17 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000bc4d5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000bad35 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bc527 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000bad77 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb6b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000bc505 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000ba065 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000bb707 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bc567 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000ba0a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb727 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bc587 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000ba0b7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000001936db : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000ba0c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000ba0d8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000ba0e8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000ba056 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ba098 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001936e7 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000004552e : mov dword ptr [rdi], ecx ; ret
0x000000000018f113 : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000abb16 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000008dce3 : mov dword ptr [rdi], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb654 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000018e0b4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bc494 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x000000000018e794 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb672 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018e0e2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bc4c2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000bb6c4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000bc514 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x000000000018ceb4 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000bb030 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb071 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb091 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb0a1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb0b1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb0c1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb040 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000bb081 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000045879 : mov dword ptr [rdi], edx ; movd xmm0, eax ; ret
0x000000000004537e : mov dword ptr [rdi], edx ; ret
0x00000000000456cc : mov dword ptr [rdi], edx ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000018c624 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000be0f4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be122 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be174 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000abcc1 : mov dword ptr [rdi], esi ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000193003 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005ac56 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000192ff2 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000193017 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000456e6 : mov dword ptr [rdi], esi ; ret
0x000000000010f9d1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000000abb58 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x0000000000153a7c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000089134 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000014c518 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000014c4f2 : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c4f6 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000150326 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000153984 : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000009171d : mov dword ptr [rdx + 0xf0], ecx ; pop rbx ; ret
0x00000000000858cb : mov dword ptr [rdx + 0xf0], ecx ; ret
0x000000000017e017 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b6c0c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000006610d : mov dword ptr [rdx + 4], 1 ; ret
0x000000000017dff9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000ce356 : mov dword ptr [rdx + 4], eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000b6bee : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000ce355 : mov dword ptr [rdx + 4], r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000017e0ab : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000017e029 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000179cd9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000017e0cb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000017e049 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000179ce9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000017e069 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000017e0eb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000b6c90 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000017e089 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000017df7b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000b6c72 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000003330f : mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000001602ca : mov dword ptr [rdx], 0 ; ret
0x000000000005b581 : mov dword ptr [rdx], 0x22 ; call 0x198008
0x000000000005ad12 : mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000011756b : mov dword ptr [rdx], eax ; cmp rdi, rax ; ja 0x1175a1 ; xor eax, eax ; ret
0x0000000000116d80 : mov dword ptr [rdx], eax ; jmp 0x116d52
0x000000000017dfa4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000017dfd2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000017df24 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000001164ec : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x1164c0
0x0000000000123d8c : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x123d60
0x0000000000123e44 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x123e18
0x000000000012408c : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x124060
0x00000000000466ca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000005ac58 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005ae87 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000105b40 : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x0000000000105ae0 : mov dword ptr [rdx], eax ; mov eax, r9d ; ret
0x000000000004b58a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000d7bfa : mov dword ptr [rdx], eax ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000b6b89 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000037581 : mov dword ptr [rdx], eax ; ret
0x00000000000ce359 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000008a21c : mov dword ptr [rdx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010582b : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000ab7c2 : mov dword ptr [rdx], ecx ; ret
0x00000000001300c0 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x0000000000088487 : mov dword ptr [rdx], esp ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000a3d2d : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2a16 : mov dword ptr [rip + 0x14b1ec], eax ; ret
0x000000000009a301 : mov dword ptr [rip + 0x14ff59], ecx ; call 0x1165b8
0x0000000000098442 : mov dword ptr [rip + 0x151e64], eax ; ret
0x000000000009841c : mov dword ptr [rip + 0x151e6e], eax ; ret
0x00000000000983f3 : mov dword ptr [rip + 0x151e8f], eax ; ret
0x00000000000983d3 : mov dword ptr [rip + 0x151ea7], eax ; ret
0x00000000000980b9 : mov dword ptr [rip + 0x152229], eax ; ret
0x00000000000980a1 : mov dword ptr [rip + 0x152239], eax ; ret
0x0000000000098087 : mov dword ptr [rip + 0x152243], edx ; ret
0x0000000000098049 : mov dword ptr [rip + 0x152249], eax ; ret
0x0000000000098039 : mov dword ptr [rip + 0x152261], eax ; ret
0x0000000000098458 : mov dword ptr [rip + 0x155706], eax ; ret
0x0000000000047403 : mov dword ptr [rip + 0x1a2d9f], eax ; mov eax, edx ; ret
0x00000000000473e0 : mov dword ptr [rip + 0x1a2dc6], edx ; ret
0x0000000000026a90 : mov dword ptr [rip + 0x1c95b2], eax ; ret
0x00000000000256f8 : mov dword ptr [rip + 0x1ca7b2], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000164250 : mov dword ptr [rip + 0x89912], esi ; ret
0x000000000013037c : mov dword ptr [rip + 0xbe7f6], eax ; pop rbp ; ret
0x0000000000124c69 : mov dword ptr [rip + 0xc56f1], ebx ; pop rbx ; ret
0x0000000000124c4f : mov dword ptr [rip + 0xc570b], ebx ; pop rbx ; ret
0x000000000011b91e : mov dword ptr [rip + 0xcea24], edi ; ret
0x000000000011a86d : mov dword ptr [rip + 0xd3c1d], eax ; mov rax, r8 ; ret
0x000000000014b57b : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000004b459 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000004af30 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000004af34 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x000000000009108c : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x000000000011643f : mov dword ptr [rsi + 0x48], eax ; ret
0x0000000000115a7a : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x000000000004b40f : mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x000000000004b49b : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000014b517 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000586e4 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; ret
0x00000000001936ea : mov dword ptr [rsi - 2], ecx ; ret
0x00000000001936dd : mov dword ptr [rsi - 4], ecx ; ret
0x000000000014b529 : mov dword ptr [rsi], 0 ; ret
0x000000000014b5c4 : mov dword ptr [rsi], 0xa ; ret
0x000000000014b5cb : mov dword ptr [rsi], 0xb ; ret
0x000000000014b5a0 : mov dword ptr [rsi], 0xc ; ret
0x000000000014b583 : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x000000000014b5bd : mov dword ptr [rsi], 8 ; ret
0x000000000015a81a : mov dword ptr [rsi], eax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x0000000000090473 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000013e7d2 : mov dword ptr [rsi], edi ; ret
0x000000000013ed0f : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000004af9f : mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000015a797 : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000103704 : mov dword ptr [rsi], edx ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000016a1c2 : mov dword ptr [rsi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000132aea : mov dword ptr [rsp + 0x10], eax ; call 0x8ed46
0x0000000000044f59 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000014c2cb : mov dword ptr [rsp + 0x10], eax ; mov rdx, rax ; jmp 0x14c268
0x000000000009a73f : mov dword ptr [rsp + 0x10], edx ; call qword ptr [rax]
0x000000000009aab6 : mov dword ptr [rsp + 0x18], eax ; call rax
0x0000000000158a3e : mov dword ptr [rsp + 0x18], eax ; xor eax, eax ; call 0x25498
0x000000000014ab95 : mov dword ptr [rsp + 0x18], edi ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000118be8 : mov dword ptr [rsp + 0x20], eax ; mov eax, 0x65 ; syscall
0x000000000009aab1 : mov dword ptr [rsp + 0x20], ebx ; mov qword ptr [rsp + 0x18], r8 ; call rax
0x0000000000122298 : mov dword ptr [rsp + 0x28], ecx ; movaps xmmword ptr [rsp + 0x10], xmm0 ; syscall
0x00000000000d89cf : mov dword ptr [rsp + 0x30], edi ; call 0x25496
0x00000000000d353b : mov dword ptr [rsp + 0x50], esp ; call rbx
0x000000000009aad1 : mov dword ptr [rsp + 8], eax ; call rdx
0x000000000011dfde : mov dword ptr [rsp + 8], eax ; mov rdi, qword ptr [r8] ; call rbx
0x000000000009aba5 : mov dword ptr [rsp + 8], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000008c2ff : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x00000000000f482c : mov dword ptr [rsp + 8], ecx ; mov rsi, r8 ; call 0xf0ab9
0x0000000000045149 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005adac : mov dword ptr [rsp - 0x10], esi ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000140056 : mov dword ptr [rsp], 0 ; call rax
0x0000000000158e7e : mov dword ptr [rsp], 2 ; call r8
0x000000000003f61e : mov dword ptr [rsp], ecx ; call 0x3c125
0x0000000000091c20 : mov dword ptr [rsp], ecx ; mov rdi, rbp ; call rax
0x00000000000a5122 : mov dword ptr [rsp], esi ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000134ae5 : mov dword ptr fs:[r8], r9d ; add rsp, 0x18 ; ret
0x00000000000e29ef : mov dword ptr fs:[r8], r9d ; add rsp, 8 ; ret
0x00000000000e2297 : mov dword ptr fs:[r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x00000000000e60e7 : mov dword ptr fs:[rax], 0x16 ; jmp 0xe60bb
0x000000000011c9e7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000d3347 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000016416b : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x00000000000a1b0b : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000120217 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000119f74 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x000000000013d5e0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115388 : mov dword ptr fs:[rbx], ebp ; mov eax, 0xffffffff ; jmp 0x115366
0x0000000000144cda : mov dword ptr fs:[rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000466fd : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000005b580 : mov dword ptr fs:[rdx], 0x22 ; call 0x198009
0x0000000000116d7f : mov dword ptr fs:[rdx], eax ; jmp 0x116d53
0x00000000001164eb : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x1164c1
0x0000000000123d8b : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x123d61
0x0000000000123e43 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x123e19
0x000000000012408b : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x124061
0x00000000000466c9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000105b3f : mov dword ptr fs:[rdx], eax ; mov eax, r8d ; ret
0x0000000000105adf : mov dword ptr fs:[rdx], eax ; mov eax, r9d ; ret
0x00000000000bedc8 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000016b190 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000ba010 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000115d87 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000058119 : mov eax, 0 ; jne 0x5812c ; push r10 ; ret
0x0000000000058622 : mov eax, 0 ; jne 0x58635 ; push r10 ; ret
0x0000000000149c04 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000bf381 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000066118 : mov eax, 0x10 ; ret
0x0000000000116b09 : mov eax, 0x10 ; syscall
0x000000000014c185 : mov eax, 0x100 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000116f56 : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013f0c9 : mov eax, 0x100 ; ret
0x000000000013f0c0 : mov eax, 0x101 ; ret
0x0000000000110fd4 : mov eax, 0x101 ; syscall
0x000000000013f0b7 : mov eax, 0x102 ; cmovne eax, edx ; ret
0x0000000000110f24 : mov eax, 0x102 ; syscall
0x0000000000110bfe : mov eax, 0x103 ; syscall
0x0000000000112687 : mov eax, 0x104 ; syscall
0x0000000000119ea9 : mov eax, 0x105 ; syscall
0x0000000000110c58 : mov eax, 0x106 ; syscall
0x0000000000112f94 : mov eax, 0x107 ; syscall
0x0000000000065fa7 : mov eax, 0x108 ; syscall
0x0000000000112e77 : mov eax, 0x109 ; syscall
0x0000000000112ed4 : mov eax, 0x10a ; syscall
0x0000000000112f37 : mov eax, 0x10b ; syscall
0x0000000000110e91 : mov eax, 0x10c ; syscall
0x0000000000111653 : mov eax, 0x10d ; syscall
0x0000000000118344 : mov eax, 0x10e ; syscall
0x0000000000115cc8 : mov eax, 0x10f ; syscall
0x000000000010f3c3 : mov eax, 0x11 ; syscall
0x0000000000123014 : mov eax, 0x110 ; syscall
0x0000000000122823 : mov eax, 0x113 ; syscall
0x00000000001226c3 : mov eax, 0x114 ; syscall
0x0000000000116463 : mov eax, 0x115 ; syscall
0x0000000000122773 : mov eax, 0x116 ; syscall
0x000000000011633c : mov eax, 0x118 ; syscall
0x000000000012247b : mov eax, 0x119 ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000122429 : mov eax, 0x119 ; syscall
0x0000000000123074 : mov eax, 0x11b ; syscall
0x0000000000116513 : mov eax, 0x11d ; syscall
0x00000000001230a7 : mov eax, 0x11e ; syscall
0x00000000001230d4 : mov eax, 0x11f ; syscall
0x000000000010f473 : mov eax, 0x12 ; syscall
0x0000000000123d03 : mov eax, 0x120 ; syscall
0x0000000000122514 : mov eax, 0x122 ; syscall
0x0000000000122ce4 : mov eax, 0x123 ; syscall
0x0000000000111b94 : mov eax, 0x124 ; syscall
0x0000000000111bf4 : mov eax, 0x125 ; syscall
0x0000000000122e04 : mov eax, 0x126 ; syscall
0x00000000001177f6 : mov eax, 0x127 ; syscall
0x00000000001178b6 : mov eax, 0x128 ; syscall
0x0000000000123dfd : mov eax, 0x12b ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000123db3 : mov eax, 0x12b ; syscall
0x0000000000123104 : mov eax, 0x12c ; syscall
0x0000000000122b67 : mov eax, 0x12d ; syscall
0x00000000001225a7 : mov eax, 0x12e ; syscall
0x000000000011703b : mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000123137 : mov eax, 0x12f ; syscall
0x00000000001176b0 : mov eax, 0x13 ; syscall
0x00000000001228f0 : mov eax, 0x130 ; syscall
0x0000000000122c24 : mov eax, 0x131 ; syscall
0x00000000001185b4 : mov eax, 0x132 ; syscall
0x0000000000123e63 : mov eax, 0x133 ; syscall
0x0000000000123164 : mov eax, 0x134 ; syscall
0x000000000011059f : mov eax, 0x135 ; syscall
0x0000000000123197 : mov eax, 0x136 ; syscall
0x00000000001231c7 : mov eax, 0x137 ; syscall
0x0000000000065fec : mov eax, 0x13c ; syscall
0x000000000004b520 : mov eax, 0x13e ; syscall
0x00000000001231f4 : mov eax, 0x13f ; syscall
0x0000000000141217 : mov eax, 0x14 ; add edx, 1 ; syscall
0x0000000000117750 : mov eax, 0x14 ; syscall
0x00000000000e6093 : mov eax, 0x142 ; syscall
0x0000000000122988 : mov eax, 0x145 ; syscall
0x0000000000116273 : mov eax, 0x146 ; syscall
0x0000000000117996 : mov eax, 0x147 ; syscall
0x0000000000117af6 : mov eax, 0x148 ; syscall
0x00000000000d301e : mov eax, 0x148051e ; ret 0xb848
0x0000000000122a1c : mov eax, 0x149 ; syscall
0x0000000000123224 : mov eax, 0x14a ; syscall
0x0000000000123254 : mov eax, 0x14b ; syscall
0x0000000000110b27 : mov eax, 0x14c ; syscall
0x00000000001113d4 : mov eax, 0x15 ; syscall
0x000000000009fd10 : mov eax, 0x16 ; ret
0x0000000000111bc4 : mov eax, 0x16 ; syscall
0x0000000000118290 : mov eax, 0x17 ; mov edi, dword ptr [rsp + 0xc] ; syscall
0x0000000000118243 : mov eax, 0x17 ; syscall
0x0000000000098024 : mov eax, 0x18 ; syscall
0x0000000000122ec7 : mov eax, 0x19 ; syscall
0x000000000011bbf0 : mov eax, 0x1a ; syscall
0x000000000011bcb4 : mov eax, 0x1b ; syscall
0x00000000001103bb : mov eax, 0x1c ; syscall
0x0000000000124367 : mov eax, 0x1d ; syscall
0x0000000000124304 : mov eax, 0x1e ; syscall
0x00000000001243a4 : mov eax, 0x1f ; syscall
0x00000000000e7f0c : mov eax, 0x20 ; cmove rax, rdx ; ret
0x00000000000e7fda : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000bf37a : mov eax, 0x20 ; pop rbx ; ret
0x0000000000111b34 : mov eax, 0x20 ; syscall
0x000000000003729b : mov eax, 0x200 ; ret
0x0000000000111b64 : mov eax, 0x21 ; syscall
0x00000000000e5c90 : mov eax, 0x22 ; syscall
0x0000000000097fa0 : mov eax, 0x23 ; syscall
0x00000000000d7264 : mov eax, 0x24 ; syscall
0x00000000000e5be4 : mov eax, 0x25 ; syscall
0x00000000000d7294 : mov eax, 0x26 ; syscall
0x00000000000e6f64 : mov eax, 0x27 ; syscall
0x0000000000116237 : mov eax, 0x28 ; syscall
0x00000000001239c4 : mov eax, 0x29 ; syscall
0x00000000001233c0 : mov eax, 0x2a ; syscall
0x00000000001232f0 : mov eax, 0x2b ; syscall
0x0000000000123749 : mov eax, 0x2c ; syscall
0x0000000000123529 : mov eax, 0x2d ; syscall
0x0000000000123800 : mov eax, 0x2e ; syscall
0x00000000001236a0 : mov eax, 0x2f ; syscall
0x00000000000bf373 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000123994 : mov eax, 0x30 ; syscall
0x0000000000123384 : mov eax, 0x31 ; syscall
0x00000000001234e4 : mov eax, 0x32 ; syscall
0x0000000000123484 : mov eax, 0x33 ; syscall
0x0000000000123454 : mov eax, 0x34 ; syscall
0x00000000001239f7 : mov eax, 0x35 ; syscall
0x0000000000123967 : mov eax, 0x36 ; syscall
0x00000000001234b7 : mov eax, 0x37 ; syscall
0x00000000000e5dd8 : mov eax, 0x38 ; syscall
0x00000000000e5f75 : mov eax, 0x3a ; syscall
0x00000000000e6014 : mov eax, 0x3b ; syscall
0x0000000000122326 : mov eax, 0x3c ; syscall
0x00000000000e59ad : mov eax, 0x3d ; syscall
0x00000000000553fd : mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x00000000000466e4 : mov eax, 0x3e ; syscall
0x00000000000e5904 : mov eax, 0x3f ; syscall
0x00000000000bf36c : mov eax, 0x40 ; pop rbx ; ret
0x00000000000e7f88 : mov eax, 0x40 ; ret
0x00000000001241f4 : mov eax, 0x40 ; syscall
0x00000000001241c4 : mov eax, 0x41 ; syscall
0x0000000000124256 : mov eax, 0x42 ; syscall
0x0000000000124334 : mov eax, 0x43 ; syscall
0x0000000000124164 : mov eax, 0x44 ; syscall
0x0000000000124003 : mov eax, 0x45 ; syscall
0x0000000000124100 : mov eax, 0x46 ; mov edi, dword ptr [rsp + 8] ; syscall
0x00000000001240b3 : mov eax, 0x46 ; syscall
0x0000000000124194 : mov eax, 0x47 ; syscall
0x0000000000111784 : mov eax, 0x48 ; syscall
0x0000000000111814 : mov eax, 0x49 ; syscall
0x00000000000313f9 : mov eax, 0x49000000 ; mov ecx, esi ; mov r10, rcx ; jmp 0x313ba
0x0000000000118470 : mov eax, 0x4a ; syscall
0x0000000000118530 : mov eax, 0x4b ; syscall
0x0000000000119ee4 : mov eax, 0x4c ; syscall
0x0000000000119f14 : mov eax, 0x4d ; syscall
0x0000000000111d8b : mov eax, 0x4f ; syscall
0x0000000000111cb4 : mov eax, 0x50 ; syscall
0x0000000000111ce4 : mov eax, 0x51 ; syscall
0x0000000000065f74 : mov eax, 0x52 ; syscall
0x0000000000110ef4 : mov eax, 0x53 ; syscall
0x0000000000112fc4 : mov eax, 0x54 ; syscall
0x0000000000111c30 : mov eax, 0x55 ; syscall
0x0000000000112e44 : mov eax, 0x56 ; syscall
0x0000000000112f64 : mov eax, 0x57 ; syscall
0x0000000000112ea4 : mov eax, 0x58 ; syscall
0x0000000000112f04 : mov eax, 0x59 ; syscall
0x0000000000110e04 : mov eax, 0x5a ; syscall
0x0000000000110e34 : mov eax, 0x5b ; syscall
0x00000000000e785d : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000001125f4 : mov eax, 0x5c ; syscall
0x0000000000112624 : mov eax, 0x5d ; syscall
0x0000000000112654 : mov eax, 0x5e ; syscall
0x0000000000110df4 : mov eax, 0x5f ; syscall
0x00000000000bf365 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000d4054 : mov eax, 0x60 ; syscall
0x00000000001170b4 : mov eax, 0x62 ; syscall
0x0000000000122fe4 : mov eax, 0x63 ; syscall
0x00000000000e5934 : mov eax, 0x64 ; syscall
0x0000000000118bec : mov eax, 0x65 ; syscall
0x00000000000e6f84 : mov eax, 0x66 ; syscall
0x0000000000122e64 : mov eax, 0x67 ; syscall
0x00000000000e6fa4 : mov eax, 0x68 ; syscall
0x00000000000e7012 : mov eax, 0x69 ; syscall
0x00000000000e70b2 : mov eax, 0x6a ; syscall
0x00000000000e6f94 : mov eax, 0x6b ; syscall
0x00000000000e6fb4 : mov eax, 0x6c ; syscall
0x00000000000e7244 : mov eax, 0x6d ; syscall
0x00000000000e6f74 : mov eax, 0x6e ; syscall
0x00000000000e7274 : mov eax, 0x6f ; syscall
0x00000000000e72d4 : mov eax, 0x70 ; syscall
0x0000000000117c42 : mov eax, 0x71 ; syscall
0x0000000000117ce2 : mov eax, 0x72 ; syscall
0x00000000000e6fc4 : mov eax, 0x73 ; syscall
0x00000000000e21b2 : mov eax, 0x74 ; syscall
0x00000000000e7382 : mov eax, 0x75 ; syscall
0x00000000000e7304 : mov eax, 0x76 ; syscall
0x00000000000e7432 : mov eax, 0x77 ; syscall
0x00000000000e7334 : mov eax, 0x78 ; syscall
0x00000000000e7214 : mov eax, 0x79 ; syscall
0x00000000001223b4 : mov eax, 0x7a ; syscall
0x00000000001223e4 : mov eax, 0x7b ; syscall
0x00000000000e72a4 : mov eax, 0x7c ; syscall
0x0000000000122bc4 : mov eax, 0x7d ; syscall
0x00000000000e7dfb : mov eax, 0x7d00 ; ret
0x00000000000e7ec0 : mov eax, 0x7e ; ret
0x0000000000122bf4 : mov eax, 0x7e ; syscall
0x00000000000e7e22 : mov eax, 0x7f ; cmove rax, rdx ; ret
0x00000000000e7eaa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x0000000000046719 : mov eax, 0x7f ; syscall
0x000000000013fda0 : mov eax, 0x7fffffff ; ret
0x00000000000bf38f : mov eax, 0x80 ; pop rbx ; ret
0x0000000000047438 : mov eax, 0x80 ; syscall
0x00000000000bf277 : mov eax, 0x80000006 ; cpuid ; jmp 0xbf24b
0x0000000000047584 : mov eax, 0x81 ; syscall
0x0000000000046765 : mov eax, 0x82 ; syscall
0x0000000000046cd4 : mov eax, 0x83 ; syscall
0x0000000000110674 : mov eax, 0x84 ; syscall
0x0000000000110b9b : mov eax, 0x85 ; syscall
0x0000000000123044 : mov eax, 0x86 ; syscall
0x00000000001225d4 : mov eax, 0x87 ; syscall
0x000000000011f6cb : mov eax, 0x88 ; syscall
0x0000000000110ca4 : mov eax, 0x89 ; syscall
0x00000000000fc09b : mov eax, 0x89000000 ; ret
0x00000000000d5652 : mov eax, 0x8945051e ; retf 0xc141
0x0000000000130772 : mov eax, 0x89483e74 ; ret
0x0000000000110cd4 : mov eax, 0x8a ; syscall
0x0000000000155b9e : mov eax, 0x8bda8948 ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000117474 : mov eax, 0x8c ; syscall
0x00000000001174b4 : mov eax, 0x8d ; syscall
0x0000000000105904 : mov eax, 0x8e ; syscall
0x0000000000105934 : mov eax, 0x8f ; syscall
0x0000000000105964 : mov eax, 0x90 ; syscall
0x0000000000105994 : mov eax, 0x91 ; syscall
0x00000000001059f4 : mov eax, 0x92 ; syscall
0x0000000000105a24 : mov eax, 0x93 ; syscall
0x0000000000105a54 : mov eax, 0x94 ; syscall
0x000000000011bd14 : mov eax, 0x95 ; syscall
0x000000000011bd44 : mov eax, 0x96 ; syscall
0x000000000011bd74 : mov eax, 0x97 ; syscall
0x000000000011bda4 : mov eax, 0x98 ; syscall
0x00000000001188f4 : mov eax, 0x99 ; syscall
0x0000000000122b24 : mov eax, 0x9a ; syscall
0x0000000000122f24 : mov eax, 0x9b ; syscall
0x0000000000122f57 : mov eax, 0x9d ; syscall
0x0000000000057f6e : mov eax, 0x9e ; syscall
0x0000000000122b94 : mov eax, 0x9f ; syscall
0x000000000013a22a : mov eax, 0xa ; pop rbx ; pop rbp ; ret
0x000000000011bbb4 : mov eax, 0xa ; syscall
0x0000000000118434 : mov eax, 0xa1 ; syscall
0x00000000001184f4 : mov eax, 0xa2 ; syscall
0x0000000000118404 : mov eax, 0xa3 ; syscall
0x00000000000d4134 : mov eax, 0xa4 ; syscall
0x0000000000122e97 : mov eax, 0xa5 ; syscall
0x0000000000122354 : mov eax, 0xa6 ; syscall
0x0000000000118924 : mov eax, 0xa7 ; syscall
0x0000000000118954 : mov eax, 0xa8 ; syscall
0x00000000001185f0 : mov eax, 0xa9 ; syscall
0x00000000001180b4 : mov eax, 0xaa ; syscall
0x0000000000118204 : mov eax, 0xab ; syscall
0x0000000000122214 : mov eax, 0xac ; syscall
0x00000000001221e4 : mov eax, 0xad ; syscall
0x0000000000122c54 : mov eax, 0xae ; syscall
0x0000000000122d77 : mov eax, 0xaf ; syscall
0x000000000011bb84 : mov eax, 0xb ; syscall
0x0000000000122c84 : mov eax, 0xb0 ; syscall
0x0000000000122d44 : mov eax, 0xb1 ; syscall
0x0000000000122f87 : mov eax, 0xb2 ; syscall
0x0000000000122fb7 : mov eax, 0xb3 ; syscall
0x0000000000122ef4 : mov eax, 0xb4 ; syscall
0x00000000001503b0 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000463b6 : mov eax, 0xba ; syscall
0x0000000000122384 : mov eax, 0xbb ; syscall
0x00000000001201a7 : mov eax, 0xbc ; syscall
0x0000000000120147 : mov eax, 0xbd ; syscall
0x0000000000120027 : mov eax, 0xbe ; syscall
0x0000000000120057 : mov eax, 0xbf ; syscall
0x000000000010f857 : mov eax, 0xc ; jmp 0x10f827
0x00000000000f5251 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000f5320 : mov eax, 0xc ; ret
0x0000000000117554 : mov eax, 0xc ; syscall
0x00000000001200b7 : mov eax, 0xc0 ; syscall
0x000000000011ff97 : mov eax, 0xc1 ; syscall
0x0000000000120084 : mov eax, 0xc2 ; syscall
0x00000000001200e4 : mov eax, 0xc3 ; syscall
0x000000000011ffc4 : mov eax, 0xc4 ; syscall
0x0000000000120174 : mov eax, 0xc5 ; syscall
0x0000000000120114 : mov eax, 0xc6 ; syscall
0x000000000011fff4 : mov eax, 0xc7 ; syscall
0x00000000000d3f94 : mov eax, 0xc9 ; syscall
0x0000000000025a36 : mov eax, 0xca ; syscall
0x0000000000105af4 : mov eax, 0xcb ; syscall
0x0000000000105a93 : mov eax, 0xcc ; cmovbe rsi, r8 ; syscall
0x000000000004653f : mov eax, 0xd ; syscall
0x0000000000122cb4 : mov eax, 0xd5 ; syscall
0x000000000011bce7 : mov eax, 0xd8 ; syscall
0x00000000000e1074 : mov eax, 0xd9 ; syscall
0x00000000001242c7 : mov eax, 0xdc ; syscall
0x0000000000115d77 : mov eax, 0xdd ; syscall
0x00000000000463e4 : mov eax, 0xe ; syscall
0x000000000015681a : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013018e : mov eax, 0xe3 ; syscall
0x00000000000e0137 : mov eax, 0xe4 ; syscall
0x00000000001300d4 : mov eax, 0xe5 ; syscall
0x00000000001301f7 : mov eax, 0xe6 ; syscall
0x0000000000122613 : mov eax, 0xe8 ; syscall
0x0000000000122d17 : mov eax, 0xe9 ; syscall
0x00000000000463c2 : mov eax, 0xea ; syscall
0x0000000000119cc4 : mov eax, 0xeb ; syscall
0x0000000000046471 : mov eax, 0xf ; syscall
0x00000000000a3742 : mov eax, 0xf48000e ; ret 0x66c3
0x00000000000e5b36 : mov eax, 0xf7 ; syscall
0x00000000000e7eb8 : mov eax, 0xfc17 ; ret
0x0000000000122dd4 : mov eax, 0xfd ; syscall
0x00000000000cb737 : mov eax, 0xfd83949 ; xchg eax, ebx ; ret
0x0000000000122da4 : mov eax, 0xfe ; syscall
0x00000000000e7fe8 : mov eax, 0xff ; ret
0x0000000000122e34 : mov eax, 0xff ; syscall
0x00000000000e7e67 : mov eax, 0xfffa ; ret
0x0000000000164269 : mov eax, 0xfffffffe ; ret
0x000000000013f076 : mov eax, 0xffffffff ; cmove eax, edx ; ret
0x000000000011538b : mov eax, 0xffffffff ; jmp 0x115363
0x00000000001164ee : mov eax, 0xffffffff ; jmp 0x1164be
0x0000000000123d8e : mov eax, 0xffffffff ; jmp 0x123d5e
0x0000000000123e46 : mov eax, 0xffffffff ; jmp 0x123e16
0x000000000012408e : mov eax, 0xffffffff ; jmp 0x12405e
0x0000000000046dbf : mov eax, 0xffffffff ; jmp 0x46d8f
0x00000000000826f5 : mov eax, 0xffffffff ; jmp 0x826c5
0x0000000000057e91 : mov eax, 0xffffffff ; mov eax, r8d ; ret
0x000000000015fd55 : mov eax, 0xffffffff ; pop r12 ; pop r13 ; ret
0x000000000008a629 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000004466e : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000863bc : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000917c3 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000027b36 : mov eax, 0xffffffff ; ret
0x000000000009044e : mov eax, 0xffffffff ; test edx, edx ; je 0x90469 ; ret
0x00000000000908ae : mov eax, 0xffffffff ; test edx, edx ; je 0x908c9 ; ret
0x0000000000118d63 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001960a0 : mov eax, 1 ; jg 0x1960b9 ; neg eax ; ret
0x00000000000d2250 : mov eax, 1 ; jg 0xd2262 ; neg eax ; ret
0x0000000000192e66 : mov eax, 1 ; jl 0x192e79 ; neg eax ; ret
0x0000000000159739 : mov eax, 1 ; jmp 0x159709
0x00000000000ef350 : mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x000000000008fdd1 : mov eax, 1 ; mov eax, r8d ; ret
0x000000000005ac35 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000001502be : mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530c6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539d6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539b6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm4 ; ret
0x000000000008a604 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000a1cc3 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008639a : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010f7d0 : mov eax, 1 ; pop rbx ; ret
0x000000000005870e : mov eax, 1 ; ret
0x0000000000111310 : mov eax, 1 ; syscall
0x00000000000e80b4 : mov eax, 1 ; test edi, edi ; js 0xe80c9 ; ret
0x000000000005ae34 : mov eax, 2 ; ret
0x00000000001300b7 : mov eax, 3 ; cmovne eax, edx ; ret
0x000000000013dc04 : mov eax, 3 ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000d2d11 : mov eax, 3 ; ret
0x0000000000111ab0 : mov eax, 3 ; syscall
0x00000000000d2d21 : mov eax, 4 ; ret
0x0000000000110753 : mov eax, 4 ; syscall
0x00000000001302ef : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x000000000010a277 : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000d2d31 : mov eax, 5 ; ret
0x00000000001107b2 : mov eax, 5 ; syscall
0x00000000000d2d41 : mov eax, 6 ; ret
0x0000000000110813 : mov eax, 6 ; syscall
0x00000000000d2d51 : mov eax, 7 ; ret
0x0000000000115bf0 : mov eax, 7 ; syscall
0x00000000000bf388 : mov eax, 8 ; pop rbx ; ret
0x00000000001113a4 : mov eax, 8 ; syscall
0x000000000010f769 : mov eax, 9 ; pop rbp ; pop r12 ; ret
0x000000000011baef : mov eax, 9 ; syscall
0x0000000000097f66 : mov eax, dword ptr [0x10] ; ret
0x0000000000128489 : mov eax, dword ptr [r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097e6f : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x97e81 ; call rax
0x0000000000125158 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000125148 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000014949b : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000014438b : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x14439f ; ret
0x0000000000117f0c : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x117f1d ; ret
0x0000000000120231 : mov eax, dword ptr [rax + 0x1a0] ; ret
0x0000000000162d33 : mov eax, dword ptr [rax + 0x1b0] ; jmp rax
0x000000000008c9d5 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000012ffe0 : mov eax, dword ptr [rax + 0x30] ; ret
0x0000000000125a3b : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011ff80 : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000152fd1 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000153911 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004a6ce : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000095890 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x95890 ; ret
0x0000000000035952 : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000fcc60 : mov eax, dword ptr [rax + 0xf000000] ; xchg eax, esp ; ret 0xc283
0x000000000012020b : mov eax, dword ptr [rax + 8] ; ret
0x0000000000097edf : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x97ef1 ; call rax
0x00000000000bf94b : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbf939 ; ret
0x000000000019b948 : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x19b95a ; call rax
0x0000000000058928 : mov eax, dword ptr [rax + rcx*8] ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x0000000000037299 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000003748b : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000036d93 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000001263f8 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000166785 : mov eax, dword ptr [rax] ; jmp 0x16674f
0x0000000000150331 : mov eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000035950 : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000008b0b3 : mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000101d6c : mov eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x0000000000037270 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000004a6cb : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014447d : mov eax, dword ptr [rax] ; ret
0x000000000011f307 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x11f377 ; call rax
0x0000000000033d1e : mov eax, dword ptr [rax] ; test rax, rax ; je 0x33d30 ; call rax
0x0000000000097de7 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x97df7 ; call rax
0x000000000009c39a : mov eax, dword ptr [rax] ; test rax, rax ; je 0x9c3aa ; call rax
0x00000000000966b9 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x966b7 ; ret
0x00000000000f12b0 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c433 : mov eax, dword ptr [rbp + 8] ; mov rsi, r12 ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000156fdc : mov eax, dword ptr [rbp + 8] ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000159d8e : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000001076a7 : mov eax, dword ptr [rbp - 0x1e0] ; call rax
0x000000000011d2cf : mov eax, dword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000094b91 : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008fe65 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000952ed : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000015643e : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x156458 ; pop rbx ; ret
0x00000000000b6c09 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000179cd6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000179ce6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000b6c8d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b6cad : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001833da : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bf8ed : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbf8e1 ; ret
0x0000000000184cb2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000008a7bf : mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017dfd0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000b6bb5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000017df21 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000179bf1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000017dfa1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b6b86 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000966d4 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000966fc : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000015a6a5 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1055 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000019ba45 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x19ba5c ; call rax
0x00000000000d21d0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xd2258 ; ret
0x00000000000d21e5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xd2258 ; ret
0x000000000015ab24 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008feb9 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000d21f0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xd2258 ; ret
0x00000000000d220b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xd2258 ; ret
0x00000000000d2220 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xd2258 ; ret
0x00000000000d2235 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xd2258 ; ret
0x00000000000d2240 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xd2258 ; ret
0x000000000008fd89 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000969c5 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000008df3c : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8df4f ; ret
0x000000000010f9e4 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000116974 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000159006 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000159979 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159101 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x00000000000979cc : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, r8 ; jmp rax
0x000000000014c381 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000008fe14 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008fde4 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000966c6 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000979d0 : mov eax, dword ptr [rdi] ; mov rdi, r8 ; jmp rax
0x0000000000098455 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x155706], eax ; ret
0x00000000000e10a4 : mov eax, dword ptr [rdi] ; ret
0x0000000000091054 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000091064 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000151048 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151056 ; ret
0x0000000000151047 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151057 ; ret
0x0000000000157708 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157716 ; ret
0x0000000000157707 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157717 ; ret
0x000000000008d7af : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000105cf1 : mov eax, dword ptr [rdx + 8] ; ret
0x0000000000037227 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000b1f96 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000036e2c : mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000035911 : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000007433e : mov eax, dword ptr [rdx] ; jmp 0x705e1
0x0000000000088600 : mov eax, dword ptr [rdx] ; ret
0x00000000000a1982 : mov eax, dword ptr [rip + 0x1485c8] ; call qword ptr [rax]
0x00000000000a17a1 : mov eax, dword ptr [rip + 0x1487a9] ; call qword ptr [rax]
0x00000000000a16d1 : mov eax, dword ptr [rip + 0x148879] ; call qword ptr [rax]
0x000000000009d279 : mov eax, dword ptr [rip + 0x14cc61] ; mov qword ptr [rax], rdi ; ret
0x000000000009aa89 : mov eax, dword ptr [rip + 0x14f331] ; xor edi, edi ; call qword ptr [rax]
0x000000000009aa43 : mov eax, dword ptr [rip + 0x14f377] ; call qword ptr [rax]
0x00000000000993af : mov eax, dword ptr [rip + 0x150b2b] ; mov qword ptr [rax], rdx ; ret
0x00000000000969a5 : mov eax, dword ptr [rip + 0x154bf5] ; ret
0x00000000000473b4 : mov eax, dword ptr [rip + 0x1a2dee] ; ret
0x00000000000473a4 : mov eax, dword ptr [rip + 0x1a2e02] ; ret
0x0000000000036d41 : mov eax, dword ptr [rip + 0x1b30a1] ; mov qword ptr [rax], rdx ; ret
0x0000000000032af5 : mov eax, dword ptr [rip + 0x1b9b4d] ; ret
0x0000000000029135 : mov eax, dword ptr [rip + 0x1c6d7d] ; ret
0x0000000000029125 : mov eax, dword ptr [rip + 0x1c6d9d] ; ret
0x000000000015fe61 : mov eax, dword ptr [rip + 0x8b629] ; call qword ptr [rax]
0x000000000015f854 : mov eax, dword ptr [rip + 0x8bc36] ; call qword ptr [rax]
0x0000000000162f31 : mov eax, dword ptr [rip + 0x8cf51] ; call qword ptr [rax]
0x0000000000125a35 : mov eax, dword ptr [rip + 0xc4425] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001018f2 : mov eax, dword ptr [rip + 0xe85f0] ; movsxd rcx, edx ; jmp 0x10190d
0x0000000000037485 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037495 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035931 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000001164c4 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000000271dd : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000002c5ea : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000002aa49 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000002b7ec : mov eax, dword ptr [rsp + 0x30] ; call rax
0x00000000000e5cc3 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000e5b9d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x00000000001182af : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x0000000000122499 : mov eax, dword ptr [rsp + 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000123e1c : mov eax, dword ptr [rsp + 4] ; add rsp, 0x28 ; ret
0x0000000000037a16 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000004b575 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000001162e8 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000124121 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x000000000011ce29 : mov eax, dword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x000000000013ac06 : mov eax, dword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x00000000000e5d58 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000123590 : mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f424 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000123656 : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000125a97 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000125af8 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000048a8c : mov eax, dword ptr [rsp] ; call rax
0x0000000000048bf1 : mov eax, dword ptr [rsp] ; mov r13, r15 ; add r15, rbx ; call rax
0x000000000013b8af : mov eax, dword ptr [rsp] ; mov rdi, r12 ; call rax
0x0000000000048b7c : mov eax, dword ptr [rsp] ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000012848a : mov eax, dword ptr [rsp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128488 : mov eax, dword ptr fs:[r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000463ff : mov eax, eax ; add rsp, 0x118 ; ret
0x0000000000098016 : mov eax, eax ; add rsp, 0x18 ; ret
0x00000000000d7be0 : mov eax, eax ; add rsp, 8 ; ret
0x000000000013f99a : mov eax, eax ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000013f6fc : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000011a0f6 : mov eax, eax ; mov byte ptr [rsi - 1], 0 ; ret
0x0000000000116e5c : mov eax, eax ; mov eax, 0x10 ; syscall
0x0000000000097fe4 : mov eax, eax ; mov eax, 0x23 ; syscall
0x0000000000118492 : mov eax, eax ; mov eax, 0x4a ; syscall
0x0000000000118552 : mov eax, eax ; mov eax, 0x4b ; syscall
0x0000000000111c5a : mov eax, eax ; mov eax, 0x55 ; syscall
0x0000000000046791 : mov eax, eax ; mov eax, 0x82 ; syscall
0x0000000000111ad2 : mov eax, eax ; mov eax, 3 ; syscall
0x00000000001229c8 : mov eax, eax ; mov eax, r8d ; ret
0x0000000000116ba5 : mov eax, eax ; mov ebx, dword ptr fs:[r10] ; syscall
0x00000000001112a2 : mov eax, eax ; mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000001602c7 : mov eax, eax ; mov qword ptr [rdx], 0 ; ret
0x00000000001564f9 : mov eax, eax ; mov rax, r8 ; pop rbx ; ret
0x000000000004afe9 : mov eax, eax ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000116b7b : mov eax, eax ; movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x00000000000e28e6 : mov eax, eax ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d64b : mov eax, eax ; pop r12 ; pop r13 ; ret
0x000000000008e6d9 : mov eax, eax ; pop r12 ; ret
0x000000000009d6b7 : mov eax, eax ; pop r13 ; ret
0x00000000000875d3 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013eaf1 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032c56 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009c754 : mov eax, eax ; pop rbp ; ret
0x00000000000a012f : mov eax, eax ; pop rbx ; pop r12 ; ret
0x0000000000049900 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a031 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049f8c : mov eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000046c00 : mov eax, eax ; pop rbx ; ret
0x0000000000036dd2 : mov eax, eax ; ret
0x0000000000190884 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000000e5fe2 : mov eax, eax ; syscall
0x000000000018bee1 : mov eax, eax ; vzeroupper ; ret
0x00000000000889ae : mov eax, ebp ; mov edx, dword ptr [rbx] ; jmp 0x88984
0x0000000000147cb7 : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000a2176 : mov eax, ebp ; mov rdx, r12 ; pop r12 ; pop r13 ; ret
0x0000000000144a51 : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2b99 : mov eax, ebp ; pop r12 ; pop r13 ; ret
0x000000000008599e : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bfdb1 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bfd56 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009266e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ddf7 : mov eax, ebp ; ret
0x0000000000058c93 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000090a9f : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011fe4b : mov eax, ebx ; mov rax, r8 ; pop rbx ; ret
0x00000000000ef145 : mov eax, ebx ; mov rdi, r15 ; call 0xebb57
0x00000000000a5dea : mov eax, ebx ; pop rbx ; cmovne rax, rdi ; ret
0x00000000000cd0d6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000909e4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ce6e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000116be3 : mov eax, ebx ; pop rbx ; ret
0x00000000000445f4 : mov eax, ebx ; ret
0x00000000000a6e28 : mov eax, ebx ; sub rax, r9 ; add r10, rax ; jmp 0xa6de7
0x000000000009d127 : mov eax, ebx ; syscall
0x0000000000065887 : mov eax, ebx ; test r8d, r8d ; jne 0x65898 ; pop rbx ; ret
0x0000000000058b5b : mov eax, ecx ; adc eax, eax ; ret
0x0000000000046613 : mov eax, ecx ; add rsp, 0x148 ; ret
0x0000000000116d60 : mov eax, ecx ; add rsp, 0x38 ; ret
0x000000000011b944 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x000000000003bef6 : mov eax, ecx ; pop r12 ; ret
0x000000000007d248 : mov eax, ecx ; pop r14 ; ret
0x000000000007d197 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003bec8 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9d1b : mov eax, ecx ; pop rbx ; ret
0x0000000000089478 : mov eax, ecx ; ret
0x0000000000055b96 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000004b5db : mov eax, ecx ; sub rsi, rdi ; syscall
0x00000000000463af : mov eax, ecx ; syscall
0x00000000000372e4 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000132ec8 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000132e84 : mov eax, edi ; bswap eax ; ret
0x00000000000e1c26 : mov eax, edi ; call rax
0x000000000004a5f4 : mov eax, edi ; cdq ; xor eax, edx ; sub eax, edx ; ret
0x000000000004a645 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000011a074 : mov eax, edi ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000006c39a : mov eax, edi ; mov r12, r14 ; jmp 0x68ddf
0x0000000000132ee2 : mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000098831 : mov eax, edi ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000000ac08d : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005e602 : mov eax, edi ; ret
0x0000000000132e94 : mov eax, edi ; rol ax, 8 ; ret
0x0000000000132d4e : mov eax, edi ; sar rax, 6 ; ret
0x0000000000132f58 : mov eax, edi ; shr eax, 0x18 ; ret
0x000000000018ddb1 : mov eax, edi ; vzeroupper ; ret
0x000000000012c5bc : mov eax, edx ; cmove eax, ecx ; ret
0x000000000013fd13 : mov eax, edx ; movsxd rdx, ecx ; ret
0x0000000000059bd5 : mov eax, edx ; pop rbx ; ret
0x0000000000047409 : mov eax, edx ; ret
0x0000000000027242 : mov eax, edx ; syscall
0x0000000000046195 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000153994 : mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x00000000001502ac : mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000010a322 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137c32 : mov eax, esi ; pop rbx ; ret
0x00000000000e5fd2 : mov eax, esi ; syscall
0x00000000000f770e : mov eax, esp ; mov rcx, r13 ; call 0xf3957
0x0000000000088b65 : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a3549 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x0000000000037b79 : mov eax, esp ; pop r12 ; ret
0x000000000011d922 : mov eax, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000011cca9 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000088a83 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033484 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913a6 : mov eax, esp ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000004aaa3 : mov eax, esp ; pop rbp ; pop r12 ; ret
0x000000000011abe5 : mov eax, esp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000005ea15 : mov eax, esp ; pop rbx ; pop r12 ; ret
0x0000000000083ba1 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009138c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000037adb : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c41f : mov eax, esp ; pop rdx ; pop r12 ; ret
0x0000000000142389 : mov eax, r10d ; ret
0x0000000000116be2 : mov eax, r11d ; pop rbx ; ret
0x0000000000088b64 : mov eax, r12d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0696 : mov eax, r12d ; pop r12 ; ret
0x0000000000128907 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015102d : mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000011abe4 : mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000005ea14 : mov eax, r12d ; pop rbx ; pop r12 ; ret
0x0000000000089922 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047465 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5e6f : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011803a : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001246f6 : mov eax, r14d ; syscall
0x0000000000098015 : mov eax, r8d ; add rsp, 0x18 ; ret
0x000000000011a55f : mov eax, r8d ; add rsp, 8 ; ret
0x000000000013f6fb : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000116ba4 : mov eax, r8d ; mov ebx, dword ptr fs:[r10] ; syscall
0x000000000004afe8 : mov eax, r8d ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000116b7a : mov eax, r8d ; movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x00000000000e28e5 : mov eax, r8d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008e6d8 : mov eax, r8d ; pop r12 ; ret
0x0000000000153520 : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032c55 : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000001105cf : mov eax, r8d ; pop rbp ; ret
0x00000000000498ff : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a030 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a16f : mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000046bff : mov eax, r8d ; pop rbx ; ret
0x0000000000036dd1 : mov eax, r8d ; ret
0x00000000000e5fe1 : mov eax, r8d ; syscall
0x0000000000116d5f : mov eax, r9d ; add rsp, 0x38 ; ret
0x00000000000c9d1a : mov eax, r9d ; pop rbx ; ret
0x0000000000089477 : mov eax, r9d ; ret
0x000000000004b5da : mov eax, r9d ; sub rsi, rdi ; syscall
0x000000000009002b : mov eax, r9d ; syscall
0x00000000000af801 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af811 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000af7f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000188051 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x00000000000e4657 : mov ebp, 0x89480010 ; ret 0x8548
0x000000000015024b : mov ebp, 0xc8 ; call rax
0x000000000009ba77 : mov ebp, 0xe80011fb ; retf 0xffff
0x00000000000af871 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000188081 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000af851 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000af831 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000af917 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x00000000000af747 : mov ebp, 0xf80148c0 ; ret
0x0000000000187f40 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000b4d4c : mov ebp, 0xf80148c6 ; ret
0x000000000007370c : mov ebp, 0xfffffa68 ; add byte ptr [rdi], cl ; test ebp, edi ; retf
0x0000000000164d48 : mov ebp, 0xfffffb28 ; mov rdx, rax ; jmp 0x164d6d
0x00000000000e9ca8 : mov ebp, 0xfffffb28 ; mov rdx, rax ; jmp 0xe9ccd
0x000000000016582b : mov ebp, 0xfffffbb0 ; call 0xa1b27
0x0000000000108201 : mov ebp, 0xfffffe78 ; call 0x144c87
0x0000000000039052 : mov ebp, 0xffffff70 ; call 0x25357
0x0000000000049068 : mov ebp, 0xffffff78 ; call 0x25357
0x000000000014afa9 : mov ebp, 3 ; call 0x37a57
0x0000000000123c50 : mov ebp, 5 ; jmp 0x123c20
0x000000000006c798 : mov ebp, ds ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000047b19 : mov ebp, eax ; mov rdi, r12 ; call rbx
0x000000000011d203 : mov ebp, ebx ; mov rdi, rbp ; call r12
0x000000000004619b : mov ebp, ecx ; nop ; jmp rdx
0x0000000000048bf5 : mov ebp, edi ; add r15, rbx ; call rax
0x00000000000fca12 : mov ebp, edi ; add rdx, rsi ; jmp rdx
0x00000000000889dc : mov ebp, edi ; push rbx ; mov rbx, rsi ; call 0x25428
0x0000000000034fda : mov ebp, edi ; test rax, rax ; je 0x34fea ; call rax
0x000000000010ac3a : mov ebp, edx ; jmp 0x10ac04
0x0000000000085b37 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000bfe2e : mov ebx, 0x39f88948 ; retf 0xe375
0x0000000000170a87 : mov ebx, 0x46f00ff2 ; retf
0x00000000000a6564 : mov ebx, 0x4bb ; add byte ptr [rax + 0x29], cl ; ret
0x000000000016b5b4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000016b5d2 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000012f769 : mov ebx, 0x89000001 ; ret 0x2944
0x000000000007bd85 : mov ebx, 0x89000005 ; ret 0xc083
0x00000000000e4827 : mov ebx, 0x89480010 ; ret 0x8548
0x00000000000f0b0d : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x0000000000097928 : mov ebx, 0xafb8341 ; je 0x97937 ; ret
0x0000000000157390 : mov ebx, 0xbc0f48eb ; ret
0x0000000000116ba8 : mov ebx, dword ptr [r10] ; syscall
0x00000000000e6509 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00000000000bff11 : mov ebx, dword ptr [rbx + 0xd] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000116ba9 : mov ebx, dword ptr [rdx] ; syscall
0x0000000000116ba7 : mov ebx, dword ptr fs:[r10] ; syscall
0x00000000001588bf : mov ebx, eax ; call 0x25334
0x00000000000d9141 : mov ebx, eax ; call 0x253b4
0x00000000000e1659 : mov ebx, ebp ; mov rdi, rbp ; call r12
0x0000000000122121 : mov ebx, edi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000000889e0 : mov ebx, esi ; call 0x25424
0x000000000011c905 : mov ebx, esi ; je 0x11c915 ; pop rbx ; ret
0x000000000002fe37 : mov ebx, esi ; mov r10, rcx ; jmp 0x2fdf5
0x000000000002fe87 : mov ebx, esi ; mov r10, rcx ; jmp 0x2fe45
0x00000000000463aa : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000016e961 : mov ecx, 0x39480007 ; retf 0x830f
0x000000000005e5ab : mov ecx, 0x3a8 ; mov rsp, rdx ; ret
0x00000000000db461 : mov ecx, 0x3eca014c ; jmp rdx
0x00000000000bfbb3 : mov ecx, 0x48000126 ; cmove eax, edx ; ret
0x00000000000a6e26 : mov ecx, 0x4cd88948 ; sub eax, ecx ; add r10, rax ; jmp 0xa6de9
0x00000000000ccf02 : mov ecx, 0x83480e8b ; ret 0x4804
0x00000000000e262c : mov ecx, 0x840f0010 ; retf 0xfffe
0x00000000000335e3 : mov ecx, 0x85ffff1f ; ror byte ptr [rdi], 0x94 ; ret
0x000000000007c734 : mov ecx, 0x89000002 ; ret 0xc083
0x000000000013b799 : mov ecx, 0x89480000 ; ret
0x00000000000e9ada : mov ecx, 0x8948fff3 ; ret
0x00000000001582c3 : mov ecx, 0x89fffcb1 ; ret
0x00000000000a375d : mov ecx, 0xf480001 ; ret 0xfc3
0x0000000000116d7a : mov ecx, 0xffffffff ; mov dword ptr fs:[rdx], eax ; jmp 0x116d58
0x00000000000c9d15 : mov ecx, 0xffffffff ; mov eax, r9d ; pop rbx ; ret
0x00000000000a70cf : mov ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x39], cl ; ret 0xffff
0x000000000016e97e : mov ecx, dword ptr [rbp + 1] ; fnstcw word ptr [rsi] ; jmp r9
0x0000000000082441 : mov ecx, dword ptr [rbp - 0x508] ; jmp rax
0x000000000012627c : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12628f ; ret
0x00000000001262e5 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1262f7 ; ret
0x0000000000126bcc : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126bdf ; ret
0x0000000000126c29 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126c3f ; ret
0x0000000000193000 : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000001693ce : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000000b1f93 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000f1a03 : mov ecx, dword ptr [rip + 0xf84df] ; movsxd rcx, edx ; jmp 0xf1a3b
0x000000000016b753 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b953 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016bb53 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000ba040 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba081 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000001711f3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171183 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171113 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000171035 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170fc5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170f55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170ee5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170e75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170e05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170d95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001712d5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000ba021 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000ce15d : mov ecx, dword ptr [rsp + 0x10] ; call r14
0x0000000000153cc0 : mov ecx, dword ptr [rsp + 0x10] ; mov rdi, r15 ; call rcx
0x00000000000c23a0 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xc23c2
0x00000000000c4d50 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xc4d72
0x00000000000c7570 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xc7592
0x00000000000cee10 : mov ecx, dword ptr [rsp + 0x20] ; mov r12, r13 ; setne dl ; jmp 0xcee32
0x000000000015050f : mov ecx, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rcx
0x0000000000149cb3 : mov ecx, dword ptr [rsp + 8] ; mov rdi, rbp ; call rcx
0x000000000011b947 : mov ecx, dword ptr [rsp + 8] ; syscall
0x0000000000107896 : mov ecx, dword ptr [rsp] ; call rax
0x000000000014b15b : mov ecx, dword ptr [rsp] ; xor eax, eax ; mov rdi, rbx ; call rcx
0x000000000010d7b1 : mov ecx, eax ; mov rdi, qword ptr [r14] ; call 0x10a287
0x00000000000ab7d9 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f7711 : mov ecx, ebp ; call 0xf3954
0x00000000001480b5 : mov ecx, ebp ; call r10
0x00000000000ebaf5 : mov ecx, ebp ; jmp 0xebabf
0x00000000000ed826 : mov ecx, ebp ; jmp 0xed7f0
0x0000000000154d61 : mov ecx, ebp ; mov esi, 9 ; call qword ptr [rax]
0x00000000000fb3ff : mov ecx, ebx ; call 0xf7e14
0x00000000000a59a1 : mov ecx, ebx ; mov rdx, r8 ; jmp 0xa59c9
0x0000000000149bf4 : mov ecx, ebx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000125b6d : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000bed96 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000081689 : mov ecx, esi ; jmp rax
0x000000000003119e : mov ecx, esi ; mov r10, rcx ; jmp 0x31155
0x00000000000313fe : mov ecx, esi ; mov r10, rcx ; jmp 0x313b5
0x00000000000314ab : mov ecx, esi ; mov r10, rcx ; jmp 0x3146e
0x0000000000147cba : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000008d890 : mov ecx, esi ; mov rdi, r15 ; call r12
0x0000000000081046 : mov ecx, esi ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cda36 : mov ecx, esp ; mov rdx, r13 ; call rbx
0x0000000000155cde : mov ecx, esp ; mov rdx, rbp ; mov rsi, rbx ; call rax
0x00000000000ebaf4 : mov ecx, r13d ; jmp 0xebac0
0x00000000000ed825 : mov ecx, r13d ; jmp 0xed7f1
0x000000000011950d : mov edi, 0x148fff0 ; ret
0x0000000000119050 : mov edi, 0x1fc0 ; call 0x25337
0x000000000012ae72 : mov edi, 0x2000004 ; call rax
0x00000000001290e3 : mov edi, 0x400 ; call 0x25337
0x0000000000073a99 : mov edi, 0x89000009 ; ret 0xc083
0x000000000015fff0 : mov edi, 0xc03d8d48 ; add ecx, dword ptr [rcx] ; add al, ch ; ret
0x0000000000085b3b : mov edi, 0xe0 ; call rax
0x0000000000085aff : mov edi, 0xe0 ; jmp rax
0x00000000000e226d : mov edi, 0xe8000008 ; retf 0x659
0x000000000004a84d : mov edi, 0xe8001a57 ; retf 0x75d
0x00000000001102dc : mov edi, 0xf8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000110370 : mov edi, 0xf8 ; ret
0x00000000000ab682 : mov edi, 3 ; jmp 0xa8178
0x00000000000ab66c : mov edi, 4 ; jmp 0xa8178
0x00000000000d8b86 : mov edi, dword ptr [rax + rdi*8 + 0x3b8] ; call 0x255a9
0x00000000000d8b08 : mov edi, dword ptr [rax + rdi*8 + 0xb0] ; call 0x255a9
0x000000000011dfe3 : mov edi, dword ptr [rax] ; call rbx
0x000000000019a7ac : mov edi, dword ptr [rbp + 0x10] ; add rdi, rbp ; call r12
0x0000000000115834 : mov edi, dword ptr [rbp + 0x3c] ; call 0x111aa5
0x000000000004a5ba : mov edi, dword ptr [rbp + 8] ; call rax
0x0000000000108200 : mov edi, dword ptr [rbp - 0x188] ; call 0x144c88
0x0000000000164d47 : mov edi, dword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0x164d6e
0x00000000000e9ca7 : mov edi, dword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0xe9cce
0x000000000013dc09 : mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000290e3 : mov edi, dword ptr [rbp - 0x68] ; call 0x25355
0x00000000000f8864 : mov edi, dword ptr [rbp - 0x70] ; call 0x25355
0x00000000000290ec : mov edi, dword ptr [rbp - 0x80] ; call 0x25355
0x0000000000049067 : mov edi, dword ptr [rbp - 0x88] ; call 0x25358
0x0000000000039051 : mov edi, dword ptr [rbp - 0x90] ; call 0x25358
0x000000000011cd90 : mov edi, dword ptr [rbp] ; call rbx
0x00000000000f8849 : mov edi, dword ptr [rbx + 0x10] ; add rbx, 0x20 ; call 0x25359
0x00000000000a1a41 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x00000000000a19a2 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r14 ; call rax
0x000000000013af1d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x13af19 ; pop rbx ; ret
0x00000000000e88f5 : mov edi, dword ptr [rbx + rsi*8] ; call 0x25355
0x00000000000f8856 : mov edi, dword ptr [rbx - 0x20] ; call 0x25355
0x0000000000154b39 : mov edi, dword ptr [rbx] ; jmp 0x154b03
0x000000000013da20 : mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x000000000003fef3 : mov edi, dword ptr [rdi + 0x10] ; call 0x3c125
0x0000000000055402 : mov edi, dword ptr [rdi + 0x10] ; syscall
0x000000000010890c : mov edi, dword ptr [rdi + 0x18] ; call 0x25355
0x000000000003feea : mov edi, dword ptr [rdi + 0x18] ; call 0x3c125
0x0000000000151045 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x151059 ; ret
0x0000000000157705 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x157719 ; ret
0x00000000000a17fd : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000085b3a : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x0000000000085afe : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000003fefc : mov edi, dword ptr [rdi + 8] ; call 0x3c125
0x000000000011dd1d : mov edi, dword ptr [rdi] ; call rbx
0x000000000013d964 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x000000000012ef34 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000010d7b4 : mov edi, dword ptr [rsi] ; call 0x10a284
0x000000000011dbac : mov edi, dword ptr [rsi] ; call rbx
0x00000000001183b0 : mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000001111d8 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000001164a5 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x115 ; syscall
0x0000000000123d45 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x120 ; syscall
0x0000000000124045 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x45 ; syscall
0x0000000000163d2e : mov edi, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x0000000000114660 : mov edi, dword ptr [rsp + 0x20] ; call 0xe10b6
0x000000000002edee : mov edi, dword ptr [rsp + 0x38] ; call r15
0x000000000002e7fa : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002d86c : mov edi, dword ptr [rsp + 0x40] ; call r14
0x000000000002ddba : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x000000000002d179 : mov edi, dword ptr [rsp + 0x48] ; call rbx
0x00000000000fb3fa : mov edi, dword ptr [rsp + 0x48] ; mov rcx, rbx ; call 0xf7e19
0x000000000002fb78 : mov edi, dword ptr [rsp + 0x50] ; call rbx
0x0000000000030e8b : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002f78e : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002acf3 : mov edi, dword ptr [rsp + 0x58] ; call r14
0x000000000002c243 : mov edi, dword ptr [rsp + 0x58] ; call r15
0x000000000002ba5d : mov edi, dword ptr [rsp + 0x58] ; call rbx
0x000000000002bdbe : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e5 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa44 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7e7 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002b472 : mov edi, dword ptr [rsp + 0x60] ; call r15
0x000000000002b02f : mov edi, dword ptr [rsp + 0x60] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000123ea3 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x133 ; syscall
0x0000000000123324 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x2b ; syscall
0x0000000000122653 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0xe8 ; syscall
0x0000000000118295 : mov edi, dword ptr [rsp + 0xc] ; syscall
0x0000000000122480 : mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000095323 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000122703 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x114 ; syscall
0x0000000000116554 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x11d ; syscall
0x00000000001176e2 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x13 ; syscall
0x0000000000122920 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x130 ; syscall
0x000000000004b554 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x13e ; syscall
0x0000000000117782 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x14 ; syscall
0x000000000011bc24 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x1a ; syscall
0x00000000001233f0 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x2a ; syscall
0x0000000000123832 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x2e ; syscall
0x00000000001236d2 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x2f ; syscall
0x00000000000e5a7b : mov edi, dword ptr [rsp + 8] ; mov eax, 0x3d ; syscall
0x00000000001117cc : mov edi, dword ptr [rsp + 8] ; mov eax, 0x48 ; syscall
0x0000000000111344 : mov edi, dword ptr [rsp + 8] ; mov eax, 1 ; syscall
0x0000000000115c24 : mov edi, dword ptr [rsp + 8] ; mov eax, 7 ; syscall
0x00000000001162cd : mov edi, dword ptr [rsp + 8] ; syscall
0x00000000001112a4 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000094bb6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000011da82 : mov edi, dword ptr [rsp] ; call rbx
0x000000000010f405 : mov edi, dword ptr [rsp] ; mov eax, 0x11 ; syscall
0x00000000001227b4 : mov edi, dword ptr [rsp] ; mov eax, 0x116 ; syscall
0x000000000010f4b5 : mov edi, dword ptr [rsp] ; mov eax, 0x12 ; syscall
0x0000000000130247 : mov edi, dword ptr [rsp] ; mov eax, 0xe6 ; syscall
0x00000000000979d3 : mov edi, eax ; jmp rax
0x00000000000e5ca9 : mov edi, eax ; mov eax, 0x22 ; syscall
0x0000000000122324 : mov edi, eax ; mov eax, 0x3c ; syscall
0x0000000000164133 : mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000463b4 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000149498 : mov edi, eax ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000001588bc : mov edi, eax ; mov rbx, rax ; call 0x25337
0x0000000000145f0b : mov edi, eax ; mov rdx, qword ptr [rdx + r14*8] ; call 0xa21a8
0x000000000005d100 : mov edi, eax ; mov rsi, rax ; call 0x593a7
0x0000000000115a20 : mov edi, ebp ; call 0x111ce4
0x0000000000109053 : mov edi, ebp ; call 0x25354
0x0000000000039239 : mov edi, ebp ; call 0x254a4
0x00000000000d9300 : mov edi, ebp ; call 0x255a4
0x000000000007e004 : mov edi, ebp ; call 0x8a244
0x000000000009be80 : mov edi, ebp ; call 0x980d4
0x0000000000049cbb : mov edi, ebp ; call 0xe5fb4
0x000000000014c43a : mov edi, ebp ; call qword ptr [rax]
0x00000000000e165c : mov edi, ebp ; call r12
0x0000000000027271 : mov edi, ebp ; call rax
0x0000000000047b57 : mov edi, ebp ; call rbx
0x0000000000149cb8 : mov edi, ebp ; call rcx
0x000000000014a67c : mov edi, ebp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000011059d : mov edi, ebp ; mov eax, 0x135 ; syscall
0x0000000000117a3c : mov edi, ebp ; mov eax, 0x147 ; syscall
0x0000000000117b9c : mov edi, ebp ; mov eax, 0x148 ; syscall
0x0000000000111d89 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000004a07b : mov edi, ebp ; mov eax, 0xca ; syscall
0x0000000000130163 : mov edi, ebp ; mov eax, 0xe4 ; syscall
0x000000000011baed : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000009a73c : mov edi, ebp ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x000000000011d91f : mov edi, ebp ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000a126c : mov edi, ebp ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000000cdbb8 : mov edi, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008a284 : mov edi, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000009d6c4 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a78d : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000009ce31 : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014b39d : mov edi, ebp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000159c8f : mov edi, ebp ; xor eax, eax ; call r14
0x0000000000159ca9 : mov edi, ebp ; xor eax, eax ; call rcx
0x0000000000087a27 : mov edi, ebp ; xor edx, edx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011cc75 : mov edi, ebp ; xor esi, esi ; call r12
0x00000000000c10a0 : mov edi, ebx ; call 0xcd2b4
0x00000000000285c5 : mov edi, ebx ; call r12
0x0000000000029625 : mov edi, ebx ; call r14
0x00000000000e91dc : mov edi, ebx ; call r15
0x0000000000084318 : mov edi, ebx ; call r8
0x0000000000083d22 : mov edi, ebx ; call rax
0x000000000014b161 : mov edi, ebx ; call rcx
0x0000000000028d1c : mov edi, ebx ; call rsi
0x000000000009dff1 : mov edi, ebx ; mov eax, 0xca ; syscall
0x00000000001480b2 : mov edi, ebx ; mov rcx, r13 ; call r10
0x000000000014b254 : mov edi, ebx ; xor eax, eax ; call rcx
0x000000000004a2d9 : mov edi, ecx ; call r8
0x0000000000122124 : mov edi, ecx ; sub rsp, 8 ; call rsi
0x000000000012dfb1 : mov edi, edi ; call 0x12a1d4
0x0000000000048b98 : mov edi, edi ; call 0x255d4
0x000000000011fafd : mov edi, edi ; call 0x4bde4
0x00000000000ef148 : mov edi, edi ; call 0xebb54
0x000000000008d893 : mov edi, edi ; call r12
0x000000000011ec8c : mov edi, edi ; call r14
0x000000000008c304 : mov edi, edi ; call rax
0x0000000000153cc5 : mov edi, edi ; call rcx
0x0000000000048a29 : mov edi, edi ; imul rdx, rbp ; call 0x25508
0x000000000009f2ec : mov edi, edi ; mov eax, 0xca ; syscall
0x00000000000902ec : mov edi, edi ; mov eax, r9d ; syscall
0x0000000000108909 : mov edi, edi ; mov r15, qword ptr [r15 + 0x18] ; call 0x25358
0x000000000012dd90 : mov edi, edi ; mov rdx, rax ; xor eax, eax ; call 0x12a889
0x00000000000e1b13 : mov edi, edi ; mov rsi, qword ptr [rsp + 0x60] ; call r12
0x0000000000126684 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e5fd0 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000e5fdf : mov edi, edx ; mov eax, r8d ; syscall
0x000000000004a629 : mov edi, edx ; shl rdi, 0x20 ; or rax, rdi ; ret
0x0000000000109095 : mov edi, esi ; call 0x25354
0x00000000000a19cf : mov edi, esi ; call rax
0x0000000000049c2d : mov edi, esi ; mov eax, 0xca ; syscall
0x000000000011d2cc : mov edi, esi ; mov rax, qword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000039e81 : mov edi, esp ; call 0x1168d4
0x0000000000150525 : mov edi, esp ; call 0x14cff4
0x0000000000119396 : mov edi, esp ; call 0x255d4
0x00000000000fc372 : mov edi, esp ; call 0xf8da4
0x000000000014bfea : mov edi, esp ; call qword ptr [rbx]
0x00000000000489fb : mov edi, esp ; call rax
0x0000000000047b1c : mov edi, esp ; call rbx
0x0000000000150514 : mov edi, esp ; call rcx
0x000000000009ee96 : mov edi, esp ; call rdx
0x00000000000c091a : mov edi, esp ; lea r9, [rsp + 0x30] ; call rbx
0x00000000001245fe : mov edi, esp ; mov eax, 0x14 ; syscall
0x0000000000047582 : mov edi, esp ; mov eax, 0x81 ; syscall
0x0000000000049e24 : mov edi, esp ; mov eax, 0xca ; syscall
0x0000000000124781 : mov edi, esp ; mov eax, r14d ; syscall
0x0000000000090029 : mov edi, esp ; mov eax, r9d ; syscall
0x00000000000604cd : mov edi, esp ; mov qword ptr [rbp - 0xe8], r8 ; call rax
0x00000000000c0ff0 : mov edi, esp ; mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x00000000000c0a70 : mov edi, esp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000009cf82 : mov edi, esp ; mov rsi, rbp ; call 0x99267
0x0000000000039e80 : mov edi, r12d ; call 0x1168d5
0x00000000001245fd : mov edi, r12d ; mov eax, 0x14 ; syscall
0x0000000000047581 : mov edi, r12d ; mov eax, 0x81 ; syscall
0x0000000000124780 : mov edi, r12d ; mov eax, r14d ; syscall
0x0000000000090028 : mov edi, r12d ; mov eax, r9d ; syscall
0x0000000000115a1f : mov edi, r13d ; call 0x111ce5
0x00000000000902eb : mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000123f5a : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a5a86 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000013f08d : mov edx, 0x104 ; cmove eax, edx ; ret
0x0000000000104315 : mov edx, 0x3ed00148 ; jmp rax
0x00000000000ffe05 : mov edx, 0x3ed0014c ; jmp rax
0x0000000000170a07 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000130dc2 : mov edx, 0x4800062a ; cmove eax, edx ; ret
0x00000000000a3782 : mov edx, 0x48000f06 ; cmove eax, edx ; ret
0x000000000016b7b4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000016b7d2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000000e7e8a : mov edx, 0x7f ; cmovne rax, rdx ; ret
0x000000000010746e : mov edx, 0x83000002 ; stc ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x0000000000058302 : mov edx, 0x89000000 ; retf 0xc183
0x000000000008c5e2 : mov edx, 0x89000011 ; ret 0x3948
0x0000000000102777 : mov edx, 0x8948000e ; ret 0x8b48
0x0000000000045bdd : mov edx, 0x9483ff2 ; ret 0x840f
0x00000000001987ca : mov edx, 0x94d3ff3 ; ret
0x00000000000a35b4 : mov edx, 0xf480000 ; ret 0xfc3
0x00000000000a2508 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x000000000002a87b : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000013fd28 : mov edx, 0xffffffff ; ret
0x00000000000470ed : mov edx, 1 ; cmove eax, edx ; ret
0x0000000000105d34 : mov edx, 2 ; cmove eax, edx ; ret
0x00000000001224dc : mov edx, 8 ; syscall
0x000000000008fe4c : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000586e0 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000033f9b : mov edx, dword ptr [rax + rdi*8] ; test rdx, rdx ; je 0x33fad ; call rdx
0x00000000000271da : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007bba9 : mov edx, dword ptr [rbp - 0x518] ; jmp rax
0x000000000010f83c : mov edx, dword ptr [rbx + 4] ; jmp 0x10f808
0x00000000000889b0 : mov edx, dword ptr [rbx] ; jmp 0x88982
0x000000000009574d : mov edx, dword ptr [rbx] ; jmp 0x9571f
0x0000000000184caf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001833dd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001264ce : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x1264e7 ; ret
0x0000000000126dfe : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x126e17 ; ret
0x000000000006e240 : mov edx, dword ptr [rcx] ; jmp 0x6aca7
0x000000000018f262 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18f252 ; ret
0x00000000000c03be : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000058146 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000a1ad5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0xa1ad8 ; ret
0x0000000000145f0e : mov edx, dword ptr [rdx + rsi*8] ; call 0xa21a5
0x00000000000ba062 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000ba053 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ba0a3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba0b3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016b191 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000016b550 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ade1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bb670 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000bc4c0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000ba030 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000018c640 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000be120 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000bb6c1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000bc511 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000ba071 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000bb651 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000bc491 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000ba011 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000e5b7e : mov edx, dword ptr [rsp + 0x10] ; mov eax, 0xf7 ; syscall
0x00000000000abbe9 : mov edx, dword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x0000000000123637 : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; syscall
0x000000000014a0f4 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000015072a : mov edx, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call rdx
0x00000000000e1dbb : mov edx, dword ptr [rsp + 0x28] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000012230a : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x0000000000119777 : mov edx, eax ; jmp 0x1197aa
0x0000000000119956 : mov edx, eax ; jmp 0x119989
0x000000000011fdf3 : mov edx, eax ; jmp 0x11fe0a
0x000000000011fe31 : mov edx, eax ; jmp 0x11fe42
0x000000000014c2d0 : mov edx, eax ; jmp 0x14c263
0x0000000000152dc0 : mov edx, eax ; jmp 0x152d83
0x0000000000164d4e : mov edx, eax ; jmp 0x164d67
0x00000000000659b1 : mov edx, eax ; jmp 0x659c8
0x00000000000718b8 : mov edx, eax ; jmp 0x718cf
0x0000000000073d39 : mov edx, eax ; jmp 0x73d50
0x00000000000a544a : mov edx, eax ; jmp 0xa5463
0x00000000000a59a4 : mov edx, eax ; jmp 0xa59c6
0x00000000000e9cae : mov edx, eax ; jmp 0xe9cc7
0x0000000000142441 : mov edx, eax ; mov byte ptr [r10], 0 ; ret
0x00000000000463c0 : mov edx, eax ; mov eax, 0xea ; syscall
0x00000000000d913e : mov edx, eax ; mov rbx, rax ; call 0x253b7
0x000000000009eadc : mov edx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000012dd93 : mov edx, eax ; xor eax, eax ; call 0x12a886
0x00000000000cda39 : mov edx, ebp ; call rbx
0x0000000000111651 : mov edx, ebp ; mov eax, 0x10d ; syscall
0x000000000011cc8a : mov edx, ebp ; mov esi, 1 ; call r12
0x000000000016366c : mov edx, ebp ; mov esi, r12d ; call rax
0x00000000000a0482 : mov edx, ebp ; mov rdi, r12 ; call rax
0x0000000000048433 : mov edx, ebp ; mov rdi, r12 ; call rbx
0x00000000000a126f : mov edx, ebp ; mov rsi, r12 ; call rax
0x0000000000047b2e : mov edx, ebp ; mov rsi, r12 ; call rbx
0x0000000000047b51 : mov edx, ebp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x000000000014d106 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000047b6c : mov edx, ebp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000155ce1 : mov edx, ebp ; mov rsi, rbx ; call rax
0x000000000012f553 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012fa63 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012fb31 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x0000000000119a3b : mov edx, ecx ; jmp 0x119a6a
0x0000000000164ef0 : mov edx, ecx ; jmp 0x164ec9
0x000000000002fe3a : mov edx, ecx ; jmp 0x2fdf2
0x000000000002fe8a : mov edx, ecx ; jmp 0x2fe42
0x00000000000311a1 : mov edx, ecx ; jmp 0x31152
0x0000000000031401 : mov edx, ecx ; jmp 0x313b2
0x0000000000031466 : mov edx, ecx ; jmp 0x31423
0x00000000000314ae : mov edx, ecx ; jmp 0x3146b
0x00000000000a0a50 : mov edx, ecx ; jmp 0xa0a09
0x00000000000e9e4f : mov edx, ecx ; jmp 0xe9e29
0x0000000000112685 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x0000000000065fa5 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x0000000000112e75 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x0000000000112f35 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000001230a5 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x0000000000122b65 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000001225a5 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x0000000000123135 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x0000000000123195 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000001231c5 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x0000000000110b25 : mov edx, ecx ; mov eax, 0x14c ; syscall
0x0000000000122ec5 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000116235 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000001239f5 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x0000000000123965 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000001234b5 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000e5af5 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x0000000000122f55 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x0000000000122e95 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x0000000000122d75 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x0000000000122f85 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x0000000000122fb5 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x00000000001201a5 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x0000000000120145 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x0000000000120025 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x0000000000120055 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000001200b5 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x000000000011ff95 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x000000000011bce5 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000001242c5 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x0000000000115d75 : mov edx, ecx ; mov eax, 0xdd ; syscall
0x0000000000122d15 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000a0b5b : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000137cde : mov edx, edi ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x000000000012f83b : mov edx, edi ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x00000000000bf105 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000007b01c : mov edx, edx ; jmp rax
0x00000000000fc977 : mov edx, esi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000117a3a : mov edx, esi ; mov edi, ebp ; mov eax, 0x147 ; syscall
0x0000000000117b9a : mov edx, esi ; mov edi, ebp ; mov eax, 0x148 ; syscall
0x0000000000163a1d : mov edx, esi ; mov esi, r12d ; call rax
0x0000000000048a89 : mov edx, esi ; mov rax, qword ptr [rsp] ; call rax
0x00000000000489f5 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000012f4ee : mov edx, esi ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x0000000000115fb0 : mov edx, esi ; xor esi, esi ; syscall
0x0000000000116ce1 : mov edx, esp ; mov eax, 0x10 ; syscall
0x0000000000115cc6 : mov edx, esp ; mov eax, 0x10f ; syscall
0x0000000000146339 : mov edx, esp ; mov eax, 0x81 ; syscall
0x000000000014d241 : mov edx, esp ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000a2179 : mov edx, esp ; pop r12 ; pop r13 ; ret
0x00000000000876fc : mov edx, esp ; pop rbx ; pop r12 ; jmp rax
0x00000000000876fb : mov edx, r12d ; pop rbx ; pop r12 ; jmp rax
0x0000000000111650 : mov edx, r13d ; mov eax, 0x10d ; syscall
0x000000000011cc89 : mov edx, r13d ; mov esi, 1 ; call r12
0x00000000000718b7 : mov edx, r8d ; jmp 0x718d0
0x0000000000073d38 : mov edx, r8d ; jmp 0x73d51
0x00000000000463bf : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000105905 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001264e8 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000017145c : mov es, word ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000bc2de : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000119555 : mov esi, 0x148fff0 ; ret
0x00000000000a026d : mov esi, 0x348feda ; push rax ; adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x00000000000bf25c : mov esi, 0x3ef00148 ; jmp rax
0x00000000000ffcb3 : mov esi, 0x3ef0014c ; jmp rax
0x00000000001628cb : mov esi, 0x40 ; mov rdi, rbx ; call rax
0x00000000000d275e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x00000000000a3bae : mov esi, 0x480001b0 ; cmove eax, edx ; ret
0x00000000000abfce : mov esi, 0x48fff795 ; add esp, 8 ; ret
0x00000000000c9add : mov esi, 0x5be005d9 ; str word ptr [rax - 0x77] ; ret 0xc148
0x000000000015637e : mov esi, 0x64000997 ; mov qword ptr [rax], rdx ; ret
0x0000000000061aff : mov esi, 0x77cf390e ; jrcxz 0x61b53 ; mov eax, eax ; ret
0x00000000000979ac : mov esi, 0x80 ; syscall
0x000000000009d122 : mov esi, 0x81 ; mov eax, ebx ; syscall
0x00000000001086e2 : mov esi, 0x83480142 ; ret 0x8401
0x000000000002a40a : mov esi, 0x83480142 ; ret 0xf01
0x000000000004be52 : mov esi, 0x83480143 ; ret
0x0000000000129b92 : mov esi, 0x8348014a ; ret 0x4801
0x000000000012d622 : mov esi, 0x8348014b ; ret
0x00000000000e370a : mov esi, 0x83480153 ; ret
0x000000000004d485 : mov esi, 0x8348016b ; ret
0x00000000000f9e8e : mov esi, 0x89000000 ; retf 0xc239
0x000000000010c731 : mov esi, 0x89003d44 ; ret
0x0000000000056554 : mov esi, 0x89410257 ; ret
0x00000000001085ee : mov esi, 0x89480045 ; ret 0xb70f
0x00000000000f972f : mov esi, 0x8948fff2 ; ret 0x8548
0x00000000000e3974 : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000012ab24 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009fd7d : mov esi, 0xe8001179 ; retf 0xf97c
0x00000000000ab9b5 : mov esi, 0xf2390714 ; je 0xab9b7 ; ret
0x00000000000a2caa : mov esi, 0xf480001 ; ret 0x66c3
0x000000000010874c : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000011cc8c : mov esi, 1 ; call r12
0x0000000000084312 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000083d1c : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000154d63 : mov esi, 9 ; call qword ptr [rax]
0x00000000000dab0f : mov esi, dword ptr [rax + 0xd] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000028d18 : mov esi, dword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x000000000011d200 : mov esi, dword ptr [rbx] ; mov r13, rbx ; mov rdi, rbp ; call r12
0x00000000000bedc7 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015f122 : mov esi, dword ptr [rsp + 0x10] ; call 0x11bb86
0x000000000014a0f9 : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000c0ff3 : mov esi, dword ptr [rsp + 0x10] ; call rbx
0x0000000000163d33 : mov esi, dword ptr [rsp + 0x10] ; call rsi
0x00000000001162c9 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 8] ; syscall
0x000000000009d919 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x18 ; jmp rax
0x00000000000c0a73 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000001183ac : mov esi, dword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x000000000009d401 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000282c6 : mov esi, dword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x000000000009ee91 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rdx
0x0000000000150520 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, r12 ; call 0x14cff9
0x000000000002ddb5 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000009db69 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, r13 ; call rax
0x000000000002d174 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002ba58 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002fb73 : mov esi, dword ptr [rsp + 0x58] ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x00000000000e1b16 : mov esi, dword ptr [rsp + 0x60] ; call r12
0x000000000011783d : mov esi, dword ptr [rsp + 8] ; mov eax, 0x127 ; syscall
0x00000000001178fd : mov esi, dword ptr [rsp + 8] ; mov eax, 0x128 ; syscall
0x000000000012363c : mov esi, dword ptr [rsp + 8] ; syscall
0x000000000005d103 : mov esi, eax ; call 0x593a4
0x00000000000f4831 : mov esi, eax ; call 0xf0ab4
0x0000000000074717 : mov esi, eax ; jmp 0x7121e
0x0000000000110080 : mov esi, eax ; mov eax, 0x75 ; syscall
0x00000000001100a9 : mov esi, eax ; mov eax, 0x77 ; syscall
0x000000000012215c : mov esi, eax ; mov rdi, rbp ; call r12
0x0000000000119953 : mov esi, eax ; mov rdx, r8 ; jmp 0x11998c
0x0000000000162743 : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009cf85 : mov esi, ebp ; call 0x99264
0x00000000000a1801 : mov esi, ebp ; call rax
0x0000000000039e7e : mov esi, ebp ; mov edi, r12d ; call 0x1168d7
0x0000000000090026 : mov esi, ebp ; mov edi, r12d ; mov eax, r9d ; syscall
0x0000000000149bf1 : mov esi, ebp ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000489f8 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000159c8c : mov esi, ebp ; mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159ca6 : mov esi, ebp ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000014d244 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000e0133 : mov esi, ebp ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000155ce4 : mov esi, ebx ; call rax
0x00000000000902e9 : mov esi, ebx ; mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000156fe0 : mov esi, ebx ; mov rdi, rbp ; call qword ptr [rax]
0x000000000009ead9 : mov esi, ebx ; mov rdx, r8 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000012477e : mov esi, ecx ; mov edi, r12d ; mov eax, r14d ; syscall
0x0000000000047953 : mov esi, edi ; call r14
0x0000000000117039 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000047b6f : mov esi, edi ; mov rdi, r12 ; call rbx
0x00000000000d3658 : mov esi, edi ; mov rdi, rbp ; call rbx
0x000000000014b251 : mov esi, edi ; mov rdi, rbx ; xor eax, eax ; call rcx
0x00000000000e011e : mov esi, edi ; xor edi, edi ; call rax
0x0000000000150dfe : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000012ef38 : mov esi, edx ; call rax
0x00000000000393ac : mov esi, esi ; add rbx, 1 ; call 0x255d8
0x00000000000a19a6 : mov esi, esi ; call rax
0x00000000000a0b5e : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000011fafa : mov esi, esi ; mov rdi, r15 ; call 0x4bde7
0x000000000015aa90 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000137ce1 : mov esi, esi ; mov rdi, rbx ; call rax
0x000000000014c385 : mov esi, esp ; call qword ptr [rax]
0x000000000009fb21 : mov esi, esp ; call rax
0x0000000000047b31 : mov esi, esp ; call rbx
0x0000000000130161 : mov esi, esp ; mov edi, ebp ; mov eax, 0xe4 ; syscall
0x0000000000048b80 : mov esi, esp ; mov rdi, r13 ; call rax
0x0000000000047b54 : mov esi, esp ; mov rdi, r13 ; call rbx
0x0000000000048b95 : mov esi, esp ; mov rdi, r15 ; call 0x255d7
0x000000000011ec89 : mov esi, esp ; mov rdi, r15 ; call r14
0x000000000014c437 : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a02ae : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000015a962 : mov esi, esp ; mov rdi, rbx ; call rcx
0x00000000001480af : mov esi, esp ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x0000000000119393 : mov esi, esp ; mov rdi, rsp ; call 0x255d7
0x000000000009e7e2 : mov esi, esp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a280 : mov esi, esp ; pop rbx ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000016366e : mov esi, r12d ; call rax
0x000000000009e175 : mov esp, 0x3158d48 ; retf 0x14
0x00000000000a388b : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000af301 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000af331 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af321 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000d89a0 : mov esp, 0x478f8 ; add al, ch ; cmc ; retf
0x000000000014dc2b : mov esp, 0x70088 ; add byte ptr [rdi + rcx - 0x49], al ; retf 0xc148
0x000000000002ce03 : mov esp, 0x8514 ; add byte ptr [rax + 0x39], cl ; retf
0x000000000009b8cd : mov esp, 0x8be80011 ; retf
0x000000000008ce69 : mov esp, 0x8c48348 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a386a : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000ba755 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x000000000018c5c1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18c572
0x000000000018cce1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18cc92
0x000000000018d361 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d312
0x000000000018d7b1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18d752
0x000000000018e051 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e002
0x000000000018e4d1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18e467
0x00000000000b4ef3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000af3fb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000af311 : mov esp, 0xf80148c0 ; ret
0x0000000000187c62 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000c7231 : mov esp, dword ptr [rdx] ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000912f4 : mov esp, eax ; mov rax, r12 ; pop r12 ; ret
0x0000000000046198 : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000091301 : mov esp, ebp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000c23a5 : mov esp, ebp ; setne dl ; jmp 0xc23bd
0x00000000000c4d55 : mov esp, ebp ; setne dl ; jmp 0xc4d6d
0x00000000000c7575 : mov esp, ebp ; setne dl ; jmp 0xc758d
0x00000000000cee15 : mov esp, ebp ; setne dl ; jmp 0xcee2d
0x000000000005e5b1 : mov esp, edx ; ret
0x000000000006c39d : mov esp, esi ; jmp 0x68ddc
0x000000000014c425 : mov esp, esp ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x00000000000ff09e : mov fs, word ptr [rdx - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000197b88 : mov gs, word ptr [rdi - 0x72000006] ; ret
0x000000000005892b : mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x0000000000192ff4 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000013f824 : mov qword ptr [r9], r10 ; ret
0x000000000013f8ec : mov qword ptr [r9], rcx ; ret
0x000000000013f8ca : mov qword ptr [r9], rdi ; ret
0x0000000000089ecc : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008a69b : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000098ae6 : mov qword ptr [rax + 0x20], rdx ; add rsp, 8 ; ret
0x000000000008fe4f : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000089ed0 : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000089f0e : mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008afcc : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000095904 : mov qword ptr [rax + 8], 0 ; ret
0x000000000011758b : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000013f5fc : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000885fd : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000101d6e : mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x000000000009d27f : mov qword ptr [rax], rdi ; ret
0x00000000001221c6 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036d47 : mov qword ptr [rax], rdx ; ret
0x000000000008af97 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000073579 : mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x6f7df
0x0000000000079bae : mov qword ptr [rbp - 0x500], rsi ; jmp rax
0x0000000000119772 : mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1197af
0x000000000007a68b : mov qword ptr [rbp - 0x538], r10 ; call 0x76909
0x0000000000076702 : mov qword ptr [rbp - 0x598], rax ; jmp 0x7291a
0x000000000006e19e : mov qword ptr [rbp - 0x5a0], rcx ; jmp 0x6aca9
0x00000000000604cf : mov qword ptr [rbp - 0xe8], r8 ; call rax
0x00000000000a5148 : mov qword ptr [rbp], 0 ; jmp 0xa5126
0x0000000000033326 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000162e09 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015ab75 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000162dc1 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001026ce : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008fe68 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000965d7 : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c9d5 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000063fd5 : mov qword ptr [rbx], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001632f4 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a02bc : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001564c5 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000a165b : mov qword ptr [rbx], rdi ; call rcx
0x000000000006ec90 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a5b6 : mov qword ptr [rbx], rdx ; mov rdi, qword ptr [rbp + 8] ; call rax
0x00000000000a1732 : mov qword ptr [rbx], rsi ; call rcx
0x000000000017bcf3 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd03 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd13 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd23 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000008daa9 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000017bcb0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017bcd0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017bce0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017bcf0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017bd00 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017bd10 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017bd20 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017bcc0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017bca0 : mov qword ptr [rcx], rdx ; ret
0x00000000000595be : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000bb88c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000bc6fc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba1dc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba1bc : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000be35c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baecf : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000ba21f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba23f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba200 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000015a75a : mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000094a36 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009046e : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000015a81c : mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x000000000015a6e4 : mov qword ptr [rdi + 0x18], rsi ; mov eax, r8d ; ret
0x000000000015a71c : mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x000000000015afec : mov qword ptr [rdi + 0x20], 0 ; ret
0x0000000000094a67 : mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000000bb84c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000bc6bc : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000ba17c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000be31c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb86c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000bc6dc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000ba19c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000be33c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000171037 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170fc7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170f57 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170ee7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb74a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bc5aa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000170e77 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0ca : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000be20a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb76a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000bc5ca : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000170e07 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0da : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000be22a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb78a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000bc5ea : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x0000000000170d97 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0ea : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000be24a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000058b57 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000059547 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000005ae45 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000094a3a : mov qword ptr [rdi + 8], rax ; ret
0x00000000000910b2 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000018dabb : mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x000000000018c66b : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000bf1ee : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bedba : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000016ac74 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016acb2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000594ae : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000016affb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170847 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b1db : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001707c7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b3cb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170747 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b59c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001706b8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b79c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170628 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b99c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170598 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000bb050 : mov qword ptr [rdi - 1], rdx ; ret
0x000000000005942d : mov qword ptr [rdi - 8], r9 ; ret
0x000000000016ac78 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016acb6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000016ae2b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af27 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae73 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001708c7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014d86e : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ab8e9 : mov qword ptr [rdi], r8 ; mov rax, r12 ; pop r12 ; ret
0x00000000000593fc : mov qword ptr [rdi], r9 ; ret
0x00000000000abca5 : mov qword ptr [rdi], rax ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000ab88b : mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x000000000005e5fe : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000045363 : mov qword ptr [rdi], rax ; subsd xmm0, xmm1 ; ret
0x00000000000bb6d6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000bad76 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000ba0a6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba0b6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000ba0c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000ba0d7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000ba0e7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000ba097 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000ba086 : mov qword ptr [rdi], rcx ; ret
0x000000000018f112 : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000abb15 : mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000bb6c3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000bc513 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000bb070 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb090 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb0a0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb0b0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb0c0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb080 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000004537d : mov qword ptr [rdi], rdx ; ret
0x00000000000be173 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000192ff1 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000005ac3a : mov qword ptr [rdi], rsi ; ret
0x0000000000089133 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000014c517 : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014c4f1 : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c4f5 : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000009171c : mov qword ptr [rdx + 0xf0], rcx ; pop rbx ; ret
0x00000000000858ca : mov qword ptr [rdx + 0xf0], rcx ; ret
0x000000000017e0aa : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000179d1a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000017e0ca : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000179d3a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000017e0ea : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000179d5a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000017df7a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000179c4a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000001602c9 : mov qword ptr [rdx], 0 ; ret
0x000000000017df23 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001243e3 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000179bf3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000037580 : mov qword ptr [rdx], rax ; ret
0x000000000008a21b : mov qword ptr [rdx], rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ab7c1 : mov qword ptr [rdx], rcx ; ret
0x00000000000a2a15 : mov qword ptr [rip + 0x14b1ec], rax ; ret
0x000000000009841b : mov qword ptr [rip + 0x151e6e], rax ; ret
0x00000000000983f2 : mov qword ptr [rip + 0x151e8f], rax ; ret
0x00000000000983d2 : mov qword ptr [rip + 0x151ea7], rax ; ret
0x00000000000980b8 : mov qword ptr [rip + 0x152229], rax ; ret
0x00000000000980a0 : mov qword ptr [rip + 0x152239], rax ; ret
0x0000000000098086 : mov qword ptr [rip + 0x152243], rdx ; ret
0x0000000000098048 : mov qword ptr [rip + 0x152249], rax ; ret
0x0000000000098038 : mov qword ptr [rip + 0x152261], rax ; ret
0x0000000000026a8f : mov qword ptr [rip + 0x1c95b2], rax ; ret
0x000000000016424f : mov qword ptr [rip + 0x89912], rsi ; ret
0x000000000013037b : mov qword ptr [rip + 0xbe7f6], rax ; pop rbp ; ret
0x0000000000124c68 : mov qword ptr [rip + 0xc56f1], rbx ; pop rbx ; ret
0x0000000000124c4e : mov qword ptr [rip + 0xc570b], rbx ; pop rbx ; ret
0x000000000014b57a : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004b458 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000004af33 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000009108b : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x000000000011643e : mov qword ptr [rsi + 0x48], rax ; ret
0x000000000014b516 : mov qword ptr [rsi + 8], rax ; ret
0x00000000000586e3 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000090472 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013e7d1 : mov qword ptr [rsi], rdi ; ret
0x000000000013ed0e : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000009a73e : mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x0000000000132ae9 : mov qword ptr [rsp + 0x10], rax ; call 0x8ed47
0x000000000014c2ca : mov qword ptr [rsp + 0x10], rax ; mov rdx, rax ; jmp 0x14c269
0x000000000009aab5 : mov qword ptr [rsp + 0x18], r8 ; call rax
0x0000000000158a3d : mov qword ptr [rsp + 0x18], rax ; xor eax, eax ; call 0x25499
0x00000000000d89ce : mov qword ptr [rsp + 0x30], rdi ; call 0x25497
0x00000000000d353a : mov qword ptr [rsp + 0x50], r12 ; call rbx
0x000000000011dfdd : mov qword ptr [rsp + 8], r8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000009aba4 : mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000009aad0 : mov qword ptr [rsp + 8], rax ; call rdx
0x000000000008c2fe : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000140055 : mov qword ptr [rsp], 0 ; call rax
0x000000000003f61d : mov qword ptr [rsp], r9 ; call 0x3c126
0x0000000000091c1f : mov qword ptr [rsp], rcx ; mov rdi, rbp ; call rax
0x0000000000156382 : mov qword ptr fs:[rax], rdx ; ret
0x00000000001564c4 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000004a5b5 : mov qword ptr fs:[rbx], rdx ; mov rdi, qword ptr [rbp + 8] ; call rax
0x000000000003757f : mov qword ptr fs:[rdx], rax ; ret
0x00000000000bedb9 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000007bba8 : mov r10, qword ptr [rbp - 0x518] ; jmp rax
0x0000000000142440 : mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000002fe39 : mov r10, rcx ; jmp 0x2fdf3
0x000000000002fe38 : mov r10, rcx ; jmp 0x2fdf4
0x000000000002fe89 : mov r10, rcx ; jmp 0x2fe43
0x000000000002fe88 : mov r10, rcx ; jmp 0x2fe44
0x00000000000311a0 : mov r10, rcx ; jmp 0x31153
0x0000000000031400 : mov r10, rcx ; jmp 0x313b3
0x0000000000031465 : mov r10, rcx ; jmp 0x31424
0x0000000000031464 : mov r10, rcx ; jmp 0x31425
0x00000000000314ad : mov r10, rcx ; jmp 0x3146c
0x0000000000112684 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000065fa4 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x0000000000112e74 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x0000000000112f34 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000001230a4 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x0000000000122b64 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000001225a4 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x0000000000123134 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x0000000000123194 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000001231c4 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x0000000000122ec4 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000116234 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000001239f4 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x0000000000123964 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000001234b4 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000e5af4 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000122f54 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x0000000000122e94 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x0000000000122d74 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x0000000000122f84 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x0000000000122fb4 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x00000000001201a4 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x0000000000120144 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x0000000000120024 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x0000000000120054 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000001200b4 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x000000000011ff94 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000011bce4 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000001242c4 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x0000000000122d14 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x000000000007b01b : mov r10, rdx ; jmp rax
0x0000000000170a06 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000016b7d1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000110b24 : mov r10d, ecx ; mov eax, 0x14c ; syscall
0x0000000000115d74 : mov r10d, ecx ; mov eax, 0xdd ; syscall
0x000000000002fe36 : mov r11, rsi ; mov r10, rcx ; jmp 0x2fdf6
0x000000000002fe86 : mov r11, rsi ; mov r10, rcx ; jmp 0x2fe46
0x0000000000170a86 : mov r11d, 0x46f00ff2 ; retf
0x000000000016b5d1 : mov r11d, 0x4f7f0ff3 ; retf
0x00000000000c23a4 : mov r12, r13 ; setne dl ; jmp 0xc23be
0x00000000000c4d54 : mov r12, r13 ; setne dl ; jmp 0xc4d6e
0x00000000000c7574 : mov r12, r13 ; setne dl ; jmp 0xc758e
0x00000000000cee14 : mov r12, r13 ; setne dl ; jmp 0xcee2e
0x000000000006c39c : mov r12, r14 ; jmp 0x68ddd
0x00000000000912f3 : mov r12, rax ; mov rax, r12 ; pop r12 ; ret
0x000000000014c424 : mov r12, rsp ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000048bf4 : mov r13, r15 ; add r15, rbx ; call rax
0x0000000000047b18 : mov r13, rax ; mov rdi, r12 ; call rbx
0x000000000011d202 : mov r13, rbx ; mov rdi, rbp ; call r12
0x00000000000fca11 : mov r13, rdi ; add rdx, rsi ; jmp rdx
0x0000000000027f91 : mov r13b, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014afa8 : mov r13d, 3 ; call 0x37a58
0x0000000000119952 : mov r14, r8 ; mov rdx, r8 ; jmp 0x11998d
0x0000000000074716 : mov r14d, eax ; jmp 0x7121f
0x000000000010890b : mov r15, qword ptr [r15 + 0x18] ; call 0x25356
0x0000000000145f0a : mov r15, rax ; mov rdx, qword ptr [rdx + r14*8] ; call 0xa21a9
0x000000000011d2d2 : mov r15d, r13d ; call rax
0x0000000000101d6b : mov r8, qword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x00000000001018f1 : mov r8, qword ptr [rip + 0xe85f0] ; movsxd rcx, edx ; jmp 0x10190e
0x000000000011b943 : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000001564f8 : mov r8, rax ; mov rax, r8 ; pop rbx ; ret
0x00000000000889ad : mov r8, rbp ; mov edx, dword ptr [rbx] ; jmp 0x88985
0x000000000011fe4a : mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x0000000000119774 : mov r8b, 0x48 ; mov edx, eax ; jmp 0x1197ad
0x00000000000ed4e4 : mov r8b, 0xe8 ; jle 0xed4e6 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000110e90 : mov r8d, 0x10c ; syscall
0x00000000000cb736 : mov r8d, 0xfd83949 ; xchg eax, ebx ; ret
0x0000000000057e90 : mov r8d, 0xffffffff ; mov eax, r8d ; ret
0x000000000008fdd0 : mov r8d, 1 ; mov eax, r8d ; ret
0x0000000000166784 : mov r8d, dword ptr [rax] ; jmp 0x166750
0x000000000008b0b2 : mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000036e2b : mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000166783 : mov r8d, dword ptr fs:[rax] ; jmp 0x166751
0x0000000000116e5b : mov r8d, eax ; mov eax, 0x10 ; syscall
0x0000000000097fe3 : mov r8d, eax ; mov eax, 0x23 ; syscall
0x0000000000118491 : mov r8d, eax ; mov eax, 0x4a ; syscall
0x0000000000118551 : mov r8d, eax ; mov eax, 0x4b ; syscall
0x0000000000111c59 : mov r8d, eax ; mov eax, 0x55 ; syscall
0x0000000000046790 : mov r8d, eax ; mov eax, 0x82 ; syscall
0x0000000000111ad1 : mov r8d, eax ; mov eax, 3 ; syscall
0x00000000001229c7 : mov r8d, eax ; mov eax, r8d ; ret
0x00000000001112a1 : mov r8d, eax ; mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000000ef144 : mov r8d, ebx ; mov rdi, r15 ; call 0xebb58
0x00000000000f770d : mov r8d, r12d ; mov rcx, r13 ; call 0xf3958
0x000000000006c399 : mov r8d, r15d ; mov r12, r14 ; jmp 0x68de0
0x0000000000082440 : mov r9, qword ptr [rbp - 0x508] ; jmp rax
0x00000000000f1a02 : mov r9, qword ptr [rip + 0xf84df] ; movsxd rcx, edx ; jmp 0xf1a3c
0x00000000000ce15c : mov r9, qword ptr [rsp + 0x10] ; call r14
0x000000000011b946 : mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000154d60 : mov r9, rbp ; mov esi, 9 ; call qword ptr [rax]
0x0000000000081688 : mov r9, rsi ; jmp rax
0x000000000003119d : mov r9, rsi ; mov r10, rcx ; jmp 0x31156
0x00000000000313fd : mov r9, rsi ; mov r10, rcx ; jmp 0x313b6
0x00000000000314aa : mov r9, rsi ; mov r10, rcx ; jmp 0x3146f
0x000000000004630e : mov rax, -1 ; ret
0x0000000000046470 : mov rax, 0xf ; syscall
0x00000000000d2cf0 : mov rax, 1 ; ret
0x00000000000d2d00 : mov rax, 2 ; ret
0x00000000000d2d10 : mov rax, 3 ; ret
0x00000000000d2d20 : mov rax, 4 ; ret
0x00000000000d2d30 : mov rax, 5 ; ret
0x00000000000d2d40 : mov rax, 6 ; ret
0x00000000000d2d50 : mov rax, 7 ; ret
0x0000000000097f65 : mov rax, qword ptr [0x10] ; ret
0x0000000000097e6e : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x97e82 ; call rax
0x0000000000125157 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000125147 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000014949a : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000117f0b : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x117f1e ; ret
0x0000000000120230 : mov rax, qword ptr [rax + 0x1a0] ; ret
0x0000000000162d32 : mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x000000000008c9d4 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000012ffdf : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000152fd0 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000153910 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120228 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009588f : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x95891 ; ret
0x000000000012020a : mov rax, qword ptr [rax + 8] ; ret
0x0000000000097ede : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x97ef2 ; call rax
0x0000000000033d1d : mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x33d31 ; call rax
0x000000000019b947 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x19b95b ; call rax
0x00000000000372c8 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000036d92 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000003594f : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004a6ca : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014447c : mov rax, qword ptr [rax] ; ret
0x000000000011f306 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x11f378 ; call rax
0x0000000000097de6 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x97df8 ; call rax
0x000000000009c399 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x9c3ab ; call rax
0x00000000000966b8 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x966b8 ; ret
0x00000000001076a6 : mov rax, qword ptr [rbp - 0x1e0] ; call rax
0x000000000011d2ce : mov rax, qword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000094b90 : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008fe64 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000952ec : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000015643d : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x156459 ; pop rbx ; ret
0x0000000000179bf0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015a6a4 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1054 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000019ba44 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x19ba5d ; call rax
0x000000000008feb8 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008fd88 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000969c4 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000159005 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000159978 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000159100 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000014c380 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000966c5 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000979cf : mov rax, qword ptr [rdi] ; mov rdi, r8 ; jmp rax
0x0000000000037256 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000035910 : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000007433d : mov rax, qword ptr [rdx] ; jmp 0x705e2
0x00000000000a1981 : mov rax, qword ptr [rip + 0x1485c8] ; call qword ptr [rax]
0x00000000000a17a0 : mov rax, qword ptr [rip + 0x1487a9] ; call qword ptr [rax]
0x00000000000a16d0 : mov rax, qword ptr [rip + 0x148879] ; call qword ptr [rax]
0x000000000009aa88 : mov rax, qword ptr [rip + 0x14f331] ; xor edi, edi ; call qword ptr [rax]
0x000000000009aa42 : mov rax, qword ptr [rip + 0x14f377] ; call qword ptr [rax]
0x00000000000969a4 : mov rax, qword ptr [rip + 0x154bf5] ; ret
0x0000000000032af4 : mov rax, qword ptr [rip + 0x1b9b4d] ; ret
0x0000000000029134 : mov rax, qword ptr [rip + 0x1c6d7d] ; ret
0x0000000000029124 : mov rax, qword ptr [rip + 0x1c6d9d] ; ret
0x000000000015fe60 : mov rax, qword ptr [rip + 0x8b629] ; call qword ptr [rax]
0x000000000015f853 : mov rax, qword ptr [rip + 0x8bc36] ; call qword ptr [rax]
0x0000000000162f30 : mov rax, qword ptr [rip + 0x8cf51] ; call qword ptr [rax]
0x0000000000035930 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000271dc : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e9 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa48 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7eb : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000037a15 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000004b574 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000124120 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x000000000011ce28 : mov rax, qword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x000000000013ac05 : mov rax, qword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x000000000012358f : mov rax, qword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f423 : mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000123655 : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000125a96 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000125af7 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000048a8b : mov rax, qword ptr [rsp] ; call rax
0x000000000013b8ae : mov rax, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x0000000000097f64 : mov rax, qword ptr fs:[0x10] ; ret
0x000000000014447b : mov rax, qword ptr fs:[rax] ; ret
0x000000000011ce27 : mov rax, qword ptr ss:[rsp + 8] ; mov rdi, r13 ; call rax
0x000000000005e482 : mov rax, r10 ; pop rbx ; ret
0x000000000005e417 : mov rax, r10 ; ret
0x00000000000a3d2f : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000445f3 : mov rax, r11 ; ret
0x00000000000d4d85 : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a3548 : mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000037b78 : mov rax, r12 ; pop r12 ; ret
0x000000000011d921 : mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000011cca8 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000033483 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913a5 : mov rax, r12 ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000004aaa2 : mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000006580e : mov rax, r12 ; pop rbx ; pop r12 ; ret
0x0000000000083ba0 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009138b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000037ada : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c41e : mov rax, r12 ; pop rdx ; pop r12 ; ret
0x0000000000144a50 : mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2b98 : mov rax, r13 ; pop r12 ; pop r13 ; ret
0x00000000000bfdb0 : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bfd55 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1c25 : mov rax, r15 ; call rax
0x00000000000d7bdf : mov rax, r8 ; add rsp, 8 ; ret
0x000000000013f999 : mov rax, r8 ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000011a0f5 : mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000009d64a : mov rax, r8 ; pop r12 ; pop r13 ; ret
0x0000000000098835 : mov rax, r8 ; pop r12 ; ret
0x000000000009d6b6 : mov rax, r8 ; pop r13 ; ret
0x000000000013eaf0 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000088986 : mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000009c753 : mov rax, r8 ; pop rbp ; ret
0x00000000000a012e : mov rax, r8 ; pop rbx ; pop r12 ; ret
0x00000000000857e4 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009ce61 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049f8b : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000009c55c : mov rax, r8 ; pop rbx ; ret
0x0000000000049f80 : mov rax, r8 ; ret
0x000000000018bee0 : mov rax, r8 ; vzeroupper ; ret
0x000000000003bef5 : mov rax, r9 ; pop r12 ; ret
0x000000000007d247 : mov rax, r9 ; pop r14 ; ret
0x000000000003bec7 : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab88e : mov rax, r9 ; ret
0x000000000009266d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090a9e : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a5de9 : mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x00000000000909e3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6e27 : mov rax, rbx ; sub rax, r9 ; add r10, rax ; jmp 0xa6de8
0x0000000000065886 : mov rax, rbx ; test r8d, r8d ; jne 0x65899 ; pop rbx ; ret
0x000000000004a644 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000ac08c : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005e601 : mov rax, rdi ; ret
0x0000000000132d4d : mov rax, rdi ; sar rax, 6 ; ret
0x000000000018ddb0 : mov rax, rdi ; vzeroupper ; ret
0x000000000013fd12 : mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000059bd4 : mov rax, rdx ; pop rbx ; ret
0x0000000000058d25 : mov rax, rdx ; ret
0x0000000000137c31 : mov rax, rsi ; pop rbx ; ret
0x000000000004619a : mov rbp, r9 ; nop ; jmp rdx
0x00000000000889db : mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x25429
0x0000000000034fd9 : mov rbp, rdi ; test rax, rax ; je 0x34feb ; call rax
0x000000000010ac39 : mov rbp, rdx ; jmp 0x10ac05
0x00000000000e6508 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e1658 : mov rbx, r13 ; mov rdi, rbp ; call r12
0x00000000001588be : mov rbx, rax ; call 0x25335
0x00000000000d9140 : mov rbx, rax ; call 0x253b5
0x00000000000889df : mov rbx, rsi ; call 0x25425
0x000000000011c904 : mov rbx, rsi ; je 0x11c916 ; pop rbx ; ret
0x0000000000107895 : mov rcx, qword ptr [r12] ; call rax
0x00000000000ba080 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000153cbf : mov rcx, qword ptr [rsp + 0x10] ; mov rdi, r15 ; call rcx
0x000000000015050e : mov rcx, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rcx
0x0000000000149cb2 : mov rcx, qword ptr [rsp + 8] ; mov rdi, rbp ; call rcx
0x000000000014b15a : mov rcx, qword ptr [rsp] ; xor eax, eax ; mov rdi, rbx ; call rcx
0x00000000000a59a0 : mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59ca
0x00000000000cda35 : mov rcx, r12 ; mov rdx, r13 ; call rbx
0x0000000000155cdd : mov rcx, r12 ; mov rdx, rbp ; mov rsi, rbx ; call rax
0x00000000000f7710 : mov rcx, r13 ; call 0xf3955
0x00000000001480b4 : mov rcx, r13 ; call r10
0x0000000000147cb9 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008d88f : mov rcx, r14 ; mov rdi, r15 ; call r12
0x000000000010d7b0 : mov rcx, rax ; mov rdi, qword ptr [r14] ; call 0x10a288
0x00000000000ab7d8 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000fb3fe : mov rcx, rbx ; call 0xf7e15
0x00000000000fb3fd : mov rcx, rbx ; call 0xf7e16
0x0000000000149bf3 : mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000bed95 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011da81 : mov rdi, qword ptr [r12] ; call rbx
0x000000000019a7ab : mov rdi, qword ptr [r13 + 0x10] ; add rdi, rbp ; call r12
0x000000000011daeb : mov rdi, qword ptr [r13] ; call rbx
0x000000000010d7b3 : mov rdi, qword ptr [r14] ; call 0x10a285
0x000000000011dbab : mov rdi, qword ptr [r14] ; call rbx
0x000000000003fef2 : mov rdi, qword ptr [r15 + 0x10] ; call 0x3c126
0x000000000003fee9 : mov rdi, qword ptr [r15 + 0x18] ; call 0x3c126
0x000000000003fefb : mov rdi, qword ptr [r15 + 8] ; call 0x3c126
0x000000000011dd1c : mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfe2 : mov rdi, qword ptr [r8] ; call rbx
0x000000000004a5b9 : mov rdi, qword ptr [rbp + 8] ; call rax
0x00000000001081ff : mov rdi, qword ptr [rbp - 0x188] ; call 0x144c89
0x0000000000164d46 : mov rdi, qword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0x164d6f
0x00000000000e9ca6 : mov rdi, qword ptr [rbp - 0x4d8] ; mov rdx, rax ; jmp 0xe9ccf
0x00000000000290e2 : mov rdi, qword ptr [rbp - 0x68] ; call 0x25356
0x00000000000f8863 : mov rdi, qword ptr [rbp - 0x70] ; call 0x25356
0x00000000000290eb : mov rdi, qword ptr [rbp - 0x80] ; call 0x25356
0x0000000000049066 : mov rdi, qword ptr [rbp - 0x88] ; call 0x25359
0x0000000000039050 : mov rdi, qword ptr [rbp - 0x90] ; call 0x25359
0x000000000011cd8f : mov rdi, qword ptr [rbp] ; call rbx
0x00000000000a1a40 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000a19a1 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r14 ; call rax
0x00000000000e88f4 : mov rdi, qword ptr [rbx + r14*8] ; call 0x25356
0x00000000000f8855 : mov rdi, qword ptr [rbx - 0x20] ; call 0x25356
0x0000000000154b38 : mov rdi, qword ptr [rbx] ; jmp 0x154b04
0x00000000000a17fc : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000085b39 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000085afd : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000012ef33 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000011465f : mov rdi, qword ptr [rsp + 0x20] ; call 0xe10b7
0x000000000002eded : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002d86b : mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002ddb9 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002d178 : mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002fb77 : mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x000000000002acf2 : mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002c242 : mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002ba5c : mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000002b471 : mov rdi, qword ptr [rsp + 0x60] ; call r15
0x0000000000094bb5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000011dcc2 : mov rdi, qword ptr ds:[r14] ; call rbx
0x0000000000150524 : mov rdi, r12 ; call 0x14cff5
0x00000000000fc371 : mov rdi, r12 ; call 0xf8da5
0x000000000014bfe9 : mov rdi, r12 ; call qword ptr [rbx]
0x00000000000489fa : mov rdi, r12 ; call rax
0x0000000000047b1b : mov rdi, r12 ; call rbx
0x0000000000150513 : mov rdi, r12 ; call rcx
0x000000000009ee95 : mov rdi, r12 ; call rdx
0x00000000000c0919 : mov rdi, r12 ; lea r9, [rsp + 0x30] ; call rbx
0x0000000000049e23 : mov rdi, r12 ; mov eax, 0xca ; syscall
0x00000000000c0fef : mov rdi, r12 ; mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x00000000000c0a6f : mov rdi, r12 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000009cf81 : mov rdi, r12 ; mov rsi, rbp ; call 0x99268
0x0000000000109052 : mov rdi, r13 ; call 0x25355
0x0000000000039238 : mov rdi, r13 ; call 0x254a5
0x00000000000d92ff : mov rdi, r13 ; call 0x255a5
0x000000000007e003 : mov rdi, r13 ; call 0x8a245
0x0000000000147cbc : mov rdi, r13 ; call r12
0x0000000000048b82 : mov rdi, r13 ; call rax
0x0000000000047b56 : mov rdi, r13 ; call rbx
0x000000000004a40c : mov rdi, r13 ; mov eax, 0xca ; syscall
0x000000000009a73b : mov rdi, r13 ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x00000000000a126b : mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000109094 : mov rdi, r14 ; call 0x25355
0x00000000000a19ce : mov rdi, r14 ; call rax
0x0000000000049c2c : mov rdi, r14 ; mov eax, 0xca ; syscall
0x000000000012dfb0 : mov rdi, r15 ; call 0x12a1d5
0x0000000000048b97 : mov rdi, r15 ; call 0x255d5
0x000000000011fafc : mov rdi, r15 ; call 0x4bde5
0x00000000000ef147 : mov rdi, r15 ; call 0xebb55
0x000000000008d892 : mov rdi, r15 ; call r12
0x000000000011ec8b : mov rdi, r15 ; call r14
0x000000000008c303 : mov rdi, r15 ; call rax
0x0000000000153cc4 : mov rdi, r15 ; call rcx
0x0000000000048a28 : mov rdi, r15 ; imul rdx, rbp ; call 0x25509
0x000000000009f2eb : mov rdi, r15 ; mov eax, 0xca ; syscall
0x0000000000108908 : mov rdi, r15 ; mov r15, qword ptr [r15 + 0x18] ; call 0x25359
0x00000000000e1b12 : mov rdi, r15 ; mov rsi, qword ptr [rsp + 0x60] ; call r12
0x00000000000979d2 : mov rdi, r8 ; jmp rax
0x0000000000149497 : mov rdi, r8 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000004a2d8 : mov rdi, r9 ; call r8
0x0000000000122323 : mov rdi, rax ; mov eax, 0x3c ; syscall
0x00000000000463b3 : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000005d0ff : mov rdi, rax ; mov rsi, rax ; call 0x593a8
0x000000000009be7f : mov rdi, rbp ; call 0x980d5
0x000000000014c439 : mov rdi, rbp ; call qword ptr [rax]
0x00000000000e165b : mov rdi, rbp ; call r12
0x0000000000027270 : mov rdi, rbp ; call rax
0x00000000000d365a : mov rdi, rbp ; call rbx
0x0000000000149cb7 : mov rdi, rbp ; call rcx
0x000000000014a67b : mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000011059c : mov rdi, rbp ; mov eax, 0x135 ; syscall
0x0000000000111d88 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000004a07a : mov rdi, rbp ; mov eax, 0xca ; syscall
0x000000000011baec : mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000011d91e : mov rdi, rbp ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000cdbb7 : mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008a283 : mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000009d6c3 : mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a78c : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000009ce30 : mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014b39c : mov rdi, rbp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000159c8e : mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159ca8 : mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000011cc74 : mov rdi, rbp ; xor esi, esi ; call r12
0x00000000000c109f : mov rdi, rbx ; call 0xcd2b5
0x00000000000285c4 : mov rdi, rbx ; call r12
0x0000000000029624 : mov rdi, rbx ; call r14
0x00000000000e91db : mov rdi, rbx ; call r15
0x0000000000084317 : mov rdi, rbx ; call r8
0x0000000000083d21 : mov rdi, rbx ; call rax
0x000000000014b160 : mov rdi, rbx ; call rcx
0x0000000000028d1b : mov rdi, rbx ; call rsi
0x000000000009dff0 : mov rdi, rbx ; mov eax, 0xca ; syscall
0x00000000001480b1 : mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000014b253 : mov rdi, rbx ; xor eax, eax ; call rcx
0x0000000000122123 : mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000000a1a6d : mov rdi, rsi ; call rax
0x0000000000119395 : mov rdi, rsp ; call 0x255d5
0x000000000013fd27 : mov rdx, -1 ; ret
0x000000000008fe4b : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000033f9a : mov rdx, qword ptr [rax + r15*8] ; test rdx, rdx ; je 0x33fae ; call rdx
0x00000000000271d9 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000006e23f : mov rdx, qword ptr [rcx] ; jmp 0x6aca8
0x0000000000058145 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000a1ad4 : mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0xa1ad9 ; ret
0x0000000000145f0d : mov rdx, qword ptr [rdx + r14*8] ; call 0xa21a6
0x000000000016ade0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000ba070 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000abbe8 : mov rdx, qword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x0000000000150729 : mov rdx, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call rdx
0x0000000000115cc5 : mov rdx, r12 ; mov eax, 0x10f ; syscall
0x0000000000146338 : mov rdx, r12 ; mov eax, 0x81 ; syscall
0x000000000014d240 : mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000a2178 : mov rdx, r12 ; pop r12 ; pop r13 ; ret
0x00000000000cda38 : mov rdx, r13 ; call rbx
0x000000000011cd19 : mov rdx, r13 ; mov esi, 1 ; call r12
0x00000000000a0481 : mov rdx, r13 ; mov rdi, r12 ; call rax
0x000000000014d105 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012f552 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012fa62 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012fb30 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x0000000000163a1c : mov rdx, r14 ; mov esi, r12d ; call rax
0x0000000000048a88 : mov rdx, r14 ; mov rax, qword ptr [rsp] ; call rax
0x00000000000489f4 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000012f4ed : mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x00000000000a0b5a : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000137cdd : mov rdx, r15 ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x000000000012f83a : mov rdx, r15 ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x0000000000119955 : mov rdx, r8 ; jmp 0x11998a
0x00000000000a59a3 : mov rdx, r8 ; jmp 0xa59c7
0x000000000009eadb : mov rdx, r8 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000119a3a : mov rdx, r9 ; jmp 0x119a6b
0x0000000000119776 : mov rdx, rax ; jmp 0x1197ab
0x000000000011fdf2 : mov rdx, rax ; jmp 0x11fe0b
0x000000000011fdf1 : mov rdx, rax ; jmp 0x11fe0c
0x000000000011fe30 : mov rdx, rax ; jmp 0x11fe43
0x000000000014c2cf : mov rdx, rax ; jmp 0x14c264
0x0000000000152dbf : mov rdx, rax ; jmp 0x152d84
0x0000000000164d4d : mov rdx, rax ; jmp 0x164d68
0x00000000000659b0 : mov rdx, rax ; jmp 0x659c9
0x00000000000a5449 : mov rdx, rax ; jmp 0xa5464
0x00000000000e9cad : mov rdx, rax ; jmp 0xe9cc8
0x00000000000d913d : mov rdx, rax ; mov rbx, rax ; call 0x253b8
0x000000000012dd92 : mov rdx, rax ; xor eax, eax ; call 0x12a887
0x000000000016366b : mov rdx, rbp ; mov esi, r12d ; call rax
0x0000000000048432 : mov rdx, rbp ; mov rdi, r12 ; call rbx
0x00000000000a126e : mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000047b2d : mov rdx, rbp ; mov rsi, r12 ; call rbx
0x0000000000047b50 : mov rdx, rbp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000047b6b : mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000155ce0 : mov rdx, rbp ; mov rsi, rbx ; call rax
0x0000000000164eef : mov rdx, rcx ; jmp 0x164eca
0x00000000000a0a4f : mov rdx, rcx ; jmp 0xa0a0a
0x00000000000e9e4e : mov rdx, rcx ; jmp 0xe9e2a
0x00000000000bf104 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000115faf : mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000116ce0 : mov rdx, rsp ; mov eax, 0x10 ; syscall
0x000000000015f121 : mov rsi, qword ptr [r12 + 0x10] ; call 0x11bb87
0x0000000000028d17 : mov rsi, qword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x000000000014a0f8 : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000c0ff2 : mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x0000000000163d32 : mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x00000000001162c8 : mov rsi, qword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 8] ; syscall
0x000000000009d918 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 0x18 ; jmp rax
0x00000000000c0a72 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000001183ab : mov rsi, qword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x000000000009d400 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000282c5 : mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x000000000009ee90 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rdx
0x000000000009db68 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, r13 ; call rax
0x00000000000e1b15 : mov rsi, qword ptr [rsp + 0x60] ; call r12
0x000000000012363b : mov rsi, qword ptr [rsp + 8] ; syscall
0x000000000009fb20 : mov rsi, r12 ; call rax
0x0000000000047b30 : mov rsi, r12 ; call rbx
0x0000000000048b7f : mov rsi, r12 ; mov rdi, r13 ; call rax
0x0000000000047b53 : mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000048b94 : mov rsi, r12 ; mov rdi, r15 ; call 0x255d8
0x000000000011ec88 : mov rsi, r12 ; mov rdi, r15 ; call r14
0x000000000014c436 : mov rsi, r12 ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a02ad : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000015a961 : mov rsi, r12 ; mov rdi, rbx ; call rcx
0x0000000000119392 : mov rsi, r12 ; mov rdi, rsp ; call 0x255d8
0x0000000000119391 : mov rsi, r12 ; mov rdi, rsp ; call 0x255d9
0x000000000009e7e1 : mov rsi, r12 ; pop r12 ; pop r13 ; jmp rax
0x0000000000039e7d : mov rsi, r13 ; mov edi, r12d ; call 0x1168d8
0x0000000000090025 : mov rsi, r13 ; mov edi, r12d ; mov eax, r9d ; syscall
0x00000000000489f7 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000159c8b : mov rsi, r13 ; mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159ca5 : mov rsi, r13 ; mov rdi, rbp ; xor eax, eax ; call rcx
0x00000000000393ab : mov rsi, r14 ; add rbx, 1 ; call 0x255d9
0x00000000000a19a5 : mov rsi, r14 ; call rax
0x00000000000a0b5d : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011faf9 : mov rsi, r14 ; mov rdi, r15 ; call 0x4bde8
0x000000000015aa8f : mov rsi, r14 ; mov rdi, rbp ; call r12
0x0000000000137ce0 : mov rsi, r14 ; mov rdi, rbx ; call rax
0x0000000000047952 : mov rsi, r15 ; call r14
0x0000000000047b6e : mov rsi, r15 ; mov rdi, r12 ; call rbx
0x00000000000d3657 : mov rsi, r15 ; mov rdi, rbp ; call rbx
0x000000000014b250 : mov rsi, r15 ; mov rdi, rbx ; xor eax, eax ; call rcx
0x00000000000f4830 : mov rsi, r8 ; call 0xf0ab5
0x000000000012215b : mov rsi, r8 ; mov rdi, rbp ; call r12
0x000000000012477d : mov rsi, r9 ; mov edi, r12d ; mov eax, r14d ; syscall
0x000000000005d102 : mov rsi, rax ; call 0x593a5
0x0000000000162742 : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009cf84 : mov rsi, rbp ; call 0x99265
0x00000000000a1800 : mov rsi, rbp ; call rax
0x00000000000a1088 : mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000014d243 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000155ce3 : mov rsi, rbx ; call rax
0x00000000000902e8 : mov rsi, rbx ; mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000156fdf : mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000e011d : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000150dfd : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000012ef37 : mov rsi, rdx ; call rax
0x000000000014c384 : mov rsi, rsp ; call qword ptr [rax]
0x0000000000159d91 : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000046197 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000005e5b0 : mov rsp, rdx ; ret
0x0000000000193019 : mov word ptr [r9 - 2], cx ; ret
0x00000000000abc4b : mov word ptr [rax + 4], dx ; ret
0x00000000000ba890 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000117475 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x00000000000abc00 : mov word ptr [rax], si ; ret
0x0000000000045c16 : mov word ptr [rbp - 0x7f000000], es ; sti ; push rax ; ret
0x00000000000ce6d8 : mov word ptr [rbx], fs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000005b4b8 : mov word ptr [rbx], gs ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000017bc82 : mov word ptr [rcx + 4], dx ; ret
0x000000000017bcc3 : mov word ptr [rcx + 8], dx ; ret
0x00000000000a28b0 : mov word ptr [rcx + rax], es ; cmovne rax, rdx ; ret
0x000000000017bc50 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc40 : mov word ptr [rcx], dx ; ret
0x00000000000bb7cc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc63c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000ba11c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000be29c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000116f5b : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000bb8d4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000bc744 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000ba204 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000be3a4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000001712d7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000abd23 : mov word ptr [rdi + 4], ax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000004b4e8 : mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000000bb698 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000bc4e8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000abb86 : mov word ptr [rdi + 4], dx ; ret
0x00000000000be148 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bc54a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bb6ea : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000ba09a : mov word ptr [rdi + 8], dx ; ret
0x00000000000be1aa : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000018da7c : mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x00000000000bf1fe : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000bedd8 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000016b37c : mov word ptr [rdi - 2], cx ; ret
0x000000000016b194 : mov word ptr [rdi - 2], dx ; ret
0x000000000016b378 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000ba023 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bad16 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001936e6 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bf203 : mov word ptr [rdi], cx ; ret
0x000000000018f128 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000abb30 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000bb653 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000bc493 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000ba013 : mov word ptr [rdi], dx ; ret
0x000000000018c623 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000be0f3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000abcc0 : mov word ptr [rdi], si ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000193016 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000beddd : mov word ptr [rdi], si ; ret
0x000000000010f9d0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000150325 : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000017dff8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b6bed : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b6c71 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000017dfa3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b6b88 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000125135 : mov word ptr [rdx], ax ; ret
0x0000000000115a79 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000004b49a : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001936e9 : mov word ptr [rsi - 2], cx ; ret
0x000000000010f9b7 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000045148 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005adab : mov word ptr [rsp - 0x10], si ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bedd7 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000018edab : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000063014 : movabs al, byte ptr [0x8304768b41000000] ; ret
0x0000000000063040 : movabs al, byte ptr [0x8324348b41000000] ; ret
0x0000000000074871 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000007157e : movabs al, byte ptr [0x8948c08548fffffa] ; ret
0x00000000000aa92a : movabs al, byte ptr [0x8949c9634dfffffc] ; retf
0x000000000015a933 : movabs al, byte ptr [0x8c48348c031fff2] ; ret
0x0000000000049629 : movabs al, byte ptr [0xe801788d483d00c6] ; retf 0xfdbe
0x00000000000f62bd : movabs al, byte ptr [0xf6000000c8928b48] ; ret 0x7540
0x0000000000074712 : movabs al, byte ptr [0xfce9c68941fffffa] ; retf 0xffff
0x00000000000d3027 : movabs dword ptr [0xc14800a3d70a3d70], eax ; retf 0x4804
0x00000000000392b5 : movabs eax, dword ptr [0x148cf8948fffffe] ; retf
0x000000000018db00 : movabs eax, dword ptr [0x77f8c5e0075c7f7e] ; ret
0x000000000018db85 : movabs eax, dword ptr [0x77f8c5f007447f7a] ; ret
0x000000000018dae0 : movabs eax, dword ptr [0x77f8c5f0075c7f7a] ; ret
0x0000000000199d0f : movabs eax, dword ptr [0x8948f88945fffff5] ; retf
0x00000000001872e5 : movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x000000000015182b : movabs eax, dword ptr [0xfa1e0ff390fffe15] ; ret
0x00000000000454b4 : movapd xmm0, xmm1 ; ret
0x00000000000454b5 : movaps xmm0, xmm1 ; ret
0x00000000000d4e72 : movaps xmmword ptr [rax], xmm0 ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000169903 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001699ad : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012229c : movaps xmmword ptr [rsp + 0x10], xmm0 ; syscall
0x000000000010fbc6 : movaps xmmword ptr [rsp + 0xa0], xmm0 ; syscall
0x00000000000463a0 : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x000000000004551f : movd mm0, eax ; ret
0x00000000000453f6 : movd mm0, ecx ; ret
0x0000000000045310 : movd mm0, edx ; ret
0x00000000000456b8 : movd mm0, esi ; ret
0x000000000004551e : movd mm0, rax ; ret
0x00000000000453f5 : movd mm0, rcx ; ret
0x000000000004530f : movd mm0, rdx ; ret
0x000000000004587b : movd xmm0, eax ; ret
0x00000000000456b7 : movd xmm0, esi ; ret
0x0000000000045e94 : movdqa xmm0, xmm2 ; pop rbp ; ret
0x0000000000045a1d : movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x00000000000ba0f0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013f9df : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000010f954 : movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9a4 : movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000bb98d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000bc7fd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000bafd0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000ba2bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000bca73 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000bb223 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x0000000000170faf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170f3f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170ecf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170e5f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb92d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000bc79d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000ba25d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000170def : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb94d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000bc7bd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000ba27d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000170d7f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb96d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000bc7dd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000ba29d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000017139f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017132f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001712bf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017124f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001711df : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017116f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001710ff : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017108f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017101f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bf171 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000017050b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000017057b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000bb0d0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000bc604 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb7a4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000badf7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba104 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba147 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba137 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba1b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba178 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba198 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba118 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba2b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba259 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba279 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba299 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba0f4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000be264 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000170d84 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6cd2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b6cf2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b6d12 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b5c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b06 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b6cd3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b6cf3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b6d13 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b5d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b6b07 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000045e04 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000000966f8 : movntps xmmword ptr [rax + 0x18], xmm2 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000045e95 : movq mm0, mm2 ; pop rbp ; ret
0x00000000000ba0f1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013f9e0 : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x0000000000045a1e : movq mm0, qword ptr [rsp - 0x38] ; ret
0x000000000010f955 : movq mm7, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9a5 : movq mm7, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000bb98e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000bc7fe : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000bafd1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000ba2be : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000be45e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bca74 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000bb224 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000be4d4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000170fb0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170f40 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170ed0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000170e60 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb92e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000bc79e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000ba25e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000be3fe : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000170df0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb94e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000bc7be : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000ba27e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000be41e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000170d80 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb96e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000bc7de : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000ba29e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000be43e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000001713a0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171330 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001712c0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171250 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001711e0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171170 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171100 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171090 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000171020 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bf0cd : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bf172 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000017050c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000017057c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170cb7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170c37 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170ba7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170b27 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170aa7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170a27 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001709a7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170927 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001708a7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170827 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001707a7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170727 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170697 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170607 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000170577 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000bb0d1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000bc605 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb7a5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000badf8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000ba105 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba158 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bae4b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000ba148 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba138 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba1b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba179 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba199 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba119 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba2ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba25a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba27a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba29a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba0f5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000be265 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000170d85 : movq qword ptr [rdi], mm1 ; ret
0x000000000004551d : movq xmm0, rax ; ret
0x00000000000453f4 : movq xmm0, rcx ; ret
0x000000000004530e : movq xmm0, rdx ; ret
0x00000000000bed0e : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000147418 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000014f6f8 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000bed00 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000009a308 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 7
0x000000000003f678 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000011db47 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11db57 ; call rbx
0x00000000000a4e34 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000007ea7e : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x00000000001555c3 : movsd dword ptr [rdi], dword ptr [rsi] ; or dword ptr [rax], eax ; syscall
0x0000000000059462 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000161f47 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 5
0x00000000000a1037 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000012f4ef : movsd qword ptr [rbp - 0x78], xmm5 ; call rax
0x00000000000d346c : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000162749 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000456b3 : movss dword ptr [rdi], xmm0 ; movd xmm0, esi ; ret
0x000000000019a748 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000012ab23 : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a24d5 : movsx eax, dl ; ret
0x00000000000ab9b4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xab9b8 ; ret
0x0000000000043cbd : movsxd r10, dword ptr [r15 + r10*4] ; add r10, r15 ; jmp r10
0x0000000000197745 : movsxd r12, dword ptr [rdi + r12*4] ; add rdi, r12 ; jmp rdi
0x0000000000034b09 : movsxd r8, dword ptr [rdx + r9*4] ; add r8, rdx ; jmp r8
0x000000000016e97b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00000000000ffe02 : movsxd rax, dword ptr [r10 + r15*4] ; add rax, r10 ; jmp rax
0x0000000000093305 : movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x0000000000093337 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000010c26d : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000000ffcb0 : movsxd rax, dword ptr [r14 + r15*4] ; add rax, r14 ; jmp rax
0x000000000007715f : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000abc96 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x00000000000abc97 : movsxd rax, dword ptr [rax + rax*4] ; add rax, r8 ; jmp rax
0x000000000007a91c : movsxd rax, dword ptr [rax + rcx*4] ; add rax, rbx ; jmp rax
0x00000000000810eb : movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000007a977 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rbx ; jmp rax
0x0000000000122fe5 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000093338 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, r11 ; jmp rax
0x00000000000670fe : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x0000000000066609 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000007799d : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000067a1c : movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000104a2c : movsxd rax, dword ptr [rcx - 0x77] ; retf
0x000000000013d1e9 : movsxd rax, dword ptr [rcx - 0x7cb70012] ; ret
0x00000000000d26b9 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000bed91 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000670ff : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x00000000000676e2 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000007ac3a : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rbx ; jmp rax
0x0000000000083eb3 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000150297 : movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x00000000000fff66 : movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000676e3 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000010c444 : movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000000f2f36 : movsxd rax, dword ptr [rdx + r14*4] ; add rax, rdx ; jmp rax
0x0000000000093306 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, r10 ; jmp rax
0x0000000000026eca : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000019811b : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e82e8 : movsxd rax, dword ptr [rdx + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000f2de6 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000034b0a : movsxd rax, dword ptr [rdx + rcx*4] ; add r8, rdx ; jmp r8
0x00000000000ffe03 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, r10 ; jmp rax
0x0000000000104313 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000e7954 : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000017bb59 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000077160 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000007abdc : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rbx ; jmp rax
0x000000000008228a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x00000000000836fb : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006f9bc : movsxd rax, dword ptr [rsi + rcx*4] ; add rax, rsi ; jmp rax
0x00000000000ffcb1 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, r14 ; jmp rax
0x00000000000bf25a : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000bf322 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000010c26e : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x0000000000186f41 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000186d4f : movsxd rax, ecx ; ret
0x000000000012e18a : movsxd rbp, dword ptr [rsi - 0x76b3fff8] ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000187000 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001017e9 : movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x00000000000ba73a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000190a31 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b9eb9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000abb01 : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000000ba73b : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000016e97c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x00000000001693cc : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x0000000000190a32 : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b9eba : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a02ac : movsxd rcx, dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000abb02 : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000019752c : movsxd rcx, dword ptr [rdi + r12*4] ; add rcx, rdi ; jmp rcx
0x0000000000083f4f : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000019752d : movsxd rcx, dword ptr [rdi] ; add rcx, rdi ; jmp rcx
0x00000000001017ea : movsxd rcx, dword ptr [rdx + rcx*4] ; add rcx, r10 ; jmp rcx
0x00000000000ac192 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000bf290 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000186d83 : movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x00000000001018f9 : movsxd rcx, edx ; jmp 0x101906
0x00000000001018f8 : movsxd rcx, edx ; jmp 0x101907
0x00000000000f1a0a : movsxd rcx, edx ; jmp 0xf1a34
0x00000000000f1a09 : movsxd rcx, edx ; jmp 0xf1a35
0x0000000000037489 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037309 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000a1659 : movsxd rdi, esi ; mov qword ptr [rbx], rdi ; call rcx
0x000000000016949f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000db45e : movsxd rdx, dword ptr [r9 + rdi*4] ; add rdx, r9 ; jmp rdx
0x0000000000055f9f : movsxd rdx, dword ptr [r9 + rdx*4] ; add rdx, r9 ; jmp rdx
0x0000000000152a35 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000001694a0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000db45f : movsxd rdx, dword ptr [rcx + rdi*4] ; add rdx, r9 ; jmp rdx
0x0000000000055fa0 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, r9 ; jmp rdx
0x0000000000083fb3 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000043cbe : movsxd rdx, dword ptr [rdi + rdx*4] ; add r10, r15 ; jmp r10
0x0000000000043b90 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000db4d9 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000013f8c5 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000013fd16 : movsxd rdx, ecx ; ret
0x0000000000186fc9 : movsxd rdx, edx ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000013f6f9 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000a172c : movsxd rsi, esi ; movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rsi ; call rcx
0x000000000019552c : movsxd rsi, esi ; ret 0x7520
0x0000000000197746 : movsxd rsp, dword ptr [rdi] ; add rdi, r12 ; jmp rdi
0x00000000000d346d : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000beef3 : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000bef7a : movups xmmword ptr [r11], xmm8 ; ret
0x00000000001539c9 : movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x0000000000153996 : movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x00000000001502ae : movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000001539ca : movups xmmword ptr [rax + 0x20], xmm2 ; ret
0x0000000000153997 : movups xmmword ptr [rax + 0x30], xmm0 ; ret
0x000000000008ad39 : movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x00000000001502af : movups xmmword ptr [rax + 8], xmm0 ; ret
0x0000000000144df7 : movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x0000000000089f12 : movups xmmword ptr [rax], xmm0 ; ret
0x000000000009582e : movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x000000000012f83d : movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012f463 : movups xmmword ptr [rbp - 0x78], xmm2 ; call rcx
0x000000000012f60b : movups xmmword ptr [rbp - 0x78], xmm3 ; call r9
0x000000000012f555 : movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012f4f0 : movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x000000000012fa65 : movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012fb33 : movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000012f6de : movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x00000000000916b2 : movups xmmword ptr [rbx + 0x18], xmm0 ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000a1ab0 : movups xmmword ptr [rbx + 0x18], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000916b6 : movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000a172e : movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rsi ; call rcx
0x0000000000095075 : movups xmmword ptr [rbx + 0x38], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094b35 : movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x00000000000917b5 : movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x000000000004b307 : movups xmmword ptr [rbx], xmm0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bef7b : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000beef4 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000beeef : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000beeee : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000015a8ed : movups xmmword ptr [rdi + 0x18], xmm0 ; ret
0x000000000010f565 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bef76 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010f569 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000046e58 : movups xmmword ptr [rdi + 0x58], xmm0 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000046e5c : movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x000000000010f9a9 : movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000011036e : movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x0000000000094a6b : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013f9e3 : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000bec96 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000bee5d : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bee3a : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000456b4 : movups xmmword ptr [rdi], xmm0 ; movd xmm0, esi ; ret
0x00000000000bec93 : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000047245 : movups xmmword ptr [rdi], xmm0 ; ret
0x000000000002a7fe : movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x00000000001502c3 : movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001530cb : movups xmmword ptr [rdx], xmm2 ; ret
0x00000000001539db : movups xmmword ptr [rdx], xmm3 ; ret
0x00000000001539bb : movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010f959 : movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000103706 : movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000014b59b : movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000116b7d : movups xmmword ptr [rsp + 0x11], xmm0 ; syscall
0x000000000015ace9 : movups xmmword ptr [rsp + 0x18], xmm0 ; call r8
0x0000000000157195 : movups xmmword ptr [rsp + 0xb8], xmm5 ; call rax
0x0000000000157101 : movups xmmword ptr [rsp + 0xd8], xmm0 ; call rax
0x000000000019a749 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000002833a : movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x0000000000151066 : movzx eax, al ; add eax, 1 ; ret
0x000000000015ad8f : movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000112e25 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000014d3b4 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1263 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000e809e : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x0000000000065f5b : movzx eax, al ; neg eax ; pop rbp ; ret
0x0000000000027b1c : movzx eax, al ; neg eax ; ret
0x000000000014cfdd : movzx eax, al ; pop r12 ; ret
0x000000000014be83 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000009113d : movzx eax, al ; pop rbx ; neg eax ; ret
0x000000000014d34a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000046f3f : movzx eax, al ; ret
0x00000000000370b9 : movzx eax, ax ; ret
0x0000000000142820 : movzx eax, bl ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093f53 : movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014e102 : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000094cb0 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000910b6 : movzx eax, byte ptr [rax] ; ret
0x0000000000105d40 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000ad528 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000188310 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000afa41 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ad543 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000001878c3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x00000000000bf2f0 : movzx eax, cl ; pop rbx ; ret
0x0000000000037272 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010f9b4 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001974ed : movzx ecx, al ; add rdx, r10 ; jmp rdx
0x00000000000be67a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbe679 ; ret
0x00000000000be72a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbe729 ; ret
0x00000000001918e4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000bedac : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ad540 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000188313 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000001974ec : movzx ecx, r8b ; add rdx, r10 ; jmp rdx
0x0000000000044368 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x4434f ; ret
0x00000000000ad701 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000018724b : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000001876fb : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x00000000001814ef : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000188298 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ad597 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000001870ce : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000195554 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000001955b4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000001955a4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000195594 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000195584 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000195574 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000195564 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000170cd0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000191697 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000019553b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000001713b0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000018da50 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000afa44 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000abba2 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc5f : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abc2e : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb69 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc10 : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb4b : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000afa6a : movzx edx, dl ; sub eax, edx ; ret
0x0000000000170c50 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000171340 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000018c620 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000abb81 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc46 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rax + 4], dx ; ret
0x000000000006e6c8 : movzx esi, byte ptr [rax] ; jmp 0x6b197
0x0000000000132f18 : movzx esi, dh ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x0000000000132efb : movzx esi, si ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x000000000013037e : mul bh ; or eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000b4b97 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000045419 : mulps xmm0, xmm1 ; ret
0x000000000004549e : mulps xmm0, xmmword ptr [rip + 0x179b6b] ; ret
0x0000000000045803 : mulps xmm0, xmmword ptr [rip + 0x179ea6] ; ret
0x00000000000457b8 : mulps xmm0, xmmword ptr [rip + 0x179ee9] ; ret
0x0000000000045793 : mulps xmm0, xmmword ptr [rip + 0x179f12] ; ret
0x000000000004549d : mulsd xmm0, qword ptr [rip + 0x179b6b] ; ret
0x0000000000045418 : mulsd xmm0, xmm1 ; ret
0x0000000000045802 : mulss xmm0, dword ptr [rip + 0x179ea6] ; ret
0x00000000000457b7 : mulss xmm0, dword ptr [rip + 0x179ee9] ; ret
0x0000000000045792 : mulss xmm0, dword ptr [rip + 0x179f12] ; ret
0x0000000000055d8a : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000466fb : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000018f24f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x0000000000065f5e : neg eax ; pop rbp ; ret
0x0000000000142823 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000027b1f : neg eax ; ret
0x000000000010c9b4 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000f762e : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000001703f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000004685f : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008baf9 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000143465 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x000000000014340d : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301d : nop ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000190d4e : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c9a0 : nop ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000d99d1 : nop ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x29], al ; shr dword ptr [rcx], cl ; ret 0x8945
0x0000000000118195 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006611f : nop ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000007a979 : nop ; add rax, rbx ; jmp rax
0x0000000000152a37 : nop ; add rdx, rax ; jmp rdx
0x000000000014bd5f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000af7df : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000f8866 : nop ; call 0x25353
0x000000000012872f : nop ; endbr64 ; ret
0x00000000000959df : nop ; endbr64 ; xor eax, eax ; ret
0x000000000011bed5 : nop ; hlt ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop r12 ; ret
0x00000000000832ec : nop ; jae 0x83307 ; add al, ch ; retf
0x000000000004619d : nop ; jmp rdx
0x000000000019425f : nop ; lea rax, [rdi + 1] ; ret
0x000000000019424f : nop ; lea rax, [rdi] ; ret
0x000000000017df8f : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000ef31f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000abcaf : nop ; mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000016afaf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bc47f : nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000017bc6f : nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bb00f : nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bb02f : nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb01f : nop ; mov dword ptr [rdi], edx ; ret
0x0000000000098457 : nop ; mov dword ptr [rip + 0x155706], eax ; ret
0x000000000016b18f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000ba00f : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000009fd0f : nop ; mov eax, 0x16 ; ret
0x00000000000e7ebf : nop ; mov eax, 0x7e ; ret
0x000000000013ec4f : nop ; mov eax, 0xffffffff ; ret
0x00000000000d21ef : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xd2259 ; ret
0x00000000000d221f : nop ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xd2259 ; ret
0x00000000000d223f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xd2259 ; ret
0x000000000016b54f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000bb66f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018c63f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000008af96 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000017bcaf : nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000bb06f : nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000980b7 : nop ; mov qword ptr [rip + 0x152229], rax ; ret
0x000000000009809f : nop ; mov qword ptr [rip + 0x152239], rax ; ret
0x0000000000098047 : nop ; mov qword ptr [rip + 0x152249], rax ; ret
0x0000000000098037 : nop ; mov qword ptr [rip + 0x152261], rax ; ret
0x000000000007bb6f : nop ; mov r10, rdx ; jmp rax
0x000000000008224f : nop ; mov r9, rsi ; jmp rax
0x00000000000d2cef : nop ; mov rax, 1 ; ret
0x00000000000a179f : nop ; mov rax, qword ptr [rip + 0x1487a9] ; call qword ptr [rax]
0x0000000000131f0f : nop ; mov rax, rdi ; ret
0x000000000018ddaf : nop ; mov rax, rdi ; vzeroupper ; ret
0x00000000000a599f : nop ; mov rcx, r11 ; mov rdx, r8 ; jmp 0xa59cb
0x000000000009cf80 : nop ; mov rdi, r12 ; mov rsi, rbp ; call 0x99269
0x00000000000a196f : nop ; mov rdi, rbp ; call rax
0x0000000000028d1a : nop ; mov rdi, rbx ; call rsi
0x000000000017bc4f : nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017bc3f : nop ; mov word ptr [rcx], dx ; ret
0x00000000000bafff : nop ; mov word ptr [rdi], dx ; ret
0x00000000000ba0ef : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b3a5d : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014a1ef : nop ; pop rbp ; ret
0x000000000019c49f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034a1f : nop ; ret
0x000000000012c8df : nop ; sub eax, edx ; ret
0x0000000000187c4f : nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000be0cf : nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000118edf : nop ; xor eax, eax ; add rsp, 8 ; ret
0x000000000014b64f : nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055b9f : nop ; xor eax, eax ; ret
0x000000000002723f : nop ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000290d6 : nop ; xor r14d, r14d ; xor r15d, r15d ; call 0x25359
0x00000000001326ff : nop ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d252f : nop ; xor rax, rax ; ret
0x000000000004580b : nop dword ptr [rax + rax] ; addss xmm0, xmm0 ; ret
0x000000000004921b : nop dword ptr [rax + rax] ; call 0x25497
0x000000000019bfe8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x00000000000999fb : nop dword ptr [rax + rax] ; call rax
0x000000000009698b : nop dword ptr [rax + rax] ; endbr64 ; ret
0x0000000000128adb : nop dword ptr [rax + rax] ; mov eax, r8d ; ret
0x00000000000e5fcb : nop dword ptr [rax + rax] ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000ba02b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011fe53 : nop dword ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000bb2cb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a15b3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000000332b3 : nop dword ptr [rax + rax] ; ret
0x00000000000bf263 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000058cd3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d225b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000d2cbc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000009f7a9 : nop dword ptr [rax] ; call 0x9c229
0x0000000000049cad : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000016358c : nop dword ptr [rax] ; call rax
0x0000000000026f5c : nop dword ptr [rax] ; endbr64 ; ret
0x000000000010f8fd : nop dword ptr [rax] ; endbr64 ; xor eax, eax ; ret
0x000000000017bc2c : nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000bafec : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000018db2c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000bacec : nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000abc19 : nop dword ptr [rax] ; mov dword ptr [rax], ecx ; ret
0x0000000000066115 : nop dword ptr [rax] ; mov eax, 0x10 ; ret
0x0000000000130214 : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x00000000000e7eb4 : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x00000000000e7fe4 : nop dword ptr [rax] ; mov eax, 0xff ; ret
0x0000000000093eac : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000097334 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000132f54 : nop dword ptr [rax] ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000bad1d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b995c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000bf35d : nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x0000000000154b35 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx] ; jmp 0x154b07
0x000000000012dfbd : nop dword ptr [rax] ; mov rdi, r15 ; call 0x12a1d8
0x00000000000abbfc : nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x0000000000186f3d : nop dword ptr [rax] ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000009e4fc : nop dword ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000095a45 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000003c174 : nop dword ptr [rax] ; ret
0x00000000000d3335 : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000044371 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018bb7d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000014238d : nop dword ptr [rax] ; xor r10d, r10d ; mov eax, r10d ; ret
0x000000000008581d : nop dword ptr [rax] ; xor r8d, r8d ; mov rax, r8 ; ret
0x000000000008fef7 : nop dword ptr cs:[rax + rax] ; ret
0x000000000004921a : nop word ptr [rax + rax] ; call 0x25498
0x00000000000999fa : nop word ptr [rax + rax] ; call rax
0x0000000000128ada : nop word ptr [rax + rax] ; mov eax, r8d ; ret
0x000000000011fe52 : nop word ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000a15b2 : nop word ptr [rax + rax] ; pop rbp ; ret
0x00000000000461c7 : nop word ptr [rax + rax] ; ret
0x000000000008d32a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d225a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000064134 : not dword ptr [rdx + 0x44010018] ; mov eax, eax ; pop rbx ; ret
0x0000000000044ed1 : not eax ; and eax, ecx ; ret
0x0000000000045251 : not eax ; and eax, edx ; ret
0x0000000000163f37 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000015af09 : not eax ; shr eax, 0x1f ; ret
0x0000000000163f36 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000004abb2 : or ah, byte ptr [rsi] ; sbb al, byte ptr [rax] ; syscall
0x0000000000164b7a : or ah, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124dba : or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000182467 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186079 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182495 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000124d94 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010f858 : or al, 0 ; add byte ptr [rax], al ; jmp 0x10f826
0x000000000004b330 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009b26d : or al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x00000000000f5252 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f5321 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000117555 : or al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011c9a3 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000a1b0e : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000168628 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007d803 : or al, 0 ; add byte ptr [rbx - 0x78f0f808], al ; ret 8
0x000000000004006a : or al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000005ef16 : or al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000124e7c : or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000a2352 : or al, 0 ; cmovne rax, rdx ; ret
0x000000000011c9e5 : or al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000125a39 : or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000125155 : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000124c53 : or al, 0 ; pop rbx ; ret
0x000000000011b922 : or al, 0 ; ret
0x0000000000126ed4 : or al, 0 ; syscall
0x000000000009a794 : or al, 0x15 ; add byte ptr [rbp + 0x39], cl ; ret 0x850f
0x000000000018fc57 : or al, 0x16 ; jne 0x18fc30 ; vzeroupper ; ret
0x00000000000a459e : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jne 0xa4598 ; ret
0x0000000000163a1a : or al, 0x16 ; mov rdx, r14 ; mov esi, r12d ; call rax
0x0000000000163669 : or al, 0x16 ; mov rdx, rbp ; mov esi, r12d ; call rax
0x00000000000ad526 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000010a500 : or al, 0x20 ; or eax, dword ptr [rax] ; call 0x36fc6
0x000000000003f61f : or al, 0x24 ; call 0x3c124
0x0000000000107897 : or al, 0x24 ; call rax
0x0000000000091c21 : or al, 0x24 ; mov rdi, rbp ; call rax
0x000000000014b15c : or al, 0x24 ; xor eax, eax ; mov rdi, rbx ; call rcx
0x00000000001625f9 : or al, 0x30 ; fisttp dword ptr [rcx] ; ret
0x00000000001220ae : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x000000000012627d : or al, 0x31 ; test ecx, ecx ; jne 0x12628e ; ret
0x00000000001262e6 : or al, 0x31 ; test ecx, ecx ; jne 0x1262f6 ; ret
0x0000000000126bcd : or al, 0x31 ; test ecx, ecx ; jne 0x126bde ; ret
0x0000000000126c2a : or al, 0x31 ; test ecx, ecx ; jne 0x126c3e ; ret
0x0000000000122abf : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x0000000000118490 : or al, 0x41 ; mov eax, eax ; mov eax, 0x4a ; syscall
0x0000000000118550 : or al, 0x41 ; mov eax, eax ; mov eax, 0x4b ; syscall
0x0000000000111ad0 : or al, 0x41 ; mov eax, eax ; mov eax, 3 ; syscall
0x00000000000e5cc6 : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000e5ba0 : or al, 0x48 ; add esp, 0x28 ; ret
0x00000000001182b2 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000014e233 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014b2b3 : or al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000a20d3 : or al, 0x48 ; mov dword ptr [rdi], esi ; ret
0x000000000013e7d0 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000087453 : or al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000912c3 : or al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097b1d : or al, 0x5b ; ret
0x00000000000abb85 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000001488ba : or al, 0x66 ; test r13d, 0x840f1000 ; ret 0xfffe
0x00000000000a7551 : or al, 0x74 ; and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x000000000003629b : or al, 0x74 ; cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000036936 : or al, 0x74 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004559b : or al, 0x75 ; or dh, dl ; addps xmm0, xmm0 ; ret
0x0000000000116668 : or al, 0x75 ; ret 0xd8f7
0x000000000007c28a : or al, 0x7e ; ret
0x0000000000082e2f : or al, 0x7e ; retf
0x00000000000845eb : or al, 0x7e ; retf 0x8948
0x0000000000083c7b : or al, 0x7e ; retf 0xffb8
0x00000000000ba73c : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000077606 : or al, 0x83 ; ret
0x00000000000bf291 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000000bfced : or al, 0x87 ; test ecx, ecx ; jne 0xbfcd1 ; mov rax, r8 ; ret
0x00000000000abb03 : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x000000000006089a : or al, 0x89 ; fdiv st(6) ; ret
0x000000000004601b : or al, 0x89 ; jae 0x46066 ; xor eax, eax ; pop rbx ; ret
0x0000000000102863 : or al, 0x89 ; ret 0x8b4c
0x00000000000bf31b : or al, 0x89 ; ret 0xe283
0x00000000000e7545 : or al, 0x89 ; retf 0x8948
0x00000000001017eb : or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000ac193 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000b1f94 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012627a : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126291 ; ret
0x00000000001262e3 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1262f9 ; ret
0x0000000000126bca : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126be1 ; ret
0x0000000000126c27 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x126c41 ; ret
0x000000000016e97d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000130246 : or al, 0x8b ; cmp al, 0x24 ; mov eax, 0xe6 ; syscall
0x000000000014481d : or al, 0x8b ; cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000001693cd : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000010f83b : or al, 0x8b ; push rbx ; add al, 0xeb ; ret
0x000000000011ff0f : or al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001264e7 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000001264cc : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x1264e9 ; ret
0x0000000000126dfc : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x126e19 ; ret
0x0000000000083f50 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x0000000000190a33 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000b9ebb : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000019752e : or al, 0xa7 ; add rcx, rdi ; jmp rcx
0x00000000001693d1 : or al, 0xb ; jmp r9
0x00000000000b9ebf : or al, 0xb ; jmp rcx
0x0000000000153986 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000123327 : or al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000123ea6 : or al, 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000e6db0 : or al, 0xe6 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e5b97 : or al, 0xe8 ; ret
0x0000000000105de8 : or al, 0xe8 ; ret 0xfffe
0x0000000000151a2e : or al, 0xf ; retf 0x5089
0x000000000014b6b0 : or al, 0xf ; retf 0xd189
0x00000000000d2145 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ba9d3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000170ed3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e4769 : or al, 0xf4 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000005f1f7 : or al, 0xf6 ; ret
0x0000000000064483 : or al, 0xf6 ; ret 0x7401
0x000000000006248b : or al, 0xf6 ; ret 0xf01
0x0000000000084233 : or al, 0xf6 ; ret 0xf04
0x000000000007de5c : or al, 0xf6 ; ret 0xf08
0x000000000006469d : or al, 0xf6 ; ret 0xf40
0x000000000011b5fc : or al, 0xf7 ; ret
0x000000000011ac73 : or al, 0xf7 ; ret 0xfc07
0x000000000014d53c : or al, 1 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x00000000001102f6 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000110e92 : or al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000110390 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086bc7 : or al, 1 ; add cl, ch ; retf
0x000000000019ba86 : or al, 5 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bac10 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000055b44 : or al, 9 ; retf 0xbe0f
0x0000000000051325 : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000010bfb0 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000018163d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184251 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181661 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015566c : or al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a22b : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000014b5c6 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bbb5 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ae5d8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001495fb : or al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001090b0 : or al, byte ptr [rax] ; call 0x25354
0x0000000000144389 : or al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x1443a1 ; ret
0x0000000000144479 : or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000149627 : or al, byte ptr [rax] ; ret
0x00000000001407b8 : or al, byte ptr [rax] ; syscall
0x0000000000143f3c : or al, byte ptr [rax] ; test eax, eax ; je 0x143f4e ; ret
0x000000000014a208 : or al, byte ptr [rax] ; test eax, eax ; je 0x14a216 ; ret
0x00000000001461f9 : or al, byte ptr [rax] ; test rax, rax ; jne 0x14620f ; ret
0x00000000000bf8a5 : or al, byte ptr [rbx + 0xd7402f8] ; xor eax, eax ; ret
0x00000000000f55cc : or al, byte ptr [rcx - 0x77] ; retf 0xe8c0
0x00000000000f6d49 : or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x0000000000112ed5 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001602aa : or al, byte ptr [rcx] ; or dword ptr [rax], eax ; syscall
0x000000000018ab47 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000cd212 : or al, ch ; cwde ; ret
0x0000000000091493 : or al, ch ; idiv dword ptr [rdi] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b56e : or al, ch ; in al, dx ; ret
0x00000000000c890f : or al, ch ; jmp 0xc88e1
0x00000000000fc974 : or al, ch ; mov dh, 0x89 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000090f37 : or al, ch ; ret
0x00000000000460cf : or al, ch ; retf
0x0000000000110230 : or al, ch ; retf 0xf152
0x0000000000055ca1 : or al, ch ; sbb esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d7f45 : or al, ch ; test dword ptr [rbp - 0x76b80000], eax ; ret 0x8548
0x00000000000d2a94 : or al, ch ; xchg byte ptr [rdx], ch ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000d7d99 : or al, ch ; xor dword ptr [rdi - 0x76b80000], eax ; ret 0x8548
0x00000000000ac198 : or bh, byte ptr [rsi] ; jmp r10
0x00000000000f764d : or bh, dh ; ret
0x000000000014b59e : or bl, al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000134bd1 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x0000000000119177 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000000e2ace : or bl, al ; ret
0x000000000011d975 : or bl, byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000155ddd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010582c : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000171093 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014b59d : or bl, r8b ; mov dword ptr [rsi], 0xc ; ret
0x00000000000ef391 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000ef321 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000332f8 : or byte ptr [r11 + 0x1974fdf8], al ; pop rbx ; ret
0x00000000000eb242 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000445af : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f39fe : or byte ptr [r13 + 0x63], cl ; ror byte ptr [rcx + 1], 1 ; ret 0x8948
0x00000000000b6c6f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ef316 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000ef3b6 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000058831 : or byte ptr [r15], r9b ; xchg eax, edx ; ret 0x8948
0x000000000005ae47 : or byte ptr [r8 + 2], r15b ; ret
0x00000000000ef3a1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b6c4e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000179c48 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071945 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000011d17c : or byte ptr [r8 - 0x77], cl ; ret 0xe083
0x000000000008bef6 : or byte ptr [r8 - 0x77], cl ; sbb r9b, bpl ; retf
0x0000000000156fdd : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rax - 0x77] ; out dx, eax ; call qword ptr [rax]
0x0000000000159d8f : or byte ptr [r8 - 0x77], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000006f65b : or byte ptr [r8 - 0x7d], cl ; ret
0x00000000000c3770 : or byte ptr [r8], al ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000018ad22 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005e5fb : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000014c434 : or byte ptr [r9 + rcx*4 - 0x1a], r9b ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000b6cae : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000ef2e5 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000ef2fe : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000149c03 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000122706 : or byte ptr [rax + 0x114], bh ; syscall
0x0000000000116557 : or byte ptr [rax + 0x11d], bh ; syscall
0x0000000000117840 : or byte ptr [rax + 0x127], bh ; syscall
0x0000000000117900 : or byte ptr [rax + 0x128], bh ; syscall
0x0000000000122923 : or byte ptr [rax + 0x130], bh ; syscall
0x00000000001176e5 : or byte ptr [rax + 0x13], bh ; syscall
0x000000000004b557 : or byte ptr [rax + 0x13e], bh ; syscall
0x0000000000117785 : or byte ptr [rax + 0x14], bh ; syscall
0x000000000011bc27 : or byte ptr [rax + 0x1a], bh ; syscall
0x0000000000045379 : or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x0000000000045349 : or byte ptr [rax + 0x21], 0xc2 ; movq xmm0, rdx ; ret
0x00000000000e3cdb : or byte ptr [rax + 0x29], cl ; ret
0x00000000000a6518 : or byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x0000000000056319 : or byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000004af43 : or byte ptr [rax + 0x29], cl ; retf 0xc148
0x00000000001233f3 : or byte ptr [rax + 0x2a], bh ; syscall
0x0000000000123835 : or byte ptr [rax + 0x2e], bh ; syscall
0x00000000001236d5 : or byte ptr [rax + 0x2f], bh ; syscall
0x000000000012230d : or byte ptr [rax + 0x38], bh ; syscall
0x000000000009b2ee : or byte ptr [rax + 0x39], cl ; ret
0x0000000000164203 : or byte ptr [rax + 0x39], cl ; ret 0x5776
0x00000000000a7a6f : or byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000131cbc : or byte ptr [rax + 0x39], cl ; ret 0x976
0x0000000000051fb3 : or byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000002b210 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000096aed : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e5a7e : or byte ptr [rax + 0x3d], bh ; syscall
0x00000000000e7f87 : or byte ptr [rax + 0x40], bh ; ret
0x00000000001117cf : or byte ptr [rax + 0x48], bh ; syscall
0x00000000000efadb : or byte ptr [rax + 0x63], cl ; ret
0x00000000000f18be : or byte ptr [rax + 0x63], cl ; retf 0xc283
0x000000000013a229 : or byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; ret
0x00000000000ec98a : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000a4ce7 : or byte ptr [rax + 0xf], cl ; ret
0x00000000000579e0 : or byte ptr [rax + 0xf], cl ; retf 0x854d
0x00000000000d6346 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000001502bd : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000001539b5 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000158e23 : or byte ptr [rax + 1], bh ; pop rbp ; pop r12 ; ret
0x0000000000086399 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000111347 : or byte ptr [rax + 1], bh ; syscall
0x0000000000162b91 : or byte ptr [rax + 1], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x000000000005ae48 : or byte ptr [rax + 2], bh ; ret
0x0000000000059804 : or byte ptr [rax + 3], cl ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8948
0x0000000000115c27 : or byte ptr [rax + 7], bh ; syscall
0x00000000000e3975 : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000ef3a2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000004cc77 : or byte ptr [rax - 0x39], cl ; ret
0x0000000000045c5a : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x00000000000da041 : or byte ptr [rax - 0x3f], 0xe1 ; add cl, byte ptr [rax - 0x77] ; retf 0xc148
0x000000000017bdd7 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x0000000000149621 : or byte ptr [rax - 0x73], cl ; add eax, 0xa61d7 ; ret
0x0000000000159112 : or byte ptr [rax - 0x73], cl ; je 0x159144 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000159202 : or byte ptr [rax - 0x73], cl ; je 0x159234 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x00000000001592f2 : or byte ptr [rax - 0x73], cl ; je 0x159324 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x00000000001593e2 : or byte ptr [rax - 0x73], cl ; je 0x159414 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x000000000005882e : or byte ptr [rax - 0x73], cl ; or byte ptr [r15], r9b ; xchg eax, edx ; ret 0x8948
0x000000000005a18c : or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000005a83c : or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000104e3b : or byte ptr [rax - 0x75], 4 ; ret 0x8948
0x0000000000125a95 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000125af6 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000012b1eb : or byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000011465e : or byte ptr [rax - 0x75], cl ; jl 0x11468f ; and al, ch ; retf 0xfffc
0x0000000000162c41 : or byte ptr [rax - 0x75], cl ; or byte ptr [rax + 1], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x000000000009035b : or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b6c4f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000014e4d3 : or byte ptr [rax - 0x77], cl ; add r8b, r13b ; ret
0x00000000000b6b60 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000132d4c : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x000000000002fbe0 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000156fde : or byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call qword ptr [rax]
0x0000000000179c49 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000159d90 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000014728c : or byte ptr [rax - 0x77], cl ; out 0xe8, al ; retf
0x0000000000149cb6 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x0000000000159875 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbp ; pop r12 ; jmp rax
0x000000000008a78b : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000014b39b : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000106573 : or byte ptr [rax - 0x77], cl ; push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x0000000000071946 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012de8f : or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000014d818 : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000012b409 : or byte ptr [rax - 0x77], cl ; ret 0x4b8b
0x000000000009b5ae : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000159147 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000152cc9 : or byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000d6e0f : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000011d17d : or byte ptr [rax - 0x77], cl ; ret 0xe083
0x00000000000fe575 : or byte ptr [rax - 0x77], cl ; retf
0x000000000005cb21 : or byte ptr [rax - 0x77], cl ; retf 0x44f6
0x000000000002fb02 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000008bef7 : or byte ptr [rax - 0x77], cl ; sbb r9b, bpl ; retf
0x0000000000099a33 : or byte ptr [rax - 0x77], r9b ; ret
0x00000000000a1ad7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000002ab5a : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000aae7d : or byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000009ad48 : or byte ptr [rax - 0x7d], cl ; ret 0x4110
0x000000000004c9b5 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004aca0 : or byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4804
0x00000000000f1a5f : or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; ret 0xc775
0x000000000015fcf6 : or byte ptr [rax - 1], bh ; pop rbp ; pop r12 ; ret
0x00000000000863bb : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000018189c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000445ed : or byte ptr [rax], 0x4c ; add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x00000000000e226e : or byte ptr [rax], al ; add al, ch ; retf 0x659
0x00000000000a6142 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc019
0x00000000000c3771 : or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000062c12 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018189d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001843f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001818c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009a0f2 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000144553 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001981bd : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x0000000000155538 : or byte ptr [rax], al ; add byte ptr [rax], al ; lea r9, [rsp + 0x14] ; call qword ptr [rax]
0x0000000000122425 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000046715 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x0000000000047434 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x80 ; syscall
0x0000000000046761 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000004653b : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xd ; syscall
0x00000000000466a6 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000bf389 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000014b5bf : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001113a5 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000ae758 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003ef27 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x00000000000e9bed : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d8007 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008cdd8 : or byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x7589
0x000000000015fcbe : or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000015f858 : or byte ptr [rax], al ; call qword ptr [rax]
0x00000000000e1aa5 : or byte ptr [rax], al ; call rbx
0x0000000000123c4e : or byte ptr [rax], al ; mov ebp, 5 ; jmp 0x123c22
0x000000000005e5fc : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000e1c23 : or byte ptr [rax], al ; mov rax, r15 ; call rax
0x0000000000164254 : or byte ptr [rax], al ; ret
0x0000000000161574 : or byte ptr [rax], al ; syscall
0x000000000015fe0c : or byte ptr [rax], al ; test eax, eax ; jne 0x15fe29 ; xor eax, eax ; pop rbp ; ret
0x00000000000be1ad : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1eb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be18b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000018930e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013fc48 : or byte ptr [rbp + 0x2e], dh ; add rsp, 0x38 ; ret
0x000000000005ba57 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x39], cl ; ret
0x0000000000049f87 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x0000000000158e18 : or byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000008848c : or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000013f7b3 : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x00000000000f39ff : or byte ptr [rbp + 0x63], cl ; ror byte ptr [rcx + 1], 1 ; ret 0x8948
0x00000000000f1084 : or byte ptr [rbp + 1], al ; ret 0x428d
0x00000000000458c7 : or byte ptr [rbp + 6], dh ; addss xmm0, xmm0 ; ret
0x000000000014b699 : or byte ptr [rbp - 0x744d8a2e], al ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x000000000012ffdc : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000332f9 : or byte ptr [rbx + 0x1974fdf8], al ; pop rbx ; ret
0x00000000000332d7 : or byte ptr [rbx + 0x37403fe], al ; ret
0x0000000000027626 : or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000000926be : or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000014bd59 : or byte ptr [rbx + 0x5d], bl ; jmp rcx
0x000000000008e579 : or byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; ret
0x00000000000a1bf7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005876a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a25c7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002848b : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001568a6 : or byte ptr [rbx + 0x74fff878], al ; jnp 0x156839 ; ret 0x3901
0x000000000011d820 : or byte ptr [rbx + 0x94801e2], al ; retf 0x8948
0x000000000009f3b0 : or byte ptr [rbx + 0xf4801e0], al ; ret 0xfc3
0x00000000000445ee : or byte ptr [rbx + rax + 0x5f], cl ; and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x00000000000445b0 : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000003f4dd : or byte ptr [rbx + rcx*4 + 0xc], cl ; and al, 0xe9 ; retf
0x0000000000092a23 : or byte ptr [rbx + rcx*4 + 4], cl ; and al, 0xe9 ; retf
0x000000000012b406 : or byte ptr [rbx - 0x76b7f78d], cl ; ret 0x4b8b
0x0000000000084fe8 : or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x00000000000979a8 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000014c596 : or byte ptr [rcx + 0x29], al ; rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000a6323 : or byte ptr [rcx + 0x29], cl ; ret
0x000000000005abbb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000014e961 : or byte ptr [rcx + 0x39], al ; sbb byte ptr [r15], r9b ; xchg eax, edi ; ret 0xd284
0x000000000002ad83 : or byte ptr [rcx + 0x39], cl ; retf
0x000000000002d896 : or byte ptr [rcx + 0x39], cl ; retf 0x850f
0x000000000014edc1 : or byte ptr [rcx + 0x3b], al ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000001017e8 : or byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x000000000013f931 : or byte ptr [rcx + 0x80fe], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000015d84b : or byte ptr [rcx + 1], cl ; idiv byte ptr [rcx] ; retf 0x850f
0x0000000000058c8b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000059e01 : or byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000099523 : or byte ptr [rcx + 1], cl ; ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000059bd0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000000abc99 : or byte ptr [rcx + rax - 0x40], 0x3e ; jmp rax
0x000000000003f61c : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; cli ; retf 0xffff
0x000000000003f525 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; int1 ; retf
0x000000000003f672 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000003f5c6 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; push rax ; retf
0x0000000000042c53 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x0000000000042354 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret 0xff9d
0x000000000003e84b : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf
0x000000000004344c : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xff8c
0x0000000000043754 : or byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xff89
0x0000000000109082 : or byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x25356
0x000000000011ce2c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000012fb2f : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012fa61 : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012f551 : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esp ; call rax
0x00000000000a2b97 : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop r12 ; pop r13 ; ret
0x00000000000fc370 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0xf8da6
0x000000000014c435 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000115d1b : or byte ptr [rcx + rcx*4 - 0x1e], cl ; mov eax, 0x10f ; syscall
0x000000000015102c : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000005ea13 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x000000000004aaa1 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x00000000000a3bf3 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000013feb6 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105acb : or byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x00000000000f482f : or byte ptr [rcx + rcx*4 - 0x3a], cl ; call 0xf0ab6
0x00000000000854d6 : or byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000011a5a1 : or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000086284 : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; ret
0x000000000013fb2a : or byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000012f4ec : or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000008c302 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000012f839 : or byte ptr [rcx + rcx*4 - 6], 0xf ; adc dword ptr [rbp - 0x78], ecx ; call rax
0x0000000000058c92 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000005b52c : or byte ptr [rcx - 0x39], cl ; ret 0xc001
0x0000000000100f65 : or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x000000000015d4fd : or byte ptr [rcx - 0x73], al ; push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000000000011d772 : or byte ptr [rcx - 0x75], cl ; add dword ptr [rbx + 0x94901e0], eax ; ret
0x000000000010314b : or byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x63], cl ; retf
0x000000000010314a : or byte ptr [rcx - 0x75], r9b ; push rsi ; adc byte ptr [rax + 0x63], cl ; retf
0x00000000000b6caf : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000073fcf : or byte ptr [rcx - 0x77], al ; ret
0x00000000000d03d8 : or byte ptr [rcx - 0x77], al ; ret 0x2a74
0x00000000000d02a7 : or byte ptr [rcx - 0x77], al ; ret 0x7b75
0x000000000014c423 : or byte ptr [rcx - 0x77], cl ; in al, 0x48 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x000000000008229f : or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; ret
0x0000000000131ba7 : or byte ptr [rcx - 0x77], cl ; retf 0x8944
0x0000000000125b6c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125b7d ; ret
0x0000000000125bfc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125c0d ; ret
0x0000000000125c9c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125cad ; ret
0x0000000000125d2c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125d3d ; ret
0x0000000000125e5c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125e6d ; ret
0x0000000000125efc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125f0d ; ret
0x0000000000125f9c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125fad ; ret
0x000000000012603c : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12604d ; ret
0x00000000001260cc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1260dd ; ret
0x0000000000126167 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126178 ; ret
0x00000000001261fc : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12620d ; ret
0x000000000012654e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12655f ; ret
0x00000000001265de : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1265ef ; ret
0x000000000012666e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12667f ; ret
0x00000000001266ee : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1266ff ; ret
0x000000000012680e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12681f ; ret
0x000000000012689e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1268af ; ret
0x000000000012692e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12693f ; ret
0x00000000001269be : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1269cf ; ret
0x0000000000126a4e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126a5f ; ret
0x0000000000126adb : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126aec ; ret
0x0000000000126b5e : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x126b6f ; ret
0x00000000000714c2 : or byte ptr [rcx - 0x7d], al ; retf
0x000000000005e4a8 : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000714ae : or byte ptr [rcx - 0x7f], al ; retf
0x0000000000070229 : or byte ptr [rcx - 0xa], al ; ret
0x00000000000ede63 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000110306 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000065fa8 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001103a8 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ef37c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000ef2ff : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000aba6f : or byte ptr [rcx], bh ; int1 ; jne 0xaba65 ; ret
0x00000000000ef2e6 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000cd0d3 : or byte ptr [rcx], ch ; ret
0x00000000000f0f1e : or byte ptr [rcx], ch ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x000000000009f261 : or byte ptr [rcx], cl ; ret 0x37e9
0x000000000012eb1e : or byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000004a547 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000101e3a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010f53c : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000002f2c7 : or byte ptr [rdi], 0x85 ; retf 0xfff5
0x00000000000bf27b : or byte ptr [rdi], 0xa2 ; jmp 0xbf247
0x00000000000a98f0 : or byte ptr [rdi], cl ; add dword ptr [rbp + 0x19], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000000370b8 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000910b5 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000efad7 : or byte ptr [rdi], cl ; mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000151065 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015ad8e : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000112e24 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000027b1b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014be82 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000014d349 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000055508 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000014b62e : or byte ptr [rdi], cl ; retf 0x5089
0x000000000014b6a0 : or byte ptr [rdi], cl ; retf 0xd189
0x00000000000f806f : or byte ptr [rdi], cl ; test dword ptr [rdx - 0x9ffffff], ebp ; ret 0x7420
0x00000000000d70c3 : or byte ptr [rdi], cl ; test dword ptr [rsi - 0x76000003], eax ; retf 0x8348
0x000000000006f793 : or byte ptr [rdi], cl ; test edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000070613 : or byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000111e5b : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x0000000000105b60 : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000001251d8 : or byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000058832 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8948
0x00000000000f0b02 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8040
0x0000000000027232 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000013a754 : or byte ptr [rdi], cl ; xor dword ptr [rbp + 1], 0 ; add dh, dh ; ret 0xf04
0x00000000000a20d1 : or byte ptr [rdx + 0xc], dh ; mov qword ptr [rdi], rsi ; ret
0x00000000000ef322 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000ef392 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x0000000000116976 : or byte ptr [rip + 0x100f], ah ; ret
0x0000000000116975 : or byte ptr [rip + 0x100f], r12b ; ret
0x0000000000116c21 : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9b75
0x00000000000b9861 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000b6c70 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000038a2c : or byte ptr [rsi], bh ; sbb eax, dword ptr [rax] ; syscall
0x00000000000ef3b7 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ef317 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00000000000450df : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000a7aa5 : or cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000145d60 : or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000145223 : or cl, byte ptr [rax + 0xf] ; retf 0xe8c0
0x000000000008bb09 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000092036 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000043aa2 : or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x00000000000fea59 : or cl, byte ptr [rax - 0x77] ; retf 0xd348
0x000000000018064c : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x0000000000087589 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000066664 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000012b4f1 : or cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000056d66 : or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000014c959 : or cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x000000000017bb76 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000000822a3 : or cl, ch ; ret
0x000000000009db5b : or cl, ch ; ret 0xfffe
0x0000000000025717 : or cl, ch ; retf
0x00000000000de160 : or cl, ch ; retf 0xfffa
0x00000000000beb85 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000170fb3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000451d5 : or dh, byte ptr [rbp + 8] ; fadd st(0) ; add rsp, 8 ; ret
0x00000000000f125a : or dh, byte ptr [rsi + rdi + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014480b : or dh, dh ; ret 0x7401
0x000000000009c46b : or dh, dh ; ret 0xf02
0x000000000004559d : or dh, dl ; addps xmm0, xmm0 ; ret
0x00000000000d668b : or dword ptr [rax + 0x11], edi ; add bl, ch ; retf 0x8948
0x00000000001103ba : or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000162521 : or dword ptr [rax + 0x39], ecx ; ret
0x00000000000fdc9b : or dword ptr [rax + 0x39], ecx ; ret 0x850f
0x00000000000a7a8a : or dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000100ff6 : or dword ptr [rax + 0x39], ecx ; retf 0x850f
0x000000000003579e : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x0000000000167ef7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000116e26 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x00000000000e454b : or dword ptr [rax + rdx + 0x158b4800], ebx ; retf 0x10be
0x000000000013b008 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0xb40d0 ; call rax
0x0000000000150248 : or dword ptr [rax - 0x73], ecx ; mov ebp, 0xc8 ; call rax
0x00000000000caddc : or dword ptr [rax - 0x75], 0x5d ; mov al, 0x89 ; ret 0xff25
0x0000000000085afc : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x00000000000659c3 : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000011ceb3 : or dword ptr [rax - 0x77], ecx ; retf
0x00000000000f5d76 : or dword ptr [rax - 0x77], ecx ; retf 0xd348
0x000000000011949d : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34adcad
0x00000000000d663d : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000035146 : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000009bd15 : or dword ptr [rax - 0x7d], ecx ; retf 0xb804
0x00000000000b9b9e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000156474 : or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aac6e : or dword ptr [rax], eax ; add bh, dh ; ret
0x000000000016454a : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001817cd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001891bf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181727 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000154d64 : or dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000027b32 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014b551 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000010f76a : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000011baf0 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000b3cae : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000fce66 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8341
0x000000000019699d : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000010e52e : or dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000b8db5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000015ffd0 : or dword ptr [rax], eax ; add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbp ; ret
0x0000000000123f17 : or dword ptr [rax], eax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000156380 : or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000015fe5e : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x8b629] ; call qword ptr [rax]
0x000000000015f851 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x8bc36] ; call qword ptr [rax]
0x000000000014fb0c : or dword ptr [rax], eax ; syscall
0x0000000000191e66 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000085b47 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000917c0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000096fec : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000137bce : or dword ptr [rcx + 0xf], eax ; retf
0x000000000009333a : or dword ptr [rcx + rax - 0x28], 0x3e ; jmp rax
0x00000000000ba73d : or dword ptr [rcx - 0x73], 0xc ; or edi, dword ptr [rsi] ; jmp rcx
0x000000000012504c : or dword ptr [rcx - 0x77], ecx ; ret 0x3948
0x000000000012bef2 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe901
0x000000000006f4df : or dword ptr [rcx - 1], 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000112e78 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000163f17 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000142c2e : or dword ptr [rdi + rbp*8 - 0x7c], esi ; ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x000000000005e78c : or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x0000000000046ea2 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001699ac : or dword ptr [rdi], ecx ; sub dword ptr [rdi], esp ; jmp r9
0x000000000017bb56 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000a2484 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x00000000000a2433 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x0000000000142bfb : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd308
0x00000000000a2507 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x00000000000494f2 : or dword ptr [rdx], ebx ; add byte ptr [rax + 1], cl ; retf
0x0000000000113b28 : or dword ptr [rdx], ecx ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000009d15b : or dword ptr [rip + 0x5b050f00], edx ; ret
0x000000000018ac3f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a0a4a : or eax, 0x115984 ; mov rdx, rcx ; jmp 0xa0a0f
0x00000000000e6091 : or eax, 0x142b800 ; add byte ptr [rax], al ; syscall
0x0000000000117482 : or eax, 0x14ba ; add byte ptr [rcx], ch ; ret 0xc085
0x000000000009a302 : or eax, 0x14ff59 ; call 0x1165b7
0x0000000000045439 : or eax, 0x1795f2 ; mulsd xmm0, xmm1 ; ret
0x0000000000045413 : or eax, 0x179628 ; mulsd xmm0, xmm1 ; ret
0x00000000000452af : or eax, 0x17975c ; orpd xmm0, xmm1 ; ret
0x000000000013f6ea : or eax, 0x1975c085 ; mov eax, r8d ; ret
0x00000000000bb931 : or eax, 0x1c478d48 ; ret
0x00000000000bc7a1 : or eax, 0x1d478d48 ; ret
0x000000000017bbd8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000011ae2e : or eax, 0x1f88300 ; jg 0x11ae3d ; ret
0x000000000011922f : or eax, 0x200 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d7437 : or eax, 0x30c48348 ; pop rbx ; ret
0x000000000013005a : or eax, 0x3f8348 ; je 0x130077 ; ret
0x000000000008370a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011c397 : or eax, 0x415c4100 ; pop rbp ; ret
0x000000000011c35e : or eax, 0x415d5900 ; pop rsp ; pop r13 ; ret
0x00000000001383de : or eax, 0x42b60f90 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e43f2 : or eax, 0x440f4800 ; ret 0x854d
0x000000000015a83a : or eax, 0x44c03145 ; mov eax, eax ; ret
0x00000000000bff13 : or eax, 0x450f4800 ; ret 0x66c3
0x00000000000a23d2 : or eax, 0x450f4800 ; ret 0xfc3
0x000000000010fac1 : or eax, 0x528b4800 ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x00000000000909e2 : or eax, 0x5bd88948 ; pop rbp ; pop r12 ; ret
0x000000000011be44 : or eax, 0x5c415d00 ; pop r13 ; ret
0x00000000000ba9f5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000011ac6e : or eax, 0x74d28500 ; or al, 0xf7 ; ret 0xfc07
0x000000000011b5f7 : or eax, 0x74db8500 ; or al, 0xf7 ; ret
0x0000000000116a21 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000071e41 : or eax, 0x83480000 ; ret 0x4904
0x0000000000182377 : or eax, 0x83480000 ; ret 0x4910
0x0000000000183f11 : or eax, 0x83480000 ; ret 0xe910
0x00000000001823a5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000bc0e9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00000000000501c5 : or eax, 0x89410000 ; ret 0xd231
0x00000000000c28d7 : or eax, 0x89480000 ; retf 0x8548
0x000000000014f7b7 : or eax, 0x8948000a ; ret 0x8548
0x0000000000114787 : or eax, 0x8948fff1 ; ret 0x348
0x00000000000cc0fa : or eax, 0x89490000 ; ret
0x00000000000ae2d8 : or eax, 0x894d0000 ; retf
0x00000000000ccfbf : or eax, 0xba000ef0 ; ret 2
0x0000000000044647 : or eax, 0xc031fffe ; pop rbp ; ret
0x000000000011a8a1 : or eax, 0xc0894c00 ; add rsp, 8 ; ret
0x000000000011a871 : or eax, 0xc0894c00 ; ret
0x00000000000d2982 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000000a3602 : or eax, 0xf48000f ; ret 0x66c3
0x000000000007f577 : or eax, 0xf6fffff8 ; ret 0xf10
0x0000000000170e63 : or eax, 0xf7f0ff3 ; ret
0x00000000000f1a04 : or eax, 0xf84df ; movsxd rcx, edx ; jmp 0xf1a3a
0x0000000000046701 : or eax, 0xffffffff ; ret
0x00000000001882d9 : or eax, 1 ; ret
0x000000000018f251 : or eax, 1 ; vzeroupper ; ret
0x000000000013adcc : or eax, dword ptr [r8] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x000000000018156d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001840b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181591 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000133ba2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133b7c
0x0000000000133e12 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x133dec
0x000000000014b5cd : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bb85 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ae458 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000198b89 : or eax, dword ptr [rax] ; add byte ptr [rbx - 0x70f08b06], al ; retf
0x0000000000080dae : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000004b412 : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; ret
0x000000000013adcd : or eax, dword ptr [rax] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbp ; ret
0x000000000013b8f7 : or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000010a502 : or eax, dword ptr [rax] ; call 0x36fc4
0x000000000013ae7a : or eax, dword ptr [rax] ; call 0x978c4
0x000000000013ae79 : or eax, dword ptr [rax] ; call 0x978c5
0x000000000013b00e : or eax, dword ptr [rax] ; call rax
0x0000000000130380 : or eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000133458 : or eax, dword ptr [rax] ; syscall
0x0000000000112f38 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000013ba83 : or eax, dword ptr ss:[rax] ; syscall
0x00000000000ed567 : or eax, ebp ; ret
0x000000000004560d : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000004a630 : or eax, edi ; ret
0x000000000004551b : or eax, edx ; movq xmm0, rax ; ret
0x0000000000055b9b : or eax, edx ; ret
0x0000000000132ee4 : or eax, esi ; bswap eax ; ret
0x000000000005ad80 : or eax, esi ; movq xmm0, rax ; ret
0x0000000000122106 : or eax, esi ; ret
0x00000000000d7181 : or ebp, dword ptr [rbp + 0x11] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000019a194 : or ebx, edi ; je 0x19a151 ; xor r10d, r10d ; jmp 0x19a170
0x0000000000171023 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000114b2a : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000000a7ac0 : or ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000009f844 : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000000e3edb : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012c80d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x0000000000096fed : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000d21e4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000d2234 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000314a9 : or ecx, dword ptr [rcx - 0x77] ; int1 ; mov r10, rcx ; jmp 0x31470
0x000000000014b694 : or ecx, dword ptr [rdi] ; retf 0x5389
0x00000000000ba9b3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000453f2 : or ecx, eax ; movq xmm0, rcx ; ret
0x000000000013f08c : or edi, dword ptr [rdx + 0x104] ; cmove eax, edx ; ret
0x00000000001693d2 : or edi, dword ptr [rsi] ; jmp r9
0x00000000000b9ec0 : or edi, dword ptr [rsi] ; jmp rcx
0x000000000011bb40 : or edx, 0x40 ; mov eax, ecx ; syscall
0x00000000000993b2 : or edx, dword ptr [rip + 0x10894800] ; ret
0x00000000000450b9 : or edx, esi ; je 0x45010 ; ret
0x0000000000131aed : or esi, dword ptr [rbp - 0x36] ; jmp 0x131aac
0x000000000004576f : or esi, eax ; movd xmm0, esi ; ret
0x000000000005ad39 : or esi, eax ; or esi, edx ; movd xmm0, esi ; ret
0x00000000001169c2 : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000085cd4 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000170f43 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000005ad3b : or esi, edx ; movd xmm0, esi ; ret
0x0000000000085b48 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000917c1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000163f16 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000046ea1 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000017bb55 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000011bb3f : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000171092 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000171022 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170fb2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000170f42 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000013b8f6 : or r8, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000102e3e : or r9b, bpl ; retf
0x00000000000822a2 : or r9b, r13b ; ret
0x000000000017bbd7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000083709 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005be44 : or rax, 0xffffffff89410000 ; ret 0xd231
0x0000000000046700 : or rax, 0xffffffffffffffff ; ret
0x000000000018aa22 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001825f7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004a62f : or rax, rdi ; ret
0x000000000004551a : or rax, rdx ; movq xmm0, rax ; ret
0x000000000005ad7f : or rax, rsi ; movq xmm0, rax ; ret
0x0000000000122105 : or rax, rsi ; ret
0x000000000019a193 : or rbx, rdi ; je 0x19a152 ; xor r10d, r10d ; jmp 0x19a171
0x00000000000453f1 : or rcx, rax ; movq xmm0, rcx ; ret
0x00000000000452b4 : orpd xmm0, xmm1 ; ret
0x00000000000452b5 : orps xmm0, xmm1 ; ret
0x0000000000045672 : orps xmm0, xmm3 ; ret
0x00000000001301f8 : out 0, al ; add byte ptr [rax], al ; syscall
0x00000000000d7e24 : out 0, al ; and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x000000000014a738 : out 0, eax ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x000000000009f399 : out 0x14, eax ; add byte ptr [rbx + 0x22], dh ; lea rax, [rax - 8] ; ret
0x000000000004a62d : out 0x20, eax ; or rax, rdi ; ret
0x000000000015cdbd : out 0x31, eax ; fucomi st(0) ; retf
0x00000000000aba41 : out 0x39, al ; enter -0x1d8c, 0x4c ; mov eax, eax ; ret
0x000000000019774b : out 0x3e, eax ; jmp rdi
0x000000000009e7e3 : out 0x41, al ; pop rsp ; pop r13 ; jmp rax
0x000000000009002a : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000124782 : out 0x44, eax ; mov eax, esi ; syscall
0x00000000001104a8 : out 0x44, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0c1a : out 0x45, eax ; xor eax, eax ; lea r9, [rsp + 0x28] ; call rbx
0x000000000012ea97 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148b71 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000014c438 : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x00000000000a02af : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000110644 : out 0x48, al ; mov edi, ebp ; mov eax, 0x135 ; syscall
0x000000000015a963 : out 0x48, al ; mov edi, ebx ; call rcx
0x00000000001480b0 : out 0x48, al ; mov edi, ebx ; mov rcx, r13 ; call r10
0x0000000000119394 : out 0x48, al ; mov edi, esp ; call 0x255d6
0x00000000000d913c : out 0x48, al ; mov edx, eax ; mov rbx, rax ; call 0x253b9
0x00000000000d916e : out 0x48, eax ; mov edx, eax ; mov rbx, rax ; call 0x253b9
0x00000000000c0ff1 : out 0x48, eax ; mov esi, dword ptr [rsp + 0x10] ; call rbx
0x00000000000c0a71 : out 0x48, eax ; mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000009cf83 : out 0x48, eax ; mov esi, ebp ; call 0x99266
0x000000000009f420 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000048b81 : out 0x4c, al ; mov edi, ebp ; call rax
0x0000000000047b55 : out 0x4c, al ; mov edi, ebp ; call rbx
0x0000000000048b96 : out 0x4c, al ; mov edi, edi ; call 0x255d6
0x000000000011ec8a : out 0x4c, al ; mov edi, edi ; call r14
0x00000000000c091b : out 0x4c, eax ; lea ecx, [rsp + 0x30] ; call rbx
0x00000000000604ce : out 0x4c, eax ; mov dword ptr [rbp - 0xe8], eax ; call rax
0x00000000000a4fa8 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5f9a : out 0x57, eax ; ret
0x000000000008a281 : out 0x5b, al ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000019a856 : out 0x5b, al ; ret
0x00000000000e05d8 : out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000000372f7 : out 0x80, eax ; sete al ; ret
0x00000000000776a3 : out 0x83, al ; ret
0x0000000000130162 : out 0x89, al ; out dx, eax ; mov eax, 0xe4 ; syscall
0x00000000000cd12d : out 0x89, al ; ret
0x00000000000f71d5 : out 0x89, eax ; ret
0x00000000000d894f : out 0x89, eax ; ret 0x44c7
0x00000000001245ff : out 0xb8, eax ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000049e25 : out 0xb8, eax ; retf 0
0x0000000000158e7d : out 0xc7, eax ; add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r8
0x000000000011f82d : out 0xe8, al ; popfq ; jo 0x11f839 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1328 : out 0xe8, al ; ret 0x656
0x00000000000ed6b8 : out 0xe8, al ; ret 1
0x000000000011502f : out 0xe8, al ; retf
0x00000000000eb980 : out 0xe8, al ; retf 1
0x00000000000d7564 : out 0xe8, eax ; fcomip st(4) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000158759 : out 0xe8, eax ; int1 ; retf
0x000000000012c1a9 : out 0xe8, eax ; loope 0x12c147 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000008c5e0 : out 0xe8, eax ; mov edx, 0x89000011 ; ret 0x3948
0x0000000000147416 : out 0xe8, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000a58eb : out 0xe8, eax ; pop rdi ; fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000013ac57 : out 0xe8, eax ; push rbx ; in al, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d6454 : out 0xe8, eax ; push rsi ; scasb al, byte ptr [rdi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000a31f7 : out 0xe8, eax ; ret
0x000000000004e858 : out 0xe8, eax ; ret 0xad
0x000000000019ae78 : out 0xe8, eax ; shl byte ptr [rax + rbp*8 - 0x171f1401], cl ; retf
0x0000000000126c93 : out 0xef, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e6db1 : out 0xf3, al ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000017082a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001708aa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000096f23 : out 0xf8, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000818f6 : out 0xff, eax ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000108879 : out 3, eax ; call 0x25334
0x000000000012a812 : out 8, eax ; add byte ptr [rax + 0x29], cl ; retf 0xb3e8
0x0000000000139133 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000062dd9 : out dx, al ; adc byte ptr [rcx + 0x39], cl ; ret
0x000000000013f532 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x13f53f ; ret
0x000000000004e4b0 : out dx, al ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc220
0x00000000000e88f2 : out dx, al ; add dword ptr [rdx - 0x75], ecx ; cmp al, 0xf3 ; call 0x25358
0x000000000009cf86 : out dx, al ; call 0x99263
0x00000000000a1802 : out dx, al ; call rax
0x00000000001442ae : out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f6739 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000013548a : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000152d7d : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000152dbd : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0xbeeb
0x000000000013d1eb : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001441a3 : out dx, al ; dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x000000000013fed1 : out dx, al ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5f98 : out dx, al ; jmp rdi
0x0000000000122abd : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x0000000000085cd5 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039e7f : out dx, al ; mov edi, r12d ; call 0x1168d6
0x0000000000090027 : out dx, al ; mov edi, r12d ; mov eax, r9d ; syscall
0x000000000016affa : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000120209 : out dx, al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000eb1e1 : out dx, al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149bf2 : out dx, al ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000489f9 : out dx, al ; mov rdi, r12 ; call rax
0x000000000009d6c2 : out dx, al ; mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000159c8d : out dx, al ; mov rdi, rbp ; xor eax, eax ; call r14
0x0000000000159ca7 : out dx, al ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000014d245 : out dx, al ; mov rdi, rbx ; call rax
0x0000000000170c3a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000018906e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003ef26 : out dx, al ; or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x0000000000161573 : out dx, al ; or byte ptr [rax], al ; syscall
0x000000000002ec0f : out dx, al ; ret 0
0x0000000000049cbe : out dx, al ; ret 9
0x00000000000bfde9 : out dx, al ; xor eax, eax ; ret
0x00000000000e0134 : out dx, al ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000d251d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000d70ce : out dx, eax ; adc byte ptr [rcx], ch ; ret 0x5589
0x0000000000199a0a : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007eb59 : out dx, eax ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000013e05a : out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x000000000008ad92 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008adee : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115a21 : out dx, eax ; call 0x111ce3
0x0000000000109054 : out dx, eax ; call 0x25353
0x000000000003923a : out dx, eax ; call 0x254a3
0x00000000000d9301 : out dx, eax ; call 0x255a3
0x000000000007e005 : out dx, eax ; call 0x8a243
0x000000000009be81 : out dx, eax ; call 0x980d3
0x0000000000049cbc : out dx, eax ; call 0xe5fb3
0x000000000014c43b : out dx, eax ; call qword ptr [rax]
0x00000000000e165d : out dx, eax ; call r12
0x0000000000027272 : out dx, eax ; call rax
0x0000000000047b58 : out dx, eax ; call rbx
0x0000000000149cb9 : out dx, eax ; call rcx
0x0000000000126354 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000126f6a : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012eb3d : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000012dc7b : out dx, eax ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000fc569 : out dx, eax ; enter 0xf66, -0x11 ; ret 0xf41
0x000000000012b9fa : out dx, eax ; inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000014a67d : out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000011059e : out dx, eax ; mov eax, 0x135 ; syscall
0x0000000000117a3d : out dx, eax ; mov eax, 0x147 ; syscall
0x0000000000117b9d : out dx, eax ; mov eax, 0x148 ; syscall
0x0000000000111d8a : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000004a07c : out dx, eax ; mov eax, 0xca ; syscall
0x0000000000130164 : out dx, eax ; mov eax, 0xe4 ; syscall
0x000000000011baee : out dx, eax ; mov eax, 9 ; syscall
0x0000000000105cf0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000016ae2a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af26 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae72 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ab7c0 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000009a73d : out dx, eax ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x000000000011d920 : out dx, eax ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000011cca7 : out dx, eax ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000ab920 : out dx, eax ; mov rax, r8 ; ret
0x0000000000059608 : out dx, eax ; mov rax, rdx ; ret
0x00000000000a126d : out dx, eax ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000000cdbb9 : out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000170cba : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000018916d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000080dad : out dx, eax ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000008a285 : out dx, eax ; pop rbp ; pop r12 ; jmp rax
0x000000000009d6c5 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008a78e : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000009ce32 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000014b39e : out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000190eb3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190e8b
0x0000000000190f31 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190f09
0x00000000001913c3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19139b
0x0000000000191441 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191419
0x00000000001924e3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1924bb
0x0000000000192561 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192539
0x00000000001929f3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1929cb
0x0000000000192a71 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192a49
0x0000000000190ab3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190ac8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190add : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fc56d : out dx, eax ; ret 0xf41
0x00000000000be7c3 : out dx, eax ; ret 0xf66
0x00000000000be7a6 : out dx, eax ; retf 0x4466
0x00000000000967d7 : out dx, eax ; ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x0000000000138ce2 : out dx, eax ; ror byte ptr [rdi], 0xb7 ; retf
0x00000000000ac12e : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000191fcc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191fb5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191f9e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000190a5a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000159c90 : out dx, eax ; xor eax, eax ; call r14
0x0000000000159caa : out dx, eax ; xor eax, eax ; call rcx
0x0000000000122a82 : out dx, eax ; xor eax, eax ; ret
0x000000000011d8ff : out dx, eax ; xor edx, edx ; mov esi, 1 ; call r12
0x0000000000087a28 : out dx, eax ; xor edx, edx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011cc76 : out dx, eax ; xor esi, esi ; call r12
0x000000000018381e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000dceab : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx + 1], al ; ret 0x8944
0x00000000001940fe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001250f1 : outsb dx, byte ptr [rsi] ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000105306 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf 0xe74
0x0000000000045361 : outsb dx, byte ptr [rsi] ; enter -0x76b8, 7 ; subsd xmm0, xmm1 ; ret
0x000000000011a76f : outsb dx, byte ptr [rsi] ; enter 0x4866, 0xf ; outsb dx, byte ptr [rsi] ; ret
0x0000000000048efb : outsb dx, byte ptr [rsi] ; fimul dword ptr [rax - 0x77] ; retf 0x4866
0x000000000006eff0 : outsb dx, byte ptr [rsi] ; fmul dword ptr [rbx + 0xf660446] ; insb byte ptr [rdi], dx ; ret
0x0000000000066eae : outsb dx, byte ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000090723 : outsb dx, byte ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0xf66
0x00000000000d9f1e : outsb dx, byte ptr [rsi] ; jl 0xd9f34 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000127b2b : outsb dx, byte ptr [rsi] ; or al, 0 ; syscall
0x000000000002898d : outsb dx, byte ptr [rsi] ; ret
0x00000000001629b0 : outsb dx, byte ptr [rsi] ; ret 0x160f
0x00000000000456ca : outsb dx, byte ptr [rsi] ; ret 0x1789
0x0000000000098af8 : outsb dx, byte ptr [rsi] ; ret 0x4866
0x00000000000922e3 : outsb dx, byte ptr [rsi] ; ret 0x4d83
0x00000000000d5053 : outsb dx, byte ptr [rsi] ; ret 0x8948
0x00000000000286f2 : outsb dx, byte ptr [rsi] ; ret 0x8d48
0x000000000011c106 : outsb dx, byte ptr [rsi] ; ret 0xc931
0x0000000000094074 : outsb dx, byte ptr [rsi] ; ret 0xde9
0x0000000000091e86 : outsb dx, byte ptr [rsi] ; ret 0xe083
0x0000000000097164 : outsb dx, byte ptr [rsi] ; ret 0xe480
0x0000000000092e2b : outsb dx, byte ptr [rsi] ; ret 0xf66
0x0000000000045311 : outsb dx, byte ptr [rsi] ; ret 0xfc3
0x00000000000290de : outsb dx, byte ptr [rsi] ; ret 0xffff
0x000000000005cdee : outsb dx, byte ptr [rsi] ; retf
0x000000000012ea5e : outsb dx, byte ptr [rsi] ; retf 0x4866
0x00000000000f6052 : outsb dx, byte ptr [rsi] ; retf 0x8b48
0x0000000000091c46 : outsb dx, byte ptr [rsi] ; retf 0x8d4a
0x0000000000093f90 : outsb dx, byte ptr [rsi] ; retf 0xc189
0x000000000004acbd : outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000004587d : outsb dx, byte ptr [rsi] ; rol bl, 0xf3 ; addps xmm0, xmm0 ; ret
0x00000000000358b0 : outsb dx, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b6f24], dl ; ret
0x000000000004acb8 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000005ae14 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000551e9 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x7c89
0x0000000000039c38 : outsb dx, byte ptr [rsi] ; shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x000000000015fa06 : outsb dx, byte ptr [rsi] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000005eef2 : outsd dx, dword ptr [rsi] ; adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000015b106 : outsd dx, dword ptr [rsi] ; adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000061f88 : outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000045dd2 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a46f2 : outsd dx, dword ptr [rsi] ; add cl, byte ptr [rax - 0x7d] ; ret 0x6610
0x00000000000e43cc : outsd dx, dword ptr [rsi] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000045a1f : outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x000000000005e203 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000000ac2e8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000b014e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000010f956 : outsd dx, dword ptr [rsi] ; jg 0x10f9d8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010f9a6 : outsd dx, dword ptr [rsi] ; jle 0x10fa20 ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000dab2f : outsd dx, dword ptr [rsi] ; jo 0xdab45 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000016b5b2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000016b7b2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000127a73 : outsd dx, dword ptr [rsi] ; or al, 0 ; syscall
0x000000000012de8e : outsd dx, dword ptr [rsi] ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000124de9 : outsd dx, dword ptr [rsi] ; push rbp ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000191dcd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000191e6d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000191992 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x0000000000191a12 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x00000000000b4b9a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b4b9f : outsd dx, dword ptr [rsi] ; ret
0x000000000005eefa : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000005fc85 : outsd dx, dword ptr [rsi] ; ret 0x2be
0x000000000008cf68 : outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000008cf4b : outsd dx, dword ptr [rsi] ; ret 0x4866
0x0000000000045ea4 : outsd dx, dword ptr [rsi] ; ret 0x5e8
0x000000000006432f : outsd dx, dword ptr [rsi] ; ret 0x8349
0x0000000000198db2 : outsd dx, dword ptr [rsi] ; ret 0x8545
0x000000000008b4a2 : outsd dx, dword ptr [rsi] ; ret 0x8948
0x000000000016b767 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000045e85 : outsd dx, dword ptr [rsi] ; ret 0xa4e8
0x0000000000191e72 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000045e96 : outsd dx, dword ptr [rsi] ; ret 0xc35d
0x0000000000045f18 : outsd dx, dword ptr [rsi] ; ret 0xc764
0x0000000000196434 : outsd dx, dword ptr [rsi] ; ret 0xed85
0x0000000000045e6a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000008d01d : outsd dx, dword ptr [rsi] ; ret 0xff3
0x00000000001212dd : outsd dx, dword ptr [rsi] ; ret 0xfff8
0x00000000000f6b5d : outsd dx, dword ptr [rsi] ; ret 3
0x0000000000045b2f : outsd dx, dword ptr [rsi] ; retf
0x000000000004dd94 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000016b832 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x0000000000045e81 : outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000190eaa : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000000358b6 : outsd dx, dword ptr [rsi] ; sbb eax, dword ptr [rax] ; ret
0x0000000000065b1d : outsd dx, dword ptr [rsi] ; stc ; sti ; dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x0000000000154da6 : outsd dx, dword ptr [rsi] ; sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x0000000000146830 : outsd dx, dword ptr [rsi] ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0x0000000000181462 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000d2cb4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000d2c9f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000140d7c : pcmpeqd mm3, qword ptr [rip + 0x3948c289] ; retf 0x1677
0x00000000000af735 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x000000000018f0fa : pextrw edi, mm0, 0x77 ; ret
0x000000000018c434 : pextrw edi, mm5, 0x74 ; retf
0x000000000005e208 : pinsrw mm0, eax, 6 ; ret
0x000000000005e207 : pinsrw xmm0, eax, 6 ; ret
0x0000000000045565 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000045895 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00000000000af743 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000af2f2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaf359 ; xor eax, eax ; ret
0x00000000000af7a5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaf829 ; xor eax, eax ; ret
0x00000000000af7d4 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaf859 ; xor eax, eax ; ret
0x00000000000d1502 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xd1569 ; xor eax, eax ; ret
0x0000000000045564 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000045894 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000105935 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000d7359 : pop qword ptr [rdx] ; jbe 0xd7364 ; ret
0x000000000014cb28 : pop r11 ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000876ff : pop r12 ; jmp rax
0x000000000009d6b4 : pop r12 ; mov rax, r8 ; pop r13 ; ret
0x0000000000087a2c : pop r12 ; pop r13 ; jmp rax
0x000000000007d243 : pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x0000000000037726 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027097 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2014 : pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000049374 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002921b : pop r12 ; pop r13 ; ret
0x0000000000091390 : pop r12 ; pop r14 ; ret
0x00000000001302dd : pop r12 ; pop rbp ; ret
0x0000000000032c59 : pop r12 ; ret
0x0000000000087a2e : pop r13 ; jmp rax
0x000000000007d245 : pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000e01bc : pop r13 ; pop r14 ; jmp rax
0x0000000000048a58 : pop r13 ; pop r14 ; pop r15 ; jmp 0x25508
0x0000000000037728 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bad : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027099 : pop r13 ; pop r14 ; ret
0x00000000000f2016 : pop r13 ; pop r15 ; ret
0x0000000000049376 : pop r13 ; pop rbp ; ret
0x000000000002921d : pop r13 ; ret
0x00000000000e01be : pop r14 ; jmp rax
0x0000000000048a5a : pop r14 ; pop r15 ; jmp 0x25506
0x000000000003772a : pop r14 ; pop r15 ; jmp rax
0x00000000000277e6 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026baf : pop r14 ; pop r15 ; ret
0x000000000002709b : pop r14 ; ret
0x0000000000048a5c : pop r15 ; jmp 0x25504
0x000000000003772c : pop r15 ; jmp rax
0x00000000000277e8 : pop r15 ; pop rbp ; ret
0x0000000000026bb1 : pop r15 ; ret
0x0000000000046e5a : pop r8 ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000153932 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000000c3c35 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x000000000002acf6 : pop rax ; call r14
0x000000000002c246 : pop rax ; call r15
0x0000000000153ad9 : pop rax ; call rax
0x000000000002ba60 : pop rax ; call rbx
0x00000000000fb2cb : pop rax ; cmp dh, dh ; ret
0x00000000000a4a12 : pop rax ; dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000015393a : pop rax ; jmp rcx
0x00000000000e7dea : pop rax ; jne 0xe7df3 ; ret
0x00000000000e7de9 : pop rax ; jne 0xe7df4 ; ret
0x0000000000153150 : pop rax ; mov eax, 1 ; ret
0x0000000000037298 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000037226 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000014c4f4 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000002bdc1 : pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c5e8 : pop rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002aa47 : pop rax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002b7ea : pop rax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000011c41d : pop rax ; mov rax, r12 ; pop rdx ; pop r12 ; ret
0x000000000002fb76 : pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x000000000002b470 : pop rax ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x0000000000046e5b : pop rax ; movups xmmword ptr [rdi + 0x68], xmm0 ; ret
0x0000000000060899 : pop rax ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f1f6 : pop rax ; or al, 0xf6 ; ret
0x00000000000f764c : pop rax ; or bh, dh ; ret
0x00000000000b8db4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000582ef : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000256fe : pop rax ; pop rbx ; pop rbp ; ret
0x000000000012231f : pop rax ; pop rdi ; call rax
0x0000000000162dc5 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000028ff4 : pop rax ; ret
0x00000000001510d0 : pop rax ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d3537 : pop rax ; xor eax, eax ; mov qword ptr [rsp + 0x50], r12 ; call rbx
0x00000000000a75f1 : pop rbp ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x000000000013eaa4 : pop rbp ; add dh, dh ; ret
0x00000000000e650a : pop rbp ; clc ; leave ; ret
0x000000000012aaef : pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000087a2f : pop rbp ; jmp rax
0x0000000000149bf9 : pop rbp ; jmp rcx
0x000000000014b3a2 : pop rbp ; jmp rdx
0x00000000000e0519 : pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000caddf : pop rbp ; mov al, 0x89 ; ret 0xff25
0x0000000000137f09 : pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x0000000000130771 : pop rbp ; mov eax, 0x89483e74 ; ret
0x00000000001104bc : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008e6d7 : pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008e57b : pop rbp ; mov eax, r8d ; ret
0x00000000000912f2 : pop rbp ; mov r12, rax ; mov rax, r12 ; pop r12 ; ret
0x00000000000a3547 : pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000037b77 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009d649 : pop rbp ; mov rax, r8 ; pop r12 ; pop r13 ; ret
0x0000000000098834 : pop rbp ; mov rax, r8 ; pop r12 ; ret
0x000000000003bef4 : pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000007d246 : pop rbp ; mov rax, r9 ; pop r14 ; ret
0x000000000009e7e0 : pop rbp ; mov rsi, r12 ; pop r12 ; pop r13 ; jmp rax
0x000000000014cfdc : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000128d67 : pop rbp ; or al, 0 ; syscall
0x0000000000149b25 : pop rbp ; or al, byte ptr [rax] ; syscall
0x000000000008a286 : pop rbp ; pop r12 ; jmp rax
0x000000000009d6b3 : pop rbp ; pop r12 ; mov rax, r8 ; pop r13 ; ret
0x0000000000087a2b : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000009dd83 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000026baa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027096 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2013 : pop rbp ; pop r12 ; pop r13 ; pop r15 ; ret
0x000000000002921a : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009138f : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000032c58 : pop rbp ; pop r12 ; ret
0x00000000001397de : pop rbp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e01bd : pop rbp ; pop r14 ; jmp rax
0x0000000000048a59 : pop rbp ; pop r14 ; pop r15 ; jmp 0x25507
0x0000000000037729 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bae : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002709a : pop rbp ; pop r14 ; ret
0x00000000000f2017 : pop rbp ; pop r15 ; ret
0x0000000000049377 : pop rbp ; pop rbp ; ret
0x0000000000058c98 : pop rbp ; pop rbx ; ret
0x000000000014a21b : pop rbp ; push rsi ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000025700 : pop rbp ; ret
0x00000000000e0143 : pop rbp ; setbe al ; movzx eax, al ; ret
0x00000000000a3aee : pop rbp ; xor eax, eax ; pop r12 ; pop r13 ; ret
0x0000000000114075 : pop rbx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000014bd9d : pop rbx ; add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x00000000000bf356 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000005e53f : pop rbx ; cmovb r10, rdi ; mov rax, r10 ; ret
0x00000000000bf2ab : pop rbx ; cmove rax, rdx ; ret
0x00000000000a5dec : pop rbx ; cmovne rax, rdi ; ret
0x00000000000bf33b : pop rbx ; cmovne rax, rdx ; ret
0x00000000000c2061 : pop rbx ; je 0xc2063 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000094b98 : pop rbx ; jmp rax
0x00000000000f5250 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000008a628 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000014be18 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000001302ee : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x000000000010a276 : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000010f768 : pop rbx ; mov eax, 9 ; pop rbp ; pop r12 ; ret
0x000000000004a6cd : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000015351f : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000049ddb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000013f8eb : pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000098629 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000913a4 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bfdaf : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013eaef : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000088985 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000008a282 : pop rbx ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000091140 : pop rbx ; neg eax ; ret
0x0000000000128f47 : pop rbx ; or al, 0 ; syscall
0x0000000000144478 : pop rbx ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000000bff12 : pop rbx ; or eax, 0x450f4800 ; ret 0x66c3
0x00000000000876fe : pop rbx ; pop r12 ; jmp rax
0x0000000000113140 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000049373 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000065649 : pop rbx ; pop r12 ; pop r13 ; ret
0x000000000005ea17 : pop rbx ; pop r12 ; ret
0x0000000000027627 : pop rbx ; pop r14 ; ret
0x000000000008a78f : pop rbx ; pop rbp ; jmp rax
0x0000000000149bf8 : pop rbx ; pop rbp ; jmp rcx
0x00000000000e0518 : pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000001104bb : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000008e6d6 : pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000008e57a : pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000000abf9b : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x0000000000037b76 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000098833 : pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x000000000003bef3 : pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000014cfdb : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x000000000009ce33 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000044307 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2012 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r15 ; ret
0x0000000000029219 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009138e : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000032d80 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001397dd : pop rbx ; pop rbp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000019a122 : pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000256ff : pop rbx ; pop rbp ; ret
0x0000000000143e41 : pop rbx ; push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000332ff : pop rbx ; ret
0x000000000006d050 : pop rbx ; retf
0x000000000010f7be : pop rbx ; setl al ; ret
0x000000000011c97e : pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000bf2ba : pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x00000000000bf305 : pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x00000000000c9ae1 : pop rbx ; str word ptr [rax - 0x77] ; ret 0xc148
0x00000000000926bf : pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004a69c : pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x00000000001302da : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000014b39f : pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000093210 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014d896 : pop rcx ; adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x00000000000a0a4c : pop rcx ; adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0xa0a0d
0x000000000009bc83 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000001691a7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004549f : pop rcx ; add eax, 0x179b6b ; ret
0x0000000000045804 : pop rcx ; add eax, 0x179ea6 ; ret
0x00000000000457b9 : pop rcx ; add eax, 0x179ee9 ; ret
0x0000000000045794 : pop rcx ; add eax, 0x179f12 ; ret
0x00000000000b2194 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a4e33 : pop rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000129149 : pop rcx ; or al, 0 ; syscall
0x00000000001826e7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a39f3 : pop rcx ; or eax, 0x450f4800 ; ret 0xfc3
0x000000000011c360 : pop rcx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015b9d3 : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010582e : pop rcx ; pop rbx ; ret
0x000000000010a21c : pop rcx ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011bf5f : pop rcx ; ret 0xf66
0x0000000000147419 : pop rcx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d3303 : pop rcx ; stosb byte ptr [rdi], al ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000f4e16 : pop rcx ; xor eax, eax ; pop rbp ; ret
0x0000000000114be9 : pop rcx ; xor ecx, dword ptr [rdx] ; add byte ptr [rcx], dh ; shr al, 0x8c ; ret
0x00000000001699a9 : pop rdi ; adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000110ee2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000196572 : pop rdi ; add dword ptr [rcx - 9], eax ; ret
0x00000000001897fd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000054e9b : pop rdi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000445f1 : pop rdi ; and byte ptr [rcx + rcx*4 - 0x28], cl ; ret
0x0000000000187e92 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x0000000000122320 : pop rdi ; call rax
0x00000000000a58ed : pop rdi ; fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000016b3c9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b1d9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000048a5d : pop rdi ; jmp 0x25503
0x000000000003772d : pop rdi ; jmp rax
0x00000000000e5f74 : pop rdi ; mov eax, 0x3a ; syscall
0x0000000000128ad3 : pop rdi ; or al, 0 ; syscall
0x0000000000084fe7 : pop rdi ; or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x000000000016aff9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ae29 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016af25 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016ae71 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000277e9 : pop rdi ; pop rbp ; ret
0x0000000000026bb2 : pop rdi ; ret
0x000000000009addc : pop rdi ; xor byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000182be6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000054f69 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000117c60 : pop rdx ; add rsp, 0x38 ; ret
0x00000000000831d2 : pop rdx ; and edx, edi ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x00000000000da1ee : pop rdx ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000000bfaca : pop rdx ; idiv bh ; pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011ce9b : pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x00000000000aac79 : pop rdx ; or dword ptr [rax], eax ; add bh, dh ; ret
0x000000000011c421 : pop rdx ; pop r12 ; ret
0x0000000000162dc6 : pop rdx ; pop rbx ; ret
0x000000000010582d : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000083f4a : pop rdx ; retf
0x0000000000130c42 : pop rdx ; sub al, 6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000d27f5 : pop rdx ; test al, 0xf0 ; jne 0xd2829 ; lea rax, [rdi - 0x10] ; ret
0x0000000000135852 : pop rdx ; xchg eax, ebp ; or eax, dword ptr [rax] ; syscall
0x00000000000a2559 : pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000190eb4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190e8a
0x0000000000190f32 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x190f08
0x00000000001913c4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19139a
0x0000000000191442 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191418
0x00000000001924e4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1924ba
0x0000000000192562 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192538
0x00000000001929f4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1929ca
0x0000000000192a72 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x192a48
0x00000000001896fe : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000130dde : pop rsi ; fdivp st(0) ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000014f529 : pop rsi ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000e01bf : pop rsi ; jmp rax
0x000000000008013e : pop rsi ; mov bh, 0x16 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000128ba3 : pop rsi ; or al, 0 ; syscall
0x0000000000048a5b : pop rsi ; pop r15 ; jmp 0x25505
0x000000000003772b : pop rsi ; pop r15 ; jmp rax
0x00000000000277e7 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000026bb0 : pop rsi ; pop r15 ; ret
0x000000000002709c : pop rsi ; ret
0x0000000000183a30 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182ee4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184730 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000009aab2 : pop rsp ; and al, 0x20 ; mov qword ptr [rsp + 0x18], r8 ; call rax
0x00000000000d3469 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000015d450 : pop rsp ; and dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; fild dword ptr [rcx - 0x77] ; ret 0xf883
0x000000000007f864 : pop rsp ; cli ; dec dword ptr [rax - 0x77] ; ret 0xd9e9
0x00000000000456d0 : pop rsp ; enter 0x280f, -0x3f ; ret
0x000000000014f6f9 : pop rsp ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000087700 : pop rsp ; jmp rax
0x000000000009d6b5 : pop rsp ; mov rax, r8 ; pop r13 ; ret
0x00000000001818c0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d7358 : pop rsp ; pop qword ptr [rdx] ; jbe 0xd7365 ; ret
0x0000000000087a2d : pop rsp ; pop r13 ; jmp rax
0x000000000007d244 : pop rsp ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x0000000000048a57 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x25509
0x0000000000037727 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000277e3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026bac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027098 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f2015 : pop rsp ; pop r13 ; pop r15 ; ret
0x0000000000049375 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000002921c : pop rsp ; pop r13 ; ret
0x0000000000091391 : pop rsp ; pop r14 ; ret
0x00000000001302de : pop rsp ; pop rbp ; ret
0x00000000000da1ed : pop rsp ; pop rdx ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000032c5a : pop rsp ; ret
0x00000000000290f0 : pop rsp ; ret 0xffff
0x0000000000083ea0 : pop rsp ; retf
0x0000000000058b79 : pop rsp ; retf 0x4df0
0x000000000006e243 : pop rsp ; retf 0xffff
0x0000000000057747 : pop rsp ; sbb dword ptr [rax], eax ; syscall
0x00000000000a8805 : pop rsp ; syscall
0x000000000007c3a0 : pop rsp ; test al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e1ba9 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000119b32 : pop rsp ; xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000119af2 : pop rsp ; xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x0000000000041ccc : popfq ; adc byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x0000000000029127 : popfq ; insd dword ptr [rdi], dx ; sbb al, 0 ; ret
0x000000000011f82f : popfq ; jo 0x11f837 ; dec dword ptr [rax - 0x77] ; ret
0x000000000004a4df : popfq ; mov al, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000134f67 : popfq ; or eax, dword ptr [rax] ; syscall
0x0000000000059efe : popfq ; ret 0x3948
0x00000000000c7e14 : popfq ; ret 0x840
0x00000000000d5ba7 : popfq ; ret 0xd089
0x000000000014afaf : popfq ; retf 0xffee
0x0000000000048a5f : popfq ; retf 0xfffd
0x00000000000ddde2 : popfq ; sar dh, 0xff ; dec dword ptr [rdi] ; ret 0x8d89
0x0000000000185110 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000874a7 : popfq ; sub dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d59be : popfq ; test byte ptr [rcx], dl ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x0000000000170d82 : psllq mm1, qword ptr [r15] ; jg 0x170d9d ; ret
0x00000000001738b2 : psllq mm1, qword ptr [r15] ; jg 0x1738cd ; ret
0x0000000000170d83 : psllq mm1, qword ptr [rdi] ; jg 0x170d9c ; ret
0x00000000001738b3 : psllq mm1, qword ptr [rdi] ; jg 0x1738cc ; ret
0x00000000000ba136 : psllq mm1, qword ptr [rdi] ; jg 0xba14a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba135 : psllq mm1, qword ptr [rdi] ; jg 0xba14b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba197 : psllq mm1, qword ptr [rdi] ; jg 0xba1ac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bae26 : psllq mm1, qword ptr [rdi] ; jg 0xbae3a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bae25 : psllq mm1, qword ptr [rdi] ; jg 0xbae3b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bae87 : psllq mm1, qword ptr [rdi] ; jg 0xbae9c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bd446 : psllq mm1, qword ptr [rdi] ; jg 0xbd45a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd445 : psllq mm1, qword ptr [rdi] ; jg 0xbd45b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd4a7 : psllq mm1, qword ptr [rdi] ; jg 0xbd4bc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bdf36 : psllq mm1, qword ptr [rdi] ; jg 0xbdf4a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdf35 : psllq mm1, qword ptr [rdi] ; jg 0xbdf4b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdf97 : psllq mm1, qword ptr [rdi] ; jg 0xbdfac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000d7632 : psubsb mm3, mm0 ; add eax, 0x89480000 ; ret
0x00000000000917b1 : punpcklqdq xmm0, xmm0 ; movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x0000000000119fa2 : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000002a7fa : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x000000000012eb3c : push -0x11 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000033060 : push -0x1605feb4 ; ret 0xfffe
0x00000000000a1172 : push -0x36 ; adc al, 0 ; syscall
0x00000000001248e0 : push -0x3f7cb7ec ; and ecx, dword ptr [rax - 0x77] ; ret 0x2548
0x000000000011a232 : push -0x4e ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000155082 : push -0x56 ; or dword ptr [rax], eax ; syscall
0x00000000001457aa : push -0x61 ; or al, byte ptr [rax] ; syscall
0x00000000000e5502 : push -0x76b7000a ; ret 0xffb8
0x00000000001940e4 : push -0x9ffffff ; ret 0x7501
0x00000000000d27e7 : push -0xfb872b8 ; ret
0x00000000000e70b3 : push 0 ; add byte ptr [rax], al ; syscall
0x00000000000ce15a : push 0 ; mov r9, qword ptr [rsp + 0x10] ; call r14
0x00000000001561fb : push 0 ; push 0x3c ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a3822 : push 0 ; str word ptr [rax + 0xf] ; ret 0xfc3
0x000000000013adcb : push 0x1000b43 ; mov eax, r8d ; pop rbp ; ret
0x0000000000096a19 : push 0x15 ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000096a6f : push 0x15 ; add byte ptr [rcx], al ; ret
0x000000000019bf72 : push 0x15 ; add eax, 0x5b050f00 ; ret
0x00000000000eec5a : push 0x1f0f10eb ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002d891 : push 0x244c8b48 ; or byte ptr [rcx + 0x39], cl ; retf 0x850f
0x000000000004a952 : push 0x28 ; sbb al, byte ptr [rax] ; syscall
0x00000000001561fd : push 0x3c ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000d5fe9 : push 0x45334861 ; add byte ptr [rax + 9], cl ; ret 0x850f
0x0000000000097d72 : push 0x57 ; adc eax, 0x5b050f00 ; ret
0x00000000000c0130 : push 0x5c415d5b ; pop r13 ; ret
0x0000000000127c6a : push 0x6d ; or al, 0 ; syscall
0x000000000009b56e : push 0x6e0f4966 ; ret
0x0000000000104a27 : push 0x7601fb83 ; movsxd rax, dword ptr [rcx - 0x77] ; retf
0x00000000000c06df : push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000152ff2 : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000babb2 : push 5 ; add byte ptr [rax], al ; ret
0x000000000010aaf5 : push qword ptr [rax + rbx*8 - 0x77] ; ret 0xc085
0x000000000006e26d : push qword ptr [rax - 0x17] ; cmc ; retf 0xffff
0x00000000000b97bf : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000011a5bd : push qword ptr [rbp + 0x10] ; mov eax, 1 ; ret
0x0000000000195a68 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000011cd8c : push qword ptr [rbp + 0x27] ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011dcc0 : push qword ptr [rbp + 0x3e] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcec : push qword ptr [rbp + 0x69] ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000188289 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000010f9cd : push qword ptr [rbp + 5] ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000019b046 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff7
0x000000000019af46 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff8
0x000000000019ae46 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff9
0x000000000019ad46 : push qword ptr [rbp + rax - 0x18] ; ret 0xfffa
0x000000000008a551 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000066000 : push qword ptr [rbp + rcx + 0x44] ; mov eax, eax ; ret
0x000000000019b13d : push qword ptr [rbp + rdx - 0x18] ; retf
0x0000000000059606 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000013af22 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00000000001443d3 : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ea95 : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000095b50 : push qword ptr [rbp - 0x40] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000466f0 : push qword ptr [rbx + 1] ; ret
0x0000000000057fe6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000001568aa : push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000d601c : push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000c40ad : push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0x48e9
0x000000000005494f : push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcde9
0x00000000000c93e7 : push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000000dffdb : push qword ptr [rcx] ; imul cl ; retf 0xffef
0x00000000000718b1 : push qword ptr [rcx] ; inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x718d6
0x0000000000073d32 : push qword ptr [rcx] ; inc dword ptr [rbp + 0x31] ; leave ; mov edx, r8d ; jmp 0x73d57
0x000000000011535a : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000915c3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000006b67e : push qword ptr [rcx] ; shr cl, 0xb5 ; retf
0x00000000000e5fdb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000001229c4 : push qword ptr [rdi + 0x31] ; mov r8d, eax ; mov eax, r8d ; ret
0x00000000000e5c9c : push qword ptr [rdi + 0x31] ; ret
0x00000000000e5d1c : push qword ptr [rdi + 0x41] ; ret
0x0000000000046771 : push qword ptr [rdi + 0x4c] ; ret
0x0000000000116e36 : push qword ptr [rdi + 0x4f] ; ret
0x000000000004b52c : push qword ptr [rdi + 0x51] ; ret
0x00000000000e5a4f : push qword ptr [rdi + 0x56] ; ret
0x000000000010f3cf : push qword ptr [rdi + 0x5e] ; ret
0x000000000011bafb : push qword ptr [rdi + 0x62] ; pop rbx ; pop rbp ; ret
0x0000000000117802 : push qword ptr [rdi + 0x63] ; ret
0x0000000000123dbf : push qword ptr [rdi + 0x66] ; ret
0x0000000000123535 : push qword ptr [rdi + 0x68] ; ret
0x00000000000e5b42 : push qword ptr [rdi + 0x6b] ; ret
0x000000000011824f : push qword ptr [rdi + 0x6e] ; ret
0x0000000000122435 : push qword ptr [rdi + 0x70] ; ret
0x000000000011627f : push qword ptr [rdi + 0x76] ; ret
0x0000000000065fb3 : push qword ptr [rdi + 0xa] ; ret
0x0000000000131b12 : push qword ptr [rdi + 0xb] ; ret
0x000000000011639c : push qword ptr [rdi + 1] ; ret
0x0000000000110c0a : push qword ptr [rdi + 3] ; ret
0x0000000000117049 : push qword ptr [rdi + 4] ; ret
0x0000000000065f80 : push qword ptr [rdi + 5] ; ret
0x000000000011075f : push qword ptr [rdi + 6] ; ret
0x00000000000466b6 : push qword ptr [rdi + 7] ; ret
0x0000000000046725 : push qword ptr [rdi + 8] ; ret
0x0000000000110c64 : push qword ptr [rdi + 9] ; ret
0x00000000000fb45c : push qword ptr [rdi + rax + 1] ; retf 0x4801
0x00000000000e91d8 : push qword ptr [rdx + rcx + 0x48] ; mov edi, ebx ; call r15
0x000000000011b91b : push qword ptr [rsi + rax - 0x77] ; cmp eax, 0xcea24 ; ret
0x000000000012512f : push qword ptr [rsi + rbp - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000094fb0 : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x00000000000956ba : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x0000000000058120 : push r10 ; ret
0x0000000000155fa9 : push r12 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000155fa7 : push r13 ; push r12 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a1a68 : push r8 ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x000000000014b885 : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000014b6c5 : push rax ; adc al, 0xf ; retf 0xd189
0x00000000000a0272 : push rax ; adc byte ptr [rax + 0x31], cl ; retf 0x8948
0x000000000014b87c : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000089ece : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000009afaa : push rax ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001538d6 : push rax ; adc byte ptr [rbx + 0x78ff853b], cl ; ret 0xbde8
0x0000000000096709 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000014b6ba : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x000000000014a2f6 : push rax ; adc dh, dh ; ret 0x7401
0x00000000000b439d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000151fcf : push rax ; add cl, byte ptr [rax + 0xf] ; ret 0x8944
0x0000000000098084 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0x152243 ; ret
0x00000000000910b0 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000bffde : push rax ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000c8ef5 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001052cc : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b4d
0x00000000000a1a69 : push rax ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x0000000000028340 : push rax ; call rbx
0x000000000015a758 : push rax ; cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x00000000000589e6 : push rax ; cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x00000000000818f8 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000012d42c : push rax ; fdivr st(7) ; dec dword ptr [rcx] ; ret
0x0000000000077eac : push rax ; inc esi ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000005e23c : push rax ; jb 0x5e241 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000009d58c : push rax ; loope 0x9d5a5 ; add al, ch ; retf
0x00000000000d5651 : push rax ; mov eax, 0x8945051e ; retf 0xc141
0x0000000000153913 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000030e8e : push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002f791 : push rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000153cbe : push rax ; mov rcx, qword ptr [rsp + 0x10] ; mov rdi, r15 ; call rcx
0x000000000002d177 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002acf1 : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000002c241 : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x000000000002ba5b : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x00000000000d3656 : push rax ; mov rsi, r15 ; mov rdi, rbp ; call rbx
0x000000000012ef36 : push rax ; mov rsi, rdx ; call rax
0x0000000000089f10 : push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000014b6af : push rax ; or al, 0xf ; retf 0xd189
0x00000000000f6d48 : push rax ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000011d81f : push rax ; or byte ptr [rbx + 0x94801e2], al ; retf 0x8948
0x0000000000100f64 : push rax ; or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x000000000014b69f : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x00000000000f0b01 : push rax ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8040
0x000000000009c46a : push rax ; or dh, dh ; ret 0xf02
0x00000000001817cc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000501c4 : push rax ; or eax, 0x89410000 ; ret 0xd231
0x0000000000151ad1 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115358 : push rax ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000453c7 : push rax ; ret
0x0000000000064569 : push rax ; ret 0xb60f
0x000000000003f5cc : push rax ; retf
0x000000000012d92c : push rax ; sar edi, cl ; dec dword ptr [rcx] ; ret
0x00000000000966fa : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000014b6d0 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000012bc99 : push rax ; sbb dh, dh ; ret 0x7508
0x0000000000108876 : push rax ; shl rdi, 3 ; call 0x25337
0x0000000000130039 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000089472 : push rax ; sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x0000000000114b2d : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000114adf : push rax ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000116439 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000014466b : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000008d019 : push rbp ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xff3
0x000000000009633c : push rbp ; adc eax, 0x2d8d4800 ; ret 0x1562
0x00000000000f1124 : push rbp ; add al, 1 ; ret 0x341
0x00000000000ee167 : push rbp ; add bh, byte ptr [rcx] ; retf
0x000000000004ccda : push rbp ; add bh, dh ; ret 0
0x000000000004d02e : push rbp ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a8091 : push rbp ; add byte ptr [rbp - 0x77], cl ; adc eax, dword ptr [rbp - 0x77] ; ret 0x8b4b
0x00000000000eed5d : push rbp ; add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x000000000008ce1f : push rbp ; add dh, dh ; ret 0x7402
0x000000000019a11d : push rbp ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000009b670 : push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000014a1c4 : push rbp ; call 0x156433
0x0000000000124db9 : push rbp ; or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000124d93 : push rbp ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001295db : push rbp ; or al, 0 ; syscall
0x0000000000186258 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000104e3a : push rbp ; or byte ptr [rax - 0x75], 4 ; ret 0x8948
0x000000000012fb2e : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012fa60 : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012f550 : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esp ; call rax
0x000000000012f4eb : push rbp ; or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012f838 : push rbp ; or byte ptr [rcx + rcx*4 - 6], 0xf ; adc dword ptr [rbp - 0x78], ecx ; call rax
0x0000000000155fa8 : push rbp ; push r12 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a901c : push rbp ; ret 0xda89
0x000000000015f127 : push rbp ; retf 0xfffb
0x00000000000ef8aa : push rbp ; sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000057e57 : push rbp ; sbb dword ptr [rax], eax ; syscall
0x000000000014cd9c : push rbp ; sub byte ptr [rax + 1], cl ; ret 0x5d89
0x000000000005545a : push rbp ; sub dword ptr [rip + 0x197d7e], 1 ; pop rbx ; ret
0x000000000008be91 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000142471 : push rbx ; adc byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8348
0x000000000014b63d : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x000000000010f634 : push rbx ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f75c : push rbx ; add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000010f83d : push rbx ; add al, 0xeb ; ret
0x00000000000a8f61 : push rbx ; add al, byte ptr [rax] ; add bh, dh ; ret
0x000000000011fe62 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000003b262 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012476c : push rbx ; add dword ptr [rcx + 0x39], ecx ; ret 0x4f73
0x00000000000ee4bd : push rbx ; add dword ptr [rcx - 0x7f], ecx ; ret
0x0000000000105c52 : push rbx ; add rsp, 0x38 ; ret
0x00000000000a8f79 : push rbx ; and al, 0 ; add bh, dh ; ret
0x000000000008f18e : push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000014b877 : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000013ac59 : push rbx ; in al, 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a6a2d : push rbx ; inc dword ptr [rbp + rcx*4 + 0x60] ; add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x0000000000193999 : push rbx ; jb 0x1939a9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008a56f : push rbx ; je 0x8a5d3 ; pop rbp ; pop r12 ; ret
0x00000000000dab4f : push rbx ; jo 0xdab65 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000000d27cc : push rbx ; lea rax, [rdi - 0x10] ; ret
0x0000000000143dc9 : push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000889de : push rbx ; mov rbx, rsi ; call 0x25426
0x00000000000bb222 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000064482 : push rbx ; or al, 0xf6 ; ret 0x7401
0x000000000006248a : push rbx ; or al, 0xf6 ; ret 0xf01
0x0000000000084232 : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000006469c : push rbx ; or al, 0xf6 ; ret 0xf40
0x000000000009035a : push rbx ; or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011d1ea : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000014b62d : push rbx ; or byte ptr [rdi], cl ; retf 0x5089
0x00000000000e7de8 : push rbx ; pop rax ; jne 0xe7df5 ; ret
0x00000000000e7de7 : push rbx ; pop rax ; jne 0xe7df6 ; ret
0x00000000000e88f9 : push rbx ; retf 0xfff3
0x0000000000066aac : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014b86a : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000012f6a9 : push rbx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000e804b : push rbx ; setne al ; ret
0x000000000014b880 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000bfa29 : push rbx ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000008454e : push rbx ; xor al, 0xe9 ; ret 0xfffc
0x000000000014b888 : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000de443 : push rcx ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000151da9 : push rcx ; add cl, byte ptr [rax + 0xf] ; retf 0xc689
0x000000000013f8a2 : push rcx ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0xc639
0x00000000000bf608 : push rcx ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000004ab68 : push rcx ; add rsp, 0x18 ; ret
0x000000000005e13b : push rcx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000162f33 : push rcx ; iretd ; or byte ptr [rax], al ; call qword ptr [rax]
0x0000000000193181 : push rcx ; jl 0x1931d2 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001932e8 : push rcx ; jl 0x193339 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a28f3 : push rcx ; jo 0xa28f0 ; ret 0
0x00000000000d301d : push rcx ; mov eax, 0x148051e ; ret 0xb848
0x000000000009b2ed : push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000017bdd6 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000011922e : push rcx ; or eax, 0x200 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004b52e : push rcx ; ret
0x0000000000073581 : push rcx ; ret 0xffff
0x000000000006b996 : push rcx ; retf
0x00000000000a118b : push rcx ; retf 0x14
0x000000000009952d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000014d892 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; pop rcx ; adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x00000000000be302 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bc6a2 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000be460 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000097d73 : push rdi ; adc eax, 0x5b050f00 ; ret
0x00000000000be138 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be14a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bb69a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000bc4ea : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x0000000000170ee9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000056555 : push rdi ; add al, byte ptr [rcx - 0x77] ; ret
0x00000000000be10a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000005a18f : push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000bb74c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000bc5ac : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000be168 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a14a8 : push rdi ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000009bd7c : push rdi ; and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000016acb8 : push rdi ; clc ; ret
0x000000000016ae30 : push rdi ; cld ; ret
0x000000000016b957 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001707c9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000008cf43 : push rdi ; cmp byte ptr [rax - 0x75], cl ; xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000faa7b : push rdi ; cmp dh, dh ; ret 0xf08
0x00000000000a53bf : push rdi ; dec dword ptr [rax + 0x29] ; ret
0x000000000015d500 : push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x0000000000170749 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000017059a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000faac1 : push rdi ; ljmp [rcx] ; ret 0x6348
0x000000000017062a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000005ef15 : push rdi ; or al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000124c52 : push rdi ; or al, 0 ; pop rbx ; ret
0x000000000013e7cf : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000013a0d1 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000be1ac : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1ea : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be18a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000926bd : push rdi ; or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000005abba : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000015d84a : push rdi ; or byte ptr [rcx + 1], cl ; idiv byte ptr [rcx] ; retf 0x850f
0x0000000000058c8a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000058c91 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000910b4 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000d70c2 : push rdi ; or byte ptr [rdi], cl ; test dword ptr [rsi - 0x76000003], eax ; retf 0x8348
0x000000000014480a : push rdi ; or dh, dh ; ret 0x7401
0x00000000000bb930 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000bc7a0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000e5f9b : push rdi ; ret
0x0000000000191e6e : push rdi ; ret 0xff3
0x0000000000068f15 : push rdi ; retf
0x0000000000191a13 : push rdi ; retf 0xcab2
0x00000000000e8135 : push rdi ; sal ebx, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ec591 : push rdi ; sbb al, 0x10 ; add cl, ch ; retf 0xfff7
0x000000000015a81e : push rdi ; sbb byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000057c77 : push rdi ; sbb dword ptr [rax], eax ; syscall
0x000000000016bb57 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b37a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000016b757 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ab15 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000015a8eb : push rdi ; sub byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; ret
0x0000000000077650 : push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ea1f3 : push rdi ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000000be440 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b4b9b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000af2f8 : push rdi ; xor eax, eax ; ret
0x000000000012c588 : push rdx ; adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; retf 0xed75
0x000000000011d14c : push rdx ; adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000013f803 : push rdx ; add dword ptr [rbp - 0x76fdefbc], ecx ; ret 0x8041
0x0000000000124742 : push rdx ; add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x000000000013f81b : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000e21d0 : push rdx ; add rsp, 0x38 ; ret
0x00000000000f08da : push rdx ; dec dword ptr [rcx + 0x29] ; ret 0x8349
0x0000000000106576 : push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x00000000000d9f3e : push rdx ; jl 0xd9f54 ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000037255 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000a291b : push rdx ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000a1ad6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000037225 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000001295da : push rdx ; push rbp ; or al, 0 ; syscall
0x0000000000058121 : push rdx ; ret
0x00000000001698a9 : push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x0000000000095e6a : push rdx ; sbb al, byte ptr [rax] ; add cl, ch ; retf
0x000000000010fac5 : push rdx ; sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000009996e : push rdx ; sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8949
0x00000000001462c2 : push rdx ; xchg eax, esp ; or al, byte ptr [rax] ; syscall
0x0000000000140dd6 : push rsi ; adc al, 0xf ; xchg eax, ebp ; ret 0x2144
0x000000000010314e : push rsi ; adc byte ptr [rax + 0x63], cl ; retf
0x0000000000190ab4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001937cd : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x193824 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000171181 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000113ac4 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x000000000011929b : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x00000000001711f1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000005a83f : push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000ba0c5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000137c2f : push rsi ; add eax, 0x5bf08948 ; ret
0x0000000000171111 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba063 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000002a5da : push rsi ; and byte ptr [rax + rax], bl ; test eax, eax ; je 0x2a5f0 ; ret
0x0000000000190ac9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c9f3 : push rsi ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000016ade2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016b551 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b185 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b365 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b545 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016afa5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001955a6 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000000feed2 : push rsi ; cmovs ebp, dword ptr [rcx] ; ret 0x8348
0x0000000000087566 : push rsi ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000195596 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000012a9c3 : push rsi ; in eax, 8 ; add byte ptr [rax + 0x29], cl ; retf 0x1e8
0x0000000000195566 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000012ef16 : push rsi ; je 0x12ef28 ; mov eax, 7 ; ret
0x00000000000d6616 : push rsi ; js 0xd6630 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015b006 : push rsi ; mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000124c6c : push rsi ; or al, 0 ; pop rbx ; ret
0x0000000000129523 : push rsi ; or al, 0 ; syscall
0x000000000007de5b : push rsi ; or al, 0xf6 ; ret 0xf08
0x000000000014a21c : push rsi ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000014a207 : push rsi ; or al, byte ptr [rax] ; test eax, eax ; je 0x14a217 ; ret
0x000000000004af42 : push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000009b5ad : push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f1d01 : push rsi ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000045673 : push rsi ; ret
0x000000000007f57a : push rsi ; ret 0xf10
0x00000000000d6456 : push rsi ; scasb al, byte ptr [rdi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c9a0e : push rsi ; str word ptr [rax + 0x21] ; ret 0x8948
0x0000000000195576 : push rsi ; sub eax, edx ; ret
0x0000000000115a7b : push rsi ; xor ax, ax ; ret
0x0000000000190ade : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009870c : push rsp ; adc eax, 0x48a77600 ; add esp, 8 ; ret
0x0000000000116e27 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000a7362 : push rsp ; add cl, byte ptr cs:[rax - 0x77] ; retf
0x00000000000a7db6 : push rsp ; add cl, byte ptr ss:[rax - 0x77] ; retf
0x00000000001589bb : push rsp ; add dword ptr [r8 - 0x77], r9d ; ret 0x4c88
0x000000000014007c : push rsp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a740 : push rsp ; and al, 0x10 ; call qword ptr [rax]
0x00000000000e5b7f : push rsp ; and al, 0x10 ; mov eax, 0xf7 ; syscall
0x00000000000abbea : push rsp ; and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x0000000000123638 : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; syscall
0x00000000000abba4 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abb12 : push rsp ; and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x000000000014a0f5 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000015072b : push rsp ; and al, 0x20 ; mov rdi, r12 ; call rdx
0x00000000000e1dbc : push rsp ; and al, 0x28 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000116b06 : push rsp ; and al, 0x30 ; mov eax, 0x10 ; syscall
0x00000000000abb83 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x0000000000045a1a : push rsp ; and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x00000000000abc61 : push rsp ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abc48 : push rsp ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x00000000000abc30 : push rsp ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb6b : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abc12 : push rsp ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb4d : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000013fc46 : push rsp ; and al, 8 ; jne 0x13fc82 ; add rsp, 0x38 ; ret
0x000000000012230b : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000187277 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ab6d0 : push rsp ; cmp esp, edi ; jmp 0xa7910
0x00000000000e2548 : push rsp ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000155faa : push rsp ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000af83b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000153180 : push rsp ; mov eax, 1 ; ret
0x000000000013b798 : push rsp ; mov ecx, 0x89480000 ; ret
0x000000000012971b : push rsp ; or al, 0 ; syscall
0x0000000000185f59 : push rsp ; or eax, 0x894d0000 ; retf
0x00000000000e8049 : push rsp ; push rbx ; setne al ; ret
0x000000000004566d : push rsp ; ret
0x0000000000125b28 : push rsp ; ret 0x8940
0x000000000011c1bf : push rsp ; retf
0x0000000000058b14 : push rsp ; retf 0x48f8
0x00000000000590e2 : push rsp ; retf 0x4cf0
0x00000000001262bf : push rsp ; retf 0x8b40
0x00000000000e4503 : pushfq ; adc byte ptr [rax], al ; syscall
0x00000000001836f0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000029065 : pushfq ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000002f688 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000105624 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x63482c53], cl ; ret 0x2de9
0x000000000005461e : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000013b77a : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000792a0 : pushfq ; jne 0x792ad ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001843f0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001823a4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000000d52cf : pushfq ; ret 0x394c
0x00000000000fae50 : pushfq ; ret 0x5c3b
0x00000000000f8900 : pushfq ; retf 0xfff2
0x00000000000967d6 : pxor mm0, mm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000119fb1 : pxor mm0, mm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000967d5 : pxor xmm0, xmm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000119fb0 : pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000007e857 : rcl byte ptr [r14], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000d99d0 : rcl byte ptr [rax + 0x45000001], 0x29 ; shr dword ptr [rcx], cl ; ret 0x8945
0x00000000000b311d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000026a8d : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x1c95b2], eax ; ret
0x000000000013394d : rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x000000000007e858 : rcl byte ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000009a6a8 : rcl dword ptr [rip + 0x14fbfa], 0x83 ; ret 0x8b01
0x000000000004503f : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x00000000001468a8 : rcr byte ptr [rax + rcx*2], 0x89 ; ret 0x2548
0x0000000000176ccd : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009d6b2 : rcr byte ptr [rbp + 0x41], 0x5c ; mov rax, r8 ; pop r13 ; ret
0x0000000000029698 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000013eaf2 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x0000000000032c57 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000926c2 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000087a2a : rcr byte ptr [rbp + 0x41], cl ; pop rsp ; pop r13 ; jmp rax
0x0000000000058c97 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000137f08 : rcr byte ptr [rbp - 0x3a], 2 ; add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000000a0130 : rcr byte ptr [rbx + 0x41], 0x5c ; ret
0x0000000000087e98 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000049901 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000004a032 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f1caf : rcr byte ptr [rbx + 0x5d], 0x44 ; mov eax, eax ; pop r12 ; ret
0x000000000009ce42 : rcr byte ptr [rbx + 0x5d], 0x4c ; mov eax, eax ; pop r12 ; ret
0x000000000014cfda : rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x000000000014c599 : rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000bf362 : rcr byte ptr [rbx - 0x3d], 1 ; mov eax, 0x60 ; pop rbx ; ret
0x000000000009113f : rcr byte ptr [rbx - 9], 0xd8 ; ret
0x00000000000b2a2d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001190dc : rcr dword ptr [rbx + 0x31], cl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000058cc9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000149648 : rdtsc ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bed0d : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000becff : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000162748 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000bf107 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000009bba4 : rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dfe : rep stosq qword ptr [rdi], rax ; ret
0x00000000000256b9 : ret
0x0000000000026be0 : ret 0
0x00000000000bb9de : ret 0x10
0x000000000008420f : ret 0x107
0x000000000013ec3d : ret 0x1072
0x00000000000ab72e : ret 0x10c1
0x00000000000ba311 : ret 0x11
0x000000000009b47a : ret 0x110
0x0000000000048f2b : ret 0x110f
0x0000000000058c6c : ret 0x114d
0x00000000000fe81a : ret 0x1172
0x0000000000084f80 : ret 0x1175
0x00000000000d64d2 : ret 0x1179
0x000000000009f273 : ret 0x1184
0x000000000002ddc4 : ret 0x11e9
0x000000000007aa2a : ret 0x12
0x000000000009a2b2 : ret 0x120f
0x000000000008379e : ret 0x12d0
0x0000000000080c9a : ret 0x12e4
0x00000000000659b2 : ret 0x12eb
0x00000000000b56fa : ret 0x13
0x0000000000083367 : ret 0x1334
0x000000000011a7f4 : ret 0x1374
0x000000000009319c : ret 0x1389
0x0000000000079867 : ret 0x13cf
0x000000000004bfaa : ret 0x13eb
0x000000000009db3c : ret 0x14
0x00000000000db833 : ret 0x144
0x000000000019a061 : ret 0x145
0x00000000000fb535 : ret 0x1474
0x00000000000af879 : ret 0x147c
0x0000000000095b76 : ret 0x148
0x00000000000676da : ret 0x1482
0x00000000000b758d : ret 0x149
0x0000000000066ab0 : ret 0x14c
0x000000000009d9ba : ret 0x14c3
0x00000000000a121a : ret 0x14c9
0x00000000000f158a : ret 0x14d
0x00000000000a544b : ret 0x14eb
0x000000000009aeb2 : ret 0x14ee
0x000000000005dec5 : ret 0x15
0x00000000000983ea : ret 0x151e
0x0000000000097d19 : ret 0x1557
0x0000000000096342 : ret 0x1562
0x00000000000c0c58 : ret 0x1572
0x000000000009061e : ret 0x1576
0x000000000005e02a : ret 0x1585
0x0000000000108752 : ret 0x1589
0x000000000008ee42 : ret 0x15d7
0x00000000000528a4 : ret 0x16
0x0000000000094fc8 : ret 0x160f
0x00000000000876da : ret 0x1641
0x0000000000086da2 : ret 0x1666
0x00000000000a6427 : ret 0x1674
0x000000000003a1c3 : ret 0x17
0x0000000000062296 : ret 0x1773
0x00000000000f0876 : ret 0x1776
0x00000000000456cb : ret 0x1789
0x0000000000045aca : ret 0x178f
0x00000000000db56f : ret 0x17e
0x0000000000049121 : ret 0x17e9
0x0000000000063dfa : ret 0x18
0x0000000000193480 : ret 0x180f
0x0000000000036ef8 : ret 0x1820
0x0000000000105445 : ret 0x1874
0x00000000000af365 : ret 0x1876
0x00000000000283a3 : ret 0x18db
0x0000000000196a0d : ret 0x18e9
0x000000000002e4ba : ret 0x1900
0x00000000000c3ce1 : ret 0x194c
0x00000000000e7c24 : ret 0x19e9
0x00000000000497a1 : ret 0x1a31
0x0000000000065b9c : ret 0x1b7d
0x000000000005f75c : ret 0x1b8
0x000000000009bda1 : ret 0x1ba
0x00000000000f82df : ret 0x1be8
0x00000000000fa103 : ret 0x1c3b
0x0000000000043a3c : ret 0x1c74
0x00000000000414a4 : ret 0x1d
0x0000000000056cc2 : ret 0x1d74
0x00000000000c944b : ret 0x1d7e
0x00000000000d78fa : ret 0x1dba
0x00000000000a59a5 : ret 0x1deb
0x000000000011c1f1 : ret 0x1e1
0x0000000000030a23 : ret 0x1e74
0x0000000000052bce : ret 0x1f
0x000000000002f712 : ret 0x1f0f
0x00000000000690e6 : ret 0x1fe9
0x000000000018c9d7 : ret 0x20
0x0000000000036cbb : ret 0x200
0x0000000000054406 : ret 0x2040
0x00000000001967f3 : ret 0x2041
0x0000000000111f55 : ret 0x2044
0x00000000000f2a93 : ret 0x2073
0x000000000002be9d : ret 0x2074
0x000000000004a343 : ret 0x2077
0x000000000018d49a : ret 0x21
0x0000000000140dda : ret 0x2144
0x00000000001569be : ret 0x2149
0x0000000000092d27 : ret 0x214c
0x000000000011170a : ret 0x216
0x00000000000bcbab : ret 0x2275
0x00000000000b9b98 : ret 0x2288
0x00000000000a5338 : ret 0x22e8
0x0000000000063b3a : ret 0x230
0x00000000000e7ac4 : ret 0x231b
0x0000000000191fd2 : ret 0x2373
0x000000000006f490 : ret 0x24
0x00000000001021c0 : ret 0x2473
0x0000000000027efd : ret 0x2548
0x000000000014544c : ret 0x2672
0x000000000007da3a : ret 0x2675
0x000000000005e2c0 : ret 0x2774
0x00000000000613fa : ret 0x279
0x00000000000b5895 : ret 0x280f
0x00000000000af355 : ret 0x2876
0x00000000000d30f5 : ret 0x287f
0x00000000000d2dcc : ret 0x28f5
0x0000000000037dc6 : ret 0x2901
0x0000000000045e36 : ret 0x290f
0x0000000000186fbb : ret 0x2912
0x000000000018c5c7 : ret 0x2920
0x0000000000071c6e : ret 0x2941
0x0000000000064ab9 : ret 0x2944
0x0000000000033bd8 : ret 0x2948
0x0000000000078836 : ret 0x2949
0x000000000008aaca : ret 0x294c
0x00000000000dd979 : ret 0x294d
0x00000000000d24d4 : ret 0x2975
0x000000000007857a : ret 0x2a0
0x00000000000d03db : ret 0x2a74
0x0000000000110bfb : ret 0x2a75
0x000000000006a4da : ret 0x2a8
0x00000000000570db : ret 0x2ae9
0x0000000000029921 : ret 0x2b48
0x000000000012d118 : ret 0x2b49
0x00000000000a443d : ret 0x2b4c
0x0000000000152cf2 : ret 0x2b74
0x0000000000084184 : ret 0x2b7c
0x000000000005fc86 : ret 0x2be
0x00000000000ab63f : ret 0x2bf
0x000000000019229a : ret 0x2d6
0x0000000000110b98 : ret 0x2d75
0x000000000002fd6a : ret 0x2de9
0x0000000000084005 : ret 0x2e66
0x000000000010b931 : ret 0x2e74
0x000000000014b8f8 : ret 0x2e8
0x0000000000119778 : ret 0x2eeb
0x000000000011a72d : ret 0x2f3c
0x00000000000a6396 : ret 0x2f74
0x0000000000064b8a : ret 0x2ff
0x000000000004af92 : ret 0x3039
0x000000000010d810 : ret 0x3074
0x00000000000fd2ac : ret 0x30f
0x00000000000d7f32 : ret 0x31
0x000000000010bfb5 : ret 0x3101
0x000000000015e3c5 : ret 0x3107
0x0000000000062307 : ret 0x3145
0x000000000014d83c : ret 0x3148
0x000000000014d81b : ret 0x3149
0x000000000014d936 : ret 0x314c
0x000000000014d724 : ret 0x314d
0x00000000000f085c : ret 0x3176
0x00000000000470f4 : ret 0x31c3
0x000000000015b933 : ret 0x3375
0x00000000000d9bbd : ret 0x341
0x00000000000f3397 : ret 0x343
0x00000000000af859 : ret 0x347c
0x000000000006b2fa : ret 0x348
0x0000000000053575 : ret 0x3489
0x00000000000630d8 : ret 0x34e9
0x00000000000f3665 : ret 0x35e8
0x000000000008fb7a : ret 0x36
0x0000000000187c16 : ret 0x3776
0x000000000003a6c3 : ret 0x37e8
0x000000000009f263 : ret 0x37e9
0x00000000000a59d0 : ret 0x3840
0x000000000013f873 : ret 0x3844
0x00000000000af345 : ret 0x3876
0x0000000000159b21 : ret 0x389
0x0000000000101a62 : ret 0x38e9
0x0000000000056277 : ret 0x3901
0x00000000000f39b5 : ret 0x3904
0x0000000000144115 : ret 0x3928
0x00000000000f68e5 : ret 0x3941
0x0000000000071e3a : ret 0x3944
0x0000000000071b0b : ret 0x3945
0x000000000003a79f : ret 0x3948
0x000000000003567e : ret 0x3949
0x0000000000044981 : ret 0x394c
0x0000000000032bd4 : ret 0x3973
0x0000000000105484 : ret 0x3980
0x000000000005688e : ret 0x3990
0x00000000000be672 : ret 0x3a01
0x0000000000191fbb : ret 0x3a73
0x000000000012bb2d : ret 0x3b01
0x00000000000f87bf : ret 0x3b43
0x00000000000f69e7 : ret 0x3b46
0x0000000000070bc7 : ret 0x3b48
0x00000000000ebd38 : ret 0x3b4c
0x000000000014346c : ret 0x3be9
0x0000000000068760 : ret 0x3c01
0x00000000000bcb91 : ret 0x3c75
0x0000000000110610 : ret 0x3d48
0x00000000000d560a : ret 0x3ee9
0x0000000000038323 : ret 0x4001
0x00000000000c01e8 : ret 0x408d
0x000000000014676e : ret 0x4100
0x0000000000035149 : ret 0x4101
0x00000000000ccd5e : ret 0x4102
0x0000000000031b97 : ret 0x4104
0x00000000000a77ac : ret 0x4105
0x000000000006c188 : ret 0x4108
0x00000000000a7341 : ret 0x410e
0x000000000009ad4b : ret 0x4110
0x00000000000c9090 : ret 0x4118
0x0000000000107e21 : ret 0x4128
0x00000000000dc23c : ret 0x4130
0x00000000000c3dd8 : ret 0x4135
0x00000000000a5abd : ret 0x415d
0x00000000000cb23e : ret 0x4190
0x0000000000115d8e : ret 0x41c3
0x000000000014bb17 : ret 0x4203
0x00000000000ad73a : ret 0x4266
0x000000000009bd80 : ret 0x4273
0x00000000000f4863 : ret 0x428b
0x00000000000f1087 : ret 0x428d
0x0000000000152d5a : ret 0x4374
0x0000000000089f69 : ret 0x4389
0x00000000000843c5 : ret 0x43c7
0x00000000000a5ffb : ret 0x4401
0x0000000000030dd1 : ret 0x4408
0x000000000004eeb3 : ret 0x4418
0x000000000007b7aa : ret 0x4420
0x0000000000051c43 : ret 0x4435
0x0000000000053191 : ret 0x4489
0x0000000000039ae9 : ret 0x448b
0x0000000000045059 : ret 0x44c7
0x000000000005ca19 : ret 0x44f6
0x000000000004d392 : ret 0x4501
0x000000000013f5f6 : ret 0x4502
0x00000000000f17fe : ret 0x4504
0x0000000000050b01 : ret 0x4566
0x00000000000940ef : ret 0x458b
0x00000000000d24b7 : ret 0x4675
0x00000000000d52f5 : ret 0x4689
0x00000000000aa1fe : ret 0x470e
0x00000000000f2a53 : ret 0x473
0x00000000000ab9d8 : ret 0x474
0x0000000000074c83 : ret 0x47e8
0x0000000000028358 : ret 0x4801
0x000000000002b8c6 : ret 0x4802
0x0000000000126739 : ret 0x4803
0x000000000004aca7 : ret 0x4804
0x0000000000126a06 : ret 0x4805
0x00000000001268e6 : ret 0x4806
0x0000000000126856 : ret 0x4807
0x0000000000060b92 : ret 0x4808
0x00000000001266a6 : ret 0x4809
0x0000000000126976 : ret 0x480a
0x0000000000126506 : ret 0x480b
0x00000000000d32b2 : ret 0x480e
0x00000000000f0476 : ret 0x480f
0x00000000000596d0 : ret 0x4810
0x00000000000256ee : ret 0x4811
0x0000000000155bde : ret 0x4812
0x00000000000cd5f2 : ret 0x4817
0x0000000000038348 : ret 0x481a
0x0000000000097cbd : ret 0x4820
0x000000000012b616 : ret 0x4828
0x0000000000141c24 : ret 0x482e
0x000000000006d9a5 : ret 0x4830
0x0000000000197b81 : ret 0x4831
0x00000000000ad646 : ret 0x4840
0x000000000002dfca : ret 0x4858
0x00000000000966c3 : ret 0x4860
0x0000000000027052 : ret 0x4864
0x000000000004530d : ret 0x4866
0x00000000000d0701 : ret 0x4875
0x00000000000a9bee : ret 0x4890
0x00000000000b4d9c : ret 0x48c3
0x00000000000c40b2 : ret 0x48e9
0x000000000011d80a : ret 0x48f8
0x000000000002a439 : ret 0x4901
0x000000000002ab27 : ret 0x4902
0x0000000000071b1e : ret 0x4904
0x0000000000098241 : ret 0x4907
0x0000000000142262 : ret 0x4908
0x00000000000db830 : ret 0x490f
0x000000000007ba52 : ret 0x4910
0x0000000000033450 : ret 0x4911
0x0000000000162bc2 : ret 0x4918
0x000000000012c69a : ret 0x4964
0x000000000009f384 : ret 0x4974
0x00000000000a6dde : ret 0x4990
0x00000000000e7e81 : ret 0x49c3
0x000000000002759a : ret 0x4a8d
0x000000000002f4bf : ret 0x4b01
0x000000000012b40c : ret 0x4b8b
0x0000000000044b3f : ret 0x4c01
0x0000000000124749 : ret 0x4c02
0x000000000008a4e9 : ret 0x4c04
0x00000000000d6fa6 : ret 0x4c08
0x00000000000cb785 : ret 0x4c10
0x0000000000124512 : ret 0x4c14
0x0000000000187546 : ret 0x4c20
0x000000000010657a : ret 0x4c28
0x000000000005d760 : ret 0x4c40
0x0000000000187586 : ret 0x4c60
0x00000000000d90fe : ret 0x4c80
0x00000000001589c0 : ret 0x4c88
0x00000000000ba336 : ret 0x4d10
0x000000000018c9fb : ret 0x4d20
0x000000000005fff7 : ret 0x4d74
0x00000000000922e4 : ret 0x4d83
0x00000000000e2038 : ret 0x4e0f
0x000000000009af0b : ret 0x4e10
0x0000000000107016 : ret 0x4e8
0x00000000000aa49d : ret 0x4e8d
0x00000000000e64d5 : ret 0x4f08
0x0000000000124770 : ret 0x4f73
0x00000000001620c4 : ret 0x4fe9
0x0000000000191fa4 : ret 0x5173
0x000000000009489c : ret 0x5177
0x00000000000d2d91 : ret 0x5180
0x00000000000bf606 : ret 0x518d
0x00000000001432ac : ret 0x51e9
0x000000000019c1be : ret 0x529
0x000000000008454c : ret 0x5389
0x000000000012b9d8 : ret 0x53ff
0x00000000000af839 : ret 0x547c
0x00000000000fae46 : ret 0x5489
0x000000000014f196 : ret 0x548b
0x000000000006c6c6 : ret 0x54e8
0x00000000000d70d1 : ret 0x5589
0x0000000000163ba7 : ret 0x560
0x00000000000bcb77 : ret 0x5675
0x0000000000045338 : ret 0x574
0x0000000000131e2f : ret 0x576
0x0000000000131b46 : ret 0x577
0x0000000000164206 : ret 0x5776
0x000000000005e44e : ret 0x57e
0x000000000012e5fe : ret 0x57e9
0x00000000000dbc54 : ret 0x5841
0x000000000002d181 : ret 0x5a58
0x00000000000452fa : ret 0x5b75
0x0000000000065605 : ret 0x5ba
0x00000000000a8eef : ret 0x5be9
0x00000000000fae51 : ret 0x5c3b
0x000000000009eadd : ret 0x5d5b
0x000000000014cda0 : ret 0x5d89
0x0000000000045ea5 : ret 0x5e8
0x00000000000cdabd : ret 0x6073
0x000000000010a2b5 : ret 0x6076
0x00000000000f41ea : ret 0x60e9
0x000000000005826a : ret 0x6348
0x00000000000a8ea1 : ret 0x6349
0x00000000000f3a31 : ret 0x634d
0x00000000000d249a : ret 0x6375
0x0000000000033424 : ret 0x6411
0x00000000000af829 : ret 0x647c
0x000000000011a132 : ret 0x64be
0x00000000000e7ad9 : ret 0x64e9
0x00000000000c132a : ret 0x656
0x000000000008f24a : ret 0x66
0x0000000000119b78 : ret 0x6602
0x000000000014219b : ret 0x6608
0x00000000000a46f6 : ret 0x6610
0x00000000000af2d1 : ret 0x6620
0x000000000002a882 : ret 0x66c3
0x0000000000113ad6 : ret 0x674
0x00000000000e6076 : ret 0x6775
0x0000000000187be6 : ret 0x6776
0x000000000006d85a : ret 0x68e9
0x00000000000d2d8e : ret 0x6948
0x00000000000d5197 : ret 0x694d
0x00000000000d5877 : ret 0x6b45
0x00000000000a089c : ret 0x6be2
0x00000000000a899f : ret 0x6be9
0x0000000000056ea6 : ret 0x6de9
0x0000000000120cfa : ret 0x6e2
0x0000000000120bea : ret 0x6e3
0x00000000000d7344 : ret 0x6eb8
0x00000000000e7bcf : ret 0x6ee9
0x0000000000063c9c : ret 0x6fe9
0x0000000000149081 : ret 0x707
0x0000000000059a8a : ret 0x70e8
0x00000000000fc6bd : ret 0x728d
0x0000000000064485 : ret 0x7401
0x000000000008ce22 : ret 0x7402
0x000000000011bb21 : ret 0x7404
0x000000000008a555 : ret 0x7408
0x00000000000857f1 : ret 0x7420
0x0000000000064611 : ret 0x7450
0x000000000003a7f2 : ret 0x748b
0x00000000000e3de7 : ret 0x7500
0x000000000002e59f : ret 0x7501
0x00000000000a193a : ret 0x7502
0x00000000000b5391 : ret 0x7504
0x000000000014d542 : ret 0x7507
0x00000000000b5396 : ret 0x7508
0x00000000001940bb : ret 0x7510
0x0000000000131aa6 : ret 0x7520
0x00000000000f3b49 : ret 0x7540
0x00000000000f0034 : ret 0x7580
0x000000000008cdde : ret 0x7589
0x00000000000a2112 : ret 0x772
0x0000000000190e92 : ret 0x7777
0x0000000000144be2 : ret 0x786
0x0000000000104cfd : ret 0x7880
0x00000000000573c3 : ret 0x7a80
0x00000000000a71f9 : ret 0x7a8d
0x00000000000d02aa : ret 0x7b75
0x00000000000d995e : ret 0x7b8b
0x0000000000045827 : ret 0x7c7
0x00000000000fdb4d : ret 0x7c83
0x00000000000551ee : ret 0x7c89
0x0000000000056b0a : ret 0x7c8b
0x0000000000139b22 : ret 0x7dc
0x00000000000af271 : ret 0x7e20
0x0000000000187b4c : ret 0x7e40
0x00000000000ac2ec : ret 0x7f10
0x000000000019882a : ret 0x7fff
0x000000000009a110 : ret 0x80
0x00000000000ad4c9 : ret 0x8000
0x0000000000056258 : ret 0x8001
0x000000000011999b : ret 0x8004
0x00000000000f0b05 : ret 0x8040
0x000000000013f80a : ret 0x8041
0x00000000000f3d75 : ret 0x8080
0x000000000012f9cd : ret 0x80f8
0x00000000001873b5 : ret 0x8101
0x000000000013d3f4 : ret 0x8103
0x000000000018fae5 : ret 0x8104
0x000000000013f930 : ret 0x8108
0x00000000000c3601 : ret 0x8141
0x000000000005a9c6 : ret 0x8148
0x000000000004510a : ret 0x8166
0x000000000010faca : ret 0x8207
0x000000000002df09 : ret 0x820f
0x00000000000a24ea : ret 0x8301
0x000000000014b60d : ret 0x8303
0x0000000000084075 : ret 0x8304
0x00000000000a8a6a : ret 0x8305
0x0000000000187485 : ret 0x8308
0x00000000000cd34d : ret 0x830b
0x000000000004b6d3 : ret 0x830f
0x0000000000187450 : ret 0x8310
0x0000000000187422 : ret 0x8320
0x000000000012c6fa : ret 0x8330
0x00000000000af751 : ret 0x8340
0x000000000002f888 : ret 0x8341
0x000000000002ac82 : ret 0x8348
0x0000000000062772 : ret 0x8349
0x00000000000c7e15 : ret 0x840
0x000000000003b296 : ret 0x8401
0x0000000000063f97 : ret 0x8404
0x000000000002d241 : ret 0x840f
0x000000000002e19e : ret 0x841
0x00000000000cb602 : ret 0x844
0x0000000000044a2d : ret 0x8440
0x00000000001970ad : ret 0x8441
0x0000000000063f7a : ret 0x8445
0x00000000000a8366 : ret 0x845
0x00000000000bfcdd : ret 0x8504
0x000000000002de60 : ret 0x850f
0x00000000001880e1 : ret 0x8520
0x0000000000062311 : ret 0x8545
0x000000000002a985 : ret 0x8548
0x0000000000048450 : ret 0x854d
0x0000000000109ba9 : ret 0x8589
0x0000000000060700 : ret 0x85c7
0x000000000002d0b3 : ret 0x860f
0x000000000004e000 : ret 0x870f
0x00000000000af375 : ret 0x876
0x000000000003166c : ret 0x87e9
0x0000000000029d39 : ret 0x8801
0x00000000000a8fac : ret 0x8806
0x0000000000161d6e : ret 0x886
0x00000000000c4172 : ret 0x88e9
0x0000000000036955 : ret 0x8901
0x0000000000125b29 : ret 0x8940
0x000000000003293f : ret 0x8941
0x000000000004e915 : ret 0x8944
0x00000000000a7852 : ret 0x8945
0x0000000000027c26 : ret 0x8948
0x000000000002a30a : ret 0x8949
0x0000000000029e62 : ret 0x894c
0x0000000000062d42 : ret 0x894d
0x0000000000059bcb : ret 0x894e
0x00000000001300be : ret 0x89c3
0x0000000000163cb1 : ret 0x89e8
0x000000000009a6af : ret 0x8b01
0x00000000000ece0b : ret 0x8b02
0x00000000000844b6 : ret 0x8b04
0x00000000000c9c3b : ret 0x8b05
0x000000000018fba2 : ret 0x8b10
0x000000000003566f : ret 0x8b41
0x00000000000f98c0 : ret 0x8b44
0x00000000000a63d6 : ret 0x8b46
0x000000000002d232 : ret 0x8b48
0x000000000006fa4f : ret 0x8b49
0x0000000000059b52 : ret 0x8b4a
0x00000000000a8098 : ret 0x8b4b
0x000000000002d426 : ret 0x8b4c
0x00000000001052d2 : ret 0x8b4d
0x00000000000e185b : ret 0x8b64
0x00000000000d9eb4 : ret 0x8c0f
0x0000000000097b36 : ret 0x8c75
0x00000000000cbba3 : ret 0x8d01
0x0000000000066667 : ret 0x8d04
0x0000000000030ef5 : ret 0x8d08
0x000000000006235b : ret 0x8d0f
0x0000000000070a59 : ret 0x8d41
0x00000000000db62f : ret 0x8d43
0x00000000000d9b46 : ret 0x8d44
0x00000000000286f3 : ret 0x8d48
0x000000000004487f : ret 0x8d49
0x0000000000058d97 : ret 0x8d4a
0x00000000000611a0 : ret 0x8d4b
0x0000000000027f43 : ret 0x8d4c
0x0000000000098124 : ret 0x8d4d
0x00000000000a7dcc : ret 0x8d4e
0x0000000000054fbb : ret 0x8d74
0x00000000000ddde9 : ret 0x8d89
0x00000000000481db : ret 0x8e0f
0x000000000007c84a : ret 0x8e9
0x00000000000f3fbf : ret 0x8eeb
0x0000000000080735 : ret 0x8f0f
0x0000000000054ef1 : ret 0x8f74
0x00000000000e6edd : ret 0x9066
0x00000000000d3165 : ret 0x907e
0x00000000000e7f7d : ret 0x90c3
0x00000000001031a5 : ret 0x930f
0x00000000000f40b7 : ret 0x93e9
0x00000000000888bd : ret 0x93eb
0x000000000006dcc2 : ret 0x940f
0x000000000005b888 : ret 0x941
0x000000000012498e : ret 0x944
0x0000000000052a25 : ret 0x948
0x00000000000f6001 : ret 0x949
0x0000000000045a85 : ret 0x94c
0x000000000019a54f : ret 0x94d
0x000000000012ad57 : ret 0x950f
0x000000000005e183 : ret 0x9574
0x00000000000a0284 : ret 0x95be
0x00000000000d3034 : ret 0x960f
0x00000000000e71bf : ret 0x9674
0x0000000000069a87 : ret 0x9675
0x00000000000529b2 : ret 0x96e9
0x0000000000131cbf : ret 0x976
0x000000000015b226 : ret 0x9775
0x000000000005c5d5 : ret 0x9848
0x00000000000bcbc5 : ret 0x9874
0x000000000019c963 : ret 0x9974
0x0000000000054a88 : ret 0x99e9
0x0000000000102580 : ret 0x9ae8
0x0000000000116c28 : ret 0x9b75
0x0000000000143414 : ret 0x9be9
0x000000000011bf97 : ret 0x9c0
0x000000000014cd7a : ret 0x9c5
0x00000000001056ee : ret 0x9ce9
0x00000000000d9f54 : ret 0x9d0f
0x00000000000ba760 : ret 0x9d72
0x00000000000ac05d : ret 0x9de8
0x000000000010caae : ret 0x9e9
0x0000000000065b23 : ret 0x9ee9
0x0000000000070e9d : ret 0xa
0x000000000014f866 : ret 0xa01
0x00000000000667bf : ret 0xa173
0x0000000000082815 : ret 0xa1e9
0x0000000000111228 : ret 0xa2e8
0x0000000000142c35 : ret 0xa3c
0x0000000000045e86 : ret 0xa4e8
0x00000000001441aa : ret 0xa5c
0x000000000007448c : ret 0xa5e9
0x0000000000149619 : ret 0xa61
0x000000000008c00a : ret 0xa6d
0x000000000009a6b8 : ret 0xa7e
0x0000000000145751 : ret 0xa9f
0x00000000000f1dfd : ret 0xaae9
0x000000000011f841 : ret 0xabe
0x000000000015d150 : ret 0xac74
0x00000000000fc459 : ret 0xace9
0x00000000000a8961 : ret 0xaceb
0x000000000004e85a : ret 0xad
0x00000000000a67b0 : ret 0xadeb
0x00000000000a6e2f : ret 0xaeeb
0x000000000012e147 : ret 0xb
0x00000000000e7b8d : ret 0xb0e9
0x000000000013bc7a : ret 0xb34
0x000000000013b072 : ret 0xb40
0x000000000014db98 : ret 0xb43
0x000000000009b619 : ret 0xb48b
0x00000000000e19ce : ret 0xb4e9
0x0000000000066f57 : ret 0xb589
0x00000000000e7c88 : ret 0xb5e9
0x000000000010642a : ret 0xb60
0x000000000005b4dc : ret 0xb60f
0x00000000000a08ed : ret 0xb675
0x000000000004a3ad : ret 0xb677
0x00000000000d44b0 : ret 0xb70f
0x000000000014e95b : ret 0xb75
0x000000000014602b : ret 0xb7e9
0x0000000000045627 : ret 0xb8
0x00000000000840a2 : ret 0xb804
0x000000000009bc89 : ret 0xb817
0x00000000000a85f0 : ret 0xb841
0x000000000004599a : ret 0xb848
0x00000000000db5ca : ret 0xb850
0x00000000000a24d7 : ret 0xb8c3
0x0000000000135e4a : ret 0xb8f
0x00000000000fb272 : ret 0xb908
0x000000000013300d : ret 0xb941
0x000000000004522d : ret 0xb948
0x00000000000ef7a1 : ret 0xb9e8
0x000000000012e83a : ret 0xbb5
0x00000000000a3c99 : ret 0xbd01
0x0000000000080d53 : ret 0xbd83
0x000000000007dbd2 : ret 0xbd89
0x00000000001538dd : ret 0xbde8
0x000000000007a047 : ret 0xbe01
0x0000000000066f47 : ret 0xbe02
0x0000000000074bc0 : ret 0xbe08
0x00000000000d9de4 : ret 0xbe0f
0x0000000000152dc1 : ret 0xbeeb
0x000000000006c4bc : ret 0xbf08
0x0000000000057827 : ret 0xbf41
0x000000000007cc8c : ret 0xbfe9
0x00000000000c3649 : ret 0xc
0x00000000000ad389 : ret 0xc000
0x000000000005b52f : ret 0xc001
0x00000000000a6147 : ret 0xc019
0x0000000000038fae : ret 0xc031
0x000000000007dc03 : ret 0xc041
0x0000000000033476 : ret 0xc083
0x000000000011a7ed : ret 0xc084
0x00000000000af130 : ret 0xc085
0x0000000000026fe0 : ret 0xc148
0x00000000000cc60c : ret 0xc149
0x00000000001034fa : ret 0xc153
0x00000000000d53b4 : ret 0xc181
0x000000000007dba3 : ret 0xc189
0x000000000005ecda : ret 0xc200
0x000000000004e4b4 : ret 0xc220
0x00000000000d4379 : ret 0xc281
0x00000000000d791e : ret 0xc283
0x0000000000191e74 : ret 0xc2b2
0x0000000000045e97 : ret 0xc35d
0x00000000000f8ed3 : ret 0xc383
0x0000000000068a16 : ret 0xc389
0x0000000000187bb1 : ret 0xc540
0x000000000012cd80 : ret 0xc5f6
0x000000000013f8a9 : ret 0xc639
0x0000000000142442 : ret 0xc641
0x00000000000fd8c7 : ret 0xc675
0x00000000000d312f : ret 0xc67e
0x000000000005ee87 : ret 0xc689
0x00000000001231aa : ret 0xc6c
0x0000000000122eaa : ret 0xc6f
0x00000000000b5731 : ret 0xc748
0x00000000000d24f1 : ret 0xc75
0x0000000000045f19 : ret 0xc764
0x00000000000f1a65 : ret 0xc775
0x000000000004c2d6 : ret 0xc776
0x00000000000fbda6 : ret 0xc789
0x0000000000118f89 : ret 0xc7e9
0x00000000000ab986 : ret 0xc839
0x0000000000089f5e : ret 0xc883
0x0000000000044f08 : ret 0xc889
0x0000000000137b94 : ret 0xc8b
0x000000000011c107 : ret 0xc931
0x00000000000d3a99 : ret 0xc985
0x000000000011ffaa : ret 0xc9e
0x00000000000b9ae5 : ret 0xc9ff
0x00000000000fae42 : ret 0xca09
0x0000000000026df0 : ret 0xca21
0x00000000000f69f3 : ret 0xca39
0x00000000000ecdb9 : ret 0xca89
0x000000000011c49f : ret 0xcad8
0x0000000000063d41 : ret 0xcae9
0x0000000000105abf : ret 0xcbe8
0x00000000000e40f6 : ret 0xcce9
0x00000000000ba730 : ret 0xcd72
0x0000000000054954 : ret 0xcde9
0x0000000000105e77 : ret 0xce0f
0x000000000002a11e : ret 0xce80
0x00000000001880ed : ret 0xce89
0x000000000011fe32 : ret 0xceb
0x000000000008109b : ret 0xcee9
0x000000000011acaa : ret 0xcf1
0x00000000000c2814 : ret 0xcf75
0x000000000006ff5b : ret 0xcfe9
0x00000000000a7940 : ret 0xd
0x00000000000f2db1 : ret 0xd009
0x00000000001014b2 : ret 0xd020
0x00000000000a20c1 : ret 0xd084
0x00000000000d5ba8 : ret 0xd089
0x0000000000106281 : ret 0xd101
0x000000000015b198 : ret 0xd108
0x000000000006a713 : ret 0xd129
0x00000000000a1dea : ret 0xd148
0x0000000000028ab4 : ret 0xd17d
0x00000000000dca87 : ret 0xd189
0x000000000009f6d9 : ret 0xd1e8
0x0000000000097243 : ret 0xd1e9
0x00000000000f1955 : ret 0xd201
0x00000000000445b7 : ret 0xd231
0x00000000000d7d81 : ret 0xd26b
0x0000000000027235 : ret 0xd284
0x00000000000844e6 : ret 0xd285
0x00000000001087d2 : ret 0xd289
0x0000000000142bfe : ret 0xd308
0x0000000000112867 : ret 0xd321
0x00000000000d3c1c : ret 0xd338
0x000000000004e16e : ret 0xd348
0x0000000000196fee : ret 0xd349
0x000000000011a1a2 : ret 0xd42
0x0000000000119142 : ret 0xd51
0x0000000000197346 : ret 0xd589
0x00000000000f8f25 : ret 0xd5e8
0x00000000000eca78 : ret 0xd5eb
0x0000000000068925 : ret 0xd629
0x000000000006be57 : ret 0xd729
0x00000000000fc1f2 : ret 0xd739
0x00000000000d9bc7 : ret 0xd789
0x00000000000d9ebe : ret 0xd7c
0x00000000001435bc : ret 0xd7e9
0x0000000000117c3a : ret 0xd85
0x00000000000a8af3 : ret 0xd889
0x00000000001993ee : ret 0xd8e9
0x00000000000ca6e8 : ret 0xd8f7
0x00000000000981f4 : ret 0xd977
0x00000000000aad1e : ret 0xd989
0x000000000007f869 : ret 0xd9e9
0x00000000000e1123 : ret 0xda72
0x000000000012d5ba : ret 0xda80
0x00000000000a901d : ret 0xda89
0x0000000000044f04 : ret 0xdaf7
0x000000000019a393 : ret 0xdb31
0x00000000000ce251 : ret 0xdc00
0x00000000000c002d : ret 0xde8
0x0000000000094075 : ret 0xde9
0x00000000000d7518 : ret 0xdea
0x00000000000c23a9 : ret 0xdeb
0x00000000000bfb5c : ret 0xdee8
0x0000000000046af9 : ret 0xe
0x00000000000ad249 : ret 0xe000
0x000000000019407d : ret 0xe074
0x000000000004a3bd : ret 0xe076
0x0000000000091e87 : ret 0xe083
0x000000000007dbaf : ret 0xe183
0x00000000000ac019 : ret 0xe1e8
0x00000000000d58b2 : ret 0xe1e9
0x000000000007eaab : ret 0xe273
0x0000000000044355 : ret 0xe281
0x000000000002ce8f : ret 0xe283
0x000000000018fa1f : ret 0xe2c4
0x00000000000f345a : ret 0xe374
0x0000000000097165 : ret 0xe480
0x00000000000d0ec8 : ret 0xe56
0x00000000000481c0 : ret 0xe575
0x00000000000614d8 : ret 0xe57f
0x00000000001041aa : ret 0xe5c
0x00000000000bf2a2 : ret 0xe680
0x0000000000026c73 : ret 0xe683
0x00000000000e7b57 : ret 0xe6e9
0x000000000011087c : ret 0xe6ff
0x0000000000113ac8 : ret 0xe72
0x00000000000f0985 : ret 0xe76
0x000000000002beb6 : ret 0xe775
0x0000000000186fc3 : ret 0xe7f
0x0000000000086ef2 : ret 0xe8
0x000000000013910e : ret 0xe801
0x00000000000ece22 : ret 0xe875
0x00000000000f0a84 : ret 0xe877
0x000000000010bbb2 : ret 0xe883
0x0000000000120988 : ret 0xe8c1
0x00000000000a2f53 : ret 0xe901
0x00000000000639e8 : ret 0xe902
0x0000000000063d11 : ret 0xe904
0x00000000000b9b86 : ret 0xe908
0x0000000000183556 : ret 0xe910
0x000000000010b404 : ret 0xe973
0x000000000012c814 : ret 0xe975
0x0000000000055b2e : ret 0xe983
0x00000000000617c7 : ret 0xe9f8
0x000000000004a363 : ret 0xea76
0x00000000000463c1 : ret 0xeab8
0x000000000007dbc8 : ret 0xeac0
0x000000000002e144 : ret 0xeac1
0x000000000010914d : ret 0xead1
0x00000000000f8ee8 : ret 0xeb01
0x0000000000181596 : ret 0xeb10
0x00000000001343ac : ret 0xeb11
0x0000000000098fe2 : ret 0xeb75
0x00000000000a83a1 : ret 0xec75
0x0000000000059a00 : ret 0xed75
0x0000000000196435 : ret 0xed85
0x000000000010d40c : ret 0xede9
0x000000000003a7df : ret 0xee75
0x00000000000f1837 : ret 0xee7f
0x000000000013a41a : ret 0xeeaf
0x000000000003aa0c : ret 0xeee8
0x0000000000135cba : ret 0xef
0x0000000000144bfa : ret 0xef23
0x000000000014398a : ret 0xef40
0x0000000000051fb6 : ret 0xef75
0x00000000000a6eeb : ret 0xefe9
0x00000000000530af : ret 0xf
0x000000000003fc9d : ret 0xf00
0x00000000000ad109 : ret 0xf000
0x0000000000122a7d : ret 0xf009
0x000000000002a40f : ret 0xf01
0x000000000009c46d : ret 0xf02
0x00000000000aba36 : ret 0xf039
0x0000000000084235 : ret 0xf04
0x000000000011de8a : ret 0xf074
0x000000000007de5e : ret 0xf08
0x00000000000a20b8 : ret 0xf083
0x00000000000e8a62 : ret 0xf089
0x00000000000a94ce : ret 0xf0e
0x00000000001156ca : ret 0xf0fd
0x000000000007f57c : ret 0xf10
0x00000000000af92c : ret 0xf188
0x000000000004cf7f : ret 0xf189
0x0000000000086b89 : ret 0xf20
0x00000000000f84f2 : ret 0xf239
0x00000000000ff08a : ret 0xf262
0x00000000000c94c9 : ret 0xf2e9
0x00000000000f656a : ret 0xf2ed
0x00000000000fb37a : ret 0xf375
0x000000000009314e : ret 0xf390
0x00000000000a5a8e : ret 0xf3c3
0x000000000004fb2a : ret 0xf40
0x0000000000028a14 : ret 0xf41
0x00000000000a65e5 : ret 0xf44
0x0000000000062e6a : ret 0xf45
0x00000000000a3e09 : ret 0xf475
0x000000000002b97e : ret 0xf48
0x00000000000d89ea : ret 0xf4c9
0x000000000004e15f : ret 0xf4d
0x0000000000062649 : ret 0xf50
0x00000000001872ee : ret 0xf5c5
0x0000000000162a95 : ret 0xf601
0x000000000006c4b4 : ret 0xf631
0x00000000000c22ad : ret 0xf644
0x00000000000456c7 : ret 0xf66
0x000000000011f26a : ret 0xf698
0x00000000000a367e : ret 0xf6c3
0x00000000000c6bfa : ret 0xf703
0x00000000001387b3 : ret 0xf741
0x000000000003b96a : ret 0xf748
0x0000000000197a1f : ret 0xf77
0x0000000000110c49 : ret 0xf789
0x00000000001056ba : ret 0xf7f4
0x000000000003a851 : ret 0xf7f7
0x000000000010fe41 : ret 0xf80
0x000000000002d93b : ret 0xf800
0x00000000000c613a : ret 0xf88
0x00000000000d651b : ret 0xf883
0x0000000000096ad7 : ret 0xf8b
0x000000000018b626 : ret 0xf8c5
0x0000000000131ffa : ret 0xf8db
0x000000000013285a : ret 0xf8e5
0x000000000010193d : ret 0xf8e9
0x000000000008db6a : ret 0xf977
0x0000000000056cb6 : ret 0xf983
0x000000000008c98a : ret 0xf989
0x00000000000ee8eb : ret 0xf9c1
0x00000000000f703b : ret 0xfa39
0x00000000000bf40c : ret 0xfac1
0x00000000000ace89 : ret 0xfc00
0x000000000011ac75 : ret 0xfc07
0x0000000000045312 : ret 0xfc3
0x000000000016180a : ret 0xfd15
0x0000000000147a7a : ret 0xfd57
0x0000000000156843 : ret 0xfd81
0x0000000000056c8d : ret 0xfde9
0x00000000000acd49 : ret 0xfe00
0x0000000000042b8a : ret 0xfe27
0x00000000001327ca : ret 0xfe57
0x0000000000103170 : ret 0xfe83
0x00000000000e792e : ret 0xfe9
0x0000000000044f14 : ret 0xfeb8
0x000000000003876a : ret 0xfecb
0x00000000000acc09 : ret 0xff00
0x00000000000a797c : ret 0xff0f
0x000000000011bf5c : ret 0xff2
0x00000000000455fb : ret 0xff25
0x0000000000188359 : ret 0xff2d
0x000000000008d01e : ret 0xff3
0x000000000006c17f : ret 0xff31
0x0000000000152a3a : ret 0xff3e
0x000000000012afe1 : ret 0xff41
0x00000000000bcb74 : ret 0xff48
0x000000000015762a : ret 0xff56
0x00000000000acac9 : ret 0xff80
0x00000000001423ba : ret 0xff81
0x00000000000de595 : ret 0xff83
0x00000000000629da : ret 0xff85
0x000000000004375a : ret 0xff89
0x000000000004235a : ret 0xff9d
0x000000000006ceeb : ret 0xffb5
0x0000000000093a8b : ret 0xffb8
0x00000000000525e3 : ret 0xffbf
0x00000000000ac989 : ret 0xffc0
0x000000000006b250 : ret 0xffc4
0x000000000006e6cc : ret 0xffca
0x000000000003ef5a : ret 0xffd1
0x000000000006b925 : ret 0xffd6
0x000000000006e0c6 : ret 0xffd7
0x00000000000690a1 : ret 0xffdc
0x00000000000ac849 : ret 0xffe0
0x00000000000710da : ret 0xffe1
0x00000000000619f9 : ret 0xffe2
0x00000000000dfa36 : ret 0xffe4
0x0000000000078e9e : ret 0xffe7
0x000000000010f11b : ret 0xffe8
0x00000000000e7c3e : ret 0xffe9
0x000000000007ed5d : ret 0xffea
0x000000000003ee19 : ret 0xffed
0x000000000007c2fe : ret 0xffee
0x000000000004c0a1 : ret 0xffef
0x000000000009f3f9 : ret 0xfff
0x00000000000ac709 : ret 0xfff0
0x000000000006344f : ret 0xfff1
0x0000000000042e62 : ret 0xfff2
0x0000000000056e7f : ret 0xfff3
0x00000000000d9145 : ret 0xfff4
0x0000000000132af0 : ret 0xfff5
0x000000000005fe26 : ret 0xfff6
0x000000000019b04a : ret 0xfff7
0x00000000000ac5c9 : ret 0xfff8
0x000000000010c8c9 : ret 0xfff9
0x00000000000cfb4a : ret 0xfffa
0x0000000000061937 : ret 0xfffb
0x000000000003482f : ret 0xfffc
0x00000000000259a8 : ret 0xfffd
0x0000000000033065 : ret 0xfffe
0x00000000000290df : ret 0xffff
0x000000000002a1ba : ret 1
0x00000000000a568b : ret 2
0x000000000002eab2 : ret 3
0x0000000000099ec9 : ret 4
0x00000000000bab5a : ret 5
0x000000000009a309 : ret 7
0x000000000007d80b : ret 8
0x0000000000049cbf : ret 9
0x0000000000025719 : retf
0x0000000000025882 : retf 0
0x0000000000041cd5 : retf 0x10
0x00000000000e1da2 : retf 0x1080
0x000000000002ac97 : retf 0x1089
0x00000000000e4552 : retf 0x10be
0x000000000009ee38 : retf 0x11
0x000000000010463f : retf 0x110f
0x00000000000ef471 : retf 0x1139
0x0000000000058b9d : retf 0x114d
0x00000000000862f2 : retf 0x115
0x00000000000d6fca : retf 0x116e
0x00000000000d6cc2 : retf 0x1171
0x0000000000136372 : retf 0x118
0x000000000014c61f : retf 0x1189
0x0000000000085ef2 : retf 0x119
0x00000000000292d2 : retf 0x12
0x0000000000088dd2 : retf 0x127e
0x000000000005b589 : retf 0x13
0x00000000000bcbba : retf 0x1373
0x00000000000ee871 : retf 0x1374
0x00000000000404ee : retf 0x14
0x000000000015098d : retf 0x141
0x00000000000a9518 : retf 0x1474
0x000000000013f87f : retf 0x148
0x000000000002a9a5 : retf 0x1489
0x00000000000667e8 : retf 0x148d
0x000000000003800d : retf 0x149
0x00000000000ecbb5 : retf 0x14c
0x00000000000a6ee8 : retf 0x14d
0x0000000000161ab6 : retf 0x14e8
0x000000000009db8a : retf 0x14ff
0x000000000008ee3c : retf 0x15
0x0000000000097a42 : retf 0x1587
0x00000000000945d6 : retf 0x158e
0x0000000000092ad2 : retf 0x1599
0x0000000000075c6e : retf 0x15e9
0x000000000007d312 : retf 0x16
0x0000000000140d83 : retf 0x1677
0x0000000000186d4b : retf 0x167e
0x000000000015a796 : retf 0x1689
0x00000000000cc526 : retf 0x1774
0x0000000000045432 : retf 0x179b
0x000000000003a4dc : retf 0x17bf
0x000000000011ab02 : retf 0x182
0x0000000000031e92 : retf 0x18c5
0x000000000005aacd : retf 0x194d
0x0000000000122ec6 : retf 0x19b8
0x00000000000355e1 : retf 0x19e8
0x000000000003c5da : retf 0x1a
0x000000000004aaf2 : retf 0x1a26
0x0000000000049692 : retf 0x1a32
0x00000000000314ba : retf 0x1a75
0x0000000000036c3a : retf 0x1b31
0x0000000000158ff2 : retf 0x1b74
0x00000000000e8ab5 : retf 0x1b8
0x0000000000033892 : retf 0x1b8d
0x000000000007de8c : retf 0x1c
0x00000000000bf93b : retf 0x1c74
0x000000000012a9c9 : retf 0x1e8
0x00000000001230a6 : retf 0x1eb8
0x000000000008a620 : retf 0x1f0f
0x00000000000cbb0e : retf 0x1f74
0x0000000000130418 : retf 0x1f8
0x00000000000855a2 : retf 0x20
0x00000000000f5e03 : retf 0x2148
0x0000000000061332 : retf 0x258
0x00000000000f1a0b : retf 0x25eb
0x00000000000a9506 : retf 0x2674
0x00000000000a8b0b : retf 0x27
0x000000000015eab3 : retf 0x27e8
0x0000000000169899 : retf 0x280f
0x0000000000116236 : retf 0x28b8
0x000000000004636f : retf 0x290f
0x000000000005d862 : retf 0x2941
0x00000000000de17b : retf 0x2944
0x000000000002b195 : retf 0x2948
0x000000000005d321 : retf 0x294c
0x0000000000119a3c : retf 0x2aeb
0x00000000000697d2 : retf 0x2b5
0x0000000000131b06 : retf 0x2b77
0x00000000000a8846 : retf 0x2c74
0x00000000000bcba0 : retf 0x2d73
0x0000000000122b66 : retf 0x2db8
0x0000000000122175 : retf 0x2e66
0x00000000001225a6 : retf 0x2eb8
0x0000000000123136 : retf 0x2fb8
0x00000000000558cb : retf 0x2fe8
0x0000000000062d73 : retf 0x30be
0x00000000000db5e0 : retf 0x3104
0x00000000000980f2 : retf 0x3141
0x00000000000e22cc : retf 0x3145
0x000000000014d89a : retf 0x3148
0x000000000014d689 : retf 0x3149
0x00000000000ee856 : retf 0x3274
0x000000000010039a : retf 0x343
0x0000000000050505 : retf 0x343d
0x0000000000058cf8 : retf 0x3573
0x00000000001239f6 : retf 0x35b8
0x0000000000068503 : retf 0x36
0x000000000013ec17 : retf 0x3672
0x0000000000123196 : retf 0x36b8
0x00000000001701b2 : retf 0x377
0x000000000002c2f7 : retf 0x3775
0x00000000001231c6 : retf 0x37b8
0x000000000006766d : retf 0x3944
0x000000000004c071 : retf 0x3948
0x00000000000a4344 : retf 0x3949
0x000000000009959d : retf 0x394c
0x00000000000a7e16 : retf 0x394d
0x000000000013fd00 : retf 0x3b9a
0x0000000000101872 : retf 0x3be9
0x00000000000e5af6 : retf 0x3db8
0x0000000000053105 : retf 0x3f3d
0x000000000019a5aa : retf 0x4101
0x00000000000d565a : retf 0x4102
0x00000000000f6e71 : retf 0x4110
0x00000000000f6d7a : retf 0x4140
0x000000000004ddbb : retf 0x4166
0x000000000002e13c : retf 0x4180
0x00000000000d2e6f : retf 0x418d
0x00000000000ad71c : retf 0x4266
0x0000000000045475 : retf 0x42e9
0x0000000000093166 : retf 0x43f6
0x00000000001301e7 : retf 0x440f
0x000000000004dd95 : retf 0x4466
0x000000000005cb24 : retf 0x44f6
0x00000000001126f2 : retf 0x45
0x0000000000050adb : retf 0x4566
0x00000000000d6e20 : retf 0x45c7
0x0000000000079372 : retf 0x474
0x00000000000bcb86 : retf 0x4773
0x000000000010452d : retf 0x47c6
0x0000000000084255 : retf 0x4800
0x000000000009b2e2 : retf 0x4801
0x0000000000095701 : retf 0x4802
0x000000000009bd99 : retf 0x4804
0x00000000000441a6 : retf 0x480b
0x0000000000044170 : retf 0x480d
0x000000000011f1fd : retf 0x4853
0x0000000000048eff : retf 0x4866
0x00000000000ec48f : retf 0x488d
0x0000000000098d5e : retf 0x4890
0x0000000000058b15 : retf 0x48f8
0x000000000009b906 : retf 0x4901
0x000000000008b23f : retf 0x4966
0x00000000000f2b09 : retf 0x4a8b
0x0000000000077a65 : retf 0x4a8d
0x0000000000112686 : retf 0x4b8
0x00000000000837b1 : retf 0x4b80
0x00000000001047f7 : retf 0x4be9
0x000000000011ce78 : retf 0x4c01
0x00000000000d37d0 : retf 0x4c02
0x00000000000c3360 : retf 0x4c88
0x000000000009f5d8 : retf 0x4c89
0x000000000005fb2e : retf 0x4c90
0x0000000000110b26 : retf 0x4cb8
0x000000000004a9f2 : retf 0x4ce
0x00000000000590e3 : retf 0x4cf0
0x0000000000031462 : retf 0x4d72
0x0000000000058b68 : retf 0x4de8
0x0000000000058b7a : retf 0x4df0
0x0000000000058b8c : retf 0x4df8
0x00000000000c2836 : retf 0x4e74
0x00000000000f0b27 : retf 0x5088
0x0000000000100f6d : retf 0x5089
0x000000000008f48a : retf 0x532b
0x00000000000f9b03 : retf 0x5355
0x000000000011737c : retf 0x5389
0x0000000000054fb5 : retf 0x5489
0x00000000001047df : retf 0x55e9
0x0000000000131bd6 : retf 0x577
0x00000000001052b6 : retf 0x57d
0x00000000000f1d4e : retf 0x59e9
0x00000000000314f2 : retf 0x5a
0x0000000000067261 : retf 0x5a73
0x00000000000a5376 : retf 0x5d5b
0x0000000000055fbd : retf 0x5e3c
0x0000000000060b15 : retf 0x5e8
0x00000000000a51fc : retf 0x5ee8
0x00000000000bcb6c : retf 0x6173
0x0000000000154a05 : retf 0x619
0x00000000000aa6ad : retf 0x6348
0x00000000000d5ebc : retf 0x634d
0x000000000019a5f2 : retf 0x6375
0x000000000004613c : retf 0x6411
0x00000000000e2df2 : retf 0x648
0x00000000001515a0 : retf 0x64e
0x00000000000e2272 : retf 0x659
0x000000000015b1f1 : retf 0x6600
0x00000000000956c2 : retf 0x6601
0x0000000000169ad4 : retf 0x6602
0x0000000000169c24 : retf 0x6603
0x000000000015b1fa : retf 0x6604
0x0000000000169ec4 : retf 0x6605
0x000000000016a014 : retf 0x6606
0x000000000016a164 : retf 0x6607
0x000000000008a564 : retf 0x6608
0x000000000016a404 : retf 0x6609
0x000000000016a554 : retf 0x660a
0x000000000016a6a4 : retf 0x660b
0x000000000016a7f4 : retf 0x660c
0x000000000016a944 : retf 0x660d
0x000000000016aa94 : retf 0x660e
0x000000000016abe4 : retf 0x660f
0x00000000000af6c3 : retf 0x6666
0x00000000001701d1 : retf 0x676
0x000000000004aef5 : retf 0x6948
0x00000000000d55cf : retf 0x6b45
0x000000000012feb0 : retf 0x6be9
0x00000000000d3000 : retf 0x6eb8
0x000000000005c185 : retf 0x703d
0x00000000000e6a8a : retf 0x70e8
0x0000000000186d35 : retf 0x7202
0x000000000003a889 : retf 0x7477
0x000000000004a852 : retf 0x75d
0x0000000000059192 : retf 0x777
0x00000000000d68ea : retf 0x7980
0x0000000000170342 : retf 0x79f
0x00000000000517d2 : retf 0x7b
0x000000000007504d : retf 0x7de9
0x0000000000137bd4 : retf 0x7f80
0x00000000000d7353 : retf 0x8102
0x00000000000d4539 : retf 0x8104
0x00000000001701ba : retf 0x8148
0x00000000000fb855 : retf 0x8166
0x000000000018e4da : retf 0x81eb
0x000000000002c796 : retf 0x820f
0x0000000000062b18 : retf 0x830f
0x0000000000092574 : retf 0x8310
0x0000000000093d70 : retf 0x8320
0x0000000000026ef4 : retf 0x8341
0x000000000002e0a4 : retf 0x8348
0x000000000002e6ee : retf 0x8349
0x000000000006f40a : retf 0x8380
0x0000000000026ef7 : retf 0x83ff
0x000000000004dded : retf 0x840f
0x000000000006b3b3 : retf 0x8440
0x000000000006e13b : retf 0x8445
0x000000000002b3c4 : retf 0x850f
0x0000000000026df2 : retf 0x8545
0x00000000000a8248 : retf 0x8548
0x00000000000579e4 : retf 0x854d
0x000000000008a7de : retf 0x858b
0x000000000009714a : retf 0x860f
0x0000000000163f52 : retf 0x867
0x0000000000047ba5 : retf 0x870f
0x0000000000131b86 : retf 0x877
0x00000000000f6d61 : retf 0x8841
0x00000000000a8fba : retf 0x8880
0x00000000000eb797 : retf 0x8901
0x0000000000087eb1 : retf 0x8902
0x000000000016365a : retf 0x8908
0x000000000008bcf1 : retf 0x8920
0x000000000011bb41 : retf 0x8940
0x000000000003aa4c : retf 0x8941
0x00000000000dc9f8 : retf 0x8944
0x00000000000fa7fa : retf 0x8945
0x000000000002b74c : retf 0x8948
0x0000000000039ad5 : retf 0x8949
0x0000000000029f8e : retf 0x894c
0x000000000003b6b5 : retf 0x894d
0x00000000000d73fd : retf 0x8966
0x00000000000a7112 : retf 0x8973
0x000000000012df0c : retf 0x8b0
0x00000000001262c0 : retf 0x8b40
0x00000000000ccd76 : retf 0x8b41
0x000000000004f228 : retf 0x8b48
0x000000000005908a : retf 0x8b49
0x00000000000819d9 : retf 0x8b4c
0x00000000000e5b26 : retf 0x8b64
0x0000000000065fa6 : retf 0x8b8
0x00000000001029b1 : retf 0x8c0f
0x000000000018d7ba : retf 0x8ceb
0x000000000004d92e : retf 0x8d44
0x0000000000098854 : retf 0x8d48
0x0000000000039808 : retf 0x8d49
0x0000000000050776 : retf 0x8d4a
0x000000000005e942 : retf 0x8d4b
0x000000000004e7ed : retf 0x8d4c
0x000000000008a469 : retf 0x8d4d
0x0000000000186fcd : retf 0x8e0f
0x00000000001018fa : retf 0x8eb
0x0000000000083ffd : retf 0x9066
0x000000000015e6e2 : retf 0x91c
0x0000000000198358 : retf 0x920f
0x00000000000e8d37 : retf 0x93e8
0x0000000000059aa9 : retf 0x93e9
0x0000000000197c74 : retf 0x944
0x0000000000045c61 : retf 0x948
0x00000000001109b2 : retf 0x9489
0x0000000000098799 : retf 0x949
0x00000000000bcb71 : retf 0x94c
0x000000000004d6bd : retf 0x973d
0x0000000000120fca : retf 0x974
0x000000000002b57d : retf 0x9775
0x00000000000d5eda : retf 0x9848
0x0000000000155722 : retf 0x9a3
0x000000000014f5a2 : retf 0x9a8
0x0000000000112e76 : retf 0x9b8
0x000000000011bb37 : retf 0x9b9
0x000000000018c5ca : retf 0x9ceb
0x0000000000122f56 : retf 0x9db8
0x0000000000118d09 : retf 0x9f2
0x0000000000055d7f : retf 0xa
0x000000000005aa1a : retf 0xa0e8
0x0000000000029182 : retf 0xa3
0x0000000000122e96 : retf 0xa5b8
0x000000000009b427 : retf 0xa74
0x000000000010480f : retf 0xa7e9
0x000000000012e7d1 : retf 0xa880
0x000000000013e6a2 : retf 0xab7
0x00000000000311a2 : retf 0xaceb
0x0000000000122d76 : retf 0xafb8
0x0000000000040072 : retf 0xb
0x000000000012a719 : retf 0xb1e8
0x0000000000122f86 : retf 0xb2b8
0x000000000014e422 : retf 0xb3
0x0000000000122fb6 : retf 0xb3b8
0x0000000000103d17 : retf 0xb3e8
0x000000000002fe3b : retf 0xb3eb
0x000000000014dbc3 : retf 0xb43
0x0000000000141e86 : retf 0xb4e8
0x00000000000a0a51 : retf 0xb4eb
0x000000000007dbe8 : retf 0xb589
0x00000000000aad9e : retf 0xb60f
0x0000000000070062 : retf 0xb61
0x00000000000d4351 : retf 0xb70f
0x00000000001050c2 : retf 0xb71
0x0000000000159099 : retf 0xb775
0x000000000009f6f3 : retf 0xb7e8
0x000000000019a352 : retf 0xb801
0x000000000009bd18 : retf 0xb804
0x000000000008bcd0 : retf 0xb810
0x000000000006f43e : retf 0xb841
0x0000000000031467 : retf 0xb8eb
0x00000000001373e2 : retf 0xb8f
0x00000000000a3c5d : retf 0xb941
0x00000000000da078 : retf 0xb948
0x00000000001356e6 : retf 0xb96
0x00000000000a261c : retf 0xba5b
0x000000000004ac52 : retf 0xbb75
0x000000000009719a : retf 0xbb77
0x0000000000112f36 : retf 0xbb8
0x00000000001344b2 : retf 0xbbe
0x00000000001201a6 : retf 0xbcb8
0x00000000001333b6 : retf 0xbd0
0x000000000015e79d : retf 0xbd49
0x0000000000120146 : retf 0xbdb8
0x0000000000055b46 : retf 0xbe0f
0x0000000000120026 : retf 0xbeb8
0x0000000000133147 : retf 0xbed0
0x0000000000120056 : retf 0xbfb8
0x0000000000066347 : retf 0xc
0x0000000000092340 : retf 0xc031
0x000000000011c4b1 : retf 0xc083
0x0000000000057b13 : retf 0xc084
0x000000000008d9c3 : retf 0xc085
0x00000000001200b6 : retf 0xc0b8
0x00000000000a81a8 : retf 0xc141
0x000000000002fb05 : retf 0xc148
0x0000000000089c7b : retf 0xc149
0x0000000000058287 : retf 0xc183
0x0000000000093f91 : retf 0xc189
0x000000000011ff96 : retf 0xc1b8
0x00000000000fae44 : retf 0xc209
0x00000000000783a5 : retf 0xc239
0x00000000000de17e : retf 0xc281
0x00000000000f18c1 : retf 0xc283
0x00000000000ec49a : retf 0xc374
0x00000000000995a0 : retf 0xc574
0x00000000000f8358 : retf 0xc575
0x0000000000151dae : retf 0xc689
0x000000000015ca6a : retf 0xc6e9
0x00000000000cbac6 : retf 0xc73
0x00000000000591c7 : retf 0xc748
0x000000000004ee78 : retf 0xc749
0x000000000012b826 : retf 0xc775
0x00000000000578df : retf 0xc821
0x00000000000a8ad6 : retf 0xc883
0x00000000000d7ae0 : retf 0xc8d
0x000000000011b59c : retf 0xc931
0x0000000000043aa5 : retf 0xc985
0x000000000011c49b : retf 0xc9d9
0x00000000000fc20d : retf 0xca01
0x0000000000191a14 : retf 0xcab2
0x000000000011ede2 : retf 0xcaf
0x000000000010f856 : retf 0xcb8
0x00000000000fbceb : retf 0xcb89
0x000000000011c790 : retf 0xcbd9
0x000000000015b12f : retf 0xce75
0x000000000011b882 : retf 0xcea
0x0000000000162cea : retf 0xceb
0x000000000012f74d : retf 0xcee9
0x0000000000039e85 : retf 0xd
0x00000000000f401d : retf 0xd089
0x000000000012c5e8 : retf 0xd0f7
0x00000000000bfe1f : retf 0xd139
0x000000000002fb0c : retf 0xd148
0x000000000014b68c : retf 0xd189
0x00000000000cdaab : retf 0xd284
0x0000000000039fbc : retf 0xd289
0x000000000005b895 : retf 0xd348
0x00000000000f254b : retf 0xd349
0x00000000000a59da : retf 0xd375
0x0000000000164ef1 : retf 0xd4eb
0x0000000000197163 : retf 0xd589
0x0000000000075839 : retf 0xd5e9
0x00000000000e9e50 : retf 0xd5eb
0x000000000002e755 : retf 0xd689
0x000000000014ba52 : retf 0xd789
0x000000000003578e : retf 0xd88
0x00000000000a8a89 : retf 0xd889
0x000000000011bce6 : retf 0xd8b8
0x0000000000193f9a : retf 0xd975
0x000000000007b355 : retf 0xda29
0x00000000000ecdbb : retf 0xdaf7
0x00000000000ab8e2 : retf 0xdb74
0x00000000000995da : retf 0xdb75
0x00000000001242c6 : retf 0xdcb8
0x0000000000115d76 : retf 0xddb8
0x00000000000ab98f : retf 0xde75
0x00000000000448f1 : retf 0xdeb
0x00000000000462db : retf 0xe
0x00000000000aae8d : retf 0xe072
0x000000000004b2d2 : retf 0xe0c1
0x000000000018f0d7 : retf 0xe175
0x000000000005b86c : retf 0xe183
0x000000000005e707 : retf 0xe273
0x000000000008d957 : retf 0xe281
0x000000000002aad8 : retf 0xe283
0x00000000000bfe33 : retf 0xe375
0x00000000000bf1d0 : retf 0xe475
0x0000000000150fe6 : retf 0xe4e8
0x00000000000c9362 : retf 0xe4e9
0x0000000000196f54 : retf 0xe583
0x00000000000aba3f : retf 0xe675
0x00000000000f7927 : retf 0xe677
0x0000000000111595 : retf 0xe680
0x000000000010530b : retf 0xe74
0x000000000014da61 : retf 0xe781
0x000000000010faec : retf 0xe803
0x0000000000144fa2 : retf 0xe875
0x00000000000f69f5 : retf 0xe877
0x000000000006149d : retf 0xe87f
0x00000000000f55cf : retf 0xe8c0
0x0000000000067361 : retf 0xe908
0x00000000000441f1 : retf 0xe90c
0x00000000000ab884 : retf 0xe975
0x00000000000f80f4 : retf 0xe977
0x0000000000093649 : retf 0xe980
0x0000000000122d16 : retf 0xe9b8
0x0000000000026c92 : retf 0xe9ff
0x000000000015b363 : retf 0xea75
0x0000000000112bce : retf 0xea81
0x00000000000ee5e8 : retf 0xeac0
0x000000000003a7c8 : retf 0xeac1
0x00000000000ac261 : retf 0xead3
0x00000000000eb14c : retf 0xeb04
0x0000000000067337 : retf 0xeb08
0x00000000000441dc : retf 0xeb0a
0x0000000000035150 : retf 0xed75
0x000000000011c851 : retf 0xed83
0x00000000000ccc67 : retf 0xee75
0x000000000012c5ec : retf 0xeec1
0x000000000005897e : retf 0xef75
0x000000000012c5b0 : retf 0xefc1
0x000000000016ebdc : retf 0xf01
0x000000000016ed5c : retf 0xf02
0x000000000016eedc : retf 0xf03
0x000000000016f05c : retf 0xf04
0x000000000016f1dc : retf 0xf05
0x000000000016f35c : retf 0xf06
0x000000000016f4dc : retf 0xf07
0x000000000008a4ed : retf 0xf075
0x000000000016f65c : retf 0xf08
0x000000000016f7dc : retf 0xf09
0x000000000016f95c : retf 0xf0a
0x000000000016fadc : retf 0xf0b
0x000000000016fc5c : retf 0xf0c
0x000000000016fddc : retf 0xf0d
0x000000000016ff5c : retf 0xf0e
0x00000000001700dc : retf 0xf0f
0x0000000000110232 : retf 0xf152
0x000000000010d2c2 : retf 0xf181
0x00000000001885f5 : retf 0xf1c5
0x0000000000104162 : retf 0xf211
0x0000000000141172 : retf 0xf23c
0x00000000001383a2 : retf 0xf2da
0x000000000011c85a : retf 0xf2db
0x0000000000102118 : retf 0xf40
0x00000000000aaf02 : retf 0xf41
0x00000000000d44cb : retf 0xf43
0x0000000000162aa6 : retf 0xf44
0x000000000004d4e8 : retf 0xf48
0x0000000000119cab : retf 0xf49
0x00000000000b50b1 : retf 0xf4c
0x00000000000d8ae2 : retf 0xf4c8
0x0000000000131562 : retf 0xf554
0x00000000000457d6 : retf 0xf66
0x0000000000130232 : retf 0xf676
0x00000000000c46f2 : retf 0xf728
0x00000000000f6017 : retf 0xf748
0x000000000005917c : retf 0xf749
0x000000000009fd82 : retf 0xf97c
0x0000000000122a16 : retf 0xf983
0x00000000001886cf : retf 0xf9c5
0x00000000001216c2 : retf 0xf9d4
0x00000000000c4b92 : retf 0xf9f
0x000000000014ba5d : retf 0xfa81
0x000000000005f48c : retf 0xfac1
0x0000000000104ac8 : retf 0xfae9
0x0000000000071762 : retf 0xfb3b
0x00000000000f2952 : retf 0xfcdc
0x0000000000162102 : retf 0xfd0c
0x0000000000102504 : retf 0xfd4f
0x0000000000163c6a : retf 0xfd89
0x0000000000049632 : retf 0xfdbe
0x000000000018b9ea : retf 0xfdc5
0x000000000004513c : retf 0xfe0d
0x000000000003f282 : retf 0xfe60
0x000000000014eb2b : retf 0xfe8
0x0000000000146b02 : retf 0xfec2
0x00000000001883f7 : retf 0xfec5
0x0000000000038882 : retf 0xfeca
0x00000000000363f2 : retf 0xfef1
0x0000000000170a11 : retf 0xff2
0x0000000000170a0c : retf 0xff3
0x0000000000055fa5 : retf 0xff3e
0x000000000006e8ab : retf 0xff88
0x0000000000043452 : retf 0xff8c
0x0000000000083c7d : retf 0xffb8
0x00000000000733d2 : retf 0xffbe
0x00000000000a766d : retf 0xffc1
0x00000000000ab541 : retf 0xffd5
0x00000000000da648 : retf 0xffd6
0x000000000007c222 : retf 0xffe0
0x00000000000542a2 : retf 0xffe2
0x00000000000618f1 : retf 0xffe3
0x0000000000060e75 : retf 0xffea
0x0000000000063d43 : retf 0xffeb
0x00000000001588c3 : retf 0xffec
0x000000000007eb0b : retf 0xffed
0x000000000014afb0 : retf 0xffee
0x00000000000dffdf : retf 0xffef
0x00000000000780eb : retf 0xfff0
0x00000000000cfc3f : retf 0xfff1
0x000000000007f548 : retf 0xfff2
0x00000000000e889b : retf 0xfff3
0x0000000000074290 : retf 0xfff4
0x000000000002f2ca : retf 0xfff5
0x00000000000de69e : retf 0xfff6
0x000000000003d06b : retf 0xfff7
0x00000000000ff220 : retf 0xfff8
0x00000000000889e4 : retf 0xfff9
0x0000000000046b92 : retf 0xfffa
0x0000000000066a22 : retf 0xfffb
0x0000000000057c99 : retf 0xfffc
0x000000000002ee5d : retf 0xfffd
0x000000000002e12a : retf 0xfffe
0x000000000003f623 : retf 0xffff
0x000000000002e672 : retf 1
0x000000000003a6a4 : retf 2
0x0000000000028bb2 : retf 3
0x00000000000e6398 : retf 4
0x0000000000056272 : retf 5
0x00000000000baa52 : retf 6
0x000000000009f183 : retf 7
0x000000000003ef2f : retf 8
0x0000000000132e96 : rol ax, 8 ; ret
0x00000000000be735 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000af2ce : rol bl, 0x83 ; ret 0x6620
0x00000000000bf3a9 : rol bl, 0x89 ; retf 0xb60f
0x000000000013ec4d : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x000000000013f0c7 : rol bl, 0xb8 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000004587e : rol bl, 0xf3 ; addps xmm0, xmm0 ; ret
0x000000000008af2c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000055b9c : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000afa6e : rol bl, 1 ; xor eax, eax ; ret
0x0000000000140bd7 : rol byte ptr [r8], 0xc6 ; ret
0x00000000000beef1 : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000d4272 : rol byte ptr [rax + 0x42], cl ; str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000ad642 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000187c1b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000000b5042 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000004a66b : rol byte ptr [rax + 0x775003f], 0x5b ; ret
0x00000000000f194e : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x000000000002da99 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000f3bca : rol byte ptr [rax + rcx*2], 0x39 ; ret 0x840f
0x0000000000032660 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000004aca3 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4804
0x000000000010125a : rol byte ptr [rax - 0xe], cl ; dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x00000000000bfde4 : rol byte ptr [rax*4 + 0x31ee75d2], 0xc0 ; ret
0x0000000000091859 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x0000000000190d9f : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000140bd8 : rol byte ptr [rax], 0xc6 ; ret
0x00000000000af522 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000001387ad : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000188052 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x0000000000065ffd : rol byte ptr [rbx + 0xd74fff8], 0x44 ; mov eax, eax ; ret
0x0000000000107f5d : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x000000000010809d : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x0000000000058ccb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000163fb1 : rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x00000000000372f5 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000010bb03 : rol byte ptr [rbx - 0x79f0f608], 1 ; retf
0x00000000000d2d12 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000014b60a : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x000000000015fff4 : rol byte ptr [rbx], 9 ; add al, ch ; ret
0x00000000000db5fe : rol byte ptr [rcx + 0x17ec2], 1 ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000000ff490 : rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000e28e7 : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; pop r14 ; ret
0x000000000009d64c : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x00000000001302dc : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x0000000000103188 : rol byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000001387af : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x00000000000a59cc : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3840
0x00000000000beef2 : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000ab982 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc839
0x00000000000aba32 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0xf039
0x00000000000f35da : rol byte ptr [rcx + 0xf], cl ; mov dh, 0x14 ; adc al, 0xf6 ; ret 0x7580
0x0000000000196ad0 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xc031
0x0000000000062e66 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x000000000008417f : rol byte ptr [rcx + rbp - 0x36], 0x39 ; ret 0x2b7c
0x00000000000d385d : rol byte ptr [rcx + rbp - 0x40], 0x89 ; ret
0x00000000000f530e : rol byte ptr [rcx + rcx*4 + 0x45], 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124638 : rol byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 0x14 ; syscall
0x0000000000142392 : rol byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x000000000004b5d9 : rol byte ptr [rcx + rcx*4 - 0x38], cl ; sub rsi, rdi ; syscall
0x0000000000026ded : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000013f6fa : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000013f99b : rol byte ptr [rcx - 0x3a], 0x40 ; add al, byte ptr [rax] ; ret
0x000000000003a84e : rol byte ptr [rcx - 0x77], cl ; ret 0xf7f7
0x0000000000097fba : rol byte ptr [rcx - 0x7d], 0xe8 ; add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000010722e : rol byte ptr [rcx - 0x7d], 0xf8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000000a77a9 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4105
0x00000000000a5ff8 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x00000000000d2cf2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a29ea : rol byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x00000000000ab8d1 : rol byte ptr [rcx], 0x38 ; ret 0xf41
0x00000000000ab881 : rol byte ptr [rcx], 0x38 ; retf 0xe975
0x00000000001569e5 : rol byte ptr [rcx], 0x39 ; ret
0x00000000000f1834 : rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x00000000000952a9 : rol byte ptr [rcx], 0x48 ; cmp ebx, eax ; jne 0x952a8 ; jmp 0x95285
0x000000000002833e : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000125133 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000057412 : rol byte ptr [rcx], 0x80 ; js 0x57421 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000014018d : rol byte ptr [rcx], 0x84 ; fisttp dword ptr [rdi] ; ret 0x8b48
0x000000000012c791 : rol byte ptr [rcx], 0x85 ; test byte ptr [rbp + 0xf], 0x44 ; retf
0x000000000003be8e : rol byte ptr [rcx], 0x88 ; dec qword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000056d63 : rol byte ptr [rcx], 0x88 ; or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000015722a : rol byte ptr [rcx], 0x89 ; ret
0x000000000002b3a2 : rol byte ptr [rcx], 0x89 ; xor dword ptr [rax - 0x7d], ecx ; ret
0x0000000000086b84 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000005647a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000047243 : rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000bf602 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x0000000000046bba : rol byte ptr [rcx], 0xf7 ; ret 0
0x0000000000065435 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001261b1 : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000d2d52 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d2d02 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000089c1a : rol byte ptr [rdx], 0 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000126081 : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000d2d42 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000177ecd : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001887b5 : rol ch, 1 ; jns 0x188794 ; retf 0xead3
0x0000000000188905 : rol ch, 1 ; jns 0x1888e4 ; retf 0xead3
0x0000000000188a55 : rol ch, 1 ; jns 0x188a34 ; retf 0xead3
0x0000000000188ba5 : rol ch, 1 ; jns 0x188b84 ; retf 0xead3
0x0000000000188cf5 : rol ch, 1 ; jns 0x188cd4 ; retf 0xead3
0x0000000000188e45 : rol ch, 1 ; jns 0x188e24 ; retf 0xead3
0x0000000000188f95 : rol ch, 1 ; jns 0x188f74 ; retf 0xead3
0x00000000001890e5 : rol ch, 1 ; jns 0x1890c4 ; retf 0xead3
0x0000000000189235 : rol ch, 1 ; jns 0x189214 ; retf 0xead3
0x0000000000189385 : rol ch, 1 ; jns 0x189364 ; retf 0xead3
0x00000000001894d5 : rol ch, 1 ; jns 0x1894b4 ; retf 0xead3
0x0000000000189625 : rol ch, 1 ; jns 0x189604 ; retf 0xead3
0x0000000000189775 : rol ch, 1 ; jns 0x189754 ; retf 0xead3
0x00000000001898c5 : rol ch, 1 ; jns 0x1898a4 ; retf 0xead3
0x0000000000189a15 : rol ch, 1 ; jns 0x1899f4 ; retf 0xead3
0x0000000000189e95 : rol ch, 1 ; jns 0x189e74 ; retf 0xead3
0x000000000018a015 : rol ch, 1 ; jns 0x189ff4 ; retf 0xead3
0x000000000018a195 : rol ch, 1 ; jns 0x18a174 ; retf 0xead3
0x000000000018a315 : rol ch, 1 ; jns 0x18a2f4 ; retf 0xead3
0x000000000018a495 : rol ch, 1 ; jns 0x18a474 ; retf 0xead3
0x000000000018a615 : rol ch, 1 ; jns 0x18a5f4 ; retf 0xead3
0x000000000018a795 : rol ch, 1 ; jns 0x18a774 ; retf 0xead3
0x000000000018a915 : rol ch, 1 ; jns 0x18a8f4 ; retf 0xead3
0x000000000018aa95 : rol ch, 1 ; jns 0x18aa74 ; retf 0xead3
0x000000000018ac15 : rol ch, 1 ; jns 0x18abf4 ; retf 0xead3
0x000000000018ad95 : rol ch, 1 ; jns 0x18ad74 ; retf 0xead3
0x000000000018af15 : rol ch, 1 ; jns 0x18aef4 ; retf 0xead3
0x000000000018b095 : rol ch, 1 ; jns 0x18b074 ; retf 0xead3
0x000000000018b215 : rol ch, 1 ; jns 0x18b1f4 ; retf 0xead3
0x000000000018b395 : rol ch, 1 ; jns 0x18b374 ; retf 0xead3
0x0000000000187c9f : rol ch, 1 ; std ; xlatb ; ret
0x000000000018ba46 : rol ch, cl ; std ; xlatb ; ret
0x000000000018bcff : rol ch, cl ; std ; xlatb ; ret 0xc085
0x000000000011a0f7 : rol dh, 0x46 ; inc dword ptr [rax] ; ret
0x00000000000d2c9c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000018f0d0 : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000000bf1cc : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000187864 : rol dword ptr [rax + 0x49], 0x29 ; retf
0x000000000002cda8 : rol dword ptr [rax + rcx*2], 0x39 ; retf
0x000000000002c792 : rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x000000000013f566 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000172cc0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000009ff69 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x0000000000130436 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; leave ; ret
0x00000000000af2f4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000af7a7 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000af7d6 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x0000000000187c93 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000018b793 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000ab98c : rol dword ptr [rbp - 0x7c], 0xca ; jne 0xab979 ; mov rax, r8 ; ret
0x00000000001872c5 : rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x0000000000196cfd : rol dword ptr [rbx - 0x76b6fe1b], 1 ; retf
0x00000000000cc0e1 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x844
0x00000000000a8362 : rol dword ptr [rcx + 0xf], cl ; xchg eax, ebx ; ret 0x845
0x000000000004ac4b : rol dword ptr [rcx + rax*2], 0x89 ; cmp dword ptr [rbp + 0x39], ecx ; retf 0xbb75
0x00000000000fa366 : rol dword ptr [rcx + rcx*2], 0x39 ; retf
0x00000000000f8354 : rol dword ptr [rcx + rcx*2], 0x39 ; retf 0xc575
0x00000000000a7684 : rol dword ptr [rcx + rcx*4 - 0x21], 0xc1 ; call qword ptr [rdx]
0x000000000004afe7 : rol dword ptr [rcx + rcx*4 - 0x40], 0xf ; adc dword ptr [rdi], eax ; ret
0x000000000005fb27 : rol dword ptr [rcx + rdi - 0x18], 0x7e ; mov cl, 0xeb ; retf 0x4c90
0x000000000002d17e : rol dword ptr [rcx - 0x77], cl ; ret 0x5a58
0x00000000000f1a62 : rol dword ptr [rcx], 0x39 ; ret 0xc775
0x0000000000056b9b : rol dword ptr [rcx], 0x88 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000132b24 : rol dword ptr [rcx], 0xc9 ; jmp 0x8ed45
0x00000000000d998e : rol dword ptr [rdi + rcx], 0x84 ; ret
0x00000000000bc199 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x000000000002e67e : rol dword ptr [rdx + rdx*8 - 0x157e2a87], 1 ; ret 0
0x000000000013f8e6 : rol dword ptr [rdx], 0x45 ; mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x0000000000132e97 : rol eax, 8 ; ret
0x0000000000046ef1 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000018b9e2 : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000188355 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x000000000013d6bf : rol esi, 0x45 ; ret
0x000000000013d6be : rol r14, 0x45 ; ret
0x0000000000046ef0 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008d88d : ror byte ptr [r9 + rcx*4 - 0xf], 0x4c ; mov edi, edi ; call r12
0x0000000000163f38 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000052770 : ror byte ptr [rax + 0x21], 1 ; ret 0x8548
0x0000000000046ef2 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000af342 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaf389 ; add rax, rdi ; ret
0x00000000000d1552 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xd1599 ; add rax, rdi ; ret
0x00000000000b4ef7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000d2a1c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000000b537e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000a6a21 : ror byte ptr [rax + 0x29], cl ; ret 0x8d4c
0x00000000000dc231 : ror byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x0000000000110457 : ror byte ptr [rax + 0x39], 0xf7 ; ja 0x110451 ; mov eax, r8d ; ret
0x0000000000097f85 : ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x0000000000097300 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000009c54e : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000110b95 : ror byte ptr [rax + 0x39], 1 ; ret 0x2d75
0x00000000000a32b8 : ror byte ptr [rax + 0x48100454], 0x89 ; retf 0x8348
0x00000000000d8034 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000abbd8 : ror byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000067a1a : ror byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000f0f23 : ror byte ptr [rax + 0x63], cl ; retf
0x000000000002704e : ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x00000000000d4023 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000130376 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000146834 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0x00000000000d52e6 : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x000000000003567a : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000003566b : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000d2aa6 : ror byte ptr [rax + 0xf], cl ; ret
0x0000000000197c2d : ror byte ptr [rax + 0xf], cl ; retf
0x00000000000af3fc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000000af918 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000af312 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000187c63 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000003baab : ror byte ptr [rax + 1], 1 ; ret
0x000000000013f8c6 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000b4ef4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000afa66 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000036c66 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001602c8 : ror byte ptr [rax - 0x39], 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005ba5a : ror byte ptr [rax - 0x39], cl ; ret
0x00000000001480b9 : ror byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007860e : ror byte ptr [rax - 0x73], 0x34 ; ret
0x0000000000083e9c : ror byte ptr [rax - 0x73], 0x3d ; pop rsp ; retf
0x0000000000048665 : ror byte ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x00000000000e80a0 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000af302 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000af332 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000af812 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000af322 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000009f3f5 : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000018d7f2 : ror byte ptr [rax - 0x73], 1 ; jl 0x18d815 ; and ecx, ebp ; ret
0x0000000000118d05 : ror byte ptr [rax - 0x73], 5 ; retf 0x9f2
0x000000000011f803 : ror byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x0000000000125d78 : ror byte ptr [rax - 0x75], 0x44 ; ret 0x8940
0x0000000000099a30 : ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000156ea6 : ror byte ptr [rax - 0x75], 0x47 ; cmp byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8948
0x0000000000125b25 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000df353 : ror byte ptr [rax - 0x75], 0x74 ; ret
0x00000000000999d9 : ror byte ptr [rax - 0x75], 5 ; call qword ptr [rcx]
0x00000000000a20eb : ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000ab7dc : ror byte ptr [rax - 0x77], 0xa ; ret
0x0000000000150dfc : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000a5de8 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x000000000014b15f : ror byte ptr [rax - 0x77], 0xdf ; call rcx
0x0000000000116cdf : ror byte ptr [rax - 0x77], 0xe2 ; mov eax, 0x10 ; syscall
0x000000000008c969 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000011060d : ror byte ptr [rax - 0x77], 1 ; ret 0x3d48
0x0000000000092445 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000026fdd : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000044352 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000110889 : ror byte ptr [rax - 0x77], 1 ; retf
0x00000000000a2165 : ror byte ptr [rax - 0x77], 1 ; retf 0x894c
0x0000000000163c67 : ror byte ptr [rax - 0x77], 1 ; retf 0xfd89
0x000000000015036a : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000014db6a : ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001872c2 : ror byte ptr [rax - 0x77], cl ; rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x000000000013ed0d : ror byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x0000000000093a15 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x93a26 ; ret
0x0000000000196acd : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xc031
0x00000000000ab87e : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax], edi ; retf 0xe975
0x00000000001037af : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012eaef : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000004b373 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000015af6d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000055504 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000112e27 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000000915c5 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000af872 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000188082 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000af852 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000af832 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000123c28 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000145a47 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000044b3c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000000844b3 : ror byte ptr [rax - 0x7d], 1 ; ret 0x8b04
0x000000000002da96 : ror byte ptr [rax - 0x7d], 1 ; rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000e64cf : ror byte ptr [rax - 0x7d], 1 ; ror byte ptr [rax], 0x83 ; ret 0x4f08
0x000000000005b880 : ror byte ptr [rax - 0x7d], cl ; jge 0x5b88d ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000cea90 : ror byte ptr [rax - 0x7d], cl ; jge 0xcea9d ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x0000000000100e0d : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba756 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000083dee : ror byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000046400 : ror byte ptr [rax - 0x7f], 0xc4 ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001568a5 : ror byte ptr [rax], 0x83 ; js 0x1568ab ; push qword ptr [rbx + rdi*2 - 0x7d] ; ret 0x3901
0x00000000000e64d2 : ror byte ptr [rax], 0x83 ; ret 0x4f08
0x00000000000beb84 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000d44aa : ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xb70f
0x00000000001607c3 : ror byte ptr [rbp + rcx*4 + 0x7c], 0x24 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000006230a : ror byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8545
0x00000000001112a3 : ror byte ptr [rbx + 0x3108247c], 0xc0 ; syscall
0x000000000018f261 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000000cadd9 : ror byte ptr [rbx - 0x74b77cfc], 1 ; pop rbp ; mov al, 0x89 ; ret 0xff25
0x0000000000159736 : ror byte ptr [rcx + 0x1b803], 0 ; add bl, ch ; ret
0x00000000000f6354 : ror byte ptr [rcx + 0x21], 1 ; retf
0x000000000012a904 : ror byte ptr [rcx + 0x2b], 1 ; cmp byte ptr [r8 + 0x39], r9b ; ret
0x0000000000030de8 : ror byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000110bf8 : ror byte ptr [rcx + 0x39], 1 ; ret 0x2a75
0x000000000010f75a : ror byte ptr [rcx + 0x5d5b0453], 0x41 ; pop rsp ; ret
0x00000000000f5247 : ror byte ptr [rcx + 0x5d5b307d], 0x41 ; pop rsp ; ret
0x00000000000abc95 : ror byte ptr [rcx + 0x63], 1 ; add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000093336 : ror byte ptr [rcx + 0x63], 4 ; or dword ptr [rcx + rax - 0x28], 0x3e ; jmp rax
0x000000000010c26c : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000000d9221 : ror byte ptr [rcx + 0x63], 4 ; xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000055f9e : ror byte ptr [rcx + 0x63], cl ; adc al, 0x91 ; add rdx, r9 ; jmp rdx
0x00000000000a563a : ror byte ptr [rcx + 0xf2c2444], 0x84 ; retf 1
0x00000000000a637e : ror byte ptr [rcx + 1], 1 ; ret
0x00000000000f3a02 : ror byte ptr [rcx + 1], 1 ; ret 0x8948
0x000000000002cb36 : ror byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; sub byte ptr [rcx - 0x77], cl ; ret
0x00000000000d3539 : ror byte ptr [rcx + rcx*4 + 0x64], 0x24 ; push rax ; call rbx
0x000000000014d86d : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000c0918 : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x30] ; call rbx
0x000000000003b7d3 : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0653 : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049f8a : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x00000000001564fa : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x0000000000147d1a : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x000000000008d88e : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, edi ; call r12
0x00000000000a9215 : ror byte ptr [rcx + rdi - 0x21], 0xf ; xchg eax, ebx ; ret 0x841
0x0000000000044f58 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000a3cb3 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000014d814 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x0000000000062168 : ror byte ptr [rcx - 0x3f], 0xe3 ; and byte ptr [rcx + 9], cl ; ret
0x00000000000ccdbb : ror byte ptr [rcx - 0x73], cl ; jl 0xcce01 ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x00000000000bf55a : ror byte ptr [rcx - 0x765df00f], 1 ; ret 0xe283
0x0000000000077a61 : ror byte ptr [rcx - 0x77], 4 ; retf 0x4a8d
0x000000000014db77 : ror byte ptr [rcx - 0x77], cl ; ret 0xc149
0x000000000002a898 : ror byte ptr [rcx - 0x77], cl ; retf
0x00000000000ba333 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000002f4bc : ror byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000018c9f8 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000000a8fa9 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8806
0x00000000001220b0 : ror byte ptr [rcx], 0xd0 ; ret
0x0000000000046472 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001775cd : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008cf62 : ror byte ptr [rdi], 0x11 ; add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x0000000000098fdc : ror byte ptr [rdi], 0x11 ; add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x0000000000116b7c : ror byte ptr [rdi], 0x11 ; and al, 0x11 ; syscall
0x00000000000967d8 : ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x000000000002a99c : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x000000000010ffe2 : ror byte ptr [rdi], 0x44 ; ret 0x8b48
0x000000000011ff84 : ror byte ptr [rdi], 0x44 ; ret 0xfc3
0x000000000011c0e5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000004a69e : ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x000000000011748b : ror byte ptr [rdi], 0x49 ; ret 0x48c3
0x0000000000033bcf : ror byte ptr [rdi], 0x84 ; inc dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000085901 : ror byte ptr [rdi], 0x84 ; mov dword ptr [rax], 0x89480000 ; ret
0x000000000005be41 : ror byte ptr [rdi], 0x84 ; or rax, 0xffffffff89410000 ; ret 0xd231
0x00000000000501c1 : ror byte ptr [rdi], 0x84 ; push rax ; or eax, 0x89410000 ; ret 0xd231
0x0000000000074877 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000124704 : ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000070e9a : ror byte ptr [rdi], 0x84 ; ret 0xa
0x0000000000060d50 : ror byte ptr [rdi], 0x84 ; retf
0x00000000000368d7 : ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000179d7f : ror byte ptr [rdi], 0x84 ; retf 0x20
0x00000000000ff0aa : ror byte ptr [rdi], 0x84 ; retf 0xffe2
0x0000000000057c96 : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x00000000000fc8cf : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000010d86b : ror byte ptr [rdi], 0x84 ; retf 3
0x000000000009ff66 : ror byte ptr [rdi], 0x84 ; rol dword ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x0000000000068757 : ror byte ptr [rdi], 0x84 ; sbb bl, byte ptr [rip - 0x7cb80000] ; ret 0x3c01
0x000000000011bffa : ror byte ptr [rdi], 0x84 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b8db1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000002b80c : ror byte ptr [rdi], 0x85 ; ret
0x00000000000860a7 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000b56f7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000710d7 : ror byte ptr [rdi], 0x85 ; ret 0xffe1
0x0000000000114bd7 : ror byte ptr [rdi], 0x85 ; ret 0xfffd
0x000000000011ded4 : ror byte ptr [rdi], 0x85 ; ret 4
0x0000000000083fd6 : ror byte ptr [rdi], 0x85 ; retf
0x00000000001550ef : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000018064f : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000018046f : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x000000000019a1d0 : ror byte ptr [rdi], 0x85 ; retf 0xfffe
0x0000000000146b57 : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000007a5fe : ror byte ptr [rdi], 0x88 ; retf
0x00000000000ca3f0 : ror byte ptr [rdi], 0x89 ; ret 1
0x000000000007ec8c : ror byte ptr [rdi], 0x8c ; ret 0xffed
0x000000000010fbee : ror byte ptr [rdi], 0x8e ; ret
0x0000000000064a5e : ror byte ptr [rdi], 0x8e ; retf
0x00000000000a20b5 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000000335e8 : ror byte ptr [rdi], 0x94 ; ret
0x000000000010874f : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x000000000006d857 : ror byte ptr [rdi], 0x94 ; ret 0x68e9
0x0000000000142c32 : ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x0000000000112864 : ror byte ptr [rdi], 0x94 ; ret 0xd321
0x00000000000d3c19 : ror byte ptr [rdi], 0x94 ; ret 0xd338
0x0000000000112ce8 : ror byte ptr [rdi], 0x95 ; ret 0xd321
0x0000000000132b21 : ror byte ptr [rdi], 0x9f ; rol dword ptr [rcx], 0xc9 ; jmp 0x8ed48
0x00000000000e809d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000065f5a : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbp ; ret
0x0000000000105b63 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000138ce3 : ror byte ptr [rdi], 0xb7 ; retf
0x00000000000bee39 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000044367 : ror byte ptr [rdi], 1 ; mov dh, 0x11 ; test dl, dl ; jne 0x44350 ; ret
0x00000000000f42af : ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000a49d2 : ror byte ptr [rdi], 1 ; test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000af9b6 : ror byte ptr [rdi], 1 ; test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x00000000000e8f01 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x000000000015b195 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0xd108
0x00000000000eb538 : ror byte ptr [rdi], cl ; mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002d933 : ror byte ptr [rdi], cl ; mov byte ptr [rsi], cl ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000002debb : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000028339 : ror byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x00000000000edef6 : ror byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rcx], bh ; retf
0x00000000000ed27f : ror byte ptr [rdi], cl ; mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007de89 : ror byte ptr [rdi], cl ; mov dl, cl ; sbb al, 0 ; add dh, dh ; ret 0xf40
0x00000000000af8bd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000010874a : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000016457a : ror byte ptr [rdi], cl ; test bh, bh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000164546 : ror byte ptr [rdi], cl ; test byte ptr [rbx], dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a49ea : ror byte ptr [rdi], cl ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000004db75 : ror byte ptr [rdi], cl ; test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000006fb42 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8341
0x00000000001962ef : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd348
0x00000000000a20be : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000001701b7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000162b94 : ror dword ptr [rax + 0x39], 1 ; retf
0x0000000000159096 : ror dword ptr [rax + 0x39], 1 ; retf 0xb775
0x00000000000f0f20 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x0000000000099526 : ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000186f42 : ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000010eee3 : ror dword ptr [rax + 1], 1 ; ret 0x8948
0x00000000000d37c5 : ror dword ptr [rax + 1], cl ; ret 0x1b8
0x00000000000ccd73 : ror dword ptr [rax + 1], cl ; retf 0x8b41
0x0000000000131e29 : ror dword ptr [rax + 9], cl ; retf 0x3948
0x0000000000131cb5 : ror dword ptr [rax + 9], cl ; retf 0x8348
0x00000000001569b4 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x000000000005b88b : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000a70d2 : ror dword ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b4dc8 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b4ee9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b50aa : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000005e1f4 : ror dword ptr [rax - 0x3f], 0xe8 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000004822d : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000589e3 : ror dword ptr [rax - 0x73], 1 ; push rax ; cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x0000000000157085 : ror dword ptr [rax - 0x75], 1 ; add byte ptr [rax + 0xf], cl ; retf 0x3948
0x000000000002fafd : ror dword ptr [rax - 0x75], 1 ; jl 0x2fb2e ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000117d25 : ror dword ptr [rax - 0x75], 5 ; ret
0x00000000000f4bec : ror dword ptr [rax - 0x75], cl ; sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000002a97e : ror dword ptr [rax - 0x77], 1 ; enter 0xf49, 0x4f ; ret 0x8548
0x000000000011099d : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000005a9d0 : ror dword ptr [rax - 0x77], 1 ; retf 0x3948
0x000000000006287e : ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x0000000000051fa4 : ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000311fc : ror dword ptr [rax - 0x77], 1 ; retf 0xc148
0x00000000000d7f74 : ror dword ptr [rax - 0x77], 1 ; retf 0xf48
0x000000000011ca37 : ror dword ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000089e8d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x89e86 ; ret
0x0000000000094855 : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x9484e ; ret
0x0000000000058897 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000ece1b : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000011998e : ror dword ptr [rax - 0x7d], 1 ; ret
0x0000000000043c8a : ror dword ptr [rax - 0x7d], 1 ; ret 0x4001
0x0000000000095612 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000187543 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c20
0x0000000000187563 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c40
0x0000000000187583 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c60
0x000000000002cda5 : ror dword ptr [rax - 0x7d], 1 ; rol dword ptr [rax + rcx*2], 0x39 ; retf
0x0000000000124746 : ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x0000000000164b79 : ror dword ptr [rax], cl ; in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000009256f : ror dword ptr [rbp + 0x29], 1 ; in eax, 0x83 ; retf 0x8310
0x00000000000bf403 : ror dword ptr [rbp - 0xb869], cl ; dec dword ptr [rax + 0x63] ; ret 0xfac1
0x000000000014b68e : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0x5389
0x000000000009a300 : ror dword ptr [rcx + 0x14ff590d], 0 ; call 0x1165b9
0x00000000000f5ede : ror dword ptr [rcx + 0x21], 1 ; retf
0x00000000000abb00 : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x0000000000101030 : ror dword ptr [rcx + 0x63], 1 ; adc al, 0x91 ; add rdx, r9 ; jmp rdx
0x00000000000ff48d : ror dword ptr [rcx + 0x63], cl ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000001987c7 : ror dword ptr [rcx + 0xf], cl ; mov edx, 0x94d3ff3 ; ret
0x0000000000196ca2 : ror dword ptr [rcx + 9], cl ; retf
0x000000000005e78e : ror dword ptr [rcx + rcx*4 - 0x40], 1 ; ret
0x00000000000de208 : ror dword ptr [rcx - 0x35d6bb36], 0x81 ; ret 0x17e
0x000000000010d7b2 : ror dword ptr [rcx - 0x75], 0x3e ; call 0x10a286
0x000000000014dbb2 : ror dword ptr [rcx - 0x77], 1 ; ret 0xc149
0x0000000000196ef2 : ror dword ptr [rcx - 0x77], 1 ; retf
0x000000000014dbff : ror dword ptr [rcx - 0x77], 1 ; retf 0x8349
0x0000000000098468 : ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x000000000014dbc0 : ror dword ptr [rcx - 0x77], 1 ; retf 0xb43
0x00000000000ee6ea : ror dword ptr [rcx - 0x77], 1 ; retf 0xf4c
0x0000000000196f96 : ror dword ptr [rcx - 0x7d], 1 ; stc ; add dword ptr [rcx - 0x77], ecx ; retf
0x00000000000ba50a : ror dword ptr [rcx - 0x7d], cl ; call 0xffffffffcb91b459
0x000000000019407b : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000181464 : ror dword ptr [rdi - 0x73], 0x14 ; or bh, byte ptr [rsi] ; jmp r10
0x0000000000095074 : ror dword ptr [rdi], 0x11 ; cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009b56a : ror dword ptr [rdi], 0x11 ; push 0x6e0f4966 ; ret
0x000000000002a7fd : ror dword ptr [rdi], 0x11 ; ret
0x000000000011ceca : ror dword ptr [rdi], 0x84 ; lar eax, word ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000000494c2 : ror dword ptr [rdi], 0x84 ; retf 2
0x0000000000191608 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191d14 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191ae6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x0000000000192c10 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191a66 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000191da4 : ror dword ptr [rdi], 0x85 ; je 0x191db4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019189b : ror dword ptr [rdi], 0x85 ; jno 0x1918b0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191963 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001915e0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c898e : ror dword ptr [rdi], 0x87 ; retf
0x0000000000080daa : ror dword ptr [rdi], 0x8d ; out dx, eax ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001330c3 : ror dword ptr [rdi], 0x97 ; ret 0x840
0x000000000011c0e2 : ror dword ptr [rdi], 0x9a ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000af745 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000129d2e : ror dword ptr [rdi], 1 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x00000000000e373e : ror dword ptr [rdi], 1 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000c7e12 : ror dword ptr [rdi], 1 ; popfq ; ret 0x840
0x00000000000f7cb0 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret 0xf66
0x00000000000c8ef2 : ror dword ptr [rdi], cl ; adc dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000c3c32 : ror dword ptr [rdi], cl ; sbb dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x000000000009b599 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000019a105 : ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000051324 : ror dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000011c0e1 : ror dword ptr cs:[rdi], 0x9a ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000089e8c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x89e87 ; ret
0x0000000000094854 : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x9484f ; ret
0x0000000000028f36 : sahf ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000010e386 : sahf ; add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000013ea6e : sahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001891be : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005a570 : sahf ; ret 0x3948
0x000000000004866b : sahf ; ret 0x3949
0x00000000000efed6 : sahf ; ret 0xc
0x000000000004dce6 : sahf ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000055d1e : sahf ; sti ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000011087a : sal bh, 0xc2 ; jmp rsi
0x0000000000055d89 : sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018f24e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x0000000000065f5d : sal bh, 0xd8 ; pop rbp ; ret
0x0000000000027b1e : sal bh, 0xd8 ; ret
0x00000000000ad4c7 : sal bh, 1 ; ret 0x8000
0x00000000000ad387 : sal bh, 1 ; ret 0xc000
0x00000000000ad247 : sal bh, 1 ; ret 0xe000
0x00000000000ad107 : sal bh, 1 ; ret 0xf000
0x00000000000acfc7 : sal bh, 1 ; ret 0xf800
0x00000000000ace87 : sal bh, 1 ; ret 0xfc00
0x00000000000acd47 : sal bh, 1 ; ret 0xfe00
0x00000000000acc07 : sal bh, 1 ; ret 0xff00
0x00000000000acac7 : sal bh, 1 ; ret 0xff80
0x00000000000ac987 : sal bh, 1 ; ret 0xffc0
0x00000000000ac847 : sal bh, 1 ; ret 0xffe0
0x00000000000ac707 : sal bh, 1 ; ret 0xfff0
0x00000000000ac5c7 : sal bh, 1 ; ret 0xfff8
0x00000000000ac487 : sal bh, 1 ; ret 0xfffc
0x00000000000ac347 : sal bh, 1 ; ret 0xfffe
0x0000000000061b14 : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000198825 : sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000045801 : sal bl, 0xf ; pop rcx ; add eax, 0x179ea6 ; ret
0x00000000000a34bc : sal byte ptr [rax + 0xf480001], 1 ; ret 0x66c3
0x000000000014ad25 : sal byte ptr [rax + rax*2 + 0x41], 0x83 ; call qword ptr [rbx]
0x000000000005e4a6 : sal byte ptr [rax + rcx + 0x49], 0x83 ; ret
0x00000000000a25c5 : sal byte ptr [rax + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000011fde4 : sal byte ptr [rax + rdi + 0x48], 0x39 ; ret
0x000000000011774d : sal byte ptr [rbp + 0x10], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001176ad : sal byte ptr [rbp + 0x10], 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011130d : sal byte ptr [rbp + 0x10], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000111aad : sal byte ptr [rbp + 0x10], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e5c8d : sal byte ptr [rbp + 0x10], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e5d0d : sal byte ptr [rbp + 0x10], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011bbed : sal byte ptr [rbp + 0x10], 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001233bd : sal byte ptr [rbp + 0x10], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001232ed : sal byte ptr [rbp + 0x10], 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001228ed : sal byte ptr [rbp + 0x10], 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001226c0 : sal byte ptr [rbp + 0x15], 0xb8 ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010f470 : sal byte ptr [rbp + 0x15], 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010f3c0 : sal byte ptr [rbp + 0x15], 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000122820 : sal byte ptr [rbp + 0x15], 0xb8 ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000123d00 : sal byte ptr [rbp + 0x15], 0xb8 ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001238a0 : sal byte ptr [rbp + 0x15], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000123db0 : sal byte ptr [rbp + 0x15], 0xb8 ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000123e60 : sal byte ptr [rbp + 0x15], 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000013f6ec : sal byte ptr [rbp + 0x19], 0x44 ; mov eax, eax ; ret
0x0000000000097f9d : sal byte ptr [rbp + 0x28], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001301f4 : sal byte ptr [rbp + 0x29], 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x000000000018bf12 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000000e742f : sal byte ptr [rbp + 0x2e], 0xb8 ; ja 0xe743d ; add byte ptr [rax], al ; syscall
0x0000000000117cdf : sal byte ptr [rbp + 0x2e], 0xb8 ; jb 0x117ced ; add byte ptr [rax], al ; syscall
0x00000000000e21af : sal byte ptr [rbp + 0x2e], 0xb8 ; je 0xe21bd ; add byte ptr [rax], al ; syscall
0x00000000000e737f : sal byte ptr [rbp + 0x2e], 0xb8 ; jne 0xe738d ; add byte ptr [rax], al ; syscall
0x0000000000117c3f : sal byte ptr [rbp + 0x2e], 0xb8 ; jno 0x117c4d ; add byte ptr [rax], al ; syscall
0x00000000000e70af : sal byte ptr [rbp + 0x2e], 0xb8 ; push 0 ; add byte ptr [rax], al ; syscall
0x000000000011df84 : sal byte ptr [rbp + 0x3b], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000011114c : sal byte ptr [rbp + 0x61], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000186ed3 : sal byte ptr [rbp + 0x6a], cl ; test esi, esi ; je 0x186ec1 ; xor eax, eax ; ret
0x000000000011dfad : sal byte ptr [rbp + 0x7d], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000001264d2 : sal byte ptr [rbp + 0xb], cl ; ret
0x000000000010f839 : sal byte ptr [rbp + 0xc], 0x8b ; push rbx ; add al, 0xeb ; ret
0x0000000000130058 : sal byte ptr [rbp + 0xd], 0x48 ; cmp dword ptr [rdi], 0 ; je 0x130079 ; ret
0x000000000006588b : sal byte ptr [rbp + 2], 0x5b ; ret
0x00000000000bf0f6 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x0000000000093a18 : sal byte ptr [rbp + 5], cl ; ret
0x0000000000066177 : sal byte ptr [rbp + 6], cl ; sub dword ptr [rdi], 1 ; ret
0x0000000000036dce : sal byte ptr [rbp + 7], 0x44 ; mov eax, eax ; ret
0x00000000001444bd : sal byte ptr [rbp + 8], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000fd8c2 : sal byte ptr [rbp + rax + 0x48], 0x39 ; ret 0xc675
0x000000000002726d : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014ba77 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000bfde7 : sal byte ptr [rbp - 0x12], cl ; xor eax, eax ; ret
0x00000000000be8a0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000089e90 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000ab952 : sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x0000000000142386 : sal byte ptr [rbp - 0x1c], 0x44 ; mov eax, edx ; ret
0x000000000018fafa : sal byte ptr [rbp - 0x1d], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000ad7eb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000001873cc : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000018ffcf : sal byte ptr [rbp - 0x22], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000001878a1 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000bfe81 : sal byte ptr [rbp - 0x24], cl ; ret
0x000000000004436c : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000118ff9 : sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001190da : sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013ed0b : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000187c9d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000187c95 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000007e000 : sal byte ptr [rbp - 0x4b], 0x4c ; mov edi, ebp ; call 0x8a248
0x000000000018b79d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000119241 : sal byte ptr [rbp - 0x52], cl ; xor eax, eax ; pop rbp ; ret
0x000000000013212d : sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x00000000000ed6f2 : sal byte ptr [rbp - 0x5e], 0xe9 ; retf
0x000000000018b795 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000a1ada : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000c116c : sal byte ptr [rbp - 0xf], cl ; ret
0x0000000000096af0 : sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000a02aa : sal byte ptr [rbx + 0x4c], 0x89 ; out 0x48, al ; mov edi, ebp ; call rax
0x000000000015a838 : sal byte ptr [rbx + 0xd], 1 ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000000000e9e47 : sal byte ptr [rbx + rbp + 0x49], cl ; add ebp, 1 ; mov rdx, rcx ; jmp 0xe9e31
0x00000000000e0556 : sal byte ptr [rbx + rbp + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001083ce : sal byte ptr [rbx + rbp - 0x75], 0x70 ; adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000008c742 : sal byte ptr [rbx + rbp*2 + 0x49], 0x2b ; and byte ptr [r8 + 1], r9b ; ret
0x00000000000c3332 : sal byte ptr [rbx + rbp*4 + 0x48], 0x89 ; ret 0x894c
0x000000000014b622 : sal byte ptr [rbx + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000a5442 : sal byte ptr [rcx + 0x48], 3 ; add byte ptr [r8 - 0x77], r9b ; ret 0x14eb
0x00000000001564c1 : sal byte ptr [rcx + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000b4e3c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000972fe : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000011638d : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x0000000000110568 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xef ; call rax
0x000000000014b486 : sal byte ptr [rdi + rax + 0x31], 0xc0 ; ret
0x00000000000f0ddf : sal byte ptr [rdi + rdi - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fe816 : sal byte ptr [rdx + 0x15], 0x39 ; ret 0x1172
0x000000000011fe28 : sal byte ptr [rdx + 0x48], 0x39 ; ret
0x00000000000b500b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000164ee8 : sal byte ptr [rdx + rbp + 0x49], cl ; add ebp, 1 ; mov rdx, rcx ; jmp 0x164ed1
0x00000000000f3aba : sal byte ptr [rdx + rdi + 0x31], 0xf6 ; add rdx, rax ; jmp 0xf3ad8
0x00000000000b5383 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00000000000b9b93 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000af8bb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000153033 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1530a9 ; call rax
0x0000000000153ad3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x153b39 ; call rax
0x00000000000a5b0b : sal byte ptr [rsi + rcx + 0x48], 0x89 ; ret 0x894c
0x00000000000b4ddf : sal byte ptr [rsi + rdi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000110607 : sal byte ptr [rsi + rsi + 0x31], 0xd2 ; call rax
0x00000000000e07d1 : sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000000ab8c9 : sal byte ptr [rsp + rbp + 0x4d], 0x89 ; ret
0x00000000000cfde1 : sal byte ptr [rsp + rbp*4 + 0x48], 0x89 ; ret 0x894c
0x000000000014e231 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014481b : sal byte ptr [rsp + rcx - 0x75], 0x48 ; cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000011ac71 : sal byte ptr [rsp + rcx - 9], cl ; ret 0xfc07
0x000000000012ef3d : sal dh, 0x43 ; sbb al, 0x20 ; je 0x12ef58 ; pop rbx ; ret
0x000000000004549c : sal dl, 0xf ; pop rcx ; add eax, 0x179b6b ; ret
0x00000000000ab53d : sal dword ptr [rbp - 0x11], 0xe9 ; retf 0xffd5
0x00000000000ab7da : sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x000000000019c926 : sal dword ptr [rdi + rcx*4 + 0x48], 0x89 ; ret 0xc148
0x00000000000ab9f1 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0xab9ef ; ret
0x00000000000bed97 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000e8136 : sal ebx, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f83bc : sal edx, 1 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000f83bb : sal r10d, 1 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000005ad15 : sar bh, 0xff ; ret
0x000000000007bb6c : sar bh, cl ; loopne 0x7bb07 ; mov r10, rdx ; jmp rax
0x000000000011060b : sar bh, cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3d48
0x00000000000e1072 : sar byte ptr [r8 + 0xd9], 1 ; syscall
0x0000000000124366 : sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000e5a42 : sar byte ptr [rax + 0x3d], cl ; syscall
0x00000000000e1073 : sar byte ptr [rax + 0xd9], 1 ; syscall
0x000000000013fd0f : sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000122317 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x00000000000470ec : sar byte ptr [rdx + 1], cl ; cmove eax, edx ; ret
0x000000000003346e : sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000011d901 : sar byte ptr [rsi + 1], cl ; call r12
0x00000000001698aa : sar byte ptr [rsi], 0x41 ; jmp rcx
0x0000000000034b0f : sar byte ptr [rsi], 1 ; jmp r8
0x0000000000026ecf : sar byte ptr [rsi], 1 ; jmp rax
0x00000000001974f2 : sar byte ptr [rsi], cl ; jmp rdx
0x00000000000ddde3 : sar dh, 0xff ; dec dword ptr [rdi] ; ret 0x8d89
0x000000000006e23b : sar dl, 0xff ; dec dword ptr [rax - 0x75] ; adc ecx, ebp ; pop rsp ; retf 0xffff
0x0000000000070e94 : sar dl, 0xff ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x000000000006c79a : sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000192f47 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x192f52 ; ret
0x00000000000c7e7b : sar dword ptr [rcx], cl ; ret 0x1d74
0x000000000005fff5 : sar dword ptr [rcx], cl ; ret 0x4d74
0x000000000018edad : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x00000000001017ef : sar dword ptr [rsi], 1 ; jmp rcx
0x0000000000044f1c : sar eax, 0x10 ; ret
0x000000000004560f : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000166268 : sar eax, 0x1f ; ret
0x0000000000044ecc : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000045959 : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000004524e : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000008daa6 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008b65d : sar eax, 2 ; ret
0x0000000000132d51 : sar eax, 6 ; ret
0x00000000001968eb : sar ebp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000008ae6c : sar ecx, 2 ; lea eax, [rcx - 1] ; ret
0x0000000000042e5a : sar edi, 1 ; inc dword ptr [rbx - 0x7af0fe08] ; ret 0xfff2
0x000000000010cf39 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000012d92d : sar edi, cl ; dec dword ptr [rcx] ; ret
0x000000000008af16 : sar edx, 2 ; sub eax, edx ; ret
0x00000000000afa68 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000193ba7 : sar esi, 1 ; jg 0x193bd7 ; vzeroupper ; ret
0x0000000000193d32 : sar esi, 1 ; jg 0x193d62 ; vzeroupper ; ret
0x0000000000045958 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000004524d : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000008b65c : sar rax, 2 ; ret
0x0000000000132d50 : sar rax, 6 ; ret
0x000000000008ae6b : sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000008af15 : sar rdx, 2 ; sub eax, edx ; ret
0x00000000000afa67 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001103bc : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018506a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000184fc3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000007de8d : sbb al, 0 ; add dh, dh ; ret 0xf40
0x00000000000256fc : sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000026a94 : sbb al, 0 ; ret
0x000000000002588b : sbb al, 0 ; syscall
0x000000000002a5dc : sbb al, 0 ; test eax, eax ; je 0x2a5ee ; ret
0x00000000000ec592 : sbb al, 0x10 ; add cl, ch ; retf 0xfff7
0x00000000000c1140 : sbb al, 0x17 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000012ef40 : sbb al, 0x20 ; je 0x12ef55 ; pop rbx ; ret
0x000000000012ef3f : sbb al, 0x20 ; je 0x12ef56 ; pop rbx ; ret
0x00000000000cd1ab : sbb al, 0x39 ; ret
0x0000000000154924 : sbb al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000efa05 : sbb al, 0x89 ; ret 0x8348
0x000000000006c5c3 : sbb al, 0x89 ; retf 0xc183
0x00000000000eb553 : sbb al, 0x8b ; add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000056cad : sbb al, 0x8d ; inc byte ptr [r11 - 0x6bf00220] ; ret 0xf983
0x0000000000029620 : sbb al, 0x97 ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000009c1eb : sbb al, 0xb4 ; adc dword ptr [rax], eax ; call 0x98466
0x00000000000ef3a3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001530c5 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x0000000000043d07 : sbb al, 3 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001321e3 : sbb al, 6 ; add byte ptr [rax + 0x21], cl ; ret 0x8d48
0x000000000015483a : sbb al, 6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015e6e3 : sbb al, 9 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000ddd42 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000c27a9 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000004a881 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011bbf1 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018524a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003c5d2 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0x1a
0x0000000000095e6b : sbb al, byte ptr [rax] ; add cl, ch ; retf
0x000000000004b289 : sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000047407 : sbb al, byte ptr [rax] ; mov eax, edx ; ret
0x00000000000473a8 : sbb al, byte ptr [rax] ; ret
0x000000000004970b : sbb al, byte ptr [rax] ; syscall
0x00000000001587f9 : sbb al, byte ptr [rcx + 0xf] ; ret 0x93eb
0x00000000000473a7 : sbb al, byte ptr cs:[rax] ; ret
0x000000000004aaf3 : sbb al, byte ptr es:[rax] ; syscall
0x0000000000185249 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003dd1b : sbb al, ch ; jmp rbx
0x00000000000d912c : sbb al, ch ; pop rsi ; ret
0x0000000000108ff6 : sbb al, ch ; push rsp ; ret
0x000000000003feec : sbb al, ch ; ret 0xffff
0x000000000008cbf8 : sbb al, ch ; ret 9
0x0000000000130230 : sbb al, ch ; retf 0xf676
0x000000000014fb0a : sbb bh, bh ; or dword ptr [rax], eax ; syscall
0x00000000000ef393 : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000133aab : sbb bh, ch ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000006875a : sbb bl, byte ptr [rip - 0x7cb80000] ; ret 0x3c01
0x00000000001321e2 : sbb bl, byte ptr [rsi + rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8d48
0x0000000000090496 : sbb bl, ch ; retf 0x1f0f
0x000000000012dde4 : sbb byte ptr [eax - 0x77], cl ; ret 0x2b49
0x00000000000a1ab2 : sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000012c52e : sbb byte ptr [r11 + r9*4 + 0x46], r8b ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000015a74d : sbb byte ptr [r11 - 0x3f7cb7ea], r9b ; add al, 0xf ; retf 0x5089
0x000000000015a78d : sbb byte ptr [r11 - 0x3f7cb7f0], r9b ; add al, 0xf ; retf 0x1689
0x00000000000916b4 : sbb byte ptr [r15], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000015a7d0 : sbb byte ptr [r15], r9b ; retf 0x8348
0x00000000000445b3 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000014e964 : sbb byte ptr [r15], r9b ; xchg eax, edi ; ret 0xd284
0x000000000005ea41 : sbb byte ptr [r8 + 0x2b], cl ; sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x000000000009838b : sbb byte ptr [r8 + 0x39], cl ; ret
0x0000000000162dc3 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000be384 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3a6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3e4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000008f19f : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015a75c : sbb byte ptr [r9 + r9*4 - 0x40], r8b ; ret
0x000000000019a7b7 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000f8422 : sbb byte ptr [r9], al ; retf
0x00000000001111db : sbb byte ptr [rax + 0x101], bh ; syscall
0x00000000001164a8 : sbb byte ptr [rax + 0x115], bh ; syscall
0x0000000000123d48 : sbb byte ptr [rax + 0x120], bh ; syscall
0x000000000005ea42 : sbb byte ptr [rax + 0x2b], cl ; sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x000000000009838c : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000015d355 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000058dcc : sbb byte ptr [rax + 0x39], cl ; retf
0x000000000012c533 : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000002c193 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000012c532 : sbb byte ptr [rax + 0x39], r9b ; retf 0x840f
0x0000000000124048 : sbb byte ptr [rax + 0x45], bh ; syscall
0x0000000000162dc4 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000dbe3d : sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000013f87c : sbb byte ptr [rax + 0x63], cl ; retf 0x148
0x0000000000057b0f : sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x0000000000066aad : sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000007159e : sbb byte ptr [rax + 1], cl ; retf
0x000000000014b86b : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000010fac6 : sbb byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret 0x8207
0x000000000010d80a : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x3074
0x000000000012ee5c : sbb byte ptr [rax - 0x75], cl ; je 0x12ee8d ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000014de17 : sbb byte ptr [rax - 0x76b704ad], cl ; ret 0xc148
0x0000000000094a66 : sbb byte ptr [rax - 0x77], cl ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000009ce2f : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e05a7 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000027efa : sbb byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000012dde5 : sbb byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000014bff1 : sbb byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000381e7 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001133bf : sbb byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000008c71e : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000058fce : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000002726a : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000e27b4 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000009996f : sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8949
0x000000000004dce7 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000098025 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000111268 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; jne 0x111288 ; syscall
0x0000000000176cce : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a6f33 : sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000064136 : sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00000000000272d9 : sbb byte ptr [rax], al ; ret
0x000000000008fdbc : sbb byte ptr [rax], al ; setne r8b ; mov eax, r8d ; ret
0x0000000000061bf4 : sbb byte ptr [rax], al ; syscall
0x00000000000be385 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3a7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3e5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000e5a3f : sbb byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x3d], cl ; syscall
0x0000000000110d5a : sbb byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000004a9c4 : sbb byte ptr [rbp + 0x4c], bl ; mov eax, esp ; pop r12 ; ret
0x00000000000ffb75 : sbb byte ptr [rbp + rcx*4 + 0x15], cl ; ret
0x000000000014ab98 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x000000000013f8ea : sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x000000000009d404 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000008f115 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d4ca : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a1ab3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000045dd8 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d3a92 : sbb byte ptr [rbx + 0xf48244c], cl ; xchg eax, ebp ; ret 0xc985
0x000000000012c52f : sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000000de175 : sbb byte ptr [rbx + rcx*4 + 0x78], al ; adc al, 0x89 ; retf 0x2944
0x00000000000966fb : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000015a74e : sbb byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000015a78e : sbb byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000012515a : sbb byte ptr [rbx - 0x6f3cff00], al ; ret
0x0000000000031199 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x3115a
0x0000000000199fd6 : sbb byte ptr [rcx + 0x21], cl ; retf
0x000000000009952e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000003ef54 : sbb byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xffd1
0x000000000009a73a : sbb byte ptr [rcx + rcx*4 - 0x11], cl ; mov qword ptr [rsp + 0x10], r10 ; call qword ptr [rax]
0x00000000000c0fee : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, qword ptr [rsp + 0x10] ; call rbx
0x00000000000cda34 : sbb byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdx, r13 ; call rbx
0x000000000014a368 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x000000000008f1a0 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090647 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a16e : sbb byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000015a6e7 : sbb byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000a012d : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop r12 ; ret
0x000000000015a71f : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000019a253 : sbb byte ptr [rcx - 0x3f], cl ; call 0xffffffffcb3aeb92
0x00000000000e8894 : sbb byte ptr [rcx - 0x73], cl ; cmp al, 4 ; call 0x25337
0x000000000014d893 : sbb byte ptr [rcx - 0x75], cl ; pop rcx ; adc byte ptr [rbp - 0x77], cl ; retf 0x3148
0x000000000019a7b8 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000e1ba6 : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012c6a2 : sbb byte ptr [rcx - 0x77], al ; retf 0x8341
0x00000000000f1587 : sbb byte ptr [rcx - 0x77], cl ; ret 0x14d
0x0000000000046404 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000011633d : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f8423 : sbb byte ptr [rcx], al ; retf
0x0000000000104a85 : sbb byte ptr [rcx], al ; retf 0x3be9
0x00000000000ecdd6 : sbb byte ptr [rcx], bh ; ret
0x0000000000055b7c : sbb byte ptr [rcx], cl ; retf 0xbe0f
0x000000000008d113 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000158a41 : sbb byte ptr [rcx], dh ; shr al, 0x47 ; retf 0xffec
0x00000000001588b1 : sbb byte ptr [rcx], dh ; shr al, 0xd7 ; retf
0x000000000015696e : sbb byte ptr [rdi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017660d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000916b5 : sbb byte ptr [rdi], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000065f1c : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014b6d1 : sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000015a7d1 : sbb byte ptr [rdi], cl ; retf 0x8348
0x00000000000445b4 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000014e965 : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000014edc5 : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000000ef8ab : sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012514a : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000125149 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000000d7e21 : sbb byte ptr [rsi - 0x7f], ah ; out 0, al ; and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000a6f32 : sbb byte ptr ds:[rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000049a4a : sbb ch, byte ptr [rdi] ; sbb al, byte ptr [rax] ; syscall
0x00000000000ecdd3 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x000000000002b3c1 : sbb cl, byte ptr [rax + 0x39] ; retf 0x850f
0x0000000000114072 : sbb cl, byte ptr [rax - 0x75] ; pop rbx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000034652 : sbb cl, byte ptr [rax - 0x77] ; ret 0x2548
0x0000000000027c23 : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000013f5f3 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4502
0x00000000000babaf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000181f3d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001840ad : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181b2d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000181639 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181e49 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018955a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000188d7a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018916a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018898a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184c0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001843ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001818bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000183bcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000181bfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000181f19 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188b29 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181fe9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018472d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183f0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001836ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001848cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000181d9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018158d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000018198d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000018901a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018883a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018994a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181e6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000018165d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000183a2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001816ff : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181a5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000183b63 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184863 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184383 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188f1b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018984b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181ccd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184ba3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183ea3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001839c3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001846c3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018906b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018888b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181723 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000152c32 : sbb cl, byte ptr [rsi - 0x12] ; dec dword ptr [rax - 0x77] ; ret
0x000000000008befb : sbb cl, ch ; retf
0x000000000012bc9a : sbb dh, dh ; ret 0x7508
0x00000000001326d4 : sbb dh, dh ; ret 0x7520
0x0000000000185368 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000a98f3 : sbb dword ptr [r8], r8d ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000000c3c34 : sbb dword ptr [rax + 1], 0 ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000ef2e7 : sbb dword ptr [rax + 1], edi ; ret
0x000000000015f4bc : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000005c6ce : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001852f1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185369 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122ec8 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000b2c7e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a98f4 : sbb dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000055d7b : sbb dword ptr [rax], eax ; call 0x102814
0x0000000000055c4d : sbb dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000272e9 : sbb dword ptr [rax], eax ; ret
0x000000000005534b : sbb dword ptr [rax], eax ; syscall
0x00000000000abd83 : sbb dword ptr [rax], edi ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000009fa63 : sbb dword ptr [rcx + 0x4e80014], esi ; ret 0xffff
0x000000000013f817 : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000013f6ee : sbb dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x00000000000e229a : sbb dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; ret
0x0000000000141de6 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x0000000000104995 : sbb dword ptr [rcx - 0x7d], ecx ; ret
0x000000000012247c : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 4] ; syscall
0x000000000012242a : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000cd0b6 : sbb dword ptr [rcx], edi ; ret
0x00000000000d31fa : sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x00000000000bc30e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000000a9512 : sbb dword ptr [rip + 0x3948ea74], eax ; retf 0x1474
0x00000000000a22f3 : sbb dword ptr [rip + 0xf48000f], ebx ; ret 0xfc3
0x000000000017fbac : sbb eax, -1 ; ret
0x0000000000113019 : sbb eax, 0 ; ret
0x0000000000140d7e : sbb eax, 0x3948c289 ; retf 0x1677
0x0000000000115fab : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x000000000011a86f : sbb eax, 0x4c000d3c ; mov eax, eax ; ret
0x00000000000bac39 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000bc3cd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000011db72 : sbb eax, 0x7d8b49 ; call rbx
0x000000000006875b : sbb eax, 0x83480000 ; ret 0x3c01
0x000000000007b8db : sbb eax, 0x8900000b ; ret 0xc083
0x000000000007ab12 : sbb eax, 0x89000016 ; ret 0xc083
0x0000000000105827 : sbb eax, 0x89000e8a ; or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00000000000c7979 : sbb eax, 0x89480000 ; retf 0xf66
0x00000000001637cc : sbb eax, 0x8948ffec ; ret
0x0000000000103748 : sbb eax, 0x8948fff2 ; ret 0x8b64
0x000000000005746a : sbb eax, 0x8948ffff ; ret
0x000000000017684e : sbb eax, 0x894d0000 ; retf
0x00000000001178b2 : sbb eax, 0xb8c03145 ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000124c6a : sbb eax, 0xc56f1 ; pop rbx ; ret
0x0000000000124c50 : sbb eax, 0xc570b ; pop rbx ; ret
0x00000000000a22f4 : sbb eax, 0xf48000f ; ret 0xfc3
0x000000000019c0a0 : sbb eax, 5 ; add byte ptr [rax], al ; ret
0x00000000000dded5 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000185111 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185189 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011bcb5 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b2a2e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004141e : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000358b1 : sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b6f24], dl ; ret
0x0000000000036d45 : sbb eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000032af9 : sbb eax, dword ptr [rax] ; ret
0x00000000000388e9 : sbb eax, dword ptr [rax] ; syscall
0x0000000000115fbc : sbb eax, dword ptr [rbx + 0x674a1f8] ; neg eax ; ret
0x0000000000195fc4 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x00000000000a7df3 : sbb eax, dword ptr [rcx - 0x78] ; sbb eax, dword ptr [rcx - 0xa] ; ret 0xf02
0x00000000000a7df6 : sbb eax, dword ptr [rcx - 0xa] ; ret 0xf02
0x00000000000bfa04 : sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000123075 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000038a2d : sbb eax, dword ptr ds:[rax] ; syscall
0x0000000000058cca : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001882d7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000013ec4c : sbb eax, eax ; ret
0x0000000000195a85 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000113abf : sbb ecx, esi ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xe72
0x00000000000f5c61 : sbb edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e1c21 : sbb edx, dword ptr [rcx] ; or byte ptr [rax], al ; mov rax, r15 ; call rax
0x00000000000dab8f : sbb esi, dword ptr [rax + 0xd] ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x000000000012bd44 : sbb esp, dword ptr [rcx + rcx*2 - 0x75] ; xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x0000000000055ca3 : sbb esp, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000090495 : sbb r11b, r13b ; retf 0x1f0f
0x000000000004b288 : sbb r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000008befa : sbb r9b, bpl ; retf
0x000000000017fbab : sbb rax, -1 ; ret
0x000000000019c09f : sbb rax, 5 ; add byte ptr [rax], al ; ret
0x000000000018a4bf : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a1bf : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018b0bf : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019c9ab : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000183092 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004ccee : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; div bh ; ret 0
0x000000000018b3bf : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001895ae : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000005e481 : scasb al, byte ptr [rdi] ; mov rax, r10 ; pop rbx ; ret
0x000000000018aabf : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000154cd3 : scasb al, byte ptr [rdi] ; or dword ptr [rax], eax ; syscall
0x000000000018a7bf : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x0000000000133e47 : scasb al, byte ptr [rdi] ; or eax, dword ptr [rax] ; syscall
0x00000000000e5f97 : scasb al, byte ptr [rdi] ; out dx, al ; jmp rdi
0x000000000009d2c6 : scasb al, byte ptr [rdi] ; retf 0x14
0x00000000000d6457 : scasb al, byte ptr [rdi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000018fc7a : scasb al, byte ptr [rdi] ; vzeroupper ; ret
0x0000000000119243 : scasb al, byte ptr [rdi] ; xor eax, eax ; pop rbp ; ret
0x00000000001896ad : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011bffd : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008c610 : scasd eax, dword ptr [rdi] ; ret
0x000000000008c450 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000bf605 : scasd eax, dword ptr [rdi] ; ret 0x518d
0x00000000000479da : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000004487e : scasd eax, dword ptr [rdi] ; ret 0x8d49
0x000000000012ed71 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000000de57b : scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000bf619 : scasd eax, dword ptr [rdi] ; ret 0xcfe9
0x00000000000445b6 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000bf60b : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000d37c4 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 1], cl ; ret 0x1b8
0x00000000001251d9 : seta al ; movzx eax, al ; neg eax ; ret
0x0000000000113016 : seta al ; sbb eax, 0 ; ret
0x0000000000097304 : setae al ; ret
0x00000000000d736b : setb al ; add eax, 0x16d ; ret
0x0000000000125dda : setbe al ; mov eax, r8d ; ret
0x00000000000e0144 : setbe al ; movzx eax, al ; ret
0x0000000000125dd9 : setbe r8b ; mov eax, r8d ; ret
0x0000000000148b1c : sete al ; add rsp, 8 ; ret
0x0000000000158ff8 : sete al ; movzx eax, al ; ret
0x00000000000372f9 : sete al ; ret
0x000000000004603a : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000163fb5 : sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000132b22 : setg cl ; add ecx, ecx ; jmp 0x8ed47
0x000000000010f7bf : setl al ; ret
0x0000000000105d58 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x000000000008fdbf : setne al ; mov eax, r8d ; ret
0x0000000000065f58 : setne al ; movzx eax, al ; neg eax ; pop rbp ; ret
0x0000000000105b61 : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000046f3c : setne al ; movzx eax, al ; ret
0x00000000000e8030 : setne al ; ret
0x00000000000abac6 : setne bh ; test r9b, dil ; jne 0xabab0 ; ret
0x00000000000abac5 : setne dil ; test r9b, dil ; jne 0xabab1 ; ret
0x00000000000c23a7 : setne dl ; jmp 0xc23bb
0x00000000000c4d57 : setne dl ; jmp 0xc4d6b
0x00000000000c7577 : setne dl ; jmp 0xc758b
0x00000000000cee17 : setne dl ; jmp 0xcee2b
0x000000000008fdbe : setne r8b ; mov eax, r8d ; ret
0x0000000000188054 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x0000000000187c3b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000019ae7a : shl byte ptr [rax + rbp*8 - 0x171f1401], cl ; retf
0x0000000000187bfb : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000131ae9 : shl byte ptr [rbx + rax*4 + 0x39], 0xb ; jne 0x131ac0 ; jmp 0x131ab0
0x0000000000116ba6 : shl byte ptr [rcx + rax*2 - 0x75], 0x1a ; syscall
0x00000000001763cd : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000be7bf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000004acb9 : shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000004551c : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000008b49f : shl byte ptr [rsi + 0xf], 0x6f ; ret 0x8948
0x00000000000ac12f : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000455f7 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0xff25
0x000000000015b1e4 : shl byte ptr [rsi + 0xf], 0xc5 ; retf
0x0000000000194077 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b4825 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000000fc566 : shl byte ptr [rsi + 0xf], 0xef ; enter 0xf66, -0x11 ; ret 0xf41
0x0000000000191f9b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000102e36 : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x000000000005ae15 : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x110f
0x00000000000551ea : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x7c89
0x0000000000191fb2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000045a1c : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x00000000000b4bd6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b4be7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000af708 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000191e91 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f0918 : shl byte ptr [rsi + 0xf], cl ; outsb dx, byte ptr [rsi] ; ret
0x0000000000198827 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000187768 : shl dword ptr [rax + 0x49], 0x39 ; retf
0x00000000001557ec : shl dword ptr [rcx], 1 ; retf 0xe281
0x00000000001578ab : shl dword ptr [rip - 0x7c9bfff7], 0x38 ; add al, 0x75 ; ret
0x00000000000be7a2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000000ac133 : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000d165b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x000000000004723f : shl dword ptr [rsi + 0xf], 0xc6 ; rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000d256d : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x00000000000b4bd2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000be61f : shl dword ptr [rsi + 0xf], 0xda ; ret
0x0000000000191f16 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000191fcd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191fb6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191f9f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000190a5b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000039c39 : shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000191f31 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000af12c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000af928 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000191df1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f9068 : shl dword ptr [rsi - 0x7f], 1 ; loope 0xf9073 ; add esi, esi ; ret 0xf04
0x00000000000fa6df : shl dword ptr [rsi - 0x7f], 1 ; loope 0xfa6ea ; add esi, esi ; ret 0xf04
0x000000000004576c : shl eax, 0x17 ; or esi, eax ; movd xmm0, esi ; ret
0x0000000000055b98 : shl eax, 0x1e ; or eax, edx ; ret
0x00000000001220ff : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x00000000001587f4 : shl eax, 4 ; cmp edi, 0x1a ; cmovae eax, r10d ; jmp 0x15879c
0x0000000000046e9f : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000162ce5 : shl ecx, 3 ; sub rdx, rcx ; jmp 0x162cfe
0x00000000000594ac : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000005942b : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000593fa : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004a62c : shl edi, 0x20 ; or rax, rdi ; ret
0x0000000000108878 : shl edi, 3 ; call 0x25335
0x00000000000594ab : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000005942a : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000593f9 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000046e9e : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000162ce4 : shl rcx, 3 ; sub rdx, rcx ; jmp 0x162cff
0x000000000004a62b : shl rdi, 0x20 ; or rax, rdi ; ret
0x0000000000108877 : shl rdi, 3 ; call 0x25336
0x00000000001582ff : shr ah, 1 ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; xchg eax, esp ; ret 0x854d
0x00000000000e898a : shr al, 0 ; retf
0x00000000001586a1 : shr al, 0x29 ; ret
0x0000000000158a43 : shr al, 0x47 ; retf 0xffec
0x00000000000853bd : shr al, 0x4d ; ret
0x0000000000114bee : shr al, 0x8c ; ret
0x0000000000158614 : shr al, 0xb6 ; ret
0x0000000000154b4f : shr al, 0xbb ; retf
0x00000000001588b3 : shr al, 0xd7 ; retf
0x000000000012dd96 : shr al, 0xe4 ; retf 0xffff
0x000000000015e3a2 : shr al, 0xe8 ; jo 0x15e39b ; dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000013003a : shr ax, 0xe ; and eax, 1 ; ret
0x000000000002f710 : shr bl, 1 ; ret 0x1f0f
0x000000000019a19a : shr bl, cl ; retf
0x000000000004a8fb : shr byte ptr [rax], 0x1a ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000ad7ef : shr byte ptr [rcx], 0xc8 ; ret
0x000000000012c5ea : shr byte ptr [rcx], 1 ; retf 0xeec1
0x000000000012c5ae : shr byte ptr [rcx], 1 ; retf 0xefc1
0x00000000000327a8 : shr byte ptr [rcx], cl ; ret
0x00000000000afa6c : shr byte ptr [rcx], cl ; rol bl, 1 ; xor eax, eax ; ret
0x00000000000c06de : shr byte ptr [rdx + 1], cl ; lea r9, [rsp + 0x20] ; call rbx
0x000000000006b680 : shr cl, 0xb5 ; retf
0x00000000000d5463 : shr dword ptr [rbx + 7], 0 ; add byte ptr [rdi + rcx - 0x49], al ; retf
0x00000000000d99d7 : shr dword ptr [rcx], cl ; ret 0x8945
0x000000000014db09 : shr dword ptr [rsi + 6], cl ; add byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000132f5a : shr eax, 0x18 ; ret
0x0000000000044f2f : shr eax, 0x1f ; ret
0x0000000000192e5c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x192e6f ; xor eax, eax ; ret
0x000000000004b4e5 : shr eax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x000000000019612a : shr eax, 0x38 ; ret
0x000000000004527c : shr eax, 0x3f ; ret
0x0000000000106386 : shr eax, 0x44 ; retf 2
0x00000000001220ac : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000bf2bb : shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x000000000013003b : shr eax, 0xe ; and eax, 1 ; ret
0x00000000001588ba : shr eax, 1 ; mov edi, eax ; mov rbx, rax ; call 0x25339
0x00000000000d290b : shr eax, 2 ; ret
0x0000000000190563 : shr eax, 2 ; vzeroupper ; ret
0x000000000013fae2 : shr eax, 4 ; and eax, 0x7f ; ret
0x0000000000091056 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000091066 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000bf306 : shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x0000000000163f13 : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000125b6f : shr eax, cl ; and eax, 1 ; ret
0x0000000000122ac1 : shr eax, cl ; and eax, 3 ; ret
0x0000000000125dbd : shr eax, cl ; and r8d, 1 ; mov eax, r8d ; ret
0x000000000005e23a : shr eax, cl ; push rax ; jb 0x5e243 ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000a710d : shr ebx, 1 ; retf 0x3948
0x000000000012c62d : shr ecx, 0x1f ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000012c664 : shr ecx, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x0000000000162745 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009bba1 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dfb : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000595bc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000059545 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000059514 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001493a2 : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000008ddd0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000008ded0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00000000000595bb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000059544 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000059513 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000196129 : shr rax, 0x38 ; ret
0x000000000004527b : shr rax, 0x3f ; ret
0x00000000001220ab : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000d290a : shr rax, 2 ; ret
0x0000000000190562 : shr rax, 2 ; vzeroupper ; ret
0x000000000013fae1 : shr rax, 4 ; and eax, 0x7f ; ret
0x00000000001493a1 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000047240 : shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000047241 : shufps xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000018c635 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000125230 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x00000000001047f1 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x4be9
0x000000000004d22f : stc ; adc byte ptr [rbx - 0x6af069c4], cl ; ret 0x8941
0x000000000002e176 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000015ec00 : stc ; add al, 0xf ; xchg byte ptr [rax - 0x76ffffff], ah ; retf 0x894c
0x0000000000183047 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a4e74 : stc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d42f1 : stc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000107473 : stc ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x00000000000819eb : stc ; add cl, byte ptr [rcx + 0x29] ; retf
0x0000000000196f99 : stc ; add dword ptr [rcx - 0x77], ecx ; retf
0x0000000000110c54 : stc ; add dword ptr [rdi + 0x30], esi ; mov eax, 0x106 ; syscall
0x000000000013f568 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x000000000004d470 : stc ; dec dword ptr [rax - 0x77] ; fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000091497 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000859fc : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000c2063 : stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001082c4 : stc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000003578a : stc ; dec dword ptr [rdi] ; retf 0xd88
0x0000000000188662 : stc ; je 0x18862f ; lea r10, [r10 + r9] ; jmp r10
0x0000000000189d02 : stc ; je 0x189ccf ; lea r10, [r10 + r9] ; jmp r10
0x0000000000083f54 : stc ; jmp rcx
0x00000000000abacb : stc ; jne 0xabaab ; ret
0x000000000018e11f : stc ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000016bb58 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e262b : stc ; mov ecx, 0x840f0010 ; retf 0xfffe
0x000000000009b8cc : stc ; mov esp, 0x8be80011 ; retf
0x00000000000db45d : stc ; movsxd rdx, dword ptr [r9 + rdi*4] ; add rdx, r9 ; jmp rdx
0x00000000000a7550 : stc ; or al, 0x74 ; and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x0000000000168907 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000059605 : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000062803 : stc ; ret
0x0000000000158753 : stc ; retf
0x0000000000162ce3 : stc ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d00
0x0000000000125b6e : stc ; shr eax, cl ; and eax, 1 ; ret
0x00000000000859fb : stc ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000065b1e : stc ; sti ; dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x0000000000193448 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018c66f : stc ; vzeroupper ; ret
0x0000000000188357 : stc ; xlatb ; ret 0xff2d
0x00000000001300a2 : std ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010fe3c : std ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000001999ef : std ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000048bf6 : std ; add r15, rbx ; call rax
0x00000000000fca13 : std ; add rdx, rsi ; jmp rdx
0x0000000000055ca5 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000014741a : std ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000004c24a : std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000004a4e1 : std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000450e1 : std ; fstp st(1) ; ret
0x0000000000187e90 : std ; je 0x187ef9 ; and ch, al ; std ; xlatb ; ret
0x0000000000187f7e : std ; je 0x187fe7 ; and ch, al ; std ; xlatb ; ret
0x00000000000332fc : std ; je 0x3331c ; pop rbx ; ret
0x000000000018e0fb : std ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000018c657 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x0000000000111d87 : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000016b37b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a1965 : std ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000889dd : std ; push rbx ; mov rbx, rsi ; call 0x25427
0x00000000000bed0c : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000073714 : std ; retf
0x000000000008fb07 : std ; retf 0x15
0x000000000012522f : std ; sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000034fdb : std ; test rax, rax ; je 0x34fe9 ; call rax
0x000000000018c65b : std ; vzeroupper ; ret
0x0000000000187ca1 : std ; xlatb ; ret
0x0000000000187c99 : std ; xlatb ; ret 0xc085
0x0000000000188197 : std ; xlatb ; ret 0xe883
0x0000000000187153 : std ; xlatb ; retf
0x000000000018717b : std ; xlatb ; retf 0xc985
0x000000000018b9e8 : std ; xlatb ; retf 0xfdc5
0x000000000018ba44 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000018c9f6 : std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000009ba78 : sti ; adc dword ptr [rax], eax ; call 0x984c5
0x00000000000d446e : sti ; add al, byte ptr [rcx] ; ret
0x000000000002c2f1 : sti ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3775
0x00000000000eb63c : sti ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000010cdb9 : sti ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000010cc21 : sti ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000004794d : sti ; add r15, qword ptr [rsp] ; mov rsi, r15 ; call r14
0x0000000000142944 : sti ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d6458 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000015fa07 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000659ae : sti ; dec dword ptr [rax - 0x77] ; ret 0x12eb
0x0000000000065b1f : sti ; dec dword ptr [rax - 0x77] ; ret 0x9ee9
0x00000000000e5ca7 : sti ; dec dword ptr [rcx + 0x22b8c7] ; add byte ptr [rax], al ; syscall
0x000000000019a195 : sti ; je 0x19a150 ; xor r10d, r10d ; jmp 0x19a16f
0x000000000016b758 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000553fc : sti ; mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000122122 : sti ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x0000000000036935 : sti ; or al, 0x74 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000137bcd : sti ; or dword ptr [rcx + 0xf], eax ; retf
0x0000000000045c1c : sti ; push rax ; ret
0x0000000000120771 : sti ; ret
0x00000000000525e2 : sti ; ret 0xffbf
0x00000000000f8851 : sti ; retf 0xfff2
0x00000000000ab672 : sti ; retf 0xffff
0x00000000000ecdd2 : sti ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x0000000000055d1f : sti ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d3304 : stosb byte ptr [rdi], al ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000001442e2 : stosb byte ptr [rdi], al ; adc esi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x00000000001605c2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; retf
0x00000000000f8072 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000000e82ea : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x00000000001999b7 : stosb byte ptr [rdi], al ; idiv bh ; dec dword ptr [rbp - 0x76b63fb6] ; ret 0xd349
0x00000000000bf108 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000155083 : stosb byte ptr [rdi], al ; or dword ptr [rax], eax ; syscall
0x0000000000127b2a : stosb byte ptr [rdi], al ; outsb dx, byte ptr [rsi] ; or al, 0 ; syscall
0x0000000000143df2 : stosb byte ptr [rdi], al ; push rbx ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000736cd : stosb byte ptr [rdi], al ; retf
0x00000000000d6831 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000154f42 : stosb byte ptr [rdi], al ; stosd dword ptr [rdi], eax ; or dword ptr [rax], eax ; syscall
0x00000000001441a1 : stosd dword ptr [rdi], eax ; adc esi, ebp ; dec dword ptr [rcx + 0x358b48e8] ; ret 0xa5c
0x00000000000af7c1 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000ce90a : stosd dword ptr [rdi], eax ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001090af : stosd dword ptr [rdi], eax ; or al, byte ptr [rax] ; call 0x25355
0x00000000001090ae : stosd dword ptr [rdi], eax ; or al, byte ptr [rax] ; call 0x25356
0x0000000000154f43 : stosd dword ptr [rdi], eax ; or dword ptr [rax], eax ; syscall
0x000000000009bba6 : stosd dword ptr [rdi], eax ; pop rbp ; ret
0x0000000000046e00 : stosd dword ptr [rdi], eax ; ret
0x000000000009bba5 : stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000046dff : stosq qword ptr [rdi], rax ; ret
0x00000000000c9a0f : str word ptr [rax + 0x21] ; ret 0x8948
0x00000000000d4275 : str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000f1a07 : str word ptr [rax + 0x63] ; retf 0x25eb
0x00000000000a3603 : str word ptr [rax + 0xf] ; ret 0x66c3
0x00000000000a22f5 : str word ptr [rax + 0xf] ; ret 0xfc3
0x00000000000c9ae2 : str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000045334 : str word ptr [rax - 0x7b] ; ret 0x574
0x0000000000054eee : str word ptr [rcx] ; ret 0x8f74
0x00000000000f788e : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x8b48
0x000000000012374a : sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a5dba : sub al, 0x24 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000062a15 : sub al, 0x29 ; ret 0x8341
0x00000000001052b4 : sub al, 0x39 ; retf 0x57d
0x00000000000d21f2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000014c8e5 : sub al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000028ff2 : sub al, 0x58 ; ret
0x00000000000290ee : sub al, 0x5c ; ret 0xffff
0x000000000018f0f6 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000d21f5 : sub al, 0x75 ; pop rax ; ret
0x000000000018fae3 : sub al, 0x83 ; ret 0x8104
0x00000000001915e3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011b86e : sub al, 0xd ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000272d7 : sub al, 0xec ; sbb byte ptr [rax], al ; ret
0x0000000000123105 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000130c43 : sub al, 6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a47ad : sub al, bl ; ret
0x000000000004460a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000001233c1 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000016038a : sub al, byte ptr [rax] ; or dword ptr [rax], eax ; syscall
0x0000000000143986 : sub al, byte ptr [rdi] ; add al, ch ; ret 0xef40
0x0000000000130dc3 : sub al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000010e3e5 : sub al, ch ; cmc ; retf
0x00000000000ec527 : sub al, ch ; ret
0x0000000000135cb8 : sub al, ch ; ret 0xef
0x00000000001884f5 : sub al, ch ; std ; xlatb ; ret
0x0000000000110bfd : sub bh, byte ptr [rax + 0x103] ; syscall
0x000000000011661d : sub bh, byte ptr [rax + 0x48] ; syscall
0x000000000013018d : sub bh, byte ptr [rax + 0xe3] ; syscall
0x00000000000d21e6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001053f3 : sub byte ptr [r13 - 0x7ccc8b40], al ; ret 0x4c01
0x0000000000076e02 : sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x000000000015ab05 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015a7cc : sub byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r15], r9b ; retf 0x8348
0x000000000015a6e2 : sub byte ptr [r8 - 0x77], r9b ; ja 0x15a709 ; mov eax, r8d ; ret
0x00000000000c0bc2 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000005ea45 : sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x0000000000097f9f : sub byte ptr [rax + 0x23], bh ; syscall
0x000000000004dca2 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000002b97b : sub byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000ef9e0 : sub byte ptr [rax + 0x63], cl ; ret
0x000000000015ab16 : sub byte ptr [rax + 1], bh ; ret
0x000000000014cd9d : sub byte ptr [rax + 1], cl ; ret 0x5d89
0x0000000000040069 : sub byte ptr [rax + rax], cl ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000015ab06 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000009108e : sub byte ptr [rax - 0x3f76bbfe], cl ; ret
0x000000000009108d : sub byte ptr [rax - 0x3f76bbfe], r9b ; ret
0x00000000000e1dbe : sub byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000011da3f : sub byte ptr [rax - 0x75], cl ; jge 0x11da49 ; call rbx
0x00000000000dbe38 : sub byte ptr [rax - 0x75], cl ; jl 0xdbe69 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000015a7cd : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r15], r9b ; retf 0x8348
0x000000000011bed4 : sub byte ptr [rax - 0x76b3000c], dl ; loopne 0x11bf26 ; pop rsp ; ret
0x000000000015a6e3 : sub byte ptr [rax - 0x77], cl ; ja 0x15a708 ; mov eax, r8d ; ret
0x000000000004a4e5 : sub byte ptr [rax - 0x77], cl ; ret
0x000000000011b008 : sub byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000084e3c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000a5373 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x00000000000da1f1 : sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000089473 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x38], al ; ret
0x00000000000c0bc3 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001510d1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116238 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000027095 : sub byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e0554 : sub byte ptr [rbp + 0x5b2b74c0], al ; pop rbp ; pop r12 ; ret
0x00000000000d21ea : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000d21e9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001053f4 : sub byte ptr [rbp - 0x7ccc8b40], al ; ret 0x4c01
0x00000000001556c7 : sub byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000045ab5 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000066ac1 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005e13f : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000162d08 : sub byte ptr [rbx - 0x1b], dh ; mov eax, 1 ; ret
0x0000000000162d07 : sub byte ptr [rbx - 0x1b], sil ; mov eax, 1 ; ret
0x000000000003b964 : sub byte ptr [rbx - 0x76b70002], bl ; ret 0xf748
0x00000000000d21e7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001150fc : sub byte ptr [rcx + rcx*4 + 0x34], cl ; and al, 0xe9 ; retf 0xfffe
0x000000000005ea46 : sub byte ptr [rcx + rcx*4 + 4], cl ; ret 0x8b4c
0x0000000000150512 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rcx
0x000000000009ee94 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x00000000000876fa : sub byte ptr [rcx + rcx*4 - 0x1e], al ; pop rbx ; pop r12 ; jmp rax
0x0000000000155e8b : sub byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000008dc30 : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; ret
0x000000000006580d : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000008494a : sub byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000002cb3b : sub byte ptr [rcx - 0x77], cl ; ret
0x00000000000bfca4 : sub byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000014bfe5 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, r12 ; call qword ptr [rbx]
0x00000000001178b7 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000076e03 : sub byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000000000d7357 : sub byte ptr [rdi + rcx*4 + 2], bl ; jbe 0xd7366 ; ret
0x00000000000da1ec : sub byte ptr [rdi + rcx*4 - 0x3e], bl ; cmc ; sub byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000014c514 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015a8ec : sub byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; ret
0x00000000000ed32f : sub byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014b881 : sub byte ptr [rdi], cl ; retf 0x5089
0x000000000012229b : sub byte ptr [rdi], cl ; sub dword ptr [rsp + 0x10], eax ; syscall
0x000000000004a8fc : sub byte ptr [rdx], bl ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000454b6 : sub cl, al ; ret
0x000000000010f875 : sub cl, byte ptr [rax + 0x63] ; ret 0xc283
0x0000000000091c4b : sub cl, byte ptr [rax + 1] ; ret 0x4866
0x00000000000f4bef : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d53fa : sub cl, byte ptr [rdx + 0x14c0011] ; ret
0x00000000000c6978 : sub cl, ch ; retf 0xfff0
0x000000000009b3e7 : sub cl, ch ; retf 0xfffd
0x0000000000077651 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d2a97 : sub dh, ch ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000874a8 : sub dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dab7f : sub dword ptr [rax + 0xd], esi ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x00000000001301f6 : sub dword ptr [rax + 0xe6], edi ; syscall
0x00000000000ed32d : sub dword ptr [rax + rbp + 0xf], esi ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000080809 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001239c5 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000d4e73 : sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbp ; ret
0x00000000000d5099 : sub dword ptr [rax], eax ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000019bf26 : sub dword ptr [rbx + 0x515b22d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000e0ffb : sub dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017ba93 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000015a3c6 : sub dword ptr [rcx + rcx*4 - 0x40], eax ; ret
0x00000000000bfa2a : sub dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000bf9c4 : sub dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000169904 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000169900 : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000008dcd0 : sub dword ptr [rdi], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006617a : sub dword ptr [rdi], 1 ; ret
0x00000000001699ae : sub dword ptr [rdi], esp ; jmp r9
0x0000000000192c39 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000049c95 : sub dword ptr [rdx], ebx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009bedc : sub dword ptr [rip + 0x14ec9d], 1 ; pop rbp ; ret
0x000000000009d0ff : sub dword ptr [rip + 0x150a4a], 1 ; pop rbx ; ret
0x0000000000097d17 : sub dword ptr [rip + 0x1557c2], 1 ; pop rbx ; ret
0x0000000000096a6c : sub dword ptr [rip + 0x156a2d], 1 ; ret
0x0000000000094160 : sub dword ptr [rip + 0x159339], 1 ; ret
0x0000000000086fac : sub dword ptr [rip + 0x1664ad], 1 ; ret
0x000000000005545b : sub dword ptr [rip + 0x197d7e], 1 ; pop rbx ; ret
0x000000000004a8f9 : sub dword ptr [rip + 0x1a28c0], 1 ; pop rbp ; ret
0x000000000019bf27 : sub dword ptr [rip + 0x515b2], 1 ; pop rbx ; ret
0x000000000019c238 : sub dword ptr [rip + 0x52fd9], 1 ; pop rbp ; ret
0x000000000019c1b8 : sub dword ptr [rip + 0x5c74800], eax ; ret 0x529
0x0000000000145678 : sub dword ptr [rip + 0xaa099], 1 ; pop rbp ; ret
0x000000000011ae1c : sub dword ptr [rip + 0xd372d], 1 ; ret
0x0000000000182417 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x0000000000191dc6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001822d1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000012229d : sub dword ptr [rsp + 0x10], eax ; syscall
0x000000000010fbc7 : sub dword ptr [rsp + 0xa0], eax ; syscall
0x00000000000463a1 : sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000188287 : sub eax, -1 ; jne 0x188298 ; vzeroupper ; ret
0x000000000018f237 : sub eax, -1 ; jne 0x18f248 ; vzeroupper ; ret
0x000000000009f422 : sub eax, 0x10 ; ret
0x000000000011ae1e : sub eax, 0x1000d37 ; ret
0x0000000000096a6e : sub eax, 0x100156a ; ret
0x00000000000e0ffa : sub eax, 0x1046b83 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6395 : sub eax, 0x35 ; retf 4
0x00000000000a19a0 : sub eax, 0x487b8b48 ; mov rsi, r14 ; call rax
0x000000000012ef32 : sub eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000004564d : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000187f1f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x0000000000047406 : sub eax, 0xd089001a ; ret
0x000000000003330c : sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x0000000000058ccf : sub eax, 1 ; ret
0x0000000000097fbc : sub eax, 2 ; mov eax, r8d ; ret
0x00000000000bf94e : sub eax, dword ptr [r8 + r9*4] ; je 0xbf936 ; ret
0x00000000000bf94f : sub eax, dword ptr [rax + rcx*4] ; je 0xbf935 ; ret
0x00000000001232f1 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000037ce3 : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077601 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000bf8f0 : sub eax, dword ptr [rcx + r8*4] ; je 0xbf8de ; ret
0x00000000000bf8f1 : sub eax, dword ptr [rcx + rax*4] ; je 0xbf8dd ; ret
0x00000000000888b4 : sub eax, dword ptr [rcx - 0x7f] ; in eax, 0 ; add byte ptr [rax], 0 ; jne 0x88889 ; jmp 0x8885c
0x0000000000123dfe : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 4] ; syscall
0x0000000000123db4 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000097012 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000008febd : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000008fd8d : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000008b659 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008feaa : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008fd7a : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000011dc37 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x00000000000966d7 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000130d03 : sub eax, dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000015386d : sub eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aec3 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000a67ac : sub eax, ebp ; add rdx, rax ; jmp 0xa6764
0x00000000000a6e2b : sub eax, ecx ; add r10, rax ; jmp 0xa6de4
0x00000000000a895d : sub eax, ecx ; add r10, rax ; jmp 0xa8914
0x00000000000a99fd : sub eax, ecx ; add r10, rax ; jmp 0xa99b4
0x00000000000f3fbb : sub eax, ecx ; add rdx, rax ; jmp 0xf3f54
0x00000000001882d3 : sub eax, ecx ; je 0x1882e9 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000005acf5 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000ad52c : sub eax, ecx ; ret
0x0000000000095b99 : sub eax, ecx ; sub eax, 1 ; ret
0x00000000001873cf : sub eax, ecx ; vzeroupper ; ret
0x00000000000b4ef9 : sub eax, edi ; ret
0x00000000000d2a1e : sub eax, edi ; shr rax, 2 ; ret
0x000000000008e78c : sub eax, edx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000926c1 : sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000014c598 : sub eax, edx ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000004a5f9 : sub eax, edx ; ret
0x0000000000044f1a : sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000045633 : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000045279 : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000190560 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x00000000001870d2 : sub eax, edx ; vzeroupper ; ret
0x00000000000e180b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063fd7 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000e0558 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013f7b6 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000cd05b : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046df8 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000004acc6 : sub ecx, 1 ; jns 0x4ac90 ; xor eax, eax ; ret
0x0000000000059c32 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ba8f1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001083d0 : sub ecx, dword ptr [rbx - 0x76b7ef90] ; ret 0x8b48
0x00000000000993b1 : sub ecx, dword ptr [rbx] ; adc eax, 0x10894800 ; ret
0x000000000018bf14 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000000a3601 : sub ecx, dword ptr [rip + 0xf48000f] ; ret 0x66c3
0x000000000008ae69 : sub ecx, eax ; sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000010b6cf : sub ecx, ebp ; ret
0x0000000000162ce2 : sub ecx, edi ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d01
0x0000000000044ecf : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000d251c : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000001166ac : sub edi, dword ptr [rax + 0x48] ; syscall
0x000000000013dc03 : sub edi, dword ptr [rax + 3] ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000011538a : sub edi, dword ptr [rax - 1] ; jmp 0x115364
0x00000000000d92fb : sub edx, 0x894c0010 ; out dx, eax ; call 0x255a9
0x0000000000149431 : sub edx, 1 ; jne 0x1493bd ; ret
0x0000000000096708 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000966f9 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008af12 : sub edx, dword ptr [rcx + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000008af24 : sub edx, dword ptr [rcx + 8] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000000af344 : sub edx, eax ; jbe 0xaf387 ; add rax, rdi ; ret
0x00000000000af354 : sub edx, eax ; jbe 0xaf389 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000af364 : sub edx, eax ; jbe 0xaf389 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000af374 : sub edx, eax ; jbe 0xaf389 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d1554 : sub edx, eax ; jbe 0xd1597 ; add rax, rdi ; ret
0x00000000000d1564 : sub edx, eax ; jbe 0xd1599 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000d1574 : sub edx, eax ; jbe 0xd1599 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000d1584 : sub edx, eax ; jbe 0xd1599 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000117488 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000162ce9 : sub edx, ecx ; jmp 0x162cfa
0x000000000018c5c9 : sub edx, ecx ; jmp 0x18c56a
0x000000000018cce9 : sub edx, ecx ; jmp 0x18cc8a
0x000000000018d369 : sub edx, ecx ; jmp 0x18d30a
0x000000000018d7b9 : sub edx, ecx ; jmp 0x18d74a
0x000000000018e059 : sub edx, ecx ; jmp 0x18dffa
0x000000000018e4d9 : sub edx, ecx ; jmp 0x18e45f
0x0000000000186d48 : sub edx, esi ; cmp edx, ecx ; jle 0x186d6d ; movsxd rax, ecx ; ret
0x0000000000091c1d : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbp ; call rax
0x000000000013f531 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000e88f1 : sub esi, 1 ; mov rdi, qword ptr [rbx + r14*8] ; call 0x25359
0x000000000011c286 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004b5de : sub esi, edi ; syscall
0x0000000000154da8 : sub esp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x0000000000110d58 : sub esp, -0x80 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000122127 : sub esp, 8 ; call rsi
0x000000000019c237 : sub qword ptr [rip + 0x52fd9], 1 ; pop rbp ; ret
0x0000000000145677 : sub qword ptr [rip + 0xaa099], 1 ; pop rbp ; ret
0x0000000000097fbb : sub r8d, 2 ; mov eax, r8d ; ret
0x000000000014c597 : sub r8d, edx ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000009f421 : sub rax, 0x10 ; ret
0x00000000000be9f3 : sub rax, 1 ; ret
0x0000000000097011 : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008febc : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008fd8c : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000008b658 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008fea9 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008fd79 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a6e2a : sub rax, r9 ; add r10, rax ; jmp 0xa6de5
0x00000000000a895c : sub rax, r9 ; add r10, rax ; jmp 0xa8915
0x00000000000a99fc : sub rax, r9 ; add r10, rax ; jmp 0xa99b5
0x00000000000a67ab : sub rax, rbp ; add rdx, rax ; jmp 0xa6765
0x00000000000f3fba : sub rax, rcx ; add rdx, rax ; jmp 0xf3f55
0x0000000000095b98 : sub rax, rcx ; sub eax, 1 ; ret
0x00000000000b4ef8 : sub rax, rdi ; ret
0x00000000000d2a1d : sub rax, rdi ; shr rax, 2 ; ret
0x000000000008e78b : sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000926c0 : sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004a60c : sub rax, rdx ; ret
0x0000000000045278 : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000018bbef : sub rax, rdx ; vzeroupper ; ret
0x0000000000162ce1 : sub rcx, rdi ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x162d02
0x00000000000d251b : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000149430 : sub rdx, 1 ; jne 0x1493be ; ret
0x00000000000af343 : sub rdx, rax ; jbe 0xaf388 ; add rax, rdi ; ret
0x00000000000d1553 : sub rdx, rax ; jbe 0xd1598 ; add rax, rdi ; ret
0x0000000000162ce8 : sub rdx, rcx ; jmp 0x162cfb
0x000000000004b5dd : sub rsi, rdi ; syscall
0x0000000000154da7 : sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x0000000000110d57 : sub rsp, -0x80 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000122126 : sub rsp, 8 ; call rsi
0x0000000000045367 : subps xmm0, xmm1 ; ret
0x00000000000456cf : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000045366 : subsd xmm0, xmm1 ; ret
0x00000000000456ce : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000002588d : syscall
0x000000000004faf7 : test ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a8127 : test ah, bh ; xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000fb34f : test ah, bl ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000e6aef : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000199c07 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000010543f : test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x1874
0x00000000000c28d5 : test ah, bl ; or eax, 0x89480000 ; retf 0x8548
0x000000000004cccf : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001859b8 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001868b8 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001857d8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e68f7 : test ah, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001866d8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x000000000007c3a1 : test al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004917b : test al, 0 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000150383 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000015675b : test al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x00000000000e1508 : test al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000035954 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000118955 : test al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000e43f0 : test al, 0x36 ; or eax, 0x440f4800 ; ret 0x854d
0x000000000011d2d1 : test al, 0x45 ; mov edi, ebp ; call rax
0x000000000013104f : test al, 0x48 ; mov eax, edi ; ret
0x000000000004d2d1 : test al, 0x89 ; ret 0x8341
0x000000000012bfb9 : test al, 0x89 ; ret 0xc031
0x00000000000f87f3 : test al, 0xe8 ; push rdi ; retf
0x00000000000f2950 : test al, 0xe8 ; retf 0xfcdc
0x00000000000d27c9 : test al, 0xf0 ; jne 0xd2828 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d27c8 : test al, 0xf0 ; jne 0xd2829 ; lea rax, [rdi - 0x10] ; ret
0x0000000000186e59 : test al, 2 ; add byte ptr [rax + 0x63], cl ; ret 0x8348
0x000000000005e5ac : test al, 3 ; add byte ptr [rax], al ; mov rsp, rdx ; ret
0x00000000000b380c : test al, ah ; or eax, 0x894d0000 ; retf
0x00000000001763cc : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000142385 : test al, al ; jne 0x142374 ; mov eax, r10d ; ret
0x00000000000ad7ea : test al, al ; jne 0xad7d8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000bf6d7 : test al, al ; jne 0xbf59e ; jmp 0xbf6b5
0x00000000000eb0f1 : test al, al ; jne 0xeb0a7 ; xor eax, eax ; ret
0x0000000000176ccc : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b2a2c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019c8e6 : test al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b311c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000085903 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000033bd1 : test bh, bh ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000016457c : test bh, bh ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000074681 : test bh, bh ; ret
0x000000000012de3c : test bh, bl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x0000000000199a09 : test bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000086df4 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a6140 : test bh, dl ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc019
0x0000000000057820 : test bl, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xbf41
0x000000000003729a : test byte ptr [rax + 0x200], bh ; ret
0x00000000000fff64 : test byte ptr [rax + 0x63], 4 ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000000e7952 : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000004bfa6 : test byte ptr [rax + 0xf], 0x44 ; ret 0x13eb
0x00000000000f3abe : test byte ptr [rax + 1], 0xc2 ; jmp 0xf3ad4
0x0000000000162a27 : test byte ptr [rax + rax - 0x7cb70000], dl ; ret
0x0000000000142972 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000563df : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000056c86 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfde9
0x000000000008f263 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000185428 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x0000000000110873 : test byte ptr [rax + rbx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; sal bh, 0xc2 ; jmp rsi
0x0000000000079fae : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000001128a8 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000142f5c : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000613f4 : test byte ptr [rax - 0x17fffffe], ah ; ret 0x279
0x000000000009a9b5 : test byte ptr [rax - 0x73], 0x3d ; ret
0x0000000000137ce2 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000009be7e : test byte ptr [rax - 0x77], 0xef ; call 0x980d6
0x000000000015aa91 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000011056a : test byte ptr [rax - 0x77], 0xef ; call rax
0x000000000011059b : test byte ptr [rax - 0x77], 0xef ; mov eax, 0x135 ; syscall
0x000000000003c009 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017738c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019bfea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000b9ffa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000017bc5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000017bc9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb05a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000bc46a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000009fb1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000000bb019 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000000461ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018d0ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000049a9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d284a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000110675 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000177c8c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000176a8c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014bfe4 : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rbx]
0x00000000000b35bc : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000290d9 : test byte ptr [rbp + 0x31], 0xff ; call 0x25356
0x000000000012c794 : test byte ptr [rbp + 0xf], 0x44 ; retf
0x000000000002d941 : test byte ptr [rbp + rax], al ; add bh, dh ; ret 0
0x0000000000185f58 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007eba9 : test byte ptr [rbp - 0x7c000012], dh ; ret
0x000000000013d3ee : test byte ptr [rbp - 0x7d000000], cl ; ret 0x8103
0x000000000012ef3e : test byte ptr [rbx + 0x1c], 0x20 ; je 0x12ef57 ; pop rbx ; ret
0x00000000000a1a67 : test byte ptr [rbx + 0x50], 1 ; jne 0xa1a49 ; mov rdi, rsi ; call rax
0x0000000000186138 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006f438 : test byte ptr [rbx - 0x76befb8d], cl ; retf 0xb841
0x0000000000143ff8 : test byte ptr [rbx - 0x7d000000], ah ; ret 0x4801
0x0000000000146858 : test byte ptr [rbx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000164548 : test byte ptr [rbx], dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a0a4b : test byte ptr [rcx + 0x11], bl ; add byte ptr [rax - 0x77], cl ; retf 0xb4eb
0x00000000000448ea : test byte ptr [rcx + 0x48000003], dh ; add edx, ecx ; jmp 0x44908
0x0000000000132efd : test byte ptr [rcx + 0xff009f8], 0xc8 ; ret
0x000000000010c270 : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000000a2f64 : test byte ptr [rcx + rax - 0x7cb80000], dh ; ret 0xe901
0x0000000000080807 : test byte ptr [rcx + rbp - 0x7cb80000], dh ; ret
0x0000000000186318 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x000000000004a2d7 : test byte ptr [rcx + rcx*4 - 0x31], 0x41 ; call rax
0x0000000000147eed : test byte ptr [rcx + rcx*4 - 1], 0xe8 ; retf 0xfff7
0x00000000000c6653 : test byte ptr [rcx - 0x41], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x00000000000fca30 : test byte ptr [rcx - 0x73], 0x47 ; add dword ptr [rax - 0x7f], ecx ; retf 0
0x0000000000181726 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ff99a : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x0000000000168ec6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182506 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e6416 : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000001681d6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a49d4 : test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000182416 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000167ef6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d59bf : test byte ptr [rcx], dl ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000001864f8 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x000000000004ce3e : test byte ptr [rdi], 0x84 ; ret
0x00000000000cbdbe : test byte ptr [rdi], 0x84 ; retf
0x000000000010f01c : test byte ptr [rdi], 0x84 ; retf 2
0x00000000001406d6 : test byte ptr [rdi], 0x85 ; ret
0x000000000007eb08 : test byte ptr [rdi], 0x85 ; retf 0xffed
0x00000000000e948e : test byte ptr [rdi], 0x94 ; ret
0x00000000000fd4fd : test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000e606b : test byte ptr [rdi], 0x94 ; ret 0x854d
0x000000000009f3f2 : test byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000068922 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000008fdf6 : test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008fe06 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000ba998 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000000fce64 : test byte ptr [rdi], bh ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8341
0x00000000000f4bc4 : test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011cecc : test byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000000f1a06 : test byte ptr [rdi], cl ; add byte ptr [rax + 0x63], cl ; retf 0x25eb
0x0000000000037228 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000f2f35 : test byte ptr [rdx + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000000a361f : test byte ptr [rdx + 0xcd], 1 ; je 0xa35ee ; ret
0x00000000000bff2f : test byte ptr [rdx + 0xcd], 1 ; je 0xbfefe ; ret
0x0000000000185248 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012bad1 : test byte ptr [rdx - 0x7d000000], ch ; ret 0x8801
0x00000000000a75e4 : test byte ptr [rdx], 0 ; add byte ptr [rcx - 9], al ; ret
0x00000000000a75fd : test byte ptr [rdx], bh ; adc dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret
0x0000000000198d41 : test byte ptr [rdx], bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xc148
0x0000000000068759 : test byte ptr [rdx], bl ; sbb eax, 0x83480000 ; ret 0x3c01
0x000000000011aed3 : test byte ptr [rdx], cl ; add al, byte ptr [rax] ; add bh, dh ; ret
0x00000000000d7581 : test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000b4f9d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000137691 : test byte ptr [rsi + rdi*8 + 0x3d80ffff], ch ; ret
0x00000000001855f8 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000086fd8 : test byte ptr [rsi + rdx], ah ; syscall
0x00000000000865c8 : test byte ptr [rsi - 0x74fffffe], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000a6f31 : test byte ptr [rsi], bh ; sbb byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a49ec : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018a33e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a03e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000018b23e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a93e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018ac3e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000726ee : test byte ptr [rsi], cl ; add eax, 0x83480000 ; ret
0x0000000000185068 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a8f6c : test byte ptr [rsp], dh ; add bh, dh ; ret
0x00000000001999ee : test ch, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000019728e : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000934e6 : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000004db77 : test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000184ecb : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000051323 : test cl, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000183046 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000abaca : test cl, bh ; jne 0xabaac ; ret
0x0000000000168906 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182e66 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000168626 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000adb56 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ade56 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aed56 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182f56 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aea56 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000000ae756 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ae456 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000169036 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182d76 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aba6c : test cl, cl ; je 0xaba80 ; cmp ecx, esi ; jne 0xaba68 ; ret
0x000000000013104c : test cl, cl ; jne 0x130fff ; mov rax, rdi ; ret
0x00000000000be67f : test cl, cl ; jne 0xbe674 ; ret
0x00000000000be72f : test cl, cl ; jne 0xbe724 ; ret
0x00000000000be9ef : test cl, cl ; jne 0xbe9e8 ; sub rax, 1 ; ret
0x00000000000f8a9d : test dh, bh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x0000000000029884 : test dh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001982a5 : test dh, bh ; add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x43], cl ; ret 0x8349
0x00000000000ab7bd : test dh, dh ; jne 0xab7b7 ; mov qword ptr [rdx], rcx ; ret
0x00000000000f8afd : test dh, dl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000001940d4 : test dl, 0x40 ; jne 0x194099 ; lea rax, [rdi + 7] ; ret
0x0000000000194102 : test dl, 4 ; jne 0x194099 ; lea rax, [rdi + 3] ; ret
0x000000000007ce41 : test dl, bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000013c779 : test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000085a02 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ab98e : test dl, cl ; jne 0xab977 ; mov rax, r8 ; ret
0x000000000004436b : test dl, dl ; jne 0x4434c ; ret
0x00000000000be89f : test dl, dl ; jne 0xbe898 ; lea rax, [rcx - 1] ; ret
0x000000000011de7c : test dword ptr [rax + 0x49000002], ecx ; mov edi, dword ptr [rdi] ; call rbx
0x000000000011df30 : test dword ptr [rax + 0x49000002], esi ; mov edi, dword ptr [rdi] ; call rbx
0x000000000018d963 : test dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018e673 : test dword ptr [rax + 2], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000baccb : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000bc21b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000bc11b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000af9b8 : test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x00000000000a1985 : test dword ptr [rax + rax], edx ; call qword ptr [rax]
0x000000000006d04a : test dword ptr [rax - 0x16000005], edx ; pop rbx ; retf
0x000000000011d2cd : test dword ptr [rax - 0x75], 0x8945a845 ; out dx, eax ; call rax
0x00000000000fd4f7 : test dword ptr [rax - 0x7ab2000e], eax ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000f4c95 : test dword ptr [rax], 0x89480000 ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000086df5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000000f7fcb : test dword ptr [rax], eax ; add al, 0 ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000d7f48 : test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000007d48a : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000110b9c : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000077eaf : test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x0000000000119725 : test dword ptr [rax], ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000010b4b3 : test dword ptr [rax], ecx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007801d : test dword ptr [rax], edx ; idiv edi ; inc dword ptr [rcx] ; ret
0x0000000000038541 : test dword ptr [rax], esi ; add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x000000000013e853 : test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a07b0 : test dword ptr [rbp + 0x48000000], ebp ; add esp, 0x18 ; ret
0x000000000011db46 : test dword ptr [rbp + 0x49000000], esp ; mov edi, dword ptr [rbp] ; call rbx
0x000000000011dc06 : test dword ptr [rbp + 0x49000002], esi ; mov edi, dword ptr [rsi] ; call rbx
0x00000000000d7f47 : test dword ptr [rbp - 0x76b80000], eax ; ret 0x8548
0x00000000001473a6 : test dword ptr [rbp - 0x7bfffffe], edx ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000005a9a3 : test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x00000000000af2c8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000111171 : test dword ptr [rbx + 0x48000000], esi ; add esp, 0x78 ; ret
0x00000000000d2100 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000d26b8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000017bb78 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000017bb58 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000017ba70 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000bc310 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000001918c7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191d16 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e9819 : test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000001884e8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000011dc36 : test dword ptr [rbx], ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000111767 : test dword ptr [rcx + 0x48000000], ebx ; add esp, 0x68 ; ret
0x000000000011dc66 : test dword ptr [rcx + 0x49000001], esp ; mov edi, dword ptr [rsi] ; call rbx
0x000000000011ddf5 : test dword ptr [rcx + 4], ebx ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000017b87a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000019189d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ba8b2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001917ad : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001916bd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d2147 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000195f87 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000d2117 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000017bc1a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000187f2a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x000000000011dd17 : test dword ptr [rdi + 3], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000163ee7 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000baa17 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ba9f7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x000000000013dd2e : test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rbp - 0x77] ; ret
0x000000000002b279 : test dword ptr [rdi], 0x33486 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000141714 : test dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000011dba6 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000046f3a : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000099f38 : test dword ptr [rdi], ecx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000011dbd6 : test dword ptr [rdi], edi ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000000e7161 : test dword ptr [rdi], edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000010e52c : test dword ptr [rdi], esi ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000018da41 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018e4a9 : test dword ptr [rdx + 4], eax ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000babb1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000011de22 : test dword ptr [rdx + 6], edx ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000000bbff9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000192c12 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001915e2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b0b7 : test dword ptr [rdx + rdi*8 + 0x1ffff], esi ; add byte ptr [rax], al ; jmp rax
0x00000000000f8071 : test dword ptr [rdx - 0x9ffffff], ebp ; ret 0x7420
0x000000000017bb37 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000013e421 : test dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x000000000011db16 : test dword ptr [rip + 0x49000001], esi ; mov edi, dword ptr [rbp] ; call rbx
0x000000000011dea9 : test dword ptr [rip + 0x49000007], edx ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000187f1e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x000000000018ba13 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000004cced : test dword ptr [rsi + 0x31000000], ebp ; div bh ; ret 0
0x00000000000d275d : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x0000000000195912 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018e775 : test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000ba9d5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000ba9b5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000ba8cd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000bf6da : test dword ptr [rsi - 0x14000002], esi ; retf
0x00000000000d70c5 : test dword ptr [rsi - 0x76000003], eax ; retf 0x8348
0x00000000001018f5 : test dword ptr [rsi], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8eb
0x000000000006a366 : test dword ptr [rsi], edx ; retf 0xffff
0x0000000000191ae8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000000a35b3 : test eax, 0x480000ba ; cmove eax, edx ; ret
0x00000000000bfec3 : test eax, 0x48000113 ; cmove eax, edx ; ret
0x00000000000a2853 : test eax, 0x48000126 ; cmove eax, edx ; ret
0x00000000000bfb13 : test eax, 0x4800012f ; cmove eax, edx ; ret
0x000000000016ea66 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000045704 : test eax, 0x7fffff ; je 0x45717 ; ret
0x000000000012e5f9 : test eax, 0x89480008 ; ret 0x57e9
0x000000000012aaa3 : test eax, 0x8948ffef ; ret
0x00000000000eaae6 : test eax, 0x8948fff3 ; ret
0x000000000011ff83 : test eax, eax ; cmove eax, edx ; ret
0x000000000011748a : test eax, eax ; cmovns eax, edx ; ret
0x000000000004a69d : test eax, eax ; cmovs eax, edx ; ret
0x0000000000110606 : test eax, eax ; je 0x110646 ; xor edx, edx ; call rax
0x0000000000117f10 : test eax, eax ; je 0x117f19 ; ret
0x0000000000119fd5 : test eax, eax ; je 0x119fe3 ; mov qword ptr [rax], rdx ; ret
0x000000000011f30a : test eax, eax ; je 0x11f374 ; call rax
0x000000000011f4eb : test eax, eax ; je 0x11f5e8 ; call rax
0x0000000000130125 : test eax, eax ; je 0x130164 ; call rax
0x0000000000131c1e : test eax, eax ; je 0x131c38 ; add rsp, 8 ; ret
0x000000000013ac25 : test eax, eax ; je 0x13ac35 ; mov rdi, rbx ; call rax
0x000000000013af3d : test eax, eax ; je 0x13af4d ; mov rdi, rbx ; call rax
0x0000000000143f3e : test eax, eax ; je 0x143f4c ; ret
0x0000000000144dc4 : test eax, eax ; je 0x144dd8 ; add rsp, 8 ; ret
0x0000000000149584 : test eax, eax ; je 0x149594 ; mov rdi, rbp ; call rax
0x0000000000149edb : test eax, eax ; je 0x149eeb ; mov rdi, rbp ; call rax
0x000000000014a20a : test eax, eax ; je 0x14a214 ; ret
0x000000000014af0a : test eax, eax ; je 0x14af1a ; mov rdi, rbx ; call rax
0x000000000014b267 : test eax, eax ; je 0x14b277 ; mov rdi, rbx ; call rax
0x000000000014b485 : test eax, eax ; je 0x14b496 ; xor eax, eax ; ret
0x000000000014ba76 : test eax, eax ; je 0x14ba86 ; mov rdi, r13 ; call rax
0x0000000000150c7b : test eax, eax ; je 0x150c8b ; mov rdi, rbp ; call rax
0x0000000000150e60 : test eax, eax ; je 0x150e74 ; lea rdi, [r12 + 0x10] ; call rax
0x000000000015211f : test eax, eax ; je 0x15212f ; mov rdi, rbp ; call rax
0x0000000000152204 : test eax, eax ; je 0x152214 ; mov rdi, r13 ; call rax
0x0000000000153032 : test eax, eax ; je 0x153044 ; lea rdi, [rbp + 0x68] ; call rax
0x000000000015376a : test eax, eax ; je 0x15377a ; mov rdi, rbp ; call rax
0x0000000000153ad2 : test eax, eax ; je 0x153ae4 ; lea rdi, [rbp + 0x58] ; call rax
0x00000000001564c0 : test eax, eax ; je 0x15644e ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000156441 : test eax, eax ; je 0x156455 ; pop rbx ; ret
0x0000000000157540 : test eax, eax ; je 0x157554 ; lea rdi, [r12 + 0x10] ; call rax
0x0000000000157c89 : test eax, eax ; je 0x157c9d ; lea rdi, [r12 + 0x10] ; call rax
0x000000000015a3c3 : test eax, eax ; je 0x15a3f7 ; mov eax, r8d ; ret
0x000000000015a413 : test eax, eax ; je 0x15a447 ; mov eax, r8d ; ret
0x0000000000182133 : test eax, eax ; je 0x18213f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000183118 : test eax, eax ; je 0x183124 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000019b94c : test eax, eax ; je 0x19b956 ; call rax
0x000000000019ba49 : test eax, eax ; je 0x19ba58 ; call rax
0x000000000002726c : test eax, eax ; je 0x2727c ; mov rdi, rbp ; call rax
0x000000000002a5de : test eax, eax ; je 0x2a5ec ; ret
0x0000000000033d22 : test eax, eax ; je 0x33d2c ; call rax
0x0000000000034fdd : test eax, eax ; je 0x34fe7 ; call rax
0x0000000000065fe8 : test eax, eax ; je 0x66039 ; mov eax, 0x13c ; syscall
0x00000000000916f1 : test eax, eax ; je 0x91705 ; pop rbx ; ret
0x0000000000097dea : test eax, eax ; je 0x97df4 ; call rax
0x0000000000097e73 : test eax, eax ; je 0x97e7d ; call rax
0x0000000000097ee3 : test eax, eax ; je 0x97eed ; call rax
0x000000000009c39d : test eax, eax ; je 0x9c3a7 ; call rax
0x000000000009ff65 : test eax, eax ; je 0xa0048 ; call rax
0x00000000000a009d : test eax, eax ; je 0xa0178 ; call rax
0x00000000000a25c4 : test eax, eax ; je 0xa25d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0119 : test eax, eax ; je 0xe013b ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000e0555 : test eax, eax ; je 0xe058c ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3ab9 : test eax, eax ; je 0xf3aff ; xor esi, esi ; add rdx, rax ; jmp 0xf3ad9
0x0000000000122316 : test eax, eax ; jl 0x122333 ; je 0x122323 ; ret
0x000000000010f3bf : test eax, eax ; jne 0x10f3e1 ; mov eax, 0x11 ; syscall
0x000000000010f46f : test eax, eax ; jne 0x10f491 ; mov eax, 0x12 ; syscall
0x000000000010f838 : test eax, eax ; jne 0x10f850 ; mov edx, dword ptr [rbx + 4] ; jmp 0x10f80c
0x000000000011114b : test eax, eax ; jne 0x1111b9 ; mov eax, 0x101 ; syscall
0x000000000011126c : test eax, eax ; jne 0x111284 ; syscall
0x000000000011130c : test eax, eax ; jne 0x111329 ; mov eax, 1 ; syscall
0x0000000000111780 : test eax, eax ; jne 0x1117b9 ; mov eax, 0x48 ; syscall
0x0000000000111aac : test eax, eax ; jne 0x111ac9 ; mov eax, 3 ; syscall
0x0000000000111c2c : test eax, eax ; jne 0x111c49 ; mov eax, 0x55 ; syscall
0x0000000000115bec : test eax, eax ; jne 0x115c09 ; mov eax, 7 ; syscall
0x000000000011626f : test eax, eax ; jne 0x116291 ; mov eax, 0x146 ; syscall
0x000000000011645f : test eax, eax ; jne 0x116481 ; mov eax, 0x115 ; syscall
0x000000000011650f : test eax, eax ; jne 0x116531 ; mov eax, 0x11d ; syscall
0x00000000001176ac : test eax, eax ; jne 0x1176c9 ; mov eax, 0x13 ; syscall
0x000000000011774c : test eax, eax ; jne 0x117769 ; mov eax, 0x14 ; syscall
0x0000000000117c3e : test eax, eax ; jne 0x117c79 ; mov eax, 0x71 ; syscall
0x0000000000117cde : test eax, eax ; jne 0x117d19 ; mov eax, 0x72 ; syscall
0x000000000011823f : test eax, eax ; jne 0x118261 ; mov eax, 0x17 ; syscall
0x0000000000118340 : test eax, eax ; jne 0x118379 ; mov eax, 0x10e ; syscall
0x000000000011846c : test eax, eax ; jne 0x118489 ; mov eax, 0x4a ; syscall
0x000000000011852c : test eax, eax ; jne 0x118549 ; mov eax, 0x4b ; syscall
0x000000000011bbec : test eax, eax ; jne 0x11bc09 ; mov eax, 0x1a ; syscall
0x000000000011df83 : test eax, eax ; jne 0x11dfc9 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfac : test eax, eax ; jne 0x11e034 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000012260f : test eax, eax ; jne 0x122631 ; mov eax, 0xe8 ; syscall
0x00000000001226bf : test eax, eax ; jne 0x1226e1 ; mov eax, 0x114 ; syscall
0x000000000012276f : test eax, eax ; jne 0x122791 ; mov eax, 0x116 ; syscall
0x000000000012281f : test eax, eax ; jne 0x122841 ; mov eax, 0x113 ; syscall
0x00000000001228ec : test eax, eax ; jne 0x122909 ; mov eax, 0x130 ; syscall
0x00000000001232ec : test eax, eax ; jne 0x123309 ; mov eax, 0x2b ; syscall
0x00000000001233bc : test eax, eax ; jne 0x1233d9 ; mov eax, 0x2a ; syscall
0x00000000001235df : test eax, eax ; jne 0x123601 ; mov eax, 0x2d ; syscall
0x000000000012369c : test eax, eax ; jne 0x1236b9 ; mov eax, 0x2f ; syscall
0x00000000001237fc : test eax, eax ; jne 0x123819 ; mov eax, 0x2e ; syscall
0x000000000012389f : test eax, eax ; jne 0x1238c1 ; mov eax, 0x2c ; syscall
0x0000000000123cff : test eax, eax ; jne 0x123d21 ; mov eax, 0x120 ; syscall
0x0000000000123daf : test eax, eax ; jne 0x123dd1 ; mov eax, 0x12b ; syscall
0x0000000000123e5f : test eax, eax ; jne 0x123e81 ; mov eax, 0x133 ; syscall
0x0000000000123fff : test eax, eax ; jne 0x124021 ; mov eax, 0x45 ; syscall
0x00000000001240af : test eax, eax ; jne 0x1240d1 ; mov eax, 0x46 ; syscall
0x00000000001301f3 : test eax, eax ; jne 0x130229 ; mov eax, 0xe6 ; syscall
0x000000000013212c : test eax, eax ; jne 0x1320e0 ; mov rax, rdi ; ret
0x000000000013f6eb : test eax, eax ; jne 0x13f70f ; mov eax, r8d ; ret
0x000000000014438e : test eax, eax ; jne 0x14439c ; ret
0x00000000001444bc : test eax, eax ; jne 0x1444d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001461fc : test eax, eax ; jne 0x14620c ; ret
0x000000000015104a : test eax, eax ; jne 0x151054 ; ret
0x000000000015770a : test eax, eax ; jne 0x157714 ; ret
0x000000000015fe0e : test eax, eax ; jne 0x15fe27 ; xor eax, eax ; pop rbp ; ret
0x0000000000164123 : test eax, eax ; jne 0x164145 ; mov eax, 0x27 ; syscall
0x00000000001873cb : test eax, eax ; jne 0x1873b9 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001878a0 : test eax, eax ; jne 0x187889 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000187bd1 : test eax, eax ; jne 0x187bf9 ; xor eax, eax ; vzeroupper ; ret
0x000000000018f681 : test eax, eax ; jne 0x18f6a9 ; xor eax, eax ; vzeroupper ; ret
0x000000000018faf9 : test eax, eax ; jne 0x18fae9 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018ffce : test eax, eax ; jne 0x18ffb9 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000036dcd : test eax, eax ; jne 0x36ddf ; mov eax, r8d ; ret
0x000000000004b51c : test eax, eax ; jne 0x4b539 ; mov eax, 0x13e ; syscall
0x000000000006588a : test eax, eax ; jne 0x65895 ; pop rbx ; ret
0x000000000007dfff : test eax, eax ; jne 0x7dfc1 ; mov rdi, r13 ; call 0x8a249
0x0000000000095894 : test eax, eax ; jne 0x9588c ; ret
0x00000000000966bc : test eax, eax ; jne 0x966b4 ; ret
0x0000000000097f9c : test eax, eax ; jne 0x97fd1 ; mov eax, 0x23 ; syscall
0x00000000000a19ff : test eax, eax ; jne 0xa19f6 ; xor eax, eax ; ret
0x00000000000af2f5 : test eax, eax ; jne 0xaf356 ; xor eax, eax ; ret
0x00000000000af7a8 : test eax, eax ; jne 0xaf826 ; xor eax, eax ; ret
0x00000000000af7d7 : test eax, eax ; jne 0xaf856 ; xor eax, eax ; ret
0x00000000000d1505 : test eax, eax ; jne 0xd1566 ; xor eax, eax ; ret
0x00000000000e21ae : test eax, eax ; jne 0xe21e9 ; mov eax, 0x74 ; syscall
0x00000000000e5c8c : test eax, eax ; jne 0xe5ca9 ; mov eax, 0x22 ; syscall
0x00000000000e5d0c : test eax, eax ; jne 0xe5d29 ; mov eax, 0x23 ; syscall
0x00000000000e700e : test eax, eax ; jne 0xe7049 ; mov eax, 0x69 ; syscall
0x00000000000e70ae : test eax, eax ; jne 0xe70e9 ; mov eax, 0x6a ; syscall
0x00000000000e737e : test eax, eax ; jne 0xe73b9 ; mov eax, 0x75 ; syscall
0x00000000000e742e : test eax, eax ; jne 0xe7469 ; mov eax, 0x77 ; syscall
0x000000000008df3f : test eax, eax ; js 0x8df4c ; ret
0x0000000000148b1a : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000132b20 : test eax, eax ; setg cl ; add ecx, ecx ; jmp 0x8ed49
0x0000000000091bbe : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000070238 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000000781ac : test eax, edi ; idiv bh ; call qword ptr [rax]
0x00000000001246f1 : test eax, edx ; idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x00000000001488bd : test ebp, 0x840f1000 ; ret 0xfffe
0x000000000010fe44 : test ebp, eax ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf02
0x000000000011dae6 : test ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x11daf8 ; call rbx
0x000000000011da7d : test ebp, ebp ; jne 0x11dad8 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011daad : test ebp, ebp ; jne 0x11db38 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000019bba4 : test ebp, ebp ; jne 0x19bb98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097dca : test ebp, ebp ; jne 0x97e04 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130d77 : test ebp, ebx ; add eax, 0x440f4800 ; ret 0xf6c3
0x000000000010fe3b : test ebp, edi ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf80
0x0000000000073713 : test ebp, edi ; retf
0x00000000000d301b : test ebx, ebp ; push rcx ; mov eax, 0x148051e ; ret 0xb848
0x00000000000af230 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000128472 : test ebx, ebx ; je 0x128490 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012aaac : test ebx, ebx ; jne 0x12aac0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000156b55 : test ebx, ebx ; jne 0x156b68 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163fa0 : test ebx, ebx ; jne 0x163fb5 ; pop rbx ; ret
0x0000000000163fd0 : test ebx, ebx ; jne 0x163fe5 ; pop rbx ; ret
0x000000000019a853 : test ebx, ebx ; jne 0x19a842 ; pop rbx ; ret
0x000000000019bacc : test ebx, ebx ; jne 0x19bab8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019be19 : test ebx, ebx ; jne 0x19be0a ; pop rbx ; ret
0x000000000019bebb : test ebx, ebx ; jne 0x19bea5 ; pop rbx ; ret
0x00000000000eca71 : test ebx, ebx ; jns 0xeca65 ; lea rax, [rdx + rax*8] ; jmp 0xeca57
0x00000000000dded3 : test ebx, ecx ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000130435 : test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000af718 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000009e6f8 : test ebx, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000196972 : test ecx, ebp ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011dc96 : test ecx, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x00000000001940c2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000012627f : test ecx, ecx ; jne 0x12628c ; ret
0x00000000001262e8 : test ecx, ecx ; jne 0x1262f4 ; ret
0x0000000000126bcf : test ecx, ecx ; jne 0x126bdc ; ret
0x0000000000126c2c : test ecx, ecx ; jne 0x126c3c ; ret
0x00000000000bfcef : test ecx, ecx ; jne 0xbfccf ; mov rax, r8 ; ret
0x00000000001041b7 : test edi, edi ; je 0x1041cd ; mov rdi, rbx ; call r15
0x00000000000e91d7 : test edi, edi ; je 0xe91ed ; mov rdi, rbx ; call r15
0x000000000011a5bc : test edi, edi ; jne 0x11a5d9 ; mov eax, 1 ; ret
0x000000000011cd8b : test edi, edi ; jne 0x11cdbe ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011dcbf : test edi, edi ; jne 0x11dd08 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dceb : test edi, edi ; jne 0x11dd5f ; mov rdi, qword ptr [r14] ; call rbx
0x000000000013af21 : test edi, edi ; jne 0x13af15 ; pop rbx ; ret
0x00000000000e80b9 : test edi, edi ; js 0xe80c4 ; ret
0x000000000006f795 : test edi, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000000000045337 : test edx, eax ; je 0x45344 ; ret
0x00000000000cabae : test edx, ebp ; and eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000000a1a7f : test edx, ebp ; clc ; lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000007cdcb : test edx, edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000fa691 : test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000122984 : test edx, edx ; je 0x1229c1 ; mov eax, 0x145 ; syscall
0x0000000000033f9f : test edx, edx ; je 0x33fa9 ; call rdx
0x0000000000090453 : test edx, edx ; je 0x90464 ; ret
0x00000000000908b3 : test edx, edx ; je 0x908c4 ; ret
0x00000000000b4d96 : test edx, edx ; je 0xb4da5 ; bsf eax, edx ; ret
0x00000000000b4e3b : test edx, edx ; je 0xb4e58 ; bsf rax, rdx ; ret
0x00000000000b4dde : test edx, edx ; je 0xb4e68 ; bsf rax, rdx ; ret
0x00000000000b500a : test edx, edx ; je 0xb5038 ; bsf rax, rdx ; ret
0x0000000000119240 : test edx, edx ; jne 0x1191f9 ; xor eax, eax ; pop rbp ; ret
0x00000000001264d1 : test edx, edx ; jne 0x1264e4 ; ret
0x0000000000126e01 : test edx, edx ; jne 0x126e14 ; ret
0x0000000000066176 : test edx, edx ; jne 0x66187 ; sub dword ptr [rdi], 1 ; ret
0x0000000000089e8f : test edx, edx ; jne 0x89e84 ; ret
0x0000000000093a17 : test edx, edx ; jne 0x93a24 ; ret
0x0000000000094857 : test edx, edx ; jne 0x9484c ; ret
0x00000000000a1ad9 : test edx, edx ; jne 0xa1ad4 ; ret
0x00000000000bf0f5 : test edx, edx ; jne 0xbf104 ; mov rax, rdi ; ret
0x00000000000bfde6 : test edx, edx ; jne 0xbfdde ; xor eax, eax ; ret
0x00000000000bfe80 : test edx, edx ; jne 0xbfe64 ; ret
0x00000000000c116b : test edx, edx ; jne 0xc1164 ; ret
0x00000000000c03c2 : test edx, edx ; sete al ; ret
0x0000000000070615 : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000000001940b5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000003c008 : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004bfa5 : test esi, esi ; cmove rax, rdx ; jmp 0x4bfc5
0x0000000000116338 : test esi, esi ; je 0x11636b ; mov eax, 0x118 ; syscall
0x0000000000119ea5 : test esi, esi ; je 0x119ee1 ; mov eax, 0x105 ; syscall
0x0000000000186ed6 : test esi, esi ; je 0x186ebe ; xor eax, eax ; ret
0x00000000000332d4 : test esi, esi ; je 0x332e9 ; cmp esi, 3 ; je 0x332e9 ; ret
0x000000000011d972 : test esi, esi ; jne 0x11d989 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011db6f : test esi, esi ; jne 0x11db98 ; mov rdi, qword ptr [r13] ; call rbx
0x00000000000b4f05 : test esi, esi ; jne 0xb4f14 ; xor rax, rax ; ret
0x00000000000d2865 : test esi, esi ; jne 0xd2874 ; xor rax, rax ; ret
0x000000000007d8b1 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000009e41f : test esp, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001940cf : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000009e9ef : test esp, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000011da3c : test esp, esp ; jne 0x11da70 ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011f23c : test esp, esp ; jne 0x11f281 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046f39 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000ab98d : test r10b, r9b ; jne 0xab978 ; mov rax, r8 ; ret
0x000000000011da3b : test r12, r12 ; jne 0x11da71 ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000011f23b : test r12d, r12d ; jne 0x11f282 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011da7c : test r13, r13 ; jne 0x11dad9 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000011daac : test r13, r13 ; jne 0x11db39 ; mov rdi, qword ptr [r12] ; call rbx
0x00000000001488bc : test r13d, 0x840f1000 ; ret 0xfffe
0x000000000011db6e : test r14, r14 ; jne 0x11db99 ; mov rdi, qword ptr [r13] ; call rbx
0x00000000001041b6 : test r15, r15 ; je 0x1041ce ; mov rdi, rbx ; call r15
0x00000000000e91d6 : test r15, r15 ; je 0xe91ee ; mov rdi, rbx ; call r15
0x000000000011dcbe : test r15, r15 ; jne 0x11dd09 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011dcea : test r15, r15 ; jne 0x11dd60 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000011df82 : test r8, r8 ; jne 0x11dfca ; mov rdi, qword ptr [r15] ; call rbx
0x000000000011dfab : test r8, r8 ; jne 0x11e035 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000182132 : test r8d, r8d ; je 0x182140 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000183117 : test r8d, r8d ; je 0x183125 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000065889 : test r8d, r8d ; jne 0x65896 ; pop rbx ; ret
0x00000000000abac9 : test r9b, dil ; jne 0xabaad ; ret
0x0000000000110605 : test rax, rax ; je 0x110647 ; xor edx, edx ; call rax
0x0000000000117f0f : test rax, rax ; je 0x117f1a ; ret
0x0000000000119fd4 : test rax, rax ; je 0x119fe4 ; mov qword ptr [rax], rdx ; ret
0x000000000011f309 : test rax, rax ; je 0x11f375 ; call rax
0x000000000011f4ea : test rax, rax ; je 0x11f5e9 ; call rax
0x0000000000130124 : test rax, rax ; je 0x130165 ; call rax
0x0000000000131c1d : test rax, rax ; je 0x131c39 ; add rsp, 8 ; ret
0x000000000013ac24 : test rax, rax ; je 0x13ac36 ; mov rdi, rbx ; call rax
0x000000000013af3c : test rax, rax ; je 0x13af4e ; mov rdi, rbx ; call rax
0x0000000000144dc3 : test rax, rax ; je 0x144dd9 ; add rsp, 8 ; ret
0x0000000000149583 : test rax, rax ; je 0x149595 ; mov rdi, rbp ; call rax
0x0000000000149eda : test rax, rax ; je 0x149eec ; mov rdi, rbp ; call rax
0x000000000014af09 : test rax, rax ; je 0x14af1b ; mov rdi, rbx ; call rax
0x000000000014b266 : test rax, rax ; je 0x14b278 ; mov rdi, rbx ; call rax
0x000000000014ba75 : test rax, rax ; je 0x14ba87 ; mov rdi, r13 ; call rax
0x0000000000150c7a : test rax, rax ; je 0x150c8c ; mov rdi, rbp ; call rax
0x000000000015211e : test rax, rax ; je 0x152130 ; mov rdi, rbp ; call rax
0x0000000000152203 : test rax, rax ; je 0x152215 ; mov rdi, r13 ; call rax
0x0000000000153031 : test rax, rax ; je 0x153045 ; lea rdi, [rbp + 0x68] ; call rax
0x0000000000153769 : test rax, rax ; je 0x15377b ; mov rdi, rbp ; call rax
0x0000000000153ad1 : test rax, rax ; je 0x153ae5 ; lea rdi, [rbp + 0x58] ; call rax
0x0000000000156440 : test rax, rax ; je 0x156456 ; pop rbx ; ret
0x000000000019b94b : test rax, rax ; je 0x19b957 ; call rax
0x000000000019ba48 : test rax, rax ; je 0x19ba59 ; call rax
0x000000000002726b : test rax, rax ; je 0x2727d ; mov rdi, rbp ; call rax
0x0000000000033d21 : test rax, rax ; je 0x33d2d ; call rax
0x0000000000034fdc : test rax, rax ; je 0x34fe8 ; call rax
0x00000000000916f0 : test rax, rax ; je 0x91706 ; pop rbx ; ret
0x0000000000097de9 : test rax, rax ; je 0x97df5 ; call rax
0x0000000000097e72 : test rax, rax ; je 0x97e7e ; call rax
0x0000000000097ee2 : test rax, rax ; je 0x97eee ; call rax
0x000000000009c39c : test rax, rax ; je 0x9c3a8 ; call rax
0x000000000009ff64 : test rax, rax ; je 0xa0049 ; call rax
0x00000000000a009c : test rax, rax ; je 0xa0179 ; call rax
0x00000000000a25c3 : test rax, rax ; je 0xa25d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3ab8 : test rax, rax ; je 0xf3b00 ; xor esi, esi ; add rdx, rax ; jmp 0xf3ada
0x0000000000122315 : test rax, rax ; jl 0x122334 ; je 0x122324 ; ret
0x00000000001461fb : test rax, rax ; jne 0x14620d ; ret
0x0000000000095893 : test rax, rax ; jne 0x9588d ; ret
0x00000000000966bb : test rax, rax ; jne 0x966b5 ; ret
0x00000000000a19fe : test rax, rax ; jne 0xa19f7 ; xor eax, eax ; ret
0x000000000019bba3 : test rbp, rbp ; jne 0x19bb99 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097dc9 : test rbp, rbp ; jne 0x97e05 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128471 : test rbx, rbx ; je 0x128491 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012aaab : test rbx, rbx ; jne 0x12aac1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163f9f : test rbx, rbx ; jne 0x163fb6 ; pop rbx ; ret
0x0000000000163fcf : test rbx, rbx ; jne 0x163fe6 ; pop rbx ; ret
0x000000000019a852 : test rbx, rbx ; jne 0x19a843 ; pop rbx ; ret
0x000000000019bacb : test rbx, rbx ; jne 0x19bab9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019be18 : test rbx, rbx ; jne 0x19be0b ; pop rbx ; ret
0x000000000019beba : test rbx, rbx ; jne 0x19bea6 ; pop rbx ; ret
0x000000000011cd8a : test rdi, rdi ; jne 0x11cdbf ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000013af20 : test rdi, rdi ; jne 0x13af16 ; pop rbx ; ret
0x000000000013af1f : test rdi, rdi ; jne 0x13af17 ; pop rbx ; ret
0x0000000000045336 : test rdx, rax ; je 0x45345 ; ret
0x0000000000033f9e : test rdx, rdx ; je 0x33faa ; call rdx
0x00000000000b4e3a : test rdx, rdx ; je 0xb4e59 ; bsf rax, rdx ; ret
0x00000000000b4ddd : test rdx, rdx ; je 0xb4e69 ; bsf rax, rdx ; ret
0x00000000000b5009 : test rdx, rdx ; je 0xb5039 ; bsf rax, rdx ; ret
0x000000000011923f : test rdx, rdx ; jne 0x1191fa ; xor eax, eax ; pop rbp ; ret
0x0000000000089e8e : test rdx, rdx ; jne 0x89e85 ; ret
0x0000000000093a16 : test rdx, rdx ; jne 0x93a25 ; ret
0x0000000000094856 : test rdx, rdx ; jne 0x9484d ; ret
0x00000000000a1ad8 : test rdx, rdx ; jne 0xa1ad5 ; ret
0x00000000000bf0f4 : test rdx, rdx ; jne 0xbf105 ; mov rax, rdi ; ret
0x00000000000b4f04 : test rsi, rsi ; jne 0xb4f15 ; xor rax, rax ; ret
0x00000000000d2864 : test rsi, rsi ; jne 0xd2875 ; xor rax, rax ; ret
0x00000000000ab7bc : test sil, sil ; jne 0xab7b8 ; mov qword ptr [rdx], rcx ; ret
0x00000000000c6cf6 : verw ax ; ret
0x00000000000c46ef : verw ax ; retf 0xf728
0x0000000000192fde : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018ec20 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018c68e : vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x00000000001936b9 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018f105 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x00000000001936bd : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018edac : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000018ee53 : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000192fca : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000192fb1 : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000018dcc6 : vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vzeroupper ; ret
0x000000000018c6ae : vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x000000000018eb59 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018f06f : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000018ecf7 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000018ecc9 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000018efe6 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000001936af : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000001936b3 : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000193ba6 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000193c6c : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000193e75 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000149f64 : vmovhps xmm6, xmm2, qword ptr [rsi - 0x76b70013] ; ret
0x00000000001936c8 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000001936cc : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000001932e7 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000193180 : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000192f82 : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000192f46 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000193449 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000019386c : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000001937cf : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000019366e : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000011d00c : vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x00000000001870d4 : vzeroupper ; ret
0x0000000000187c50 : vzeroupper ; xor eax, eax ; ret
0x00000000000eb7b4 : wait ; dec dword ptr [rax - 0x77] ; ret
0x000000000013b750 : wait ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000001388f1 : wait ; retf
0x0000000000032af8 : wait ; sbb eax, dword ptr [rax] ; ret
0x000000000004b287 : wait ; sbb r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x00000000000be2bd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be33f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be441 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000181f3f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182763 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001840af : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cf83d : xchg ah, ch ; adc eax, 0x89480000 ; retf 0xf66
0x0000000000181b2f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000182853 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182673 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018163b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013db3b : xchg al, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000008a302 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000050a37 : xchg al, ch ; adc eax, 0x89480000 ; retf 0xf66
0x00000000000a73ca : xchg al, dl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000181e4b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018955c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000188d7c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018916c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018898c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b49d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cc920 : xchg bh, cl ; add eax, 0x89490000 ; ret
0x0000000000189fa1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018b1a1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a8a1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018aba1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a299 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000bf292 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000001830bb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000184c0f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001843ef : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001818bf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000183bcf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000015ec03 : xchg byte ptr [rax - 0x76ffffff], ah ; retf 0x894c
0x0000000000181bff : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000182c13 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000181f1b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bfb55 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdee8
0x0000000000123045 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000188b2b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181feb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018472f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001823a3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000183f0f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001836ef : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000143f3a : xchg byte ptr [rbp - 0x3f7afff6], dh ; je 0x143f50 ; ret
0x00000000001848cf : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000181d9f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182df3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182583 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000018158f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001263f7 : xchg byte ptr [rbx - 0x172ceffc], cl ; and eax, 1 ; ret
0x000000000005c6cc : xchg byte ptr [rbx], ah ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000077162 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000182fd3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018198f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000018901c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018883c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c517d : xchg byte ptr [rdi], bl ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000018994c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000181e6f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000182ee3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018165f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000183a2f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000102776 : xchg byte ptr [rdx - 0x76b7fff2], bh ; ret 0x8b48
0x0000000000181701 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182825 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d2a96 : xchg byte ptr [rdx], ch ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000182915 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182735 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c07c3 : xchg byte ptr [rdx], dl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005df59 : xchg byte ptr [rip + 0x3d8d4800], dl ; ret
0x0000000000181a5f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000062d6c : xchg byte ptr [rsi + rcx - 0x76b80000], bh ; retf 0x30be
0x000000000018a546 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183b65 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184865 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b446 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018ab46 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a846 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000184385 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188f1d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a23e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018984d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181ccf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182493 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001863bf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001861df : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186bb7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185ad7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001869d7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000172cbf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000184ba5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183ea5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001839c5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001846c5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018906d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018888d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000181725 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000cc644 : xchg dl, bh ; add eax, 0x89490000 ; ret
0x0000000000182645 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182465 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182555 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182375 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000002daf7 : xchg dword ptr [rax + 0x39480000], esp ; ret
0x0000000000083eb5 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000a17a4 : xchg dword ptr [rax + rax], edx ; call qword ptr [rax]
0x0000000000080c3b : xchg dword ptr [rax - 0x76ffffed], eax ; ret 0xc083
0x000000000007ab3b : xchg dword ptr [rax - 0x76fffff1], esi ; ret 0xc083
0x0000000000082846 : xchg dword ptr [rax - 0x76fffff8], edx ; ret 0xc083
0x0000000000074819 : xchg dword ptr [rax - 0x76fffffe], ebp ; ret 0xc083
0x00000000000d7d9c : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000001225d5 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000018cfcc : xchg dword ptr [rax], eax ; vzeroupper ; ret
0x00000000000bfcee : xchg dword ptr [rbp + 0x4cd575c9], eax ; mov eax, eax ; ret
0x0000000000067db7 : xchg dword ptr [rbp - 0x76ffffd4], esp ; retf 0xc183
0x000000000006cde7 : xchg dword ptr [rbx - 0x76fffff0], esp ; ret 0xc083
0x0000000000073de7 : xchg dword ptr [rbx - 0x76fffffb], ebx ; ret 0xc083
0x000000000007bd84 : xchg dword ptr [rbx - 0x76fffffb], edi ; ret 0xc083
0x0000000000075678 : xchg dword ptr [rbx - 0x76fffffd], ebp ; ret 0xc083
0x0000000000116b17 : xchg dword ptr [rcx + rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000001102f5 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000006a568 : xchg dword ptr [rcx - 0x76ffffee], esi ; retf 0xc183
0x0000000000081a32 : xchg dword ptr [rcx - 0x76fffff6], edx ; ret 0xc083
0x000000000007b372 : xchg dword ptr [rcx - 0x76fffff7], esp ; ret 0xc083
0x000000000007c733 : xchg dword ptr [rcx - 0x76fffffe], edi ; ret 0xc083
0x000000000014d432 : xchg dword ptr [rcx - 0x77000000], ebx ; retf 0x8b48
0x00000000000d5625 : xchg dword ptr [rcx], edx ; add byte ptr [rbp - 0x77], al ; ret 0x8341
0x0000000000073a98 : xchg dword ptr [rdi - 0x76fffff7], edi ; ret 0xc083
0x0000000000082882 : xchg dword ptr [rdi - 0x76fffff8], eax ; ret 0xc083
0x0000000000096a18 : xchg dword ptr [rdx + 0x15], ebp ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000058321 : xchg dword ptr [rdx - 0x77000000], ebp ; retf 0xc183
0x0000000000058341 : xchg dword ptr [rdx - 0x77000000], ebx ; retf 0xc183
0x0000000000058361 : xchg dword ptr [rdx - 0x77000000], ecx ; retf 0xc183
0x0000000000058301 : xchg dword ptr [rdx - 0x77000000], edi ; retf 0xc183
0x000000000005dedd : xchg dword ptr [rip + 0x3d8d4800], edx ; ret
0x000000000006ac89 : xchg dword ptr [rip - 0x76ffffcb], eax ; retf 0xc183
0x000000000007ab11 : xchg dword ptr [rip - 0x76ffffea], ebx ; ret 0xc083
0x000000000007b8da : xchg dword ptr [rip - 0x76fffff5], ebx ; ret 0xc083
0x000000000007a23d : xchg dword ptr [rsi - 0x76ffffe3], ecx ; ret 0xc083
0x0000000000090205 : xchg dword ptr [rsi - 0x76ffffff], ebp ; ret 0xc083
0x0000000000185718 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000e1baa : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004e279 : xchg eax, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000007905a : xchg eax, ebp ; clc ; idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000007a68d : xchg eax, ebp ; enter -6, -1 ; call 0x76907
0x0000000000056df5 : xchg eax, ebp ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x00000000000abfcf : xchg eax, ebp ; idiv edi ; add rsp, 8 ; ret
0x00000000000abac7 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x0000000000146141 : xchg eax, ebp ; or al, byte ptr [rax] ; syscall
0x00000000001461f8 : xchg eax, ebp ; or al, byte ptr [rax] ; test rax, rax ; jne 0x146210 ; ret
0x0000000000113b27 : xchg eax, ebp ; or dword ptr [rdx], ecx ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000135853 : xchg eax, ebp ; or eax, dword ptr [rax] ; syscall
0x000000000013bdd9 : xchg eax, ebp ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000004d4e0 : xchg eax, ebp ; ret
0x000000000019a060 : xchg eax, ebp ; ret 0x145
0x0000000000140dd9 : xchg eax, ebp ; ret 0x2144
0x000000000011a72c : xchg eax, ebp ; ret 0x2f3c
0x00000000001964ea : xchg eax, ebp ; ret 0x3145
0x00000000000a59cf : xchg eax, ebp ; ret 0x3840
0x000000000008454b : xchg eax, ebp ; ret 0x5389
0x000000000006fb44 : xchg eax, ebp ; ret 0x8341
0x000000000009b8f0 : xchg eax, ebp ; ret 0x8348
0x0000000000044a2c : xchg eax, ebp ; ret 0x8440
0x000000000004d235 : xchg eax, ebp ; ret 0x8941
0x0000000000046c6d : xchg eax, ebp ; ret 0x8948
0x000000000005b887 : xchg eax, ebp ; ret 0x941
0x000000000005b4db : xchg eax, ebp ; ret 0xb60f
0x0000000000196ad3 : xchg eax, ebp ; ret 0xc031
0x000000000011a7ec : xchg eax, ebp ; ret 0xc084
0x000000000004e4b3 : xchg eax, ebp ; ret 0xc220
0x00000000000ab985 : xchg eax, ebp ; ret 0xc839
0x00000000000d3a98 : xchg eax, ebp ; ret 0xc985
0x00000000000fae41 : xchg eax, ebp ; ret 0xca09
0x00000000000f1954 : xchg eax, ebp ; ret 0xd201
0x00000000000c3fee : xchg eax, ebp ; ret 0xd284
0x0000000000112cea : xchg eax, ebp ; ret 0xd321
0x00000000001962f1 : xchg eax, ebp ; ret 0xd348
0x000000000019a392 : xchg eax, ebp ; ret 0xdb31
0x00000000000c23a8 : xchg eax, ebp ; ret 0xdeb
0x000000000019a555 : xchg eax, ebp ; ret 0xf45
0x000000000011a5e8 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000065f59 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbp ; ret
0x0000000000105b62 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000026a93 : xchg eax, ebp ; sbb al, 0 ; ret
0x0000000000063f07 : xchg eax, ebp ; sbb byte ptr [rax], al ; syscall
0x00000000000bfe7f : xchg eax, ebp ; test edx, edx ; jne 0xbfe65 ; ret
0x000000000008aac3 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000190a34 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000000b9ebc : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001694a2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000008baf8 : xchg eax, ebx ; nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000746ee : xchg eax, ebx ; ret
0x000000000003a79e : xchg eax, ebx ; ret 0x3948
0x0000000000048233 : xchg eax, ebx ; ret 0x3949
0x00000000000a921a : xchg eax, ebx ; ret 0x841
0x00000000000cb601 : xchg eax, ebx ; ret 0x844
0x00000000000f08ec : xchg eax, ebx ; ret 0x8445
0x00000000000a8365 : xchg eax, ebx ; ret 0x845
0x000000000004844f : xchg eax, ebx ; ret 0x854d
0x000000000015b197 : xchg eax, ebx ; ret 0xd108
0x00000000000a9214 : xchg eax, ebx ; ror byte ptr [rcx + rdi - 0x21], 0xf ; xchg eax, ebx ; ret 0x841
0x00000000000888bf : xchg eax, ebx ; xor r8d, r8d ; mov rax, r8 ; ret
0x0000000000050770 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000cd0b0 : xchg eax, ecx ; add eax, 0x74db8500 ; sbb dword ptr [rcx], edi ; ret
0x0000000000067a1e : xchg eax, ecx ; add rax, rcx ; jmp rax
0x0000000000055fa2 : xchg eax, ecx ; add rdx, r9 ; jmp rdx
0x0000000000083fb5 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x0000000000131f0b : xchg eax, ecx ; idiv edi ; call qword ptr [rax - 0x3c0776b8]
0x0000000000184cb1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000152dbb : xchg eax, ecx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret 0xbeeb
0x00000000001833df : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000e4a2b : xchg eax, edi ; adc byte ptr [rax], al ; syscall
0x0000000000029621 : xchg eax, edi ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x0000000000043cc0 : xchg eax, edi ; add r10, r15 ; jmp r10
0x0000000000043b92 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000145fef : xchg eax, edi ; or al, byte ptr [rax] ; syscall
0x000000000015637f : xchg eax, edi ; or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001355c7 : xchg eax, edi ; or eax, dword ptr [rax] ; syscall
0x0000000000140dca : xchg eax, edi ; ret
0x00000000001330c5 : xchg eax, edi ; ret 0x840
0x00000000001458c6 : xchg eax, edi ; ret 0x8440
0x000000000014e95a : xchg eax, edi ; ret 0xb75
0x000000000014e967 : xchg eax, edi ; ret 0xd284
0x000000000012d5b9 : xchg eax, edi ; ret 0xda80
0x0000000000102b3f : xchg eax, edi ; ret 0xf983
0x000000000010316f : xchg eax, edi ; ret 0xfe83
0x00000000001251da : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000053398 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000d9d9f : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x000000000014b212 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000058147 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012c1ac : xchg eax, edx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a291a : xchg eax, edx ; push rdx ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000198328 : xchg eax, edx ; ret
0x00000000000c62fe : xchg eax, edx ; ret 0x2040
0x0000000000058834 : xchg eax, edx ; ret 0x8948
0x000000000019835a : xchg eax, edx ; ret 0x894d
0x000000000014edc7 : xchg eax, edx ; ret 0x8b48
0x000000000014edba : xchg eax, edx ; ret 0xb75
0x00000000000d791d : xchg eax, edx ; ret 0xc283
0x00000000000a20b7 : xchg eax, edx ; ret 0xf083
0x0000000000186d78 : xchg eax, edx ; ret 0xf40
0x00000000000e889a : xchg eax, edx ; retf 0xfff3
0x0000000000064135 : xchg eax, edx ; sbb byte ptr [rax], al ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x000000000006418b : xchg eax, edx ; sbb byte ptr [rax], al ; syscall
0x000000000004c249 : xchg eax, edx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000182137 : xchg eax, edx ; sub eax, edx ; ret
0x00000000000e4b6b : xchg eax, esi ; adc byte ptr [rax], al ; syscall
0x0000000000093a84 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000190d32 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000152e76 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000170263 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000116b8b : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret 0x8941
0x00000000000bf324 : xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000005826e : xchg eax, esi ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x000000000009cbe6 : xchg eax, esi ; fist word ptr [rax + rax] ; syscall
0x0000000000190def : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190d4d : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000146107 : xchg eax, esi ; or al, byte ptr [rax] ; syscall
0x0000000000156473 : xchg eax, esi ; or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001356ab : xchg eax, esi ; or eax, dword ptr [rax] ; syscall
0x0000000000057c76 : xchg eax, esi ; push rdi ; sbb dword ptr [rax], eax ; syscall
0x00000000000aa26d : xchg eax, esi ; ret
0x00000000000a2486 : xchg eax, esi ; ret 0x3145
0x00000000000aa267 : xchg eax, esi ; ret 0x3948
0x00000000000d5609 : xchg eax, esi ; ret 0x3ee9
0x00000000000d994f : xchg eax, esi ; ret 0x6348
0x000000000013f56b : xchg eax, esi ; ret 0x8341
0x00000000000cdaa3 : xchg eax, esi ; ret 0xc085
0x0000000000137b93 : xchg eax, esi ; ret 0xc8b
0x00000000000cdaf7 : xchg eax, esi ; ret 0xd284
0x00000000000d58b1 : xchg eax, esi ; ret 0xe1e9
0x00000000000a2435 : xchg eax, esi ; ret 0xf631
0x000000000005d106 : xchg eax, esi ; ret 0xffff
0x00000000000a103e : xchg eax, esi ; retf
0x0000000000190d9e : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004141d : xchg eax, esi ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000d3a29 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000162a28 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000143463 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3be9
0x000000000014340b : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x9be9
0x000000000014301b : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0xd889
0x0000000000162062 : xchg eax, esp ; and al, 0xb5 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000013b7a8 : xchg eax, esp ; jne 0x13b7b4 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000c93e4 : xchg eax, esp ; jrcxz 0xc93ee ; push qword ptr [rcx] ; fisttp dword ptr [rcx - 0x77] ; ret 0xcfe9
0x00000000001462c3 : xchg eax, esp ; or al, byte ptr [rax] ; syscall
0x0000000000186319 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001359ab : xchg eax, esp ; or eax, dword ptr [rax] ; syscall
0x000000000014cfd9 : xchg eax, esp ; rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x00000000000335ea : xchg eax, esp ; ret
0x0000000000163fb6 : xchg eax, esp ; ret 0x1389
0x0000000000108751 : xchg eax, esp ; ret 0x1589
0x0000000000054405 : xchg eax, esp ; ret 0x2040
0x00000000001967f2 : xchg eax, esp ; ret 0x2041
0x0000000000111f54 : xchg eax, esp ; ret 0x2044
0x00000000000570da : xchg eax, esp ; ret 0x2ae9
0x0000000000062758 : xchg eax, esp ; ret 0x3145
0x00000000000ab8d7 : xchg eax, esp ; ret 0x3840
0x0000000000084f73 : xchg eax, esp ; ret 0x3b48
0x000000000006d859 : xchg eax, esp ; ret 0x68e9
0x0000000000056b09 : xchg eax, esp ; ret 0x7c8b
0x00000000000f0b04 : xchg eax, esp ; ret 0x8040
0x0000000000107f63 : xchg eax, esp ; ret 0x8341
0x0000000000199a82 : xchg eax, esp ; ret 0x8440
0x00000000001970ac : xchg eax, esp ; ret 0x8441
0x0000000000062310 : xchg eax, esp ; ret 0x8545
0x00000000000fd4ff : xchg eax, esp ; ret 0x8548
0x00000000000e606d : xchg eax, esp ; ret 0x854d
0x00000000001080a3 : xchg eax, esp ; ret 0x8944
0x00000000000d9ad9 : xchg eax, esp ; ret 0x8d48
0x0000000000142c34 : xchg eax, esp ; ret 0xa3c
0x00000000000a248f : xchg eax, esp ; ret 0xb60f
0x00000000000d3ad7 : xchg eax, esp ; ret 0xc031
0x00000000000fcc66 : xchg eax, esp ; ret 0xc283
0x00000000000f2db0 : xchg eax, esp ; ret 0xd009
0x00000000001014b1 : xchg eax, esp ; ret 0xd020
0x00000000000a20c0 : xchg eax, esp ; ret 0xd084
0x0000000000027234 : xchg eax, esp ; ret 0xd284
0x0000000000142bfd : xchg eax, esp ; ret 0xd308
0x0000000000112866 : xchg eax, esp ; ret 0xd321
0x00000000000d3c1b : xchg eax, esp ; ret 0xd338
0x00000000000aba35 : xchg eax, esp ; ret 0xf039
0x0000000000062e69 : xchg eax, esp ; ret 0xf45
0x00000000000f7cb2 : xchg eax, esp ; ret 0xf66
0x00000000001387b2 : xchg eax, esp ; ret 0xf741
0x00000000000ec486 : xchg eax, esp ; ret 0xf883
0x0000000000056cb5 : xchg eax, esp ; ret 0xf983
0x00000000000d385c : xchg eax, esp ; rol byte ptr [rcx + rbp - 0x40], 0x89 ; ret
0x0000000000026dec : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000097fb9 : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xe8 ; add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000010722d : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xf8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x000000000009f3f4 : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000015af6c : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000055503 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000186e58 : xchg eax, esp ; test al, 2 ; add byte ptr [rax + 0x63], cl ; ret 0x8348
0x000000000005df58 : xchg eax, esp ; xchg byte ptr [rip + 0x3d8d4800], dl ; ret
0x0000000000031acf : xchg ebp, ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x000000000014c278 : xchg ebx, esi ; dec dword ptr [rax - 0x75] ; jl 0x14c2ac ; adc al, ch ; retf
0x00000000000a9d89 : xchg edx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000013f5ad : xchg esi, ebx ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x000000000016936d : xlatb ; add r9, r11 ; jmp r9
0x00000000000becfc : xlatb ; jb 0xbed07 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000120207 : xlatb ; jne 0x1201ff ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e5fd1 : xlatb ; mov eax, esi ; syscall
0x00000000000e5fe0 : xlatb ; mov eax, r8d ; syscall
0x000000000013f8c9 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000005e543 : xlatb ; mov rax, r10 ; ret
0x000000000004c9b4 : xlatb ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a6141 : xlatb ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc019
0x00000000000af144 : xlatb ; ret
0x00000000000b4c37 : xlatb ; ret 0x94c
0x00000000000af12f : xlatb ; ret 0xc085
0x00000000000ad5e0 : xlatb ; ret 0xc148
0x0000000000188198 : xlatb ; ret 0xe883
0x00000000000af92b : xlatb ; ret 0xf188
0x00000000000b4db8 : xlatb ; ret 0xf66
0x0000000000188358 : xlatb ; ret 0xff2d
0x00000000000b480d : xlatb ; retf
0x00000000000d26d2 : xlatb ; retf 0x8548
0x00000000000b4d14 : xlatb ; retf 0xc148
0x000000000018717c : xlatb ; retf 0xc985
0x00000000000ac260 : xlatb ; retf 0xead3
0x00000000000d2570 : xlatb ; retf 0xf66
0x000000000018b9e9 : xlatb ; retf 0xfdc5
0x00000000000af521 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000018ba45 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000af2f3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000af7a6 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000af7d5 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x0000000000187c92 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000018b792 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000ba332 : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000018c9f7 : xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000000ba509 : xlatb ; ror dword ptr [rcx - 0x7d], cl ; call 0xffffffffcb91b45a
0x000000000019407a : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000af744 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000ad4c6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000000ad386 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000ad246 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000ad106 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000000acfc6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000000ace86 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000000acd46 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000000acc06 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000000acac6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000000ac986 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000ac846 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000ac706 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000000ac5c6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000ac486 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000ac346 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000194076 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b4bd5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b4be6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000004a62a : xlatb ; shl rdi, 0x20 ; or rax, rdi ; ret
0x00000000001220aa : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x0000000000163f3c : xlatb ; xor eax, eax ; ret
0x00000000000b9948 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b98de : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000001456e2 : xor ah, byte ptr [rax + 0x50f000a] ; pop rbp ; ret
0x00000000000e2379 : xor ah, dh ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008c9cf : xor al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000123455 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a8129 : xor al, 0 ; add byte ptr [rcx - 9], al ; ret
0x000000000007846b : xor al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000655fc : xor al, 0x18 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a5123 : xor al, 0x24 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014a950 : xor al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000af85b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x000000000005ac34 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000083d1b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000e4768 : xor al, 0xc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000a3698 : xor al, 0xdd ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000126f68 : xor al, 0xe4 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008454f : xor al, 0xe9 ; ret 0xfffc
0x00000000000c6cf5 : xor al, 0xf ; add al, ch ; ret
0x00000000000d2118 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000123165 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000843bf : xor al, 2 ; add byte ptr [rax], al ; add bl, ch ; ret 0x43c7
0x00000000000843b6 : xor al, 3 ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000001220af : xor al, al ; or eax, edx ; ret
0x00000000001234e5 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000013e10d : xor al, byte ptr [rcx - 0x77] ; ret 0xfe83
0x00000000001185b5 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000fca3f : xor al, ch ; retf
0x0000000000115a7c : xor ax, ax ; ret
0x00000000000eb0b6 : xor bh, byte ptr [rax + 1] ; ret
0x00000000000859fa : xor bh, cl ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000456b2 : xor bl, 0xf ; adc dword ptr [rdi], eax ; movd xmm0, esi ; ret
0x00000000000af37c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000012ffe2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000e892a : xor bl, byte ptr [rdx - 0x6f990005] ; xor eax, eax ; ret
0x00000000000f5311 : xor byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000d220c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000af24d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000010f567 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x000000000012a47a : xor byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000bf1c8 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000110c57 : xor byte ptr [rax + 0x106], bh ; syscall
0x0000000000116b08 : xor byte ptr [rax + 0x10], bh ; syscall
0x0000000000122987 : xor byte ptr [rax + 0x145], bh ; syscall
0x0000000000045c5e : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000008f478 : xor byte ptr [rax + 0x29], cl ; ret 0x3948
0x000000000012a47b : xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000a0518 : xor byte ptr [rax + 0x31], cl ; ret 0x8948
0x00000000000e1120 : xor byte ptr [rax + 0x39], cl ; ret 0xda72
0x000000000012c811 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x000000000002f7b3 : xor byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000012b823 : xor byte ptr [rax + 0x39], cl ; retf 0xc775
0x00000000000b479f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000009addd : xor byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000018b622 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000000b4675 : xor byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001539a5 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000000af836 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000114ae4 : xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000067cd8 : xor byte ptr [rax + rax], dl ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000bca77 : xor byte ptr [rax - 0x73], cl ; ret
0x000000000015050d : xor byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov rdi, r12 ; call rcx
0x00000000000b9b5f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011fe2f : xor byte ptr [rax - 0x77], cl ; ret 0xceb
0x0000000000114ae0 : xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000019b13a : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx - 0x18] ; retf
0x0000000000146831 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b48
0x00000000001197ba : xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000ffd4e : xor byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000119998 : xor byte ptr [rax - 0x7d], cl ; ret 0x8004
0x00000000000bf1c9 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000057f6b : xor byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x000000000008b238 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x4966
0x0000000000027216 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000049ba1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000027525 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e01b8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x00000000000bf374 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000123995 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000130120 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x130169 ; call rax
0x000000000008a50e : xor byte ptr [rax], al ; je 0x8a51c ; ret
0x00000000000be4d7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000d2210 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000d220f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000bef79 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000044306 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000943cb : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019a121 : xor byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x00000000000f9eac : xor byte ptr [rbx + rax*4], dl ; ret
0x000000000014db64 : xor byte ptr [rbx - 0x76b6fc1d], al ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d220d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000db56d : xor byte ptr [rcx + 0x17ec2], al ; add byte ptr [rax + 0x63], cl ; ret 0xd789
0x000000000019a257 : xor byte ptr [rcx + 0x21], cl ; retf
0x000000000008a56d : xor byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000006978b : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a248c : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x0000000000056771 : xor byte ptr [rcx + 1], al ; ret
0x000000000019a53a : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x0000000000078833 : xor byte ptr [rcx - 0x77], cl ; ret 0x2949
0x000000000002e59c : xor byte ptr [rcx - 0xa], al ; ret 0x7501
0x000000000011259a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001228f1 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000119b33 : xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000119af3 : xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x000000000010f568 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x000000000014b889 : xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000a47aa : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000190adf : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b4b9c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008cf48 : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000af24e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008cf47 : xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000000be268 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be27e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be2a0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2be : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be2de : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be304 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be320 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be340 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be360 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be386 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be3a8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3c6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be3e6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be402 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be422 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be442 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be462 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be488 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be4d8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be1ae : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1cc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1ec : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be20e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be22e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be24e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000be0e4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000be0f6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be10c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be124 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be13a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be14c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000be16a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be176 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000be18c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be0d0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000e3979 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x0000000000155ba3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000119b35 : xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x00000000001971fa : xor cl, byte ptr [rbp + 0x21] ; fimul dword ptr [rbp - 0x77] ; retf
0x000000000006e6ca : xor cl, ch ; ret 0xffca
0x00000000000b97c0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000007846a : xor dh, byte ptr [rdi + rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000014bab7 : xor dh, dh ; ret 0xf04
0x0000000000130e5c : xor dl, ah ; clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000007233b : xor dword ptr [rax + 0x39], ecx ; ret 0x850f
0x0000000000036c63 : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000012bd48 : xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x00000000000eb0d7 : xor dword ptr [rax + 1], edi ; ret
0x0000000000162b8e : xor dword ptr [rax - 0x75], ecx ; or byte ptr [rax + 1], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x000000000014246e : xor dword ptr [rax - 0x75], ecx ; push rbx ; adc byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8348
0x00000000000a0098 : xor dword ptr [rax - 0x77], ecx ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000011cc73 : xor dword ptr [rax - 0x77], ecx ; out dx, eax ; xor esi, esi ; call r12
0x000000000010468b : xor dword ptr [rax - 0x78], eax ; xor esi, esi ; ret 0xf02
0x00000000000ab7bb : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x000000000002b3a5 : xor dword ptr [rax - 0x7d], ecx ; ret
0x0000000000119af5 : xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x0000000000123385 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000009b8a0 : xor dword ptr [rax], ecx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000013a756 : xor dword ptr [rbp + 1], 0 ; add dh, dh ; ret 0xf04
0x000000000019c023 : xor dword ptr [rbp + 5], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000013e3f7 : xor dword ptr [rbx - 0x38b6fe18], eax ; ret 0xffff
0x0000000000122c25 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000353b8 : xor dword ptr [rcx], edi ; ret 0x820f
0x0000000000110566 : xor dword ptr [rcx], esi ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xef ; call rax
0x0000000000054f8f : xor dword ptr [rdi - 0x76b7ffea], esp ; ret 0xc148
0x00000000000d7d9b : xor dword ptr [rdi - 0x76b80000], eax ; ret 0x8548
0x000000000007873a : xor dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000154839 : xor dword ptr [rsi + rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011643b : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000193977 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a37d7 : xor eax, 0x48000eb3 ; cmove eax, edx ; ret
0x000000000011db17 : xor eax, 0x49000001 ; mov edi, dword ptr [rbp] ; call rbx
0x000000000003fd7f : xor eax, 0x7503f883 ; retf
0x0000000000114a37 : xor eax, 0x89000d54 ; ret 0x8b64
0x000000000011af65 : xor eax, 0x8948000d ; ret
0x0000000000164251 : xor eax, 0x89912 ; ret
0x00000000000a8136 : xor eax, 0xf7410000 ; ret
0x0000000000027213 : xor eax, dword ptr [0x30] ; call rax
0x0000000000027522 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000011fdeb : xor eax, dword ptr [rax + 0x75000178] ; mov rdx, rax ; jmp 0x11fe12
0x0000000000084099 : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000123485 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000123e64 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019c610 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000915c4 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012eaee : xor eax, eax ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000004b372 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d332e : xor eax, eax ; add rsp, 8 ; ret
0x00000000000372f4 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000012dd95 : xor eax, eax ; call 0x12a884
0x0000000000158a42 : xor eax, eax ; call 0x25494
0x0000000000159c91 : xor eax, eax ; call r14
0x00000000000282cb : xor eax, eax ; call rbx
0x000000000014b256 : xor eax, eax ; call rcx
0x00000000001243d8 : xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0x1243e7 ; ret
0x000000000004a66a : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x4a680 ; pop rbx ; ret
0x000000000004a669 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x4a681 ; pop rbx ; ret
0x0000000000131ae8 : xor eax, eax ; cmp dword ptr fs:[rcx], 0xb ; jne 0x131ac1 ; jmp 0x131ab1
0x0000000000097f84 : xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x00000000000972ff : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000c0c1c : xor eax, eax ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000f5246 : xor eax, eax ; mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004603d : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000010f759 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a69f : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000001169c4 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000004b40d : xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x00000000001177f4 : xor eax, eax ; mov eax, 0x127 ; syscall
0x00000000001178b4 : xor eax, eax ; mov eax, 0x128 ; syscall
0x0000000000117994 : xor eax, eax ; mov eax, 0x147 ; syscall
0x0000000000117af4 : xor eax, eax ; mov eax, 0x148 ; syscall
0x0000000000123747 : xor eax, eax ; mov eax, 0x2c ; syscall
0x0000000000123527 : xor eax, eax ; mov eax, 0x2d ; syscall
0x00000000000e5b34 : xor eax, eax ; mov eax, 0xf7 ; syscall
0x000000000015a6f1 : xor eax, eax ; mov eax, r8d ; ret
0x000000000018f260 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18f254 ; ret
0x00000000000a20ea : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000ab7db : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000016424d : xor eax, eax ; mov qword ptr [rip + 0x89912], rsi ; ret
0x00000000000d3538 : xor eax, eax ; mov qword ptr [rsp + 0x50], r12 ; call rbx
0x0000000000049f89 : xor eax, eax ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000049f7e : xor eax, eax ; mov rax, r8 ; ret
0x0000000000147d19 : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000014b15e : xor eax, eax ; mov rdi, rbx ; call rcx
0x0000000000150dfb : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000a3aef : xor eax, eax ; pop r12 ; pop r13 ; ret
0x00000000001302db : xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000014b3a0 : xor eax, eax ; pop rbp ; jmp rdx
0x0000000000029697 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000093211 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004464a : xor eax, eax ; pop rbp ; ret
0x0000000000149bf6 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000f1cae : xor eax, eax ; pop rbx ; pop rbp ; mov eax, r8d ; pop r12 ; ret
0x000000000009ce41 : xor eax, eax ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x000000000004a548 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000090a3e : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096756 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004601f : xor eax, eax ; pop rbx ; ret
0x0000000000044378 : xor eax, eax ; ret
0x00000000000ad7ee : xor eax, eax ; sub eax, ecx ; ret
0x00000000001112a8 : xor eax, eax ; syscall
0x000000000012ef3c : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x12ef59 ; pop rbx ; ret
0x000000000008fdf4 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008fe04 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000015a3c1 : xor eax, eax ; test eax, eax ; je 0x15a3f9 ; mov eax, r8d ; ret
0x000000000015a411 : xor eax, eax ; test eax, eax ; je 0x15a449 ; mov eax, r8d ; ret
0x00000000000c03c0 : xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000093a14 : xor eax, eax ; test rdx, rdx ; jne 0x93a27 ; ret
0x00000000001878b0 : xor eax, eax ; vzeroupper ; ret
0x0000000000197703 : xor eax, ebp ; add rdx, rcx ; jmp rdx
0x000000000004b07c : xor eax, ecx ; ret
0x000000000014d86c : xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000044366 : xor eax, edx ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x44351 ; ret
0x000000000004a5f7 : xor eax, edx ; sub eax, edx ; ret
0x000000000004a60a : xor eax, edx ; sub rax, rdx ; ret
0x00000000000a23f9 : xor eax, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000012216e : xor eax, esi ; dec dword ptr [rbp - 0x77] ; call 0x2e78ec6a
0x000000000012231d : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000746ec : xor ebp, ecx ; xchg eax, ebx ; ret
0x0000000000085cd7 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000057469 : xor ebx, dword ptr [rip - 0x76b70001] ; ret
0x000000000009aa8b : xor ebx, esi ; adc al, 0 ; xor edi, edi ; call qword ptr [rax]
0x000000000006f040 : xor ecx, dword ptr [rax - 0x77] ; fiadd dword ptr [rcx + 1] ; retf 0x8948
0x000000000009035e : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011d201 : xor ecx, dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000002fbb0 : xor ecx, dword ptr [rcx - 0x77] ; retf
0x0000000000114bea : xor ecx, dword ptr [rdx] ; add byte ptr [rcx], dh ; shr al, 0x8c ; ret
0x0000000000105ac6 : xor ecx, ecx ; add rsp, 8 ; mov eax, r9d ; ret
0x0000000000045528 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000d2326 : xor ecx, ecx ; cmp eax, ecx ; jne 0xd2339 ; mov eax, r9d ; ret
0x00000000000c9d20 : xor ecx, ecx ; mov eax, r9d ; ret
0x00000000000718b5 : xor ecx, ecx ; mov edx, r8d ; jmp 0x718d2
0x0000000000073d36 : xor ecx, ecx ; mov edx, r8d ; jmp 0x73d53
0x000000000003bef1 : xor ecx, ecx ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x0000000000146ab1 : xor edi, dword ptr [0x30] ; call rax
0x00000000000290db : xor edi, edi ; call 0x25354
0x000000000009aa8f : xor edi, edi ; call qword ptr [rax]
0x00000000000e0120 : xor edi, edi ; call rax
0x00000000000e0135 : xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000027240 : xor edi, edi ; mov eax, edx ; syscall
0x000000000011bb3d : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000117040 : xor edi, edi ; syscall
0x00000000000718b2 : xor edi, edi ; xor r9d, r9d ; mov edx, r8d ; jmp 0x718d5
0x0000000000073d33 : xor edi, edi ; xor r9d, r9d ; mov edx, r8d ; jmp 0x73d56
0x0000000000049b9e : xor edx, dword ptr [0x30] ; call rdx
0x000000000011060a : xor edx, edx ; call rax
0x000000000019a199 : xor edx, edx ; jmp 0x19a16b
0x0000000000124365 : xor edx, edx ; mov eax, 0x1d ; syscall
0x00000000000e5a41 : xor edx, edx ; mov eax, 0x3d ; syscall
0x0000000000142391 : xor edx, edx ; mov eax, r10d ; ret
0x000000000004b5d8 : xor edx, edx ; mov eax, r9d ; sub rsi, rdi ; syscall
0x000000000011d900 : xor edx, edx ; mov esi, 1 ; call r12
0x0000000000028338 : xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x00000000000beb83 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000087a29 : xor edx, edx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000957a6 : xor edx, edx ; pop rbx ; jmp rax
0x00000000000c06dd : xor edx, edx ; push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x000000000011638c : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x0000000000110567 : xor edx, edx ; xor esi, esi ; mov rdi, rbp ; call rax
0x00000000000d5dbd : xor esi, edi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000f3abd : xor esi, esi ; add rdx, rax ; jmp 0xf3ad5
0x0000000000039346 : xor esi, esi ; call 0x25604
0x000000000011cc77 : xor esi, esi ; call r12
0x000000000013009e : xor esi, esi ; lea edi, [rdi*8 + 2] ; syscall
0x000000000011638e : xor esi, esi ; mov eax, 0x118 ; syscall
0x000000000012ae70 : xor esi, esi ; mov edi, 0x2000004 ; call rax
0x000000000004a2d6 : xor esi, esi ; mov rdi, r9 ; call r8
0x000000000009be7d : xor esi, esi ; mov rdi, rbp ; call 0x980d7
0x0000000000110569 : xor esi, esi ; mov rdi, rbp ; call rax
0x000000000010468e : xor esi, esi ; ret 0xf02
0x0000000000115fb2 : xor esi, esi ; syscall
0x00000000000290d8 : xor esi, esi ; xor r15d, r15d ; call 0x25357
0x00000000000e0e8a : xor esp, esp ; jmp 0xe0e5c
0x00000000000d3241 : xor esp, esp ; mov rax, r12 ; pop r12 ; ret
0x00000000001104b9 : xor esp, esp ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000037b74 : xor esp, esp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009b89f : xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000019a198 : xor r10d, r10d ; jmp 0x19a16c
0x0000000000124364 : xor r10d, r10d ; mov eax, 0x1d ; syscall
0x00000000000e5a40 : xor r10d, r10d ; mov eax, 0x3d ; syscall
0x0000000000142390 : xor r10d, r10d ; mov eax, r10d ; ret
0x00000000000e0e89 : xor r12d, r12d ; jmp 0xe0e5d
0x00000000000d3240 : xor r12d, r12d ; mov rax, r12 ; pop r12 ; ret
0x00000000000290d7 : xor r14d, r14d ; xor r15d, r15d ; call 0x25358
0x00000000000290da : xor r15d, r15d ; call 0x25355
0x00000000000fca3e : xor r8b, r13b ; retf
0x0000000000197702 : xor r8d, r13d ; add rdx, rcx ; jmp rdx
0x00000000000282ca : xor r8d, r8d ; call rbx
0x0000000000131ae7 : xor r8d, r8d ; cmp dword ptr fs:[rcx], 0xb ; jne 0x131ac2 ; jmp 0x131ab2
0x00000000000c0c1b : xor r8d, r8d ; lea r9, [rsp + 0x28] ; call rbx
0x00000000001177f3 : xor r8d, r8d ; mov eax, 0x127 ; syscall
0x00000000001178b3 : xor r8d, r8d ; mov eax, 0x128 ; syscall
0x0000000000117993 : xor r8d, r8d ; mov eax, 0x147 ; syscall
0x0000000000117af3 : xor r8d, r8d ; mov eax, 0x148 ; syscall
0x0000000000123746 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000123526 : xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000000e5b33 : xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x000000000015a6f0 : xor r8d, r8d ; mov eax, r8d ; ret
0x0000000000049f88 : xor r8d, r8d ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000049f7d : xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000c9d1f : xor r9d, r9d ; mov eax, r9d ; ret
0x00000000000718b4 : xor r9d, r9d ; mov edx, r8d ; jmp 0x718d3
0x0000000000073d35 : xor r9d, r9d ; mov edx, r8d ; jmp 0x73d54
0x000000000011643a : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000027212 : xor rax, qword ptr [0x30] ; call rax
0x0000000000027521 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000027211 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000027520 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000b4f09 : xor rax, rax ; ret
0x000000000004a609 : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000146ab0 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000146aaf : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000049b9d : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000049b9c : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 22261
