Gadgets information
============================================================
0x0000000000002df7 : adc ah, ch ; clc ; ret
0x0000000000151c3f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151ca9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c3d65 : adc al, 0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000018b7c : adc al, 0 ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; retf
0x0000000000196624 : adc al, 0 ; add byte ptr [rax], al ; mov al, 0x96 ; add byte ptr [rax], al ; hlt ; retf 0xffee
0x00000000000ee04e : adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000008ef18 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000051d6e : adc al, 0 ; add byte ptr [rbx - 0x71f0cb08], al ; retf 0xfff9
0x000000000018e379 : adc al, 0 ; add byte ptr [rsp + rsi*8 - 0x17], ah ; call qword ptr [rdi]
0x000000000002e5bf : adc al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003275c : adc al, 0 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000137935 : adc al, 0x13 ; jmp rdx
0x0000000000188688 : adc al, 0x16 ; out dx, eax ; jmp qword ptr [rax]
0x000000000008e965 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000000377c1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000000242c : adc al, 0x2d ; retf
0x000000000009f5d3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000188008 : adc al, 0x3f ; out dx, al ; jmp rsp
0x000000000018bcb0 : adc al, 0x43 ; stc ; call rsp
0x000000000004a7e0 : adc al, 0x48 ; add esp, 0x38 ; ret
0x00000000000f890a : adc al, 0x48 ; add esp, 0xa0 ; pop rbx ; ret
0x000000000009cb40 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000009d9a3 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x0000000000090c2b : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x0000000000113f51 : adc al, 0x48 ; mov eax, edx ; movsxd rdx, esi ; ret
0x0000000000021a7c : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000188910 : adc al, 0x5d ; out dx, eax ; call rsp
0x0000000000188960 : adc al, 0x60 ; out dx, eax ; jmp rax
0x000000000000360a : adc al, 0x75 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000019458c : adc al, 0x76 ; add byte ptr [rax], al ; loopne 0x1945c7 ; out dx, al ; jmp qword ptr [rdi]
0x00000000001151e4 : adc al, 0x78 ; ret
0x0000000000189c08 : adc al, 0x7d ; hlt ; jmp rsp
0x000000000018c7c0 : adc al, 0x7f ; cli ; jmp rax
0x00000000000c8ccb : adc al, 0x84 ; sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x000000000011d810 : adc al, 0x88 ; add rdx, r8 ; jmp rdx
0x00000000000cef51 : adc al, 0x88 ; je 0xcef75 ; ret
0x000000000018b838 : adc al, 0x89 ; clc ; call rsp
0x000000000018c858 : adc al, 0x8a ; cli ; jmp rax
0x000000000011db06 : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000008d0b4 : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x000000000008cfe3 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000072a18 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001897f0 : adc al, 0x91 ; jmp rsp
0x00000000001530d0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001517fe : adc al, 0x91 ; sub eax, edx ; ret
0x00000000000d6f50 : adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x0000000000137931 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000450b9 : adc al, 0x96 ; add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x000000000005c276 : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000032760 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000019a29c : adc al, 0x98 ; int1 ; jmp qword ptr [rcx]
0x000000000018a91c : adc al, 0x9f ; add dword ptr [rax], eax ; retf 0xfff6
0x000000000008d567 : adc al, 0xa ; jmp r10
0x000000000008ead3 : adc al, 0xa ; sub eax, edx ; ret
0x00000000001ab67c : adc al, 0xa3 ; sti ; jmp qword ptr [rdx]
0x00000000001882d0 : adc al, 0xaa ; out dx, al ; jmp qword ptr [rax]
0x00000000000fa7e4 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000bc36a : adc al, 0xb8 ; add rdx, r8 ; jmp rdx
0x000000000018c058 : adc al, 0xb8 ; stc ; call rax
0x00000000001329f4 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000132a14 : adc al, 0xc7 ; xor eax, eax ; ret
0x000000000018b230 : adc al, 0xcc ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x0000000000199c8c : adc al, 0xcd ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xf], dl ; call qword ptr [rsi]
0x0000000000188c28 : adc al, 0xdf ; out dx, eax ; jmp qword ptr [rax]
0x000000000009ff7f : adc al, 0xe ; cmp rdi, rdx ; jb 0x9ff92 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000b2172 : adc al, 0xe ; jne 0xb216d ; ret
0x000000000014f911 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000155d4a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000018ceb0 : adc al, 0xe5 ; std ; call rsp
0x000000000018ced8 : adc al, 0xe6 ; std ; call rsp
0x0000000000002c37 : adc al, 0xe7 ; ret
0x00000000000b3308 : adc al, 0xe8 ; ret 0xfffe
0x00000000000ca171 : adc al, 0xe9 ; ret 0xfff7
0x0000000000187261 : adc al, 0xea ; call rsp
0x000000000018c1f8 : adc al, 0xea ; stc ; call rsp
0x00000000001879d1 : adc al, 0xeb ; call qword ptr [rax]
0x0000000000190975 : adc al, 0xeb ; call rdi
0x0000000000188cd0 : adc al, 0xeb ; out dx, eax ; call qword ptr [rax]
0x00000000000e1150 : adc al, 0xf ; or dword ptr [rcx + 1], 0 ; add dh, dh ; ret 0xf04
0x000000000011d986 : adc al, 0xf ; retf 0xd789
0x0000000000030428 : adc al, 0xf ; retf 0xfa83
0x000000000009d519 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001a09f9 : adc al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a0a51 : adc al, 0xf5 ; jmp qword ptr [rdx]
0x00000000000cfcd2 : adc al, 0xf5 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000708eb : adc al, 0xf6 ; ret 0x7420
0x00000000001ab545 : adc al, 0xf8 ; jmp rdx
0x0000000000198abd : adc al, 0xfc ; call qword ptr [rbx]
0x0000000000198a81 : adc al, 0xfc ; call qword ptr [rdx]
0x00000000001605d8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f70c1 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001890ad : adc al, 1 ; add byte ptr [rsi + rdi - 0xf], dl ; jmp rax
0x000000000018be5d : adc al, 2 ; add byte ptr [rax + rsi*2 - 7], ah ; jmp qword ptr [rax]
0x0000000000006ce8 : adc al, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x000000000008cdb5 : adc al, 7 ; je 0x8cdb5 ; ret
0x000000000008cce2 : adc al, 7 ; test dl, dl ; jne 0x8ccdf ; ret
0x00000000001885c0 : adc al, 8 ; out dx, eax ; jmp rax
0x0000000000041fd1 : adc al, 9 ; ret 0x8d74
0x0000000000151de7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151e51 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000009df0 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x000000000000795a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000a2e2 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000e6751 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000946fe : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000053cc5 : adc al, byte ptr [rax] ; add dh, dh ; ret 0xf40
0x00000000000349fc : adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003488c : adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000004d65a : adc al, byte ptr [rax] ; jmp rax
0x000000000004e499 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000186874 : adc al, byte ptr [rbp - 0x7b6d0005] ; sti ; call qword ptr [rdx]
0x0000000000097e74 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000186864 : adc al, byte ptr [rdi - 0x796d0005] ; sti ; call qword ptr [rdx]
0x000000000018686c : adc al, byte ptr [rsi - 0x7a6d0005] ; sti ; call qword ptr [rdx]
0x0000000000157dcf : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000007959 : adc al, byte ptr es:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000012c71c : adc al, ch ; outsb dx, byte ptr [rsi] ; ret 0xfffb
0x0000000000122ba7 : adc al, ch ; push rbx ; ret
0x00000000000223f7 : adc al, ch ; ret
0x00000000000f7d6f : adc al, ch ; ret 0
0x00000000000e80ef : adc al, ch ; retf
0x00000000000cebf8 : adc al, ch ; retf 0xf526
0x000000000004431e : adc al, ch ; sbb al, 0xcd ; std ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x000000000005500b : adc al, ch ; scasd eax, dword ptr [rdi] ; ret 0xfffc
0x0000000000198905 : adc bh, ah ; call rsp
0x0000000000198555 : adc bh, ah ; jmp qword ptr [rax]
0x000000000018b5d9 : adc bh, al ; jmp qword ptr [rax]
0x0000000000003c3f : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000005c343 : adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000188621 : adc bh, ch ; call qword ptr [rax]
0x0000000000186fe9 : adc bh, ch ; jmp qword ptr [rax + 0x20fffd13]
0x000000000010e088 : adc bh, dh ; ret 0x8080
0x000000000018c3e9 : adc bh, dl ; call rax
0x000000000018c3f1 : adc bh, dl ; jmp rsp
0x0000000000179c08 : adc bl, al ; hlt ; lcall [rip + 0x1dfff4c2] ; ret 0xfff4
0x0000000000033b88 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000fc76d : adc bl, byte ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009afe5 : adc bl, ch ; call 0xffffffffc3da393a
0x000000000009af05 : adc bl, ch ; call 0xffffffffc402385a
0x000000000009dfd5 : adc bl, ch ; call 0xffffffffc402692a
0x0000000000045b62 : adc bl, ch ; jno 0x45bb8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000009c126 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009b496 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009b507 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009b467 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002d83a : adc bl, dh ; ret
0x000000000009c125 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009b495 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000e0b24 : adc byte ptr [r10], r9b ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000007db65 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000079a86 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000165da2 : adc byte ptr [r13 + 0x5b0875c0], r8b ; ret
0x0000000000117cde : adc byte ptr [r14 + r9 + 0x48], r14b ; add esp, 8 ; ret
0x0000000000123d25 : adc byte ptr [r15], cl ; adc dword ptr [rbx], eax ; jmp 0x123cf5
0x000000000007d9fe : adc byte ptr [r8 + 0x39], r9b ; retf 0x2173
0x00000000000ed535 : adc byte ptr [r8 + 0x44102444], cl ; mov eax, edx ; syscall
0x0000000000131dd7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000107f6b : adc byte ptr [r8 + 1], cl ; retf 0x3948
0x0000000000074112 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000005bf29 : adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014a1fa : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000007ceff : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000009f54c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f56e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f5ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f62e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000007413d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000085e54 : adc byte ptr [rax + 0x1f7403fa], al ; movsx eax, dl ; ret
0x000000000009ba9a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000904b6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000009b2ba : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000011f7f7 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x000000000008406d : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5974
0x00000000000c8b4e : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000037e18 : adc byte ptr [rax + 0x39], cl ; ret 0x4872
0x000000000007d9ff : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x00000000000cd706 : adc byte ptr [rax + 0x39], cl ; retf 0x574
0x0000000000072ad2 : adc byte ptr [rax + 0x39], cl ; retf 0xffb8
0x0000000000037e17 : adc byte ptr [rax + 0x39], r9b ; ret 0x4872
0x00000000000ed536 : adc byte ptr [rax + 0x44102444], cl ; mov eax, edx ; syscall
0x0000000000131dd8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000d67bb : adc byte ptr [rax + 0x63], cl ; ret
0x00000000000ba6ad : adc byte ptr [rax + 0x63], cl ; ret 0x8944
0x0000000000118e88 : adc byte ptr [rax + 0x81], bh ; syscall
0x000000000009c897 : adc byte ptr [rax + 0xf], cl ; mov esp, 0x1d8d4cd2 ; xchg eax, ecx ; ret 0xd
0x00000000000443ec : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000025bbc : adc byte ptr [rax + 0xf], cl ; ret 0x8b49
0x00000000001251be : adc byte ptr [rax + 1], bh ; ret
0x00000000000b22ee : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000461de : adc byte ptr [rax + 1], cl ; ret
0x0000000000090c26 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000073527 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000107f6c : adc byte ptr [rax + 1], cl ; retf 0x3948
0x00000000001251bd : adc byte ptr [rax + 1], dil ; ret
0x0000000000195b88 : adc byte ptr [rax + rax - 0x1187cc00], cl ; call qword ptr [rdx]
0x000000000006a444 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a9203 : adc byte ptr [rax + rax], bh ; add byte ptr [rax], al ; nop ; ret 1
0x00000000001048a3 : adc byte ptr [rax + rdx + 0x5b], dh ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000009f754 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009f652 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f5d0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000012e873 : adc byte ptr [rax - 0x39], cl ; ret
0x00000000000f9e05 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000fa7e1 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002d833 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ef4d2 : adc byte ptr [rax - 0x73], cl ; add eax, 0x2c7be6 ; pop rbx ; ret
0x00000000000faa05 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000021a7f : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000b36f4 : adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000011d43f : adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rcx
0x0000000000072452 : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000005bf2a : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000011dafd : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000009acbc : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000002acd8 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000071df7 : adc byte ptr [rax - 0x77], cl ; jo 0x71e15 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000082cb4 : adc byte ptr [rax - 0x77], cl ; neg dword ptr [rbx - 0x17] ; ret 0xffb5
0x0000000000036811 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x0000000000071db7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000024067 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000003b4e8 : adc byte ptr [rax - 0x77], cl ; ret 0x2275
0x000000000004899f : adc byte ptr [rax - 0x77], cl ; ret 0x775
0x000000000003beb4 : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000080a43 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008866d : adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000008189a : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000104ac5 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000120f06 : adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x000000000003b4fd : adc byte ptr [rax - 0x77], cl ; ret 0xed74
0x000000000003b6d9 : adc byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007cf00 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000014a1fb : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000146bb7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000146bf3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000096a64 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000564a3 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007eda3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000090990 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000ffed5 : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000028420 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000000001115ce : adc byte ptr [rax - 0x7d], cl ; ret 0xe841
0x00000000000f2f33 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000000031e : adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x00000000000de8a3 : adc byte ptr [rax - 1], bh ; ret
0x00000000000ed31d : adc byte ptr [rax], al ; add bl, dh ; ret
0x0000000000151892 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000014f960 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000014fb00 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x0000000000156288 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000154061 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151ff1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000f8b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000004be2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000062aa : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000eaec3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000054f26 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000199260 : adc byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret 0
0x000000000011ce11 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x11cde7
0x00000000000e8634 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000038d0c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000011ba42 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, ebx ; call 0xf7d18
0x0000000000198730 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov esp, 0x80000b7 ; retf
0x000000000011d7aa : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001a9a04 : adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 1
0x000000000011be45 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a05bc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001992c4 : adc byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a99c8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; retf 1
0x000000000006b021 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017b36d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000017b38d : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000000ed47b : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000008f398 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e9326 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006a6a9 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000001427a8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000ff713 : adc byte ptr [rax], al ; je 0xff726 ; xor eax, eax ; ret
0x0000000000042176 : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x0000000000023228 : adc byte ptr [rax], al ; mov rdi, r14 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000002a337 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x0000000000022c36 : adc byte ptr [rax], al ; mov rdi, rbx ; call r15
0x000000000006b8d4 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006c6f1 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006c689 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000042bd6 : adc byte ptr [rax], al ; ret
0x00000000001ad5e0 : adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000009f54d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f56f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f5ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f62f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009f731 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000186270 : adc byte ptr [rax], dh ; sti ; call rax
0x00000000000811b4 : adc byte ptr [rax], dl ; add al, ch ; hlt ; retf
0x00000000000e9325 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a86e : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000165da3 : adc byte ptr [rbp + 0x5b0875c0], al ; ret
0x00000000000a1f42 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000199c90 : adc byte ptr [rbp - 0xf], dl ; call qword ptr [rsi]
0x00000000001048a5 : adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x000000000006c8d9 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002acb5 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007db66 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d67e0 : adc byte ptr [rbx + 0x634801c3], al ; ret
0x00000000000b8a48 : adc byte ptr [rbx + 0x634830ea], al ; retf 0x6b48
0x00000000000b70cd : adc byte ptr [rbx + 0x634830ea], al ; retf 0x8d48
0x000000000019cdef : adc byte ptr [rbx + 0x80e4c02], al ; ret
0x00000000001a0cd7 : adc byte ptr [rbx + 0x80e5302], al ; ret
0x00000000001aaf6b : adc byte ptr [rbx + 0x80e5402], al ; ret
0x00000000001a6eef : adc byte ptr [rbx + 0x80e5902], al ; ret
0x00000000001a3db2 : adc byte ptr [rbx + 0x80e5b02], al ; ret
0x0000000000190c77 : adc byte ptr [rbx + 0x80e6202], al ; ret
0x0000000000196877 : adc byte ptr [rbx + 0x80e6402], al ; ret
0x00000000001a0cbc : adc byte ptr [rbx + 0x80e6702], al ; ret
0x0000000000079a87 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000018633c : adc byte ptr [rbx + rdi*8], dh ; inc dword ptr [rax] ; sti ; call rax
0x000000000007cb82 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000758c7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x758e1 ; ret
0x0000000000118eec : adc byte ptr [rbx - 0x3fce0010], al ; ret
0x00000000001aba6b : adc byte ptr [rbx - 0x4ff1b1fe], al ; or al, byte ptr [rdx] ; retf
0x00000000001138da : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x0000000000106c7b : adc byte ptr [rbx - 0x7cb603ba], cl ; ret
0x000000000010420e : adc byte ptr [rbx - 0x7d], bl ; loopne 0x104227 ; pop rbp ; pop r12 ; ret
0x00000000001862d8 : adc byte ptr [rbx], dh ; sti ; push rax ; xor al, 0xfb ; call rax
0x000000000007413e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000011f84f : adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x000000000011f804 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000ce93c : adc byte ptr [rcx + 0x39], al ; ret 0xc375
0x0000000000104394 : adc byte ptr [rcx + rcx*4 + 0x40], cl ; or byte ptr [rax - 0x77], cl ; retf 0x8949
0x00000000000fef66 : adc byte ptr [rcx + rcx*4 - 0x12], cl ; xor r15d, r15d ; call rax
0x0000000000074e53 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ed53a : adc byte ptr [rcx + rcx*4 - 0x30], al ; syscall
0x00000000001989e0 : adc byte ptr [rcx - 0x10], bh ; call qword ptr [rdx]
0x000000000009f6b2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009f692 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000196088 : adc byte ptr [rcx - 0x6e2c0000], dl ; out dx, al ; call rsi
0x00000000000ff8c9 : adc byte ptr [rcx - 0x77], al ; ret
0x000000000011ff05 : adc byte ptr [rcx - 0x77], al ; retf
0x000000000011fd24 : adc byte ptr [rcx - 0x77], al ; ror byte ptr [rax - 0x76b701ab], 1 ; ret 0xc148
0x000000000011fcfd : adc byte ptr [rcx - 0x77], al ; ror dword ptr [rax - 0x76b705ab], 1 ; retf 0xc148
0x0000000000026222 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x0000000000028999 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x0000000000040dc6 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000a5228 : adc byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000016447e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000007dab7 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000014f993 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000153537 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000e7386 : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x00000000000d465f : adc byte ptr [rcx - 9], al ; ret 0x30f
0x000000000018cbed : adc byte ptr [rcx], al ; add ah, al ; out 0xfc, al ; jmp rsp
0x000000000019e055 : adc byte ptr [rcx], al ; add al, bl ; push rcx ; hlt ; call rsp
0x0000000000054398 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000126877 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034f04 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f79e1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000189045 : adc byte ptr [rcx], al ; add byte ptr [rsp + rbx*4 - 0x10], ah ; jmp qword ptr [rax]
0x00000000000ae339 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001179d8 : adc byte ptr [rcx], al ; je 0x117a08 ; add rsp, 8 ; ret
0x00000000001179d7 : adc byte ptr [rcx], al ; je 0x117a09 ; add rsp, 8 ; ret
0x00000000000ac6d3 : adc byte ptr [rcx], al ; retf 0x894c
0x0000000000155420 : adc byte ptr [rcx], bh ; retf 0x557f
0x00000000000b3df3 : adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000387be : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007cb85 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000074a87 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ede6d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xedea9 ; ret
0x00000000000ff077 : adc byte ptr [rdi + 0x2000004], bh ; call rcx
0x0000000000178cfc : adc byte ptr [rdi - 0xe], cl ; jmp qword ptr [rax]
0x0000000000186490 : adc byte ptr [rdi - 5], 0xff ; pop rcx ; sti ; jmp qword ptr [rax]
0x0000000000123d26 : adc byte ptr [rdi], cl ; adc dword ptr [rbx], eax ; jmp 0x123cf4
0x000000000002dc25 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000001083aa : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000781e8 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000011d8f9 : adc byte ptr [rdi], cl ; retf 0x5089
0x000000000011d9c4 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000011d94a : adc byte ptr [rdi], cl ; retf 0xd189
0x0000000000030419 : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000011dd1c : adc byte ptr [rdi], cl ; retf 0xd789
0x00000000000a9461 : adc byte ptr [rdi], cl ; test dl, bh ; or eax, 0xb8480000 ; ret 0xffff
0x0000000000149c98 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000015e703 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000150b81 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000150c71 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000150a91 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000158f2b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157a2f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000158c2f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015832f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015862f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157d27 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001514d9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000151031 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001507c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000151211 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001509a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001513f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000151301 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000150c43 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150d33 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150b53 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157fd4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158bd4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158ed4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001585d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001582d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000157ccc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001508b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001547dd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001545fd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000154fd5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000153ef5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000154df5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000150a63 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150883 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150973 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150793 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000e8e39 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000000df3cf : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x0000000000042d61 : adc byte ptr [rdi], dh ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x00000000001862c0 : adc byte ptr [rdi], dh ; sti ; jmp rax
0x0000000000003a89 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000195123 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001a1988 : adc byte ptr [rdx + 1], cl ; add byte ptr [rsp + rbx*2 - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000137e29 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000946fd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000c6419 : adc byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000019c910 : adc byte ptr [rdx], ch ; call rcx
0x00000000000e0b25 : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000015bc4b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000186234 : adc byte ptr [rdx], dh ; sti ; push rax ; xor edi, ebx ; call rax
0x0000000000186350 : adc byte ptr [rip + 0x19c0fffb], 0xfb ; call qword ptr [rax]
0x000000000015516f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000015bafa : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000015b0f5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015b4f5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4c9
0x000000000015b573 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15b547
0x000000000015ba05 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15b9d9
0x000000000015ba83 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15ba57
0x000000000015cb25 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15caf9
0x000000000015cba3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15cb77
0x000000000015d035 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15d009
0x000000000015d0b3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15d087
0x000000000015b4f0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4ce
0x000000000015b56e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b54c
0x000000000015ba00 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b9de
0x000000000015ba7e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15ba5c
0x000000000015cb20 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15cafe
0x000000000015cb9e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15cb7c
0x000000000015d030 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15d00e
0x000000000015d0ae : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15d08c
0x000000000008d6b5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000914eb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009b67b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000000b150 : adc byte ptr [rsi + 0xf], bh ; add byte ptr [rax], al ; retf 0
0x000000000009b67a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000117cdf : adc byte ptr [rsi + rcx + 0x48], dh ; add esp, 8 ; ret
0x0000000000194025 : adc byte ptr [rsi + rcx + 8], al ; ret
0x0000000000196d88 : adc byte ptr [rsi - 0x179c0000], bl ; out dx, al ; jmp qword ptr [rcx]
0x0000000000186500 : adc byte ptr [rsi - 5], bl ; jmp rax
0x000000000014532d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000019dbb0 : adc byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rcx]
0x00000000000b317a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000046f5f : adc byte ptr [rsp - 4], al ; ret
0x0000000000046fa5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000038a86 : adc byte ptr [rsp], al ; jne 0x38a99 ; add rsp, 0x18 ; ret
0x0000000000038ad3 : adc byte ptr [rsp], al ; jne 0x38ae6 ; add rsp, 0x18 ; ret
0x0000000000157fd7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186fe5 : adc ch, bh ; jmp qword ptr [rax]
0x0000000000185f84 : adc ch, ch ; cld ; push rax ; out dx, al ; cld ; jmp qword ptr [rax]
0x00000000001a0805 : adc ch, dh ; call qword ptr [rax]
0x00000000001a0869 : adc ch, dh ; call qword ptr [rdx]
0x000000000008d4b5 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000b3b28 : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000000ef7fb : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000018685c : adc cl, byte ptr [rax - 0x786d0005] ; sti ; call qword ptr [rdx]
0x000000000004a7bf : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000009aef5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000cf37d : adc cl, byte ptr [rbp + rcx*4 + 0x75] ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000053a5d : adc cl, byte ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x8f ; ret 0x10
0x0000000000000970 : adc cl, byte ptr [rcx + rax] ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x0000000000100b02 : adc cl, byte ptr [rcx - 0x77] ; ror byte ptr [rax - 0x3f], 1 ; loop 0x100b15 ; jmp 0x100ad8
0x00000000000d3146 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4101
0x000000000012c7da : adc cl, ch ; ret
0x00000000000df5db : adc cl, ch ; retf 0xfffe
0x00000000001a091d : adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a08c5 : adc dh, ch ; jmp rax
0x000000000011c532 : adc dh, dh ; ret 0x7401
0x000000000006d9f5 : adc dh, dh ; ret 0x7420
0x0000000000080056 : adc dh, dh ; ret 0xf0f
0x0000000000188620 : adc dil, r13b ; call qword ptr [rax]
0x0000000000002732 : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000019fe80 : adc dl, ch ; hlt ; jmp qword ptr [rcx]
0x000000000006e8fb : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000011e0e0 : adc dword ptr [rax - 0x17ffffde], -0x1a ; ret
0x000000000007412f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002cb3e : adc dword ptr [rax - 0x73], ecx ; add eax, 0x150733 ; ret
0x00000000000ee0e3 : adc dword ptr [rax - 0x76b6ffd4], edi ; retf 0x8b
0x0000000000037f2e : adc dword ptr [rax - 0x77], ecx ; ret
0x00000000000c8d89 : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000d2972 : adc dword ptr [rax - 0x77], ecx ; retf 0x8948
0x000000000008ab56 : adc dword ptr [rax - 0x7d], ecx ; jmp 0xffffffffcb41f469
0x000000000008ac4d : adc dword ptr [rax - 0x7d], ecx ; jmp 0xffffffffcb41f560
0x000000000003153f : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000008afa8 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ad537 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000000000008c454 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000015657b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000042174 : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x000000000003b113 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; retf
0x0000000000151f87 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153ef9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007282 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000063ca : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000016550b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000e66a1 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000008f218 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004ef65 : adc dword ptr [rax], eax ; add byte ptr [rbx - 0x78f0d008], al ; retf 0x11
0x00000000000c45da : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000005a1fb : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000063e19 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000063c0a : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000063adc : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x0000000000027519 : adc dword ptr [rbp + 0x29], ecx ; retf 0x8945
0x00000000000d0f28 : adc dword ptr [rbp + rcx*4 + 0x7b], eax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000892ae : adc dword ptr [rbp - 0x7c], eax ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000d6694 : adc dword ptr [rbx + 0x634801c0], eax ; ror byte ptr [rax + 0x39], 1 ; retf 0xf072
0x0000000000038ce2 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000123d28 : adc dword ptr [rbx], eax ; jmp 0x123cf2
0x00000000000a01f8 : adc dword ptr [rbx], eax ; ret
0x00000000000a0171 : adc dword ptr [rbx], esp ; ret
0x00000000000d165e : adc dword ptr [rcx + 0x63], ecx ; ret 0x48b
0x000000000015d927 : adc dword ptr [rcx + 7], edi ; ret
0x000000000007d93e : adc dword ptr [rcx + rax*2 + 0x48], esi ; mov dword ptr [rsi], ecx ; ret
0x0000000000112e88 : adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a016c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000015d5c2 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000015d586 : adc dword ptr [rcx - 1], edi ; ret
0x000000000018cb25 : adc dword ptr [rcx], eax ; add byte ptr [rsp + rbx*2 - 5], ah ; call rsp
0x0000000000112c66 : adc dword ptr [rcx], edi ; retf 0x470f
0x000000000012510a : adc dword ptr [rdi + 0x20], eax ; ret
0x00000000000e6852 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000001250d2 : adc dword ptr [rdi + 0x30], eax ; ret
0x00000000000a01f3 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000e6856 : adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000035870 : adc dword ptr [rdi + 0x60], eax ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000035874 : adc dword ptr [rdi + 0x70], eax ; ret
0x00000000000e6b66 : adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e748b : adc dword ptr [rdi + 0xf8], eax ; ret
0x0000000000121da2 : adc dword ptr [rdi + 8], eax ; ret
0x0000000000113c60 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x000000000009ff33 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000a00d5 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000a00da : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000a00b2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000a00b7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000015da89 : adc dword ptr [rdi - 8], edi ; ret
0x000000000009ff30 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000cfce7 : adc dword ptr [rdi], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033f84 : adc dword ptr [rdi], ecx ; ret
0x0000000000033f65 : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00000000000342d2 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000000899e7 : adc dword ptr [rdi], ecx ; test dword ptr [rdx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015dcdc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000008cc7b : adc dword ptr [rdx + rdx*8 + 0x38442074], eax ; retf 0xf41
0x000000000018bde5 : adc dword ptr [rdx], eax ; add ah, dl ; stc ; call rax
0x0000000000121dbb : adc dword ptr [rdx], eax ; ret
0x00000000000e6b16 : adc dword ptr [rsi + 0x70], eax ; ret
0x000000000015de0f : adc dword ptr [rsi + 3], edx ; ret
0x000000000015deac : adc dword ptr [rsi + 7], edx ; ret
0x000000000015dcae : adc dword ptr [rsi - 1], edx ; ret
0x0000000000164d96 : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000063adb : adc dword ptr ds:[rax], eax ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x0000000000151f86 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000085cb4 : adc eax, 0x107d7 ; cmovne rax, rdx ; ret
0x00000000000b22ea : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000861f4 : adc eax, 0x11eb7 ; cmovne rax, rdx ; ret
0x0000000000186ff1 : adc eax, 0x16a0fffd ; std ; jmp qword ptr [rax]
0x0000000000186351 : adc eax, 0x19c0fffb ; sti ; call qword ptr [rax]
0x0000000000165607 : adc eax, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012f527 : adc eax, 0x286024 ; add rsp, 8 ; ret
0x0000000000126f99 : adc eax, 0x2921a2 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000000f0bd9 : adc eax, 0x2c6672 ; add rsp, 8 ; ret
0x00000000000f0baa : adc eax, 0x2c66a1 ; ret
0x0000000000126637 : adc eax, 0x2e94 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000174de4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000007d793 : adc eax, 0x336b38 ; ret
0x0000000000028575 : adc eax, 0x358d4800 ; ret
0x000000000010527c : adc eax, 0x37a9f ; cmovne rax, rdx ; ret
0x00000000001050dc : adc eax, 0x37c5f ; cmovne rax, rdx ; ret
0x0000000000035b8d : adc eax, 0x37e616 ; ret
0x000000000002df66 : adc eax, 0x385fb5 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cb19 : adc eax, 0x3890bf ; ret
0x000000000002134c : adc eax, 0x39817f ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001051ac : adc eax, 0x3a65f ; cmovne rax, rdx ; ret
0x00000000000a17ba : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000024976 : adc eax, 0x3d8d4800 ; ret 0x15
0x0000000000026629 : adc eax, 0x3d8d4800 ; ret 0x1569
0x0000000000001ecc : adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x0000000000106d95 : adc eax, 0x576b6 ; cmove rax, rdx ; ret
0x0000000000034384 : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x000000000009be28 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x0000000000034a5e : adc eax, 0x6f0f6600 ; ret 0x87e8
0x0000000000034ae8 : adc eax, 0x6f0f6600 ; ret 0xfde8
0x000000000009d54c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000018be85 : adc eax, 0x76240002 ; stc ; jmp qword ptr [rax]
0x000000000018cdb5 : adc eax, 0x78c40001 ; std ; jmp rsp
0x00000000000343c9 : adc eax, 0x7e0f6600 ; ret 0xd089
0x00000000000e7a71 : adc eax, 0x80ec8348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000061a73 : adc eax, 0x8300001b ; ret 0xbf08
0x000000000006844f : adc eax, 0x830034ba ; retf
0x0000000000151b11 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000570c5 : adc eax, 0x83fffffd ; ret
0x0000000000136218 : adc eax, 0x894d0000 ; retf
0x00000000000d7d7f : adc eax, 0x8d000003 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000085d24 : adc eax, 0xaf0c7 ; cmovne rax, rdx ; ret
0x000000000008622e : adc eax, 0xafe1d ; cmovne rax, rdx ; ret
0x00000000000874ec : adc eax, 0xb585f ; cmovne rax, rdx ; ret
0x00000000000871ec : adc eax, 0xb5b3f ; cmovne rax, rdx ; ret
0x000000000008707c : adc eax, 0xb879f ; cmovne rax, rdx ; ret
0x00000000000873cc : adc eax, 0xbaf6f ; cmovne rax, rdx ; ret
0x000000000008732c : adc eax, 0xbafff ; cmovne rax, rdx ; ret
0x00000000000a1f15 : adc eax, 0xbc546 ; cmove rax, rdx ; ret
0x000000000008741c : adc eax, 0xbd06f ; cmovne rax, rdx ; ret
0x000000000008737c : adc eax, 0xbd0ff ; cmovne rax, rdx ; ret
0x00000000000a1e89 : adc eax, 0xbe262 ; cmovne rax, rdx ; ret
0x0000000000085d64 : adc eax, 0xc0c77 ; cmovne rax, rdx ; ret
0x0000000000086264 : adc eax, 0xc1f27 ; cmovne rax, rdx ; ret
0x00000000000872b4 : adc eax, 0xc3a57 ; cmovne rax, rdx ; ret
0x00000000000872e4 : adc eax, 0xc5237 ; cmovne rax, rdx ; ret
0x0000000000086fe9 : adc eax, 0xd7992 ; cmovne rax, rdx ; ret
0x0000000000085cf0 : adc eax, 0xd896b ; cmovne rax, rdx ; ret
0x00000000000b2aba : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000a30af : adc eax, 0xf56c ; cmovne rax, rdx ; ret
0x00000000000a0444 : adc eax, 0xf880272 ; ret
0x00000000000571aa : adc eax, 0xfffffcf3 ; add rax, rdx ; jmp rax
0x0000000000010a91 : adc eax, 7 ; add byte ptr [rax], al ; ret
0x000000000005bf3f : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006e421 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000683f6 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001562de : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153d19 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000fe80 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x000000000000a738 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000078ca : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000edfae : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008f098 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ec9cc : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000000ceb7c : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x000000000008cd72 : adc eax, dword ptr [rcx + 0x39] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000010095f : adc eax, dword ptr [rcx - 0x77] ; ret
0x00000000000f7221 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000018be4d : adc eax, dword ptr [rdx] ; add byte ptr [rdi + rbp*2 - 7], dh ; call rsp
0x000000000018be2d : adc eax, dword ptr [rdx] ; add byte ptr [rsi + rbp*2 - 7], dl ; jmp qword ptr [rax]
0x0000000000097e78 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000157ccf : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000045529 : adc eax, eax ; ret
0x0000000000165067 : adc eax, ebp ; pop rbx ; ret 0xffeb
0x0000000000045666 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000174a85 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000018e989 : adc ebp, edx ; call qword ptr [rax]
0x000000000018e9b1 : adc ebp, edx ; call qword ptr [rsi]
0x000000000018e9c5 : adc ebp, edx ; jmp rdx
0x00000000000fc782 : adc ebx, dword ptr [rbx + 0x5d] ; mov eax, edx ; pop r12 ; ret
0x000000000007a857 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000faa0c : adc ebx, esi ; ret
0x000000000009deac : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x00000000000eb44c : adc ecx, dword ptr [rax + 0x63] ; ret 0x348
0x00000000000dfbe8 : adc ecx, dword ptr [rax + 1] ; ret 0x3944
0x0000000000009729 : adc ecx, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000006f55c : adc ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007bd7a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000037961 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1c54 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000c8d79 : adc ecx, dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000002a034 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000636e3 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x00000000000d9853 : adc ecx, dword ptr [rcx + 0x63] ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000011dd90 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000c8e82 : adc ecx, dword ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011d8e3 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000e1861 : adc ecx, dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000098044 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000098064 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000098084 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x0000000000097ece : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001a3b2d : adc ecx, edi ; jmp qword ptr [rbx]
0x00000000001a3b7c : adc ecx, r15d ; jmp qword ptr [rbx]
0x00000000000f72ec : adc edi, dword ptr [rax + 0x130] ; syscall
0x00000000000edfac : adc edi, dword ptr [rax + 0x13] ; syscall
0x0000000000038f1c : adc edi, dword ptr [rax + 0x13e] ; syscall
0x00000000000ee04c : adc edi, dword ptr [rax + 0x14] ; syscall
0x00000000000f1c4c : adc edi, dword ptr [rax + 0x1a] ; syscall
0x00000000000c43bc : adc edi, dword ptr [rax + 0x22] ; syscall
0x00000000000c446c : adc edi, dword ptr [rax + 0x23] ; syscall
0x00000000000f7d4c : adc edi, dword ptr [rax + 0x2a] ; syscall
0x00000000000f7c7c : adc edi, dword ptr [rax + 0x2b] ; syscall
0x00000000000f819c : adc edi, dword ptr [rax + 0x2e] ; syscall
0x00000000000f803c : adc edi, dword ptr [rax + 0x2f] ; syscall
0x00000000000eebac : adc edi, dword ptr [rax + 0x4a] ; syscall
0x00000000000eec5c : adc edi, dword ptr [rax + 0x4b] ; syscall
0x00000000000e8abc : adc edi, dword ptr [rax + 0x55] ; syscall
0x00000000000e819c : adc edi, dword ptr [rax + 1] ; syscall
0x00000000000e891c : adc edi, dword ptr [rax + 3] ; syscall
0x00000000000ec60c : adc edi, dword ptr [rax + 7] ; syscall
0x000000000018b619 : adc edi, eax ; jmp rax
0x0000000000186fed : adc edi, ebp ; jmp qword ptr [rax]
0x000000000018bba1 : adc edi, ecx ; jmp rax
0x0000000000127073 : adc edi, ecx ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000018acd9 : adc edi, esi ; jmp rax
0x00000000001a7019 : adc edi, esi ; jmp rdi
0x0000000000175f9e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000f6d25 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000007b4e3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006d9f3 : adc esi, dword ptr [rdx + rdx - 0xa] ; ret 0x7420
0x00000000000708e9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000001a0981 : adc esi, ebp ; jmp qword ptr [rcx]
0x000000000017a1f5 : adc esi, ebp ; jmp qword ptr [rdi]
0x000000000017a1f1 : adc esi, ebp ; push rdi ; adc esi, ebp ; jmp qword ptr [rdi]
0x00000000001a7091 : adc esi, edi ; call qword ptr [rdx]
0x000000000006edc0 : adc esi, esi ; ret 0x7520
0x00000000001797a5 : adc esi, esp ; jmp qword ptr [rdx]
0x00000000001654f2 : adc esp, dword ptr [rip + 0x5be17500] ; ret
0x0000000000157eb2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015d926 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000015d5c1 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000015d585 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000015da88 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000015de0e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000015deab : adc qword ptr [rsi + 7], rdx ; ret
0x000000000015dcad : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000153e80 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000045665 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001a3ba4 : adc rcx, r15 ; jmp qword ptr [rbx]
0x0000000000178908 : add ah, 0xf1 ; call rax
0x000000000018bb9f : add ah, ah ; adc edi, ecx ; jmp rax
0x000000000019185b : add ah, ah ; add byte ptr [rax], al ; nop ; sbb esp, ebp ; call qword ptr [rbx]
0x0000000000188577 : add ah, ah ; add ebp, edi ; jmp rax
0x000000000018b4f7 : add ah, ah ; add edi, eax ; call qword ptr [rax]
0x000000000019f05b : add ah, ah ; and byte ptr [rcx], al ; add byte ptr [rax], dl ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000018c6f7 : add ah, ah ; cli ; call qword ptr [rax]
0x000000000018e71b : add ah, ah ; imul ecx ; call qword ptr [rcx]
0x0000000000189a2f : add ah, ah ; in al, 0xf3 ; jmp qword ptr [rax]
0x000000000018a54f : add ah, ah ; je 0x18a54d ; call qword ptr [rax]
0x00000000001ab31b : add ah, ah ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x00000000001a1c0b : add ah, ah ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x000000000018b95f : add ah, ah ; ret
0x000000000018a92f : add ah, ah ; retf
0x0000000000199a5b : add ah, ah ; retf 0
0x0000000000187a0f : add ah, ah ; sbb ebx, ebp ; jmp qword ptr [rax]
0x0000000000188bd7 : add ah, ah ; shr edi, cl ; jmp rsp
0x0000000000188adf : add ah, ah ; stosd dword ptr [rdi], eax ; out dx, eax ; jmp qword ptr [rax]
0x000000000018ae4f : add ah, ah ; xor bh, dh ; jmp rsp
0x00000000001a091b : add ah, al ; adc dh, ch ; jmp qword ptr [rcx]
0x000000000018a99f : add ah, al ; fdecstp ; jmp rax
0x000000000019df6b : add ah, al ; hlt ; call rsi
0x0000000000189d2f : add ah, al ; in al, dx ; hlt ; jmp qword ptr [rax]
0x000000000018cf57 : add ah, al ; in al, dx ; std ; call rsp
0x000000000018d73b : add ah, al ; jb 0x18d72c ; call qword ptr [rax]
0x0000000000199e5b : add ah, al ; jg 0x199e54 ; jmp qword ptr [rbx]
0x000000000018c757 : add ah, al ; jns 0x18c759 ; jmp qword ptr [rax]
0x000000000018cdb7 : add ah, al ; js 0x18cdbc ; jmp rsp
0x000000000018828f : add ah, al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rsp
0x000000000018791f : add ah, al ; or ebx, ebp ; call rsp
0x000000000018cbef : add ah, al ; out 0xfc, al ; jmp rsp
0x000000000018888f : add ah, al ; push rax ; out dx, eax ; jmp qword ptr [rax]
0x000000000019923b : add ah, al ; ret 0
0x0000000000189d17 : add ah, al ; retf
0x000000000018b1f7 : add ah, al ; retf 0xfff7
0x000000000018a267 : add ah, al ; sbb esi, esi ; jmp rsp
0x00000000001871ff : add ah, al ; shr ecx, cl ; call qword ptr [rax]
0x000000000018cca7 : add ah, al ; std ; jmp rsp
0x0000000000188acf : add ah, al ; stosb byte ptr [rdi], al ; out dx, eax ; call rsp
0x000000000019ea6b : add ah, al ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x0000000000187f67 : add ah, al ; xor dh, ch ; jmp rax
0x00000000000a050e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001a1973 : add ah, bh ; add qword ptr [r8], rax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000001abb73 : add ah, bh ; cmp al, bh ; call qword ptr [rbx]
0x00000000001a1433 : add ah, bh ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a74c3 : add ah, bh ; fdivr st(0) ; call qword ptr [rax]
0x00000000000a05eb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a0559 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000198473 : add ah, bh ; mov ah, 0 ; add byte ptr [rax], cl ; sti ; call qword ptr [rax]
0x00000000001abf73 : add ah, bh ; out dx, eax ; add dword ptr [rax], eax ; call 0xffffffffe41ab7cb
0x00000000001a35e3 : add ah, bh ; retf 0xfff5
0x000000000019e973 : add ah, bh ; sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x70], bh ; hlt ; jmp qword ptr [rcx]
0x000000000019e053 : add ah, bl ; adc byte ptr [rcx], al ; add al, bl ; push rcx ; hlt ; call rsp
0x00000000001a3c43 : add ah, bl ; add esi, esi ; jmp qword ptr [rbx]
0x00000000001a1b53 : add ah, bl ; add qword ptr [r8], rax ; call 0x221a10c3
0x00000000001a45d3 : add ah, bl ; and esi, esi ; call qword ptr [rdi]
0x00000000001a0373 : add ah, bl ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001a3c53 : add ah, bl ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; clc ; add esi, esi ; jmp qword ptr [rbx]
0x00000000001a1913 : add ah, bl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000018df63 : add ah, bl ; retf
0x00000000001a6333 : add ah, bl ; retf 0xfff6
0x000000000019ed53 : add ah, bl ; sbb eax, 0x9c680001 ; hlt ; jmp qword ptr [rcx]
0x000000000019b833 : add ah, bl ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a1143 : add ah, bl ; xor ch, dh ; jmp rsp
0x0000000000175fc7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x000000000015de0a : add ah, byte ptr [rdx - 0xf] ; jl 0x15de5f ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000097ecb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000196879 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000001a09e3 : add ah, ch ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001a1a63 : add ah, ch ; add qword ptr [rax], rax ; cwde ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x0000000000187d79 : add ah, ch ; call rax
0x0000000000172aed : add ah, ch ; call rcx
0x00000000001a0863 : add ah, ch ; cmp byte ptr [rcx], al ; add al, cl ; adc ch, dh ; call qword ptr [rdx]
0x0000000000172ae9 : add ah, ch ; dec dword ptr [rbp] ; in al, dx ; call rcx
0x000000000019ff70 : add ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a3d63 : add ah, ch ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bl ; cld ; jmp qword ptr [rdx]
0x00000000001a3a13 : add ah, ch ; push rbp ; jmp qword ptr [rbx]
0x00000000001ac1c3 : add ah, ch ; push rsp ; clc ; call qword ptr [rbx]
0x0000000000199263 : add ah, ch ; ret 0
0x0000000000190973 : add ah, cl ; adc al, 0xeb ; call rdi
0x00000000001a3ab3 : add ah, cl ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a1643 : add ah, cl ; add dword ptr [rax], r8d ; test al, 0x57 ; cmc ; jmp qword ptr [rcx]
0x00000000001973f3 : add ah, cl ; cli ; out dx, al ; jmp qword ptr [rcx]
0x0000000000194973 : add ah, cl ; cmp dh, ch ; jmp qword ptr [rdi]
0x000000000018e6f3 : add ah, cl ; imul ecx ; call qword ptr [rcx]
0x00000000001938a3 : add ah, cl ; int1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000198b43 : add ah, cl ; mov ebx, 0x59880000 ; cld ; call qword ptr [rbx]
0x000000000019b943 : add ah, cl ; mov edx, esi ; jmp qword ptr [rcx]
0x00000000001a1b43 : add ah, cl ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x0000000000196693 : add ah, cl ; retf
0x000000000019a343 : add ah, cl ; rol dword ptr [rax], cl ; add al, ch ; wait ; int1 ; jmp rbx
0x00000000001940a3 : add ah, cl ; sbb al, 0xee ; jmp qword ptr [rcx]
0x00000000001787b0 : add ah, cl ; sti ; jmp qword ptr [rax]
0x000000000019eaf3 : add ah, cl ; xchg eax, ebx ; hlt ; jmp qword ptr [rsi]
0x0000000000198abb : add ah, dh ; adc al, 0xfc ; call qword ptr [rbx]
0x000000000018d56b : add ah, dh ; add eax, 0x79b00000 ; std ; jmp qword ptr [rdx]
0x000000000018b45f : add ah, dh ; div bh ; call qword ptr [rax]
0x000000000018a9bf : add ah, dh ; fcomi st(6) ; call rax
0x000000000018fa4b : add ah, dh ; je 0x18fa3d ; call rsp
0x000000000018cbe7 : add ah, dh ; jrcxz 0x18cbeb ; call rax
0x000000000018b55f : add ah, dh ; or al, bh ; jmp rsp
0x00000000001885e7 : add ah, dh ; or ebp, edi ; jmp rax
0x000000000019db9b : add ah, dh ; or esi, esp ; jmp qword ptr [rcx]
0x0000000000188837 : add ah, dh ; out dx, eax ; call rsp
0x000000000019662b : add ah, dh ; retf 0xffee
0x000000000018b1ff : add ah, dh ; retf 0xfff7
0x00000000001a546b : add ah, dh ; test byte ptr [rcx], al ; add byte ptr [rax + 0x61], dl ; idiv bh ; retf 0
0x000000000018725f : add ah, dl ; adc al, 0xea ; call rsp
0x0000000000187d7f : add ah, dl ; add ch, ah ; jmp qword ptr [rax]
0x000000000018a2af : add ah, dl ; and esi, esi ; jmp qword ptr [rax]
0x00000000001ac84b : add ah, dl ; clc ; add dword ptr [rax], eax ; add byte ptr [rbx + rdi*8 - 1], bh ; ret
0x000000000018b6df : add ah, dl ; clc ; call rsp
0x000000000018aee7 : add ah, dl ; cmp dh, bh ; jmp rsp
0x000000000018920f : add ah, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x000000000018cf5f : add ah, dl ; in al, dx ; std ; jmp rsp
0x000000000019f0eb : add ah, dl ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000018ba47 : add ah, dl ; loope 0x18ba47 ; jmp rax
0x000000000019844b : add ah, dl ; mov ah, 0 ; add al, ah ; lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000018978f : add ah, dl ; mov esi, ebx ; call rax
0x0000000000189c7f : add ah, dl ; mov esi, esp ; jmp rsp
0x000000000018900f : add ah, dl ; movsxd rsi, eax ; jmp rsp
0x000000000018b557 : add ah, dl ; or al, bh ; call rax
0x000000000018ac4f : add ah, dl ; or dh, bh ; jmp qword ptr [rax]
0x000000000018a197 : add ah, dl ; or esi, esi ; call rax
0x0000000000194d1b : add ah, dl ; out dx, al ; call qword ptr [rax]
0x00000000001a19db : add ah, dl ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x0000000000189e27 : add ah, dl ; push rdi ; cmc ; call rsp
0x00000000001a934b : add ah, dl ; ret
0x00000000001895af : add ah, dl ; ret 0xfff2
0x00000000001875e7 : add ah, dl ; retf 0xffea
0x000000000018b9a7 : add ah, dl ; retf 0xfff8
0x000000000018bd0f : add ah, dl ; stc ; call rax
0x000000000018a017 : add ah, dl ; stc ; cmc ; jmp rax
0x000000000018c81f : add ah, dl ; test edx, edi ; call rax
0x000000000018b887 : add ah, dl ; xchg eax, ebp ; clc ; jmp qword ptr [rax]
0x000000000019608b : add ah, dl ; xchg eax, ecx ; out dx, al ; call rsi
0x00000000001087f5 : add al, 0 ; add al, ch ; ret
0x0000000000073cb0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x0000000000044879 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006018e : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001500cd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000154c19 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001500f1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a197a : add al, 0 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000000e97a : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000b2b43 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d545e : add al, 0 ; add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd5407
0x00000000000d79e3 : add al, 0 ; add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd7989
0x00000000000e77bf : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001628bb : add al, 0 ; add byte ptr [rbp + rcx*4 + 0x47], al ; add ecx, dword ptr [rbp - 0x77] ; retf
0x000000000008ff98 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000124412 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006a445 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000087b84 : add al, 0 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; xchg eax, edx ; ret
0x0000000000041553 : add al, 0 ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000163982 : add al, 0 ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x000000000012b512 : add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000011fbb3 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000085686 : add al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d54ed : add al, 0 ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000086fc9 : add al, 0 ; add byte ptr [rdx + rbp - 9], dh ; ret 0
0x00000000000ff079 : add al, 0 ; add byte ptr [rdx], al ; call rcx
0x000000000003cdf3 : add al, 0 ; add cl, ch ; ret 0xfffd
0x00000000000c52bd : add al, 0 ; nop ; mov eax, 0x27 ; syscall
0x00000000000ca66b : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000e969a : add al, 0 ; test rax, rax ; sete dl ; jmp 0xe96de
0x0000000000042bd5 : add al, 0x10 ; add bl, dh ; ret
0x00000000001a406c : add al, 0x10 ; idiv bh ; retf 0
0x000000000002d839 : add al, 0x10 ; ret
0x00000000000fa935 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000000faa0b : add al, 0x11 ; ret
0x000000000018b5d8 : add al, 0x12 ; clc ; jmp qword ptr [rax]
0x00000000000a05a4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000008e961 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008e8fa : add al, 0x17 ; sub eax, ecx ; ret
0x000000000018c418 : add al, 0x19 ; cli ; jmp rsp
0x00000000001294a8 : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000349e2 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003486a : add al, 0x24 ; add rsp, 0x28 ; ret
0x0000000000164c1e : add al, 0x24 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001648c9 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000000fa004 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fa065 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000114d40 : add al, 0x24 ; call 0x21024
0x00000000001347e7 : add al, 0x24 ; call 0x21234
0x00000000001100c6 : add al, 0x24 ; call rax
0x000000000008417e : add al, 0x24 ; je 0x84260 ; call rax
0x0000000000038a87 : add al, 0x24 ; jne 0x38a98 ; add rsp, 0x18 ; ret
0x0000000000038ad4 : add al, 0x24 ; jne 0x38ae5 ; add rsp, 0x18 ; ret
0x0000000000038b26 : add al, 0x24 ; jne 0x38b37 ; add rsp, 0x18 ; ret
0x0000000000038b73 : add al, 0x24 ; jne 0x38b84 ; add rsp, 0x18 ; ret
0x0000000000038bc6 : add al, 0x24 ; jne 0x38bd7 ; add rsp, 0x18 ; ret
0x0000000000038c13 : add al, 0x24 ; jne 0x38c24 ; add rsp, 0x18 ; ret
0x00000000000f29c3 : add al, 0x24 ; jne 0xf29d4 ; add rsp, 0x18 ; ret
0x00000000000a1cc3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084453 : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001044a3 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000165586 : add al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000021d7a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000046bfb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x46c47 ; leave ; ret
0x0000000000021a9c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e1f3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002ea2c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000006f0d9 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000e0c64 : add al, 0x28 ; call r12
0x0000000000113a91 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000019fe7c : add al, 0x2f ; add dword ptr [rax], eax ; adc dl, ch ; hlt ; jmp qword ptr [rcx]
0x000000000018c540 : add al, 0x30 ; cli ; call qword ptr [rax]
0x000000000009f409 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009f41b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000001a007c : add al, 0x31 ; add dword ptr [rax], eax ; jo 0x1a0078 ; hlt ; jmp qword ptr [rcx]
0x00000000000e6a27 : add al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000095fce : add al, 0x31 ; ret
0x0000000000095eca : add al, 0x37 ; ret
0x00000000000728df : add al, 0x3a ; ret
0x00000000001740a6 : add al, 0x3d ; retf
0x00000000000757b2 : add al, 0x41 ; mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x75776
0x000000000009c9ab : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000009d7eb : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x0000000000113d6e : add al, 0x48 ; lea eax, [rdi + rsi + 8] ; ret
0x000000000014c409 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000014c41b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000070558 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000013f33a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000710bc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071252 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000008d04d : add al, 0x48 ; mov eax, edi ; ret
0x00000000000e4da5 : add al, 0x48 ; mov edi, ebp ; call 0x21086
0x0000000000096274 : add al, 0x48 ; xor eax, eax ; ret
0x00000000001a1b7c : add al, 0x4c ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000a2718 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000004a448 : add al, 0x4d ; cmp eax, ecx ; jne 0x4a448 ; pop rbx ; pop rbp ; ret
0x0000000000188880 : add al, 0x50 ; out dx, eax ; call rsp
0x0000000000103944 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000cec3b : add al, 0x5b ; ret
0x000000000014c417 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000097f5c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000002a032 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000a1d51 : add al, 0x74 ; fiadd word ptr [rcx + 0x39] ; sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x00000000000e74d4 : add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000162b6a : add al, 0x74 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x00000000000cf0c5 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xcf0d9 ; xor eax, eax ; ret
0x0000000000125594 : add al, 0x74 ; retf
0x00000000000385aa : add al, 0x75 ; add eax, 0x18c48348 ; ret
0x00000000000cf693 : add al, 0x75 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000106be4 : add al, 0x75 ; jmp 0xffffffffc408f539
0x00000000000d84fd : add al, 0x75 ; mov al, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000a19d2 : add al, 0x75 ; ret
0x00000000000b9137 : add al, 0x75 ; ret 0x8948
0x000000000012de4b : add al, 0x75 ; retf 0x8949
0x000000000011d8f3 : add al, 0x75 ; sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000ec492 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002dc00 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002dc20 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002db60 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dbe0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002db00 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dba0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002db40 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002db80 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002dca0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002db20 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dbc0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dae0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000cf0af : add al, 0x7c ; out dx, al ; ret
0x000000000004e7d0 : add al, 0x80 ; add rax, rdi ; jmp rax
0x000000000004d742 : add al, 0x80 ; add rax, rsi ; jmp rax
0x00000000000b32d5 : add al, 0x80 ; ret
0x00000000000a0ac4 : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xa0ab1 ; ret
0x000000000006b8d8 : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000001517fb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001530d3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000002215d : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000a0a78 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa0a68 ; ret
0x0000000000093337 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000113d40 : add al, 0x83 ; loopne 0x113dc7 ; ret
0x00000000000756f7 : add al, 0x83 ; loopne 0x75704 ; mov edx, eax ; mov eax, edx ; ret
0x00000000000757b6 : add al, 0x83 ; loopne 0x757c0 ; mov edx, eax ; jmp 0x75772
0x00000000000757b5 : add al, 0x83 ; loopne 0x757c1 ; mov edx, eax ; jmp 0x75773
0x00000000000758a6 : add al, 0x83 ; loopne 0x758b0 ; mov edx, eax ; jmp 0x75862
0x00000000000758a5 : add al, 0x83 ; loopne 0x758b1 ; mov edx, eax ; jmp 0x75863
0x0000000000078104 : add al, 0x83 ; loopne 0x7810d ; ret
0x00000000001150de : add al, 0x83 ; ret 0xf01
0x00000000000e6c87 : add al, 0x83 ; retf 0xe803
0x00000000000a0b12 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xa0b10 ; ret
0x00000000000a1f3e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000a30d9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000004b893 : add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000006c68d : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000001a567c : add al, 0x87 ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], ch ; jmp rbx
0x00000000000b9e84 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000004e566 : add al, 0x87 ; add rax, rsi ; jmp rax
0x000000000018c830 : add al, 0x87 ; cli ; jmp qword ptr [rax]
0x00000000000a1c6e : add al, 0x87 ; test r8d, r8d ; jne 0xa1c48 ; ret
0x000000000014c406 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000097f3b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000a0ac8 : add al, 0x88 ; je 0xa0aad ; ret
0x0000000000189770 : add al, 0x88 ; jmp rsp
0x000000000002d99d : add al, 0x89 ; add ebp, eax ; retf
0x00000000000ea7fe : add al, 0x89 ; ret
0x00000000000dba80 : add al, 0x89 ; ret 0xb60f
0x00000000000a0a7b : add al, 0x8a ; je 0xa0a65 ; ret
0x0000000000097f24 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000a1c58 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000a0573 : add al, 0x96 ; add rax, rsi ; jmp rax
0x0000000000063c0e : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000019a3ec : add al, 0x9d ; int1 ; call rsp
0x00000000000fa7e7 : add al, 0xa ; ret
0x000000000005c4f7 : add al, 0xa2 ; add rax, rdx ; jmp rax
0x000000000012ee78 : add al, 0xa4 ; sub byte ptr [rax], al ; mov eax, 0xca ; ret
0x00000000000d36d3 : add al, 0xa6 ; add rax, rsi ; jmp rax
0x000000000007bc87 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000186e44 : add al, 0xa9 ; sti ; push qword ptr [rax + rbp*4 - 5] ; jmp rsp
0x000000000000236d : add al, 0xaa ; ret
0x00000000000e9698 : add al, 0xb0 ; add al, 0 ; test rax, rax ; sete dl ; jmp 0xe96e0
0x000000000004e49d : add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000d3783 : add al, 0xb1 ; add rax, rcx ; jmp rax
0x000000000011b5e7 : add al, 0xb1 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000c5e2d : add al, 0xb2 ; add rax, rdx ; jmp rax
0x000000000002d836 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000012a663 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002de88 : add al, 0xb8 ; ret
0x0000000000198a7c : add al, 0xbb ; add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; call qword ptr [rdx]
0x000000000018ca50 : add al, 0xbb ; cli ; jmp qword ptr [rax]
0x00000000000a04b9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000001882cc : add al, 0xc4 ; add byte ptr [rax], al ; adc al, 0xaa ; out dx, al ; jmp qword ptr [rax]
0x0000000000117c9d : add al, 0xc6 ; sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000018b258 : add al, 0xcd ; idiv edi ; pop rax ; retf
0x00000000000bf0e3 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000132a37 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000018ce30 : add al, 0xde ; std ; jmp rsp
0x00000000001899c0 : add al, 0xe2 ; jmp rsp
0x000000000002b398 : add al, 0xe8 ; test rax, rax ; je 0x2b3a8 ; call rax
0x0000000000116ae0 : add al, 0xe9 ; ret 0xfffc
0x000000000003093a : add al, 0xeb ; ret
0x000000000002db05 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000008cfb1 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008d163 : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000014f90d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000012a3c9 : add al, 0xf ; retf 0x1689
0x000000000012a399 : add al, 0xf ; retf 0x5089
0x000000000011ed05 : add al, 0xf ; retf 0x6348
0x000000000015522b : add al, 0xf ; sub rax, rsi ; ret
0x00000000000d028e : add al, 0xf ; test dword ptr [rbx - 0x7d000000], edx ; retf 0x8840
0x00000000000a16c5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009bbfb : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000117ef0 : add al, 0xf ; xchg eax, esp ; ret 0xd021
0x000000000013f6a3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e7bab : add al, 0xf3 ; ret
0x00000000001a6bc5 : add al, 0xf7 ; call qword ptr [rcx]
0x0000000000178924 : add al, 0xfc ; inc eax ; ret 0xfffc
0x00000000000a16f8 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e94c4 : add al, 1 ; add byte ptr [rax], al ; syscall
0x000000000019d451 : add al, 1 ; add byte ptr [rsi + rcx*8], bh ; call rax
0x000000000006e457 : add al, 1 ; je 0x6e489 ; mov rax, rdx ; pop rbx ; ret
0x0000000000077047 : add al, 1 ; je 0x77079 ; mov rax, rdx ; pop rbx ; ret
0x000000000006afc0 : add al, 1 ; ret
0x000000000006b032 : add al, 1 ; xor eax, eax ; ret
0x000000000008d40c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x46e8
0x000000000015c357 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x000000000004e7cc : add al, 6 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, rdi ; jmp rax
0x000000000009bd48 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000019d67c : add al, 7 ; add dword ptr [rax], eax ; shr ah, 1 ; jmp qword ptr [rbx]
0x00000000000959fd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000004d73e : add al, 7 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, rsi ; jmp rax
0x0000000000095c18 : add al, 7 ; ret
0x00000000000774a3 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000008eacf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000010860d : add al, 9 ; ror byte ptr [rcx + 0x39], 1 ; retf
0x00000000001a092f : add al, ah ; adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a1457 : add al, ah ; add dword ptr [rax], r8d ; xor al, 0x3a ; cmc ; jmp qword ptr [rcx]
0x00000000001a141f : add al, ah ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019844f : add al, ah ; lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000195b57 : add al, ah ; mov eax, dword ptr [rax] ; add byte ptr [rax + rdi*2], ah ; out dx, al ; call qword ptr [rdx]
0x000000000019458f : add al, ah ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a6d57 : add al, ah ; popfq ; add dword ptr [rax], eax ; test byte ptr [rbx], cl ; idiv edi ; ret 0
0x000000000000c9f7 : add al, ah ; retf 0x10
0x00000000001a6657 : add al, ah ; xchg eax, esi ; add dword ptr [rax], eax ; and al, 0xd7 ; idiv bh ; ret 0
0x00000000001ac337 : add al, al ; add dword ptr [rax], eax ; mov ah, 0x59 ; clc ; call qword ptr [rdi]
0x00000000001a3c2f : add al, al ; add esi, esi ; jmp qword ptr [rbx]
0x000000000019a80f : add al, al ; hlt ; int1 ; call qword ptr [rax]
0x000000000018e6df : add al, al ; imul ecx ; jmp qword ptr [rax]
0x00000000001a18ff : add al, al ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000000de37 : add al, al ; retf
0x000000000016e107 : add al, al ; sldt word ptr [rax] ; ret
0x000000000018ffff : add al, al ; test edx, ebp ; jmp rsp
0x0000000000190437 : add al, al ; xor al, 0 ; add byte ptr [rbx + rdx*4 - 0x16], dl ; call qword ptr [rdx]
0x00000000001a3c57 : add al, bh ; add esi, esi ; jmp qword ptr [rbx]
0x000000000019096f : add al, bh ; cmp dword ptr [rax], eax ; add ah, cl ; adc al, 0xeb ; call rdi
0x000000000019fa37 : add al, bh ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000000a0605 : add al, bh ; jg 0xa0607 ; int1 ; mov eax, eax ; ret
0x000000000019e697 : add al, bh ; pop rdi ; stc ; call qword ptr [rax]
0x000000000019666f : add al, bh ; xchg eax, esi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a036f : add al, bh ; xor eax, dword ptr [rcx] ; add ah, bl ; hlt ; hlt ; jmp qword ptr [rsi]
0x000000000019d44f : add al, bl ; add al, 1 ; add byte ptr [rsi + rcx*8], bh ; call rax
0x000000000019504f : add al, bl ; add byte ptr [rax], 0 ; push rsi ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a1a4f : add al, bl ; add qword ptr [rax], rax ; jl 0x1a1abb ; cmc ; jmp qword ptr [rcx]
0x00000000001a3b4f : add al, bl ; imul eax, dword ptr [rcx], 0 ; cmp al, 0x11 ; stc ; jmp qword ptr [rbx]
0x000000000018e707 : add al, bl ; imul ecx ; call qword ptr [rcx]
0x000000000019464f : add al, bl ; jbe 0x19465b ; add byte ptr [rdi + rbp - 0x12], bl ; jmp rdi
0x00000000001a8d17 : add al, bl ; js 0x1a8d16 ; call qword ptr [rsi]
0x000000000019854f : add al, bl ; mov ch, 0 ; add byte ptr [rdx + rdx - 4], bl ; jmp qword ptr [rax]
0x000000000019744f : add al, bl ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; sbb al, 0xfb ; out dx, al ; call qword ptr [rax]
0x000000000009c04b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001ad1bb : add al, bl ; or byte ptr [rax], al ; add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; retf
0x000000000019db87 : add al, bl ; or esi, esp ; jmp qword ptr [rcx]
0x000000000019e057 : add al, bl ; push rcx ; hlt ; call rsp
0x000000000019eda7 : add al, bl ; pushfq ; hlt ; jmp qword ptr [rcx]
0x000000000019924f : add al, bl ; ret 0
0x00000000000f292f : add al, bl ; retf 0xeb83
0x00000000001aa34f : add al, bl ; rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*8 - 9], bh ; call qword ptr [rdx]
0x000000000018fc4f : add al, bl ; sub al, 0 ; add byte ptr [rbp + rdi*2 - 0x16], cl ; call rsi
0x00000000000e3b16 : add al, bpl ; ret
0x000000000007218e : add al, bpl ; retf
0x0000000000032c32 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x00000000000f91ed : add al, byte ptr [r10] ; add al, ch ; retf 0xfeeb
0x000000000018c7bd : add al, byte ptr [r8] ; adc al, 0x7f ; cli ; jmp rax
0x000000000018c82d : add al, byte ptr [r8] ; add al, 0x87 ; cli ; jmp qword ptr [rax]
0x0000000000158db2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009aef1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000018bcae : add al, byte ptr [rax] ; adc al, 0x43 ; stc ; call rsp
0x000000000018c7be : add al, byte ptr [rax] ; adc al, 0x7f ; cli ; jmp rax
0x000000000018c856 : add al, byte ptr [rax] ; adc al, 0x8a ; cli ; jmp rax
0x000000000018c056 : add al, byte ptr [rax] ; adc al, 0xb8 ; stc ; call rax
0x000000000018c1f6 : add al, byte ptr [rax] ; adc al, 0xea ; stc ; call rsp
0x000000000018c416 : add al, byte ptr [rax] ; add al, 0x19 ; cli ; jmp rsp
0x000000000018c53e : add al, byte ptr [rax] ; add al, 0x30 ; cli ; call qword ptr [rax]
0x000000000018c82e : add al, byte ptr [rax] ; add al, 0x87 ; cli ; jmp qword ptr [rax]
0x00000000000268f7 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000002dc57 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000028167 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000081cfc : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x4c72
0x000000000004ce5b : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000904a2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000131cbe : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x0000000000164179 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b5cde : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011fb51 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006e7ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000f341c : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x000000000015dfa4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000004991a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000112510 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000008985c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000430d6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000015026d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152e91 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000150291 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000032c33 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000002d722 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000037e5c : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe875
0x000000000003becb : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000012290f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000012506f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000012473f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000127963 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000df7ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000602e8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5c5b6
0x0000000000067221 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63c46
0x00000000000f2d69 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000034ee0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000127037 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001294aa : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000f957d : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f549a : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000047096 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bf86a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010467d : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x000000000008aec5 : add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; ret 0x14d
0x000000000008ad99 : add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; retf
0x0000000000080cce : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; or byte ptr [r8 - 0x7d], cl ; retf 0x4801
0x0000000000090118 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000719f9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035fdc : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015fd04 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d14cd : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000162b32 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0x7407
0x000000000006b855 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x41 ; ret 0
0x00000000001ae329 : add al, byte ptr [rax] ; add byte ptr [rdx + 7], al ; add byte ptr [rax], al ; ret
0x000000000018c2de : add al, byte ptr [rax] ; and al, 0 ; cli ; jmp qword ptr [rax]
0x000000000018be86 : add al, byte ptr [rax] ; and al, 0x76 ; stc ; jmp qword ptr [rax]
0x000000000018c74e : add al, byte ptr [rax] ; and al, 0x78 ; cli ; call rsp
0x000000000018c05e : add al, byte ptr [rax] ; and al, 0xb8 ; stc ; jmp rsp
0x000000000018c6f6 : add al, byte ptr [rax] ; in al, 0x65 ; cli ; call qword ptr [rax]
0x000000000018c15e : add al, byte ptr [rax] ; in al, 0xd4 ; stc ; jmp rsp
0x000000000018be4e : add al, byte ptr [rax] ; je 0x18bec6 ; stc ; call rsp
0x000000000018c646 : add al, byte ptr [rax] ; je 0x18c688 ; cli ; call rax
0x000000000018be5e : add al, byte ptr [rax] ; jo 0x18be61 ; jmp qword ptr [rax]
0x000000000018c3ee : add al, byte ptr [rax] ; mov ah, 0x12 ; cli ; jmp rsp
0x000000000018c0e6 : add al, byte ptr [rax] ; mov ah, 0xc2 ; stc ; call rax
0x00000000000e76de : add al, byte ptr [rax] ; mov eax, 0x84 ; syscall
0x000000000010fd82 : add al, byte ptr [rax] ; mov rdi, rbp ; call r12
0x000000000010fec2 : add al, byte ptr [rax] ; mov rdi, rbp ; call rbx
0x00000000001100bf : add al, byte ptr [rax] ; mov rdi, rbp ; mov rax, qword ptr [rsp] ; call rax
0x000000000018c3e6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; adc bh, dl ; call rax
0x000000000018c9be : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; jmp qword ptr [rax]
0x000000000018c8f6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x000000000018c396 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xfa ; jmp rax
0x0000000000164d92 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000001627ba : add al, byte ptr [rax] ; movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x000000000015b06b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000010cec9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000113c1b : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000018bd8e : add al, byte ptr [rax] ; push rdi ; stc ; jmp qword ptr [rax]
0x000000000018c226 : add al, byte ptr [rax] ; push rsp ; int1 ; stc ; call qword ptr [rax]
0x000000000018be2e : add al, byte ptr [rax] ; push rsp ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000018bd5e : add al, byte ptr [rax] ; push rsp ; push rbx ; stc ; call rsp
0x000000000018bd86 : add al, byte ptr [rax] ; push rsp ; push rsi ; stc ; call rax
0x000000000018c7ee : add al, byte ptr [rax] ; push rsp ; test dl, bh ; jmp rax
0x0000000000115b0a : add al, byte ptr [rax] ; ret
0x000000000018c8d6 : add al, byte ptr [rax] ; xchg eax, esp ; lahf ; cli ; jmp qword ptr [rax]
0x000000000018c9e6 : add al, byte ptr [rax] ; xchg eax, esp ; mov dh, 0xfa ; jmp qword ptr [rax]
0x000000000018c12e : add al, byte ptr [rax] ; xchg eax, esp ; retf
0x000000000018c9a6 : add al, byte ptr [rax] ; xchg eax, esp ; scasb al, byte ptr [rdi] ; cli ; call rsp
0x000000000018bcb6 : add al, byte ptr [rax] ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000018bd46 : add al, byte ptr [rax] ; xchg eax, esp ; stc ; jmp rax
0x000000000018c8a6 : add al, byte ptr [rax] ; xchg eax, esp ; xchg eax, esi ; cli ; jmp rax
0x000000000018c6ee : add al, byte ptr [rax] ; xor al, 0x5d ; cli ; jmp rax
0x00000000000c6aea : add al, byte ptr [rbp + 0x31] ; in al, 9 ; ret 0xd889
0x00000000000c6ae7 : add al, byte ptr [rbx + 0x314502e2] ; in al, 9 ; ret 0xd889
0x00000000000c7f83 : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000186884 : add al, byte ptr [rbx - 0x7d8d0005] ; sti ; jmp rdx
0x00000000000577d8 : add al, byte ptr [rcx + 0x29] ; ret
0x0000000000103fce : add al, byte ptr [rcx + 0x39] ; ret
0x00000000000d23b4 : add al, byte ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000019d21d : add al, byte ptr [rcx] ; add byte ptr [rax - 0x57], dh ; jmp rsi
0x00000000000e7c31 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000188da5 : add al, byte ptr [rcx] ; add byte ptr [rcx + rdi*8 - 0x11], dh ; jmp rsp
0x00000000001961b5 : add al, byte ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000f91ee : add al, byte ptr [rdx] ; add al, ch ; retf 0xfeeb
0x000000000018eeaa : add al, byte ptr [rdx] ; retf 0xe0a
0x000000000009be4a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000008ad98 : add al, byte ptr cs:[rax] ; add byte ptr [rbp + 1], al ; retf
0x000000000018c15d : add al, byte ptr es:[rax] ; in al, 0xd4 ; stc ; jmp rsp
0x00000000001a3ac7 : add al, ch ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001af787 : add al, ch ; add eax, 0x5700000 ; add byte ptr [rax], al ; retf 7
0x00000000001a195f : add al, ch ; add qword ptr [r8], rax ; sub al, 0x5c ; cmc ; jmp qword ptr [rcx]
0x00000000001abf77 : add al, ch ; clc ; jmp rbx
0x0000000000064ec0 : add al, ch ; cli ; ret
0x00000000000811b6 : add al, ch ; hlt ; retf
0x00000000000d0b71 : add al, ch ; imul eax, dword ptr [rsi], 0x8948fff5 ; ret
0x00000000000fd34f : add al, ch ; imul edi, dword ptr [rdi], -0xe ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000019ffe7 : add al, ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000000c61ee : add al, ch ; insb byte ptr [rdi], dx ; xor eax, 0x8948fff7 ; ret 0x8b48
0x000000000018fc97 : add al, ch ; jge 0x18fc89 ; jmp qword ptr [rax]
0x000000000003f1fb : add al, ch ; jmp rdi
0x00000000000d1465 : add al, ch ; jne 0xd146e ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b47f9 : add al, ch ; leave ; retf 0xfff6
0x0000000000076117 : add al, ch ; mov bl, 0x55 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x760c5
0x0000000000088164 : add al, ch ; not byte ptr [rax - 0x76b70007] ; ret
0x000000000007b4ff : add al, ch ; pop rbx ; retf
0x00000000001a1b57 : add al, ch ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x00000000001a3a5f : add al, ch ; push 1 ; add byte ptr [rax + rax - 0xa], bl ; jmp qword ptr [rbx]
0x00000000000b486f : add al, ch ; push rbx ; retf 0xfff6
0x0000000000029337 : add al, ch ; ret
0x0000000000027138 : add al, ch ; ret 0x68
0x0000000000025638 : add al, ch ; ret 0x83
0x0000000000068408 : add al, ch ; ret 0x925
0x000000000011ff78 : add al, ch ; ret 0x9b
0x00000000000376d8 : add al, ch ; ret 0xcc8
0x0000000000130738 : add al, ch ; ret 0xefd2
0x000000000011ad38 : add al, ch ; ret 0xf12c
0x00000000000ae738 : add al, ch ; ret 0xf7f2
0x00000000000aae38 : add al, ch ; ret 0xf82b
0x00000000000a8738 : add al, ch ; ret 0xf852
0x00000000000722f8 : add al, ch ; ret 0xfaef
0x0000000000088188 : add al, ch ; ret 0xfb06
0x00000000000e6a68 : add al, ch ; ret 0xfdf6
0x000000000011aa88 : add al, ch ; ret 0xffae
0x000000000002159f : add al, ch ; retf
0x00000000000c3fd0 : add al, ch ; retf 0x3ff
0x0000000000083ba0 : add al, ch ; retf 0x803
0x000000000006f9d0 : add al, ch ; retf 0x945
0x0000000000125eb0 : add al, ch ; retf 0xf11a
0x00000000000a8830 : add al, ch ; retf 0xf851
0x00000000000dd360 : add al, ch ; retf 0xfe8d
0x00000000000f91f0 : add al, ch ; retf 0xfeeb
0x000000000002f0f0 : add al, ch ; retf 0xff21
0x0000000000035ec0 : add al, ch ; retf 0xfff2
0x000000000019e95f : add al, ch ; sbb dword ptr [rcx], eax ; add byte ptr [rax + rdx*4 - 0xc], bl ; jmp qword ptr [rcx]
0x00000000000f9efd : add al, ch ; std ; ret
0x0000000000081acd : add al, ch ; std ; ret 0xffff
0x0000000000198607 : add al, ch ; sub eax, esi ; jmp qword ptr [rbx]
0x0000000000021c35 : add al, ch ; test dword ptr [rcx + 0xc], esp ; add byte ptr [rcx], bh ; ret
0x0000000000029375 : add al, ch ; test dword ptr [rsi], eax ; add byte ptr [rcx - 0x77], al ; ret 0x17e9
0x000000000019a347 : add al, ch ; wait ; int1 ; jmp rbx
0x000000000007bcbf : add al, ch ; wait ; ret
0x0000000000081029 : add al, ch ; xchg eax, ecx ; retf
0x0000000000057f08 : add al, ch ; xor cl, byte ptr [rsi + 0x39480001] ; ret
0x00000000001a0867 : add al, cl ; adc ch, dh ; call qword ptr [rdx]
0x00000000001a113f : add al, cl ; add dword ptr [r8], eax ; fdiv qword ptr [rax] ; cmc ; jmp rsp
0x00000000001a1bf7 : add al, cl ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a9ae7 : add al, cl ; ret 0xfff7
0x00000000001a708f : add al, dh ; adc esi, edi ; call qword ptr [rdx]
0x000000000018f467 : add al, dh ; and al, 0 ; add byte ptr [rbp + rbx*2 - 0x16], ah ; jmp qword ptr [rcx]
0x0000000000010e1f : add al, dh ; call qword ptr [rcx]
0x00000000001984ef : add al, dh ; fsubr st(7) ; jmp rdx
0x0000000000188de9 : add al, dh ; jmp rax
0x00000000001a4067 : add al, dh ; jo 0x1a4075 ; add byte ptr [rax + rdx], al ; idiv bh ; retf 0
0x000000000019f0ff : add al, dh ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000198667 : add al, dh ; mov dh, 0 ; add byte ptr [rcx + rbx*2 - 0x10], dh ; jmp rbx
0x000000000000ee0f : add al, dh ; mov edx, 0xd ; add byte ptr [rax], al ; ret
0x000000000019a0bf : add al, dh ; nop ; int1 ; call qword ptr [rcx]
0x000000000018dd9f : add al, dh ; ret
0x0000000000192b4f : add al, dh ; ret 0xffed
0x000000000000562f : add al, dh ; retf 3
0x000000000019ea67 : add al, dh ; sbb al, byte ptr [rcx] ; add ah, al ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019ed67 : add al, dh ; sbb eax, 0x9c840001 ; hlt ; jmp qword ptr [rcx]
0x0000000000198a7f : add al, dl ; adc al, 0xfc ; call qword ptr [rdx]
0x00000000001a09cf : add al, dl ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001a5147 : add al, dl ; add dword ptr [rcx], 0xf64e8400 ; call rdi
0x000000000019449b : add al, dl ; and al, byte ptr [rax] ; add al, dl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a45bf : add al, dl ; and esi, esi ; call qword ptr [rbx]
0x0000000000196947 : add al, dl ; cdq ; add byte ptr [rax], al ; and al, 0xd9 ; out dx, al ; call qword ptr [rdx]
0x000000000019d67f : add al, dl ; in al, dx ; jmp qword ptr [rbx]
0x00000000001a4547 : add al, dl ; jne 0x1a4554 ; add byte ptr [rcx - 0xa], ah ; call qword ptr [rsi]
0x00000000001a39ff : add al, dl ; push rbp ; jmp qword ptr [rsi]
0x00000000001a9247 : add al, dl ; ret 1
0x00000000000086d7 : add al, dl ; retf
0x000000000000733f : add al, dl ; retf 0x10
0x00000000001a9a47 : add al, dl ; retf 1
0x000000000018df47 : add al, dl ; sldt word ptr [rax] ; jo 0x18df54 ; jmp qword ptr [rdi]
0x00000000001ac6af : add al, dl ; sti ; call rax
0x000000000018fa47 : add al, dl ; sub al, byte ptr [rax] ; add ah, dh ; je 0x18fa41 ; call rsp
0x000000000019449f : add al, dl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001983af : add al, dl ; xchg eax, ecx ; sti ; call qword ptr [rax]
0x000000000019a21f : add al, dl ; xchg eax, esi ; int1 ; jmp qword ptr [rax]
0x00000000001ab678 : add bh, ah ; add dword ptr [rax], eax ; adc al, 0xa3 ; sti ; jmp qword ptr [rdx]
0x000000000002291f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004bfef : add bh, al ; test dword ptr [rax], eax ; idiv edi ; call qword ptr [rax]
0x000000000016556f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011fa6a : add bh, bh ; add byte ptr [rax + 0x31], cl ; ret 0xc148
0x000000000012f679 : add bh, bh ; and eax, 0x2840c0 ; ret
0x00000000001ac9f8 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001ac974 : add bh, bh ; inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x0000000000121cec : add bh, bh ; loope 0x121c85 ; ret
0x00000000001039ed : add bh, bh ; loopne 0x1039b1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001656bd : add bh, bh ; loopne 0x1656b8 ; ret
0x000000000005aef8 : add bh, bh ; loopne 0x5aebd ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000b1dec : add bh, bh ; ret
0x0000000000046e79 : add bh, byte ptr [rax + 1] ; ret
0x0000000000047094 : add bh, byte ptr [rax + 2] ; ret
0x00000000000f01c3 : add bh, byte ptr [rax - 1] ; jmp 0xf019d
0x00000000000351bb : add bh, byte ptr [rax - 1] ; ret
0x00000000001600d2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000160c6f : add bh, dh ; fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x000000000016368e : add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x00000000000d1b08 : add bh, dh ; ret
0x0000000000026905 : add bh, dh ; ret 0
0x00000000000268f9 : add bh, dh ; ret 0xf800
0x0000000000039aaf : add bh, dh ; ret 0xffef
0x00000000000d382f : add bh, dh ; ret 8
0x0000000000018ba7 : add bh, dl ; pop rbp ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000179bfc : add bl, al ; hlt ; inc eax ; ret
0x00000000000c695c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b28d1 : add bl, al ; mov eax, 2 ; ret
0x0000000000035a8c : add bl, al ; nop ; xor eax, eax ; ret
0x000000000007d7b9 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000c69c3 : add bl, al ; nop dword ptr [rax] ; mov rsi, rsp ; call qword ptr [rdx]
0x00000000000c5bfa : add bl, al ; nop dword ptr [rax] ; ret
0x0000000000131cda : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000085534 : add bl, al ; ret
0x00000000001248ae : add bl, al ; xor eax, eax ; ret
0x000000000017ac97 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000033d4f : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000c8f02 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000018ecf9 : add bl, byte ptr [rax + 0xa] ; ret
0x000000000019d696 : add bl, byte ptr [rbx + 0x48180e0a] ; ret
0x00000000000c8f03 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b5723 : add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000012c48e : add bl, ch ; fidivr dword ptr [rax - 1] ; ret
0x00000000000819d0 : add bl, ch ; ret
0x00000000000b5eca : add bl, ch ; ret 0x1f0f
0x00000000000b5a07 : add bl, ch ; ret 0x8d48
0x0000000000084367 : add bl, ch ; retf
0x0000000000129a9d : add bl, ch ; retf 0x168b
0x000000000011ec7a : add bl, ch ; retf 0x1ee8
0x00000000000e88b1 : add bl, ch ; retf 0x1f0f
0x00000000000e71c8 : add bl, ch ; retf 0xf641
0x00000000000e933f : add bl, ch ; retf 0xf66
0x000000000003447f : add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009c3ff : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009c40f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000164d93 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000034385 : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000217ff : add bl, dh ; ret
0x000000000003256e : add bl, sil ; ret
0x00000000000c5d2c : add byte ptr [r13 - 0x36], sil ; jmp 0xc5cde
0x00000000000c5d2b : add byte ptr [r13 - 0x36], sil ; jmp 0xc5cdf
0x0000000000112ddc : add byte ptr [r8 + 1], r9b ; ret
0x0000000000086f46 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000101de7 : add byte ptr [r8 - 0x77], r9b ; ret 0xe883
0x0000000000085911 : add byte ptr [r8 - 0x77], r9b ; retf 0x45e8
0x00000000000c3bb5 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000004bb59 : add byte ptr [r8], al ; add cl, ch ; retf
0x00000000000249ad : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000e801b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000b5ec5 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000e7c2f : add byte ptr [rax + 0x102], bh ; syscall
0x00000000000e9dbf : add byte ptr [rax + 0x107], bh ; syscall
0x000000000006b01f : add byte ptr [rax + 0x10], bh ; ret
0x00000000000ed7e6 : add byte ptr [rax + 0x10], bh ; syscall
0x00000000000e9cff : add byte ptr [rax + 0x10a], bh ; syscall
0x00000000000f79df : add byte ptr [rax + 0x110], bh ; syscall
0x00000000000f6e35 : add byte ptr [rax + 0x119], bh ; syscall
0x0000000000162005 : add byte ptr [rax + 0x11], cl ; retf
0x00000000000f7a3f : add byte ptr [rax + 0x11b], bh ; syscall
0x00000000000f6f1f : add byte ptr [rax + 0x122], bh ; syscall
0x00000000000f6f1e : add byte ptr [rax + 0x122], dil ; syscall
0x00000000000f76af : add byte ptr [rax + 0x123], bh ; syscall
0x00000000000e8a1f : add byte ptr [rax + 0x124], bh ; syscall
0x00000000000e8a7f : add byte ptr [rax + 0x125], bh ; syscall
0x00000000000f77cf : add byte ptr [rax + 0x126], bh ; syscall
0x00000000000f7acf : add byte ptr [rax + 0x12c], bh ; syscall
0x00000000000f75ef : add byte ptr [rax + 0x131], bh ; syscall
0x00000000000eeccf : add byte ptr [rax + 0x132], bh ; syscall
0x00000000001a097f : add byte ptr [rax + 0x13], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000009727 : add byte ptr [rax + 0x13], dh ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000c4959 : add byte ptr [rax + 0x142], bh ; syscall
0x000000000000a2df : add byte ptr [rax + 0x14], ah ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000f7bef : add byte ptr [rax + 0x14a], bh ; syscall
0x00000000000f7c1f : add byte ptr [rax + 0x14b], bh ; syscall
0x00000000000e828f : add byte ptr [rax + 0x15], bh ; syscall
0x00000000000e828e : add byte ptr [rax + 0x15], dil ; syscall
0x000000000018e5d7 : add byte ptr [rax + 0x16], ah ; add byte ptr [rax], al ; imul ecx ; call qword ptr [rdx]
0x0000000000083f1f : add byte ptr [rax + 0x16], bh ; ret
0x00000000000e8a4f : add byte ptr [rax + 0x16], bh ; syscall
0x00000000000de72f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000019e7bf : add byte ptr [rax + 0x18], cl ; add dword ptr [rax], eax ; or al, 0x8d ; hlt ; call qword ptr [rdx]
0x00000000000f1d0f : add byte ptr [rax + 0x1b], bh ; syscall
0x00000000001a0caf : add byte ptr [rax + 0x1d], al ; cmc ; jmp rcx
0x00000000000f8c2f : add byte ptr [rax + 0x1e], bh ; syscall
0x000000000019eeb7 : add byte ptr [rax + 0x1f], al ; add dword ptr [rax], eax ; je 0x19ee6b ; hlt ; jmp qword ptr [rcx]
0x00000000000f8cbf : add byte ptr [rax + 0x1f], bh ; syscall
0x000000000019eedf : add byte ptr [rax + 0x1f], ch ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000003425b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x000000000019efef : add byte ptr [rax + 0x20], bh ; add dword ptr [rax], eax ; pop rsp ; test al, 0xf4 ; call rsp
0x00000000000e89bf : add byte ptr [rax + 0x20], bh ; syscall
0x00000000000e89ef : add byte ptr [rax + 0x21], bh ; syscall
0x0000000000160d76 : add byte ptr [rax + 0x21], cl ; ret 0x50e9
0x000000000016381e : add byte ptr [rax + 0x21], cl ; ret 0x8944
0x0000000000164223 : add byte ptr [rax + 0x21], cl ; ret 0xe583
0x0000000000163788 : add byte ptr [rax + 0x21], cl ; ret 0xffb8
0x00000000001617cc : add byte ptr [rax + 0x21], cl ; retf 0x8341
0x000000000004a132 : add byte ptr [rax + 0x21], cl ; retf 0xc148
0x0000000000162c37 : add byte ptr [rax + 0x21], cl ; ror dword ptr [rcx + 0x39], 1 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x00000000000c442f : add byte ptr [rax + 0x22], bh ; syscall
0x00000000000c44ef : add byte ptr [rax + 0x23], bh ; syscall
0x000000000019ea17 : add byte ptr [rax + 0x2400011a], ah ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000000b62cf : add byte ptr [rax + 0x24], bh ; syscall
0x00000000000b62ff : add byte ptr [rax + 0x26], bh ; syscall
0x00000000001a483f : add byte ptr [rax + 0x29], al ; idiv bh ; retf 1
0x00000000000f835f : add byte ptr [rax + 0x29], bh ; syscall
0x00000000000565b3 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000b776d : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000026ad3 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x00000000000531b1 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000cc943 : add byte ptr [rax + 0x29], cl ; ret 0x8b44
0x000000000008ba43 : add byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000002924a : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x00000000000523c1 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x00000000000b919f : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x0000000000028415 : add byte ptr [rax + 0x29], cl ; retf 0xe383
0x00000000000d5461 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd5404
0x00000000000d79e6 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd7986
0x00000000001a0fd7 : add byte ptr [rax + 0x2a], ch ; cmc ; jmp rax
0x00000000001a07ff : add byte ptr [rax + 0x2c000138], cl ; adc ch, dh ; call qword ptr [rax]
0x00000000001a14ff : add byte ptr [rax + 0x2c000145], cl ; push rsi ; cmc ; call qword ptr [rax]
0x000000000011fa6c : add byte ptr [rax + 0x31], cl ; ret 0xc148
0x0000000000007ec7 : add byte ptr [rax + 0x31], dh ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000f7e0f : add byte ptr [rax + 0x33], bh ; syscall
0x00000000001a1f27 : add byte ptr [rax + 0x3400014f], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a3607 : add byte ptr [rax + 0x34000166], dl ; retf
0x00000000001a3b27 : add byte ptr [rax + 0x3400016b], dh ; adc ecx, edi ; jmp qword ptr [rbx]
0x000000000000ce2f : add byte ptr [rax + 0x36], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000019cc1f : add byte ptr [rax + 0x37], dl ; call rdi
0x0000000000042177 : add byte ptr [rax + 0x38], bh ; syscall
0x00000000001a08bf : add byte ptr [rax + 0x39], cl ; add dword ptr [rax], eax ; cmp al, 0x12 ; cmc ; jmp rax
0x0000000000107913 : add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xf9ac
0x0000000000028169 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000b4b16 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007904f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000a46ac : add byte ptr [rax + 0x39], cl ; ret 0xd67d
0x00000000001041c9 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000001042a0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000000c5bb0 : add byte ptr [rax + 0x39], cl ; retf 0x1674
0x000000000010662f : add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000137d16 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000013e60f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000c5bc1 : add byte ptr [rax + 0x39], cl ; retf 0x3974
0x0000000000081cfe : add byte ptr [rax + 0x39], cl ; retf 0x4c72
0x000000000010789f : add byte ptr [rax + 0x39], cl ; retf 0x577
0x000000000007345d : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000116a34 : add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000015dd38 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000001066af : add byte ptr [rax + 0x39], cl ; retf 0x877
0x00000000000ca5d7 : add byte ptr [rax + 0x39], cl ; retf 0x8841
0x0000000000137836 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000015e5e3 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000015a090 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000001a09b7 : add byte ptr [rax + 0x3a], al ; add dword ptr [rax], eax ; mov ah, 0x13 ; cmc ; jmp qword ptr [rcx]
0x00000000001a09df : add byte ptr [rax + 0x3a], ch ; add dword ptr [rax], eax ; in al, dx ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000000c48cf : add byte ptr [rax + 0x3b], bh ; syscall
0x00000000001a3aff : add byte ptr [rax + 0x3c00016b], cl ; add esi, esi ; jmp qword ptr [rbx]
0x00000000000424a7 : add byte ptr [rax + 0x3e], bh ; mov edi, ebx ; syscall
0x00000000000351cf : add byte ptr [rax + 0x3e], bh ; syscall
0x00000000000351ce : add byte ptr [rax + 0x3e], dil ; syscall
0x00000000000c400f : add byte ptr [rax + 0x3f], bh ; syscall
0x000000000018e207 : add byte ptr [rax + 0x4000012], dl ; loop 0x18e200 ; call qword ptr [rdx]
0x0000000000198617 : add byte ptr [rax + 0x40000b6], ah ; xor al, dh ; call rsp
0x00000000000f8b2f : add byte ptr [rax + 0x40], bh ; syscall
0x00000000000f8aff : add byte ptr [rax + 0x41], bh ; syscall
0x00000000000f8c5f : add byte ptr [rax + 0x43], bh ; syscall
0x00000000000f8c5e : add byte ptr [rax + 0x43], dil ; syscall
0x000000000018574d : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a1a27 : add byte ptr [rax + 0x4400014a], dh ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x000000000002c9ed : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000001a13b7 : add byte ptr [rax + 0x44], al ; add dword ptr [rax], eax ; push rsp ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000f8a9f : add byte ptr [rax + 0x44], bh ; syscall
0x00000000001a15df : add byte ptr [rax + 0x46], ch ; add dword ptr [rax], eax ; push rbp ; push rdi ; cmc ; call qword ptr [rcx]
0x00000000000f8acf : add byte ptr [rax + 0x47], bh ; syscall
0x00000000000d6faf : add byte ptr [rax + 0x480f0038], al ; retf
0x00000000000e8637 : add byte ptr [rax + 0x48], bh ; syscall
0x000000000010483e : add byte ptr [rax + 0x48c03155], dl ; mov ebp, esp ; pop rbp ; ret
0x00000000000e87bf : add byte ptr [rax + 0x49], bh ; syscall
0x00000000001a1ac7 : add byte ptr [rax + 0x4b], dl ; add dword ptr [rax], eax ; and al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x0000000000199fff : add byte ptr [rax + 0x4c0000d0], cl ; nop ; int1 ; call qword ptr [rcx]
0x000000000019db1f : add byte ptr [rax + 0x4c00010b], ch ; or esi, esp ; jmp qword ptr [rcx]
0x00000000001a451f : add byte ptr [rax + 0x4c000175], ch ; and esi, esi ; call qword ptr [rbx]
0x00000000001a1bb7 : add byte ptr [rax + 0x4c], al ; add dword ptr [rax], eax ; je 0x1a1c25 ; cmc ; jmp qword ptr [rcx]
0x00000000000f032f : add byte ptr [rax + 0x4d], bh ; syscall
0x00000000001a1ccf : add byte ptr [rax + 0x4d], bl ; add dword ptr [rax], eax ; or al, 0x61 ; cmc ; jmp qword ptr [rcx]
0x000000000000de97 : add byte ptr [rax + 0x50], dh ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000000af87 : add byte ptr [rax + 0x51], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000e8b6f : add byte ptr [rax + 0x51], bh ; syscall
0x000000000006aeff : add byte ptr [rax + 0x52], bh ; syscall
0x00000000001a1607 : add byte ptr [rax + 0x54000146], dl ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000e9def : add byte ptr [rax + 0x54], bh ; syscall
0x000000000019cedf : add byte ptr [rax + 0x56], dl ; jmp rbx
0x00000000001a161f : add byte ptr [rax + 0x57], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001927d7 : add byte ptr [rax + 0x58], ah ; add byte ptr [rax], al ; xchg eax, esp ; mov ch, 0xed ; call qword ptr [rax]
0x00000000001a16cf : add byte ptr [rax + 0x58], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000e9d2f : add byte ptr [rax + 0x59], bh ; syscall
0x00000000000e7b0f : add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000e7b3f : add byte ptr [rax + 0x5b], bh ; syscall
0x0000000000021350 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000018e5ff : add byte ptr [rax + 0x5c000016], cl ; imul ecx ; call qword ptr [rdx]
0x00000000001988ff : add byte ptr [rax + 0x5c0000b9], cl ; adc bh, ah ; call rsp
0x00000000001a1977 : add byte ptr [rax + 0x5c], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a1a3f : add byte ptr [rax + 0x5d], ah ; cmc ; jmp qword ptr [rcx]
0x00000000000e945f : add byte ptr [rax + 0x5d], bh ; syscall
0x00000000000e948f : add byte ptr [rax + 0x5e], bh ; syscall
0x00000000000e7aff : add byte ptr [rax + 0x5f], bh ; syscall
0x00000000000e7afe : add byte ptr [rax + 0x5f], dil ; syscall
0x00000000000b39cf : add byte ptr [rax + 0x60], bh ; syscall
0x00000000001a1d0f : add byte ptr [rax + 0x61], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a546f : add byte ptr [rax + 0x61], dl ; idiv bh ; retf 0
0x00000000000eda2f : add byte ptr [rax + 0x62], bh ; syscall
0x00000000000eda2e : add byte ptr [rax + 0x62], dil ; syscall
0x000000000008cfe0 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000063add : add byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x000000000003275d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000006b8d5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000002e5c0 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000006c68a : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000da700 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000063c0b : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000004e49a : add byte ptr [rax + 0x63], cl ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000a04b6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000002b900 : add byte ptr [rax + 0x63], cl ; ret
0x00000000001025f0 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000005533a : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000003a731 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000003a806 : add byte ptr [rax + 0x63], cl ; ret 0xc749
0x00000000000df224 : add byte ptr [rax + 0x63], cl ; ret 0xd289
0x0000000000165019 : add byte ptr [rax + 0x63], cl ; retf
0x00000000000fecb4 : add byte ptr [rax + 0x63], cl ; retf 0x4864
0x00000000000ab7c7 : add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000abe9a : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000007289f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000006c96b : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000004b263 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000001a9f07 : add byte ptr [rax + 0x640001cf], dl ; sal bh, 1 ; call qword ptr [rcx]
0x00000000000c403f : add byte ptr [rax + 0x64], bh ; syscall
0x00000000001a34e7 : add byte ptr [rax + 0x65], dh ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000000c52df : add byte ptr [rax + 0x66], bh ; syscall
0x00000000001a35df : add byte ptr [rax + 0x66], ch ; add dword ptr [rax], eax ; cld ; retf 0xfff5
0x00000000000f782f : add byte ptr [rax + 0x67], bh ; syscall
0x00000000000c52ff : add byte ptr [rax + 0x68], bh ; syscall
0x00000000001938c7 : add byte ptr [rax + 0x69], dl ; add byte ptr [rax], al ; xor al, 0xf2 ; in eax, dx ; jmp rsp
0x00000000000c52ef : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000019edff : add byte ptr [rax + 0x6c00011e], cl ; popfq ; hlt ; jmp qword ptr [rcx]
0x00000000001a3bef : add byte ptr [rax + 0x6c], bh ; add dword ptr [rax], eax ; pop rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000000c530f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000001a3bc7 : add byte ptr [rax + 0x6c], dl ; add dword ptr [rax], eax ; push rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000000c554f : add byte ptr [rax + 0x6d], bh ; syscall
0x00000000000c52cf : add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000c557f : add byte ptr [rax + 0x6f], bh ; syscall
0x00000000000c55df : add byte ptr [rax + 0x70], bh ; syscall
0x00000000000c531f : add byte ptr [rax + 0x73], bh ; syscall
0x000000000018e627 : add byte ptr [rax + 0x74000016], dh ; imul ecx ; call qword ptr [rbx]
0x000000000009aeef : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001a2437 : add byte ptr [rax + 0x75], cl ; cmc ; call qword ptr [rdx]
0x00000000000c560f : add byte ptr [rax + 0x76], bh ; syscall
0x00000000000c563f : add byte ptr [rax + 0x78], bh ; syscall
0x000000000009c94f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000f6dbf : add byte ptr [rax + 0x7a], bh ; syscall
0x00000000000f6def : add byte ptr [rax + 0x7b], bh ; syscall
0x00000000000c55af : add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000f758f : add byte ptr [rax + 0x7d], bh ; syscall
0x0000000000194cc7 : add byte ptr [rax + 0x7d], dl ; add byte ptr [rax], al ; xor al, 0x42 ; out dx, al ; jmp rdx
0x00000000001a4def : add byte ptr [rax + 0x7e], bh ; add dword ptr [rax], eax ; cmp sil, r14b ; jmp rax
0x0000000000199db7 : add byte ptr [rax + 0x7e], bh ; int1 ; call qword ptr [rax]
0x00000000000c5aff : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000f75bf : add byte ptr [rax + 0x7e], bh ; syscall
0x0000000000035204 : add byte ptr [rax + 0x7f], bh ; syscall
0x000000000011400f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x0000000000035251 : add byte ptr [rax + 0x82], bh ; syscall
0x00000000000356ef : add byte ptr [rax + 0x83], bh ; syscall
0x00000000000356ee : add byte ptr [rax + 0x83], dil ; syscall
0x00000000000e76df : add byte ptr [rax + 0x84], bh ; syscall
0x00000000000f7a0f : add byte ptr [rax + 0x86], bh ; syscall
0x00000000000e79ef : add byte ptr [rax + 0x8a], bh ; syscall
0x00000000000edd9f : add byte ptr [rax + 0x8d], bh ; syscall
0x00000000000edd9e : add byte ptr [rax + 0x8d], dil ; syscall
0x00000000000de66f : add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000de69f : add byte ptr [rax + 0x8f], bh ; syscall
0x00000000000de6cf : add byte ptr [rax + 0x90], bh ; syscall
0x00000000000de6ff : add byte ptr [rax + 0x91], bh ; syscall
0x00000000000de75f : add byte ptr [rax + 0x92], bh ; syscall
0x00000000000de78f : add byte ptr [rax + 0x93], bh ; syscall
0x0000000000163778 : add byte ptr [rax + 0x9480000], al ; ret 0xb848
0x00000000000de7bf : add byte ptr [rax + 0x94], bh ; syscall
0x00000000000f1d9f : add byte ptr [rax + 0x96], bh ; syscall
0x00000000000f1dcf : add byte ptr [rax + 0x97], bh ; syscall
0x00000000000f1dff : add byte ptr [rax + 0x98], bh ; syscall
0x00000000000f74ef : add byte ptr [rax + 0x9a], bh ; syscall
0x00000000000f78ef : add byte ptr [rax + 0x9b], bh ; syscall
0x00000000000f74bf : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000000f74be : add byte ptr [rax + 0x9e], dil ; syscall
0x00000000000eeb6f : add byte ptr [rax + 0xa1], bh ; syscall
0x00000000000eec1f : add byte ptr [rax + 0xa2], bh ; syscall
0x00000000000b3aaf : add byte ptr [rax + 0xa4], bh ; syscall
0x00000000000f6d5f : add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000ef01f : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000000ef04f : add byte ptr [rax + 0xa8], bh ; syscall
0x0000000000199ee7 : add byte ptr [rax + 0xa], bh ; cld ; jmp rsi
0x00000000000f1c0f : add byte ptr [rax + 0xa], bh ; syscall
0x00000000000ee88f : add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000ee94f : add byte ptr [rax + 0xab], bh ; syscall
0x00000000000ee94e : add byte ptr [rax + 0xab], dil ; syscall
0x00000000000f6c2f : add byte ptr [rax + 0xac], bh ; syscall
0x00000000000f761f : add byte ptr [rax + 0xae], bh ; syscall
0x00000000000f764f : add byte ptr [rax + 0xb0], bh ; syscall
0x000000000019db37 : add byte ptr [rax + 0xb], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019dae7 : add byte ptr [rax + 0xb], cl ; hlt ; call qword ptr [rsi]
0x00000000000f6d8f : add byte ptr [rax + 0xbb], bh ; syscall
0x00000000001a19ff : add byte ptr [rax + 0xc00014a], cl ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000000f4e2f : add byte ptr [rax + 0xc6], bh ; syscall
0x00000000000f4d0f : add byte ptr [rax + 0xc7], bh ; syscall
0x0000000000083f37 : add byte ptr [rax + 0xc], bh ; pop rbx ; ret
0x000000000012ee7b : add byte ptr [rax + 0xca], bh ; ret
0x0000000000103fb1 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000000f767f : add byte ptr [rax + 0xd5], bh ; syscall
0x00000000000f751f : add byte ptr [rax + 0xe4], bh ; syscall
0x00000000000c6284 : add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000034ee3 : add byte ptr [rax + 0xe], bh ; syscall
0x00000000000f00df : add byte ptr [rax + 0xeb], bh ; syscall
0x00000000000f00de : add byte ptr [rax + 0xeb], dil ; syscall
0x00000000000a0587 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000002dba4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000007aa0f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095e35 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000023d7f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x0000000000025305 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000f889a : add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x0000000000085d88 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000012efb4 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000026732 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000818dc : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000013163b : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000b4d77 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000087129 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000089334 : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000085cb8 : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000ea9d4 : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000002728d : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x0000000000087065 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000115a7f : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c5b6f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000c5b6e : add byte ptr [rax + 0xfc17], dil ; ret
0x00000000000f779f : add byte ptr [rax + 0xfd], bh ; syscall
0x00000000000f77ff : add byte ptr [rax + 0xff], bh ; syscall
0x00000000000c5b0f : add byte ptr [rax + 0xfffa], bh ; ret
0x00000000000eaf79 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000035a87 : add byte ptr [rax + 1], bh ; ret
0x00000000000e822f : add byte ptr [rax + 1], bh ; syscall
0x00000000000904a4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000155a69 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000000249b2 : add byte ptr [rax + 1], cl ; ret
0x00000000000463ef : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000131cc0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000000b369c : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000155a60 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013e6cd : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000002f2d1 : add byte ptr [rax + 1], cl ; retf 0x8948
0x000000000003384d : add byte ptr [rax + 1], cl ; retf 0xeeb
0x000000000007748e : add byte ptr [rax + 1], dil ; ret
0x000000000004710d : add byte ptr [rax + 2], bh ; ret
0x00000000001228ce : add byte ptr [rax + 2], dil ; ret
0x00000000000e898f : add byte ptr [rax + 3], bh ; syscall
0x00000000001af78b : add byte ptr [rax + 5], dh ; add byte ptr [rax], al ; retf 7
0x00000000000c5ff6 : add byte ptr [rax + 7], bh ; ret
0x00000000000e825f : add byte ptr [rax + 8], bh ; syscall
0x0000000000199ebf : add byte ptr [rax + 8], dh ; cld ; jmp qword ptr [rbx]
0x00000000000e825e : add byte ptr [rax + 8], dil ; syscall
0x00000000001633a6 : add byte ptr [rax + 9], cl ; fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000161ad7 : add byte ptr [rax + 9], cl ; ret
0x000000000016377b : add byte ptr [rax + 9], cl ; ret 0xb848
0x000000000016d0ab : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000187d77 : add byte ptr [rax + rax - 0x14], dh ; call rax
0x00000000001a3a63 : add byte ptr [rax + rax - 0xa], bl ; jmp qword ptr [rbx]
0x00000000001a0fd3 : add byte ptr [rax + rax*2 + 1], bl ; add byte ptr [rax + 0x2a], ch ; cmc ; jmp rax
0x0000000000189717 : add byte ptr [rax + rax*4 - 0xd], dh ; jmp rsp
0x0000000000189317 : add byte ptr [rax + rax*8 - 0xf], ah ; jmp rax
0x000000000009bfcc : add byte ptr [rax + rax], 0 ; ret
0x0000000000006eaf : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x00000000001a91c7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; push rsp ; ret 1
0x0000000000018b7f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; retf
0x000000000018c2df : add byte ptr [rax + rax], ah ; cli ; jmp qword ptr [rax]
0x00000000001a9347 : add byte ptr [rax + rax], al ; add ah, dl ; ret
0x00000000001087f4 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000006018d : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000857ef : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011fbb2 : add byte ptr [rax + rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000086fc8 : add byte ptr [rax + rax], al ; add byte ptr [rdx + rbp - 9], dh ; ret 0
0x000000000003cdf2 : add byte ptr [rax + rax], al ; add cl, ch ; ret 0xfffd
0x00000000001a9adf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a15cb : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rcx ; push rdi ; cmc ; call qword ptr [rax]
0x00000000001af40b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 4
0x0000000000199a57 : add byte ptr [rax + rax], ch ; add ah, ah ; retf 0
0x00000000000819cc : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x8199c
0x0000000000084363 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x8433b
0x00000000000816b9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003a187 : add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x00000000000a1eee : add byte ptr [rax + rax], cl ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000000df47 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a92bf : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x000000000018e378 : add byte ptr [rax + rax], dl ; add byte ptr [rsp + rsi*8 - 0x17], ah ; call qword ptr [rdi]
0x00000000001a0ea3 : add byte ptr [rax + rbp - 0xb], bh ; call qword ptr [rdx]
0x00000000000b25a5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000189e47 : add byte ptr [rax + rbp*2 - 0xb], al ; call rax
0x000000000019eff3 : add byte ptr [rax + rbp*4 - 0xc], bl ; call rsp
0x0000000000196d8b : add byte ptr [rax + rbp*8 - 0x12], ah ; jmp qword ptr [rcx]
0x00000000001877ef : add byte ptr [rax + rbp*8 - 0x16], ah ; call rsp
0x000000000019a29b : add byte ptr [rax + rbx*4], dl ; int1 ; jmp qword ptr [rcx]
0x000000000019a80b : add byte ptr [rax + rbx*8 - 0xb400000], dl ; int1 ; call qword ptr [rax]
0x000000000018ca7f : add byte ptr [rax + rbx*8 - 6], ah ; jmp rax
0x0000000000042d63 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x00000000001650bd : add byte ptr [rax + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000395f3 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x10e8
0x0000000000039396 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x6de8
0x000000000003913e : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0xc5e8
0x0000000000047231 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0xd2e8
0x000000000018976f : add byte ptr [rax + rcx*4], al ; jmp rsp
0x00000000001997ab : add byte ptr [rax + rcx*8], dh ; add byte ptr [rax], al ; mov al, 0x1a ; int1 ; call qword ptr [rax]
0x00000000001aed4f : add byte ptr [rax + rcx], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001885bf : add byte ptr [rax + rcx], dl ; out dx, eax ; jmp rax
0x00000000001a4df3 : add byte ptr [rax + rdi - 0xa], cl ; jmp rax
0x0000000000194833 : add byte ptr [rax + rdi*2 + 0x36380000], bh ; out dx, al ; jmp rbx
0x000000000018c74f : add byte ptr [rax + rdi*2], ah ; cli ; call rsp
0x0000000000195b5b : add byte ptr [rax + rdi*2], ah ; out dx, al ; call qword ptr [rdx]
0x0000000000195b8b : add byte ptr [rax + rdi*2], dh ; out dx, al ; call qword ptr [rdx]
0x0000000000188b1f : add byte ptr [rax + rdi*4], ah ; out dx, eax ; jmp rsp
0x000000000018c05f : add byte ptr [rax + rdi*4], ah ; stc ; jmp rsp
0x000000000018c057 : add byte ptr [rax + rdi*4], dl ; stc ; call rax
0x000000000019c7a3 : add byte ptr [rax + rdi*8], ch ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; jmp rdx
0x000000000016e257 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000018861f : add byte ptr [rax + rdx - 0x11], al ; call qword ptr [rax]
0x000000000019ad0b : add byte ptr [rax + rdx*2 - 0xe], ah ; call qword ptr [rbx]
0x000000000018887f : add byte ptr [rax + rdx*2], al ; out dx, eax ; call rsp
0x000000000019e963 : add byte ptr [rax + rdx*4 - 0xc], bl ; jmp qword ptr [rcx]
0x000000000019a003 : add byte ptr [rax + rdx*4 - 0xf], cl ; call qword ptr [rcx]
0x00000000001a9f0b : add byte ptr [rax + rdx*8 - 9], ah ; call qword ptr [rcx]
0x00000000001a406b : add byte ptr [rax + rdx], al ; idiv bh ; retf 0
0x00000000001a0803 : add byte ptr [rax + rdx], ch ; cmc ; call qword ptr [rax]
0x000000000019ffe3 : add byte ptr [rax + rsi + 1], ch ; add al, ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000018ae47 : add byte ptr [rax + rsi - 9], al ; call rax
0x000000000019b3e3 : add byte ptr [rax + rsi*2 - 0xe], cl ; jmp qword ptr [rdx]
0x000000000018df4b : add byte ptr [rax + rsi*2 - 3], ah ; jmp qword ptr [rdi]
0x000000000018be5f : add byte ptr [rax + rsi*2 - 7], ah ; jmp qword ptr [rax]
0x0000000000197f93 : add byte ptr [rax + rsi*4], bl ; add byte ptr [rax], al ; call 0x11197c82
0x000000000018c53f : add byte ptr [rax + rsi], al ; cli ; call qword ptr [rax]
0x00000000001a007f : add byte ptr [rax - 0x11], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a3a0f : add byte ptr [rax - 0x13fffe96], bl ; push rbp ; jmp qword ptr [rbx]
0x00000000001970df : add byte ptr [rax - 0x14], dl ; out dx, al ; call qword ptr [rax]
0x000000000006c5af : add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000012396b : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894d
0x00000000001014aa : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0xeac1
0x0000000000196d77 : add byte ptr [rax - 0x18], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab317 : add byte ptr [rax - 0x1bfffe1d], ah ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x00000000001a1c07 : add byte ptr [rax - 0x1bfffeb4], dl ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x000000000018e717 : add byte ptr [rax - 0x1bffffe9], ah ; imul ecx ; call qword ptr [rcx]
0x000000000019b3df : add byte ptr [rax - 0x1c], ch ; add byte ptr [rax], al ; jo 0x19b3e0 ; jmp qword ptr [rdx]
0x000000000019b3df : add byte ptr [rax - 0x1c], ch ; add byte ptr [rax], al ; jo 0x19b3e1 ; jmp qword ptr [rdx]
0x00000000001a632f : add byte ptr [rax - 0x23fffe6d], bh ; retf 0xfff6
0x00000000001a190f : add byte ptr [rax - 0x23fffeb7], bl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019b82f : add byte ptr [rax - 0x23ffff18], bh ; xchg edx, esi ; jmp qword ptr [rcx]
0x0000000000194d17 : add byte ptr [rax - 0x2bffff83], ah ; out dx, al ; call qword ptr [rax]
0x000000000019a3e7 : add byte ptr [rax - 0x2c], dh ; add byte ptr [rax], al ; add al, 0x9d ; int1 ; call rsp
0x000000000019a2cf : add byte ptr [rax - 0x2d], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cdq ; int1 ; jmp rsi
0x00000000000358b1 : add byte ptr [rax - 0x2d], cl ; loopne 0x35907 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000199dc7 : add byte ptr [rax - 0x32], dl ; add byte ptr [rax], al ; je 0x199e54 ; int1 ; call qword ptr [rdx]
0x00000000001997bf : add byte ptr [rax - 0x38], cl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb dh, cl ; call qword ptr [rax]
0x000000000003316f : add byte ptr [rax - 0x39], cl ; ret
0x0000000000081a3b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000004755f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b2b2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b2b0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b2b6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000b2b1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b2b5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000034f6f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001a0917 : add byte ptr [rax - 0x3bfffec7], ah ; adc dh, ch ; jmp qword ptr [rcx]
0x0000000000033b65 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000003448e : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x00000000000342ba : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000001150da : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x83 ; ret 0xf01
0x000000000002133e : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002ac80 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000034c95 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000ed3ac : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000001a142f : add byte ptr [rax - 0x3fffebc], bh ; cmp ebp, esi ; jmp qword ptr [rcx]
0x0000000000198427 : add byte ptr [rax - 0x40], bl ; cli ; call qword ptr [rax]
0x00000000000e416e : add byte ptr [rax - 0x41f0d806], al ; retf 0x3174
0x000000000019a81f : add byte ptr [rax - 0x43ffff28], ch ; hlt ; int1 ; call qword ptr [rax]
0x0000000000198ab7 : add byte ptr [rax - 0x45], al ; add byte ptr [rax], al ; hlt ; adc al, 0xfc ; call qword ptr [rbx]
0x000000000003b1ac : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003e0fa : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000001ab217 : add byte ptr [rax - 0x4bfffe1e], ah ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x0000000000198007 : add byte ptr [rax - 0x4bffff50], dl ; push rbx ; out dx, eax ; call qword ptr [rbx]
0x00000000001983ff : add byte ptr [rax - 0x51], ah ; out dx, eax ; call qword ptr [rax]
0x000000000019f087 : add byte ptr [rax - 0x54], cl ; hlt ; jmp qword ptr [rcx]
0x000000000019d21f : add byte ptr [rax - 0x57], dh ; jmp rsi
0x00000000001974ef : add byte ptr [rax - 0x5b], bh ; add byte ptr [rax], al ; jl 0x1974fb ; out dx, al ; call qword ptr [rcx]
0x00000000001a74bf : add byte ptr [rax - 0x5b], cl ; add dword ptr [rax], eax ; cld ; fdivr st(0) ; call qword ptr [rax]
0x000000000019faf7 : add byte ptr [rax - 0x5bfffed5], al ; loop 0x19fafb ; jmp qword ptr [rcx]
0x000000000019dc27 : add byte ptr [rax - 0x5bfffef4], dh ; or al, 0xf4 ; call qword ptr [rsi]
0x0000000000178888 : add byte ptr [rax - 0x5def000f], ah ; int1 ; jmp qword ptr [rax]
0x000000000019edef : add byte ptr [rax - 0x63], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019ed57 : add byte ptr [rax - 0x64], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ac507 : add byte ptr [rax - 0x6bfffe0b], dl ; pop rsp ; clc ; call rsp
0x00000000001a2f27 : add byte ptr [rax - 0x6bfffea1], dh ; test al, 0xf5 ; call rsi
0x00000000001a1b17 : add byte ptr [rax - 0x6bfffeb5], ah ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x00000000001a62ef : add byte ptr [rax - 0x6d], bh ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001a62bf : add byte ptr [rax - 0x6d], cl ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x000000000016645f : add byte ptr [rax - 0x6f0013a5], ah ; pop rbx ; in al, dx ; call rax
0x000000000019e977 : add byte ptr [rax - 0x70], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000195edf : add byte ptr [rax - 0x71], ch ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg esi, ebp ; jmp rax
0x000000000019e89f : add byte ptr [rax - 0x72], al ; hlt ; jmp qword ptr [rcx]
0x00000000000c8eff : add byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000021b7f : add byte ptr [rax - 0x73], cl ; add eax, 0x15b244 ; ret
0x0000000000021b8f : add byte ptr [rax - 0x73], cl ; add eax, 0x15d081 ; ret
0x00000000000f4b87 : add byte ptr [rax - 0x73], cl ; add eax, 0x8a249 ; pop rbx ; ret
0x0000000000024881 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x00000000001161dc : add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b25ef : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b25ff : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b25df : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000c8def : add byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000fe6e8 : add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000080052 : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000007e359 : add byte ptr [rax - 0x73], cl ; push rcx ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000ef748 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000042162 : add byte ptr [rax - 0x73], cl ; xor eax, 0x336 ; call rax
0x000000000007c836 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe382 ; call rax
0x000000000007c4d3 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe6e5 ; call rax
0x000000000007c1cd : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe9eb ; call rax
0x000000000007afbd : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffbfb ; call rax
0x000000000006f330 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffe68 ; call rax
0x000000000007acaf : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffff09 ; call rax
0x00000000001a162f : add byte ptr [rax - 0x73fffeba], bh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000007ed9f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001644c8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000112df2 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000c3bb2 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000038121 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000012f6d2 : add byte ptr [rax - 0x75], cl ; add eax, 0x285e76 ; call qword ptr [rax]
0x000000000012f095 : add byte ptr [rax - 0x75], cl ; add eax, 0x2864b3 ; call qword ptr [rax]
0x000000000007cddf : add byte ptr [rax - 0x75], cl ; add eax, 0x338879 ; ret
0x000000000002a37f : add byte ptr [rax - 0x75], cl ; add eax, 0x38b6a9 ; ret
0x0000000000022a5f : add byte ptr [rax - 0x75], cl ; add eax, 0x396a71 ; ret
0x0000000000022a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x396a91 ; ret
0x000000000011d4c0 : add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000036a37 : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000001652f8 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; ret
0x00000000000229df : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008349f : add byte ptr [rax - 0x75], cl ; je 0x834d1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000089196 : add byte ptr [rax - 0x75], cl ; je 0x891c7 ; cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000853e7 : add byte ptr [rax - 0x75], cl ; jg 0x8543c ; mov rsi, rbp ; call rax
0x00000000000d6483 : add byte ptr [rax - 0x75], cl ; jl 0xd64b3 ; jo 0xd6492 ; ret 0xc083
0x00000000000854ef : add byte ptr [rax - 0x75], cl ; jnp 0x85544 ; mov rsi, r13 ; call rax
0x0000000000085557 : add byte ptr [rax - 0x75], cl ; jnp 0x855a9 ; call rax
0x000000000003789a : add byte ptr [rax - 0x75], cl ; js 0x378c4 ; call rdx
0x0000000000074cdf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d1aaf : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000f4f3f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000104303 : add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x00000000000f2f2f : add byte ptr [rax - 0x75], cl ; push rax ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000008b60f : add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000013925f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000045a0a : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000000fa806 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000231a9 : add byte ptr [rax - 0x75], cl ; ret
0x00000000000c110f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000f992e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000000ddbf0 : add byte ptr [rax - 0x75], cl ; test al, 0x83 ; ret 0x4802
0x00000000000f4093 : add byte ptr [rax - 0x75], cl ; xor al, ch ; retf 0xfff7
0x0000000000063808 : add byte ptr [rax - 0x75], cl ; xor eax, 0x350750 ; call rax
0x000000000005c08b : add byte ptr [rax - 0x75], cl ; xor eax, 0x357ecd ; call rax
0x000000000005bce7 : add byte ptr [rax - 0x75], cl ; xor eax, 0x358271 ; call rax
0x0000000000058eaa : add byte ptr [rax - 0x75], cl ; xor eax, 0x35b0ae ; call rax
0x0000000000050312 : add byte ptr [rax - 0x75], cl ; xor eax, 0x363c46 ; call rax
0x000000000004d3c8 : add byte ptr [rax - 0x75], cl ; xor eax, 0x366b90 ; call rax
0x00000000000f0699 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000007664f : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000006e0f4 : add byte ptr [rax - 0x76b80000], al ; ret 0x3f75
0x0000000000106888 : add byte ptr [rax - 0x76b80000], al ; ret 0xd75
0x00000000001958cf : add byte ptr [rax - 0x77], bl ; add byte ptr [rax], al ; cmp al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x000000000007ec7a : add byte ptr [rax - 0x77], cl ; adc bl, dh ; ret
0x0000000000123d22 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r15], cl ; adc dword ptr [rbx], eax ; jmp 0x123cf8
0x0000000000131dd4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000086316 : add byte ptr [rax - 0x77], cl ; add eax, 0x3306ca ; ret
0x000000000007d72c : add byte ptr [rax - 0x77], cl ; add eax, 0x336b4c ; ret
0x000000000007d6fc : add byte ptr [rax - 0x77], cl ; add eax, 0x336b84 ; ret
0x000000000013218f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000080524 : add byte ptr [rax - 0x77], cl ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000380af : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00000000000f04f1 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000070935 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001130e7 : add byte ptr [rax - 0x77], cl ; cmp al, 0x24 ; mov r9, rsp ; jmp 0x1130c5
0x0000000000155274 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax + 0x63] ; ret 0x8348
0x00000000000f468b : add byte ptr [rax - 0x77], cl ; enter -0x3fcf, -0x18 ; leave ; retf
0x000000000006de6a : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ec6df : add byte ptr [rax - 0x77], cl ; fidivr dword ptr [rax + 0x10f] ; syscall
0x00000000000dc3d4 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x7de8
0x0000000000084baa : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000003317f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x000000000008d40e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x46e8
0x00000000000d5c6a : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x000000000011c7ec : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rbp + rcx*4 + 0x4c] ; and al, 0x1c ; call qword ptr [rax]
0x00000000000cec7b : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000ef985 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xf97b
0x000000000004ce7c : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000075a59 : add byte ptr [rax - 0x77], cl ; imul eax ; pop rsi ; ret 0xfffa
0x000000000011e863 : add byte ptr [rax - 0x77], cl ; jne 0x11e8d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000787e3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000001131c7 : add byte ptr [rax - 0x77], cl ; or al, 0x24 ; mov r9, rsp ; jmp 0x11319d
0x0000000000104734 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000084ebf : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000011e1c0 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000010fd83 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000006efcc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000010fec3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000011c6ac : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000011c8b3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001100c0 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp] ; call rax
0x000000000008286f : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, rbx ; call 0x7eb39
0x0000000000103122 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000080425 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000002834f : add byte ptr [rax - 0x77], cl ; ret
0x000000000005e058 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x00000000000c641b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x00000000000b5fa7 : add byte ptr [rax - 0x77], cl ; ret 0x17e9
0x0000000000117316 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000824dc : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000042d67 : add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x000000000004487b : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006eef0 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000006aa4f : add byte ptr [rax - 0x77], cl ; ret 0x2ce9
0x000000000010d382 : add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x00000000000d551b : add byte ptr [rax - 0x77], cl ; ret 0x3145
0x0000000000164b73 : add byte ptr [rax - 0x77], cl ; ret 0x3775
0x000000000006e423 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000334ea : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x000000000006e0f7 : add byte ptr [rax - 0x77], cl ; ret 0x3f75
0x00000000000f1696 : add byte ptr [rax - 0x77], cl ; ret 0x61e8
0x00000000000c64c7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000000d219c : add byte ptr [rax - 0x77], cl ; ret 0x774
0x0000000000025d6e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d4bce : add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x000000000002a2dc : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bb2d1 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000101a08 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000060190 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000eaeff : add byte ptr [rax - 0x77], cl ; ret 0xbbeb
0x000000000002f8d1 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000041faa : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000085897 : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x000000000010688b : add byte ptr [rax - 0x77], cl ; ret 0xd75
0x0000000000111727 : add byte ptr [rax - 0x77], cl ; ret 0xdf89
0x0000000000037e60 : add byte ptr [rax - 0x77], cl ; ret 0xe875
0x0000000000101de8 : add byte ptr [rax - 0x77], cl ; ret 0xe883
0x000000000003becf : add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000085212 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000c6432 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000024c4f : add byte ptr [rax - 0x77], cl ; retf
0x0000000000151894 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000004d8a1 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000014f962 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x00000000000ca19f : add byte ptr [rax - 0x77], cl ; retf 0x428b
0x0000000000085912 : add byte ptr [rax - 0x77], cl ; retf 0x45e8
0x000000000006105d : add byte ptr [rax - 0x77], cl ; retf 0x7ae8
0x000000000014fb02 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x0000000000041433 : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000453d7 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000286e6 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x00000000001008af : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000a0aef : add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000072c36 : add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x000000000014f8c0 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000084a0e : add byte ptr [rax - 0x77], cl ; retf 0x92eb
0x000000000011fbaa : add byte ptr [rax - 0x77], cl ; retf 0xb47
0x00000000000803df : add byte ptr [rax - 0x77], cl ; retf 0xe283
0x0000000000151716 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000015616c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000058f29 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000000f341e : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x00000000000a0010 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000131d8c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000006db1c : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000012ee2f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000ec9be : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000001645a6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000164bfe : add byte ptr [rax - 0x7ab80000], al ; ret
0x000000000004885e : add byte ptr [rax - 0x7af0cf06], al ; retf
0x000000000019e607 : add byte ptr [rax - 0x7b], bh ; hlt ; call qword ptr [rbx]
0x000000000009626f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000164c01 : add byte ptr [rax - 0x7b], cl ; ret
0x0000000000021775 : add byte ptr [rax - 0x7b], cl ; ret 0xf41
0x00000000000545c8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000005783c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000098733 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000e969b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x33eb
0x000000000007a69f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x00000000001659f7 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x0000000000118d96 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0xf3 ; ret
0x0000000000127cb3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f0bcd : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000008926f : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000000000003b115 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; retf
0x00000000000c8e34 : add byte ptr [rax - 0x7bf0d606], al ; ret 0
0x00000000001481ab : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x00000000001151df : add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rdx + 0x78] ; ret
0x000000000014dfc7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000001a52bf : add byte ptr [rax - 0x7d], cl ; add dword ptr [rax], eax ; mov word ptr [rsi - 0xa], ss ; call rdx
0x0000000000044457 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d8c67
0x00000000000ef8ef : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34840ff
0x00000000000ef8ee : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3484100
0x00000000000828f2 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000080da7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000080874 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000083f9d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002d987 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000624ce : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000626c5 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x0000000000073dca : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000000e95e2 : add byte ptr [rax - 0x7d], cl ; clc ; or eax, 0xe20d8b48 ; ret 0x2c
0x0000000000165d3f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax + 0x39], cl ; ret
0x00000000001659c6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1659d8 ; ret
0x000000000007b83f : add byte ptr [rax - 0x7d], cl ; jg 0x7b885 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000000722a6 : add byte ptr [rax - 0x7d], cl ; jle 0x722e4 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000081a5b : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000021eb7 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000003aab7 : add byte ptr [rax - 0x7d], cl ; ret 0x3801
0x0000000000112512 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000009f93f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000048a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x00000000000fedaf : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001123ca : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000022925 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d76e9 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000f8e42 : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000004b246 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000001009a1 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000430d8 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000014f98f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010f28a : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000001134b7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x00000000000daa5f : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c57f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000151973 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012cc90 : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000d715d : add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x000000000014f9b3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000027657 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007f224 : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000132b5f : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000032c35 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000032c95 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000008ea0f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000963af : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000004449f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x5b ; ret
0x000000000006edba : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000000438ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000d757f : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x840f
0x00000000001951cf : add byte ptr [rax - 0x7e], bl ; add byte ptr [rax], al ; jl 0x19523b ; out dx, al ; call qword ptr [rdx]
0x000000000007c6d0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000376d1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xcc8
0x000000000010af98 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000071910 : add byte ptr [rax - 0x7f], cl ; ret
0x000000000002d724 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000013cecb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f14f : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000d64f0 : add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000001a1c20 : add byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000196627 : add byte ptr [rax - 0xbffff6a], dh ; retf 0xffee
0x00000000001ac1bf : add byte ptr [rax - 0xe], cl ; add dword ptr [rax], eax ; in al, dx ; push rsp ; clc ; call qword ptr [rbx]
0x00000000000562c7 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], rsi ; ret
0x00000000000332bd : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000034f4d : add byte ptr [rax - 1], bh ; ret
0x0000000000035ba6 : add byte ptr [rax - 1], dil ; ret
0x00000000000e6c6b : add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x000000000006f6d4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000376d5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xcc8
0x000000000008369c : add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000c3fcd : add byte ptr [rax], 0 ; add al, ch ; retf 0x3ff
0x0000000000083b9d : add byte ptr [rax], 0 ; add al, ch ; retf 0x803
0x000000000006f9cd : add byte ptr [rax], 0 ; add al, ch ; retf 0x945
0x0000000000081aca : add byte ptr [rax], 0 ; add al, ch ; std ; ret 0xffff
0x000000000006b07b : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000015a08d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000b3699 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000155a5d : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013e6ca : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000075a56 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; pop rsi ; ret 0xfffa
0x0000000000104f46 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015596a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000003447b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000012a67b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000013f6ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b9e1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0xb9df0
0x00000000000bc27b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbc257
0x00000000000bc27b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbc259
0x00000000000eaefb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xeaec7
0x00000000000a053b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000016589b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002be03 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000012f96b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x12f93f
0x000000000012f9eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x12f9bf
0x00000000000859eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e815b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000000fb29f : add byte ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 5], cl ; push rsi ; ret
0x0000000000165ced : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000759de : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000010441a : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x00000000000711bb : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000d1b51 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xc35b
0x000000000015b371 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195051 : add byte ptr [rax], 0 ; push rsi ; out dx, al ; jmp qword ptr [rsi]
0x00000000000df677 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000000000000762 : add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x00000000000c45db : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000001a3aef : add byte ptr [rax], ah ; add esi, esi ; jmp qword ptr [rbx]
0x000000000019f097 : add byte ptr [rax], ah ; and dword ptr [rcx], eax ; add byte ptr [rsp + rbp*4 - 0xc], ah ; jmp qword ptr [rcx]
0x000000000000d96f : add byte ptr [rax], ah ; call qword ptr [rcx]
0x000000000017b828 : add byte ptr [rax], ah ; cli ; push qword ptr [rax] ; and dl, bh ; jmp qword ptr [rax]
0x00000000000104ef : add byte ptr [rax], ah ; leave ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000198def : add byte ptr [rax], ah ; mov esi, eax ; jmp rdx
0x000000000002dbe4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000019db97 : add byte ptr [rax], ah ; or al, 1 ; add ah, dh ; or esi, esp ; jmp qword ptr [rcx]
0x0000000000188257 : add byte ptr [rax], ah ; out dx, al ; inc dword ptr [rax] ; ret 0
0x00000000001a1b7f : add byte ptr [rax], ah ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000050bf : add byte ptr [rax], ah ; retf
0x000000000019a297 : add byte ptr [rax], ah ; rol dword ptr [rax], cl ; add byte ptr [rax + rbx*4], dl ; int1 ; jmp qword ptr [rcx]
0x00000000001aa097 : add byte ptr [rax], ah ; rol dword ptr [rcx], 1 ; add byte ptr [rdx + rdx*8 - 9], ah ; call rax
0x000000000018eb0f : add byte ptr [rax], ah ; sub edx, ebp ; call qword ptr [rdx]
0x000000000018e377 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rsp + rsi*8 - 0x17], ah ; call qword ptr [rdi]
0x0000000000188686 : add byte ptr [rax], al ; adc al, 0x16 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000188006 : add byte ptr [rax], al ; adc al, 0x3f ; out dx, al ; jmp rsp
0x000000000018890e : add byte ptr [rax], al ; adc al, 0x5d ; out dx, eax ; call rsp
0x000000000018895e : add byte ptr [rax], al ; adc al, 0x60 ; out dx, eax ; jmp rax
0x000000000019458a : add byte ptr [rax], al ; adc al, 0x76 ; add byte ptr [rax], al ; loopne 0x1945c9 ; out dx, al ; jmp qword ptr [rdi]
0x000000000019a29a : add byte ptr [rax], al ; adc al, 0x98 ; int1 ; jmp qword ptr [rcx]
0x00000000001882ce : add byte ptr [rax], al ; adc al, 0xaa ; out dx, al ; jmp qword ptr [rax]
0x0000000000199c8a : add byte ptr [rax], al ; adc al, 0xcd ; add byte ptr [rax], al ; adc byte ptr [rbp - 0xf], dl ; call qword ptr [rsi]
0x0000000000188c26 : add byte ptr [rax], al ; adc al, 0xdf ; out dx, eax ; jmp qword ptr [rax]
0x000000000018ceae : add byte ptr [rax], al ; adc al, 0xe5 ; std ; call rsp
0x00000000001879ce : add byte ptr [rax], al ; adc al, 0xeb ; call qword ptr [rax]
0x0000000000188cce : add byte ptr [rax], al ; adc al, 0xeb ; out dx, eax ; call qword ptr [rax]
0x00000000001885be : add byte ptr [rax], al ; adc al, 8 ; out dx, eax ; jmp rax
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000007957 : add byte ptr [rax], al ; adc al, byte ptr es:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000195b86 : add byte ptr [rax], al ; adc byte ptr [rax + rax - 0x1187cc00], cl ; call qword ptr [rdx]
0x00000000000f9e03 : add byte ptr [rax], al ; adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000019925e : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001a9a02 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 1
0x00000000001992c2 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a99c6 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; retf 1
0x00000000001992d6 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a91b2 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001ad5de : add byte ptr [rax], al ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000199c8e : add byte ptr [rax], al ; adc byte ptr [rbp - 0xf], dl ; call qword ptr [rsi]
0x00000000001989de : add byte ptr [rax], al ; adc byte ptr [rcx - 0x10], bh ; call qword ptr [rdx]
0x0000000000196086 : add byte ptr [rax], al ; adc byte ptr [rcx - 0x6e2c0000], dl ; out dx, al ; call rsi
0x00000000001a1986 : add byte ptr [rax], al ; adc byte ptr [rdx + 1], cl ; add byte ptr [rsp + rbx*2 - 0xb], ah ; jmp qword ptr [rcx]
0x000000000019c90e : add byte ptr [rax], al ; adc byte ptr [rdx], ch ; call rcx
0x0000000000196d86 : add byte ptr [rax], al ; adc byte ptr [rsi - 0x179c0000], bl ; out dx, al ; jmp qword ptr [rcx]
0x000000000018861e : add byte ptr [rax], al ; adc dil, r13b ; call qword ptr [rax]
0x0000000000199a59 : add byte ptr [rax], al ; add ah, ah ; retf 0
0x0000000000199239 : add byte ptr [rax], al ; add ah, al ; ret 0
0x0000000000199261 : add byte ptr [rax], al ; add ah, ch ; ret 0
0x00000000001a9349 : add byte ptr [rax], al ; add ah, dl ; ret
0x00000000001087f3 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x000000000019fe7a : add byte ptr [rax], al ; add al, 0x2f ; add dword ptr [rax], eax ; adc dl, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a007a : add byte ptr [rax], al ; add al, 0x31 ; add dword ptr [rax], eax ; jo 0x1a007a ; hlt ; jmp qword ptr [rcx]
0x00000000001a1b7a : add byte ptr [rax], al ; add al, 0x4c ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], bl ; jmp qword ptr [rcx]
0x000000000018887e : add byte ptr [rax], al ; add al, 0x50 ; out dx, eax ; call rsp
0x00000000001a567a : add byte ptr [rax], al ; add al, 0x87 ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], ch ; jmp rbx
0x000000000019a3ea : add byte ptr [rax], al ; add al, 0x9d ; int1 ; call rsp
0x0000000000198a7a : add byte ptr [rax], al ; add al, 0xbb ; add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; call qword ptr [rdx]
0x000000000018ce2e : add byte ptr [rax], al ; add al, 0xde ; std ; jmp rsp
0x000000000019d67a : add byte ptr [rax], al ; add al, 7 ; add dword ptr [rax], eax ; shr ah, 1 ; jmp qword ptr [rbx]
0x000000000019666d : add byte ptr [rax], al ; add al, bh ; xchg eax, esi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000019924d : add byte ptr [rax], al ; add al, bl ; ret 0
0x0000000000127961 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000b47f7 : add byte ptr [rax], al ; add al, ch ; leave ; retf 0xfff6
0x0000000000076115 : add byte ptr [rax], al ; add al, ch ; mov bl, 0x55 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x760c7
0x00000000000b486d : add byte ptr [rax], al ; add al, ch ; push rbx ; retf 0xfff6
0x000000000006f6d5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000068406 : add byte ptr [rax], al ; add al, ch ; ret 0x925
0x000000000011ff76 : add byte ptr [rax], al ; add al, ch ; ret 0x9b
0x00000000000376d6 : add byte ptr [rax], al ; add al, ch ; ret 0xcc8
0x000000000011ad36 : add byte ptr [rax], al ; add al, ch ; ret 0xf12c
0x00000000000ae736 : add byte ptr [rax], al ; add al, ch ; ret 0xf7f2
0x0000000000088186 : add byte ptr [rax], al ; add al, ch ; ret 0xfb06
0x00000000000e6a66 : add byte ptr [rax], al ; add al, ch ; ret 0xfdf6
0x000000000011aa86 : add byte ptr [rax], al ; add al, ch ; ret 0xffae
0x000000000002159d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000000c3fce : add byte ptr [rax], al ; add al, ch ; retf 0x3ff
0x0000000000083b9e : add byte ptr [rax], al ; add al, ch ; retf 0x803
0x000000000006f9ce : add byte ptr [rax], al ; add al, ch ; retf 0x945
0x0000000000125eae : add byte ptr [rax], al ; add al, ch ; retf 0xf11a
0x00000000000dd35e : add byte ptr [rax], al ; add al, ch ; retf 0xfe8d
0x0000000000035ebe : add byte ptr [rax], al ; add al, ch ; retf 0xfff2
0x00000000000f9efb : add byte ptr [rax], al ; add al, ch ; std ; ret
0x0000000000081acb : add byte ptr [rax], al ; add al, ch ; std ; ret 0xffff
0x000000000007bcbd : add byte ptr [rax], al ; add al, ch ; wait ; ret
0x00000000001a9245 : add byte ptr [rax], al ; add al, dl ; ret 1
0x00000000001a9b45 : add byte ptr [rax], al ; add al, dl ; retf
0x00000000001a9a45 : add byte ptr [rax], al ; add al, dl ; retf 1
0x00000000001ab676 : add byte ptr [rax], al ; add bh, ah ; add dword ptr [rax], eax ; adc al, 0xa3 ; sti ; jmp qword ptr [rdx]
0x000000000004c036 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], eax ; idiv edi ; call qword ptr [rax]
0x000000000016556d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000121cea : add byte ptr [rax], al ; add bh, bh ; loope 0x121c87 ; ret
0x00000000001656bb : add byte ptr [rax], al ; add bh, bh ; loopne 0x1656ba ; ret
0x00000000000d1b06 : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000087021 : add byte ptr [rax], al ; add bh, dh ; ret 0
0x0000000000039aad : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000d382d : add byte ptr [rax], al ; add bh, dh ; ret 8
0x00000000000c695a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b28cf : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000035a8a : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000c5bf8 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; ret
0x0000000000085532 : add byte ptr [rax], al ; add bl, al ; ret
0x00000000001248ac : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000819ce : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000b5ec8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000b5a05 : add byte ptr [rax], al ; add bl, ch ; ret 0x8d48
0x0000000000084365 : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000129a9b : add byte ptr [rax], al ; add bl, ch ; retf 0x168b
0x000000000011ec78 : add byte ptr [rax], al ; add bl, ch ; retf 0x1ee8
0x00000000000e88af : add byte ptr [rax], al ; add bl, ch ; retf 0x1f0f
0x00000000000e933d : add byte ptr [rax], al ; add bl, ch ; retf 0xf66
0x000000000003447d : add byte ptr [rax], al ; add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009c3fd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009c40d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000217fd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000006b01d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; ret
0x00000000000edf6d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x00000000000f6e33 : add byte ptr [rax], al ; add byte ptr [rax + 0x119], bh ; syscall
0x0000000000083f1d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000164221 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0xe583
0x00000000001617ca : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0x8341
0x000000000004a130 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0xc148
0x00000000000c442d : add byte ptr [rax], al ; add byte ptr [rax + 0x22], bh ; syscall
0x00000000000c44ed : add byte ptr [rax], al ; add byte ptr [rax + 0x23], bh ; syscall
0x00000000000565b1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b776b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000531af : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000cc941 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b44
0x000000000008ba41 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000d545f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd5406
0x00000000000d79e4 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd7988
0x00000000001a3605 : add byte ptr [rax], al ; add byte ptr [rax + 0x34000166], dl ; retf
0x0000000000107911 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xf9ac
0x000000000007e746 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007904d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000010662d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000137d14 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000141101 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000c5bbf : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3974
0x000000000010789d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x000000000007345b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000116a32 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000015a08e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000c48cd : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x000000000018574b : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002c9eb : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000f8a9d : add byte ptr [rax], al ; add byte ptr [rax + 0x44], bh ; syscall
0x00000000000d6fad : add byte ptr [rax], al ; add byte ptr [rax + 0x480f0038], al ; retf
0x00000000000e8635 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x00000000000e7b0d : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000b39cd : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x0000000000058b3a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003a72f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000165017 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000ab7c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000abe98 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000007289d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000001a34e5 : add byte ptr [rax], al ; add byte ptr [rax + 0x65], dh ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000000c52dd : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000001a35dd : add byte ptr [rax], al ; add byte ptr [rax + 0x66], ch ; add dword ptr [rax], eax ; cld ; retf 0xfff5
0x00000000000c52fd : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000c52ed : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000c530d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000c52cd : add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000c531d : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x000000000009c94d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c55ad : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x0000000000035202 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003524f : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000000de66d : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x0000000000163776 : add byte ptr [rax], al ; add byte ptr [rax + 0x9480000], al ; ret 0xb848
0x00000000000b3aad : add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x00000000000f6d5d : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x0000000000103faf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000c6282 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000034ee1 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000000a0585 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x0000000000025303 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000f8898 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x00000000000c5c6c : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000012efb2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000026730 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000818da : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000131639 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000089332 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000089368 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000ea9d2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000002728b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000c5ca4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000115a7d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c5b0d : add byte ptr [rax], al ; add byte ptr [rax + 0xfffa], bh ; ret
0x00000000000eaf77 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000035a85 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000e822d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x00000000000b2220 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000155a67 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000000249b0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000463ed : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000000b369a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000155a5e : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013e6cb : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000003384b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xeeb
0x000000000004710b : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000c5ff4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x0000000000161ad5 : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret
0x00000000001a91c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; push rsp ; ret 1
0x0000000000018b7d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; retf
0x00000000001a9345 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, dl ; ret
0x00000000001a9add : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001af409 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 4
0x000000000018e376 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rsp + rsi*8 - 0x17], ah ; call qword ptr [rdi]
0x00000000000b25a3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x000000000006c5ad : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000019b3dd : add byte ptr [rax], al ; add byte ptr [rax - 0x1c], ch ; add byte ptr [rax], al ; jo 0x19b3e2 ; jmp qword ptr [rdx]
0x00000000001a632d : add byte ptr [rax], al ; add byte ptr [rax - 0x23fffe6d], bh ; retf 0xfff6
0x000000000019b82d : add byte ptr [rax], al ; add byte ptr [rax - 0x23ffff18], bh ; xchg edx, esi ; jmp qword ptr [rcx]
0x000000000003316d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004755d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000342b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000001150d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x83 ; ret 0xf01
0x000000000002133c : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002ac7e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000034c93 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000ed3aa : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000001a62ed : add byte ptr [rax], al ; add byte ptr [rax - 0x6d], bh ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001a62bd : add byte ptr [rax], al ; add byte ptr [rax - 0x6d], cl ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001161da : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b25ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b25fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b25dd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000fe6e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000007ed9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d100d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d6481 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0xd64b5 ; jo 0xd6494 ; ret 0xc083
0x0000000000037898 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x378c6 ; call rdx
0x00000000000d1aad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000f4f3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000008b60d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000fa804 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000c110d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000070933 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000084ba8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x00000000000d5c68 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x000000000004ce7a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000075a57 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; pop rsi ; ret 0xfffa
0x0000000000084ebd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000006f0dc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000029fdf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000117314 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000824da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000004ba52 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006eeee : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000006aa4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2ce9
0x00000000000d5519 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3145
0x00000000000d219a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x774
0x0000000000025d6c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d4bcc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000d593f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bb2cf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000006f05e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000eaefd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbbeb
0x00000000000536bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000037e5e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe875
0x000000000003becd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000024c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000007d82d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000006105b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x7ae8
0x0000000000041431 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000453d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000a0aed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000072c34 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x000000000014f8be : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000151714 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000015616a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000012ee2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001645a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000164bfc : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x0000000000021773 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0xf41
0x00000000000545c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000005783a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000001659f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x0000000000127cb1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000c8e32 : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0d606], al ; ret 0
0x00000000001151dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rdx + 0x78] ; ret
0x0000000000044455 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d8c69
0x000000000003241d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000112c28 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000009f93d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000022923 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f8e40 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000010099f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000008843c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001514b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000daa5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x0000000000153031 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012cc8e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000d715b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x00000000001514dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010d38d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000132b5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x000000000008ea0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000004399d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000d757d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x840f
0x000000000012781a : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000013e6c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000d64ee : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x0000000000196625 : add byte ptr [rax], al ; add byte ptr [rax - 0xbffff6a], dh ; retf 0xffee
0x00000000000332bb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000034f4b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019925c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001a9a00 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 1
0x00000000001992c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x00000000001992d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a91b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000b47f5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; leave ; retf 0xfff6
0x00000000000b486b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; push rbx ; retf 0xfff6
0x000000000007288b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000001a9a42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 1
0x000000000016556b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x000000000009c40b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000217fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007904b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000010662b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x000000000007289b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000000249ae : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000001af407 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 4
0x000000000003316b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000012e5fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b25eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b25fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b25db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000f4f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007ce0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000824d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000007f67b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000536bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007d82b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000000a0aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x000000000003241b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009f93b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000887eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000daa5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000010d38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000132b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x000000000006f14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000de88a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000165ef9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ad590 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001af0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000019e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000000a6f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000b320 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2e
0x0000000000003f10 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x46
0x0000000000185498 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x0000000000009672 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000001d132 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000177cfa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; out dx, eax ; jmp rax
0x000000000018545a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000000040f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009a92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000db5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000000938a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1f
0x000000000016ef32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000006cea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x000000000016f422 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000006eb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000fe82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x00000000000080e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000000812a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x00000000001ad592 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001af0be : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001af4aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001aed52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000000019e6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000001522 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000001157a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000001d7da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17db
0x000000000001dbb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17dd
0x000000000001e302 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17e1
0x00000000000099d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x21
0x000000000016ef72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2e
0x000000000016f462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000000efca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3a
0x0000000000009df2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x0000000000003f12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x46
0x000000000018549a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x00000000000080b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x000000000016e5da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000001ae89a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000000d64a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x000000000001142a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001ae4d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000009f39b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000088c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000382d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000f1f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x000000000009fb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000012b74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000011fadb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000000f752b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000001648ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x0000000000089cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x0000000000131c1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000000000cc9bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000134f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008d66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007a45b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; retf
0x000000000018545b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000007a22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000007a82b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000001afa33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 7], bh ; add byte ptr [rax], al ; ret
0x00000000000b248b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000015aabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf 0xc985
0x00000000000d00cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000008331b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x00000000000f1b7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000001064eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000d392b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000e808b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x0000000000053cab : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000b2aec : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000165a55 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007e2ec : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003447c : add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x00000000001a91c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000000b47f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x212ce
0x00000000001651a6 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xf1be6
0x000000000016556c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000009674 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x0000000000170f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000001d134 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000000ec7a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000f8897 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000ef0c5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a04f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000089367 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000089331 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; pop rbx ; ret
0x000000000005911a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a1b5a : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xa1b57 ; ret
0x00000000001afa34 : add byte ptr [rax], al ; add byte ptr [rax], al ; jp 0x1afa49 ; add byte ptr [rax], al ; ret
0x000000000015e92c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000015e93c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000015e94c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000015e95c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000015e96c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000015e8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000015e8bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000015e8cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000015e8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000015e8ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000015e8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000015e90c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000015e91c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000b25dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000b25fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000b25ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000015e89c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000014a04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009c94c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000009b34c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009c31c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009c01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014a08c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014a0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014a07c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e6bac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009c33c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009c35c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009c34c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000006b01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000000edf6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x0000000000083f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000c442c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000c44ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x23 ; syscall
0x00000000000c48cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000f8a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x00000000000e7b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000b39cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000c52dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000c52fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000c52ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000c530c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000c52cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000c531c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000c55ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000de66c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000b3aac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000000f6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000001046ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000c5b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x000000000007cd8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000035a84 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000e822c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000004710a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001028cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 7 ; ret
0x000000000012a67c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d1a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000fcd3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000c488c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000013f6ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000014a0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000007dba4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000012ab08 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009c37c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009c38c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000011d88a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012ee2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000b9e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0xb9def
0x00000000000bc27c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbc256
0x00000000000bc27c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbc258
0x00000000000f4f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bfd2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007cdfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000070932 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000eaefc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xeaec6
0x0000000000070832 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rdi ; jmp 0x7080e
0x000000000014a05c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009c32c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009c3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009c40c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a82c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a053c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000013f7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000177cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; out dx, eax ; jmp rax
0x000000000012326b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000f95a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000382da : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000088c4d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ab85 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018545c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000018574a : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000040f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007284 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000009a94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000db5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000016ff2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000001706c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000000938c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1f
0x000000000016ef34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000006cec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x000000000016f424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000006eb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000fe84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x00000000000080e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000000812c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x000000000000795c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001ad594 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001af0c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001af4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001aed54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000000019e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000001524 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000004be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000001157c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000001d7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17db
0x000000000001dbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17dd
0x000000000001e304 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17e1
0x000000000016ff64 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000170704 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000000099d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x21
0x000000000016ef74 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2e
0x000000000016f464 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000000efcc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3a
0x0000000000173365 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000009df4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x0000000000003f14 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x46
0x000000000018549c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x00000000000080b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x00000000000062ac : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000ee5c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000000d64c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x000000000001142c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001af408 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf 4
0x00000000001a9a14 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x00000000001ae4d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001ae05c : add byte ptr [rax], al ; add byte ptr [rax], al ; test al, 8 ; add byte ptr [rax], al ; ret
0x000000000003a1a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x000000000015570c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000009f39c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000012f96c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x12f93e
0x000000000012f9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x12f9be
0x00000000000ec9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007cdac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e815c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000015960c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000021acc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000006da8c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000a2ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xa2fd8
0x00000000000b22fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a9241 : add byte ptr [rax], al ; add byte ptr [rax], bh ; add byte ptr [rax], al ; add al, dl ; ret 1
0x00000000001a918d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 1
0x000000000019929d : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000160a04 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000001a637d : add byte ptr [rax], al ; add byte ptr [rax], cl ; xchg eax, esp ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; retf
0x000000000009f39d : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000019925d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, ch ; ret 0
0x0000000000199249 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, bl ; ret 0
0x0000000000199271 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a9189 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 1
0x0000000000199299 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000001a9346 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; ret
0x00000000000e7524 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000000780d1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x000000000006ae70 : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x18 ; ret
0x000000000004a7dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x00000000001131b6 : add byte ptr [rax], al ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x18 ; ret
0x00000000001049f9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; leave ; ret
0x00000000000ed730 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x00000000000f6cc8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x68 ; ret
0x00000000001130d8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x22], dh ; add rsp, 0x18 ; ret
0x00000000000b636e : add byte ptr [rax], al ; add byte ptr [rbp + 0x22], dh ; add rsp, 0x28 ; ret
0x00000000001320f3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x24], dh ; add rsp, 0x48 ; ret
0x000000000004eb0f : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; ret 0xf4c
0x0000000000087f5d : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; retf
0x000000000012f4cb : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x18 ; ret
0x0000000000127c4c : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x28 ; ret
0x0000000000131f0b : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000131e7e : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x38 ; ret
0x000000000002a0b5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000008760d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000bc24a : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d161c : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf
0x00000000000ef2fd : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x0000000000046bfe : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x0000000000131f93 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x00000000000f01a1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; ret
0x00000000000f0270 : add byte ptr [rax], al ; add byte ptr [rbp + 0x40], dh ; add rsp, 0x38 ; ret
0x00000000000f2d7d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000000cd7c3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000e7e14 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000000e8623 : add byte ptr [rax], al ; add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x00000000000e8039 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x00000000000f8bac : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x58 ; ret
0x00000000000c0b88 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x38 ; ret
0x00000000000c56a8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x56], dh ; add rsp, 0x38 ; ret
0x000000000010e73a : add byte ptr [rax], al ; add byte ptr [rbp + 0x59], dh ; add rsp, 0x38 ; ret
0x00000000000ee5ea : add byte ptr [rax], al ; add byte ptr [rbp + 0x76], dh ; add rsp, 0x38 ; ret
0x0000000000132656 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x00000000000ed796 : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x00000000000ba699 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; ret
0x00000000000ee7b3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000001a34d1 : add byte ptr [rax], al ; add byte ptr [rbp + 1], bl ; add byte ptr [rax], bh ; ret 0xfff5
0x0000000000034b6c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000003819c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000001294be : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x00000000000e87a4 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x00000000001274ae : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x0000000000073cfd : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; pop rcx ; retf 0x33
0x00000000000cf3dd : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000fb2a0 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; push rsi ; ret
0x00000000000a1b5b : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000001657c8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; nop dword ptr [rax] ; ret
0x00000000000450d3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf 0x8341
0x00000000000a5b8a : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x000000000005a71c : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f2587 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x000000000005375f : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000000cde65 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000011e765 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000002a4d9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000115dc2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8941
0x0000000000115d72 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x0000000000115d9a : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8941
0x000000000013ef8d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000035de8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021bf4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023cc6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000535de : add byte ptr [rax], al ; add byte ptr [rbx + 0xf4841ff], al ; retf 0x894c
0x000000000015d4a8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001a9ae1 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8 + 1], ch ; add al, cl ; ret 0xfff7
0x000000000018cfbe : add byte ptr [rax], al ; add byte ptr [rbx - 0x17], al ; call qword ptr [rax]
0x000000000012a6d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x000000000005a44a : add byte ptr [rax], al ; add byte ptr [rbx - 0x52743], al ; call qword ptr [rax]
0x0000000000035c38 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6af00008], al ; ret 0xd521
0x00000000000fb018 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x00000000000382db : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000532ba : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000011388b : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x0000000000090b72 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000d5675 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; syscall
0x000000000008ad3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe1d], al ; retf 1
0x00000000000f1f1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x000000000004be02 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8ff43], al ; call qword ptr [rax]
0x0000000000162100 : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x0000000000162cbe : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x000000000005944f : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8949
0x000000000016326b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x000000000009b65f : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x0000000000074074 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000014a0ad : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000cae65 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; retf
0x00000000000550c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000130cdf : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000014a08d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009c35d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000001a15cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x57], bl ; cmc ; call qword ptr [rax]
0x00000000001048b9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x0000000000049a54 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000b166b : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; retf
0x0000000000056f98 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00000000000555fd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf01
0x0000000000056f25 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005b09a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000162171 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x0000000000162f2f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0x8349
0x000000000012bf3c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0xff85
0x000000000009fb7d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000b4f0e : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; retf 0x8d49
0x00000000001a3b76 : add byte ptr [rax], al ; add byte ptr [rcx + rax], ch ; adc ecx, r15d ; jmp qword ptr [rbx]
0x00000000000ce4e9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], al ; call 0xfa7f8
0x000000000002ea2f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000000c474a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x00000000000759df : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000010441b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x00000000000711bc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000015995d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000058e05 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x75088
0x000000000012b74d : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000e6bad : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000004f2ee : add byte ptr [rax], al ; add byte ptr [rcx - 0x46], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000059f0d : add byte ptr [rax], al ; add byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000030439 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000004352b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x4440
0x0000000000043b6c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xb940
0x00000000000cd4b3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000b9e1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc4eb
0x00000000000bc27d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0xcbeb
0x0000000000162bfd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x000000000004c9ff : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001608e2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000011cd59 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000000865a4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000000f752d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000f6f9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000875e6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x00000000000b03ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x8b04
0x00000000000d6645 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x0000000000021656 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x00000000001648ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x0000000000082173 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000809e9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000087677 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000089b9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x0000000000131c1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000000000cc9bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000134f7d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000c4bc6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x000000000008d66d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007a45d : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; retf
0x0000000000111335 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x000000000011120f : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000018545d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000090d40 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000090d66 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000d4f77 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000086454 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000b954d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bcefa : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x858b
0x00000000000bce52 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000bae39 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x894c
0x00000000000bd1e4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000bb863 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000be418 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000edd71 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x0000000000054f28 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b3ddf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000b9514 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xe889
0x00000000000a3a63 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul cl ; ret 0xfffc
0x00000000000f1b9a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000037a3b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009068a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000012a789 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 5 ; retf
0x00000000001346d1 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x25 ; retf 0xffee
0x0000000000044b5e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x58 ; retf
0x000000000002a3af : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x87 ; retf
0x000000000006da8d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000a1802 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001606f2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000021dbd : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000004a455 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; sbb dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x0000000000125106 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x00000000001250ce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x0000000000121d9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x0000000000121db7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], eax ; ret
0x00000000000e73fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000a0485 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000013f78d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000013f7fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000b9edd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c8ead : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a053d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000007a82d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000000906cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000055735 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; push rax ; ret 0xf41
0x00000000000c2c1b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000bd0fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00000000000df800 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x00000000001047d6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000002acc9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000000d1b52 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000bcfca : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000000ba0a1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf001
0x00000000000ec7a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001552bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000006a8cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000c69e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xbdeb
0x000000000018e676 : add byte ptr [rax], al ; add byte ptr [rdi], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; imul ecx ; call qword ptr [rbx]
0x000000000019e676 : add byte ptr [rax], al ; add byte ptr [rdi], dl ; add dword ptr [rax], eax ; push rsp ; test esp, esi ; call qword ptr [rax]
0x00000000001afa35 : add byte ptr [rax], al ; add byte ptr [rdx + 7], bh ; add byte ptr [rax], al ; ret
0x00000000000ab2d7 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000155400 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000015b372 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000090aca : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000905f2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000b248d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000015aabd : add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf 0xc985
0x00000000000d3a17 : add byte ptr [rax], al ; add cl, ch ; cmp eax, 0xf7fffffc ; ret 0
0x0000000000026f8d : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000e0b27 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000002b5b8 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x0000000000026bd7 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000000000005a803 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000002ed61 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000004bb5a : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000006896e : add byte ptr [rax], al ; add cl, ch ; retf 0xffb2
0x00000000000661be : add byte ptr [rax], al ; add cl, ch ; retf 0xffe3
0x00000000000aa902 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff9
0x0000000000029814 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000052f71 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x00000000001645ee : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000005fad1 : add byte ptr [rax], al ; add cl, ch ; xlatb ; retf 0xffff
0x00000000000576bd : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000000d004e : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000024e1d : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000008331d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x00000000000f1b7d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000001064ed : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000015fb61 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000d392d : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000d109a : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x000000000011dd81 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000000000096710 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000096719 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x0000000000053cad : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000001012ff : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000c9a9d : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdx*8 - 1], esi ; jmp qword ptr [rax]
0x00000000001ac1be : add byte ptr [rax], al ; add dword ptr [rax], eax ; in al, dx ; push rsp ; clc ; call qword ptr [rbx]
0x00000000001a13b6 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; push rsp ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000cd893 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x000000000006b02e : add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000012356b : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000001a1a77 : add byte ptr [rax], al ; add qword ptr [r8], rax ; mov ah, 0x5d ; cmc ; jmp qword ptr [rcx]
0x00000000001a1bb6 : add byte ptr [rax], al ; add qword ptr [rax], r8 ; je 0x1a1c26 ; cmc ; jmp qword ptr [rcx]
0x00000000001a52be : add byte ptr [rax], al ; add qword ptr [rcx], 0 ; mov word ptr [rsi - 0xa], ss ; call rdx
0x000000000004449e : add byte ptr [rax], al ; add rax, 1 ; pop rbx ; ret
0x00000000000b2aee : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000904a3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000155a68 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x0000000000122911 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000125071 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000124741 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000121ce4 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000003384c : add byte ptr [rax], al ; add rdx, rcx ; jmp 0x33865
0x0000000000084788 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074412 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6bc9 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000034b28 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000021d1b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000004a076 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000341f0 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000001647b1 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000007ae8b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ec704 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000000000004510b : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000eeaa3 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e7cfc : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000000000e7f21 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000008634d : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000022ab7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033e06 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003447e : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x00000000001a91c6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x0000000000018b7e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; retf
0x0000000000195b5a : add byte ptr [rax], al ; and al, 0x78 ; out dx, al ; call qword ptr [rdx]
0x0000000000188256 : add byte ptr [rax], al ; and al, 0xa0 ; out dx, al ; inc dword ptr [rax] ; ret 0
0x0000000000188b1e : add byte ptr [rax], al ; and al, 0xb8 ; out dx, eax ; jmp rsp
0x000000000019dc9a : add byte ptr [rax], al ; and al, 0xd ; add dword ptr [rax], eax ; mov al, 0xd ; hlt ; call qword ptr [rcx]
0x000000000019694a : add byte ptr [rax], al ; and al, 0xd9 ; out dx, al ; call qword ptr [rdx]
0x000000000018847e : add byte ptr [rax], al ; and al, 0xe6 ; out dx, al ; jmp rsp
0x000000000019b696 : add byte ptr [rax], al ; and bh, ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b699 ; call rsi
0x000000000019b696 : add byte ptr [rax], al ; and bh, ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b69a ; call rsi
0x000000000019a296 : add byte ptr [rax], al ; and bl, dl ; add byte ptr [rax], al ; adc al, 0x98 ; int1 ; jmp qword ptr [rcx]
0x00000000001a7296 : add byte ptr [rax], al ; and byte ptr [rbx - 0x1a9bffff], ah ; sti ; jmp qword ptr [rdx]
0x000000000019db96 : add byte ptr [rax], al ; and byte ptr [rcx + rax], cl ; add ah, dh ; or esi, esp ; jmp qword ptr [rcx]
0x000000000019f096 : add byte ptr [rax], al ; and byte ptr [rcx], ah ; add dword ptr [rax], eax ; lodsb al, byte ptr fs:[rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000000a0586 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000001aa096 : add byte ptr [rax], al ; and cl, dl ; add dword ptr [rax], eax ; sal bh, cl ; call rax
0x00000000000f6b24 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000002debb : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000756ae : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000906ce : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000096150 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000095e34 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000037ce0 : add byte ptr [rax], al ; call 0x103f74
0x0000000000037d80 : add byte ptr [rax], al ; call 0x103fa4
0x0000000000197f96 : add byte ptr [rax], al ; call 0x11197c7f
0x000000000018f086 : add byte ptr [rax], al ; call 0x1318dae3
0x0000000000104e18 : add byte ptr [rax], al ; call 0x21104
0x000000000018fc96 : add byte ptr [rax], al ; call 0x2118e71f
0x00000000000d47d7 : add byte ptr [rax], al ; call 0x211e4
0x0000000000085011 : add byte ptr [rax], al ; call 0x212c4
0x00000000000b4fd1 : add byte ptr [rax], al ; call 0x212cc
0x0000000000198606 : add byte ptr [rax], al ; call 0x2419763b
0x000000000005d661 : add byte ptr [rax], al ; call 0x3a114
0x0000000000066c5a : add byte ptr [rax], al ; call 0x636a4
0x000000000006f52d : add byte ptr [rax], al ; call 0x7bf64
0x0000000000081acc : add byte ptr [rax], al ; call 0x7ddd4
0x000000000006add3 : add byte ptr [rax], al ; call 0xe7854
0x00000000001651a8 : add byte ptr [rax], al ; call 0xf1be4
0x000000000019a346 : add byte ptr [rax], al ; call 0xffffffffe41994ed
0x000000000016556e : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000009676 : add byte ptr [rax], al ; call qword ptr [rdx]
0x0000000000021aa0 : add byte ptr [rax], al ; call rax
0x0000000000170f5e : add byte ptr [rax], al ; call rdi
0x00000000000377c5 : add byte ptr [rax], al ; call rdx
0x000000000001d136 : add byte ptr [rax], al ; call rsp
0x000000000019096e : add byte ptr [rax], al ; clc ; cmp dword ptr [rax], eax ; add ah, cl ; adc al, 0xeb ; call rdi
0x00000000000a0604 : add byte ptr [rax], al ; clc ; jg 0xa0608 ; int1 ; mov eax, eax ; ret
0x000000000019666e : add byte ptr [rax], al ; clc ; xchg eax, esi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a036e : add byte ptr [rax], al ; clc ; xor eax, dword ptr [rcx] ; add ah, bl ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001a1972 : add byte ptr [rax], al ; cld ; add qword ptr [r8], rax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x0000000000198472 : add byte ptr [rax], al ; cld ; mov ah, 0 ; add byte ptr [rax], cl ; sti ; call qword ptr [rax]
0x00000000001abf72 : add byte ptr [rax], al ; cld ; out dx, eax ; add dword ptr [rax], eax ; call 0xffffffffe41ab7cc
0x000000000019e972 : add byte ptr [rax], al ; cld ; sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x70], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001884fe : add byte ptr [rax], al ; cmc ; out dx, al ; call rax
0x00000000001047d7 : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000ec7a6 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000113bd0 : add byte ptr [rax], al ; cmovae eax, edi ; ret
0x00000000000f8899 : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000df801 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000ef0c7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a0531 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000a04f9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000086193 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d1b53 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x0000000000104698 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000089333 : add byte ptr [rax], al ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000a30b2 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c405f : add byte ptr [rax], al ; cmovne rdx, rax ; mov rax, rdx ; ret
0x00000000000fec4f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001983d6 : add byte ptr [rax], al ; cmp ah, bl ; sti ; call qword ptr [rax]
0x00000000001a1ab2 : add byte ptr [rax], al ; cmp al, 0x4b ; add dword ptr [rax], eax ; or byte ptr [rsi - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001958d2 : add byte ptr [rax], al ; cmp al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000199db2 : add byte ptr [rax], al ; cmp al, 0xce ; add byte ptr [rax], al ; js 0x199e41 ; int1 ; call qword ptr [rax]
0x000000000014dfc6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001a3aae : add byte ptr [rax], al ; cmp byte ptr [rbx + 1], ch ; add ah, cl ; add dh, dh ; jmp qword ptr [rbx]
0x000000000018ef56 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0x16], cl ; call qword ptr [rax]
0x0000000000194836 : add byte ptr [rax], al ; cmp byte ptr [rsi], dh ; out dx, al ; jmp rbx
0x00000000001981f6 : add byte ptr [rax], al ; cmp dl, bl ; sti ; call rsp
0x000000000017715a : add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000000000c69df : add byte ptr [rax], al ; cmp eax, 0x4000 ; sete dl ; jmp 0xc69b1
0x00000000000dc8ff : add byte ptr [rax], al ; cmp eax, 0x4000 ; sete dl ; jmp 0xdc8d1
0x00000000001a7bef : add byte ptr [rax], al ; cmp esi, edi ; jmp qword ptr [rbx]
0x00000000001a08be : add byte ptr [rax], al ; cmp qword ptr [rcx], rax ; add byte ptr [rdx + rdx], bh ; cmc ; jmp rax
0x00000000000823d7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x823a8 ; ret
0x000000000010662e : add byte ptr [rax], al ; cmp rdx, rcx ; ja 0x106665 ; xor eax, eax ; syscall
0x00000000001a190e : add byte ptr [rax], al ; cwde ; add qword ptr [r8], rax ; fcomp qword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x0000000000196aa6 : add byte ptr [rax], al ; cwde ; fucomip st(6) ; jmp qword ptr [rax]
0x000000000018e666 : add byte ptr [rax], al ; cwde ; imul ecx ; call qword ptr [rdx]
0x00000000001a3a0e : add byte ptr [rax], al ; cwde ; push 1 ; add ah, ch ; push rbp ; jmp qword ptr [rbx]
0x000000000019640e : add byte ptr [rax], al ; cwde ; xchg eax, esp ; add byte ptr [rax], al ; jl 0x1963e5 ; stc ; call qword ptr [rcx]
0x000000000019040e : add byte ptr [rax], al ; cwde ; xor al, 0 ; add byte ptr [rbx + rdx*4 - 0x16], cl ; call qword ptr [rdx]
0x00000000001975b6 : add byte ptr [rax], al ; enter -0x1102, -1 ; retf 0
0x00000000001974b6 : add byte ptr [rax], al ; enter -0x1104, -1 ; retf 0
0x00000000001997be : add byte ptr [rax], al ; enter 0, -0x54 ; sbb dh, cl ; call qword ptr [rax]
0x000000000016d0ba : add byte ptr [rax], al ; enter 0, 0 ; retf
0x000000000017110e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000016e266 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x000000000019e63e : add byte ptr [rax], al ; enter 0x116, 0 ; jl 0x19e5d4 ; hlt ; call qword ptr [rax]
0x00000000001a113e : add byte ptr [rax], al ; enter 0x141, 0 ; fdiv qword ptr [rax] ; cmc ; jmp rsp
0x000000000016da66 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000016de66 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x000000000017130e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x000000000017150e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x000000000017170e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x000000000017190e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x0000000000171b0e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x0000000000171d0e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x0000000000171f0e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x000000000017210e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x000000000017230e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x000000000019504e : add byte ptr [rax], al ; fadd dword ptr [rax + 0x564c0000] ; out dx, al ; jmp qword ptr [rsi]
0x000000000019d44e : add byte ptr [rax], al ; fadd dword ptr [rcx + rax] ; add byte ptr [rsi + rcx*8], bh ; call rax
0x000000000019e052 : add byte ptr [rax], al ; fcom qword ptr [rax] ; add dword ptr [rax], eax ; fcom dword ptr [rcx - 0xc] ; call rsp
0x000000000018f072 : add byte ptr [rax], al ; fcom qword ptr [rcx - 0x16] ; call qword ptr [rdx]
0x000000000018ef52 : add byte ptr [rax], al ; fcomp qword ptr [rdi] ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x16], cl ; call qword ptr [rax]
0x000000000019ea52 : add byte ptr [rax], al ; fcomp qword ptr [rdx] ; add dword ptr [rax], eax ; test al, 0x91 ; hlt ; jmp qword ptr [rcx]
0x000000000019ed52 : add byte ptr [rax], al ; fcomp qword ptr [rip - 0x6397ffff] ; hlt ; jmp qword ptr [rcx]
0x000000000019854e : add byte ptr [rax], al ; fdiv dword ptr [rbp + 0x125c0000] ; cld ; jmp qword ptr [rax]
0x000000000019464e : add byte ptr [rax], al ; fdiv dword ptr [rsi] ; add byte ptr [rdi + rbp - 0x12], bl ; jmp rdi
0x00000000001aae77 : add byte ptr [rax], al ; fild word ptr [rcx] ; add byte ptr [rsi + rsi*8 - 9], dh ; call rdi
0x0000000000033d4e : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x00000000001a1a4e : add byte ptr [rax], al ; fmul dword ptr [rdx + 1] ; add byte ptr [rbp + rbx*2 - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001a1b52 : add byte ptr [rax], al ; fmul qword ptr [rbx + 1] ; add al, ch ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x000000000019744e : add byte ptr [rax], al ; fsub dword ptr [rax + rax - 0x1104e400] ; call qword ptr [rax]
0x000000000018fc4e : add byte ptr [rax], al ; fsubr dword ptr [rax + rax] ; add byte ptr [rbp + rdi*2 - 0x16], cl ; call rsi
0x00000000001a3b4e : add byte ptr [rax], al ; fsubr dword ptr [rbx + 1] ; add byte ptr [rcx + rdx], bh ; stc ; jmp qword ptr [rbx]
0x00000000001a3c52 : add byte ptr [rax], al ; fsubr qword ptr [rcx + rax] ; clc ; add esi, esi ; jmp qword ptr [rbx]
0x0000000000198aba : add byte ptr [rax], al ; hlt ; adc al, 0xfc ; call qword ptr [rbx]
0x000000000018d56a : add byte ptr [rax], al ; hlt ; add eax, 0x79b00000 ; std ; jmp qword ptr [rdx]
0x000000000018fa4a : add byte ptr [rax], al ; hlt ; je 0x18fa3e ; call rsp
0x00000000001885e6 : add byte ptr [rax], al ; hlt ; or ebp, edi ; jmp rax
0x0000000000188836 : add byte ptr [rax], al ; hlt ; out dx, eax ; call rsp
0x000000000019662a : add byte ptr [rax], al ; hlt ; retf 0xffee
0x000000000018e5da : add byte ptr [rax], al ; imul ecx ; call qword ptr [rdx]
0x00000000001a3ac2 : add byte ptr [rax], al ; imul r8, qword ptr [rcx], 0 ; call 0x241a30d6
0x000000000019e65a : add byte ptr [rax], al ; in al, 0x16 ; add dword ptr [rax], eax ; and byte ptr [rax - 7], ah ; call qword ptr [rax]
0x000000000019185a : add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; nop ; sbb esp, ebp ; call qword ptr [rbx]
0x0000000000188ade : add byte ptr [rax], al ; in al, 0xab ; out dx, eax ; jmp qword ptr [rax]
0x000000000019dc5a : add byte ptr [rax], al ; in al, 0xc ; add dword ptr [rax], eax ; nop ; or al, 0xf4 ; call qword ptr [rdx]
0x0000000000188bd6 : add byte ptr [rax], al ; in al, 0xd3 ; out dx, eax ; jmp rsp
0x0000000000188576 : add byte ptr [rax], al ; in al, 3 ; out dx, eax ; jmp rax
0x00000000001a1a62 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], rax ; cwde ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000001a0862 : add byte ptr [rax], al ; in al, dx ; cmp byte ptr [rcx], al ; add al, cl ; adc ch, dh ; call qword ptr [rdx]
0x000000000019ff6f : add byte ptr [rax], al ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a3d62 : add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bl ; cld ; jmp qword ptr [rdx]
0x0000000000199262 : add byte ptr [rax], al ; in al, dx ; ret 0
0x000000000019ceda : add byte ptr [rax], al ; inc dword ptr fs:[rax] ; add byte ptr [rax + 0x56], dl ; jmp rbx
0x00000000001a3b77 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; adc ecx, r15d ; jmp qword ptr [rbx]
0x00000000001a3bda : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000001a50e2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rcx], 0xf64d1800 ; call rdx
0x00000000001a1ce2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add qword ptr [r8], r8 ; sub byte ptr [rcx - 0xb], ah ; jmp qword ptr [rcx]
0x000000000019a2d2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cdq ; int1 ; jmp rsi
0x0000000000199ee2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; iretd ; add byte ptr [rax], al ; js 0x199efd ; cld ; jmp rsi
0x000000000019dae2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, dword ptr [rcx] ; add byte ptr [rax + 0xb], cl ; hlt ; call qword ptr [rsi]
0x0000000000192ce2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rbp ; add byte ptr [rax], al ; test al, 0xca ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000196672 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000195ee2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg esi, ebp ; jmp rax
0x000000000019ffe2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor byte ptr [rcx], al ; add al, ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000199eba : add byte ptr [rax], al ; iretd ; add byte ptr [rax], al ; jo 0x199ed3 ; cld ; jmp qword ptr [rbx]
0x00000000001a45ba : add byte ptr [rax], al ; jbe 0x1a45c9 ; add al, dl ; and esi, esi ; call qword ptr [rbx]
0x0000000000106d70 : add byte ptr [rax], al ; je 0x106d85 ; ret
0x0000000000187d76 : add byte ptr [rax], al ; je 0x187d7f ; in al, dx ; call rax
0x00000000001884d6 : add byte ptr [rax], al ; je 0x1884d1 ; out dx, al ; jmp qword ptr [rax]
0x00000000001885f6 : add byte ptr [rax], al ; je 0x18860b ; out dx, eax ; call qword ptr [rax]
0x000000000018e5ea : add byte ptr [rax], al ; je 0x18e60d ; add byte ptr [rax], al ; push rax ; imul ecx ; call qword ptr [rbx]
0x0000000000199dca : add byte ptr [rax], al ; je 0x199e51 ; int1 ; call qword ptr [rdx]
0x000000000019edea : add byte ptr [rax], al ; je 0x19ee15 ; add dword ptr [rax], eax ; push rax ; popfq ; hlt ; jmp qword ptr [rcx]
0x0000000000084fe6 : add byte ptr [rax], al ; je 0x84ff5 ; ret
0x00000000000a1ef0 : add byte ptr [rax], al ; je 0xa1f05 ; ret
0x00000000000ab2d8 : add byte ptr [rax], al ; je 0xab2e3 ; ret
0x00000000000b25a4 : add byte ptr [rax], al ; je 0xb2618 ; lea rax, [rdi - 0x10] ; ret
0x00000000000c5ab2 : add byte ptr [rax], al ; je 0xc5b19 ; mov eax, 0x7f ; ret
0x00000000000c5cf6 : add byte ptr [rax], al ; je 0xc5ce4 ; mov eax, 1 ; ret
0x00000000001606f3 : add byte ptr [rax], al ; jg 0x160706 ; neg eax ; ret
0x00000000000a1803 : add byte ptr [rax], al ; jg 0xa180f ; neg eax ; ret
0x000000000018fc52 : add byte ptr [rax], al ; jge 0x18fc46 ; call rsi
0x000000000015d4a9 : add byte ptr [rax], al ; jl 0x15d4b6 ; neg eax ; ret
0x00000000001951d2 : add byte ptr [rax], al ; jl 0x195238 ; out dx, al ; call qword ptr [rdx]
0x0000000000196412 : add byte ptr [rax], al ; jl 0x1963e1 ; stc ; call qword ptr [rcx]
0x00000000001974f2 : add byte ptr [rax], al ; jl 0x1974f8 ; out dx, al ; call qword ptr [rcx]
0x00000000001981f2 : add byte ptr [rax], al ; jl 0x1981b1 ; add byte ptr [rax], al ; cmp dl, bl ; sti ; call rsp
0x000000000019b6d6 : add byte ptr [rax], al ; jl 0x19b6d1 ; call rbx
0x000000000019b6d6 : add byte ptr [rax], al ; jl 0x19b6d2 ; call rbx
0x000000000019d7f2 : add byte ptr [rax], al ; jl 0x19d807 ; add dword ptr [rax], eax ; mov dh, ch ; jmp qword ptr [rdi]
0x00000000001a13f2 : add byte ptr [rax], al ; jl 0x1a1443 ; add dword ptr [rax], eax ; test al, 0x39 ; cmc ; jmp qword ptr [rcx]
0x000000000011ce13 : add byte ptr [rax], al ; jmp 0x11cde5
0x00000000000602ea : add byte ptr [rax], al ; jmp 0x5c5b4
0x000000000006319f : add byte ptr [rax], al ; jmp 0x5fbb3
0x0000000000067223 : add byte ptr [rax], al ; jmp 0x63c44
0x00000000000819cf : add byte ptr [rax], al ; jmp 0x81999
0x0000000000084366 : add byte ptr [rax], al ; jmp 0x84338
0x000000000002e1f7 : add byte ptr [rax], al ; jmp rax
0x0000000000121ceb : add byte ptr [rax], al ; jmp rcx
0x00000000001049fa : add byte ptr [rax], al ; jne 0x104a1d ; leave ; ret
0x00000000001079f2 : add byte ptr [rax], al ; jne 0x107a0d ; add rsp, 0x28 ; ret
0x0000000000107a52 : add byte ptr [rax], al ; jne 0x107a6d ; add rsp, 0x28 ; ret
0x000000000010e73b : add byte ptr [rax], al ; jne 0x10e7a0 ; add rsp, 0x38 ; ret
0x000000000010e822 : add byte ptr [rax], al ; jne 0x10e833 ; add rsp, 0x28 ; ret
0x00000000001130d9 : add byte ptr [rax], al ; jne 0x113107 ; add rsp, 0x18 ; ret
0x00000000001131b7 : add byte ptr [rax], al ; jne 0x1131d9 ; add rsp, 0x18 ; ret
0x0000000000113d1a : add byte ptr [rax], al ; jne 0x113d32 ; add rsp, 0x18 ; ret
0x00000000001156de : add byte ptr [rax], al ; jne 0x1156ef ; add rsp, 0x18 ; ret
0x0000000000119ad1 : add byte ptr [rax], al ; jne 0x119ae2 ; add rsp, 0x18 ; ret
0x000000000011b805 : add byte ptr [rax], al ; jne 0x11b818 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000011c59d : add byte ptr [rax], al ; jne 0x11c5b0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011e556 : add byte ptr [rax], al ; jne 0x11e59c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011e99e : add byte ptr [rax], al ; jne 0x11e9b1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011ec53 : add byte ptr [rax], al ; jne 0x11ec86 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011ecf3 : add byte ptr [rax], al ; jne 0x11ed27 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011f559 : add byte ptr [rax], al ; jne 0x11f56a ; add rsp, 0x58 ; ret
0x00000000001232e9 : add byte ptr [rax], al ; jne 0x123374 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000125e91 : add byte ptr [rax], al ; jne 0x125ea4 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000126261 : add byte ptr [rax], al ; jne 0x12627f ; add rsp, 0x18 ; ret
0x0000000000126369 : add byte ptr [rax], al ; jne 0x126388 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001263f9 : add byte ptr [rax], al ; jne 0x126418 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001266e1 : add byte ptr [rax], al ; jne 0x1266ff ; add rsp, 0x18 ; ret
0x000000000012675a : add byte ptr [rax], al ; jne 0x126778 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001274af : add byte ptr [rax], al ; jne 0x1274c0 ; add rsp, 0x78 ; ret
0x0000000000127515 : add byte ptr [rax], al ; jne 0x127526 ; add rsp, 0x78 ; ret
0x0000000000127585 : add byte ptr [rax], al ; jne 0x127596 ; add rsp, 0x78 ; ret
0x00000000001275f5 : add byte ptr [rax], al ; jne 0x127606 ; add rsp, 0x78 ; ret
0x0000000000127656 : add byte ptr [rax], al ; jne 0x127667 ; add rsp, 0x78 ; ret
0x00000000001276ba : add byte ptr [rax], al ; jne 0x1276cb ; add rsp, 0x78 ; ret
0x0000000000127725 : add byte ptr [rax], al ; jne 0x127736 ; add rsp, 0x78 ; ret
0x000000000012779f : add byte ptr [rax], al ; jne 0x1277b0 ; add rsp, 0x78 ; ret
0x0000000000127c4d : add byte ptr [rax], al ; jne 0x127c85 ; add rsp, 0x28 ; ret
0x00000000001294bf : add byte ptr [rax], al ; jne 0x1294d0 ; add rsp, 0x48 ; ret
0x0000000000129516 : add byte ptr [rax], al ; jne 0x12955c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129596 : add byte ptr [rax], al ; jne 0x1295db ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129656 : add byte ptr [rax], al ; jne 0x12969e ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001298b6 : add byte ptr [rax], al ; jne 0x1298fd ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129936 : add byte ptr [rax], al ; jne 0x12997c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001299c4 : add byte ptr [rax], al ; jne 0x1299d7 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129a24 : add byte ptr [rax], al ; jne 0x129a37 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129a76 : add byte ptr [rax], al ; jne 0x129ac2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129af6 : add byte ptr [rax], al ; jne 0x129b3c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a126 : add byte ptr [rax], al ; jne 0x12a16e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a1a6 : add byte ptr [rax], al ; jne 0x12a1ee ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a226 : add byte ptr [rax], al ; jne 0x12a26e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a2a6 : add byte ptr [rax], al ; jne 0x12a2ee ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f4cc : add byte ptr [rax], al ; jne 0x12f504 ; add rsp, 0x18 ; ret
0x000000000012f943 : add byte ptr [rax], al ; jne 0x12f97d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f9c3 : add byte ptr [rax], al ; jne 0x12f9fd ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000131e7f : add byte ptr [rax], al ; jne 0x131ebb ; add rsp, 0x38 ; ret
0x0000000000131f0c : add byte ptr [rax], al ; jne 0x131f44 ; add rsp, 0x38 ; ret
0x0000000000131f94 : add byte ptr [rax], al ; jne 0x131fdc ; add rsp, 0x38 ; ret
0x00000000001320f4 : add byte ptr [rax], al ; jne 0x132124 ; add rsp, 0x48 ; ret
0x0000000000132657 : add byte ptr [rax], al ; jne 0x13266e ; add rsp, 0x28 ; ret
0x0000000000155e32 : add byte ptr [rax], al ; jne 0x155d48 ; ret
0x000000000015a280 : add byte ptr [rax], al ; jne 0x15a208 ; ret
0x0000000000034b6d : add byte ptr [rax], al ; jne 0x34b7e ; add rsp, 0x18 ; ret
0x00000000000356dd : add byte ptr [rax], al ; jne 0x356f0 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000003819d : add byte ptr [rax], al ; jne 0x381ae ; add rsp, 0x28 ; ret
0x000000000003828d : add byte ptr [rax], al ; jne 0x3829e ; add rsp, 0x28 ; ret
0x0000000000038833 : add byte ptr [rax], al ; jne 0x3884d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003a189 : add byte ptr [rax], al ; jne 0x3a1cc ; xor eax, eax ; ret
0x000000000003cb19 : add byte ptr [rax], al ; jne 0x3cb5c ; xor eax, eax ; ret
0x000000000003f4f9 : add byte ptr [rax], al ; jne 0x3f53c ; xor eax, eax ; ret
0x0000000000046bff : add byte ptr [rax], al ; jne 0x46c43 ; leave ; ret
0x00000000000473d9 : add byte ptr [rax], al ; jne 0x4741c ; xor eax, eax ; ret
0x000000000004a7dd : add byte ptr [rax], al ; jne 0x4a7fd ; add rsp, 0x38 ; ret
0x000000000006ae71 : add byte ptr [rax], al ; jne 0x6ae8f ; add rsp, 0x18 ; ret
0x00000000000780d2 : add byte ptr [rax], al ; jne 0x780ef ; add rsp, 0x48 ; ret
0x000000000007e5dd : add byte ptr [rax], al ; jne 0x7e62b ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000a1b5c : add byte ptr [rax], al ; jne 0xa1b55 ; ret
0x00000000000a3a99 : add byte ptr [rax], al ; jne 0xa3adc ; xor eax, eax ; ret
0x00000000000a6209 : add byte ptr [rax], al ; jne 0xa624c ; xor eax, eax ; ret
0x00000000000a88e9 : add byte ptr [rax], al ; jne 0xa892c ; xor eax, eax ; ret
0x00000000000ae05d : add byte ptr [rax], al ; jne 0xae08d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000af1d9 : add byte ptr [rax], al ; jne 0xaf21c ; xor eax, eax ; ret
0x00000000000b3147 : add byte ptr [rax], al ; jne 0xb315a ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000b636f : add byte ptr [rax], al ; jne 0xb639d ; add rsp, 0x28 ; ret
0x00000000000b64a0 : add byte ptr [rax], al ; jne 0xb64c0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000bc132 : add byte ptr [rax], al ; jne 0xbc143 ; add rsp, 0x18 ; ret
0x00000000000bece2 : add byte ptr [rax], al ; jne 0xbecf3 ; add rsp, 0x18 ; ret
0x00000000000c0b89 : add byte ptr [rax], al ; jne 0xc0be3 ; add rsp, 0x38 ; ret
0x00000000000c4d20 : add byte ptr [rax], al ; jne 0xc4d5d ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c4ea0 : add byte ptr [rax], al ; jne 0xc4edd ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c5389 : add byte ptr [rax], al ; jne 0xc53e3 ; add rsp, 0x38 ; ret
0x00000000000c5419 : add byte ptr [rax], al ; jne 0xc5473 ; add rsp, 0x38 ; ret
0x00000000000c56a9 : add byte ptr [rax], al ; jne 0xc570b ; add rsp, 0x38 ; ret
0x00000000000c5749 : add byte ptr [rax], al ; jne 0xc57ab ; add rsp, 0x38 ; ret
0x00000000000c5ae7 : add byte ptr [rax], al ; jne 0xc5abb ; ret
0x00000000000e7525 : add byte ptr [rax], al ; jne 0xe7541 ; add rsp, 0x28 ; ret
0x00000000000e768e : add byte ptr [rax], al ; jne 0xe76e4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e774a : add byte ptr [rax], al ; jne 0xe775b ; add rsp, 0x18 ; ret
0x00000000000e779c : add byte ptr [rax], al ; jne 0xe77ad ; add rsp, 0x18 ; ret
0x00000000000e7e15 : add byte ptr [rax], al ; jne 0xe7e63 ; add rsp, 0x58 ; ret
0x00000000000e803a : add byte ptr [rax], al ; jne 0xe808b ; add rsp, 0x58 ; ret
0x00000000000e8624 : add byte ptr [rax], al ; jne 0xe8673 ; add rsp, 0x18 ; ret
0x00000000000e87a5 : add byte ptr [rax], al ; jne 0xe87b6 ; add rsp, 0x58 ; ret
0x00000000000e8891 : add byte ptr [rax], al ; jne 0xe8905 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e9412 : add byte ptr [rax], al ; jne 0xe93c0 ; mov rdi, rbx ; call 0x85ea9
0x00000000000ed731 : add byte ptr [rax], al ; jne 0xed75b ; add rsp, 0x38 ; ret
0x00000000000ed797 : add byte ptr [rax], al ; jne 0xed7af ; add rsp, 0x18 ; ret
0x00000000000ee499 : add byte ptr [rax], al ; jne 0xee4fb ; add rsp, 0x38 ; ret
0x00000000000ee539 : add byte ptr [rax], al ; jne 0xee59b ; add rsp, 0x38 ; ret
0x00000000000ee5eb : add byte ptr [rax], al ; jne 0xee66d ; add rsp, 0x38 ; ret
0x00000000000ee6bb : add byte ptr [rax], al ; jne 0xee73d ; add rsp, 0x38 ; ret
0x00000000000ee7b4 : add byte ptr [rax], al ; jne 0xee7cf ; add rsp, 0x28 ; ret
0x00000000000ef210 : add byte ptr [rax], al ; jne 0xef221 ; add rsp, 0x28 ; ret
0x00000000000ef2fe : add byte ptr [rax], al ; jne 0xef345 ; add rsp, 0x68 ; ret
0x00000000000f01a2 : add byte ptr [rax], al ; jne 0xf01ed ; add rsp, 0x38 ; ret
0x00000000000f0271 : add byte ptr [rax], al ; jne 0xf02bd ; add rsp, 0x38 ; ret
0x00000000000f6cc9 : add byte ptr [rax], al ; jne 0xf6cf3 ; add rsp, 0x68 ; ret
0x00000000000f8618 : add byte ptr [rax], al ; jne 0xf8629 ; add rsp, 0x18 ; ret
0x00000000000f8bad : add byte ptr [rax], al ; jne 0xf8c03 ; add rsp, 0x58 ; ret
0x00000000001ad936 : add byte ptr [rax], al ; jno 0x1ad943 ; add byte ptr [rax], al ; retf 5
0x00000000001af042 : add byte ptr [rax], al ; jnp 0x1af052 ; add byte ptr [rax], al ; ret 4
0x000000000018df4a : add byte ptr [rax], al ; jo 0x18df51 ; jmp qword ptr [rdi]
0x0000000000199ebe : add byte ptr [rax], al ; jo 0x199ecf ; cld ; jmp qword ptr [rbx]
0x000000000019a3e6 : add byte ptr [rax], al ; jo 0x19a3c7 ; add byte ptr [rax], al ; add al, 0x9d ; int1 ; call rsp
0x000000000019b3e2 : add byte ptr [rax], al ; jo 0x19b3dd ; jmp qword ptr [rdx]
0x000000000019b3e2 : add byte ptr [rax], al ; jo 0x19b3de ; jmp qword ptr [rdx]
0x00000000001a34e6 : add byte ptr [rax], al ; jo 0x1a3556 ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000001af78a : add byte ptr [rax], al ; jo 0x1af799 ; add byte ptr [rax], al ; retf 7
0x0000000000188146 : add byte ptr [rax], al ; jp 0x18813e ; jmp rsp
0x00000000001afa36 : add byte ptr [rax], al ; jp 0x1afa47 ; add byte ptr [rax], al ; ret
0x00000000001974ee : add byte ptr [rax], al ; js 0x1974a0 ; add byte ptr [rax], al ; jl 0x1974fc ; out dx, al ; call qword ptr [rcx]
0x0000000000199db6 : add byte ptr [rax], al ; js 0x199e3d ; int1 ; call qword ptr [rax]
0x0000000000199ee6 : add byte ptr [rax], al ; js 0x199ef9 ; cld ; jmp rsi
0x000000000019efee : add byte ptr [rax], al ; js 0x19f01b ; add dword ptr [rax], eax ; pop rsp ; test al, 0xf4 ; call rsp
0x00000000001a3bee : add byte ptr [rax], al ; js 0x1a3c67 ; add dword ptr [rax], eax ; pop rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000001a4dee : add byte ptr [rax], al ; js 0x1a4e79 ; add dword ptr [rax], eax ; cmp sil, r14b ; jmp rax
0x00000000001a62ee : add byte ptr [rax], al ; js 0x1a628c ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000000c5ff5 : add byte ptr [rax], al ; js 0xc6005 ; ret
0x000000000004d653 : add byte ptr [rax], al ; lea r8, [rip + 0x1297a4] ; jmp rax
0x000000000011c97d : add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000015e92e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000015e93e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000015e94e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000015e95e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000015e96e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000015e88d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000015e8ae : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000015e8be : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000015e8ce : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000015e8de : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000015e8ee : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000015e8fe : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000015e83a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000015e90e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000015e91e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000b247b : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000b25de : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000b25fe : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000b25ee : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000015e89e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000021b7e : add byte ptr [rax], al ; lea rax, [rip + 0x15b244] ; ret
0x0000000000021b8e : add byte ptr [rax], al ; lea rax, [rip + 0x15d081] ; ret
0x0000000000042161 : add byte ptr [rax], al ; lea rsi, [rip + 0x336] ; call rax
0x000000000007c1cc : add byte ptr [rax], al ; lea rsi, [rip - 0x1615] ; call rax
0x000000000007c4d2 : add byte ptr [rax], al ; lea rsi, [rip - 0x191b] ; call rax
0x000000000006f32f : add byte ptr [rax], al ; lea rsi, [rip - 0x198] ; call rax
0x000000000007c835 : add byte ptr [rax], al ; lea rsi, [rip - 0x1c7e] ; call rax
0x000000000007afbc : add byte ptr [rax], al ; lea rsi, [rip - 0x405] ; call rax
0x000000000007acae : add byte ptr [rax], al ; lea rsi, [rip - 0xf7] ; call rax
0x00000000001a1722 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [r8], r8d ; test al, 0x58 ; cmc ; jmp qword ptr [rcx]
0x0000000000198422 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov ah, 0 ; add byte ptr [rax - 0x40], bl ; cli ; call qword ptr [rax]
0x00000000001a3a22 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push 1 ; add byte ptr [rax], cl ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a9b22 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000001997c2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb dh, cl ; call qword ptr [rax]
0x000000000018ce76 : add byte ptr [rax], al ; loop 0x18ce7d ; call qword ptr [rax]
0x000000000019458e : add byte ptr [rax], al ; loopne 0x1945c5 ; out dx, al ; jmp qword ptr [rdi]
0x0000000000195b56 : add byte ptr [rax], al ; loopne 0x195aee ; add byte ptr [rax], al ; and al, 0x78 ; out dx, al ; call qword ptr [rdx]
0x000000000019844e : add byte ptr [rax], al ; loopne 0x198403 ; sti ; call qword ptr [rax]
0x000000000019f256 : add byte ptr [rax], al ; loopne 0x19f285 ; add dword ptr [rax], eax ; in al, 0xbb ; hlt ; jmp rsi
0x000000000019ff56 : add byte ptr [rax], al ; loopne 0x19ff92 ; add dword ptr [rax], eax ; in al, 0xeb ; hlt ; jmp qword ptr [rcx]
0x00000000001a1456 : add byte ptr [rax], al ; loopne 0x1a14a7 ; add dword ptr [rax], eax ; xor al, 0x3a ; cmc ; jmp qword ptr [rcx]
0x0000000000190aaa : add byte ptr [rax], al ; mov ah, 0x1f ; cli ; jmp qword ptr [rcx]
0x000000000019022a : add byte ptr [rax], al ; mov ah, 0x32 ; add byte ptr [rax], al ; mov ebp, edx ; call qword ptr [rsi]
0x00000000001a092a : add byte ptr [rax], al ; mov ah, 0x39 ; add dword ptr [rax], eax ; loopne 0x1a094d ; cmc ; jmp qword ptr [rcx]
0x00000000001a1b2a : add byte ptr [rax], al ; mov ah, 0x4b ; add dword ptr [rax], eax ; mov al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x000000000019800a : add byte ptr [rax], al ; mov ah, 0x53 ; out dx, eax ; call qword ptr [rbx]
0x00000000001a3c2a : add byte ptr [rax], al ; mov ah, 0x6c ; add dword ptr [rax], eax ; rol byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x0000000000194c2a : add byte ptr [rax], al ; mov ah, 0x7c ; add byte ptr [rax], al ; xor byte ptr [rax - 0x12], al ; call rdi
0x000000000019816a : add byte ptr [rax], al ; mov ah, 0x82 ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000188386 : add byte ptr [rax], al ; mov ah, 0xb9 ; out dx, al ; jmp rax
0x0000000000198a2a : add byte ptr [rax], al ; mov ah, 0xba ; add byte ptr [rax], al ; xor byte ptr [rcx - 0x10], bh ; call qword ptr [rax]
0x00000000001a9d2a : add byte ptr [rax], al ; mov ah, 0xcd ; add dword ptr [rax], eax ; push rax ; retf 0xfff7
0x0000000000188406 : add byte ptr [rax], al ; mov ah, 0xd8 ; out dx, al ; jmp rsp
0x0000000000187e8e : add byte ptr [rax], al ; mov ah, 0xde ; in al, dx ; call rsp
0x00000000001884a6 : add byte ptr [rax], al ; mov ah, 0xec ; out dx, al ; jmp rax
0x00000000001997ae : add byte ptr [rax], al ; mov al, 0x1a ; int1 ; call qword ptr [rax]
0x00000000001a1a26 : add byte ptr [rax], al ; mov al, 0x4a ; add dword ptr [rax], eax ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000001a1f26 : add byte ptr [rax], al ; mov al, 0x4f ; add dword ptr [rax], eax ; xor al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x0000000000199b9e : add byte ptr [rax], al ; mov al, 0x50 ; int1 ; jmp qword ptr [rcx]
0x00000000001a2f26 : add byte ptr [rax], al ; mov al, 0x5f ; add dword ptr [rax], eax ; xchg eax, esp ; test al, 0xf5 ; call rsi
0x00000000001a3b26 : add byte ptr [rax], al ; mov al, 0x6b ; add dword ptr [rax], eax ; xor al, 0x11 ; stc ; jmp qword ptr [rbx]
0x000000000018d56e : add byte ptr [rax], al ; mov al, 0x79 ; std ; jmp qword ptr [rdx]
0x0000000000196626 : add byte ptr [rax], al ; mov al, 0x96 ; add byte ptr [rax], al ; hlt ; retf 0xffee
0x00000000001962ce : add byte ptr [rax], al ; mov al, 0xb9 ; out dx, al ; call qword ptr [rdx]
0x000000000019dc26 : add byte ptr [rax], al ; mov al, 0xc ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xf4 ; call qword ptr [rsi]
0x000000000014c3ae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000014807e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000199ffe : add byte ptr [rax], al ; mov al, dl ; add byte ptr [rax], al ; nop ; int1 ; call qword ptr [rcx]
0x0000000000115b06 : add byte ptr [rax], al ; mov byte ptr [r10], 0 ; ret
0x00000000001a07fe : add byte ptr [rax], al ; mov byte ptr [rax], bh ; add dword ptr [rax], eax ; sub al, 0x10 ; cmc ; call qword ptr [rax]
0x00000000001a14fe : add byte ptr [rax], al ; mov byte ptr [rbp + 1], al ; add byte ptr [rsi + rdx*2], ch ; cmc ; call qword ptr [rax]
0x00000000001988fe : add byte ptr [rax], al ; mov byte ptr [rcx + 0x125c0000], bh ; cld ; call rsp
0x0000000000198b46 : add byte ptr [rax], al ; mov byte ptr [rcx - 4], bl ; call qword ptr [rbx]
0x000000000014a04e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000cd086 : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000007852e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009c94e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000009b34e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009c31e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000008cf1e : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x000000000019edfe : add byte ptr [rax], al ; mov byte ptr [rsi], bl ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; popfq ; hlt ; jmp qword ptr [rcx]
0x000000000018e5fe : add byte ptr [rax], al ; mov byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rsp ; imul ecx ; call qword ptr [rdx]
0x000000000009c01e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014a08e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014a0ae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014a09e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000014a07e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e6bae : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009c33e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000008d10e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x000000000009c35e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009c36e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009c34e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000007d6db : add byte ptr [rax], al ; mov dword ptr [rip + 0x336bc9], eax ; ret
0x000000000011d79f : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x000000000011d84e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000011d83e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000011d86e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000011d85e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e7414 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c1360 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c142a : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000009b35e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000006b01e : add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000000ed7e5 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000e7c2e : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x00000000000e9dbe : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x00000000000e9cfe : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x00000000000f79de : add byte ptr [rax], al ; mov eax, 0x110 ; syscall
0x00000000000f6e34 : add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x00000000000f7a3e : add byte ptr [rax], al ; mov eax, 0x11b ; syscall
0x00000000000f76ae : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x00000000000e8a1e : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x00000000000e8a7e : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x00000000000f77ce : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x00000000000f7ace : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x00000000000f75ee : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x00000000000f7bee : add byte ptr [rax], al ; mov eax, 0x14a ; syscall
0x00000000000f7c1e : add byte ptr [rax], al ; mov eax, 0x14b ; syscall
0x0000000000083f1e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000e8a4e : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x00000000000de72e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000f1d0e : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x00000000000f8c2e : add byte ptr [rax], al ; mov eax, 0x1e ; syscall
0x00000000000f8cbe : add byte ptr [rax], al ; mov eax, 0x1f ; syscall
0x00000000000e89be : add byte ptr [rax], al ; mov eax, 0x20 ; syscall
0x00000000000e89ee : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000000c442e : add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000c44ee : add byte ptr [rax], al ; mov eax, 0x23 ; syscall
0x00000000000b62ce : add byte ptr [rax], al ; mov eax, 0x24 ; syscall
0x00000000000b62fe : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000000f835e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000000f7e0e : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x00000000000c48ce : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000424a6 : add byte ptr [rax], al ; mov eax, 0x3e ; mov edi, ebx ; syscall
0x00000000000c400e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000000f8b2e : add byte ptr [rax], al ; mov eax, 0x40 ; syscall
0x00000000000f8afe : add byte ptr [rax], al ; mov eax, 0x41 ; syscall
0x00000000000f8a9e : add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x00000000000f8ace : add byte ptr [rax], al ; mov eax, 0x47 ; syscall
0x00000000000e8636 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000000f032e : add byte ptr [rax], al ; mov eax, 0x4d ; syscall
0x00000000000e8b6e : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x00000000000e9dee : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x00000000000e9d2e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x00000000000e7b0e : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000e7b3e : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x00000000000e945e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x00000000000e948e : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000b39ce : add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000c403e : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000c52de : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000f782e : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000c52fe : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000c52ee : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000c530e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000c554e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000c52ce : add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000c557e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000c55de : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000c531e : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000c560e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000c563e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x00000000000f6dbe : add byte ptr [rax], al ; mov eax, 0x7a ; syscall
0x00000000000f6dee : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000c55ae : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000f758e : add byte ptr [rax], al ; mov eax, 0x7d ; syscall
0x00000000000c5afe : add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x00000000000f75be : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x0000000000035203 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000011400e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x0000000000035250 : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000000f7a0e : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x00000000000e79ee : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x00000000001a162e : add byte ptr [rax], al ; mov eax, 0x8c000146 ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000de66e : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000de69e : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x00000000000de6ce : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x00000000000de6fe : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x00000000000de75e : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x00000000000de78e : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x00000000000de7be : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x00000000000f1d9e : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x00000000000f1dce : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x00000000000f1dfe : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x00000000000f74ee : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x00000000000f78ee : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x00000000000f1c0e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000000eeb6e : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000b3aae : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000000f6d5e : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000ef01e : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000000ef04e : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x00000000000ee88e : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000f6c2e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x00000000000f761e : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x00000000000f764e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x00000000000f6d8e : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x0000000000083f36 : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; ret
0x00000000000f4e2e : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x00000000000f4d0e : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x0000000000103fb0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000f767e : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x000000000019b82e : add byte ptr [rax], al ; mov eax, 0xdc0000e8 ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a632e : add byte ptr [rax], al ; mov eax, 0xdc000193 ; retf 0xfff6
0x0000000000034ee2 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000f751e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000c6283 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000001a142e : add byte ptr [rax], al ; mov eax, 0xfc000144 ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000f779e : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x00000000000f77fe : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x00000000000c5b0e : add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x00000000000332bc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000034f4c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000eaf78 : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000035a86 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000e822e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000004710c : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001028ce : add byte ptr [rax], al ; mov eax, 7 ; ret
0x000000000014f79e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007cb4e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012a67e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d1a4e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000774ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007749e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000035b5e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x37e642] ; ret
0x0000000000130ce0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000840a1 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000001134e6 : add byte ptr [rax], al ; mov eax, ecx ; ret
0x0000000000034eae : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000010832e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x00000000000222bc : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000044e41 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000550c9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055377 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000053311 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000006b645 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000ed565 : add byte ptr [rax], al ; mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000759e0 : add byte ptr [rax], al ; mov eax, r10d ; pop rbx ; ret
0x00000000000fe91f : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c474b : add byte ptr [rax], al ; mov eax, r13d ; syscall
0x00000000000711bd : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000010441c : add byte ptr [rax], al ; mov eax, r9d ; syscall
0x000000000019022e : add byte ptr [rax], al ; mov ebp, edx ; call qword ptr [rsi]
0x0000000000198ab6 : add byte ptr [rax], al ; mov ebx, 0x14f40000 ; cld ; call qword ptr [rbx]
0x000000000009b38e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000d47d2 : add byte ptr [rax], al ; mov edi, 0x20 ; call 0x211e9
0x000000000008500c : add byte ptr [rax], al ; mov edi, 0x200 ; call 0x212c9
0x0000000000111f1e : add byte ptr [rax], al ; mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x0000000000044bc8 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000134d9b : add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x000000000011ba44 : add byte ptr [rax], al ; mov edi, ebx ; call 0xf7d16
0x00000000000ed817 : add byte ptr [rax], al ; mov edi, ebx ; mov eax, 0x10 ; syscall
0x00000000000424ab : add byte ptr [rax], al ; mov edi, ebx ; syscall
0x00000000000c488e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000e7138 : add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000ce4ea : add byte ptr [rax], al ; mov edi, r13d ; call 0xfa7f7
0x0000000000044e4e : add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x00000000000f6ee6 : add byte ptr [rax], al ; mov edx, 8 ; syscall
0x000000000013ef8e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009b37e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070348 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x702e0
0x0000000000075fa6 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75f4a
0x000000000007611b : add byte ptr [rax], al ; mov edx, eax ; jmp 0x760c1
0x0000000000104066 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000194832 : add byte ptr [rax], al ; mov esp, 0x38000078 ; out dx, al ; jmp rbx
0x00000000001a3632 : add byte ptr [rax], al ; mov esp, 0x38000166 ; retf
0x00000000001a2432 : add byte ptr [rax], al ; mov esp, 0x48000154 ; jne 0x1a2439 ; call qword ptr [rdx]
0x00000000001a4532 : add byte ptr [rax], al ; mov esp, 0x58000175 ; and esi, esi ; call qword ptr [rbx]
0x000000000019db32 : add byte ptr [rax], al ; mov esp, 0x6800010b ; or esi, esp ; jmp qword ptr [rcx]
0x0000000000198732 : add byte ptr [rax], al ; mov esp, 0x80000b7 ; retf
0x000000000019fa32 : add byte ptr [rax], al ; mov esp, 0xf800012a ; fcomip st(4) ; jmp qword ptr [rcx]
0x0000000000103121 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000131dd3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000131d8b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013218e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014a0ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000014a0ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014a0fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014a10e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014a11e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014a12e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014a13e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014a0de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000014a0be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000011ef9b : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000007dba6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000012ab0a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009c37e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009c39e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009c3be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009c3ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009c3de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009c3ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009c3ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009c38e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000046e58 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000761b9 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007d72b : add byte ptr [rax], al ; mov qword ptr [rip + 0x336b4c], rax ; ret
0x000000000007d6fb : add byte ptr [rax], al ; mov qword ptr [rip + 0x336b84], rax ; ret
0x000000000011d7dc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011d7ac : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012ee2e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000038006 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000127039 : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000004f2ef : add byte ptr [rax], al ; mov r10d, 1 ; jmp rax
0x000000000002152f : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x214ff
0x0000000000075a09 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x7599f
0x0000000000076459 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x763ef
0x00000000000b9e1e : add byte ptr [rax], al ; mov r10d, eax ; jmp 0xb9ded
0x00000000000bc27e : add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbc254
0x00000000000bc27e : add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbc256
0x0000000000068b24 : add byte ptr [rax], al ; mov r14d, eax ; jmp 0x64d54
0x0000000000059f0e : add byte ptr [rax], al ; mov r8d, 1 ; jmp rax
0x0000000000034dca : add byte ptr [rax], al ; mov rax, -1 ; ret
0x0000000000034f6e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000000b2b0e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000b2b1e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000b2b2e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000b2b3e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000b2b4e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000b2b5e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000b2b6e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007433e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000001038f6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f4f3e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000038120 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bfd2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074cde : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cdfe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000012f6d1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x285e76] ; call qword ptr [rax]
0x000000000012f094 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2864b3] ; call qword ptr [rax]
0x000000000007cdde : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x338879] ; ret
0x000000000002a37e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x38b6a9] ; ret
0x0000000000022a5e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x396a71] ; ret
0x0000000000022a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x396a91] ; ret
0x000000000011d4bf : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000015995e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000000799f4 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006de69 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000384ec : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000003325c : add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000070934 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000012f84a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000006e4d3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000006fb5c : add byte ptr [rax], al ; mov rax, rsi ; pop rbx ; ret
0x0000000000104302 : add byte ptr [rax], al ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000a000f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000037899 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000000854ee : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x00000000000853e6 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000002ea30 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000001018be : add byte ptr [rax], al ; mov rdi, r14 ; call 0xfe2d7
0x0000000000058e06 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x75087
0x000000000011e1bf : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000006efcb : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000012663a : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006c337 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000075a58 : add byte ptr [rax], al ; mov rdi, rsi ; call 0x21cc7
0x00000000001294ac : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009b3be : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000084593 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, rcx ; call rax
0x00000000000eaefe : add byte ptr [rax], al ; mov rdx, rax ; jmp 0xeaec4
0x00000000000ec9bd : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000063807 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x350750] ; call rax
0x000000000005c08a : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x357ecd] ; call rax
0x000000000005bce6 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x358271] ; call rax
0x0000000000058ea9 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35b0ae] ; call rax
0x0000000000050311 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x363c46] ; call rax
0x000000000004d3c7 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x366b90] ; call rax
0x0000000000104733 : add byte ptr [rax], al ; mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000084ebe : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000035c23 : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000084ba9 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rax
0x0000000000070834 : add byte ptr [rax], al ; mov rsi, rdi ; jmp 0x7080c
0x000000000014a06e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014a05e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000ed8e2 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000009c32e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000038e84 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000019e602 : add byte ptr [rax], al ; mov word ptr [rsi], ss ; add dword ptr [rax], eax ; js 0x19e598 ; hlt ; call qword ptr [rbx]
0x000000000009c3fe : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009c40e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000019d21a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rcx] ; add byte ptr [rax - 0x57], dh ; jmp rsi
0x00000000001a161a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], r8d ; jo 0x1a1682 ; cmc ; jmp qword ptr [rcx]
0x00000000001a141a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], r8d ; loopne 0x1a1464 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1c1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; add byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000187c56 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fucomp st(3) ; jmp qword ptr [rax]
0x000000000018e67a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; imul ecx ; call qword ptr [rbx]
0x000000000019b69a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b695 ; call rsi
0x000000000019b69a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b696 ; call rsi
0x0000000000188286 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call rax
0x00000000001885ce : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or bh, ch ; call qword ptr [rax]
0x00000000001875d6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffea
0x00000000001a9a1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x000000000019a21a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], cl ; add al, dl ; xchg eax, esi ; int1 ; jmp qword ptr [rax]
0x00000000001883ee : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; shr dh, cl ; push rsp ; retf 0
0x00000000001882be : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xee ; dec eax ; ret
0x00000000001a74be : add byte ptr [rax], al ; movsq qword ptr [rdi], qword ptr [rsi] ; add dword ptr [rax], eax ; cld ; fdivr st(0) ; call qword ptr [rax]
0x00000000000596d4 : add byte ptr [rax], al ; movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x000000000006c56a : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000002bf1e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000125107 : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000001250cf : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000121d9f : add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000121db8 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e73fb : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000000df80e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000007a82e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a053e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000013f11e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013f7fe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000013f78e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001a1606 : add byte ptr [rax], al ; nop ; add dword ptr [rax], r8d ; push rsp ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a1c06 : add byte ptr [rax], al ; nop ; add qword ptr [rax], r8 ; in al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x00000000001ac506 : add byte ptr [rax], al ; nop ; cmc ; add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; clc ; call rsp
0x000000000019ad06 : add byte ptr [rax], al ; nop ; fld qword ptr [rax] ; add byte ptr [rax + rdx*2 - 0xe], ah ; call qword ptr [rbx]
0x000000000019a002 : add byte ptr [rax], al ; nop ; int1 ; call qword ptr [rcx]
0x00000000001a9f06 : add byte ptr [rax], al ; nop ; iretd ; add dword ptr [rax], eax ; sal bh, 1 ; call qword ptr [rcx]
0x00000000000f7a9c : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x00000000000f7b2c : add byte ptr [rax], al ; nop ; mov eax, 0x134 ; syscall
0x00000000000f7bbc : add byte ptr [rax], al ; nop ; mov eax, 0x13f ; syscall
0x00000000000f1cdd : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000c430d : add byte ptr [rax], al ; nop ; mov eax, 0x25 ; syscall
0x00000000000f832c : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x00000000000f7d0d : add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x00000000000f7e6c : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x00000000000f7ddd : add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x00000000000e8b3d : add byte ptr [rax], al ; nop ; mov eax, 0x50 ; syscall
0x00000000000e7bfc : add byte ptr [rax], al ; nop ; mov eax, 0x53 ; syscall
0x00000000000e9d8c : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x00000000000e9ccc : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x00000000000e942d : add byte ptr [rax], al ; nop ; mov eax, 0x5c ; syscall
0x00000000000f79ac : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000000c551c : add byte ptr [rax], al ; nop ; mov eax, 0x79 ; syscall
0x00000000000f6fcc : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x00000000000e79bc : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x00000000000edd5c : add byte ptr [rax], al ; nop ; mov eax, 0x8c ; syscall
0x00000000000f1d6c : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x00000000000eefec : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x00000000000f755c : add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x00000000000f6bfc : add byte ptr [rax], al ; nop ; mov eax, 0xad ; syscall
0x00000000000f770c : add byte ptr [rax], al ; nop ; mov eax, 0xb1 ; syscall
0x00000000000f78bc : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x00000000000f4d9c : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x00000000000f4dfc : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x00000000000f4cdc : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x00000000000f4e8c : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000000f776c : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000010f5ed : add byte ptr [rax], al ; nop ; mov eax, 1 ; pop rbx ; ret
0x000000000012835d : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x000000000010833d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000177cfe : add byte ptr [rax], al ; nop ; out dx, eax ; jmp rax
0x000000000012326d : add byte ptr [rax], al ; nop ; ret
0x00000000001a9206 : add byte ptr [rax], al ; nop ; ret 1
0x00000000001a9a06 : add byte ptr [rax], al ; nop ; retf 1
0x000000000019185e : add byte ptr [rax], al ; nop ; sbb esp, ebp ; call qword ptr [rbx]
0x0000000000105059 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000000700b2 : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, edi ; ret
0x000000000012a86a : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018f082 : add byte ptr [rax], al ; or al, 0x21 ; add byte ptr [rax], al ; call 0x1318dae7
0x000000000019f082 : add byte ptr [rax], al ; or al, 0x21 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000198382 : add byte ptr [rax], al ; or al, 0xb4 ; add byte ptr [rax], al ; test al, 0x9f ; cli ; call qword ptr [rax]
0x000000000019db82 : add byte ptr [rax], al ; or al, 0xc ; add dword ptr [rax], eax ; fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x000000000019cb82 : add byte ptr [rax], al ; or al, 0xfc ; add byte ptr [rax], al ; or byte ptr [rbx], dh ; jmp rax
0x00000000001ad1be : add byte ptr [rax], al ; or al, 3 ; add byte ptr [rax], al ; retf
0x0000000000018baa : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000019cb86 : add byte ptr [rax], al ; or byte ptr [rbx], dh ; jmp rax
0x0000000000197e7e : add byte ptr [rax], al ; or byte ptr [rdi + 0x4f1c0000], ch ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001a9d7e : add byte ptr [rax], al ; or dh, cl ; add dword ptr [rax], eax ; pop rsp ; retf
0x0000000000198476 : add byte ptr [rax], al ; or dl, dh ; sti ; call qword ptr [rax]
0x00000000001ab677 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rbx], dl ; sti ; jmp qword ptr [rdx]
0x00000000001048ba : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000001a1cce : add byte ptr [rax], al ; pop rax ; add qword ptr [r8], r8 ; or al, 0x61 ; cmc ; jmp qword ptr [rcx]
0x00000000001a45ce : add byte ptr [rax], al ; pop rax ; jbe 0x1a45dd ; add ah, bl ; and esi, esi ; call qword ptr [rdi]
0x00000000001958ce : add byte ptr [rax], al ; pop rax ; mov dword ptr [rax], eax ; add byte ptr [rbx + rsi*2], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001999ce : add byte ptr [rax], al ; pop rax ; retf 0
0x000000000019a2ce : add byte ptr [rax], al ; pop rax ; rol dword ptr [rax], cl ; add byte ptr [rcx + rbx*4 - 0xf], ch ; jmp rsi
0x0000000000188926 : add byte ptr [rax], al ; pop rbp ; out dx, eax ; call qword ptr [rax]
0x00000000000f2d7e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000000cde9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd7c4 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f957f : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000382dc : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000532bb : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000105e44 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000829fe : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000006da54 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000002a4da : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000035de9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021bf5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023cc7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002ab87 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000d243e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000018545e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a15ce : add byte ptr [rax], al ; pop rcx ; push rdi ; cmc ; call qword ptr [rax]
0x0000000000198902 : add byte ptr [rax], al ; pop rsp ; adc bh, ah ; call rsp
0x0000000000198552 : add byte ptr [rax], al ; pop rsp ; adc bh, ah ; jmp qword ptr [rax]
0x000000000018e602 : add byte ptr [rax], al ; pop rsp ; imul ecx ; call qword ptr [rdx]
0x00000000001983d2 : add byte ptr [rax], al ; pop rsp ; mov ah, 0 ; add byte ptr [rax], bh ; fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000001a09de : add byte ptr [rax], al ; push -0x13fffec6 ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001a35de : add byte ptr [rax], al ; push -0x3fffe9a ; retf 0xfff5
0x000000000019eede : add byte ptr [rax], al ; push -0x53fffee1 ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a3cde : add byte ptr [rax], al ; push -0x73fffe93 ; add dh, dh ; jmp qword ptr [rdi]
0x000000000019b3de : add byte ptr [rax], al ; push 0x4c0000e4 ; jo 0x19b3e1 ; jmp qword ptr [rdx]
0x000000000019b3de : add byte ptr [rax], al ; push 0x4c0000e4 ; jo 0x19b3e2 ; jmp qword ptr [rdx]
0x00000000001a15de : add byte ptr [rax], al ; push 0x55000146 ; push rdi ; cmc ; call qword ptr [rcx]
0x0000000000195ede : add byte ptr [rax], al ; push 0x6c00008f ; xchg esi, ebp ; jmp rax
0x00000000001a1ac6 : add byte ptr [rax], al ; push rax ; add qword ptr [r8], rax ; and al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x00000000001938c6 : add byte ptr [rax], al ; push rax ; imul eax, dword ptr [rax], 0xedf23400 ; jmp rsp
0x000000000018e5ee : add byte ptr [rax], al ; push rax ; imul ecx ; call qword ptr [rbx]
0x00000000001970de : add byte ptr [rax], al ; push rax ; in al, dx ; out dx, al ; call qword ptr [rax]
0x00000000001a3bc6 : add byte ptr [rax], al ; push rax ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x0000000000194cc6 : add byte ptr [rax], al ; push rax ; jge 0x194cd4 ; add byte ptr [rdx + rax*2], dh ; out dx, al ; jmp rdx
0x000000000018574c : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000019cede : add byte ptr [rax], al ; push rax ; push rsi ; jmp rbx
0x00000000001992c6 : add byte ptr [rax], al ; push rax ; ret
0x0000000000195052 : add byte ptr [rax], al ; push rsi ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a16ca : add byte ptr [rax], al ; push rsp ; add dword ptr [r8], r8d ; push rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001a09ca : add byte ptr [rax], al ; push rsp ; cmp al, byte ptr [rcx] ; add al, dl ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001887ae : add byte ptr [rax], al ; push rsp ; out dx, eax ; call rax
0x00000000001888d6 : add byte ptr [rax], al ; push rsp ; pop rbx ; out dx, eax ; call qword ptr [rax]
0x00000000001883d6 : add byte ptr [rax], al ; push rsp ; ret
0x00000000001991ca : add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001a91ca : add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001a99ca : add byte ptr [rax], al ; push rsp ; retf 1
0x00000000001962ca : add byte ptr [rax], al ; push rsp ; xchg eax, ebx ; add byte ptr [rax], al ; mov al, 0xb9 ; out dx, al ; call qword ptr [rdx]
0x00000000001a3b12 : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rcx], 0 ; pop rax ; add esi, esi ; jmp qword ptr [rbx]
0x0000000000192d22 : add byte ptr [rax], al ; pushfq ; retf
0x0000000000198a7e : add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; call qword ptr [rdx]
0x0000000000196946 : add byte ptr [rax], al ; rcr byte ptr [rcx - 0x26dc0000], 1 ; out dx, al ; call qword ptr [rdx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000007286 : add byte ptr [rax], al ; ret 0
0x0000000000009a96 : add byte ptr [rax], al ; ret 0x10
0x000000000000694f : add byte ptr [rax], al ; ret 0x11
0x000000000000db5e : add byte ptr [rax], al ; ret 0x19
0x000000000016ff2e : add byte ptr [rax], al ; ret 0x1d4
0x00000000001706c6 : add byte ptr [rax], al ; ret 0x1d5
0x000000000000938e : add byte ptr [rax], al ; ret 0x1f
0x000000000016ef36 : add byte ptr [rax], al ; ret 0x24
0x0000000000006cee : add byte ptr [rax], al ; ret 0x2e
0x000000000016f426 : add byte ptr [rax], al ; ret 0x33
0x0000000000006eb6 : add byte ptr [rax], al ; ret 0x3f
0x000000000000fe86 : add byte ptr [rax], al ; ret 0x40
0x00000000000080e6 : add byte ptr [rax], al ; ret 0x47
0x000000000000812e : add byte ptr [rax], al ; ret 0x48
0x000000000016da5e : add byte ptr [rax], al ; ret 0xa
0x000000000016de5e : add byte ptr [rax], al ; ret 0xd
0x0000000000187e76 : add byte ptr [rax], al ; ret 0xffec
0x00000000001883ce : add byte ptr [rax], al ; ret 0xffee
0x0000000000171302 : add byte ptr [rax], al ; ret 1
0x0000000000000fca : add byte ptr [rax], al ; ret 2
0x0000000000171702 : add byte ptr [rax], al ; ret 3
0x0000000000171902 : add byte ptr [rax], al ; ret 4
0x0000000000171b02 : add byte ptr [rax], al ; ret 5
0x000000000016d606 : add byte ptr [rax], al ; ret 6
0x0000000000001852 : add byte ptr [rax], al ; ret 7
0x00000000000019ea : add byte ptr [rax], al ; ret 8
0x0000000000172302 : add byte ptr [rax], al ; ret 9
0x0000000000000e06 : add byte ptr [rax], al ; retf
0x0000000000004be6 : add byte ptr [rax], al ; retf 0
0x000000000001157e : add byte ptr [rax], al ; retf 0x10
0x000000000016e3be : add byte ptr [rax], al ; retf 0x11
0x000000000001d7de : add byte ptr [rax], al ; retf 0x17db
0x000000000001dbb6 : add byte ptr [rax], al ; retf 0x17dd
0x000000000001e306 : add byte ptr [rax], al ; retf 0x17e1
0x000000000016ff66 : add byte ptr [rax], al ; retf 0x1d4
0x0000000000170706 : add byte ptr [rax], al ; retf 0x1d5
0x00000000000099d6 : add byte ptr [rax], al ; retf 0x21
0x000000000016ef76 : add byte ptr [rax], al ; retf 0x24
0x000000000000b326 : add byte ptr [rax], al ; retf 0x2e
0x000000000016f466 : add byte ptr [rax], al ; retf 0x33
0x000000000000efce : add byte ptr [rax], al ; retf 0x3a
0x0000000000173367 : add byte ptr [rax], al ; retf 0x3b9a
0x0000000000009df6 : add byte ptr [rax], al ; retf 0x44
0x0000000000003f16 : add byte ptr [rax], al ; retf 0x46
0x000000000018549e : add byte ptr [rax], al ; retf 0x49f2
0x00000000000080b6 : add byte ptr [rax], al ; retf 0x57
0x000000000016dbbe : add byte ptr [rax], al ; retf 0xb
0x000000000016dfbe : add byte ptr [rax], al ; retf 0xe
0x000000000001129f : add byte ptr [rax], al ; retf 0xf
0x00000000001875ce : add byte ptr [rax], al ; retf 0xffea
0x0000000000188b7e : add byte ptr [rax], al ; retf 0xffef
0x00000000000062ae : add byte ptr [rax], al ; retf 1
0x000000000000ee5e : add byte ptr [rax], al ; retf 2
0x000000000000118e : add byte ptr [rax], al ; retf 3
0x000000000016d466 : add byte ptr [rax], al ; retf 4
0x000000000000d64e : add byte ptr [rax], al ; retf 5
0x0000000000171d12 : add byte ptr [rax], al ; retf 6
0x0000000000171f12 : add byte ptr [rax], al ; retf 7
0x000000000001142e : add byte ptr [rax], al ; retf 8
0x0000000000172312 : add byte ptr [rax], al ; retf 9
0x00000000001718fe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000018d736 : add byte ptr [rax], al ; rol byte ptr [rdi], 0 ; add ah, al ; jb 0x18d731 ; call qword ptr [rax]
0x000000000019a0ba : add byte ptr [rax], al ; rol dword ptr [rax], 1 ; add al, dh ; nop ; int1 ; call qword ptr [rcx]
0x000000000016dd06 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000019db46 : add byte ptr [rax], al ; ror byte ptr [rbx], 1 ; add dword ptr [rax], eax ; test byte ptr [rbx], cl ; hlt ; jmp qword ptr [rcx]
0x000000000018df46 : add byte ptr [rax], al ; ror byte ptr [rdi], 1 ; add byte ptr [rax], al ; jo 0x18df55 ; jmp qword ptr [rdi]
0x000000000019a80e : add byte ptr [rax], al ; sal ah, 0xf1 ; call qword ptr [rax]
0x000000000018e6de : add byte ptr [rax], al ; sal bh, 0xe9 ; jmp qword ptr [rax]
0x00000000001a4546 : add byte ptr [rax], al ; sal byte ptr [rbp + 1], 1 ; add byte ptr [rcx - 0xa], ah ; call qword ptr [rsi]
0x0000000000190536 : add byte ptr [rax], al ; sal byte ptr [rip - 0x644c0000], 0xea ; call qword ptr [rdx]
0x00000000001150d9 : add byte ptr [rax], al ; sar rdx, 4 ; add edx, 1 ; syscall
0x00000000001a9ade : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a15ca : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rcx ; push rdi ; cmc ; call qword ptr [rax]
0x00000000001af40a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf 4
0x000000000019e692 : add byte ptr [rax], al ; sbb al, 0x17 ; add dword ptr [rax], eax ; clc ; pop rdi ; stc ; call qword ptr [rax]
0x000000000018fc92 : add byte ptr [rax], al ; sbb al, 0x2d ; add byte ptr [rax], al ; call 0x2118e723
0x0000000000197e82 : add byte ptr [rax], al ; sbb al, 0x4f ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000197f92 : add byte ptr [rax], al ; sbb al, 0xb0 ; add byte ptr [rax], al ; call 0x11197c83
0x0000000000197452 : add byte ptr [rax], al ; sbb al, 0xfb ; out dx, al ; call qword ptr [rax]
0x00000000001afd06 : add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; retf
0x000000000018e9be : add byte ptr [rax], al ; sbb al, byte ptr [rax] ; add byte ptr [rbx + rdx - 0x16], bh ; jmp rdx
0x00000000001a3c8e : add byte ptr [rax], al ; sbb byte ptr [rbp + 1], ch ; add byte ptr [rdx + rax - 0xa], cl ; jmp qword ptr [rbx]
0x00000000001a1b8e : add byte ptr [rax], al ; sbb byte ptr [rcx + rax], cl ; cmp al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x00000000001a008e : add byte ptr [rax], al ; sbb byte ptr [rcx], dh ; add dword ptr [rax], eax ; mov edi, gs ; hlt ; jmp qword ptr [rcx]
0x00000000001a098e : add byte ptr [rax], al ; sbb byte ptr [rdx], bh ; add dword ptr [rax], eax ; jl 0x1a09b2 ; cmc ; jmp qword ptr [rcx]
0x00000000000c69e4 : add byte ptr [rax], al ; sete dl ; jmp 0xc69ac
0x00000000000c69e3 : add byte ptr [rax], al ; sete dl ; jmp 0xc69ad
0x00000000000dc904 : add byte ptr [rax], al ; sete dl ; jmp 0xdc8cc
0x00000000000dc903 : add byte ptr [rax], al ; sete dl ; jmp 0xdc8cd
0x00000000000df826 : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000199e1e : add byte ptr [rax], al ; shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rbx]
0x000000000019449a : add byte ptr [rax], al ; shl byte ptr [rdx], 1 ; add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; out dx, al ; jmp qword ptr [rcx]
0x000000000019449e : add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; out dx, al ; jmp qword ptr [rcx]
0x000000000018fa46 : add byte ptr [rax], al ; shr byte ptr [rdx], 1 ; add byte ptr [rax], al ; hlt ; je 0x18fa42 ; call rsp
0x00000000001883e6 : add byte ptr [rax], al ; shr dh, cl ; call rsp
0x000000000008178e : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000e6ab6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001abb9e : add byte ptr [rax], al ; sub ah, ch ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp eax, edi ; jmp qword ptr [rcx]
0x00000000001a00a2 : add byte ptr [rax], al ; sub al, 0x31 ; add dword ptr [rax], eax ; test al, 0xef ; hlt ; jmp qword ptr [rcx]
0x00000000001a13a2 : add byte ptr [rax], al ; sub al, 0x44 ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001941a2 : add byte ptr [rax], al ; sub al, 0x72 ; add byte ptr [rax], al ; test al, 0x20 ; out dx, al ; call rsp
0x0000000000196aa2 : add byte ptr [rax], al ; sub al, 0x9b ; add byte ptr [rax], al ; cwde ; fucomip st(6) ; jmp qword ptr [rax]
0x000000000019c7a2 : add byte ptr [rax], al ; sub al, 0xf8 ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; jmp rdx
0x00000000001adbe2 : add byte ptr [rax], al ; sub al, byte ptr [rdx] ; add byte ptr [rax], al ; ret 8
0x00000000001a9a16 : add byte ptr [rax], al ; sub byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x00000000001ad7da : add byte ptr [rax], al ; sub byte ptr [rbx], al ; add byte ptr [rax], al ; retf 6
0x00000000001a3b9e : add byte ptr [rax], al ; sub byte ptr [rcx + rax], ch ; adc rcx, r15 ; jmp qword ptr [rbx]
0x0000000000198a56 : add byte ptr [rax], al ; sub byte ptr [rcx - 0x10], bh ; jmp rbx
0x000000000019389e : add byte ptr [rax], al ; sub byte ptr [rcx], ch ; add ah, cl ; int1 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a0e9e : add byte ptr [rax], al ; sub byte ptr [rdi], bh ; add dword ptr [rax], eax ; jl 0x1a0ed7 ; cmc ; call qword ptr [rdx]
0x000000000019c7a6 : add byte ptr [rax], al ; sub byte ptr [rsi], ah ; jmp rdx
0x000000000015bdbc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000033b54 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000b6d03 : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000edd72 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000113820 : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000007c176 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000009fd91 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000d5460 : add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd5405
0x00000000000d79e5 : add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd7987
0x00000000000013be : add byte ptr [rax], al ; syscall
0x00000000001941a6 : add byte ptr [rax], al ; test al, 0x20 ; out dx, al ; call rsp
0x00000000001a451e : add byte ptr [rax], al ; test al, 0x75 ; add dword ptr [rax], eax ; and rsi, r14 ; call qword ptr [rbx]
0x0000000000198386 : add byte ptr [rax], al ; test al, 0x9f ; cli ; call qword ptr [rax]
0x000000000019db1e : add byte ptr [rax], al ; test al, 0xb ; add dword ptr [rax], eax ; or r14, rsp ; jmp qword ptr [rcx]
0x0000000000192ce6 : add byte ptr [rax], al ; test al, 0xca ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae05e : add byte ptr [rax], al ; test al, 8 ; add byte ptr [rax], al ; ret
0x00000000001983fa : add byte ptr [rax], al ; test byte ptr [rax + rax - 0x1050a000], dh ; call qword ptr [rax]
0x00000000001887b6 : add byte ptr [rax], al ; test byte ptr [rbx - 0x11], al ; jmp rsp
0x000000000007bff4 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7c028 ; pop rbx ; ret
0x00000000001a18fa : add byte ptr [rax], al ; test byte ptr [rcx + 1], cl ; add al, al ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000187376 : add byte ptr [rax], al ; test byte ptr [rdi - 0x16], ah ; jmp rax
0x00000000001a39fa : add byte ptr [rax], al ; test byte ptr [rdx + 1], ch ; add al, dl ; push rbp ; jmp qword ptr [rsi]
0x0000000000187f0e : add byte ptr [rax], al ; test ch, dh ; in al, dx ; call rsp
0x000000000019397a : add byte ptr [rax], al ; test ch, dh ; in eax, dx ; call qword ptr [rsi]
0x0000000000188c06 : add byte ptr [rax], al ; test cl, bl ; out dx, eax ; jmp rsp
0x000000000003a195 : add byte ptr [rax], al ; test dil, dil ; cmove eax, ecx ; ret
0x000000000003a1bd : add byte ptr [rax], al ; test dil, dil ; cmovne eax, ecx ; ret
0x000000000003a1aa : add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x000000000011d6ff : add byte ptr [rax], al ; test eax, eax ; je 0x11d718 ; xor eax, eax ; ret
0x000000000007532d : add byte ptr [rax], al ; test ecx, ecx ; je 0x7536a ; mov eax, edx ; pop rbx ; ret
0x00000000001046fd : add byte ptr [rax], al ; test rax, rax ; je 0x104737 ; call rax
0x0000000000127cb2 : add byte ptr [rax], al ; test rax, rax ; jne 0x127ca8 ; pop rbx ; ret
0x00000000001659f6 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x165a08 ; ret
0x000000000007a69e : add byte ptr [rax], al ; test rdx, rdx ; jne 0x7a6b9 ; xor eax, eax ; ret
0x000000000015570e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000019a80a : add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add al, al ; hlt ; int1 ; call qword ptr [rax]
0x00000000001884ce : add byte ptr [rax], al ; xchg eax, esp ; int1 ; out dx, al ; jmp rsp
0x0000000000188a6e : add byte ptr [rax], al ; xchg eax, esp ; jne 0x188a67 ; jmp qword ptr [rax]
0x00000000001927da : add byte ptr [rax], al ; xchg eax, esp ; mov ch, 0xed ; call qword ptr [rax]
0x0000000000188296 : add byte ptr [rax], al ; xchg eax, esp ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; inc dword ptr [rax] ; ret
0x000000000018878e : add byte ptr [rax], al ; xchg eax, esp ; out dx, eax ; call qword ptr [rax]
0x000000000018eb0a : add byte ptr [rax], al ; xchg eax, esp ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; call qword ptr [rdx]
0x000000000019c90a : add byte ptr [rax], al ; xchg eax, esp ; stc ; add byte ptr [rax], al ; adc byte ptr [rdx], ch ; call rcx
0x000000000018fdaa : add byte ptr [rax], al ; xchg eax, esp ; sub al, 0xfa ; call qword ptr [rdi]
0x00000000001a62be : add byte ptr [rax], al ; xchg rax, rbx ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x0000000000194cca : add byte ptr [rax], al ; xor al, 0x42 ; out dx, al ; jmp rdx
0x0000000000195b8a : add byte ptr [rax], al ; xor al, 0x78 ; out dx, al ; call qword ptr [rdx]
0x000000000019dbaa : add byte ptr [rax], al ; xor al, 0xc ; add dword ptr [rax], eax ; adc byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rcx]
0x00000000001997aa : add byte ptr [rax], al ; xor al, 0xc8 ; add byte ptr [rax], al ; mov al, 0x1a ; int1 ; call qword ptr [rax]
0x00000000001938ca : add byte ptr [rax], al ; xor al, 0xf2 ; in eax, dx ; jmp rsp
0x00000000001ac6aa : add byte ptr [rax], al ; xor al, 0xf7 ; add dword ptr [rax], eax ; rol byte ptr [rax - 5], 1 ; call rax
0x000000000018e63e : add byte ptr [rax], al ; xor bh, 0xe9 ; call qword ptr [rbx]
0x0000000000194c2e : add byte ptr [rax], al ; xor byte ptr [rax - 0x12], al ; call rdi
0x000000000019ffa6 : add byte ptr [rax], al ; xor byte ptr [rax], dh ; add dword ptr [rax], eax ; je 0x19ffa3 ; hlt ; jmp qword ptr [rcx]
0x0000000000190aa6 : add byte ptr [rax], al ; xor byte ptr [rbx], bh ; add byte ptr [rax], al ; mov ah, 0x1f ; cli ; jmp qword ptr [rcx]
0x000000000019daa6 : add byte ptr [rax], al ; xor byte ptr [rbx], cl ; add dword ptr [rax], eax ; or r14d, esp ; call qword ptr [rbx]
0x0000000000198a2e : add byte ptr [rax], al ; xor byte ptr [rcx - 0x10], bh ; call qword ptr [rax]
0x00000000001a41a6 : add byte ptr [rax], al ; xor byte ptr [rdx + 1], dh ; add byte ptr [rbp + rdx - 0xa], dl ; call rdx
0x000000000018fda6 : add byte ptr [rax], al ; xor byte ptr [rsi], ch ; add byte ptr [rax], al ; xchg eax, esp ; sub al, 0xfa ; call qword ptr [rdi]
0x000000000009f39e : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000bf026 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000083254 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000dbace : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000001346d2 : add byte ptr [rax], al ; xor eax, eax ; call 0x21106
0x000000000006b856 : add byte ptr [rax], al ; xor eax, eax ; call 0x77aa6
0x000000000012f96e : add byte ptr [rax], al ; xor eax, eax ; jmp 0x12f93c
0x000000000012f9ee : add byte ptr [rax], al ; xor eax, eax ; jmp 0x12f9bc
0x000000000011df9e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000011df56 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000037a3c : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000376e3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000037726 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e815e : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000015565a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000038a46 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000006a7ee : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000021ace : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000ed9ba : add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000059fce : add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x000000000010467f : add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x000000000006da8e : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x0000000000037d8c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r9 ; call rdx
0x00000000000a2ffe : add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xa2fd6
0x000000000005922e : add byte ptr [rax], al ; xor r8d, r8d ; jmp rax
0x000000000002a0b6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000000a180e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a9243 : add byte ptr [rax], bh ; add byte ptr [rax], al ; add al, dl ; ret 1
0x00000000001a19af : add byte ptr [rax], bh ; add qword ptr [rax], rax ; pushfq ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000001a13a7 : add byte ptr [rax], bh ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001983d7 : add byte ptr [rax], bh ; fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000001ab3f7 : add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x0000000000194837 : add byte ptr [rax], bh ; out dx, al ; jmp rbx
0x000000000003fd3c : add byte ptr [rax], bh ; ret 0x3175
0x00000000001a34d7 : add byte ptr [rax], bh ; ret 0xfff5
0x0000000000190787 : add byte ptr [rax], bh ; retf
0x00000000001a3d67 : add byte ptr [rax], bh ; sbb esp, edi ; jmp qword ptr [rdx]
0x000000000000f207 : add byte ptr [rax], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a1b8f : add byte ptr [rax], bl ; add qword ptr [rax], r8 ; cmp al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x00000000001a1c33 : add byte ptr [rax], bl ; cmc ; call qword ptr [rsi]
0x00000000001a1f17 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a098f : add byte ptr [rax], bl ; cmp al, byte ptr [rcx] ; add byte ptr [rbx + rdx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001a3c8f : add byte ptr [rax], bl ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add r14b, sil ; jmp qword ptr [rbx]
0x00000000001a918f : add byte ptr [rax], bl ; ret 1
0x000000000019389f : add byte ptr [rax], ch ; imul eax, dword ptr [rax], 0xedf1cc00 ; jmp qword ptr [rdx]
0x00000000001abb9f : add byte ptr [rax], ch ; in al, dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp eax, edi ; jmp qword ptr [rcx]
0x00000000001a3b9f : add byte ptr [rax], ch ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; adc rcx, r15 ; jmp qword ptr [rbx]
0x000000000019c7a7 : add byte ptr [rax], ch ; jmp rdx
0x0000000000198a57 : add byte ptr [rax], ch ; jns 0x198a4f ; jmp rbx
0x000000000019929f : add byte ptr [rax], ch ; ret
0x00000000001a09f7 : add byte ptr [rax], cl ; adc al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000160c6d : add byte ptr [rax], cl ; add bh, dh ; fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x000000000016368c : add byte ptr [rax], cl ; add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x0000000000160a06 : add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000001a3a27 : add byte ptr [rax], cl ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a1c7f : add byte ptr [rax], cl ; add qword ptr [r8], r8 ; mov word ptr [rax - 0xb], fs ; jmp qword ptr [rcx]
0x000000000002db44 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001a1ab7 : add byte ptr [rax], cl ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x0000000000198737 : add byte ptr [rax], cl ; retf
0x0000000000197e7f : add byte ptr [rax], cl ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sbb al, 0x4f ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000198477 : add byte ptr [rax], cl ; sti ; call qword ptr [rax]
0x000000000019ea07 : add byte ptr [rax], cl ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001a637f : add byte ptr [rax], cl ; xchg eax, esp ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; retf
0x000000000019cb87 : add byte ptr [rax], cl ; xor esi, ebx ; jmp rax
0x000000000018fda7 : add byte ptr [rax], dh ; add byte ptr cs:[rax], al ; xchg eax, esp ; sub al, 0xfa ; call qword ptr [rdi]
0x00000000001a3c7f : add byte ptr [rax], dh ; add dh, dh ; jmp qword ptr [rbx]
0x000000000009f39f : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001a41a7 : add byte ptr [rax], dh ; jb 0x1a41b4 ; add byte ptr [rbp + rdx - 0xa], dl ; call rdx
0x0000000000198a2f : add byte ptr [rax], dh ; jns 0x198a27 ; call qword ptr [rax]
0x000000000019daa7 : add byte ptr [rax], dh ; or eax, dword ptr [rcx] ; add byte ptr [rbx + rcx - 0xc], al ; call qword ptr [rbx]
0x0000000000194c2f : add byte ptr [rax], dh ; out dx, al ; call rdi
0x0000000000006a3f : add byte ptr [rax], dh ; pop rcx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000bac7 : add byte ptr [rax], dh ; retf
0x0000000000004387 : add byte ptr [rax], dh ; retf 0x11
0x000000000019ffa7 : add byte ptr [rax], dh ; xor byte ptr [rcx], al ; add byte ptr [rsp + rbp*8 - 0xc], dh ; jmp qword ptr [rcx]
0x0000000000042175 : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x0000000000199237 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, al ; ret 0
0x000000000019925f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, ch ; ret 0
0x000000000019924b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, bl ; ret 0
0x0000000000199273 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a918b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 1
0x000000000019929b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000001a1987 : add byte ptr [rax], dl ; add qword ptr [rax], rax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000001a3a87 : add byte ptr [rax], dl ; imul eax, dword ptr [rcx], 0 ; xchg eax, esp ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001989df : add byte ptr [rax], dl ; jns 0x1989d7 ; call qword ptr [rdx]
0x000000000019f05f : add byte ptr [rax], dl ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001901ef : add byte ptr [rax], dl ; mov ebp, edx ; call qword ptr [rsi]
0x000000000000b14f : add byte ptr [rax], dl ; mov esi, 0xf ; add byte ptr [rax], al ; retf 0
0x0000000000195b87 : add byte ptr [rax], dl ; mov word ptr [rax], es ; add byte ptr [rax + rdi*2], dh ; out dx, al ; call qword ptr [rdx]
0x000000000002dc24 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000019dbaf : add byte ptr [rax], dl ; or al, 0xf4 ; jmp qword ptr [rcx]
0x000000000018895f : add byte ptr [rax], dl ; out dx, eax ; jmp rax
0x00000000001a194f : add byte ptr [rax], dl ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x0000000000199c8f : add byte ptr [rax], dl ; push rbp ; int1 ; call qword ptr [rsi]
0x000000000000634f : add byte ptr [rax], dl ; push rdx ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000000f997 : add byte ptr [rax], dl ; ret
0x000000000000a8df : add byte ptr [rax], dl ; retf
0x000000000019c90f : add byte ptr [rax], dl ; sub dh, bl ; call rcx
0x00000000001a9348 : add byte ptr [rax], r8b ; add ah, dl ; ret
0x000000000004449d : add byte ptr [rax], r8b ; add rax, 1 ; pop rbx ; ret
0x00000000000fee85 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000164f15 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000000756ad : add byte ptr [rax], r8b ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000033d4d : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000082a2d : add byte ptr [rax], r8b ; jmp rax
0x0000000000115b05 : add byte ptr [rax], r8b ; mov byte ptr [r10], 0 ; ret
0x00000000000cd085 : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008cfed : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000e7c2d : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x00000000000e9dbd : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x00000000000e9cfd : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x00000000000f79dd : add byte ptr [rax], r8b ; mov eax, 0x110 ; syscall
0x00000000000f7a3d : add byte ptr [rax], r8b ; mov eax, 0x11b ; syscall
0x00000000000f76ad : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x00000000000e8a1d : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x00000000000e8a7d : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x00000000000f77cd : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x00000000000f7acd : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x00000000000f75ed : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x00000000000f7bed : add byte ptr [rax], r8b ; mov eax, 0x14a ; syscall
0x00000000000f7c1d : add byte ptr [rax], r8b ; mov eax, 0x14b ; syscall
0x0000000000083f6d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000e8a4d : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x00000000000de72d : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x00000000000f1d0d : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x00000000000f8c2d : add byte ptr [rax], r8b ; mov eax, 0x1e ; syscall
0x00000000000f8cbd : add byte ptr [rax], r8b ; mov eax, 0x1f ; syscall
0x00000000000e89bd : add byte ptr [rax], r8b ; mov eax, 0x20 ; syscall
0x00000000000e89ed : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000b62cd : add byte ptr [rax], r8b ; mov eax, 0x24 ; syscall
0x00000000000b62fd : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x00000000000f835d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x00000000000f7e0d : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x00000000000c400d : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x00000000000f8b2d : add byte ptr [rax], r8b ; mov eax, 0x40 ; syscall
0x00000000000f8afd : add byte ptr [rax], r8b ; mov eax, 0x41 ; syscall
0x00000000000f8acd : add byte ptr [rax], r8b ; mov eax, 0x47 ; syscall
0x00000000000f032d : add byte ptr [rax], r8b ; mov eax, 0x4d ; syscall
0x00000000000e8b6d : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x00000000000e9ded : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x00000000000e9d2d : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x00000000000e7b3d : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x00000000000e945d : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x00000000000e948d : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000c403d : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x00000000000f782d : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000c554d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000c557d : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000c55dd : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000c560d : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000c563d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x00000000000f6dbd : add byte ptr [rax], r8b ; mov eax, 0x7a ; syscall
0x00000000000f6ded : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x00000000000f758d : add byte ptr [rax], r8b ; mov eax, 0x7d ; syscall
0x00000000000c5afd : add byte ptr [rax], r8b ; mov eax, 0x7e ; ret
0x00000000000f75bd : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x000000000011400d : add byte ptr [rax], r8b ; mov eax, 0x7fffffff ; ret
0x00000000000f7a0d : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x00000000000e79ed : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x00000000000de69d : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x00000000000de6cd : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x00000000000de6fd : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x00000000000de75d : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x00000000000de78d : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x00000000000de7bd : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x00000000000f1d9d : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x00000000000f1dcd : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x00000000000f1dfd : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x00000000000f74ed : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x00000000000f78ed : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x00000000000f1c0d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000000eeb6d : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x00000000000ef01d : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000000ef04d : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x00000000000ee88d : add byte ptr [rax], r8b ; mov eax, 0xaa ; syscall
0x00000000000f6c2d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x00000000000f761d : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x00000000000f764d : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x00000000000f6d8d : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x0000000000083f35 : add byte ptr [rax], r8b ; mov eax, 0xc ; pop rbx ; ret
0x00000000000f4e2d : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x00000000000f4d0d : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x00000000000f767d : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x00000000000f751d : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x00000000000f779d : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x00000000000f77fd : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x000000000007cf3d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c6955 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000113835 : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007cb4d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000001134e5 : add byte ptr [rax], r8b ; mov eax, ecx ; ret
0x000000000010832d : add byte ptr [rax], r8b ; mov eax, edi ; bswap eax ; ret
0x000000000009b37d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001038f5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000009c5ed : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000001018bd : add byte ptr [rax], r8b ; mov rdi, r14 ; call 0xfe2d8
0x000000000009b3bd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000127435 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c43d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000d243d : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000034ce5 : add byte ptr [rax], r8b ; ret
0x00000000000dbacd : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000cf805 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6a7d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000037725 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000007083d : add byte ptr [rax], r8b ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000a180d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000e7526 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000131353 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012675b : add byte ptr [rbp + 0x11], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000780d3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x000000000006ae72 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x18 ; ret
0x00000000000c4390 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012636a : add byte ptr [rbp + 0x12], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000b64a1 : add byte ptr [rbp + 0x13], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000004a7de : add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x00000000001131b8 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x18 ; ret
0x00000000001049fb : add byte ptr [rbp + 0x1a], dh ; leave ; ret
0x0000000000111fc6 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ed732 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x00000000000f6cca : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x68 ; ret
0x00000000001130da : add byte ptr [rbp + 0x22], dh ; add rsp, 0x18 ; ret
0x00000000000b6370 : add byte ptr [rbp + 0x22], dh ; add rsp, 0x28 ; ret
0x00000000000ae05e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001320f5 : add byte ptr [rbp + 0x24], dh ; add rsp, 0x48 ; ret
0x000000000011ec54 : add byte ptr [rbp + 0x26], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013e60c : add byte ptr [rbp + 0x27], bl ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000011ecf4 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001608ce : add byte ptr [rbp + 0x29], al ; ret
0x00000000001632d6 : add byte ptr [rbp + 0x29], al ; retf
0x00000000000883b9 : add byte ptr [rbp + 0x29], cl ; ret 0x8948
0x000000000004eb11 : add byte ptr [rbp + 0x29], cl ; ret 0xf4c
0x0000000000087f5f : add byte ptr [rbp + 0x29], cl ; retf
0x00000000000adf35 : add byte ptr [rbp + 0x29d675db], al ; ret
0x00000000000ade67 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x000000000012f4cd : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x18 ; ret
0x0000000000127c4e : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x28 ; ret
0x0000000000131f0d : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000012f944 : add byte ptr [rbp + 0x2d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f8b8f : add byte ptr [rbp + 0x2e], dh ; mov eax, 0x42 ; syscall
0x000000000011cb6a : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000131e80 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x38 ; ret
0x00000000000c4d21 : add byte ptr [rbp + 0x30], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000078f4a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000002a0b7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000011d6db : add byte ptr [rbp + 0x31], al ; rcr byte ptr [rbx + 0x5d], 0xe9 ; retf 0xc5
0x000000000008760f : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000bc24c : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f8c8f : add byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000c41df : add byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x3d], cl ; syscall
0x00000000001021bb : add byte ptr [rbp + 0x32], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000129597 : add byte ptr [rbp + 0x38], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000126496 : add byte ptr [rbp + 0x38], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000adebb : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000d161e : add byte ptr [rbp + 0x39], al ; retf
0x0000000000162912 : add byte ptr [rbp + 0x39], cl ; retf 0xbf41
0x000000000011e557 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000041df1 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003a18a : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x00000000001298b7 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129657 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ef2ff : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x0000000000046c00 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x0000000000131f95 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x00000000000eef84 : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000129a77 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f01a3 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; ret
0x00000000000f0272 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x38 ; ret
0x00000000000f2d7f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000000895e5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010ceca : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000cd7c5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000007e5de : add byte ptr [rbp + 0x41], dh ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000113df8 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e7e16 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000000e8625 : add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x00000000000e803b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000007b1a7 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000006a7de : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000e768f : add byte ptr [rbp + 0x49], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f8bae : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x58 ; ret
0x00000000000c0b8a : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x38 ; ret
0x00000000000c56aa : add byte ptr [rbp + 0x56], dh ; add rsp, 0x38 ; ret
0x00000000001a15e3 : add byte ptr [rbp + 0x57], dl ; cmc ; call qword ptr [rcx]
0x000000000010e73c : add byte ptr [rbp + 0x59], dh ; add rsp, 0x38 ; ret
0x0000000000041f7f : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000776e7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x000000000012970a : add byte ptr [rbp + 0x66], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e8892 : add byte ptr [rbp + 0x67], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000041ea1 : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c2c2e : add byte ptr [rbp + 0x76], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ee5ec : add byte ptr [rbp + 0x76], dh ; add rsp, 0x38 ; ret
0x00000000001232ea : add byte ptr [rbp + 0x7e], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000002e412 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x18 ; ret
0x0000000000132658 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x00000000000ed798 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x0000000000038834 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012666e : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ba69b : add byte ptr [rbp + 0xf], al ; ret
0x0000000000045ccf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000045bbf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000ee7b5 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000000df7ce : add byte ptr [rbp + 0xf], dh ; mov eax, 2 ; ret
0x000000000008aec7 : add byte ptr [rbp + 1], al ; ret 0x14d
0x000000000008ad9b : add byte ptr [rbp + 1], al ; retf
0x00000000001a34d3 : add byte ptr [rbp + 1], bl ; add byte ptr [rax], bh ; ret 0xfff5
0x000000000000c9e7 : add byte ptr [rbp + 2], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000380ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000000cec39 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x0000000000034b6e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000003819e : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000001294c0 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x00000000000e87a6 : add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x00000000001274b0 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x00000000000e6b89 : add byte ptr [rbp + 5], dh ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000011c59e : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000356de : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000001150f1 : add byte ptr [rbp + 7], dh ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000001ae52b : add byte ptr [rbp + 8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000000ef465 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000018c327 : add byte ptr [rbp + rax - 6], dl ; call rax
0x000000000018a68f : add byte ptr [rbp + rax*4 - 0xa], dl ; jmp qword ptr [rax]
0x000000000019e643 : add byte ptr [rbp + rax*4 - 0xc], bh ; call qword ptr [rax]
0x000000000019e67b : add byte ptr [rbp + rax*4 - 0xc], dl ; call qword ptr [rax]
0x0000000000188eff : add byte ptr [rbp + rbx - 0x10], ah ; call rsp
0x0000000000188927 : add byte ptr [rbp + rbx*2 - 0x11], al ; call qword ptr [rax]
0x00000000001951d3 : add byte ptr [rbp + rbx*2 - 0x12], bh ; call qword ptr [rdx]
0x000000000018f46b : add byte ptr [rbp + rbx*2 - 0x16], ah ; jmp qword ptr [rcx]
0x00000000001a1a2b : add byte ptr [rbp + rbx*2 - 0xb], al ; jmp qword ptr [rcx]
0x00000000001a1a53 : add byte ptr [rbp + rbx*2 - 0xb], bh ; jmp qword ptr [rcx]
0x000000000019ee03 : add byte ptr [rbp + rbx*4 - 0xc], ch ; jmp qword ptr [rcx]
0x000000000016de57 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000001a1d0b : add byte ptr [rbp + rcx*2 + 0x61600001], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018b6ff : add byte ptr [rbp + rcx*2 - 8], dl ; call qword ptr [rax]
0x0000000000073cff : add byte ptr [rbp + rcx*4 + 0x2d], cl ; pop rcx ; retf 0x33
0x00000000000a78ee : add byte ptr [rbp + rcx*4 + 0x35], cl ; retf 0xcba
0x00000000000232a1 : add byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x0000000000104d37 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x00000000001628bd : add byte ptr [rbp + rcx*4 + 0x47], al ; add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000074e4e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000074f48 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000011c97e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x00000000000af010 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r12
0x0000000000075042 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000000458f7 : add byte ptr [rbp + rcx*4 + 0x64], cl ; retf 0x4df0
0x00000000000cf3df : add byte ptr [rbp + rcx*4 + 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000004d654 : add byte ptr [rbp + rcx*4 + 5], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; adc al, byte ptr [rax] ; jmp rax
0x00000000000fb2a2 : add byte ptr [rbp + rcx*4 + 5], cl ; push rsi ; ret
0x0000000000075555 : add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x000000000018760f : add byte ptr [rbp + rcx*8 - 0x16], dl ; call rax
0x000000000018fc53 : add byte ptr [rbp + rdi*2 - 0x16], cl ; call rsi
0x000000000018b0b7 : add byte ptr [rbp + rdi*2 - 9], ah ; push rax ; ret 1
0x00000000001974f3 : add byte ptr [rbp + rdi*8 - 0x12], bh ; call qword ptr [rcx]
0x00000000001a41ab : add byte ptr [rbp + rdx - 0xa], dl ; call rdx
0x00000000001984eb : add byte ptr [rbp + rsi*4], dh ; add al, dh ; fsubr st(7) ; jmp rdx
0x00000000001884ff : add byte ptr [rbp + rsi*8 - 0x12], al ; call rax
0x00000000000a1b5d : add byte ptr [rbp - 0x10], dh ; ret
0x00000000000828b3 : add byte ptr [rbp - 0x16f78740], al ; ret
0x000000000011c2b3 : add byte ptr [rbp - 0x17b78b40], al ; ret
0x00000000001654f4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000c5bf3 : add byte ptr [rbp - 0x2f], dh ; mov eax, 0x40 ; ret
0x00000000000c5ae8 : add byte ptr [rbp - 0x35], dh ; ret
0x00000000000c5d2d : add byte ptr [rbp - 0x36], dh ; jmp 0xc5cdd
0x00000000001657ca : add byte ptr [rbp - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000016e103 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000ae5bf : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000e9413 : add byte ptr [rbp - 0x5f], dh ; mov rdi, rbx ; call 0x85ea8
0x0000000000045a07 : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000080cd0 : add byte ptr [rbp - 0x75], cl ; or byte ptr [r8 - 0x7d], cl ; retf 0x4801
0x00000000000d4de2 : add byte ptr [rbp - 0x76268b40], al ; ret 0xe281
0x0000000000162d37 : add byte ptr [rbp - 0x76b33cb5], cl ; retf
0x00000000000d1c10 : add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x0000000000164137 : add byte ptr [rbp - 0x77], al ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000450d5 : add byte ptr [rbp - 0x77], al ; retf 0x8341
0x00000000000a5b8c : add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x000000000005a71e : add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f2589 : add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x0000000000084765 : add byte ptr [rbp - 0x7ad98140], al ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000a35a0 : add byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret 0x8945
0x0000000000053761 : add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000000a74c7 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000312c2 : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax + 0xf], 0x44 ; shr cl, 1 ; ret 0xfff0
0x000000000008cc3f : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x00000000000cde67 : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000444b7 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000019eebb : add byte ptr [rbp - 0xc], dh ; jmp qword ptr [rcx]
0x000000000007e635 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000117455 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000001a729b : add byte ptr [rbp - 5], ah ; jmp qword ptr [rdx]
0x000000000018649c : add byte ptr [rbp - 5], bl ; jmp rax
0x000000000000d407 : add byte ptr [rbp], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000050a2c : add byte ptr [rbx + 0x13], cl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x00000000001517f9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000083944 : add byte ptr [rbx + 0x19], dh ; lea rax, [rdx - 8] ; ret
0x00000000000774cf : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000011a66f : add byte ptr [rbx + 0x2454ff3b], cl ; jo 0x11a608 ; ret
0x00000000000a0ac5 : add byte ptr [rbx + 0x2b], 4 ; mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x00000000000f965d : add byte ptr [rbx + 0x2bde9c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d243f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000007ce77 : add byte ptr [rbx + 0x339a2505], al ; add byte ptr [rcx], al ; ret
0x00000000000ebecf : add byte ptr [rbx + 0x38e8287d], cl ; retf 0xffff
0x0000000000111f1f : add byte ptr [rbx + 0x3b83f], cl ; add byte ptr [rax], al ; syscall
0x0000000000021e1f : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000002a4db : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000000beeff : add byte ptr [rbx + 0x43391843], cl ; or al, 0x7c ; ret 0x850f
0x000000000009b38f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000014c3ef : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000014f79f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000c43f2 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x000000000009d7bf : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x000000000008cc99 : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x00000000000829ff : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006da55 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000115dc4 : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8941
0x0000000000115d74 : add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x0000000000115d9c : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8941
0x000000000013ef8f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000503be : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000035dea : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021bf6 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023cc8 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007810f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000009ba79 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000002bf1f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000000e6b9f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000007749f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000008701d : add byte ptr [rbx + 0xb491], cl ; add bh, dh ; ret 0
0x00000000000535e0 : add byte ptr [rbx + 0xf4841ff], al ; retf 0x894c
0x00000000000756af : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001af043 : add byte ptr [rbx + 6], bh ; add byte ptr [rax], al ; ret 4
0x00000000001ace8f : add byte ptr [rbx + rax + 0x3a30000], al ; add byte ptr [rax], al ; retf
0x000000000015d4aa : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001887af : add byte ptr [rbx + rax*2 - 0x11], dl ; call rax
0x000000000018bcaf : add byte ptr [rbx + rax*2], dl ; stc ; call rsp
0x0000000000122ee6 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000001883d7 : add byte ptr [rbx + rax*8 - 0x12], dl ; call rsp
0x00000000001ad1bf : add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; retf
0x00000000001a3ac3 : add byte ptr [rbx + rbp*2 + 1], cl ; add al, ch ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a3aeb : add byte ptr [rbx + rbp*2 + 1], dh ; add byte ptr [rax], ah ; add esi, esi ; jmp qword ptr [rbx]
0x000000000018a4c7 : add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rax
0x00000000001894df : add byte ptr [rbx + rbp*4 - 0xe], ah ; jmp rax
0x0000000000188ccf : add byte ptr [rbx + rbp*8], dl ; out dx, eax ; call qword ptr [rax]
0x00000000001888d7 : add byte ptr [rbx + rbx*2 - 0x11], dl ; call qword ptr [rax]
0x00000000001a2b23 : add byte ptr [rbx + rbx*2 - 0x6c47ffff], ch ; cmc ; call rsi
0x0000000000196aa3 : add byte ptr [rbx + rbx*4], ch ; add byte ptr [rax], al ; cwde ; fucomip st(6) ; jmp qword ptr [rax]
0x000000000019db33 : add byte ptr [rbx + rcx + 0xb680001], bh ; hlt ; jmp qword ptr [rcx]
0x000000000019dae3 : add byte ptr [rbx + rcx + 1], ch ; add byte ptr [rax + 0xb], cl ; hlt ; call qword ptr [rsi]
0x000000000019daab : add byte ptr [rbx + rcx - 0xc], al ; call qword ptr [rbx]
0x000000000019db23 : add byte ptr [rbx + rcx - 0xc], cl ; jmp qword ptr [rcx]
0x00000000001a6d43 : add byte ptr [rbx + rcx - 9], bh ; call qword ptr [rcx]
0x00000000001a1b2b : add byte ptr [rbx + rcx*2 + 0x5eb00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a1ab3 : add byte ptr [rbx + rcx*2], bh ; add dword ptr [rax], eax ; or byte ptr [rsi - 0xb], bl ; jmp qword ptr [rcx]
0x000000000010cd36 : add byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2a70
0x0000000000087b86 : add byte ptr [rbx + rcx*4 + 0x35], cl ; xchg eax, edx ; ret
0x0000000000038967 : add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rax - 0x77], cl ; retf
0x0000000000080a3f : add byte ptr [rbx + rcx*4 + 0x48], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000046dd7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000045657 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001a9ae3 : add byte ptr [rbx + rcx*8 + 1], ch ; add al, cl ; ret 0xfff7
0x0000000000189faf : add byte ptr [rbx + rcx*8 - 0xb], ah ; jmp qword ptr [rax]
0x0000000000198a7b : add byte ptr [rbx + rdi*4], al ; add byte ptr [rax], al ; rcl byte ptr [rsp + rdi*8], 1 ; call qword ptr [rdx]
0x000000000018ca4f : add byte ptr [rbx + rdi*4], al ; cli ; jmp qword ptr [rax]
0x00000000001ac850 : add byte ptr [rbx + rdi*8 - 1], bh ; ret
0x0000000000197453 : add byte ptr [rbx + rdi*8], bl ; out dx, al ; call qword ptr [rax]
0x0000000000186218 : add byte ptr [rbx + rdi*8], dh ; jmp rax
0x000000000018e9c3 : add byte ptr [rbx + rdx - 0x16], bh ; jmp rdx
0x00000000001a0993 : add byte ptr [rbx + rdx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000018bd5f : add byte ptr [rbx + rdx*2 - 7], dl ; call rsp
0x0000000000190413 : add byte ptr [rbx + rdx*4 - 0x16], cl ; call qword ptr [rdx]
0x000000000019043b : add byte ptr [rbx + rdx*4 - 0x16], dl ; call qword ptr [rdx]
0x00000000001958d3 : add byte ptr [rbx + rsi*2], bh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189877 : add byte ptr [rbx + rsi*4 - 0xd], dh ; jmp qword ptr [rax]
0x000000000018b167 : add byte ptr [rbx + rsi*4 - 9], dh ; jmp rax
0x0000000000072818 : add byte ptr [rbx - 0x14f3db8c], cl ; ret 0x5590
0x000000000012c7d6 : add byte ptr [rbx - 0x16efdbac], cl ; ret
0x0000000000109b93 : add byte ptr [rbx - 0x16f7dbbc], cl ; ret 0xfffd
0x000000000018cfc0 : add byte ptr [rbx - 0x17], al ; call qword ptr [rax]
0x000000000007264f : add byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a05b8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000a05c6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a05bf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a05d4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a05cd : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a05b1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000012a6db : add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000113c1c : add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; ret
0x000000000011ecff : add byte ptr [rbx - 0x3e7cb7ef], cl ; add al, 0xf ; retf 0x6348
0x00000000000f4c9b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x00000000001177e6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x1177f9 ; ret
0x000000000012ac07 : add byte ptr [rbx - 0x3f7cb7f8], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000a0814 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000005a44c : add byte ptr [rbx - 0x52743], al ; call qword ptr [rax]
0x0000000000035c3a : add byte ptr [rbx - 0x6af00008], al ; ret 0xd521
0x0000000000051d70 : add byte ptr [rbx - 0x71f0cb08], al ; retf 0xfff9
0x00000000000d7126 : add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000fb01a : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x0000000000038124 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e0950 : add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x00000000000f73ff : add byte ptr [rbx - 0x76be0007], al ; retf 0x3074
0x000000000002b9e8 : add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x0000000000062662 : add byte ptr [rbx - 0x76be0008], al ; ror dword ptr [rdi], 0x85 ; retf
0x00000000000532bc : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000011388d : add byte ptr [rbx - 0x77], dl ; retf
0x0000000000113821 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x113832 ; ret
0x000000000005fc10 : add byte ptr [rbx - 0x78f0d006], al ; ret
0x000000000004ef67 : add byte ptr [rbx - 0x78f0d008], al ; retf 0x11
0x0000000000090b74 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x0000000000063497 : add byte ptr [rbx - 0x7af00008], al ; jmp rdx
0x000000000004cfe9 : add byte ptr [rbx - 0x7af00008], al ; ret
0x0000000000061cfe : add byte ptr [rbx - 0x7af00008], al ; retf 0xffb7
0x00000000000657bd : add byte ptr [rbx - 0x7af09608], al ; retf 1
0x000000000015fd06 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000005a5fa : add byte ptr [rbx - 0x7bf0f708], al ; retf 4
0x00000000000d5677 : add byte ptr [rbx - 0x7bf0fe08], al ; syscall
0x000000000008ad3f : add byte ptr [rbx - 0x7bf0fe1d], al ; retf 1
0x000000000007a837 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8310
0x00000000000f1f1f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x000000000004be04 : add byte ptr [rbx - 0x8ff43], al ; call qword ptr [rax]
0x00000000000080af : add byte ptr [rbx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x000000000000efc7 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3a
0x000000000005548f : add byte ptr [rbx], dl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001ab67b : add byte ptr [rbx], dl ; sti ; jmp qword ptr [rdx]
0x00000000000ed818 : add byte ptr [rcx + 0x10b8df], cl ; add byte ptr [rax], al ; syscall
0x00000000000f7397 : add byte ptr [rcx + 0x145], bh ; mov eax, ecx ; syscall
0x000000000011d80b : add byte ptr [rcx + 0x146349c1], cl ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x000000000008d0af : add byte ptr [rcx + 0x146349c2], cl ; nop ; add rdx, r8 ; jmp rdx
0x0000000000162103 : add byte ptr [rcx + 0x21], cl ; ret
0x0000000000162cc0 : add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x00000000000c43d8 : add byte ptr [rcx + 0x22b8c7], cl ; add byte ptr [rax], al ; syscall
0x000000000012c716 : add byte ptr [rcx + 0x245489cf], cl ; adc al, ch ; outsb dx, byte ptr [rsi] ; ret 0xfffb
0x0000000000059451 : add byte ptr [rcx + 0x29], al ; retf 0x8949
0x000000000016326d : add byte ptr [rcx + 0x29], cl ; fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x00000000001506f5 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000009b661 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000007410f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000074076 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000014a0af : add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000055334 : add byte ptr [rcx + 0x35ef0505], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000000cae67 : add byte ptr [rcx + 0x39], al ; retf
0x0000000000041555 : add byte ptr [rcx + 0x39], cl ; ret
0x000000000007d8b2 : add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x0000000000134d9c : add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x00000000000550ca : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000130ce1 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000014a08f : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009c35f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007db60 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115278 : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x18 ; ret
0x00000000000ef1a4 : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x58 ; ret
0x00000000000ac6f9 : add byte ptr [rcx + 0x48d4c16], cl ; add dword ptr [rbp + 0x39], ecx ; ret 0xcf76
0x00000000001a15cf : add byte ptr [rcx + 0x57], bl ; cmc ; call qword ptr [rax]
0x00000000000de5a6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000f240a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x000000000007a820 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x00000000001048bb : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000000000013792e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000015b06c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009b208 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000049a56 : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000f365f : add byte ptr [rcx + 0x63], cl ; ret 0x8b49
0x00000000000b166d : add byte ptr [rcx + 0x63], cl ; retf
0x000000000002dcef : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x000000000003430f : add byte ptr [rcx + 0x7fffff], ch ; je 0x3430a ; ret
0x00000000000de85f : add byte ptr [rcx + 0xcb], bh ; mov eax, ecx ; syscall
0x00000000000de85e : add byte ptr [rcx + 0xcb], dil ; mov eax, ecx ; syscall
0x000000000019dc9b : add byte ptr [rcx + 0xdb00001], ah ; hlt ; call qword ptr [rcx]
0x0000000000056f9a : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00000000000555ff : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf01
0x0000000000056f27 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000004e7aa : add byte ptr [rcx + 0xf], al ; mov esi, 0x358d48c7 ; retf 0x1288
0x000000000005b09c : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000053e4e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xc931
0x00000000001643f0 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xd231
0x0000000000163d65 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff31
0x0000000000162173 : add byte ptr [rcx + 0xf], cl ; ret
0x0000000000162c88 : add byte ptr [rcx + 0xf], cl ; ret 0x8341
0x0000000000162f31 : add byte ptr [rcx + 0xf], cl ; ret 0x8349
0x000000000012bf3e : add byte ptr [rcx + 0xf], cl ; ret 0xff85
0x0000000000163984 : add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000000f93ab : add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000009fb7f : add byte ptr [rcx + 1], cl ; ret
0x00000000000b4f10 : add byte ptr [rcx + 1], cl ; retf 0x8d49
0x00000000001adc5f : add byte ptr [rcx + 2], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000db57 : add byte ptr [rcx + 2], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x00000000001ad937 : add byte ptr [rcx + 3], dh ; add byte ptr [rax], al ; retf 5
0x00000000001ae617 : add byte ptr [rcx + 6], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000160a16 : add byte ptr [rcx + 9], cl ; fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000016271f : add byte ptr [rcx + 9], cl ; ret
0x000000000007db3d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d6727 : add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x00000000001a3b78 : add byte ptr [rcx + rax], ch ; adc ecx, r15d ; jmp qword ptr [rbx]
0x00000000000e801c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000019866b : add byte ptr [rcx + rbx*2 - 0x10], dh ; jmp rbx
0x00000000001891cf : add byte ptr [rcx + rbx*4 - 0xf], ah ; jmp rax
0x000000000019a2d3 : add byte ptr [rcx + rbx*4 - 0xf], ch ; jmp rsi
0x00000000001aa353 : add byte ptr [rcx + rbx*8 - 9], bh ; call qword ptr [rdx]
0x000000000019694b : add byte ptr [rcx + rbx*8], ah ; out dx, al ; call qword ptr [rdx]
0x000000000018c417 : add byte ptr [rcx + rbx], al ; cli ; jmp rsp
0x000000000007b844 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000001a18fb : add byte ptr [rcx + rcx*2 + 0x5bc00001], al ; cmc ; jmp qword ptr [rcx]
0x0000000000127151 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x307f
0x00000000000c1361 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c142b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000801d1 : add byte ptr [rcx + rcx*4 + 0x5c], cl ; and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000008cf67 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000c05cf : add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x00000000000ce4eb : add byte ptr [rcx + rcx*4 - 0x11], al ; call 0xfa7f6
0x000000000002ea31 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000000c474c : add byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x0000000000084594 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, rcx ; call rax
0x000000000011f1d8 : add byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdi, rbp ; call 0x11b4d9
0x00000000000fe920 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed566 : add byte ptr [rcx + rcx*4 - 0x30], al ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000759e1 : add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000010441d : add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000008cb52 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x00000000000711be : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000015995f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000058e07 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x75086
0x000000000003a43c : add byte ptr [rcx + rcx*4 - 6], al ; mov rdi, rbp ; call 0x46f49
0x00000000001018bf : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xfe2d6
0x0000000000023229 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000018b837 : add byte ptr [rcx + rcx*4], dl ; clc ; call rsp
0x0000000000086a7f : add byte ptr [rcx + rcx*8 - 0x7cb7de8c], al ; ret 0x4801
0x00000000001afd07 : add byte ptr [rcx + rcx], bl ; add byte ptr [rax], al ; retf
0x00000000001a092b : add byte ptr [rcx + rdi + 0x12e00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000823d8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x823a7 ; ret
0x00000000001a13bb : add byte ptr [rcx + rdi - 0xb], dl ; jmp qword ptr [rcx]
0x000000000018c647 : add byte ptr [rcx + rdi - 6], dh ; call rax
0x00000000001abba3 : add byte ptr [rcx + rdi - 8], ch ; jmp qword ptr [rcx]
0x000000000019c90b : add byte ptr [rcx + rdi*8 + 0x2a100000], dl ; call rcx
0x0000000000188da7 : add byte ptr [rcx + rdi*8 - 0x11], dh ; jmp rsp
0x00000000001a3b7b : add byte ptr [rcx + rdx - 7], al ; jmp qword ptr [rbx]
0x00000000001a3bf3 : add byte ptr [rcx + rdx - 7], bl ; jmp qword ptr [rbx]
0x00000000001a3ba3 : add byte ptr [rcx + rdx - 7], cl ; jmp qword ptr [rbx]
0x00000000001a3bcb : add byte ptr [rcx + rdx - 7], dl ; jmp qword ptr [rbx]
0x000000000018acd7 : add byte ptr [rcx + rdx - 9], dh ; jmp rax
0x000000000019ea1b : add byte ptr [rcx + rdx*4], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001897ef : add byte ptr [rcx + rdx*4], dl ; jmp rsp
0x0000000000189917 : add byte ptr [rcx + rdx*8 - 0xd], dl ; call qword ptr [rax]
0x000000000019a0bb : add byte ptr [rcx + rdx*8], al ; add al, dh ; nop ; int1 ; call qword ptr [rcx]
0x00000000001a3b53 : add byte ptr [rcx + rdx], bh ; stc ; jmp qword ptr [rbx]
0x00000000001a3b2b : add byte ptr [rcx + rdx], dh ; stc ; jmp qword ptr [rbx]
0x000000000018c227 : add byte ptr [rcx + rsi*8 - 7], dl ; call qword ptr [rax]
0x00000000001ac083 : add byte ptr [rcx + rsi*8], cl ; add dword ptr [rax], eax ; enter -0x7b2, -1 ; ret
0x00000000001a007b : add byte ptr [rcx + rsi], al ; add dword ptr [rax], eax ; jo 0x1a0079 ; hlt ; jmp qword ptr [rcx]
0x00000000001a00a3 : add byte ptr [rcx + rsi], ch ; add dword ptr [rax], eax ; test al, 0xef ; hlt ; jmp qword ptr [rcx]
0x00000000000024e7 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000012b514 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000115b07 : add byte ptr [rcx - 0x3a], al ; add al, byte ptr [rax] ; ret
0x00000000000e6baf : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000b95ba : add byte ptr [rcx - 0x40], ch ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000002b5b4 : add byte ptr [rcx - 0x41], al ; add eax, 0xe9000000 ; ret 0xfffb
0x00000000000a8039 : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000026bd3 : add byte ptr [rcx - 0x45], al ; add eax, 0xe9000000 ; ret 0xfffc
0x000000000004f2f0 : add byte ptr [rcx - 0x46], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000035032 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000001608de : add byte ptr [rcx - 0x48], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000059f0f : add byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000c5cf7 : add byte ptr [rcx - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019f0fb : add byte ptr [rcx - 0x530fffff], al ; hlt ; jmp qword ptr [rcx]
0x0000000000113f77 : add byte ptr [rcx - 0x6535ff12], al ; cmp ecx, dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000016206f : add byte ptr [rcx - 0x73], al ; ret
0x00000000000303fc : add byte ptr [rcx - 0x75], al ; push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000003043b : add byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000000c6c8f : add byte ptr [rcx - 0x75], cl ; jl 0xc6c7a ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000dcbaf : add byte ptr [rcx - 0x75], cl ; jl 0xdcb9a ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000d67b7 : add byte ptr [rcx - 0x75], cl ; outsd dx, dword ptr [rsi] ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000004352d : add byte ptr [rcx - 0x75], cl ; ret 0x4440
0x0000000000043b6e : add byte ptr [rcx - 0x75], cl ; ret 0xb940
0x000000000008d037 : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x0000000000026dbe : add byte ptr [rcx - 0x77], al ; ret
0x000000000002937a : add byte ptr [rcx - 0x77], al ; ret 0x17e9
0x00000000000cd503 : add byte ptr [rcx - 0x77], al ; ret 0x3944
0x00000000000b9202 : add byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000025fb3 : add byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000000d90dc : add byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000075a0a : add byte ptr [rcx - 0x77], al ; ret 0x8beb
0x00000000000cd4b5 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000b9e1f : add byte ptr [rcx - 0x77], al ; ret 0xc4eb
0x0000000000021530 : add byte ptr [rcx - 0x77], al ; ret 0xc5eb
0x000000000005863c : add byte ptr [rcx - 0x77], al ; retf
0x00000000000c4266 : add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000bc27f : add byte ptr [rcx - 0x77], al ; retf 0xcbeb
0x00000000000451b0 : add byte ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000162bff : add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x000000000004509a : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a06cf : add byte ptr [rcx - 0x77], cl ; ret 0x3949
0x00000000001608e4 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000011cd5b : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000001627c7 : add byte ptr [rcx - 0x77], cl ; ret 0x94d
0x00000000000865a6 : add byte ptr [rcx - 0x77], cl ; retf
0x00000000000f7a6f : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x00000000000f752f : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000f6f9f : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000f7aff : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x00000000000f838f : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x00000000000f7b5f : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x00000000000f7e3f : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000c422f : add byte ptr [rcx - 0x77], cl ; retf 0x3db8
0x00000000000e94bf : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x00000000000e6696 : add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x000000000006af2f : add byte ptr [rcx - 0x77], cl ; retf 0x8b8
0x00000000000e9c9f : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x00000000000f791f : add byte ptr [rcx - 0x77], cl ; retf 0x9db8
0x00000000000f785f : add byte ptr [rcx - 0x77], cl ; retf 0xa5b8
0x00000000000f773f : add byte ptr [rcx - 0x77], cl ; retf 0xafb8
0x00000000000875e8 : add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x00000000000e9d5f : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x00000000000f4ebf : add byte ptr [rcx - 0x77], cl ; retf 0xbcb8
0x00000000000f4e5f : add byte ptr [rcx - 0x77], cl ; retf 0xbdb8
0x00000000000f4d3f : add byte ptr [rcx - 0x77], cl ; retf 0xbeb8
0x00000000000f4dcf : add byte ptr [rcx - 0x77], cl ; retf 0xc0b8
0x00000000000f1d3f : add byte ptr [rcx - 0x77], cl ; retf 0xd8b8
0x00000000000f8bff : add byte ptr [rcx - 0x77], cl ; retf 0xdcb8
0x00000000000f76df : add byte ptr [rcx - 0x77], cl ; retf 0xe9b8
0x000000000016449a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000000a4b9f : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x8b04
0x00000000001645a9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000000d6647 : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x0000000000021658 : add byte ptr [rcx - 0x7d], al ; retf
0x00000000001648af : add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x0000000000164a7f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x00000000000b6c46 : add byte ptr [rcx - 0x7d], al ; sti ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x0000000000082175 : add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000004b723 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000087679 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000089b9f : add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x000000000007df8f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000131c1f : add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000000000006bed7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000134f7f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000c4bc8 : add byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x000000000008d66f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007d88e : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000007a45f : add byte ptr [rcx - 0x80], al ; retf
0x000000000011a927 : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000010308f : add byte ptr [rcx - 0x877b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001a454b : add byte ptr [rcx - 0xa], ah ; call qword ptr [rsi]
0x0000000000162dac : add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x0000000000111337 : add byte ptr [rcx - 0xa], al ; ret 0x7402
0x0000000000162b34 : add byte ptr [rcx - 0xa], al ; ret 0x7407
0x0000000000111211 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001a4523 : add byte ptr [rcx - 0xa], cl ; call qword ptr [rbx]
0x000000000018545f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000001864b4 : add byte ptr [rcx - 5], bl ; jmp rax
0x0000000000090d42 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000090d68 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000018b367 : add byte ptr [rcx - 9], dl ; call rax
0x0000000000199c8b : add byte ptr [rcx*8 + 0x55100000], dl ; int1 ; call qword ptr [rsi]
0x00000000001a3be0 : add byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000001960b5 : add byte ptr [rcx], 2 ; ret 0xe0a
0x00000000001970db : add byte ptr [rcx], ah ; add byte ptr [rax - 0x14], dl ; out dx, al ; call qword ptr [rax]
0x000000000018b647 : add byte ptr [rcx], ah ; clc ; jmp rsp
0x000000000017b36b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000861c2 : add byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000b5ec6 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000007d6c7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000d4f79 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002ed5f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000002deb9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000ed8e0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000009fd8f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000037b3f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002dc04 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000010f63b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000012a66f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007ce7d : add byte ptr [rcx], al ; ret
0x00000000000ac86a : add byte ptr [rcx], al ; retf 0x8941
0x0000000000033d32 : add byte ptr [rcx], al ; retf 0xfe0d
0x0000000000178b28 : add byte ptr [rcx], bh ; bnd call qword ptr [rax] ; cmp edx, esi ; jmp qword ptr [rax]
0x0000000000021c3a : add byte ptr [rcx], bh ; ret
0x0000000000035b80 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000cdac7 : add byte ptr [rcx], bh ; ret 0x840f
0x0000000000115440 : add byte ptr [rcx], bh ; retf
0x00000000000ce0ff : add byte ptr [rcx], bh ; retf 0x6c7d
0x00000000000086df : add byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000086456 : add byte ptr [rcx], ch ; ret
0x00000000000b954f : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bcefc : add byte ptr [rcx], ch ; ret 0x858b
0x00000000000bce54 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000bae3b : add byte ptr [rcx], ch ; ret 0x894c
0x00000000000bd1e6 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000bb865 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000be41a : add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000edd73 : add byte ptr [rcx], ch ; ret 0xc085
0x0000000000054f2a : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b3de1 : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000b9516 : add byte ptr [rcx], ch ; ret 0xe889
0x000000000018f083 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; call 0x1318dae6
0x000000000019f083 : add byte ptr [rcx], cl ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001083c1 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00000000001a1cd3 : add byte ptr [rcx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000e9aa9 : add byte ptr [rcx], cl ; retf 0xea81
0x0000000000163f42 : add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x0000000000160a08 : add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000000476ed : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000000000a3a65 : add byte ptr [rcx], dh ; imul cl ; ret 0xfffc
0x00000000000f1b9c : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000003412f : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000b2e74 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000037a3d : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000dfd3f : add byte ptr [rcx], dh ; retf 0xc031
0x000000000009068c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000002dcff : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000012a78b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 5 ; retf
0x0000000000038dac : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d54ef : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009fe32 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000015a21f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000112f57 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000001346d3 : add byte ptr [rcx], dh ; shr al, 0x25 ; retf 0xffee
0x000000000006b857 : add byte ptr [rcx], dh ; shr al, 0x41 ; ret 0
0x0000000000044b60 : add byte ptr [rcx], dh ; shr al, 0x58 ; retf
0x000000000002a3b1 : add byte ptr [rcx], dh ; shr al, 0x87 ; retf
0x000000000006da8f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000246e7 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; pop rsi ; retf
0x00000000000adf0e : add byte ptr [rcx], dil ; ret
0x000000000010772e : add byte ptr [rcx], sil ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000001a0cab : add byte ptr [rdi + 0x1d400001], dh ; cmc ; jmp rcx
0x000000000008500d : add byte ptr [rdi + 0x200], bh ; call 0x212c8
0x00000000000d47d3 : add byte ptr [rdi + 0x20], bh ; call 0x211e8
0x000000000019496f : add byte ptr [rdi + 0x38cc0000], ah ; out dx, al ; jmp qword ptr [rdi]
0x000000000013cdda : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000a1804 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001ad5db : add byte ptr [rdi + 4], dh ; add byte ptr [rax], al ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000001606f4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000f29fe : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000001a1723 : add byte ptr [rdi + rax*2 + 0x58a80001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a16cb : add byte ptr [rdi + rax*2 + 1], dl ; add byte ptr [rax + 0x58], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000195ee3 : add byte ptr [rdi + rax*4 - 0x12], ch ; jmp rax
0x00000000001a567b : add byte ptr [rdi + rax*4], al ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], ch ; jmp rbx
0x000000000018c82f : add byte ptr [rdi + rax*4], al ; cli ; jmp qword ptr [rax]
0x000000000019d67b : add byte ptr [rdi + rax], al ; add dword ptr [rax], eax ; shr ah, 1 ; jmp qword ptr [rbx]
0x0000000000194653 : add byte ptr [rdi + rbp - 0x12], bl ; jmp rdi
0x000000000019462b : add byte ptr [rdi + rbp - 0x12], dl ; jmp qword ptr [rbx]
0x000000000018be4f : add byte ptr [rdi + rbp*2 - 7], dh ; call rsp
0x000000000018b8ef : add byte ptr [rdi + rbp*4], dh ; clc ; call rsp
0x000000000018ccbf : add byte ptr [rdi + rbp], ah ; std ; jmp qword ptr [rax]
0x000000000019fe7b : add byte ptr [rdi + rbp], al ; add dword ptr [rax], eax ; adc dl, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a1bbb : add byte ptr [rdi + rbx*2 - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a1b93 : add byte ptr [rdi + rbx*2], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000188c27 : add byte ptr [rdi + rbx*8], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001326c7 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000053fa6 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000021dbf : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000004a457 : add byte ptr [rdi + rcx - 0x42], cl ; sbb dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x0000000000113b5f : add byte ptr [rdi + rcx - 0x4a], al ; pop rax ; add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x00000000001a1f13 : add byte ptr [rdi + rcx*2 + 0x64180001], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000197e83 : add byte ptr [rdi + rcx*2], bl ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000199ebb : add byte ptr [rdi + rcx*8], al ; add byte ptr [rax + 8], dh ; cld ; jmp qword ptr [rbx]
0x0000000000199ee3 : add byte ptr [rdi + rcx*8], ch ; add byte ptr [rax + 0xa], bh ; cld ; jmp rsi
0x000000000002db04 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000018a5f7 : add byte ptr [rdi + rdi*2 - 0xa], ah ; call rax
0x000000000018c7bf : add byte ptr [rdi + rdi*2], dl ; cli ; jmp rax
0x00000000001a8eab : add byte ptr [rdi + rdi*4], dh ; add dword ptr [rax], eax ; mov al, 0x85 ; idiv edi ; retf 0
0x00000000001878d7 : add byte ptr [rdi + rdi*8 - 0x16], ah ; call rsp
0x000000000019cedb : add byte ptr [rdi + rdi*8], ah ; add byte ptr [rax + 0x56], dl ; jmp rbx
0x0000000000188007 : add byte ptr [rdi + rdi], dl ; out dx, al ; jmp rsp
0x00000000001a160b : add byte ptr [rdi + rdx*2 - 0xb], dl ; jmp qword ptr [rcx]
0x000000000018bd8f : add byte ptr [rdi + rdx*2 - 7], ah ; jmp qword ptr [rax]
0x00000000001a920b : add byte ptr [rdi + rdx*4 - 9], dh ; jmp rsi
0x00000000001a665b : add byte ptr [rdi + rdx*8], ah ; idiv bh ; ret 0
0x000000000018e6db : add byte ptr [rdi + rdx], ah ; add al, al ; imul ecx ; jmp qword ptr [rax]
0x000000000019e693 : add byte ptr [rdi + rdx], bl ; add dword ptr [rax], eax ; clc ; pop rdi ; stc ; call qword ptr [rax]
0x000000000018e5db : add byte ptr [rdi + rsi*8 - 0x17], al ; call qword ptr [rdx]
0x000000000018e603 : add byte ptr [rdi + rsi*8 - 0x17], bl ; call qword ptr [rdx]
0x000000000018e62b : add byte ptr [rdi + rsi*8 - 0x17], dh ; call qword ptr [rbx]
0x00000000001ac6ab : add byte ptr [rdi + rsi*8], dh ; add dword ptr [rax], eax ; rol byte ptr [rax - 5], 1 ; call rax
0x00000000001867b0 : add byte ptr [rdi - 0x716f0005], cl ; sti ; jmp qword ptr [rax]
0x0000000000178bd0 : add byte ptr [rdi - 0xe], al ; jmp qword ptr [rax]
0x0000000000178cf8 : add byte ptr [rdi - 0xe], cl ; call qword ptr [rax]
0x0000000000186564 : add byte ptr [rdi - 5], 0xff ; ror byte ptr [rax - 5], 1 ; jmp qword ptr [rax]
0x00000000000013b7 : add byte ptr [rdi], al ; add eax, 0x50d0000 ; add byte ptr [rax], al ; syscall
0x00000000001ae4d3 : add byte ptr [rdi], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000034470 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000018c2dc : add byte ptr [rdi], ch ; add al, byte ptr [rax] ; and al, 0 ; cli ; jmp qword ptr [rax]
0x0000000000021e1b : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000021e5e : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000125108 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x00000000001250d0 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x0000000000121da0 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x0000000000121db9 : add byte ptr [rdi], cl ; adc dword ptr [rdx], eax ; ret
0x00000000000e73fc : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000013e756 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000a0487 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000013f78f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000f8851 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002dc9d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dc2e ; loopne 0x2dcae ; ret
0x00000000000fa224 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xfa1b5 ; loopne 0xfa235 ; ret
0x00000000000e6b6f : add byte ptr [rdi], cl ; mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000013f7ff : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000b9edf : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c8eaf : add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a053f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000008e90f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a82f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000155dbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000090def : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000090baf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090bbf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000090b9f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008ccff : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x000000000008cd9f : add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x00000000000906bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000906ef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000906df : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000906cf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000055737 : add byte ptr [rdi], cl ; push rax ; ret 0xf41
0x0000000000034277 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000c2c1d : add byte ptr [rdi], cl ; ret
0x00000000000bd100 : add byte ptr [rdi], cl ; ret 0x144
0x00000000000df802 : add byte ptr [rdi], cl ; ret 0x66c3
0x00000000001047d8 : add byte ptr [rdi], cl ; ret 0x8348
0x0000000000123980 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001014b9 : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000002accb : add byte ptr [rdi], cl ; ret 0xc083
0x00000000000d1b54 : add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000bcfcc : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000ba0a3 : add byte ptr [rdi], cl ; ret 0xf001
0x00000000000ec7a7 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000011eab1 : add byte ptr [rdi], cl ; retf 0x1089
0x00000000001506ef : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000ab87e : add byte ptr [rdi], cl ; test byte ptr [rax + 0x14c0000], ah ; ret 0x28b
0x0000000000068389 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; in eax, 0xff ; dec dword ptr [rax + 0x39] ; ret 0xd74
0x0000000000073c26 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000160f4a : add byte ptr [rdi], cl ; test dword ptr [rdi], ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b88a7 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x76ffffee], ebx ; ret 0xe283
0x0000000000056b4a : add byte ptr [rdi], cl ; xchg dword ptr [rdi + rbx - 0x7cb80000], esi ; ret 0x481e
0x000000000011f373 : add byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x77000000], esp ; retf 0x894c
0x00000000000475c5 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000d1a41 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000001552bd : add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000006a8cf : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000c69e5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xbdeb
0x00000000000e186c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd320
0x000000000002396c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfae9
0x0000000000057415 : add byte ptr [rdi], cl ; xchg esi, edx ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000000a2c8 : add byte ptr [rdi], dh ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018e678 : add byte ptr [rdi], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; imul ecx ; call qword ptr [rbx]
0x000000000019e678 : add byte ptr [rdi], dl ; add dword ptr [rax], eax ; push rsp ; test esp, esi ; call qword ptr [rax]
0x000000000014c3af : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000014807f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009d77f : add byte ptr [rdx + 0x48178816], cl ; lea eax, [rdi + 1] ; ret
0x00000000000c9196 : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x00000000001afd03 : add byte ptr [rdx + 5], dh ; add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; retf
0x00000000001ae32b : add byte ptr [rdx + 7], al ; add byte ptr [rax], al ; ret
0x00000000001afa37 : add byte ptr [rdx + 7], bh ; add byte ptr [rax], al ; ret
0x00000000000f6ee7 : add byte ptr [rdx + 8], bh ; syscall
0x0000000000000fc3 : add byte ptr [rdx + rax + 0x2be0000], bh ; add byte ptr [rax], al ; ret 2
0x000000000019d21b : add byte ptr [rdx + rax - 0x568fffff], ah ; jmp rsi
0x00000000001a3c93 : add byte ptr [rdx + rax - 0xa], cl ; jmp qword ptr [rbx]
0x00000000000722ab : add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000194ccb : add byte ptr [rdx + rax*2], dh ; out dx, al ; jmp rdx
0x0000000000087009 : add byte ptr [rdx + rax*8 - 0xd], dh ; ret
0x000000000018c6ec : add byte ptr [rdx + rax], 0x34 ; pop rbp ; cli ; jmp rax
0x000000000018be5c : add byte ptr [rdx + rax], dl ; add byte ptr [rax + rsi*2 - 7], ah ; jmp qword ptr [rax]
0x0000000000006ce7 : add byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x000000000019fa33 : add byte ptr [rdx + rbp - 0x2007ffff], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000086fcb : add byte ptr [rdx + rbp - 9], dh ; ret 0
0x00000000001a39fb : add byte ptr [rdx + rbp*2 - 0x2fffff], al ; cmc ; jmp qword ptr [rsi]
0x00000000001882cf : add byte ptr [rdx + rbp*4], dl ; out dx, al ; jmp qword ptr [rax]
0x0000000000188cbf : add byte ptr [rdx + rbp*8 - 0x11], ah ; call rax
0x0000000000034314 : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x000000000018c1f7 : add byte ptr [rdx + rbp*8], dl ; stc ; call rsp
0x000000000019ea03 : add byte ptr [rdx + rbx - 0x6ef7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000018ad67 : add byte ptr [rdx + rbx - 9], al ; jmp qword ptr [rax]
0x000000000018732f : add byte ptr [rdx + rbx*2 - 0x16], dh ; call rax
0x00000000000c5ab3 : add byte ptr [rdx + rbx*2 - 0x48], dh ; jg 0xc5ac1 ; add byte ptr [rax], al ; ret
0x0000000000088c33 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000016da57 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x000000000018ac37 : add byte ptr [rdx + rcx - 9], al ; jmp rsp
0x0000000000195a2b : add byte ptr [rdx + rcx*4 + 0x74a00000], dh ; out dx, al ; call qword ptr [rdi]
0x000000000018a6c7 : add byte ptr [rdx + rcx*4 - 0xa], dl ; call qword ptr [rax]
0x000000000018c857 : add byte ptr [rdx + rcx*4], dl ; cli ; jmp rax
0x00000000001a09f3 : add byte ptr [rdx + rdi + 1], bh ; add byte ptr [rax], cl ; adc al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a09cb : add byte ptr [rdx + rdi + 1], dl ; add al, dl ; adc esi, ebp ; jmp qword ptr [rcx]
0x000000000018aedf : add byte ptr [rdx + rdi - 9], dl ; call rax
0x0000000000188147 : add byte ptr [rdx + rdi*2 - 0x12], al ; jmp rsp
0x00000000001989db : add byte ptr [rdx + rdi*4], ah ; add byte ptr [rax], dl ; jns 0x1989db ; call qword ptr [rdx]
0x00000000001a145b : add byte ptr [rdx + rdi], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000198903 : add byte ptr [rdx + rdx - 4], bl ; call rsp
0x0000000000198553 : add byte ptr [rdx + rdx - 4], bl ; jmp qword ptr [rax]
0x00000000001910eb : add byte ptr [rdx + rdx*2 - 0x15], dl ; call rdi
0x00000000001883e7 : add byte ptr [rdx + rdx*8 - 0x12], ah ; call rsp
0x000000000019a21b : add byte ptr [rdx + rdx*8 - 0x69300000], ah ; int1 ; jmp qword ptr [rax]
0x00000000001aa09b : add byte ptr [rdx + rdx*8 - 9], ah ; call rax
0x000000000018b5d7 : add byte ptr [rdx + rdx], al ; clc ; jmp qword ptr [rax]
0x00000000001a08c3 : add byte ptr [rdx + rdx], bh ; cmc ; jmp rax
0x00000000001941a3 : add byte ptr [rdx + rsi*2], ch ; add byte ptr [rax], al ; test al, 0x20 ; out dx, al ; call rsp
0x000000000018951f : add byte ptr [rdx + rsi*4 - 0xe], dl ; call qword ptr [rax]
0x00000000001884d7 : add byte ptr [rdx + rsi*8 - 0x12], dh ; jmp qword ptr [rax]
0x00000000001789c8 : add byte ptr [rdx + rsi*8], ch ; jmp qword ptr [rax]
0x00000000001938cb : add byte ptr [rdx + rsi*8], dh ; in eax, dx ; jmp rsp
0x00000000001901eb : add byte ptr [rdx + rsi], dh ; add byte ptr [rax], dl ; mov ebp, edx ; call qword ptr [rsi]
0x0000000000186598 : add byte ptr [rdx - 0x6e6f0005], dl ; sti ; jmp qword ptr [rax]
0x0000000000044e4f : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000018ce77 : add byte ptr [rdx - 3], ah ; call qword ptr [rax]
0x0000000000186414 : add byte ptr [rdx - 5], bl ; jmp rax
0x000000000003a3bd : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ef6e7 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012b8c5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x000000000008500f : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x212c6
0x000000000002dc56 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000011746e : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000ff07b : add byte ptr [rdx], al ; call rcx
0x00000000001899bf : add byte ptr [rdx], al ; jmp rsp
0x000000000002db64 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000002627 : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000118d94 : add byte ptr [rdx], ch ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0xf3 ; ret
0x0000000000178964 : add byte ptr [rdx], ch ; bnd call qword ptr [rax] ; sub dh, dl ; jmp qword ptr [rax]
0x0000000000004707 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f3a1f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001899d7 : add byte ptr [rdx], dh ; jmp qword ptr [rax]
0x0000000000000764 : add byte ptr [rdx], dl ; retf
0x000000000017b38b : add byte ptr [rip + 0x10], al ; retf 8
0x00000000000c69e0 : add byte ptr [rip + 0x4000], bh ; sete dl ; jmp 0xc69b0
0x00000000000dc900 : add byte ptr [rip + 0x4000], bh ; sete dl ; jmp 0xdc8d0
0x000000000006e4d0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000f6b25 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x000000000003793c : add byte ptr [rsi + 0x39480037], cl ; ret
0x0000000000160df6 : add byte ptr [rsi + 0x41], ah ; and eax, 0x21487fff ; ret 0xcae9
0x00000000001626e2 : add byte ptr [rsi + 0x41], ah ; cmp eax, 0x89497fff ; ret
0x0000000000029221 : add byte ptr [rsi + 0x41], ah ; cmp ecx, 0x860f07ff ; ret
0x00000000001627bb : add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x0000000000104067 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000000c4747 : add byte ptr [rsi + 0x81], bh ; mov eax, r13d ; syscall
0x0000000000126cd7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001552ed : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx + 0x1f] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000155402 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000015b374 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000034b1e : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000050a06 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000005356e : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x78e8
0x0000000000034a5f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x87e8
0x0000000000050a2f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x0000000000034ae9 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xfde8
0x00000000000509cd : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000005350b : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000090acc : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000905f4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000b248f : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x0000000000187907 : add byte ptr [rsi + rax - 0x15], dh ; jmp qword ptr [rax]
0x0000000000084fe7 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000001a161b : add byte ptr [rsi + rax*2 + 0x57700001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018a8ef : add byte ptr [rsi + rax*8 - 0xa], ah ; jmp rax
0x0000000000196413 : add byte ptr [rsi + rax*8 - 7], bh ; call qword ptr [rcx]
0x000000000018be2f : add byte ptr [rsi + rbp*2 - 7], dl ; jmp qword ptr [rax]
0x000000000019edeb : add byte ptr [rsi + rbx + 1], dh ; add byte ptr [rax - 0x63], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019ee13 : add byte ptr [rsi + rbx - 0x6277ffff], bl ; hlt ; call qword ptr [rbx]
0x00000000001a1acb : add byte ptr [rsi + rbx*2], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001992a3 : add byte ptr [rsi + rbx*4 - 0x10], bh ; call qword ptr [rdx]
0x0000000000199253 : add byte ptr [rsi + rbx*4 - 0x10], ch ; jmp qword ptr [rax]
0x000000000019927b : add byte ptr [rsi + rbx*4 - 0x10], dh ; call qword ptr [rdx]
0x000000000018ce2f : add byte ptr [rsi + rbx*8], al ; std ; jmp rsp
0x00000000001a9200 : add byte ptr [rsi + rcx + 0x10], al ; cmp al, 0 ; add byte ptr [rax], al ; nop ; ret 1
0x000000000018794f : add byte ptr [rsi + rcx - 0x15], al ; call qword ptr [rax]
0x000000000019ba5b : add byte ptr [rsi + rcx*4 - 0xe], dh ; jmp qword ptr [rcx]
0x000000000018bf4f : add byte ptr [rsi + rcx*4 - 7], ah ; call qword ptr [rax]
0x0000000000199e1b : add byte ptr [rsi + rcx*8 + 0x62d00000], ah ; cld ; jmp qword ptr [rbx]
0x000000000018b9ef : add byte ptr [rsi + rcx*8 - 8], al ; jmp rax
0x000000000018b28f : add byte ptr [rsi + rcx*8 - 9], dl ; jmp rsp
0x0000000000199db3 : add byte ptr [rsi + rcx*8], bh ; add byte ptr [rax], al ; js 0x199e40 ; int1 ; call qword ptr [rax]
0x000000000019d453 : add byte ptr [rsi + rcx*8], bh ; call rax
0x00000000001890af : add byte ptr [rsi + rdi - 0xf], dl ; jmp rax
0x0000000000199dcb : add byte ptr [rsi + rdi*2 - 0xf], dh ; call qword ptr [rdx]
0x000000000018c0b7 : add byte ptr [rsi + rdi*4 - 7], al ; call rsp
0x0000000000198deb : add byte ptr [rsi + rdi*4], dh ; add byte ptr [rax], ah ; mov esi, eax ; jmp rdx
0x000000000019e603 : add byte ptr [rsi + rdx - 0x7a87ffff], cl ; hlt ; call qword ptr [rbx]
0x0000000000195053 : add byte ptr [rsi + rdx*2 - 0x12], cl ; jmp qword ptr [rsi]
0x000000000018bd87 : add byte ptr [rsi + rdx*2 - 7], dl ; call rax
0x00000000001a1503 : add byte ptr [rsi + rdx*2], ch ; cmc ; call qword ptr [rax]
0x000000000018cdc7 : add byte ptr [rsi + rdx*4 - 3], ah ; call rsp
0x0000000000188687 : add byte ptr [rsi + rdx], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a76db : add byte ptr [rsi + rsi - 9], ah ; call rdi
0x00000000001a45bb : add byte ptr [rsi + rsi*2 + 1], al ; add al, dl ; and esi, esi ; call qword ptr [rbx]
0x000000000018be87 : add byte ptr [rsi + rsi*2], ah ; stc ; jmp qword ptr [rax]
0x000000000019458b : add byte ptr [rsi + rsi*2], dl ; add byte ptr [rax], al ; loopne 0x1945c8 ; out dx, al ; jmp qword ptr [rdi]
0x00000000001aae7b : add byte ptr [rsi + rsi*8 - 9], dh ; call rdi
0x0000000000186ca8 : add byte ptr [rsi - 0x4a6f0005], dh ; sti ; jmp qword ptr [rax]
0x00000000000f7a9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x00000000000f7b2d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x00000000000f7bbd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x13f ; syscall
0x00000000000f832d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x00000000000f7e6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x00000000000e7bfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x53 ; syscall
0x00000000000e9c6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x56 ; syscall
0x00000000000e9d8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x00000000000e9ccd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x00000000000f79ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000c551d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x79 ; syscall
0x00000000000f6fcd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x00000000000e79bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000000edd5d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x8c ; syscall
0x00000000000f1d6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x00000000000eefed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x00000000000f755d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x00000000000eeb3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa3 ; syscall
0x00000000000f6bfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xad ; syscall
0x00000000000f770d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x00000000000f78bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x00000000000f4d9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x00000000000f4dfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x00000000000f4cdd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x00000000000f4e8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x00000000000f776d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x0000000000034a0d : add byte ptr [rsi - 0x70], ah ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000000c483d : add byte ptr [rsi - 0x70], ah ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000189b6f : add byte ptr [rsi - 0xc], dh ; call rsp
0x0000000000007958 : add byte ptr [rsi], ah ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000018847f : add byte ptr [rsi], ah ; out dx, al ; jmp rsp
0x00000000001975b3 : add byte ptr [rsi], bh ; add byte ptr [rax], al ; enter -0x1102, -1 ; retf 0
0x0000000000186340 : add byte ptr [rsi], dh ; sti ; call rax
0x00000000000e933b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; retf 0xf66
0x00000000000edab2 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000018ced7 : add byte ptr [rsi], dl ; std ; call rsp
0x00000000001ab3f3 : add byte ptr [rsp + 1], bh ; add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x000000000007bc85 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000001a141b : add byte ptr [rsp + rax*2 + 0x39e00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a13a3 : add byte ptr [rsp + rax*2], ch ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000189737 : add byte ptr [rsp + rax*4 - 0xd], ah ; jmp rsp
0x000000000018c7ef : add byte ptr [rsp + rax*4 - 6], dl ; jmp rax
0x00000000001a7beb : add byte ptr [rsp + rbp*4 + 1], dh ; add byte ptr [rax], al ; cmp esi, edi ; jmp qword ptr [rbx]
0x000000000018a807 : add byte ptr [rsp + rbp*4 - 0xa], dl ; call rax
0x000000000019f09b : add byte ptr [rsp + rbp*4 - 0xc], ah ; jmp qword ptr [rcx]
0x000000000019ffab : add byte ptr [rsp + rbp*8 - 0xc], dh ; jmp qword ptr [rcx]
0x00000000001a198b : add byte ptr [rsp + rbx*2 - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018cb27 : add byte ptr [rsp + rbx*2 - 5], ah ; call rsp
0x00000000001a1963 : add byte ptr [rsp + rbx*2], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000189047 : add byte ptr [rsp + rbx*4 - 0x10], ah ; jmp qword ptr [rax]
0x000000000018cabf : add byte ptr [rsp + rbx*8 - 6], ah ; dec dword ptr [rax] ; retf
0x000000000018cab7 : add byte ptr [rsp + rbx*8], dh ; cli ; jmp rax
0x000000000019dc13 : add byte ptr [rsp + rcx + 0xc980001], bl ; hlt ; call qword ptr [rdi]
0x00000000001885f7 : add byte ptr [rsp + rcx - 0x11], dh ; call qword ptr [rax]
0x00000000000a1ef1 : add byte ptr [rsp + rcx - 0xd], dh ; ret
0x00000000000f0f51 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001a1c1b : add byte ptr [rsp + rcx*2 + 0x60000001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a1bf3 : add byte ptr [rsp + rcx*2 + 1], bh ; add al, cl ; pop rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a1b7b : add byte ptr [rsp + rcx*2], al ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000189c87 : add byte ptr [rsp + rcx*4 - 0xc], al ; jmp qword ptr [rax]
0x000000000018b237 : add byte ptr [rsp + rcx*8 - 9], al ; dec esp ; retf 1
0x000000000018b23f : add byte ptr [rsp + rcx*8 - 9], dh ; push rsp ; retf 1
0x000000000018b22f : add byte ptr [rsp + rcx*8], dl ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x000000000019db83 : add byte ptr [rsp + rcx], cl ; add dword ptr [rax], eax ; fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x000000000019dbab : add byte ptr [rsp + rcx], dh ; add dword ptr [rax], eax ; adc byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rcx]
0x000000000018aeff : add byte ptr [rsp + rdi - 9], dl ; jmp qword ptr [rax]
0x0000000000194c2b : add byte ptr [rsp + rdi*2 + 0x40300000], dh ; out dx, al ; call rdi
0x000000000019a6b3 : add byte ptr [rsp + rdi*4 - 0xf], cl ; jmp qword ptr [rcx]
0x000000000019cc1b : add byte ptr [rsp + rdi*8 + 0x37500000], ah ; call rdi
0x0000000000185ee0 : add byte ptr [rsp + rdi*8 - 0x3530f01], ch ; jmp rax
0x000000000019cb83 : add byte ptr [rsp + rdi*8], cl ; add byte ptr [rax], al ; or byte ptr [rbx], dh ; jmp rax
0x00000000001879cf : add byte ptr [rsp + rdx - 0x15], al ; call qword ptr [rax]
0x00000000001a2433 : add byte ptr [rsp + rdx*2 + 0x75480001], bh ; cmc ; call qword ptr [rdx]
0x0000000000198423 : add byte ptr [rsp + rsi*4 - 0x3fa80000], ch ; cli ; call qword ptr [rax]
0x00000000001983fb : add byte ptr [rsp + rsi*4 - 0x50a00000], al ; out dx, eax ; call qword ptr [rax]
0x00000000001983d3 : add byte ptr [rsp + rsi*4], bl ; add byte ptr [rax], bh ; fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000198383 : add byte ptr [rsp + rsi*4], cl ; add byte ptr [rax], al ; test al, 0x9f ; cli ; call qword ptr [rax]
0x000000000018e37b : add byte ptr [rsp + rsi*8 - 0x17], ah ; call qword ptr [rdi]
0x0000000000189a0f : add byte ptr [rsp - 0xd], ah ; call rax
0x000000000018addf : add byte ptr [rsp - 9], dl ; call rax
0x00000000001a1f2b : add byte ptr [rsp], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000c5c5d : add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x0000000000068405 : add byte ptr cs:[rax], al ; add al, ch ; ret 0x925
0x0000000000126639 : add byte ptr cs:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000018fda9 : add byte ptr cs:[rax], al ; xchg eax, esp ; sub al, 0xfa ; call qword ptr [rdi]
0x00000000000ef747 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x00000000000f29fd : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x000000000003596a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001272e8 : add byte ptr gs:[rax - 0x7d], cl ; ret
0x00000000000a359f : add byte ptr gs:[rbp - 0x7b], al ; in al, 0x75 ; ret 0x8945
0x0000000000111bd3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d1a40 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000047230 : add byte ptr ss:[rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0xd2e8
0x000000000004d7e5 : add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x000000000004d8a0 : add byte ptr ss:[rax - 0x77], cl ; retf 0x2948
0x000000000003611d : add byte ptr ss:[rax], al ; add rsp, 8 ; ret
0x0000000000187d81 : add ch, ah ; jmp qword ptr [rax]
0x000000000016de63 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x000000000010d247 : add ch, al ; ret
0x000000000015593e : add ch, al ; std ; je 0x1559ab ; and ch, al ; std ; xlatb ; ret
0x0000000000155a2c : add ch, al ; std ; je 0x155a99 ; and ch, al ; std ; xlatb ; ret
0x00000000001559d2 : add ch, al ; std ; xlatb ; ret
0x00000000001559de : add ch, al ; std ; xlatb ; ret 0xc085
0x000000000015959f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000001ae327 : add ch, bl ; add al, byte ptr [rax] ; add byte ptr [rdx + 7], al ; add byte ptr [rax], al ; ret
0x000000000003901b : add ch, bl ; jrcxz 0x3908c ; nop ; xor eax, eax ; ret
0x0000000000100b09 : add ch, bl ; ret
0x0000000000176adc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000176add : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000b6cd9 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000729aa : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000056fd6 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000001950db : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000003e182 : add ch, cl ; ret
0x0000000000106ae8 : add ch, cl ; ret 0xf1a7
0x00000000000e1260 : add ch, cl ; retf 0xfff5
0x00000000001787d0 : add ch, dl ; sti ; jmp qword ptr [rax]
0x0000000000035816 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000f261f : add cl, bl ; retf 0xc9d9
0x0000000000175eaa : add cl, bl ; retf 0xea91
0x0000000000097f0c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000577b1 : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000bad57 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000cdaee : add cl, byte ptr [rax + 0x29] ; ret 0xf66
0x00000000000a1fb9 : add cl, byte ptr [rax + 0x29] ; retf 0x8548
0x0000000000088094 : add cl, byte ptr [rax + 0x39] ; clc ; jne 0x88087 ; ret
0x0000000000112efb : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x0000000000112eed : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x0000000000056d00 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000013c9da : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000015a0b4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000080dab : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000080878 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000074214 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000074133 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000024b54 : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; retf
0x0000000000097f0d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000008d02f : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000073191 : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000059341 : add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000e0953 : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x0000000000053eee : add cl, byte ptr [rax - 0x77] ; retf 0xf748
0x000000000007cb32 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000f0b9e : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000062962 : add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000386d3 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000000000009ae80 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000c7f86 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000009aee3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000012a425 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000d7834 : add cl, byte ptr [rbp + 0x148fe4b] ; retf 0xdeb
0x0000000000186684 : add cl, byte ptr [rbp - 0x736d0005] ; sti ; jmp qword ptr [rdx]
0x000000000008afb6 : add cl, byte ptr [rbp - 0x77] ; ret 0xc748
0x000000000008abb1 : add cl, byte ptr [rbp - 0x77] ; retf 0x189
0x000000000013f5d2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000006b95a : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x00000000000c150e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000011453b : add cl, byte ptr [rdi + rcx + 0x44] ; retf 0xc683
0x000000000002db24 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x0000000000030d2e : add cl, byte ptr [rdi] ; retf 0x8b48
0x00000000001552f3 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001551db : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000117eea : add cl, byte ptr [rdi] ; xchg eax, esp ; sar byte ptr [rcx], 0x4f ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000ff5b6 : add cl, byte ptr [rdx] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000196f49 : add cl, byte ptr [rsi + rcx + 8] ; ret
0x00000000000d3a19 : add cl, ch ; cmp eax, 0xf7fffffc ; ret 0
0x0000000000026f8f : add cl, ch ; ret
0x00000000000e0b29 : add cl, ch ; ret 0xfffa
0x000000000002b5ba : add cl, ch ; ret 0xfffb
0x0000000000026bd9 : add cl, ch ; ret 0xfffc
0x000000000003cdf5 : add cl, ch ; ret 0xfffd
0x000000000002ed63 : add cl, ch ; ret 0xfffe
0x000000000004bb5c : add cl, ch ; retf
0x0000000000068970 : add cl, ch ; retf 0xffb2
0x00000000000661c0 : add cl, ch ; retf 0xffe3
0x00000000000aa904 : add cl, ch ; retf 0xfff9
0x0000000000029816 : add cl, ch ; retf 0xfffc
0x0000000000052f73 : add cl, ch ; retf 0xfffd
0x00000000001427aa : add cl, ch ; retf 0xfffe
0x000000000005fad3 : add cl, ch ; xlatb ; retf 0xffff
0x000000000000151f : add cl, cl ; add eax, 0 ; add byte ptr [rax], al ; retf
0x0000000000175d63 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000175d62 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000042bd3 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000001218b9 : add dh, al ; add eax, 0x297797 ; add ecx, ebp ; retf 0xfffd
0x0000000000110939 : add dh, al ; add eax, 0x2a7fbf ; add ecx, ebp ; retf 0xfffd
0x000000000010bbb9 : add dh, al ; add eax, 0x2ac9f7 ; add ecx, ebp ; retf 0xfffd
0x00000000000fdb49 : add dh, al ; add eax, 0x2b9dcf ; add ecx, ebp ; retf 0xfffd
0x00000000000fc269 : add dh, al ; add eax, 0x2bb557 ; add ecx, ebp ; retf 0xfffd
0x0000000000171b0b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000017a018 : add dh, al ; hlt ; jmp rax
0x00000000000cd087 : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000576bf : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000018bb4c : add dh, bh ; add dword ptr [rax], eax ; test byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rax]
0x000000000017ac9b : add dh, bh ; jmp rdi
0x0000000000174b9e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000017b818 : add dh, bh ; stc ; jmp rax
0x0000000000170f57 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000000f0f08 : add dh, bl ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000013f783 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000722ad : add dh, bl ; ret
0x000000000017882c : add dh, bl ; sti ; push qword ptr [rax - 0x21] ; sti ; jmp rax
0x0000000000087046 : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000009f3db : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000e8856 : add dh, byte ptr [rbp + rcx - 0x75] ; pop rsp ; and al, 0x18 ; call 0xc52c9
0x0000000000186b7c : add dh, byte ptr [rbx + rdi*8 - 0x44c6d01] ; jmp qword ptr [rdx]
0x0000000000195129 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000c8cd2 : add dh, byte ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000b409f : add dh, byte ptr [rdi + 7] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001a3a29 : add dh, dh ; jmp qword ptr [rbx]
0x00000000001a3ce5 : add dh, dh ; jmp qword ptr [rdi]
0x00000000000b8fb4 : add dh, dh ; ret
0x0000000000024e1f : add dh, dh ; ret 0x4801
0x000000000008331f : add dh, dh ; ret 0x4804
0x00000000000f1b7f : add dh, dh ; ret 0x7404
0x00000000000dad50 : add dh, dh ; ret 0x7420
0x000000000015e737 : add dh, dh ; ret 0x7501
0x000000000015e744 : add dh, dh ; ret 0x7502
0x000000000015e751 : add dh, dh ; ret 0x7504
0x0000000000112e6d : add dh, dh ; ret 0x7507
0x00000000000d392f : add dh, dh ; ret 0x7508
0x000000000015e709 : add dh, dh ; ret 0x7510
0x000000000015e716 : add dh, dh ; ret 0x7520
0x00000000000d109c : add dh, dh ; ret 0x7540
0x00000000000835d7 : add dh, dh ; ret 0xf02
0x00000000000e1156 : add dh, dh ; ret 0xf04
0x000000000005477f : add dh, dh ; ret 0xf08
0x000000000005846f : add dh, dh ; ret 0xf10
0x0000000000096712 : add dh, dh ; ret 0xf20
0x0000000000053cc7 : add dh, dh ; ret 0xf40
0x0000000000053caf : add dh, dh ; ret 0xf50
0x0000000000100ea6 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000101301 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000c9a27 : add dh, dh ; test dword ptr [rdi + rdx*8 - 1], esi ; jmp qword ptr [rax]
0x00000000000b1deb : add dil, r15b ; ret
0x0000000000086ff6 : add dil, sil ; ret 0
0x0000000000039f2e : add dil, sil ; ret 0xffef
0x00000000001af03f : add dl, ah ; add eax, dword ptr [rax] ; add byte ptr [rbx + 6], bh ; add byte ptr [rax], al ; ret 4
0x000000000018c2e1 : add dl, bh ; jmp qword ptr [rax]
0x00000000001aaf6d : add dl, byte ptr [rsi + rcx + 8] ; ret
0x000000000003400f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000006e8f7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000003ae82 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000023d83 : add dword ptr [r8 - 0x7d], r9d ; ret
0x00000000001a1141 : add dword ptr [r8], eax ; fdiv qword ptr [rax] ; cmc ; jmp rsp
0x0000000000189885 : add dword ptr [r8], eax ; xchg eax, esp ; mov bh, 0xf3 ; jmp rsp
0x00000000001a16cd : add dword ptr [r8], r8d ; push rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000189915 : add dword ptr [r8], r8d ; push rsp ; sal ebx, 1 ; call qword ptr [rax]
0x00000000001898cd : add dword ptr [r8], r8d ; ret 0xfff3
0x00000000001a1501 : add dword ptr [r8], r8d ; sub al, 0x56 ; cmc ; call qword ptr [rax]
0x00000000001a1725 : add dword ptr [r8], r8d ; test al, 0x58 ; cmc ; jmp qword ptr [rcx]
0x00000000000cd11d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000014c3b1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000c45dd : add dword ptr [rax + 0x38], edi ; syscall
0x0000000000024b4b : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d7840 : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x0000000000051fdb : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x00000000001180f8 : add dword ptr [rax + 0x39], ecx ; ret 0xd675
0x0000000000039c03 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x00000000000d9f44 : add dword ptr [rax + 0x39], ecx ; ret 0xe675
0x0000000000039b8d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000adc9c : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x000000000008af74 : add dword ptr [rax + 0x39], ecx ; ret 0xee77
0x000000000004534b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x000000000008b9fb : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x00000000000fe6ec : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000a0ab0 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x0000000000106bd3 : add dword ptr [rax + 0x39], ecx ; retf 0xd274
0x00000000000abd3e : add dword ptr [rax + 0x39], ecx ; retf 0xec75
0x0000000000088808 : add dword ptr [rax + 0x39], r9d ; ret
0x00000000000f5bf2 : add dword ptr [rax + 0x428b1043], ecx ; js 0xf5b8b ; ret 0xe8c1
0x00000000000f5c84 : add dword ptr [rax + 0x428b1043], ecx ; js 0xf5c1d ; ret 0xe8c1
0x00000000000f6041 : add dword ptr [rax + 0x428b1043], ecx ; js 0xf5fda ; ret 0xe8c1
0x00000000000f60d3 : add dword ptr [rax + 0x428b1043], ecx ; js 0xf606c ; ret 0xe8c1
0x00000000000d67e3 : add dword ptr [rax + 0x63], ecx ; ret
0x00000000000f21cf : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x0000000000029241 : add dword ptr [rax + 0x63], ecx ; retf
0x00000000000aba54 : add dword ptr [rax + 0x63], ecx ; retf 0xc283
0x00000000000d6697 : add dword ptr [rax + 0x63], ecx ; ror byte ptr [rax + 0x39], 1 ; retf 0xf072
0x00000000000ff557 : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x00000000000499d8 : add dword ptr [rax + 0xf], ecx ; fucompp ; retf 0xffed
0x0000000000160770 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000b340b : add dword ptr [rax + 1], ecx ; ret
0x00000000000dd8c8 : add dword ptr [rax + 1], ecx ; retf 0x8d48
0x000000000002188f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000032fca : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000cd0d0 : add dword ptr [rax + 1], edi ; ret
0x00000000000f35c1 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x00000000000818e7 : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000163b12 : add dword ptr [rax + 9], ecx ; ret 0xb941
0x00000000001615eb : add dword ptr [rax + 9], ecx ; retf 0xb841
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000ca66a : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000ed6a0 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x000000000017595b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x1759c7 ; retf
0x000000000004e09b : add dword ptr [rax - 0x4ff43], eax ; jmp qword ptr [rax]
0x000000000002ee8c : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000083954 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000006e8f8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000000fb01d : add dword ptr [rax - 0x75], ecx ; push rsp ; retf 0x8b40
0x00000000000b4060 : add dword ptr [rax - 0x76b3c307], eax ; ret 0xb74
0x0000000000097ee6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000007d790 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x336b38 ; ret
0x0000000000148012 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000713c8 : add dword ptr [rax - 0x77], ecx ; jb 0x713fd ; mov byte ptr [rcx], dil ; ret
0x0000000000078134 : add dword ptr [rax - 0x77], ecx ; jb 0x78169 ; mov byte ptr [rcx], dil ; ret
0x0000000000078224 : add dword ptr [rax - 0x77], ecx ; jb 0x78259 ; mov byte ptr [rcx], dil ; ret
0x0000000000115b39 : add dword ptr [rax - 0x77], ecx ; or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000118cd5 : add dword ptr [rax - 0x77], ecx ; or ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0x95e9
0x000000000004b71d : add dword ptr [rax - 0x77], ecx ; push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000007815d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000003240c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000079cd6 : add dword ptr [rax - 0x77], ecx ; ret 0x2475
0x000000000002432f : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x000000000012b5db : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x0000000000163ff4 : add dword ptr [rax - 0x77], ecx ; ret 0x8949
0x00000000000d21a5 : add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b2d58 : add dword ptr [rax - 0x77], ecx ; retf
0x000000000004a8cc : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000000ca94c : add dword ptr [rax - 0x77], ecx ; retf 0x894c
0x000000000007dc34 : add dword ptr [rax - 0x77], ecx ; xchg dword ptr [rax - 0xcfffff8], eax ; ret
0x0000000000113824 : add dword ptr [rax - 0x78], eax ; ja 0x11382f ; ret
0x000000000012907d : add dword ptr [rax - 0x78], eax ; je 0x1290df ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012918d : add dword ptr [rax - 0x78], eax ; je 0x1291ef ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000085b47 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000014dfca : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000008abb6 : add dword ptr [rax - 0x7d], ecx ; jmp 0xffffffffcb41f4c9
0x0000000000023d84 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000026b0c : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x00000000000ac016 : add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x0000000000036759 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000024c6d : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000befd4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000c77ad : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000282b0 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000de99b : add dword ptr [rax - 0x7d], ecx ; ret 0x8901
0x0000000000024885 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000006c807 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00000000000ad915 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000ac627 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0xef75
0x00000000000426f5 : add dword ptr [rax - 0x7f], ecx ; ret
0x000000000005d14f : add dword ptr [rax - 0x80], eax ; lcall [rbp + 0x74] ; ret 0x8440
0x000000000004bdad : add dword ptr [rax - 0x94343], eax ; jmp qword ptr [rax]
0x00000000000c44dd : add dword ptr [rax - 1], edi ; jmp 0xc44af
0x0000000000031e50 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000008c2c8 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f9934 : add dword ptr [rax], 1 ; ret
0x0000000000189c06 : add dword ptr [rax], eax ; adc al, 0x7d ; hlt ; jmp rsp
0x000000000018b836 : add dword ptr [rax], eax ; adc al, 0x89 ; clc ; call rsp
0x00000000001897ee : add dword ptr [rax], eax ; adc al, 0x91 ; jmp rsp
0x00000000001ab67a : add dword ptr [rax], eax ; adc al, 0xa3 ; sti ; jmp qword ptr [rdx]
0x000000000018b22e : add dword ptr [rax], eax ; adc al, 0xcc ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x000000000018ced6 : add dword ptr [rax], eax ; adc al, 0xe6 ; std ; call rsp
0x000000000019dbae : add dword ptr [rax], eax ; adc byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rcx]
0x000000000019fe7e : add dword ptr [rax], eax ; adc dl, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a3b7a : add dword ptr [rax], eax ; adc ecx, r15d ; jmp qword ptr [rbx]
0x00000000001a3ba2 : add dword ptr [rax], eax ; adc rcx, r15 ; jmp qword ptr [rbx]
0x000000000019ff6e : add dword ptr [rax], eax ; add ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a406a : add dword ptr [rax], eax ; add al, 0x10 ; idiv bh ; retf 0
0x000000000018b5d6 : add dword ptr [rax], eax ; add al, 0x12 ; clc ; jmp qword ptr [rax]
0x000000000018976e : add dword ptr [rax], eax ; add al, 0x88 ; jmp rsp
0x000000000018ca4e : add dword ptr [rax], eax ; add al, 0xbb ; cli ; jmp qword ptr [rax]
0x000000000018b256 : add dword ptr [rax], eax ; add al, 0xcd ; idiv edi ; pop rax ; retf
0x00000000001899be : add dword ptr [rax], eax ; add al, 0xe2 ; jmp rsp
0x0000000000064ebe : add dword ptr [rax], eax ; add al, ch ; cli ; ret
0x0000000000025636 : add dword ptr [rax], eax ; add al, ch ; ret 0x83
0x0000000000130736 : add dword ptr [rax], eax ; add al, ch ; ret 0xefd2
0x000000000010002d : add dword ptr [rax], eax ; add al, ch ; retf
0x0000000000021c33 : add dword ptr [rax], eax ; add al, ch ; test dword ptr [rcx + 0xc], esp ; add byte ptr [rcx], bh ; ret
0x000000000014a03c : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006db21 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029248 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000028413 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0xe383
0x00000000000ef8e2 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c5bae : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x1674
0x000000000015e5e1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x00000000000cd512 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000012afe1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000081a39 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000012e5d2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011d4be : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000104301 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x00000000000ddbee : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; test al, 0x83 ; ret 0x4802
0x000000000013218d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000111a4a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000011e1be : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000006efca : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000077aca : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000286e4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x00000000000a000e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ec9bc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000000828f0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000073dc8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000081a59 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000021eb5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001123c8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000ab8bc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d76e7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000015040d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010f288 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000015743f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000150361 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000032c93 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000007190e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001a1c1e : add dword ptr [rax], eax ; add byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000061059 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x7ae8
0x0000000000022921 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000170f5a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017010a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000016ff32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016ff2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000001706c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000016ff6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000016ff62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000170702 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000000a1b59 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x000000000007f0f4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000084853 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000b4fcf : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x212ce
0x000000000006add1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xe7856
0x00000000001606f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x160708 ; neg eax ; ret
0x00000000000a1801 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xa1811 ; neg eax ; ret
0x000000000015d4a7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x15d4b8 ; neg eax ; ret
0x000000000006319d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5fbb5
0x000000000004dd58 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000c5ff3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xc6007 ; ret
0x0000000000103fae : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000c6281 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000121e33 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000008409f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000011ef99 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x0000000000046e56 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000011d7da : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000058e04 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x75089
0x000000000006c335 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000125105 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000001250cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000121d9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000121db6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e27fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007bd93 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023cc5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000072320 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035a89 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e819e : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000059fcc : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x000000000005922c : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor r8d, r8d ; jmp rax
0x0000000000078f48 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000162910 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; retf 0xbf41
0x0000000000104d35 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x0000000000075553 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000000000d4de0 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76268b40], al ; ret 0xe281
0x00000000000d1c0e : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x0000000000164135 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000090298 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a74c5 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000d9072 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b809 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000422ca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001ac84e : add dword ptr [rax], eax ; add byte ptr [rbx + rdi*8 - 1], bh ; ret
0x00000000001ad935 : add dword ptr [rax], eax ; add byte ptr [rcx + 3], dh ; add byte ptr [rax], al ; retf 5
0x0000000000084592 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, rcx ; call rax
0x00000000000303fa : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x00000000000cd501 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x000000000011a925 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000162daa : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x00000000001a3bde : add dword ptr [rax], eax ; add byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000000ac868 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; retf 0x8941
0x000000000011543e : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x00000000000b3cf9 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000b95be : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000f6ee5 : add dword ptr [rax], eax ; add byte ptr [rdx + 8], bh ; syscall
0x00000000001559d0 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x00000000001559dc : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x00000000000b91d8 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000dad4e : add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x000000000015e735 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000015e742 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000015e74f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000015e707 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000015e714 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000015e721 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000e1154 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001a3c92 : add dword ptr [rax], eax ; add r14b, sil ; jmp qword ptr [rbx]
0x00000000000f112d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000001a3a4e : add dword ptr [rax], eax ; add sil, sil ; jmp qword ptr [rbx]
0x000000000018b646 : add dword ptr [rax], eax ; and al, 0x21 ; clc ; jmp rsp
0x000000000018ccbe : add dword ptr [rax], eax ; and al, 0x2f ; std ; jmp qword ptr [rax]
0x00000000001a1aca : add dword ptr [rax], eax ; and al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x000000000019ea1a : add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp qword ptr [rcx]
0x00000000001a665a : add dword ptr [rax], eax ; and al, 0xd7 ; idiv bh ; ret 0
0x000000000019e65e : add dword ptr [rax], eax ; and byte ptr [rax - 7], ah ; call qword ptr [rax]
0x00000000001a1b7e : add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a454a : add dword ptr [rax], eax ; and esi, esi ; call qword ptr [rsi]
0x00000000001a4522 : add dword ptr [rax], eax ; and rsi, r14 ; call qword ptr [rbx]
0x00000000001a43e6 : add dword ptr [rax], eax ; call 0x111a3a0f
0x000000000019ffe6 : add dword ptr [rax], eax ; call 0x2219f4de
0x00000000001a1b56 : add dword ptr [rax], eax ; call 0x221a10c0
0x00000000001a3ac6 : add dword ptr [rax], eax ; call 0x241a30d2
0x00000000001abf76 : add dword ptr [rax], eax ; call 0xffffffffe41ab7c8
0x00000000001891ce : add dword ptr [rax], eax ; cdq ; int1 ; jmp rax
0x00000000001a3c56 : add dword ptr [rax], eax ; clc ; add esi, esi ; jmp qword ptr [rbx]
0x000000000019fa36 : add dword ptr [rax], eax ; clc ; fcomip st(4) ; jmp qword ptr [rcx]
0x000000000019e696 : add dword ptr [rax], eax ; clc ; pop rdi ; stc ; call qword ptr [rax]
0x00000000001abb72 : add dword ptr [rax], eax ; cld ; cmp al, bh ; call qword ptr [rbx]
0x00000000001a1432 : add dword ptr [rax], eax ; cld ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a74c2 : add dword ptr [rax], eax ; cld ; fdivr st(0) ; call qword ptr [rax]
0x00000000001a35e2 : add dword ptr [rax], eax ; cld ; retf 0xfff5
0x00000000000861c3 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000085cb7 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000001a3b52 : add dword ptr [rax], eax ; cmp al, 0x11 ; stc ; jmp qword ptr [rbx]
0x00000000001a08c2 : add dword ptr [rax], eax ; cmp al, 0x12 ; cmc ; jmp rax
0x00000000001a1b92 : add dword ptr [rax], eax ; cmp al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x000000000019d452 : add dword ptr [rax], eax ; cmp al, 0xce ; call rax
0x00000000001a13a6 : add dword ptr [rax], eax ; cmp byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a3d66 : add dword ptr [rax], eax ; cmp byte ptr [rcx], bl ; cld ; jmp qword ptr [rdx]
0x0000000000165061 : add dword ptr [rax], eax ; cmp rdi, rax ; je 0x165082 ; call 0x212d1
0x00000000001a4df2 : add dword ptr [rax], eax ; cmp sil, r14b ; jmp rax
0x00000000001a4dde : add dword ptr [rax], eax ; cmp sil, sil ; call qword ptr [rcx]
0x000000000019dc16 : add dword ptr [rax], eax ; cwde ; or al, 0xf4 ; call qword ptr [rdi]
0x00000000001a1a66 : add dword ptr [rax], eax ; cwde ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000001ac086 : add dword ptr [rax], eax ; enter -0x7b2, -1 ; ret
0x000000000019e056 : add dword ptr [rax], eax ; fcom dword ptr [rcx - 0xc] ; call rsp
0x00000000001a42b2 : add dword ptr [rax], eax ; fcomp qword ptr [rax] ; idiv bh ; retf 1
0x00000000001a1912 : add dword ptr [rax], eax ; fcomp qword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a1142 : add dword ptr [rax], eax ; fdiv qword ptr [rax] ; cmc ; jmp rsp
0x000000000018cabe : add dword ptr [rax], eax ; fdiv st(2), st(0) ; dec dword ptr [rax] ; retf
0x00000000001a8d16 : add dword ptr [rax], eax ; fdivr dword ptr [rax - 9] ; call qword ptr [rsi]
0x000000000018ca7e : add dword ptr [rax], eax ; fdivr st(2) ; jmp rax
0x00000000001a0372 : add dword ptr [rax], eax ; fdivr st(4), st(0) ; hlt ; jmp qword ptr [rsi]
0x000000000019db86 : add dword ptr [rax], eax ; fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x000000000018b45e : add dword ptr [rax], eax ; hlt ; div bh ; call qword ptr [rax]
0x000000000018a9be : add dword ptr [rax], eax ; hlt ; fcomi st(6) ; call rax
0x000000000018cbe6 : add dword ptr [rax], eax ; hlt ; jrcxz 0x18cbec ; call rax
0x000000000018b55e : add dword ptr [rax], eax ; hlt ; or al, bh ; jmp rsp
0x000000000019db9a : add dword ptr [rax], eax ; hlt ; or esi, esp ; jmp qword ptr [rcx]
0x000000000018b1fe : add dword ptr [rax], eax ; hlt ; retf 0xfff7
0x000000000018bb9e : add dword ptr [rax], eax ; in al, 0x13 ; stc ; jmp rax
0x00000000001a1c0a : add dword ptr [rax], eax ; in al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x00000000001ab31a : add dword ptr [rax], eax ; in al, 0xa5 ; sti ; jmp qword ptr [rdx]
0x000000000019f25a : add dword ptr [rax], eax ; in al, 0xbb ; hlt ; jmp rsi
0x0000000000189a2e : add dword ptr [rax], eax ; in al, 0xe4 ; jmp qword ptr [rax]
0x000000000019ff5a : add dword ptr [rax], eax ; in al, 0xeb ; hlt ; jmp qword ptr [rcx]
0x0000000000189a0e : add dword ptr [rax], eax ; in al, 0xf3 ; call rax
0x000000000018b4f6 : add dword ptr [rax], eax ; in al, 3 ; clc ; call qword ptr [rax]
0x00000000001a09e2 : add dword ptr [rax], eax ; in al, dx ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001a3a12 : add dword ptr [rax], eax ; in al, dx ; push rbp ; jmp qword ptr [rbx]
0x00000000001ac1c2 : add dword ptr [rax], eax ; in al, dx ; push rsp ; clc ; call qword ptr [rbx]
0x00000000001a729a : add dword ptr [rax], eax ; in eax, 0xfb ; jmp qword ptr [rdx]
0x00000000001abba2 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp eax, edi ; jmp qword ptr [rcx]
0x000000000019ee02 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; popfq ; hlt ; jmp qword ptr [rcx]
0x0000000000188da6 : add dword ptr [rax], eax ; je 0x188da8 ; out dx, eax ; jmp rsp
0x0000000000189716 : add dword ptr [rax], eax ; je 0x18969f ; jmp rsp
0x0000000000189876 : add dword ptr [rax], eax ; je 0x189832 ; jmp qword ptr [rax]
0x0000000000189875 : add dword ptr [rax], eax ; je 0x189833 ; jmp qword ptr [rax]
0x0000000000189b6e : add dword ptr [rax], eax ; je 0x189bdd ; hlt ; call rsp
0x000000000018b23e : add dword ptr [rax], eax ; je 0x18b215 ; idiv edi ; hlt ; retf 1
0x000000000019eeba : add dword ptr [rax], eax ; je 0x19ee68 ; hlt ; jmp qword ptr [rcx]
0x000000000019ffaa : add dword ptr [rax], eax ; je 0x19ff9f ; hlt ; jmp qword ptr [rcx]
0x00000000001a1bba : add dword ptr [rax], eax ; je 0x1a1c22 ; cmc ; jmp qword ptr [rcx]
0x000000000018a5f6 : add dword ptr [rax], eax ; jg 0x18a5f6 ; call rax
0x000000000018b0b6 : add dword ptr [rax], eax ; jge 0x18b0b9 ; push rax ; ret 1
0x000000000019e642 : add dword ptr [rax], eax ; jl 0x19e5d0 ; hlt ; call qword ptr [rax]
0x00000000001a0992 : add dword ptr [rax], eax ; jl 0x1a09ae ; cmc ; jmp qword ptr [rcx]
0x00000000001a0ea2 : add dword ptr [rax], eax ; jl 0x1a0ed3 ; cmc ; call qword ptr [rdx]
0x00000000001a1a52 : add dword ptr [rax], eax ; jl 0x1a1ab8 ; cmc ; jmp qword ptr [rcx]
0x00000000001a4092 : add dword ptr [rax], eax ; jl 0x1a40ad ; idiv bh ; retf 0
0x00000000001a5f02 : add dword ptr [rax], eax ; jl 0x1a5eaf ; idiv bh ; retf 0
0x00000000001a2436 : add dword ptr [rax], eax ; jne 0x1a2435 ; call qword ptr [rdx]
0x00000000000444b6 : add dword ptr [rax], eax ; jne 0x444b5 ; pop rbx ; ret
0x000000000019d21e : add dword ptr [rax], eax ; jo 0x19d1d0 ; jmp rsi
0x00000000001a007e : add dword ptr [rax], eax ; jo 0x1a0076 ; hlt ; jmp qword ptr [rcx]
0x00000000001a161e : add dword ptr [rax], eax ; jo 0x1a167e ; cmc ; jmp qword ptr [rcx]
0x000000000019e606 : add dword ptr [rax], eax ; js 0x19e594 ; hlt ; call qword ptr [rbx]
0x000000000019e976 : add dword ptr [rax], eax ; js 0x19e90f ; hlt ; jmp qword ptr [rcx]
0x000000000019f086 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000019fba2 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; jrcxz 0x19fba0 ; call qword ptr [rsi]
0x000000000019eee2 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a6382 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; retf
0x000000000019f09a : add dword ptr [rax], eax ; lodsb al, byte ptr fs:[rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a092e : add dword ptr [rax], eax ; loopne 0x1a0949 ; cmc ; jmp qword ptr [rcx]
0x00000000001a141e : add dword ptr [rax], eax ; loopne 0x1a1460 ; cmc ; jmp qword ptr [rcx]
0x00000000001a09ba : add dword ptr [rax], eax ; mov ah, 0x13 ; cmc ; jmp qword ptr [rcx]
0x000000000018b656 : add dword ptr [rax], eax ; mov ah, 0x2b ; clc ; call rax
0x000000000018cc9e : add dword ptr [rax], eax ; mov ah, 0x2e ; std ; call rax
0x000000000018b6e6 : add dword ptr [rax], eax ; mov ah, 0x46 ; clc ; call qword ptr [rax]
0x00000000001ac33a : add dword ptr [rax], eax ; mov ah, 0x59 ; clc ; call qword ptr [rdi]
0x00000000001a1a7a : add dword ptr [rax], eax ; mov ah, 0x5d ; cmc ; jmp qword ptr [rcx]
0x0000000000189c96 : add dword ptr [rax], eax ; mov ah, 0x90 ; hlt ; call qword ptr [rax]
0x00000000001ab21a : add dword ptr [rax], eax ; mov ah, 0xa6 ; sti ; jmp qword ptr [rdx]
0x000000000018b21e : add dword ptr [rax], eax ; mov ah, 0xcb ; idiv edi ; push rsp ; retf 1
0x00000000001a1b2e : add dword ptr [rax], eax ; mov al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x00000000001a8eae : add dword ptr [rax], eax ; mov al, 0x85 ; idiv edi ; retf 0
0x000000000019dc9e : add dword ptr [rax], eax ; mov al, 0xd ; hlt ; call qword ptr [rcx]
0x000000000019d7f6 : add dword ptr [rax], eax ; mov dh, ch ; jmp qword ptr [rdi]
0x000000000019fec6 : add dword ptr [rax], eax ; mov dl, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a0092 : add dword ptr [rax], eax ; mov edi, gs ; hlt ; jmp qword ptr [rcx]
0x000000000008cb51 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000000001a1c82 : add dword ptr [rax], eax ; mov word ptr [rax - 0xb], fs ; jmp qword ptr [rcx]
0x00000000001a1632 : add dword ptr [rax], eax ; mov word ptr [rdi - 0xb], ss ; jmp qword ptr [rcx]
0x00000000001a52c2 : add dword ptr [rax], eax ; mov word ptr [rsi - 0xa], ss ; call rdx
0x0000000000189d8e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rax
0x000000000018b44e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; div bh ; jmp rax
0x000000000018aa26 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; fdivrp st(6) ; call rsp
0x000000000018b9fe : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; clc ; call qword ptr [rax]
0x000000000018cdae : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x18cdb5 ; call rax
0x000000000019fafa : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x19faf8 ; jmp qword ptr [rcx]
0x000000000019dc2a : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xf4 ; call qword ptr [rsi]
0x000000000018bb36 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or edi, ecx ; call rsp
0x000000000018905e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff0
0x000000000018b956 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff8
0x00000000001a01be : add dword ptr [rax], eax ; nop ; int1 ; hlt ; jmp rdx
0x00000000000e9c6c : add dword ptr [rax], eax ; nop ; mov eax, 0x56 ; syscall
0x00000000000eeb3c : add dword ptr [rax], eax ; nop ; mov eax, 0xa3 ; syscall
0x000000000019eece : add dword ptr [rax], eax ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000019dc5e : add dword ptr [rax], eax ; nop ; or al, 0xf4 ; call qword ptr [rdx]
0x00000000001a1a02 : add dword ptr [rax], eax ; or al, 0x5d ; cmc ; jmp qword ptr [rcx]
0x00000000001a1cd2 : add dword ptr [rax], eax ; or al, 0x61 ; cmc ; jmp qword ptr [rcx]
0x000000000019e7c2 : add dword ptr [rax], eax ; or al, 0x8d ; hlt ; call qword ptr [rdx]
0x00000000001a1ab6 : add dword ptr [rax], eax ; or byte ptr [rsi - 0xb], bl ; jmp qword ptr [rcx]
0x000000000019db22 : add dword ptr [rax], eax ; or r14, rsp ; jmp qword ptr [rcx]
0x000000000018ac36 : add dword ptr [rax], eax ; or r14b, dil ; jmp rsp
0x000000000019daaa : add dword ptr [rax], eax ; or r14d, esp ; call qword ptr [rbx]
0x000000000019dae6 : add dword ptr [rax], eax ; or rsi, rsp ; call qword ptr [rsi]
0x00000000001a3b16 : add dword ptr [rax], eax ; pop rax ; add esi, esi ; jmp qword ptr [rbx]
0x00000000001a4536 : add dword ptr [rax], eax ; pop rax ; and esi, esi ; call qword ptr [rbx]
0x00000000001a1a2a : add dword ptr [rax], eax ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x000000000008cc98 : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000032280 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a3bf2 : add dword ptr [rax], eax ; pop rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000001a3a62 : add dword ptr [rax], eax ; pop rsp ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a1976 : add dword ptr [rax], eax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x000000000019e962 : add dword ptr [rax], eax ; pop rsp ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000001a9d82 : add dword ptr [rax], eax ; pop rsp ; retf
0x000000000018cb26 : add dword ptr [rax], eax ; pop rsp ; sti ; call rsp
0x000000000019eff2 : add dword ptr [rax], eax ; pop rsp ; test al, 0xf4 ; call rsp
0x00000000001a16ce : add dword ptr [rax], eax ; push rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000019edee : add dword ptr [rax], eax ; push rax ; popfq ; hlt ; jmp qword ptr [rcx]
0x00000000001a9d2e : add dword ptr [rax], eax ; push rax ; retf 0xfff7
0x00000000001a15e2 : add dword ptr [rax], eax ; push rbp ; push rdi ; cmc ; call qword ptr [rcx]
0x00000000001a3bca : add dword ptr [rax], eax ; push rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x000000000018adde : add dword ptr [rax], eax ; push rsp ; and al, 0xf7 ; call rax
0x000000000018b6fe : add dword ptr [rax], eax ; push rsp ; clc ; call qword ptr [rax]
0x000000000018aefe : add dword ptr [rax], eax ; push rsp ; cmp al, 0xf7 ; jmp qword ptr [rax]
0x000000000018aede : add dword ptr [rax], eax ; push rsp ; cmp dh, bh ; call rax
0x00000000001a13ba : add dword ptr [rax], eax ; push rsp ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001890ae : add dword ptr [rax], eax ; push rsp ; int1 ; jmp rax
0x000000000018b366 : add dword ptr [rax], eax ; push rsp ; loope 0x18b367 ; call rax
0x000000000018a6c6 : add dword ptr [rax], eax ; push rsp ; mov dh, dh ; call qword ptr [rax]
0x000000000018951e : add dword ptr [rax], eax ; push rsp ; mov dl, 0xf2 ; call qword ptr [rax]
0x00000000001a160a : add dword ptr [rax], eax ; push rsp ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000189f86 : add dword ptr [rax], eax ; push rsp ; ret
0x000000000018b20e : add dword ptr [rax], eax ; push rsp ; retf
0x000000000018b99e : add dword ptr [rax], eax ; push rsp ; retf 0xfff8
0x0000000000189916 : add dword ptr [rax], eax ; push rsp ; sal ebx, 1 ; call qword ptr [rax]
0x000000000018a68e : add dword ptr [rax], eax ; push rsp ; test esi, esi ; jmp qword ptr [rax]
0x000000000019e67a : add dword ptr [rax], eax ; push rsp ; test esp, esi ; call qword ptr [rax]
0x00000000001a19b2 : add dword ptr [rax], eax ; pushfq ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000001a62c2 : add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001a09ce : add dword ptr [rax], eax ; rcl byte ptr [rbx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001acae8 : add dword ptr [rax], eax ; ret 0x502
0x00000000001898ce : add dword ptr [rax], eax ; ret 0xfff3
0x00000000001a34ea : add dword ptr [rax], eax ; ret 0xfff5
0x0000000000189fae : add dword ptr [rax], eax ; retf
0x000000000018a91e : add dword ptr [rax], eax ; retf 0xfff6
0x000000000018b1e6 : add dword ptr [rax], eax ; retf 0xfff7
0x00000000001ac6ae : add dword ptr [rax], eax ; rol byte ptr [rax - 5], 1 ; call rax
0x00000000001a3c2e : add dword ptr [rax], eax ; rol byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000001a9f0a : add dword ptr [rax], eax ; sal bh, 1 ; call qword ptr [rcx]
0x00000000001aa09a : add dword ptr [rax], eax ; sal bh, cl ; call rax
0x00000000001a39fe : add dword ptr [rax], eax ; sar bh, 1 ; cmc ; jmp qword ptr [rsi]
0x00000000001a1c32 : add dword ptr [rax], eax ; sbb al, 0x60 ; cmc ; call qword ptr [rsi]
0x00000000001a50e6 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 0xa], cl ; call rdx
0x000000000018ad66 : add dword ptr [rax], eax ; sbb r14b, dil ; jmp qword ptr [rax]
0x000000000019d67e : add dword ptr [rax], eax ; shr ah, 1 ; jmp qword ptr [rbx]
0x00000000001a0802 : add dword ptr [rax], eax ; sub al, 0x10 ; cmc ; call qword ptr [rax]
0x00000000001a1502 : add dword ptr [rax], eax ; sub al, 0x56 ; cmc ; call qword ptr [rax]
0x00000000001a1962 : add dword ptr [rax], eax ; sub al, 0x5c ; cmc ; jmp qword ptr [rcx]
0x00000000001a1ce6 : add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001a13f6 : add dword ptr [rax], eax ; test al, 0x39 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1646 : add dword ptr [rax], eax ; test al, 0x57 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1726 : add dword ptr [rax], eax ; test al, 0x58 ; cmc ; jmp qword ptr [rcx]
0x000000000019ea56 : add dword ptr [rax], eax ; test al, 0x91 ; hlt ; jmp qword ptr [rcx]
0x00000000001a00a6 : add dword ptr [rax], eax ; test al, 0xef ; hlt ; jmp qword ptr [rcx]
0x000000000018b216 : add dword ptr [rax], eax ; test bl, cl ; idiv edi ; retf 1
0x0000000000189736 : add dword ptr [rax], eax ; test bl, dh ; jmp rsp
0x0000000000189dfe : add dword ptr [rax], eax ; test byte ptr [rbp - 0xb], dl ; jmp qword ptr [rax]
0x000000000019db4a : add dword ptr [rax], eax ; test byte ptr [rbx], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d5a : add dword ptr [rax], eax ; test byte ptr [rbx], cl ; idiv edi ; ret 0
0x000000000018bb4e : add dword ptr [rax], eax ; test byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rax]
0x000000000018a52e : add dword ptr [rax], eax ; test byte ptr [rcx - 0xa], dh ; call qword ptr [rax]
0x000000000018ac86 : add dword ptr [rax], eax ; test byte ptr [rdi + rsi*8], cl ; call rsp
0x00000000001a514a : add dword ptr [rax], eax ; test byte ptr [rsi - 0xa], cl ; call rdi
0x0000000000188d2e : add dword ptr [rax], eax ; test dh, ch ; out dx, eax ; call rsp
0x000000000018b296 : add dword ptr [rax], eax ; test dh, cl ; idiv edi ; clc ; retf
0x000000000018cdc6 : add dword ptr [rax], eax ; xchg eax, esi ; std ; call rsp
0x000000000018b616 : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; jmp rax
0x00000000001a3a8a : add dword ptr [rax], eax ; xchg eax, esp ; add dh, dh ; jmp qword ptr [rbx]
0x000000000018cac6 : add dword ptr [rax], eax ; xchg eax, esp ; fdiv st(2), st(0) ; push qword ptr [rax] ; retf
0x0000000000189a16 : add dword ptr [rax], eax ; xchg eax, esp ; in al, 0xf3 ; jmp rsp
0x000000000018a5fe : add dword ptr [rax], eax ; xchg eax, esp ; jg 0x18a5fe ; jmp rsp
0x000000000018b05e : add dword ptr [rax], eax ; xchg eax, esp ; js 0x18b05f ; call qword ptr [rax]
0x000000000018950e : add dword ptr [rax], eax ; xchg eax, esp ; mov al, 0xf2 ; call rsp
0x0000000000189886 : add dword ptr [rax], eax ; xchg eax, esp ; mov bh, 0xf3 ; jmp rsp
0x000000000018cd6e : add dword ptr [rax], eax ; xchg eax, esp ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x00000000001a1b1a : add dword ptr [rax], eax ; xchg eax, esp ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x00000000001ac50a : add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; clc ; call rsp
0x000000000018cb3e : add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; sti ; call qword ptr [rax]
0x00000000001895b6 : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000018b1ee : add dword ptr [rax], eax ; xchg eax, esp ; retf 0xfff7
0x000000000018a25e : add dword ptr [rax], eax ; xchg eax, esp ; sbb esi, esi ; call rax
0x00000000001a2f2a : add dword ptr [rax], eax ; xchg eax, esp ; test al, 0xf5 ; call rsi
0x000000000018ae66 : add dword ptr [rax], eax ; xchg eax, esp ; xor dh, bh ; jmp qword ptr [rax]
0x00000000001a3b2a : add dword ptr [rax], eax ; xor al, 0x11 ; stc ; jmp qword ptr [rbx]
0x00000000001a145a : add dword ptr [rax], eax ; xor al, 0x3a ; cmc ; jmp qword ptr [rcx]
0x00000000001a1f2a : add dword ptr [rax], eax ; xor al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x000000000018b8ee : add dword ptr [rax], eax ; xor al, 0xaf ; clc ; call rsp
0x000000000018b25e : add dword ptr [rax], eax ; xor al, 0xcd ; idiv edi ; insb byte ptr [rdi], dx ; retf
0x000000000018cab6 : add dword ptr [rax], eax ; xor al, 0xdc ; cli ; jmp rax
0x00000000001899d6 : add dword ptr [rax], eax ; xor al, 0xe2 ; jmp qword ptr [rax]
0x00000000001a567e : add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], ch ; jmp rbx
0x000000000018ae46 : add dword ptr [rax], eax ; xor dil, r14b ; call rax
0x000000000008cdb3 : add dword ptr [rax], edi ; adc al, 7 ; je 0x8cdb7 ; ret
0x00000000000ff5ce : add dword ptr [rax], esp ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001a1431 : add dword ptr [rax], r8d ; cld ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a13a5 : add dword ptr [rax], r8d ; cmp byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a161d : add dword ptr [rax], r8d ; jo 0x1a167f ; cmc ; jmp qword ptr [rcx]
0x00000000001a141d : add dword ptr [rax], r8d ; loopne 0x1a1461 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1631 : add dword ptr [rax], r8d ; mov word ptr [rdi - 0xb], ss ; jmp qword ptr [rcx]
0x00000000001a15e1 : add dword ptr [rax], r8d ; push rbp ; push rdi ; cmc ; call qword ptr [rcx]
0x00000000001a13b9 : add dword ptr [rax], r8d ; push rsp ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a1609 : add dword ptr [rax], r8d ; push rsp ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a13f5 : add dword ptr [rax], r8d ; test al, 0x39 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1645 : add dword ptr [rax], r8d ; test al, 0x57 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1459 : add dword ptr [rax], r8d ; xor al, 0x3a ; cmc ; jmp qword ptr [rcx]
0x00000000000f2baa : add dword ptr [rbp + 0x29], eax ; ret
0x000000000008c64a : add dword ptr [rbp + 0x38], eax ; ret 0x2975
0x000000000008c6aa : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x000000000008c0d2 : add dword ptr [rbp + 0x38], eax ; retf 0x2775
0x000000000008b8c2 : add dword ptr [rbp + 0x38], eax ; retf 0x2a75
0x0000000000089efa : add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x000000000008b91a : add dword ptr [rbp + 0x38], eax ; retf 0x7575
0x000000000008c85a : add dword ptr [rbp + 0x38], eax ; retf 0x7875
0x000000000008c132 : add dword ptr [rbp + 0x38], eax ; retf 0x850f
0x0000000000089fa6 : add dword ptr [rbp + 0x38], eax ; retf 0xec74
0x0000000000089d0e : add dword ptr [rbp + 0x38], eax ; sal dword ptr [rsp + rbp*8 + 0x44], 0x89 ; retf
0x000000000008b756 : add dword ptr [rbp + 0x38], eax ; sal dword ptr [rsp + rbp*8 + 0x45], 0x89 ; retf
0x00000000000ac6ff : add dword ptr [rbp + 0x39], ecx ; ret 0xcf76
0x000000000008a6f0 : add dword ptr [rbp + 0x40ea75d2], eax ; or byte ptr [rdi], dh ; ret
0x0000000000119e8c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e7b9a : add dword ptr [rbp + 0x43], esi ; mov eax, 0x10c ; syscall
0x0000000000175ea4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000007b802 : add dword ptr [rbp + 0x738948c9], eax ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000129602 : add dword ptr [rbp + 0xb], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000f2e72 : add dword ptr [rbp + 0xb], esi ; ret
0x0000000000105435 : add dword ptr [rbp - 0x18], esi ; mov rax, rdi ; ret
0x00000000000bf196 : add dword ptr [rbp - 0x19], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1b87 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000000000045374 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000ef74c : add dword ptr [rbp - 0x2f], esi ; ret
0x00000000000ae55e : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000003879c : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000f35f5 : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000004b452 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000f4659 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000892e4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000017628a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x000000000013f642 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000174e6a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000089bfa : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000000279a : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x00000000000b3372 : add dword ptr [rbx + 0x48], ebx ; mov eax, edx ; ret
0x00000000000d005a : add dword ptr [rbx + rcx - 0xa], esi ; ret
0x0000000000059483 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x00000000000a0806 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0xda89
0x000000000005ce20 : add dword ptr [rbx - 0x76b70005], eax ; retf 0x850f
0x00000000000329c6 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000110fdb : add dword ptr [rbx - 0x877b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x0000000000186140 : add dword ptr [rbx - 3], esi ; jmp rcx
0x0000000000185ff8 : add dword ptr [rbx - 3], esp ; call qword ptr [rcx + 0x21fffd63]
0x00000000000e094d : add dword ptr [rbx], 0 ; add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x00000000001a3532 : add dword ptr [rbx], 0xa ; ret
0x00000000000386d1 : add dword ptr [rbx], eax ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000001a5352 : add dword ptr [rbx], eax ; ret
0x00000000001acbb4 : add dword ptr [rbx], ecx ; ret
0x00000000000865ad : add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000113b64 : add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x00000000000ce8f5 : add dword ptr [rcx + 0x39], eax ; ret 0x4864
0x00000000000d181e : add dword ptr [rcx + 0x39], eax ; ret 0x8e0f
0x000000000008765a : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000086605 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x00000000000ac74d : add dword ptr [rcx + 0x39], ecx ; ret 0x8b48
0x000000000008affb : add dword ptr [rcx + 0x39], ecx ; ret 0xef75
0x00000000000d15db : add dword ptr [rcx + 0x63], ecx ; ret 0x634c
0x00000000000d59e9 : add dword ptr [rcx + 0x63], ecx ; ret 0xb60f
0x00000000000d1b4e : add dword ptr [rcx + 0x80e1], eax ; add byte ptr [rdi], cl ; ret 0xc35b
0x0000000000114bf5 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x0000000000101de3 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret 0xe883
0x00000000000e738a : add dword ptr [rcx + 0xf], ecx ; ret
0x00000000000d15d5 : add dword ptr [rcx + 1], eax ; fadd qword ptr [rbx + 0x634901eb] ; ret 0x634c
0x00000000000f2ecc : add dword ptr [rcx + 9], ecx ; ret 0x894d
0x00000000000f2f4e : add dword ptr [rcx + 9], ecx ; retf 0x894c
0x000000000011fb73 : add dword ptr [rcx + 9], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000a1b84 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0xa1b77 ; ret
0x0000000000113b35 : add dword ptr [rcx + rcx*8 + 0x6348e675], eax ; ret 0xc741
0x00000000000ceefa : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x00000000000cef6a : add dword ptr [rcx - 0x6f501431], ecx ; lea eax, [rsi + 1] ; ret
0x00000000000ca5d2 : add dword ptr [rcx - 0x75], eax ; jl 0xca574 ; add byte ptr [rax + 0x39], cl ; retf 0x8841
0x0000000000097f26 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000008bba2 : add dword ptr [rcx - 0x77], ecx ; ret
0x000000000002619f : add dword ptr [rcx - 0x77], ecx ; ret 0x8348
0x000000000008c89f : add dword ptr [rcx - 0x77], ecx ; ret 0xf41
0x00000000000ce939 : add dword ptr [rcx - 0x78], eax ; adc byte ptr [rcx + 0x39], al ; ret 0xc375
0x000000000002d177 : add dword ptr [rcx - 0x7d], eax ; dec dword ptr [rip - 0x7cb79d8c] ; ret
0x00000000000ac012 : add dword ptr [rcx - 0x7d], eax ; in al, dx ; add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x00000000000a42ef : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x00000000001138d3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00000000001a52c1 : add dword ptr [rcx], 0 ; mov word ptr [rsi - 0xa], ss ; call rdx
0x00000000001a50e5 : add dword ptr [rcx], 0xf64d1800 ; call rdx
0x00000000001a5149 : add dword ptr [rcx], 0xf64e8400 ; call rdi
0x00000000000b24db : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000e7efd : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000016076e : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x000000000016076c : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000105434 : add dword ptr [rcx], eax ; jne 0x105427 ; mov rax, rdi ; ret
0x00000000000d1a7d : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x0000000000027a58 : add dword ptr [rcx], ecx ; ret 0x3948
0x0000000000027817 : add dword ptr [rcx], ecx ; retf 0x394c
0x00000000000d712d : add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000ad3a7 : add dword ptr [rcx], edi ; retf
0x00000000000d1fe0 : add dword ptr [rcx], edi ; retf 0xeb7f
0x0000000000175db5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000112f13 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000e2902 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a0442 : add dword ptr [rdi + 0x15], esi ; jb 0xa0450 ; mov byte ptr [rdi], cl ; ret
0x000000000012a660 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000012a670 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012a703 : add dword ptr [rdi + 0x28], esi ; ret
0x00000000001659ca : add dword ptr [rdi + 3], esi ; ret
0x000000000007d892 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x0000000000088e0c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019de47 : add dword ptr [rdi], 2 ; ret
0x000000000018d6ee : add dword ptr [rdi], 3 ; retf
0x000000000019d9ae : add dword ptr [rdi], 3 ; retf 0xa02
0x00000000000cd895 : add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x000000000002dc05 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000001233f1 : add dword ptr [rdi], ecx ; retf 0xc80f
0x00000000000b6c4a : add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000a0809 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a0817 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x0000000000149e8e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000028163 : add dword ptr [rdi], ecx ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001026a3 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000113845 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x00000000000e07e4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000043f9e : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x0000000000043fac : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000097ee4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000000df7fd : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x000000000015dd2c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006afbe : add dword ptr [rdx + 4], 1 ; ret
0x000000000006b030 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000015d65d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000f9227 : add dword ptr [rdx + 8], ebp ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f969b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000117e1b : add dword ptr [rdx + rcx + 0x48], esi ; mov dword ptr [rdi], eax ; ret
0x0000000000175a8f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000186120 : add dword ptr [rdx - 3], esi ; jmp rcx
0x000000000019abb4 : add dword ptr [rdx], 0x4a ; ret
0x00000000001936b8 : add dword ptr [rdx], 0x58 ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x000000000019689c : add dword ptr [rdx], 0x5a ; ret
0x00000000001138de : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000001960b6 : add dword ptr [rdx], eax ; ret 0xe0a
0x00000000001ac977 : add dword ptr [rdx], ecx ; jne 0x1ac984 ; retf
0x00000000001acc0b : add dword ptr [rdx], ecx ; jne 0x1acc18 ; retf
0x00000000001138dd : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007ce78 : add dword ptr [rip + 0x339a25], 1 ; ret
0x000000000006e458 : add dword ptr [rsi + 0x48], esi ; mov eax, edx ; pop rbx ; ret
0x0000000000097e75 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001961b9 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001950d7 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000097ef7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001179d9 : add dword ptr [rsp + 0x48], esi ; add esp, 8 ; ret
0x0000000000195efa : add dword ptr [rsp + rax*2], 0xe ; xor byte ptr [rdx], al ; ret
0x00000000000c8cc9 : add dword ptr [rsp + rdx - 0x7c], esi ; sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x000000000007bc89 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000158ed7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a34e9 : add dword ptr gs:[rax], eax ; ret 0xfff5
0x0000000000001521 : add eax, 0 ; add byte ptr [rax], al ; retf
0x0000000000112f36 : add eax, 0x10 ; ret
0x000000000017b38c : add eax, 0x10 ; retf 8
0x00000000000861c0 : add eax, 0x100ab ; cmove rax, rdx ; ret
0x00000000000a1c20 : add eax, 0x106eb ; cmove rax, rdx ; ret
0x00000000000a1834 : add eax, 0x10917 ; cmovne rax, rdx ; ret
0x00000000000a1900 : add eax, 0x10fdb ; cmove rax, rdx ; ret
0x00000000000a0b40 : add eax, 0x1163b ; cmove rax, rdx ; ret
0x000000000004d657 : add eax, 0x1297a4 ; jmp rax
0x00000000000ab882 : add eax, 0x14c0000 ; ret 0x28b
0x000000000002cb41 : add eax, 0x150733 ; ret
0x0000000000021b82 : add eax, 0x15b244 ; ret
0x0000000000021b92 : add eax, 0x15d081 ; ret
0x00000000000b63de : add eax, 0x16d ; ret
0x0000000000086ed7 : add eax, 0x18984 ; cmove rax, rdx ; ret
0x00000000000874d1 : add eax, 0x18a3a ; cmovne rax, rdx ; ret
0x0000000000034b70 : add eax, 0x18c48348 ; ret
0x00000000000871d1 : add eax, 0x18d1a ; cmovne rax, rdx ; ret
0x0000000000087061 : add eax, 0x18eaa ; cmovne rax, rdx ; ret
0x000000000008713b : add eax, 0x191e0 ; cmovne rax, rdx ; ret
0x0000000000086564 : add eax, 0x198d7 ; cmovne rax, rdx ; ret
0x00000000000862b4 : add eax, 0x19ae7 ; cmovne rax, rdx ; ret
0x0000000000085d84 : add eax, 0x19f77 ; cmovne rax, rdx ; ret
0x00000000001556ba : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000012f6d5 : add eax, 0x285e76 ; call qword ptr [rax]
0x000000000012f098 : add eax, 0x2864b3 ; call qword ptr [rax]
0x0000000000131ef9 : add eax, 0x2875aa ; call qword ptr [rax]
0x00000000000381a0 : add eax, 0x28c48348 ; ret
0x0000000000127102 : add eax, 0x28cd81 ; add rsp, 8 ; ret
0x00000000001270d2 : add eax, 0x28ce19 ; add rsp, 8 ; ret
0x0000000000127072 : add eax, 0x28cf11 ; add rsp, 8 ; ret
0x00000000001270a2 : add eax, 0x28cf39 ; add rsp, 8 ; ret
0x0000000000086453 : add eax, 0x29000000 ; ret
0x00000000000b6c8a : add eax, 0x2907f9c1 ; ret 0x8944
0x00000000001218bb : add eax, 0x297797 ; add ecx, ebp ; retf 0xfffd
0x00000000001178b2 : add eax, 0x29c731 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011c46a : add eax, 0x29caed ; add rsp, 8 ; ret
0x000000000011b864 : add eax, 0x29d677 ; add rsp, 8 ; ret
0x00000000001100f0 : add eax, 0x2a58ab ; add rsp, 8 ; ret
0x000000000011093b : add eax, 0x2a7fbf ; add ecx, ebp ; retf 0xfffd
0x000000000010bbbb : add eax, 0x2ac9f7 ; add ecx, ebp ; retf 0xfffd
0x0000000000104939 : add eax, 0x2b3942 ; pop rbp ; ret
0x00000000000fdb4b : add eax, 0x2b9dcf ; add ecx, ebp ; retf 0xfffd
0x00000000000f9fa2 : add eax, 0x2b9eb1 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fc26b : add eax, 0x2bb557 ; add ecx, ebp ; retf 0xfffd
0x00000000000f2490 : add eax, 0x2c4eeb ; add rsp, 0x18 ; ret
0x00000000000f243c : add eax, 0x2c4f7f ; pop rbp ; pop r12 ; ret
0x00000000000f1f08 : add eax, 0x2c5423 ; add rsp, 8 ; ret
0x00000000000f1ea9 : add eax, 0x2c54a2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149f14 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000ef650 : add eax, 0x2c628b ; add rsp, 8 ; ret
0x00000000000f0c4b : add eax, 0x2c6600 ; add rsp, 8 ; ret
0x00000000000ef4d5 : add eax, 0x2c7be6 ; pop rbx ; ret
0x00000000000e1780 : add eax, 0x2d26e3 ; mov r8, rax ; call r12
0x00000000000853fb : add eax, 0x32eb48 ; call qword ptr [rax]
0x0000000000085336 : add eax, 0x32ec0d ; call qword ptr [rax]
0x000000000008527b : add eax, 0x32ecc8 ; call qword ptr [rax]
0x0000000000086319 : add eax, 0x3306ca ; ret
0x00000000000862ff : add eax, 0x3306e4 ; add rsp, 8 ; ret
0x0000000000082560 : add eax, 0x33196b ; mov qword ptr [rax], rdi ; ret
0x0000000000080440 : add eax, 0x33397b ; xor edi, edi ; call qword ptr [rax]
0x0000000000082571 : add eax, 0x33438e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007ec76 : add eax, 0x335255 ; mov qword ptr [rax], rdx ; ret
0x000000000007d7b5 : add eax, 0x336b2e ; ret
0x000000000007d7a5 : add eax, 0x336b36 ; ret
0x000000000007d755 : add eax, 0x336b3e ; ret
0x000000000007d72f : add eax, 0x336b4c ; ret
0x000000000007d745 : add eax, 0x336b56 ; ret
0x000000000007d6ff : add eax, 0x336b84 ; ret
0x000000000007d6de : add eax, 0x336bc9 ; ret
0x000000000007ec21 : add eax, 0x337cde ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cde2 : add eax, 0x338879 ; ret
0x000000000007d714 : add eax, 0x339213 ; ret
0x000000000007cedd : add eax, 0x3399c2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008d190 : add eax, 0x37bb ; cmove rax, rdx ; ret
0x0000000000035b9c : add eax, 0x37e60b ; mov eax, edx ; ret
0x0000000000035b61 : add eax, 0x37e642 ; ret
0x0000000000035b51 : add eax, 0x37e656 ; ret
0x0000000000038c52 : add eax, 0x3809ef ; add rsp, 8 ; ret
0x000000000002d7cf : add eax, 0x38660c ; mov qword ptr [rax], rdx ; ret
0x000000000002a382 : add eax, 0x38b6a9 ; ret
0x00000000000495ad : add eax, 0x39490000 ; ret
0x0000000000022a62 : add eax, 0x396a71 ; ret
0x0000000000022a52 : add eax, 0x396a91 ; ret
0x00000000001556da : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x00000000001048b8 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x0000000000106d98 : add eax, 0x440f4800 ; ret 0x90c3
0x00000000000758a2 : add eax, 0x4488b41 ; and eax, 1 ; mov edx, eax ; jmp 0x75866
0x0000000000105133 : add eax, 0x450f4800 ; ret 0x66c3
0x0000000000105328 : add eax, 0x450f4800 ; ret 0x90c3
0x0000000000105112 : add eax, 0x450f4800 ; ret 0xfc3
0x000000000006e4d1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000014c448 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000001480f8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009b416 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000001294c2 : add eax, 0x48c48348 ; ret
0x0000000000089ef5 : add eax, 0x4eb60f44 ; add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x00000000000013b9 : add eax, 0x50d0000 ; add byte ptr [rax], al ; syscall
0x000000000014c4c9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000148139 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000001052d0 : add eax, 0x547fb ; cmovne rax, rdx ; ret
0x0000000000105200 : add eax, 0x548eb ; cmovne rax, rdx ; ret
0x0000000000105130 : add eax, 0x549bb ; cmovne rax, rdx ; ret
0x0000000000105325 : add eax, 0x54c46 ; cmovne rax, rdx ; ret
0x00000000001af789 : add eax, 0x5700000 ; add byte ptr [rax], al ; retf 7
0x00000000001052af : add eax, 0x58bfc ; cmovne rax, rdx ; ret
0x00000000000e87a8 : add eax, 0x58c48348 ; ret
0x00000000001051df : add eax, 0x58cec ; cmovne rax, rdx ; ret
0x000000000010510f : add eax, 0x58dbc ; cmovne rax, rdx ; ret
0x000000000010536f : add eax, 0x5910c ; cmovne rax, rdx ; ret
0x00000000000bf195 : add eax, 0x5be77501 ; pop rbp ; pop r12 ; ret
0x0000000000171afd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000171b0d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000e372d : add eax, 0x5d000000 ; pop r12 ; ret
0x0000000000155b03 : add eax, 0x60 ; add rax, rdi ; ret
0x00000000001556fa : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000000f855d : add eax, 0x74000000 ; retf
0x00000000001ad66d : add eax, 0x7800000 ; add byte ptr [rax], al ; ret 1
0x00000000001274b2 : add eax, 0x78c48348 ; ret
0x000000000018d56d : add eax, 0x79b00000 ; std ; jmp qword ptr [rdx]
0x00000000000888e0 : add eax, 0x7e6b ; cmove rax, rdx ; ret
0x000000000009bc1e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000671a9 : add eax, 0x83480000 ; ret
0x000000000014fffd : add eax, 0x83480000 ; ret 0x4910
0x0000000000152b51 : add eax, 0x83480000 ; ret 0xe910
0x000000000014ff51 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000ccc08 : add eax, 0x83480f75 ; ret
0x0000000000101935 : add eax, 0x83490000 ; ret
0x000000000014c44b : add eax, 0x8428d48 ; ret
0x000000000005a893 : add eax, 0x89000013 ; ret 0x349
0x00000000000757e7 : add eax, 0x8901e083 ; ret 0xd089
0x0000000000163c56 : add eax, 0x89480000 ; ret 0x8949
0x0000000000118c6e : add eax, 0x89483077 ; ret
0x000000000008fe18 : add eax, 0x894d0000 ; retf
0x00000000000f4b8a : add eax, 0x8a249 ; pop rbx ; ret
0x00000000001afd05 : add eax, 0x91c0000 ; add byte ptr [rax], al ; retf
0x0000000000086fa0 : add eax, 0x947b ; cmove rax, rdx ; ret
0x000000000009d2d2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00000000001270c6 : add eax, 0xa0 ; add rsp, 8 ; ret
0x00000000001270f6 : add eax, 0xa8 ; add rsp, 8 ; ret
0x00000000000a1ea5 : add eax, 0xb8246 ; je 0xa1e74 ; ret
0x00000000000a1ea5 : add eax, 0xb8246 ; je 0xa1e76 ; ret
0x000000000015c0aa : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000014c4cd : add eax, 0xc428d48 ; ret
0x000000000009ca5d : add eax, 0xc478d48 ; ret
0x0000000000087005 : add eax, 0xcec26 ; je 0x86fd4 ; ret
0x0000000000087005 : add eax, 0xcec26 ; je 0x86fd6 ; ret
0x0000000000087540 : add eax, 0xd25bb ; cmovne rax, rdx ; ret
0x0000000000087240 : add eax, 0xd289b ; cmovne rax, rdx ; ret
0x00000000000870d0 : add eax, 0xd2a2b ; cmovne rax, rdx ; ret
0x0000000000088910 : add eax, 0xd2bb ; cmove rax, rdx ; ret
0x0000000000087125 : add eax, 0xd2e56 ; cmovne rax, rdx ; ret
0x000000000009d8ad : add eax, 0xd478d48 ; ret
0x000000000008751f : add eax, 0xd69bc ; cmovne rax, rdx ; ret
0x000000000008721f : add eax, 0xd6c9c ; cmovne rax, rdx ; ret
0x00000000000870af : add eax, 0xd6e2c ; cmovne rax, rdx ; ret
0x000000000008716f : add eax, 0xd731c ; cmovne rax, rdx ; ret
0x000000000010f1ac : add eax, 0xe8000000 ; retf
0x000000000002b5b7 : add eax, 0xe9000000 ; ret 0xfffb
0x0000000000026bd6 : add eax, 0xe9000000 ; ret 0xfffc
0x000000000013f633 : add eax, 0xf7f0ff3 ; ret
0x000000000004c85d : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000086290 : add eax, 0xfb4b ; cmove rax, rdx ; ret
0x0000000000086190 : add eax, 0xff3b ; cmove rax, rdx ; ret
0x00000000000a1e40 : add eax, 0xffdb ; cmove rax, rdx ; ret
0x0000000000105261 : add eax, 0xfff9ac7a ; cmovne rax, rdx ; ret
0x0000000000105191 : add eax, 0xfff9ad6a ; cmovne rax, rdx ; ret
0x00000000001050c1 : add eax, 0xfff9ae3a ; cmovne rax, rdx ; ret
0x000000000010533b : add eax, 0xfff9afd0 ; cmovne rax, rdx ; ret
0x00000000001acbaf : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; ret
0x00000000001ac972 : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1ac989 ; retf
0x00000000001acc06 : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1acc1d ; retf
0x00000000000e75f4 : add eax, 0xffffff47 ; cmove rax, rdx ; ret
0x000000000008cdb1 : add eax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0x8cdb9 ; ret
0x00000000000f98db : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f991a : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000444a1 : add eax, 1 ; pop rbx ; ret
0x0000000000022905 : add eax, 1 ; push rax ; call rbx
0x000000000008726b : add eax, 1 ; ret
0x00000000000b2ad8 : add eax, 2 ; ret
0x00000000000b2af1 : add eax, 3 ; ret
0x00000000000d1a83 : add eax, 8 ; ret
0x0000000000021d79 : add eax, dword ptr [0] ; ret
0x00000000000c1fdd : add eax, dword ptr [rax + rax*8 + 0x3948ee75] ; retf
0x0000000000029335 : add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000027136 : add eax, dword ptr [rax] ; add al, ch ; ret 0x68
0x0000000000026903 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000df222 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xd289
0x00000000000e416c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x41f0d806], al ; retf 0x3174
0x0000000000080050 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000bf171 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010d380 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x00000000000ab69c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015019d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152cf1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001501c1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000037d4f : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000122bee : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f92b6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000104696 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000f2d7c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000000b2b33 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e891e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000151198 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d7d80 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001af041 : add eax, dword ptr [rax] ; add byte ptr [rbx + 6], bh ; add byte ptr [rax], al ; ret 4
0x00000000000e094e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x000000000012714f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x307f
0x000000000004c5dd : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000002152e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc5eb
0x0000000000163f40 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x0000000000104065 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x00000000000b8fb2 : add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000001050df : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000c43d7 : add eax, dword ptr [rax] ; mov edi, eax ; mov eax, 0x22 ; syscall
0x00000000000ef097 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a0510 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000011fb2d : add eax, dword ptr [rbx + 0x94930e5] ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000149ed9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000faa0a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000000ede3a : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e791b : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000fa7e6 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000149fd9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000019197e : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a352e : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx], 0xa ; ret
0x0000000000158ccf : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d1a45 : add eax, eax ; ret
0x0000000000155bd1 : add eax, eax ; vzeroupper ; ret
0x0000000000118038 : add eax, ebp ; ret 0xf091
0x00000000001053b7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001592d8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000007de16 : add eax, ecx ; cmp rax, rdx ; jne 0x7de27 ; ret
0x000000000006b8db : add eax, ecx ; jmp rax
0x000000000005a366 : add eax, ecx ; mov ecx, 1 ; jmp rax
0x00000000000904a9 : add eax, ecx ; ret
0x000000000015966d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000155536 : add eax, ecx ; vzeroupper ; ret
0x0000000000155bce : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x00000000000904a6 : add eax, edi ; add rax, rcx ; ret
0x0000000000155533 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x0000000000090cca : add eax, edi ; add rax, rsi ; ret
0x0000000000113ffb : add eax, edi ; cmovs eax, edx ; ret
0x000000000004e4a0 : add eax, edi ; jmp rax
0x000000000004e776 : add eax, edi ; mov edx, 1 ; jmp rax
0x000000000008cf36 : add eax, edi ; mov qword ptr [rdi], rdx ; ret
0x000000000008cf24 : add eax, edi ; ret
0x0000000000155440 : add eax, edi ; sub rax, r8 ; ret
0x0000000000159725 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x00000000001551ea : add eax, edi ; sub rax, rsi ; ret
0x00000000001556aa : add eax, edi ; vzeroupper ; ret
0x00000000000e755d : add eax, edx ; cmp rdi, rsi ; ja 0xe7558 ; ret
0x0000000000022160 : add eax, edx ; jmp rax
0x000000000011e7fe : add eax, edx ; ret
0x0000000000096266 : add eax, edx ; sub rax, rdi ; ret
0x00000000000b27db : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000000ef095 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000004d745 : add eax, esi ; jmp rax
0x0000000000090ccd : add eax, esi ; ret
0x00000000000505e8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000036bcb : add ebp, 8 ; mov qword ptr [r15], rax ; jmp 0x36b9d
0x00000000000bcab8 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3254 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000011bae9 : add ebp, dword ptr [rcx] ; ret 0x8166
0x000000000002d99f : add ebp, eax ; retf
0x00000000000c6f50 : add ebp, eax ; retf 0xf5a0
0x00000000001749f7 : add ebp, ebp ; retf
0x000000000003ae7d : add ebp, ebx ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000123d29 : add ebp, ebx ; ret
0x0000000000101e82 : add ebp, ecx ; retf 0xfff8
0x0000000000188579 : add ebp, edi ; jmp rax
0x0000000000003276 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000012ae16 : add ebx, 0x10 ; call 0x127085
0x0000000000062964 : add ebx, 1 ; jmp 0x62938
0x0000000000062ad1 : add ebx, 1 ; jmp 0x62aa5
0x0000000000132192 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007b881 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f994d : add ebx, eax ; nop ; ret
0x000000000010394c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000456a1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000155d8b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000113828 : add ebx, eax ; nop word ptr [rax + rax] ; ret
0x00000000000f6d27 : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000038b6 : add ebx, ebp ; in al, 0xee ; jne 0x389c ; ret 0x975
0x00000000000401cd : add ebx, ebp ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000062966 : add ebx, ebp ; retf
0x000000000013f7f3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fa0df : add ebx, esi ; ret
0x00000000000a0427 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xa041c ; ret
0x0000000000097f7a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000010e05c : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000089bfd : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000088c1f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000163f6f : add ecx, dword ptr [rax + 0x39] ; retf 0x1f77
0x0000000000108a69 : add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000161ac5 : add ecx, dword ptr [rax + 9] ; retf
0x0000000000165562 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x000000000003a668 : add ecx, dword ptr [rax - 0x73] ; lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f0404 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00000000000a1ffa : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0xa2014 ; ret
0x0000000000097f7e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000026225 : add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x000000000002899c : add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000000272e1 : add ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x000000000013e614 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000025729 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x00000000000488bb : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ac9c7 : add ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0xef75
0x0000000000037959 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x00000000001628c1 : add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000162f07 : add ecx, dword ptr [rbp - 0x77] ; retf 0x2148
0x000000000013f562 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000dfa55 : add ecx, dword ptr [rbx + 0x39080374] ; retf 0x850f
0x000000000012356d : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x000000000009b3b4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000097f7b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000bc800 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000033248 : add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000009bbe0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000ae564 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000ae5c5 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000bccf9 : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000132409 : add ecx, dword ptr [rsp + 8] ; call rax
0x0000000000050909 : add ecx, eax ; mov eax, r9d ; ret
0x00000000000575d5 : add ecx, ebp ; ret 0xfff6
0x000000000008745f : add ecx, ebp ; retf
0x00000000000fc270 : add ecx, ebp ; retf 0xfffd
0x00000000001377fb : add ecx, ebx ; jmp r9
0x000000000015b072 : add ecx, ebx ; jmp rcx
0x00000000000f2934 : add ecx, ebx ; ret
0x00000000000f2638 : add ecx, ebx ; ret 0x3941
0x000000000008cf12 : add ecx, ecx ; jmp rcx
0x00000000000a04e4 : add ecx, esi ; jmp rcx
0x00000000001228ed : add edi, 0x10 ; jmp rcx
0x000000000011df9a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000125074 : add edi, 0x58 ; jmp rcx
0x0000000000124744 : add edi, 0x68 ; jmp rcx
0x0000000000121ce7 : add edi, 0xc8 ; jmp rcx
0x0000000000101730 : add edi, dword ptr [rcx] ; ret 0x830f
0x00000000000de114 : add edi, dword ptr [rcx] ; retf 0x840f
0x00000000000363ef : add edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x000000000018b4f9 : add edi, eax ; call qword ptr [rax]
0x0000000000113b45 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000f746d : add edi, ebp ; xor eax, eax ; ret
0x00000000001377f8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000032a4c : add edi, edx ; jmp rdi
0x0000000000035602 : add edi, esi ; ret 0
0x00000000001134d9 : add edx, 0xc ; cmp rdx, r8 ; jne 0x1134ca ; ret
0x00000000001150df : add edx, 1 ; syscall
0x0000000000090bd8 : add edx, eax ; jl 0x90c47 ; add rax, rdi ; ret
0x0000000000090be8 : add edx, eax ; jl 0x90c49 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000090c08 : add edx, eax ; jl 0x90c49 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000090c28 : add edx, eax ; jl 0x90c49 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000008cfe6 : add edx, eax ; jmp rdx
0x0000000000046222 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000d6729 : add edx, ebp ; jmp rdx
0x000000000003384f : add edx, ecx ; jmp 0x33862
0x0000000000043bf6 : add edx, ecx ; jmp 0x43c0a
0x0000000000043ee3 : add edx, ecx ; jmp 0x43efa
0x00000000000d5466 : add edx, ecx ; jmp 0xd53ff
0x00000000000d7839 : add edx, ecx ; jmp 0xd784b
0x00000000000d79eb : add edx, ecx ; jmp 0xd7981
0x0000000000032763 : add edx, edi ; jmp rdx
0x00000000000d6f53 : add edx, edx ; jmp rdx
0x00000000000450bc : add edx, esi ; cmp r9d, 0x2f ; jmp rdx
0x000000000005c279 : add edx, esi ; jmp rdx
0x00000000001627c1 : add edx, esp ; jmp rdx
0x0000000000123a05 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000112f11 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000009f439 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000105574 : add esi, dword ptr [rbp - 0x6b] ; mov rax, rdi ; ret
0x0000000000038d4c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000002ab46 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x00000000000ceb7f : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x0000000000113c18 : add esi, eax ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000021e5c : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000008cc96 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000043903 : add esi, eax ; jmp qword ptr [rax]
0x000000000002bf25 : add esi, eax ; jmp rsi
0x0000000000030935 : add esi, eax ; mov eax, dword ptr [r15 + 4] ; jmp 0x30907
0x000000000012a363 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000013f713 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000009ff85 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000131783 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000e77cc : add esi, ebx ; ret
0x0000000000081792 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000035819 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000015d4ac : add esi, edi ; fadd st(3) ; ret
0x00000000000a05ee : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000001139eb : add esi, edi ; mov eax, r8d ; ret
0x00000000001377f5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001a3d55 : add esi, esi ; call qword ptr [rdx]
0x00000000001a3add : add esi, esi ; jmp qword ptr [rbx]
0x00000000000d1b26 : add esi, esi ; ret
0x00000000000dfaa4 : add esi, esi ; ret 0xf01
0x00000000000781e6 : add esp, 0x10 ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000007b591 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002acb3 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003529e : add esp, 0x10 ; pop rbx ; ret
0x0000000000074a85 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009fd8d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006a86c : add esp, 0x1010 ; pop rbx ; ret
0x000000000006a6a6 : add esp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000034f02 : add esp, 0x110 ; pop rbx ; ret
0x00000000000353bf : add esp, 0x118 ; ret
0x00000000000e93d4 : add esp, 0x130 ; pop rbx ; ret
0x0000000000035642 : add esp, 0x140 ; pop rbx ; ret
0x0000000000034d99 : add esp, 0x148 ; ret
0x000000000010fcb0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001069bd : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000084336 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000826e3 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006f818 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006aeb6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000082726 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000004acd7 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038ce5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002e416 : add esp, 0x18 ; ret
0x0000000000044538 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007bd0d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000034a94 : add esp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000007babd : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000007bd46 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000002a5fb : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000349e5 : add esp, 0x20 ; pop rbx ; ret
0x0000000000021d1e : add esp, 0x28 ; jmp rax
0x000000000002192e : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011c8f9 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000041df5 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000341f3 : add esp, 0x28 ; ret
0x00000000000236cd : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b64a5 : add esp, 0x30 ; pop rbx ; ret
0x00000000001647b4 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000032f94 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000115743 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000041f83 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004a7e2 : add esp, 0x38 ; ret
0x0000000000123b19 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000356e2 : add esp, 0x40 ; pop rbx ; ret
0x00000000000fa068 : add esp, 0x40 ; ret
0x00000000000f3e6e : add esp, 0x418 ; ret
0x000000000004a682 : add esp, 0x450 ; pop rbx ; ret
0x00000000000c6252 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012649a : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000780d7 : add esp, 0x48 ; ret
0x000000000011c75e : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004510e : add esp, 0x50 ; pop rbx ; ret
0x000000000012ef64 : add esp, 0x520 ; pop rbx ; ret
0x000000000011f455 : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001150f5 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000e7e1a : add esp, 0x58 ; ret
0x00000000000a2114 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000edad2 : add esp, 0x60 ; pop rbx ; ret
0x00000000000eeaa6 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e7cff : add esp, 0x68 ; ret
0x00000000000a26db : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7f24 : add esp, 0x78 ; ret
0x0000000000081ac8 : add esp, 0x80 ; call 0x7ddd8
0x0000000000055373 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000007579f : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006b641 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000042573 : add esp, 0x80 ; pop rbx ; ret
0x000000000006b079 : add esp, 0x80 ; ret
0x00000000000376df : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000030ec5 : add esp, 0x850f0014 ; ret 0xfff4
0x0000000000130e8b : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000001262e7 : add esp, 0x88 ; ret
0x000000000012a855 : add esp, 0x90 ; pop rbx ; ret
0x00000000000354dd : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000127b6c : add esp, 0x98 ; ret
0x00000000000edd01 : add esp, 0xa0 ; pop rbx ; ret
0x0000000000035c66 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000035f66 : add esp, 0xa8 ; ret
0x000000000002a4d6 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000125fea : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000006b208 : add esp, 0xd0 ; pop rbx ; ret
0x000000000006cf94 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000042d81 : add esp, 0xd8 ; ret
0x00000000000b3bcf : add esp, 0xe0 ; pop rbx ; ret
0x000000000010233f : add esp, 0xf8 ; pop rbx ; pop rbp ; ret
0x0000000000086350 : add esp, 8 ; jmp rax
0x0000000000113a8d : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000050588 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000222a8 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006d6ee : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b34a : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000086402 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000031b91 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006f98a : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000724df : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000122bb3 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x00000000000f6f66 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000011f267 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000425a6 : add esp, 8 ; movzx eax, al ; ret
0x00000000001178ca : add esp, 8 ; movzx eax, ax ; ret
0x000000000011e7f9 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000012943c : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000240b9 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022a41 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033dc7 : add esp, 8 ; ret
0x000000000012eb31 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012aa44 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000023cb4 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001760eb : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000160bb3 : add esp, dword ptr [rsi + 0x41] ; and eax, 0x21487fff ; ret 0x8949
0x0000000000172b89 : add esp, ebp ; call qword ptr [rbx]
0x0000000000172b85 : add esp, ebp ; ljmp [rbx + 1] ; in al, dx ; call qword ptr [rbx]
0x00000000000c8cc8 : add qword ptr [r12 + r10 - 0x7c], r14 ; sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x00000000000b9ee2 : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000001a1c81 : add qword ptr [r8], r8 ; mov word ptr [rax - 0xb], fs ; jmp qword ptr [rcx]
0x00000000001a1cd1 : add qword ptr [r8], r8 ; or al, 0x61 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1ce5 : add qword ptr [r8], r8 ; sub byte ptr [rcx - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001a1f29 : add qword ptr [r8], r8 ; xor al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x00000000000e1153 : add qword ptr [r8], rax ; add dh, dh ; ret 0xf04
0x00000000001a1ac9 : add qword ptr [r8], rax ; and al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x00000000001a1b55 : add qword ptr [r8], rax ; call 0x221a10c1
0x00000000001a1911 : add qword ptr [r8], rax ; fcomp qword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x0000000000189a0d : add qword ptr [r8], rax ; in al, 0xf3 ; call rax
0x00000000001a1a79 : add qword ptr [r8], rax ; mov ah, 0x5d ; cmc ; jmp qword ptr [rcx]
0x00000000001a1b2d : add qword ptr [r8], rax ; mov al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x00000000001a1ab5 : add qword ptr [r8], rax ; or byte ptr [rsi - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a1975 : add qword ptr [r8], rax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000001a1961 : add qword ptr [r8], rax ; sub al, 0x5c ; cmc ; jmp qword ptr [rcx]
0x0000000000189a15 : add qword ptr [r8], rax ; xchg eax, esp ; in al, 0xf3 ; jmp rsp
0x00000000001a1b19 : add qword ptr [r8], rax ; xchg eax, esp ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x00000000001899d5 : add qword ptr [r8], rax ; xor al, 0xe2 ; jmp qword ptr [rax]
0x0000000000115b38 : add qword ptr [rax - 0x77], rcx ; or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000118cd4 : add qword ptr [rax - 0x77], rcx ; or ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0x95e9
0x0000000000024884 : add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x00000000001a1c1d : add qword ptr [rax], r8 ; add byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001a1b7d : add qword ptr [rax], r8 ; and byte ptr [rdi - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a1b91 : add qword ptr [rax], r8 ; cmp al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x00000000001a1c09 : add qword ptr [rax], r8 ; in al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x0000000000189a2d : add qword ptr [rax], r8 ; in al, 0xe4 ; jmp qword ptr [rax]
0x00000000001a1bb9 : add qword ptr [rax], r8 ; je 0x1a1c23 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1bb8 : add qword ptr [rax], r8 ; je 0x1a1c24 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1c31 : add qword ptr [rax], r8 ; sbb al, 0x60 ; cmc ; call qword ptr [rsi]
0x00000000001899bd : add qword ptr [rax], rax ; add al, 0xe2 ; jmp rsp
0x00000000001a1a65 : add qword ptr [rax], rax ; cwde ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000001a1a51 : add qword ptr [rax], rax ; jl 0x1a1ab9 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1a01 : add qword ptr [rax], rax ; or al, 0x5d ; cmc ; jmp qword ptr [rcx]
0x00000000001a1a29 : add qword ptr [rax], rax ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000001a1989 : add qword ptr [rax], rax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000001a19b1 : add qword ptr [rax], rax ; pushfq ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x0000000000089ef9 : add qword ptr [rbp + 0x38], r8 ; retf 0x3775
0x00000000001a52c0 : add qword ptr [rcx], 0 ; mov word ptr [rsi - 0xa], ss ; call rdx
0x0000000000105433 : add qword ptr [rcx], r8 ; jne 0x105428 ; mov rax, rdi ; ret
0x0000000000149e8d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000fc1d9 : add r11b, r13b ; ret
0x000000000013f7f2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000172aec : add r12b, r13b ; call rcx
0x0000000000030934 : add r14, rax ; mov eax, dword ptr [r15 + 4] ; jmp 0x30908
0x000000000013f782 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001a3c94 : add r14b, sil ; jmp qword ptr [rbx]
0x000000000013f712 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000363ee : add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x0000000000154d80 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151214 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018c74d : add r8b, byte ptr [r8] ; and al, 0x78 ; cli ; call rsp
0x000000000018c855 : add r8b, byte ptr [rax] ; adc al, 0x8a ; cli ; jmp rax
0x000000000018c6f5 : add r8b, byte ptr [rax] ; in al, 0x65 ; cli ; call qword ptr [rax]
0x000000000018c8a5 : add r8b, byte ptr [rax] ; xchg eax, esp ; xchg eax, esi ; cli ; jmp rax
0x000000000018c6ed : add r8b, byte ptr [rax] ; xor al, 0x5d ; cli ; jmp rax
0x00000000000e34c6 : add r8b, r13b ; ret
0x0000000000132408 : add r9, qword ptr [rsp + 8] ; call rax
0x00000000001377fa : add r9, r11 ; jmp r9
0x0000000000175ea9 : add r9b, bl ; retf 0xea91
0x000000000008d02e : add r9b, byte ptr [r8 - 0x77] ; clc ; ret
0x0000000000112eec : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x00000000001628c0 : add r9d, dword ptr [r13 - 0x77] ; retf
0x0000000000050908 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000158ab2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000149f13 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000105132 : add rax, 0x450f4800 ; ret 0x66c3
0x0000000000105327 : add rax, 0x450f4800 ; ret 0x90c3
0x00000000000444a0 : add rax, 1 ; pop rbx ; ret
0x00000000000b2ae0 : add rax, 1 ; ret
0x00000000000b2ad7 : add rax, 2 ; ret
0x00000000000b2af0 : add rax, 3 ; ret
0x0000000000021d78 : add rax, qword ptr [0] ; ret
0x0000000000021d77 : add rax, qword ptr fs:[0] ; ret
0x0000000000155bd0 : add rax, r8 ; vzeroupper ; ret
0x00000000001053b6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001592d7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000007de15 : add rax, rcx ; cmp rax, rdx ; jne 0x7de28 ; ret
0x000000000006b8da : add rax, rcx ; jmp rax
0x000000000005a365 : add rax, rcx ; mov ecx, 1 ; jmp rax
0x00000000000904a8 : add rax, rcx ; ret
0x000000000015966c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000155535 : add rax, rcx ; vzeroupper ; ret
0x0000000000155bcd : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000904a5 : add rax, rdi ; add rax, rcx ; ret
0x0000000000155532 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x0000000000090cc9 : add rax, rdi ; add rax, rsi ; ret
0x000000000004e49f : add rax, rdi ; jmp rax
0x000000000004e775 : add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000008cf35 : add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000008cf23 : add rax, rdi ; ret
0x000000000015543f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000159724 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x00000000001551e9 : add rax, rdi ; sub rax, rsi ; ret
0x00000000001556a9 : add rax, rdi ; vzeroupper ; ret
0x000000000002215f : add rax, rdx ; jmp rax
0x0000000000096265 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004d744 : add rax, rsi ; jmp rax
0x0000000000090ccc : add rax, rsi ; ret
0x0000000000036bca : add rbp, 8 ; mov qword ptr [r15], rax ; jmp 0x36b9e
0x000000000012ae15 : add rbx, 0x10 ; call 0x127086
0x000000000012ae14 : add rbx, 0x10 ; call 0x127087
0x0000000000062963 : add rbx, 1 ; jmp 0x62939
0x0000000000062ad0 : add rbx, 1 ; jmp 0x62aa6
0x0000000000033247 : add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000015b071 : add rcx, r11 ; jmp rcx
0x000000000008cf11 : add rcx, r9 ; jmp rcx
0x00000000000a04e3 : add rcx, rsi ; jmp rcx
0x00000000001228ec : add rdi, 0x10 ; jmp rcx
0x000000000011df99 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000125073 : add rdi, 0x58 ; jmp rcx
0x0000000000124743 : add rdi, 0x68 ; jmp rcx
0x0000000000121ce6 : add rdi, 0xc8 ; jmp rcx
0x0000000000032a4b : add rdi, r10 ; jmp rdi
0x0000000000113b44 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000001377f7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000d6f52 : add rdx, r10 ; jmp rdx
0x00000000001627c0 : add rdx, r12 ; jmp rdx
0x00000000000d6728 : add rdx, r13 ; jmp rdx
0x000000000008d0b6 : add rdx, r8 ; jmp rdx
0x0000000000046221 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000090bd7 : add rdx, rax ; jl 0x90c48 ; add rax, rdi ; ret
0x0000000000090bd6 : add rdx, rax ; jl 0x90c49 ; add rax, rdi ; ret
0x000000000008cfe5 : add rdx, rax ; jmp rdx
0x000000000003384e : add rdx, rcx ; jmp 0x33863
0x0000000000043bf5 : add rdx, rcx ; jmp 0x43c0b
0x0000000000043ee2 : add rdx, rcx ; jmp 0x43efb
0x00000000000d5465 : add rdx, rcx ; jmp 0xd5400
0x00000000000d7838 : add rdx, rcx ; jmp 0xd784c
0x00000000000d79ea : add rdx, rcx ; jmp 0xd7982
0x0000000000032762 : add rdx, rdi ; jmp rdx
0x00000000000450bb : add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x000000000005c278 : add rdx, rsi ; jmp rdx
0x0000000000123a04 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000112f10 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000105573 : add rsi, qword ptr [rbp - 0x6b] ; mov rax, rdi ; ret
0x000000000002bf24 : add rsi, r8 ; jmp rsi
0x000000000012a362 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000007b590 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002acb2 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003529d : add rsp, 0x10 ; pop rbx ; ret
0x000000000006a86b : add rsp, 0x1010 ; pop rbx ; ret
0x000000000006a6a5 : add rsp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000034f01 : add rsp, 0x110 ; pop rbx ; ret
0x00000000000353be : add rsp, 0x118 ; ret
0x00000000000e93d3 : add rsp, 0x130 ; pop rbx ; ret
0x0000000000035641 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000034d98 : add rsp, 0x148 ; ret
0x000000000010fcaf : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001069bc : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000084335 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000826e2 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006f817 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006aeb5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000082725 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000038ce4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002e415 : add rsp, 0x18 ; ret
0x0000000000044537 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007bd0c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000034a93 : add rsp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000007babc : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007bd45 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000002a5fa : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000349e4 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000021d1d : add rsp, 0x28 ; jmp rax
0x0000000000041df4 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000341f2 : add rsp, 0x28 ; ret
0x00000000000236cc : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b64a4 : add rsp, 0x30 ; pop rbx ; ret
0x00000000001647b3 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000041f82 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004a7e1 : add rsp, 0x38 ; ret
0x0000000000123b18 : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000356e1 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000fa067 : add rsp, 0x40 ; ret
0x00000000000f3e6d : add rsp, 0x418 ; ret
0x000000000004a681 : add rsp, 0x450 ; pop rbx ; ret
0x0000000000126499 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000780d6 : add rsp, 0x48 ; ret
0x000000000011c75d : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004510d : add rsp, 0x50 ; pop rbx ; ret
0x000000000012ef63 : add rsp, 0x520 ; pop rbx ; ret
0x00000000001150f4 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000e7e19 : add rsp, 0x58 ; ret
0x00000000000a2113 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000edad1 : add rsp, 0x60 ; pop rbx ; ret
0x00000000000eeaa5 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e7cfe : add rsp, 0x68 ; ret
0x00000000000a26da : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7f23 : add rsp, 0x78 ; ret
0x0000000000081ac7 : add rsp, 0x80 ; call 0x7ddd9
0x000000000007579e : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000042572 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b078 : add rsp, 0x80 ; ret
0x0000000000130e8a : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000001262e6 : add rsp, 0x88 ; ret
0x000000000012a854 : add rsp, 0x90 ; pop rbx ; ret
0x00000000000354dc : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000127b6b : add rsp, 0x98 ; ret
0x00000000000edd00 : add rsp, 0xa0 ; pop rbx ; ret
0x0000000000035c65 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000035f65 : add rsp, 0xa8 ; ret
0x0000000000125fe9 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000006b207 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000006cf93 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000042d80 : add rsp, 0xd8 ; ret
0x00000000000b3bce : add rsp, 0xe0 ; pop rbx ; ret
0x000000000010233e : add rsp, 0xf8 ; pop rbx ; pop rbp ; ret
0x000000000008634f : add rsp, 8 ; jmp rax
0x0000000000113a8c : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000050587 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000222a7 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006d6ed : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b349 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000086401 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000031b90 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006f989 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000724de : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f6f65 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000011f266 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000425a5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001178c9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000011e7f8 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000012943b : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000022a40 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033dc6 : add rsp, 8 ; ret
0x000000000012eb30 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012aa43 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000023cb3 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001a3a50 : add sil, sil ; jmp qword ptr [rbx]
0x00000000000f9933 : add word ptr [rax], 1 ; ret
0x000000000018ca4d : add word ptr [rax], ax ; add al, 0xbb ; cli ; jmp qword ptr [rax]
0x00000000001a35e1 : add word ptr [rax], ax ; cld ; retf 0xfff5
0x0000000000189dfd : add word ptr [rax], ax ; test byte ptr [rbp - 0xb], dl ; jmp qword ptr [rax]
0x00000000000f969a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000034133 : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000341ab : addps xmm0, xmm0 ; ret
0x0000000000034132 : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000341aa : addsd xmm0, xmm0 ; ret
0x0000000000034480 : addss xmm0, xmm0 ; ret
0x0000000000098731 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000161ad3 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret
0x00000000000e2ca6 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000006eb0 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x00000000000a1cf6 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a35dc : and al, 0 ; add byte ptr [rax], al ; push -0x3fffe9a ; retf 0xfff5
0x00000000001a91c8 : and al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x0000000000018b80 : and al, 0 ; add byte ptr [rax], al ; retf
0x00000000000b62d1 : and al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018f469 : and al, 0 ; add byte ptr [rbp + rbx*2 - 0x16], ah ; jmp qword ptr [rcx]
0x0000000000093525 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018c2e0 : and al, 0 ; cli ; jmp qword ptr [rax]
0x0000000000088c32 : and al, 0 ; je 0x88c48 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104d33 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x00000000000e5d54 : and al, 0x10 ; call 0xe2764
0x000000000012c71b : and al, 0x10 ; call 0xe8994
0x000000000011c370 : and al, 0x10 ; call qword ptr [rax]
0x000000000011d45f : and al, 0x10 ; call rax
0x000000000013285b : and al, 0x10 ; call rdx
0x0000000000033b87 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000118e87 : and al, 0x10 ; mov eax, 0x81 ; syscall
0x00000000000ed539 : and al, 0x10 ; mov eax, r10d ; syscall
0x00000000000ff076 : and al, 0x10 ; mov edi, 0x2000004 ; call rcx
0x000000000008d003 : and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000f2ffb : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000b36f3 : and al, 0x10 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000011d43e : and al, 0x10 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000074e52 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000036810 : and al, 0x10 ; mov rdi, rbp ; call r12
0x0000000000129733 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000fef65 : and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x00000000000eeaed : and al, 0x14 ; syscall
0x000000000008cfb5 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000001026a1 : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000008cf33 : and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x0000000000082cd3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000016509e : and al, 0x18 ; call 0x212cc
0x00000000000e885b : and al, 0x18 ; call 0xc52c4
0x0000000000021a83 : and al, 0x18 ; call rax
0x0000000000086a17 : and al, 0x18 ; jmp 0x869e1
0x000000000011cdc6 : and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000a2314 : and al, 0x18 ; lea rcx, [rax + 4] ; call rbx
0x0000000000103306 : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000e7f8b : and al, 0x18 ; mov eax, 0x101 ; syscall
0x00000000000eeae9 : and al, 0x18 ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000805a1 : and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rsi
0x0000000000022888 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000074d6d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000011bf0a : and al, 0x18 ; mov rdi, rbp ; call r14
0x00000000000a29ff : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000132856 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000000a2c77 : and al, 0x18 ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000011c36b : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000b610d : and al, 0x18 ; xor esi, esi ; mov rdx, r12 ; call 0xb2b89
0x000000000011c6b3 : and al, 0x1c ; call qword ptr [rax]
0x000000000011c8ba : and al, 0x20 ; call qword ptr [rax]
0x0000000000024bd2 : and al, 0x20 ; call r15
0x0000000000027415 : and al, 0x20 ; call rax
0x00000000000a26a0 : and al, 0x20 ; call rbx
0x00000000001221f3 : and al, 0x20 ; call rdx
0x00000000000f6cac : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; syscall
0x00000000000c0765 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000018b648 : and al, 0x21 ; clc ; jmp rsp
0x0000000000044bcc : and al, 0x24 ; call rax
0x000000000010b305 : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x10b2d7
0x000000000010b304 : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x10b2d8
0x0000000000121b75 : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x121b47
0x0000000000121b74 : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x121b48
0x0000000000174c24 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000082723 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000000a24ce : and al, 0x28 ; call r12
0x000000000011d4c4 : and al, 0x28 ; call rax
0x0000000000122000 : and al, 0x28 ; call rcx
0x00000000000a21b8 : and al, 0x28 ; lea rcx, [rax + 1] ; call rbx
0x00000000001347e3 : and al, 0x28 ; mov qword ptr [rsp], rax ; call 0x21238
0x00000000001347e2 : and al, 0x28 ; mov qword ptr [rsp], rax ; call 0x21239
0x0000000000024bcd : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000834a3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000000a2ba9 : and al, 0x28 ; mov rdi, rbp ; call rbx
0x00000000000f6cb1 : and al, 0x28 ; syscall
0x000000000018ccc0 : and al, 0x2f ; std ; jmp qword ptr [rax]
0x00000000000af014 : and al, 0x30 ; call r12
0x0000000000025e0c : and al, 0x30 ; call r14
0x0000000000025ca1 : and al, 0x30 ; call r15
0x0000000000025571 : and al, 0x30 ; call rbx
0x00000000000ed478 : and al, 0x30 ; mov eax, 0x10 ; syscall
0x000000000012a81f : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000a28ae : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000010bb25 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x10baf7
0x000000000010bb24 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x10baf8
0x00000000001108a5 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x110877
0x00000000001108a4 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x110878
0x0000000000121825 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x1217f7
0x0000000000121824 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x1217f8
0x00000000000fc1d5 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0xfc1a7
0x00000000000fc1d4 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0xfc1a8
0x00000000000fdab5 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0xfda87
0x00000000000fdab4 : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0xfda88
0x0000000000024f7d : and al, 0x38 ; call r14
0x0000000000026c58 : and al, 0x38 ; call r15
0x0000000000026830 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025e07 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000025c9c : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002556c : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000005dd2a : and al, 0x39 ; ret
0x0000000000126e8d : and al, 0x3a ; call qword ptr [rax]
0x000000000011cdcb : and al, 0x40 ; call qword ptr [rax]
0x00000000000278cd : and al, 0x40 ; call r15
0x0000000000027410 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000024f78 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c53 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000e7d3d : and al, 0x44 ; mov dword ptr [rsp + 8], edx ; call 0x103fc8
0x000000000007b5b8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003469c : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000349e3 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000126d82 : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003486b : and al, 0x48 ; add esp, 0x28 ; ret
0x0000000000164c1f : and al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000000001648ca : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000000fa005 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000fa066 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000001320f7 : and al, 0x48 ; add esp, 0x48 ; ret
0x00000000001179db : and al, 0x48 ; add esp, 8 ; ret
0x00000000000287b6 : and al, 0x48 ; call r14
0x0000000000026066 : and al, 0x48 ; call r15
0x0000000000117e7e : and al, 0x48 ; mov dword ptr [rbp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131cfd : and al, 0x48 ; mov eax, dword ptr [rax + 0x170] ; jmp rax
0x00000000000a1cc4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001253c3 : and al, 0x48 ; mov edi, ebp ; call rbx
0x00000000000791c4 : and al, 0x48 ; mov edi, ebx ; call rax
0x00000000000278c8 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000001130eb : and al, 0x49 ; mov ecx, esp ; jmp 0x1130c1
0x00000000001131cb : and al, 0x49 ; mov ecx, esp ; jmp 0x113199
0x00000000000ecfbb : and al, 0x49 ; mov edx, ecx ; mov eax, 0x146 ; syscall
0x000000000010fa53 : and al, 0x4c ; mov edi, ebp ; call r12
0x000000000016509a : and al, 0x4d ; mov esi, dword ptr [rsp + 0x18] ; call 0x212d0
0x00000000000287b1 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000026061 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000084454 : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001a1acc : and al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x0000000000103281 : and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000c04e3 : and al, 0x60 ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000012f528 : and al, 0x60 ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010b306 : and al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x10b2d6
0x0000000000121b76 : and al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x121b46
0x00000000000a78ea : and al, 0x70 ; sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x35], cl ; retf 0xcba
0x00000000000fc76b : and al, 0x74 ; adc bl, byte ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000008443f : and al, 0x74 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000038a88 : and al, 0x75 ; add eax, 0x18c48348 ; ret
0x0000000000042b7d : and al, 0x75 ; fcomi st(3) ; ret
0x000000000018be88 : and al, 0x76 ; stc ; jmp qword ptr [rax]
0x000000000018c750 : and al, 0x78 ; cli ; call rsp
0x0000000000195b5c : and al, 0x78 ; out dx, al ; call qword ptr [rdx]
0x00000000000b3698 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000f8efb : and al, 0x83 ; ret 0x4901
0x000000000007bc8b : and al, 0x83 ; retf 0x4c01
0x00000000000ab7c3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x0000000000029fdd : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d5517 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3145
0x00000000000a5b88 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x000000000007db63 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000002aabd : and al, 0x89 ; ret
0x00000000000bfac0 : and al, 0x89 ; ret 0x8b48
0x0000000000112094 : and al, 0x8b ; jge 0x112041 ; mov eax, 3 ; syscall
0x0000000000116a30 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000019ea1c : and al, 0x91 ; hlt ; jmp qword ptr [rcx]
0x00000000000abe96 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000d80f3 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000025301 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000abff1 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000127818 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000024e1b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000000975 : and al, 0xa0 ; add byte ptr [rax], al ; ret
0x0000000000188258 : and al, 0xa0 ; out dx, al ; inc dword ptr [rax] ; ret 0
0x00000000001627be : and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x000000000002a3ad : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x87 ; retf
0x00000000000e6435 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002a0b3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000188b20 : and al, 0xb8 ; out dx, eax ; jmp rsp
0x000000000018c060 : and al, 0xb8 ; stc ; jmp rsp
0x000000000003529b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c44b5 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c43f5 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000f7d94 : and al, 0xc ; call 0x104024
0x00000000000f7d93 : and al, 0xc ; call 0x104025
0x00000000000e870b : and al, 0xc ; mov eax, 0x48 ; syscall
0x000000000007b5a2 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x78068
0x000000000008cf94 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x0000000000115b3f : and al, 0xc2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000002229 : and al, 0xc7 ; jno 0x227a ; ret 0x1dd4
0x00000000001346cf : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x25 ; retf 0xffee
0x000000000018b208 : and al, 0xcb ; idiv edi ; sbb dl, cl ; add dword ptr [rax], eax ; push rsp ; retf
0x000000000019dc9c : and al, 0xd ; add dword ptr [rax], eax ; mov al, 0xd ; hlt ; call qword ptr [rcx]
0x0000000000002dfe : and al, 0xd7 ; cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x00000000001a665c : and al, 0xd7 ; idiv bh ; ret 0
0x0000000000034614 : and al, 0xd8 ; ret
0x000000000019694c : and al, 0xd9 ; out dx, al ; call qword ptr [rdx]
0x000000000008d082 : and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x000000000008d167 : and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000007190c : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003460e : and al, 0xe0 ; movdqa xmm0, xmmword ptr [rsp - 0x28] ; ret
0x0000000000188480 : and al, 0xe6 ; out dx, al ; jmp rsp
0x0000000000033c9c : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000055d5d : and al, 0xe8 ; int 0xc3
0x00000000001081b2 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x000000000004a19c : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x0000000000033bea : and al, 0xe8 ; ret
0x0000000000081ddf : and al, 0xe8 ; retf
0x00000000001347e8 : and al, 0xe8 ; retf 0xffee
0x000000000002a625 : and al, 0xeb ; ret 0x1f0f
0x0000000000046fec : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008d061 : and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000008d146 : and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b84c4 : and al, 0xf ; ret 0x4c80
0x0000000000035cdf : and al, 0xf ; xchg eax, ebp ; ret 0xd521
0x00000000000c9fc8 : and al, 0xf ; xchg eax, esp ; ror byte ptr [rcx + rdi - 0x31], 0xf ; xchg eax, esp ; ret 0xd009
0x00000000000d4bca : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000d593d : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000033c56 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000033be4 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001646cd : and al, 0xf0 ; movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x00000000000b3176 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000b317c : and al, 0xf0 ; ret
0x000000000008d049 : and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000008cf7c : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b9374 : and al, 0xf6 ; ret
0x000000000018ade1 : and al, 0xf7 ; call rax
0x0000000000046fa1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000046fa7 : and al, 0xf8 ; ret
0x000000000008d02b : and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000008cf5e : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000186375 : and al, 0xfb ; call qword ptr [rax - 0x1f0004db]
0x0000000000046f5b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000046f61 : and al, 0xfc ; ret
0x00000000000e8a21 : and al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000d0058 : and al, 4 ; add dword ptr [rbx + rcx - 0xa], esi ; ret
0x00000000000385a9 : and al, 4 ; jne 0x385ba ; add rsp, 0x18 ; ret
0x00000000000385a8 : and al, 4 ; jne 0x385bb ; add rsp, 0x18 ; ret
0x000000000009bd28 : and al, 7 ; add byte ptr [rax], al ; ret
0x000000000006b853 : and al, 8 ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x41 ; ret 0
0x0000000000025fb1 : and al, 8 ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x0000000000043faa : and al, 8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000ef47d : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002e42f : and al, 8 ; add rsp, 0x18 ; ret
0x000000000007baed : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000e7d41 : and al, 8 ; call 0x103fc4
0x00000000000e7d76 : and al, 8 ; call 0x104024
0x00000000000e7d75 : and al, 8 ; call 0x104025
0x000000000011e5fa : and al, 8 ; call qword ptr [rax]
0x00000000000364fe : and al, 8 ; call r12
0x0000000000036a3b : and al, 8 ; call rax
0x000000000011d443 : and al, 8 ; call rcx
0x00000000000805a6 : and al, 8 ; call rsi
0x0000000000033d52 : and al, 8 ; fadd st(0) ; ret
0x0000000000033cda : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000033c26 : and al, 8 ; fsubrp st(1) ; ret
0x0000000000113e93 : and al, 8 ; jne 0x113ed1 ; add rsp, 0x38 ; ret
0x0000000000114d3d : and al, 8 ; mov dword ptr [rsp], eax ; call 0x21027
0x000000000004989b : and al, 8 ; mov dword ptr [rsp], r9d ; call 0x45b18
0x00000000000ec73d : and al, 8 ; mov eax, 0x10f ; syscall
0x00000000000f6d18 : and al, 8 ; mov eax, 0x38 ; syscall
0x000000000010481a : and al, 8 ; mov eax, 0xe6 ; syscall
0x00000000000369c0 : and al, 8 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000006dd15 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000801d5 : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000080429 : and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000073db0 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000010fe24 : and al, 8 ; mov rdi, rbp ; call r12
0x00000000000363f1 : and al, 8 ; mov rsi, r15 ; call r14
0x0000000000033b8b : and al, 8 ; ret
0x00000000000f1965 : and al, 8 ; syscall
0x00000000000c4594 : and al, 8 ; test rax, rax ; je 0xc45a4 ; call rax
0x00000000000c4593 : and al, 8 ; test rax, rax ; je 0xc45a5 ; call rax
0x000000000011cbce : and al, 8 ; xor eax, eax ; call 0x129626
0x000000000011cbcd : and al, 8 ; xor eax, eax ; call 0x129627
0x000000000012a824 : and al, 8 ; xor eax, eax ; call rdx
0x0000000000080528 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000019449d : and al, byte ptr [rax] ; add al, dl ; sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000034b26 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000341ee : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000033e04 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c43be : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000936ce : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f6f21 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000010df40 : and al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000018c0b5 : and al, byte ptr [rdx] ; add byte ptr [rsi + rdi*4 - 7], al ; call rsp
0x000000000009aefa : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000b8168 : and al, ch ; ret 0xf68e
0x00000000001176f7 : and al, ch ; retf
0x000000000002dc02 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002dc22 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002db62 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dbe2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002db02 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dba2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002db42 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002db82 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000019b698 : and bh, ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b697 ; call rsi
0x000000000019b698 : and bh, ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b698 ; call rsi
0x0000000000056fd4 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000179cdc : and bh, al ; hlt ; call qword ptr [rsi]
0x000000000000306c : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000179b84 : and bh, byte ptr [rsp + rsi*8] ; call qword ptr [rax]
0x000000000009c307 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000001863a9 : and bl, bh ; call qword ptr [rax]
0x000000000006c5b3 : and bl, ch ; retf 0x2e66
0x000000000010408f : and bl, dh ; ret
0x000000000019a298 : and bl, dl ; add byte ptr [rax], al ; adc al, 0x98 ; int1 ; jmp qword ptr [rcx]
0x0000000000074049 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000074079 : and byte ptr [r8 + 1], r9b ; ret
0x00000000001161df : and byte ptr [r8 - 0x7d], cl ; ret
0x000000000007fb67 : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000009f756 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b3e66 : and byte ptr [r9 + 0x5d], r8b ; pop r14 ; pop r15 ; ret
0x0000000000073fde : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000f6b7d : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x0000000000155546 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000084315 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000ecdda : and byte ptr [rax + 0x39], cl ; ret
0x0000000000036798 : and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000001591ea : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000125114 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000001556bc : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000004ae4c : and byte ptr [rax + 1], cl ; ret
0x0000000000155b36 : and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000090c06 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000096138 : and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000009625d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000009641e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000124687 : and byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c0766 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000072aaa : and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x000000000006dece : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f377f : and byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x00000000000fe670 : and byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000855ab : and byte ptr [rax - 0x77], cl ; jae 0x855c1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed199 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000fe597 : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000043988 : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000012f812 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000d8d91 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001085ce : and byte ptr [rax - 0x77], cl ; ret 0xec75
0x00000000000dec3b : and byte ptr [rax - 0x77], cl ; retf 0x1a74
0x000000000011bc65 : and byte ptr [rax - 0x77], cl ; retf 0x1c74
0x000000000011bc81 : and byte ptr [rax - 0x77], cl ; retf 0xe975
0x000000000003a9b0 : and byte ptr [rax - 0x77], cl ; retf 0xea75
0x00000000000dec55 : and byte ptr [rax - 0x77], cl ; retf 0xed75
0x00000000000c227c : and byte ptr [rax - 0x77], cl ; retf 0xee75
0x000000000002c3b4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c3c8 ; call rax
0x0000000000023ba6 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000001558f7 : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000efb96 : and byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007fb68 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000002ded : and byte ptr [rax - 0xc0713e4], bh ; ret
0x0000000000078c52 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000001860a4 : and byte ptr [rax - 3], ah ; jmp qword ptr [rax + 0x20fffd60]
0x0000000000186430 : and byte ptr [rax - 5], bl ; jmp rax
0x000000000019e660 : and byte ptr [rax - 7], ah ; call qword ptr [rax]
0x000000000018c054 : and byte ptr [rax], 2 ; add byte ptr [rax + rdi*4], dl ; stc ; call rax
0x0000000000002ddd : and byte ptr [rax], ah ; or edx, ebp ; clc ; ret
0x00000000000722f6 : and byte ptr [rax], al ; add al, ch ; ret 0xfaef
0x00000000000d47d5 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x211e6
0x00000000000c5ca3 : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000005a1a6 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001a9b20 : and byte ptr [rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000000a05ca : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c5bc8 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e89c1 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000009391e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001643ee : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xd231
0x0000000000163d63 : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff31
0x0000000000186324 : and byte ptr [rax], bh ; sti ; jmp qword ptr [rax]
0x0000000000186ff8 : and byte ptr [rax], bl ; std ; jmp qword ptr [rax + 0x20fffd19]
0x000000000009d44c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000009f757 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001769c8 : and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000b4489 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5fd : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007404a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000001864fc : and byte ptr [rbx + rdi*8 - 1], bl ; adc byte ptr [rsi - 5], bl ; jmp rax
0x00000000001a7298 : and byte ptr [rbx - 0x1a9bffff], ah ; sti ; jmp qword ptr [rdx]
0x0000000000186498 : and byte ptr [rbx - 5], bl ; inc dword ptr [rax] ; pop rbp ; sti ; jmp rax
0x000000000017c910 : and byte ptr [rbx - 6], bh ; call rax
0x000000000017c90c : and byte ptr [rbx - 6], bh ; jmp qword ptr [rax]
0x0000000000003eb9 : and byte ptr [rbx], al ; retf 0x8aca
0x00000000001862a8 : and byte ptr [rbx], bh ; sti ; jmp qword ptr [rax]
0x000000000015a8ea : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000187000 : and byte ptr [rbx], bl ; std ; jmp qword ptr [rax + 0x20fffd1c]
0x000000000004b3aa : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000040af9 : and byte ptr [rcx + 0x39], cl ; ret
0x00000000000b3e67 : and byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x0000000000001dac : and byte ptr [rcx + 0x72b02084], bh ; retf
0x00000000000efba7 : and byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x5c3c
0x000000000019db98 : and byte ptr [rcx + rax], cl ; add ah, dh ; or esi, esp ; jmp qword ptr [rcx]
0x00000000000f6cad : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; syscall
0x0000000000046fe9 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000007bd0f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000038098 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x00000000000703db : and byte ptr [rcx - 0x3b7cb7d7], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000002213 : and byte ptr [rcx - 0x4273d1ae], ah ; out dx, al ; nop ; retf 0x3844
0x000000000003ba5e : and byte ptr [rcx - 0x77], cl ; ret
0x0000000000073fdf : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000001860ac : and byte ptr [rcx - 3], ah ; jmp qword ptr [rax + 0x20fffd61]
0x000000000019f098 : and byte ptr [rcx], ah ; add dword ptr [rax], eax ; lodsb al, byte ptr fs:[rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000019eff1 : and byte ptr [rcx], al ; add byte ptr [rax + rbp*4 - 0xc], bl ; call rsp
0x00000000000f8641 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000019f05d : and byte ptr [rcx], al ; add byte ptr [rax], dl ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000000c45dc : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000001862a4 : and byte ptr [rcx], bh ; sti ; jmp qword ptr [rax]
0x0000000000107ff3 : and byte ptr [rcx], ch ; retf 0x37e9
0x0000000000076d23 : and byte ptr [rcx], ch ; retf 0x40e9
0x0000000000186fd0 : and byte ptr [rcx], cl ; std ; jmp qword ptr [rax + 0x20fffd0a]
0x00000000001028b6 : and byte ptr [rdi + rax + 0x5b], dh ; ret
0x00000000001a1b80 : and byte ptr [rdi - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000186fd8 : and byte ptr [rdi*8 - 0x2f25f01], cl ; jmp qword ptr [rax]
0x000000000000e978 : and byte ptr [rdi], bl ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e6850 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000a01f1 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000002dbe5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000011daef : and byte ptr [rdi], cl ; retf 0x5089
0x0000000000033aa3 : and byte ptr [rdi], cl ; retf 0xd289
0x0000000000186fe0 : and byte ptr [rdi], cl ; std ; jmp qword ptr [rax + 0x20fffd10]
0x00000000000f47a8 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000110f27 : and byte ptr [rdi], cl ; test byte ptr [rdx - 0x77000000], ah ; retf 0x8d48
0x000000000009bff9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000006d11b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000015e710 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000e2fcb : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000efb73 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8040
0x00000000001863f4 : and byte ptr [rdx - 5], bl ; inc dword ptr [rax] ; pop rsp ; sti ; jmp rax
0x000000000018c05d : and byte ptr [rdx], al ; add byte ptr [rax + rdi*4], ah ; stc ; jmp rsp
0x000000000018c055 : and byte ptr [rdx], al ; add byte ptr [rax + rdi*4], dl ; stc ; call rax
0x0000000000195341 : and byte ptr [rdx], al ; push 0x44180e0a ; ret
0x0000000000186328 : and byte ptr [rdx], bh ; sti ; jmp qword ptr [rax]
0x000000000000031b : and byte ptr [rdx], bl ; adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x0000000000186214 : and byte ptr [rdx], dh ; sti ; inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x0000000000186fe8 : and byte ptr [rdx], dl ; std ; jmp qword ptr [rax + 0x20fffd13]
0x0000000000186ff0 : and byte ptr [rip + 0x16a0fffd], dl ; std ; jmp qword ptr [rax]
0x000000000015b10a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000034a96 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000554e8 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xfee8
0x0000000000191981 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002cc2 : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x000000000017a544 : and byte ptr [rsi - 0x69df000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a594 : and byte ptr [rsi - 0x69df000b], dl ; cmc ; jmp qword ptr [rbx]
0x000000000017a53c : and byte ptr [rsi - 0x6a40000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a580 : and byte ptr [rsi - 0x6a80000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a598 : and byte ptr [rsi - 0x6adc000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a5dc : and byte ptr [rsi - 0x6af6000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a5ec : and byte ptr [rsi - 0x6b10000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a610 : and byte ptr [rsi - 0x6b31000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a618 : and byte ptr [rsi - 0x6b52000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a65c : and byte ptr [rsi - 0x6b89000b], dl ; cmc ; jmp qword ptr [rax]
0x000000000017a66c : and byte ptr [rsi - 0x6ba3000b], dl ; cmc ; jmp qword ptr [rax]
0x0000000000187008 : and byte ptr [rsi], bl ; std ; call rax
0x00000000000f04d9 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000b2ad2 : and ch, 0xf ; je 0xb2af9 ; add rax, 2 ; ret
0x00000000000a0588 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000015951b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000155943 : and ch, al ; std ; xlatb ; ret
0x00000000000b2abd : and cl, 0xf ; je 0xb2ae5 ; ret
0x0000000000003a8e : and cl, ah ; ret
0x0000000000185f24 : and cl, al ; cld ; inc eax ; ret 0xfffc
0x000000000007adb2 : and cl, byte ptr [rax + 0x39] ; retf
0x0000000000024807 : and cl, byte ptr [rax - 0x77] ; retf 0x8b48
0x0000000000130fb4 : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000feda3 : and cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000087662 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186854 : and cl, byte ptr [rcx - 0x775d0005] ; sti ; call qword ptr [rdx]
0x0000000000090dfd : and cl, byte ptr [rcx - 0x77] ; ret
0x00000000000104f0 : and cl, cl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001aa098 : and cl, dl ; add dword ptr [rax], eax ; sal bh, cl ; call rax
0x00000000000c489d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000017a054 : and dh, al ; hlt ; jmp qword ptr [rax]
0x000000000017a058 : and dh, al ; hlt ; lcall [rax - 0x3a] ; hlt ; call qword ptr [rax]
0x00000000001941a9 : and dh, ch ; call rsp
0x000000000018a299 : and dh, dh ; call rsp
0x00000000001787d4 : and dh, dl ; sti ; inc dword ptr [rax - 0x29] ; sti ; jmp rax
0x0000000000056fd3 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000017b82d : and dl, bh ; jmp qword ptr [rax]
0x000000000017b829 : and dl, bh ; push qword ptr [rax] ; and dl, bh ; jmp qword ptr [rax]
0x0000000000131ef6 : and dword ptr [rax - 0x75], ecx ; add eax, 0x2875aa ; call qword ptr [rax]
0x0000000000086a83 : and dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000012c5bf : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004d7f7 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000001481a9 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000007ab0 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e89f1 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001447ee : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000176742 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000ffee9 : and dword ptr [rbp - 0x77], ecx ; ret
0x00000000001180d3 : and dword ptr [rbx - 0x43c63ec4], ecx ; ret
0x00000000000727ec : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000072848 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016483e : and dword ptr [rcx + 0x39], ecx ; retf
0x000000000019f0e9 : and dword ptr [rcx], eax ; add ah, dl ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000019f0fd : and dword ptr [rcx], eax ; add al, dh ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000189315 : and dword ptr [rcx], eax ; add byte ptr [rax + rax*8 - 0xf], ah ; jmp rax
0x000000000019f085 : and dword ptr [rcx], eax ; add byte ptr [rax - 0x54], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000f6ee4 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edx, 8 ; syscall
0x000000000019f099 : and dword ptr [rcx], eax ; add byte ptr [rsp + rbp*4 - 0xc], ah ; jmp qword ptr [rcx]
0x00000000000cd3c3 : and dword ptr [rcx], esi ; rol byte ptr [rbp + 0x39], 0xc2 ; je 0xcd3e9 ; ret
0x0000000000132a36 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00000000000780f0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000358f8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000007cf1e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x000000000015a1bb : and dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000001737f9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009be2b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000176741 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001481a8 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000021d7b : and eax, 0 ; ret
0x00000000001044a4 : and eax, 0x10 ; ret
0x000000000007ce7a : and eax, 0x100339a ; ret
0x00000000000ed303 : and eax, 0x100f ; ret
0x000000000007bffa : and eax, 0x1f0fc35b ; add al, ch ; ret
0x0000000000033d9a : and eax, 0x200 ; ret
0x0000000000160bb6 : and eax, 0x21487fff ; ret 0x8949
0x0000000000160df9 : and eax, 0x21487fff ; ret 0xcae9
0x00000000001635cd : and eax, 0x21487fff ; retf 0x8948
0x00000000001049f7 : and eax, 0x28 ; jne 0x104a20 ; leave ; ret
0x0000000000046bfc : and eax, 0x28 ; jne 0x46c46 ; leave ; ret
0x000000000012f67b : and eax, 0x2840c0 ; ret
0x0000000000021d18 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008634a : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021a9d : and eax, 0x30 ; call rax
0x00000000000377c2 : and eax, 0x30 ; call rdx
0x000000000002e1f4 : and eax, 0x30 ; jmp rax
0x0000000000044bc5 : and eax, 0x30 ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000037896 : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000002ea2d : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000006f0da : and eax, 0x30 ; mov rdi, rbp ; call rax
0x00000000000a050d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000002152c : and eax, 0x3ff ; mov r10d, eax ; jmp 0x21502
0x00000000000a0558 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000007e358 : and eax, 0x518d4800 ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000001654f3 : and eax, 0x5be17500 ; ret
0x000000000002dcf2 : and eax, 0x7f ; ret
0x00000000000a0603 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000000a05a7 : and eax, 0x7ff80000 ; ret
0x0000000000034174 : and eax, 0x80 ; ret
0x00000000000342b7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x00000000000774a2 : and eax, 0x804 ; ret
0x000000000011794a : and eax, 0x8348d889 ; ret
0x00000000000cecfb : and eax, 0x8348fff5 ; ret
0x0000000000104047 : and eax, 0xc ; cmp eax, 4 ; je 0x104058 ; ret
0x0000000000104210 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000df814 : and eax, 0xf ; ret
0x0000000000087542 : and eax, 0xf48000d ; ret 0x66c3
0x000000000011ed58 : and eax, 0xfd83fff0 ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x00000000001659c5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000f6b26 : and eax, 0xfffff000 ; or eax, edx ; ret
0x00000000001083bd : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000108358 : and eax, 0xffffff ; ret
0x0000000000112f33 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000757b7 : and eax, 1 ; mov edx, eax ; jmp 0x75771
0x00000000000758a7 : and eax, 1 ; mov edx, eax ; jmp 0x75861
0x00000000000756f8 : and eax, 1 ; mov edx, eax ; mov eax, edx ; ret
0x000000000002dca2 : and eax, 1 ; ret
0x00000000000d1a80 : and eax, 2 ; add eax, 8 ; ret
0x000000000002db22 : and eax, 2 ; movzx eax, ax ; ret
0x000000000004569c : and eax, 2 ; sub eax, 1 ; ret
0x00000000000f749f : and eax, 3 ; ret
0x000000000002dbc2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002dae2 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034494 : and eax, 8 ; ret
0x00000000000c446e : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000144645 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a39bf : and eax, dword ptr [rbp - 0x7b] ; in al, 0x75 ; ret
0x00000000000f76b1 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000149fb9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000002dc7 : and eax, ebp ; clc ; ret
0x0000000000033b0f : and eax, ecx ; ret
0x000000000018b649 : and eax, edi ; jmp rsp
0x00000000000f6b7f : and eax, edi ; or rax, rsi ; ret
0x00000000001650a1 : and eax, edx ; jmp 0x1650a5
0x0000000000033f06 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000033e42 : and eax, edx ; ret
0x0000000000033e90 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002debd : and eax, esi ; ret
0x00000000000ebeb2 : and ebp, eax ; pop rax ; retf 0xffff
0x000000000006d0e5 : and ebp, eax ; retf
0x00000000000727ed : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000072849 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000103fe2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x103ff5 ; ret
0x0000000000174ef4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000038a42 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000d1b4f : and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x000000000015c685 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000015bdb8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000756b0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000f458a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x00000000000fe483 : and ecx, dword ptr [rcx + 0x39] ; ret 0x870f
0x00000000000fd71d : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x0000000000117151 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000f0b0a : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000000f0b19 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000002dd02 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000a1ff8 : and edx, 3 ; mov rax, rdi ; jne 0xa2016 ; ret
0x000000000017a59c : and edx, dword ptr [rbp - 0x69df000b] ; cmc ; jmp qword ptr [rax]
0x00000000000f1f09 : and edx, dword ptr [rsp + rbp] ; add rsp, 8 ; ret
0x0000000000002cad : and edx, esp ; bswap ebx ; clc ; ret
0x00000000001631d1 : and esi, 0x9487fff ; ret 0x8b48
0x00000000000b47f3 : and esi, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; leave ; retf 0xfff6
0x00000000000b4869 : and esi, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; push rbx ; retf 0xfff6
0x000000000013284a : and esi, eax ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000001a4525 : and esi, esi ; call qword ptr [rbx]
0x00000000001a45d5 : and esi, esi ; call qword ptr [rdi]
0x00000000001a454d : and esi, esi ; call qword ptr [rsi]
0x000000000018a2b1 : and esi, esi ; jmp qword ptr [rax]
0x0000000000112f9e : and esi, esi ; ret
0x0000000000132a35 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000358f7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010df3f : and r8b, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000160bb5 : and r8d, 0x21487fff ; ret 0x8949
0x0000000000160df8 : and r8d, 0x21487fff ; ret 0xcae9
0x00000000000f6b7e : and rax, rdi ; or rax, rsi ; ret
0x0000000000033f05 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000001a4524 : and rsi, r14 ; call qword ptr [rbx]
0x000000000003427b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034278 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000178a3a : bnd call qword ptr [rax - 0x4f000dcc] ; xor al, 0xf2 ; jmp rax
0x0000000000178a1a : bnd call qword ptr [rax - 0x4f000dcd] ; xor esi, edx ; call rax
0x00000000001789fa : bnd call qword ptr [rax - 0x4f000dce] ; xor dh, dl ; call rax
0x0000000000178b2a : bnd call qword ptr [rax] ; cmp edx, esi ; jmp qword ptr [rax]
0x0000000000178966 : bnd call qword ptr [rax] ; sub dh, dl ; jmp qword ptr [rax]
0x0000000000178f1e : bnd call qword ptr [rsi] ; ja 0x178f19 ; call rcx
0x0000000000178f1e : bnd call qword ptr [rsi] ; ja 0x178f1a ; call rcx
0x0000000000178b1a : bnd call rax ; cmp dl, dh ; jmp rax
0x0000000000178996 : bnd call rax ; sub dh, dl ; jmp rax
0x0000000000178a02 : bnd call rax ; xor dh, dl ; push rax ; xor dh, dl ; call qword ptr [rax]
0x00000000001789e2 : bnd call rax ; xor edx, esi ; push rax ; xor edx, esi ; call qword ptr [rax]
0x0000000000178a22 : bnd call rax ; xor esi, edx ; push rax ; xor esi, edx ; call qword ptr [rax]
0x0000000000178f22 : bnd call rcx ; jbe 0x178f1d ; call rcx
0x0000000000178f22 : bnd call rcx ; jbe 0x178f1e ; call rcx
0x0000000000178f26 : bnd call rcx ; jbe 0x178f21 ; call rcx
0x0000000000178f26 : bnd call rcx ; jbe 0x178f22 ; call rcx
0x0000000000113ac7 : bnd jb 0x113abc ; mov eax, 0xffffffff ; ret
0x000000000012a327 : bnd jbe 0x12a336 ; xor eax, eax ; ret
0x00000000000a30d7 : bnd je 0xa30e6 ; test edx, edx ; jne 0xa30d8 ; ret
0x00000000001789ba : bnd jmp qword ptr [rax - 0x3f000dd5] ; sub esi, edx ; jmp rax
0x00000000001789da : bnd jmp qword ptr [rax - 0x4f000dd4] ; xor edx, esi ; call rax
0x00000000001789c2 : bnd jmp rax ; sub esi, edx ; inc dword ptr [rax] ; sub al, 0xf2 ; jmp qword ptr [rax]
0x0000000000178a42 : bnd jmp rax ; xor al, 0xf2 ; call qword ptr [rax]
0x00000000000881ca : bnd jne 0x881c4 ; ret
0x00000000000907aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000906d0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000155721 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000906e0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000906f0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000906c0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000009061f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000095c13 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000087265 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000096106 : bsf eax, edx ; ret
0x00000000000b26c7 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000096262 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000095d30 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000096152 : bsf rax, rdx ; ret
0x00000000000b26c6 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000155b00 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x0000000000090cc6 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x0000000000090af6 : bsr eax, eax ; add rax, rdi ; ret
0x00000000001559ef : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x0000000000090ba0 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000090bb0 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000090bc0 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x00000000000960bb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000095fc9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000095ec5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000095e36 : bsr rax, rax ; add rax, rdi ; ret
0x00000000000960ba : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000095fc8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000095ec4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000012517d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000108332 : bswap eax ; ret
0x0000000000002caf : bswap ebx ; clc ; ret
0x0000000000037ce2 : call 0x103f72
0x0000000000037d82 : call 0x103fa2
0x00000000000e7d43 : call 0x103fc2
0x00000000000e7d78 : call 0x104022
0x000000000005b852 : call 0x1082a2
0x0000000000197f98 : call 0x11197c7d
0x00000000001a43e8 : call 0x111a3a0d
0x000000000011f1df : call 0x11b4d2
0x000000000012ad96 : call 0x127082
0x000000000011cb7f : call 0x129622
0x000000000018f088 : call 0x1318dae1
0x0000000000025a33 : call 0x131d12
0x0000000000114d42 : call 0x21022
0x00000000000576c2 : call 0x210576c0
0x000000000005781b : call 0x21057819
0x0000000000057aa3 : call 0x21057aa1
0x000000000005804d : call 0x2105804b
0x000000000005858e : call 0x2105858c
0x00000000000e4da9 : call 0x21082
0x0000000000104e1a : call 0x21102
0x000000000018fc98 : call 0x2118e71d
0x00000000000d47d9 : call 0x211e2
0x00000000000b47d8 : call 0x21202
0x0000000000044798 : call 0x21222
0x00000000001347e9 : call 0x21232
0x000000000005500c : call 0x212c2
0x00000000000b4fd3 : call 0x212ca
0x0000000000075a5d : call 0x21cc2
0x000000000019ffe8 : call 0x2219f4dc
0x00000000001a1b58 : call 0x221a10be
0x0000000000198608 : call 0x24197639
0x00000000001a3ac8 : call 0x241a30d0
0x00000000001019f6 : call 0x2e482
0x0000000000039743 : call 0x36152
0x000000000005d663 : call 0x3a112
0x000000000004922d : call 0x454d2
0x00000000000498a1 : call 0x45b12
0x000000000003a443 : call 0x46f42
0x000000000004dd8f : call 0x4a802
0x000000000005f470 : call 0x5bf02
0x0000000000066c5c : call 0x636a2
0x00000000000deb2e : call 0x6ae22
0x00000000000f0e42 : call 0x6d112
0x00000000000f4097 : call 0x70ae2
0x0000000000066199 : call 0x72422
0x0000000000066565 : call 0x727a2
0x0000000000058de1 : call 0x75082
0x000000000006b85a : call 0x77aa2
0x000000000007b5a8 : call 0x78062
0x000000000006f52f : call 0x7bf62
0x0000000000081341 : call 0x7ddb2
0x0000000000081ace : call 0x7ddd2
0x0000000000082876 : call 0x7eb32
0x00000000000e9419 : call 0x85ea2
0x00000000000d55f5 : call 0xa2072
0x0000000000066eea : call 0xa31a2
0x00000000000b6114 : call 0xb2b82
0x00000000000b6773 : call 0xb31a2
0x00000000000e885d : call 0xc52c2
0x00000000000db9c9 : call 0xd8412
0x00000000000e5d56 : call 0xe2762
0x000000000006add5 : call 0xe7852
0x00000000000ebeb3 : call 0xe8912
0x000000000012c71d : call 0xe8992
0x00000000001651aa : call 0xf1be2
0x000000000011ba48 : call 0xf7d12
0x00000000000ce4ef : call 0xfa7f2
0x00000000000be59d : call 0xfb012
0x0000000000101ff7 : call 0xfe2d2
0x000000000017609a : call 0xffffffffab252b90
0x000000000009bc64 : call 0xffffffffc309bc74
0x00000000000f749e : call 0xffffffffc313552a
0x000000000004445a : call 0xffffffffc33d8c64
0x000000000004446c : call 0xffffffffc33d8c76
0x0000000000044488 : call 0xffffffffc33d8c92
0x00000000000a5849 : call 0xffffffffc343a05a
0x00000000000aa669 : call 0xffffffffc343ee7a
0x00000000000ef8f2 : call 0xffffffffc34840fc
0x00000000000f4b18 : call 0xffffffffc3489322
0x000000000005854c : call 0xffffffffc3898554
0x000000000014cd75 : call 0xffffffffc39adc8e
0x000000000014ddf5 : call 0xffffffffc39aed0e
0x000000000009afe7 : call 0xffffffffc3da3938
0x000000000009af07 : call 0xffffffffc4023858
0x000000000009dfd7 : call 0xffffffffc4026928
0x0000000000105437 : call 0xffffffffc408dd88
0x000000000019a348 : call 0xffffffffe41994eb
0x00000000001abf78 : call 0xffffffffe41ab7c6
0x00000000000b6cf8 : call 0xffffffffeacd2f00
0x00000000001014af : call 0xffffffffead1d73f
0x000000000012619d : call qword ptr [r10]
0x000000000017938f : call qword ptr [rax + 0x16fff3e8]
0x000000000018642b : call qword ptr [rax + 0x20fffb65]
0x00000000001867b3 : call qword ptr [rax + 0x20fffb8e]
0x000000000018659b : call qword ptr [rax + 0x20fffb91]
0x0000000000186cab : call qword ptr [rax + 0x20fffbb5]
0x0000000000186a93 : call qword ptr [rax + 0x20fffbb8]
0x00000000001860ff : call qword ptr [rax - 0x1e00028f]
0x0000000000186f8f : call qword ptr [rax - 0x1f00030e]
0x0000000000186543 : call qword ptr [rax - 0x1f0004af]
0x0000000000186557 : call qword ptr [rax - 0x1f0004bd]
0x0000000000186377 : call qword ptr [rax - 0x1f0004db]
0x00000000001788fb : call qword ptr [rax - 0x1f000e43]
0x0000000000187033 : call qword ptr [rax - 0x2f000252]
0x000000000018650f : call qword ptr [rax - 0x2f0004c3]
0x000000000017c923 : call qword ptr [rax - 0x2f000586]
0x0000000000166463 : call qword ptr [rax - 0x2f0013a5]
0x0000000000033fbc : call qword ptr [rax - 0x3d]
0x000000000000313b : call qword ptr [rax]
0x000000000000369a : call qword ptr [rbx]
0x0000000000185ffb : call qword ptr [rcx + 0x21fffd63]
0x00000000001883d3 : call qword ptr [rcx + rcx*8 - 0x3cac0000]
0x0000000000004c89 : call qword ptr [rcx]
0x0000000000189f83 : call qword ptr [rdi + rbp*2 - 0x3cabffff]
0x00000000000b67e7 : call qword ptr [rdi]
0x0000000000186877 : call qword ptr [rdx + 0x12fffb84]
0x000000000018686f : call qword ptr [rdx + 0x12fffb85]
0x0000000000186867 : call qword ptr [rdx + 0x12fffb86]
0x000000000018685f : call qword ptr [rdx + 0x12fffb87]
0x0000000000186687 : call qword ptr [rdx + 0x22fffb8c]
0x0000000000186b7f : call qword ptr [rdx + 0x22fffbb3]
0x0000000000009678 : call qword ptr [rdx]
0x00000000001865e3 : call qword ptr [rsi + 0x26fffb90]
0x0000000000186adb : call qword ptr [rsi + 0x26fffbb7]
0x0000000000060a86 : call qword ptr [rsi]
0x000000000002a33c : call r12
0x0000000000024f7f : call r14
0x0000000000022c3b : call r15
0x0000000000102dac : call r8
0x0000000000021a85 : call rax
0x000000000002288d : call rbx
0x000000000002b53a : call rcx
0x0000000000022c3c : call rdi
0x00000000000377c7 : call rdx
0x0000000000023231 : call rsi
0x000000000001d138 : call rsp
0x00000000001364f7 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000bc263 : cdq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000196949 : cdq ; add byte ptr [rax], al ; and al, 0xd9 ; out dx, al ; call qword ptr [rdx]
0x00000000000380a4 : cdq ; idiv rsi ; ret
0x0000000000175fa0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000017887d : cdq ; int1 ; jmp rax
0x000000000019a2d5 : cdq ; int1 ; jmp rsi
0x00000000000e7bcb : cdq ; ret 0x2c
0x000000000002d64b : cdq ; ret 0x38
0x0000000000060e79 : cdq ; retf
0x000000000007cedf : cdq ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000189044 : clc ; adc byte ptr [rcx], al ; add byte ptr [rsp + rbx*4 - 0x10], ah ; jmp qword ptr [rax]
0x0000000000162b69 : clc ; add al, 0x74 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000000000125593 : clc ; add al, 0x74 ; retf
0x000000000018c82c : clc ; add al, byte ptr [r8] ; add al, 0x87 ; cli ; jmp qword ptr [rax]
0x00000000000577d7 : clc ; add al, byte ptr [rcx + 0x29] ; ret
0x000000000003a186 : clc ; add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x0000000000102341 : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e73f9 : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x0000000000188bd5 : clc ; add byte ptr [rax], al ; in al, 0xd3 ; out dx, eax ; jmp rsp
0x000000000019c7a5 : clc ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; jmp rdx
0x00000000000d90db : clc ; add byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000577b0 : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x0000000000080daa : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000080877 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000073190 : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000059340 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000880d9 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001ac84d : clc ; add dword ptr [rax], eax ; add byte ptr [rbx + rdi*8 - 1], bh ; ret
0x0000000000129601 : clc ; add dword ptr [rbp + 0xb], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000003879b : clc ; add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000329c5 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000007d891 : clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x0000000000088e0b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112f35 : clc ; add eax, 0x10 ; ret
0x00000000000b6c89 : clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x00000000000ceb7e : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x00000000001a3c58 : clc ; add esi, esi ; jmp qword ptr [rbx]
0x0000000000155bcf : clc ; add rax, r8 ; vzeroupper ; ret
0x00000000000904a7 : clc ; add rax, rcx ; ret
0x0000000000155534 : clc ; add rax, rcx ; vzeroupper ; ret
0x0000000000090ccb : clc ; add rax, rsi ; ret
0x000000000002dcf1 : clc ; and eax, 0x7f ; ret
0x0000000000108357 : clc ; and eax, 0xffffff ; ret
0x0000000000108331 : clc ; bswap eax ; ret
0x00000000000d55f4 : clc ; call 0xa2073
0x000000000018b4fa : clc ; call qword ptr [rax]
0x00000000001abb76 : clc ; call qword ptr [rbx]
0x00000000001ac33e : clc ; call qword ptr [rdi]
0x000000000018b55a : clc ; call rax
0x000000000018b69a : clc ; call rsp
0x0000000000035ae2 : clc ; clc ; jne 0x35ad6 ; xor eax, eax ; ret
0x0000000000035b32 : clc ; clc ; jne 0x35b26 ; xor eax, eax ; ret
0x000000000018b9fc : clc ; cmc ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; clc ; call qword ptr [rax]
0x0000000000112d71 : clc ; cmc ; je 0x112d6d ; pop rbx ; ret
0x000000000004a520 : clc ; cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000083958 : clc ; cmovne rax, rcx ; ret
0x0000000000113ffc : clc ; cmovs eax, edx ; ret
0x0000000000190970 : clc ; cmp dword ptr [rax], eax ; add ah, cl ; adc al, 0xeb ; call rdi
0x0000000000003c3a : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000015c629 : clc ; cmp rcx, rax ; jne 0x15c65b ; xor eax, eax ; ret
0x000000000015c628 : clc ; cmp rcx, rax ; jne 0x15c65c ; xor eax, eax ; ret
0x000000000015d469 : clc ; cmp rcx, rax ; jne 0x15d49b ; xor eax, eax ; ret
0x000000000015d468 : clc ; cmp rcx, rax ; jne 0x15d49c ; xor eax, eax ; ret
0x00000000000380a2 : clc ; cqo ; idiv rsi ; ret
0x0000000000083fa0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002d98a : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000624d1 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000626c8 : clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x000000000006e6a9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000073dcd : clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000000deab3 : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000035c3c : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000075ded : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000018b5d2 : clc ; dec dword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; add al, 0x12 ; clc ; jmp qword ptr [rax]
0x000000000018b4f2 : clc ; dec eax ; xlatb ; add dword ptr [rax], eax ; in al, 3 ; clc ; call qword ptr [rax]
0x000000000019fa38 : clc ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000000f8559 : clc ; inc dword ptr [rcx - 0x42] ; add eax, 0x74000000 ; retf
0x000000000002b9ea : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000062664 : clc ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], 0x85 ; retf
0x000000000018ba42 : clc ; inc esp ; test dword ptr [rcx], 0xf8e1d400 ; jmp rax
0x0000000000178720 : clc ; int1 ; dec dword ptr [rax] ; int1 ; jmp qword ptr [rax]
0x00000000000a05aa : clc ; jg 0xa0579 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a0606 : clc ; jg 0xa0606 ; int1 ; mov eax, eax ; ret
0x000000000018b5da : clc ; jmp qword ptr [rax]
0x00000000001abba6 : clc ; jmp qword ptr [rcx]
0x000000000004e4a1 : clc ; jmp rax
0x00000000001abf7a : clc ; jmp rbx
0x00000000001ab546 : clc ; jmp rdx
0x000000000018b562 : clc ; jmp rsp
0x00000000001605ea : clc ; jne 0x1606f7 ; ret
0x00000000001605e9 : clc ; jne 0x1606f8 ; ret
0x0000000000035ae3 : clc ; jne 0x35ad5 ; xor eax, eax ; ret
0x0000000000035b33 : clc ; jne 0x35b25 ; xor eax, eax ; ret
0x0000000000088097 : clc ; jne 0x88084 ; ret
0x00000000000a1ffd : clc ; jne 0xa2011 ; ret
0x00000000000c4d27 : clc ; leave ; ret
0x000000000018b8ea : clc ; ljmp [rax + 0x340001f1] ; scasd eax, dword ptr [rdi] ; clc ; call rsp
0x000000000018b6da : clc ; ljmp [rbx + 0x45d40001] ; clc ; call rsp
0x000000000018b692 : clc ; ljmp [rcx + 0x37d40001] ; clc ; call rsp
0x000000000018b642 : clc ; ljmp [rsi + rbx*8 + 1] ; add byte ptr [rcx], ah ; clc ; jmp rsp
0x000000000018b832 : clc ; ljmp [rsp + rbp*8 - 0x76ebffff] ; clc ; call rsp
0x00000000000f04f4 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000174c02 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000070904 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004e777 : clc ; mov edx, 1 ; jmp rax
0x000000000000394c : clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000139247 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000139bb7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013eb07 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139db7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013ea77 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139fb7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013e9e7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139263 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a044e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000015a0cd : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000008cf37 : clc ; mov qword ptr [rdi], rdx ; ret
0x000000000015d62c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a003a : clc ; mov qword ptr [rdi], rsi ; ret
0x0000000000046fa2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000222ac : clc ; neg eax ; ret
0x00000000000e1f2f : clc ; or byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000e95e5 : clc ; or eax, 0xe20d8b48 ; ret 0x2c
0x000000000007091f : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6b80 : clc ; or rax, rsi ; ret
0x000000000007e3e9 : clc ; pop rbp ; pop r12 ; ret
0x000000000008d486 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000019e698 : clc ; pop rdi ; stc ; call qword ptr [rax]
0x00000000000722c4 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000013102f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000456f5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00000000001271b1 : clc ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x000000000006d430 : clc ; push qword ptr [rbx - 0x77] ; ret 0xe283
0x00000000000bfea3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000000e2f36 : clc ; push qword ptr [rsi + rbx*8 + 0x39] ; ret
0x000000000018b6fa : clc ; push qword ptr [rsp + 0x4d540001] ; clc ; call qword ptr [rax]
0x0000000000187c54 : clc ; pushfq ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fucomp st(3) ; jmp qword ptr [rax]
0x0000000000002c85 : clc ; ret
0x0000000000185462 : clc ; ret 0x6e1f
0x00000000000fccfb : clc ; retf
0x000000000003a444 : clc ; retf 0
0x0000000000156254 : clc ; rol ch, 1 ; jns 0x156235 ; retf 0xead3
0x00000000001563a4 : clc ; rol ch, 1 ; jns 0x156385 ; retf 0xead3
0x00000000001564f4 : clc ; rol ch, 1 ; jns 0x1564d5 ; retf 0xead3
0x0000000000156644 : clc ; rol ch, 1 ; jns 0x156625 ; retf 0xead3
0x0000000000156794 : clc ; rol ch, 1 ; jns 0x156775 ; retf 0xead3
0x00000000001568e4 : clc ; rol ch, 1 ; jns 0x1568c5 ; retf 0xead3
0x0000000000156a34 : clc ; rol ch, 1 ; jns 0x156a15 ; retf 0xead3
0x0000000000156b84 : clc ; rol ch, 1 ; jns 0x156b65 ; retf 0xead3
0x0000000000156cd4 : clc ; rol ch, 1 ; jns 0x156cb5 ; retf 0xead3
0x0000000000156e24 : clc ; rol ch, 1 ; jns 0x156e05 ; retf 0xead3
0x0000000000156f74 : clc ; rol ch, 1 ; jns 0x156f55 ; retf 0xead3
0x00000000001570c4 : clc ; rol ch, 1 ; jns 0x1570a5 ; retf 0xead3
0x0000000000157214 : clc ; rol ch, 1 ; jns 0x1571f5 ; retf 0xead3
0x0000000000157364 : clc ; rol ch, 1 ; jns 0x157345 ; retf 0xead3
0x00000000001574b4 : clc ; rol ch, 1 ; jns 0x157495 ; retf 0xead3
0x0000000000157924 : clc ; rol ch, 1 ; jns 0x157905 ; retf 0xead3
0x0000000000157aa4 : clc ; rol ch, 1 ; jns 0x157a85 ; retf 0xead3
0x0000000000157c24 : clc ; rol ch, 1 ; jns 0x157c05 ; retf 0xead3
0x0000000000157da4 : clc ; rol ch, 1 ; jns 0x157d85 ; retf 0xead3
0x0000000000157f24 : clc ; rol ch, 1 ; jns 0x157f05 ; retf 0xead3
0x00000000001580a4 : clc ; rol ch, 1 ; jns 0x158085 ; retf 0xead3
0x0000000000158224 : clc ; rol ch, 1 ; jns 0x158205 ; retf 0xead3
0x00000000001583a4 : clc ; rol ch, 1 ; jns 0x158385 ; retf 0xead3
0x0000000000158524 : clc ; rol ch, 1 ; jns 0x158505 ; retf 0xead3
0x00000000001586a4 : clc ; rol ch, 1 ; jns 0x158685 ; retf 0xead3
0x0000000000158824 : clc ; rol ch, 1 ; jns 0x158805 ; retf 0xead3
0x00000000001589a4 : clc ; rol ch, 1 ; jns 0x158985 ; retf 0xead3
0x0000000000158b24 : clc ; rol ch, 1 ; jns 0x158b05 ; retf 0xead3
0x0000000000158ca4 : clc ; rol ch, 1 ; jns 0x158c85 ; retf 0xead3
0x0000000000158e24 : clc ; rol ch, 1 ; jns 0x158e05 ; retf 0xead3
0x0000000000108341 : clc ; ror ax, 8 ; ret
0x0000000000038043 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010821b : clc ; sar rax, 6 ; ret
0x00000000000cc49f : clc ; sbb cl, al ; cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000045c0a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000001083d7 : clc ; shr eax, 0x18 ; ret
0x00000000000b27df : clc ; shr rax, 2 ; ret
0x0000000000003e24 : clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x0000000000155441 : clc ; sub rax, r8 ; ret
0x0000000000159726 : clc ; sub rax, rdx ; vzeroupper ; ret
0x00000000001551eb : clc ; sub rax, rsi ; ret
0x0000000000104085 : clc ; test edx, edx ; je 0x104099 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001556ab : clc ; vzeroupper ; ret
0x0000000000196670 : clc ; xchg eax, esi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a0370 : clc ; xor eax, dword ptr [rcx] ; add ah, bl ; hlt ; hlt ; jmp qword ptr [rsi]
0x000000000019cb85 : cld ; add byte ptr [rax], al ; or byte ptr [rbx], dh ; jmp rax
0x00000000000c5b72 : cld ; add byte ptr [rax], al ; ret
0x0000000000189914 : cld ; add dword ptr [r8], r8d ; push rsp ; sal ebx, 1 ; call qword ptr [rax]
0x00000000000a050f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001a1974 : cld ; add qword ptr [r8], rax ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x0000000000189dfc : cld ; add word ptr [rax], ax ; test byte ptr [rbp - 0xb], dl ; jmp qword ptr [rax]
0x0000000000185ec2 : cld ; call qword ptr [rax]
0x0000000000198abe : cld ; call qword ptr [rbx]
0x0000000000196a46 : cld ; call qword ptr [rdx]
0x0000000000185eb2 : cld ; call rax
0x0000000000198906 : cld ; call rsp
0x00000000001abb74 : cld ; cmp al, bh ; call qword ptr [rbx]
0x000000000018c53c : cld ; cmp eax, dword ptr [rdx] ; add byte ptr [rax + rsi], al ; cli ; call qword ptr [rax]
0x00000000001606e2 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1606f8 ; xor eax, eax ; ret
0x00000000001606e1 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1606f9 ; xor eax, eax ; ret
0x00000000001a1434 : cld ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000cf0ac : cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xcf0a7 ; ret
0x000000000004a48c : cld ; cmp rdi, r8 ; jbe 0x4a428 ; pop rbx ; pop rbp ; ret
0x000000000004a48b : cld ; cmp rdi, r8 ; jbe 0x4a429 ; pop rbx ; pop rbp ; ret
0x00000000000b583c : cld ; dec dword ptr [rax + 0x39] ; ret
0x000000000011e7b9 : cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000018cbe2 : cld ; dec dword ptr [rax - 0xbfffeea] ; jrcxz 0x18cbf0 ; call rax
0x00000000001a74c4 : cld ; fdivr st(0) ; call qword ptr [rax]
0x0000000000033cd7 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000186f9a : cld ; inc dword ptr [rax - 0x2f00030a] ; idiv esp ; jmp qword ptr [rax]
0x0000000000185f36 : cld ; inc dword ptr [rax - 0x37] ; cld ; jmp rax
0x0000000000178932 : cld ; inc dword ptr [rax - 0x3f000337] ; retf
0x0000000000178922 : cld ; inc dword ptr [rax - 0x3f000340] ; ret 0xfffc
0x0000000000185f16 : cld ; inc dword ptr [rax - 0x44] ; cld ; jmp rax
0x0000000000185ebe : cld ; inc dword ptr [rax - 0x5c] ; cld ; call qword ptr [rax]
0x0000000000185ede : cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x00000000000a05ec : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a055a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000178926 : cld ; inc eax ; ret 0xfffc
0x0000000000178936 : cld ; inc eax ; retf
0x0000000000186faa : cld ; inc eax ; sti ; cld ; call qword ptr [rax]
0x0000000000185ed6 : cld ; jmp qword ptr [rax]
0x0000000000199e22 : cld ; jmp qword ptr [rbx]
0x00000000001a3d6a : cld ; jmp qword ptr [rdx]
0x0000000000185ec6 : cld ; jmp rax
0x0000000000199eea : cld ; jmp rsi
0x000000000018cbf2 : cld ; jmp rsp
0x000000000015d276 : cld ; jne 0x15d4af ; xor eax, eax ; ret
0x00000000001606e5 : cld ; jne 0x1606f5 ; xor eax, eax ; ret
0x00000000001606e4 : cld ; jne 0x1606f6 ; xor eax, eax ; ret
0x0000000000160605 : cld ; jne 0x1606f7 ; ret
0x0000000000160604 : cld ; jne 0x1606f8 ; ret
0x0000000000175985 : cld ; lodsb al, byte ptr [rsi] ; loop 0x175954 ; retf
0x0000000000198474 : cld ; mov ah, 0 ; add byte ptr [rax], cl ; sti ; call qword ptr [rax]
0x00000000001399d2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139bd5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139dd5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139fd5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a0456 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000015a0d8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000015d63e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0048 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000001052b0 : cld ; mov eax, dword ptr [rip + 0x450f4800] ; ret 0xfc3
0x00000000000a0042 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000139606 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ec96 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001397e6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ec16 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001399c6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013eb96 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139426 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ed16 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e8c47 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000018794c : cld ; mov word ptr [rax], es ; add byte ptr [rsi + rcx - 0x15], al ; call qword ptr [rax]
0x0000000000046f5c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001abf74 : cld ; out dx, eax ; add dword ptr [rax], eax ; call 0xffffffffe41ab7ca
0x0000000000185eba : cld ; push qword ptr [rax - 0x5d] ; cld ; inc dword ptr [rax - 0x5c] ; cld ; call qword ptr [rax]
0x0000000000186fa6 : cld ; push qword ptr [rax - 6] ; cld ; inc eax ; sti ; cld ; call qword ptr [rax]
0x0000000000185f5e : cld ; push qword ptr [rax] ; fdiv st(4), st(0) ; call qword ptr [rax]
0x0000000000185ed2 : cld ; push qword ptr [rax] ; test eax, 0xaa20fffc ; cld ; call qword ptr [rax]
0x0000000000185ee2 : cld ; push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000185f86 : cld ; push rax ; out dx, al ; cld ; jmp qword ptr [rax]
0x000000000017895e : cld ; push rax ; sub edx, esi ; inc dword ptr [rax] ; sub dh, dl ; call qword ptr [rax]
0x0000000000046f62 : cld ; ret
0x00000000000ce4f0 : cld ; ret 2
0x00000000001a35e4 : cld ; retf 0xfff5
0x000000000018b05c : cld ; rol byte ptr [rcx], 0 ; xchg eax, esp ; js 0x18b061 ; call qword ptr [rax]
0x000000000019e974 : cld ; sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x70], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001740a3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000001740b6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000b216e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb2171 ; ret
0x000000000015e0c2 : cld ; vzeroupper ; ret
0x000000000018861c : cld ; xlatb ; add byte ptr [rax], al ; adc dil, r13b ; call qword ptr [rax]
0x00000000000387bd : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000b3b27 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000000e74d3 : cli ; add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000b9136 : cli ; add al, 0x75 ; ret 0x8948
0x00000000001150dd : cli ; add al, 0x83 ; ret 0xf01
0x0000000000188c25 : cli ; add byte ptr [rax], al ; adc al, 0xdf ; out dx, eax ; jmp qword ptr [rax]
0x00000000000b6cd8 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000bad56 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000056cff : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000074132 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a0441 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xa0451 ; mov byte ptr [rdi], cl ; ret
0x000000000015dd2b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000015d65c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b3253 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000038b5 : cli ; add ebx, ebp ; in al, 0xee ; jne 0x389d ; ret 0x975
0x00000000000ae563 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000ae5c4 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000043bf4 : cli ; add rdx, rcx ; jmp 0x43c0c
0x0000000000043ee1 : cli ; add rdx, rcx ; jmp 0x43efc
0x00000000000f04d8 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000f0b09 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x0000000000176099 : cli ; call 0xffffffffab252b91
0x000000000017c922 : cli ; call qword ptr [rax - 0x2f000586]
0x000000000018c542 : cli ; call qword ptr [rax]
0x000000000018fdae : cli ; call qword ptr [rdi]
0x000000000017c8fe : cli ; call rax
0x000000000018c752 : cli ; call rsp
0x0000000000186fa9 : cli ; cld ; inc eax ; sti ; cld ; call qword ptr [rax]
0x0000000000068b22 : cli ; cwde ; add byte ptr [rax], al ; mov r14d, eax ; jmp 0x64d56
0x00000000000f38eb : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000018ca7a : cli ; dec dword ptr [rax + 0x7e] ; add dword ptr [rax], eax ; fdivr st(2) ; jmp rax
0x000000000018cac2 : cli ; dec dword ptr [rax] ; retf
0x0000000000115439 : cli ; dec dword ptr [rdi] ; test byte ptr [rdi], dh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000018c9ba : cli ; dec dword ptr [rsp + rdx*2] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; jmp qword ptr [rax]
0x000000000018c8f2 : cli ; dec eax ; push rax ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x000000000018c6ea : cli ; inc dword ptr [rax + 0x34000244] ; pop rbp ; cli ; jmp rax
0x000000000018c412 : cli ; inc dword ptr [rax + 0x4000235] ; sbb edx, edi ; jmp rsp
0x000000000017b826 : cli ; inc dword ptr [rax] ; and dl, bh ; push qword ptr [rax] ; and dl, bh ; jmp qword ptr [rax]
0x000000000018c8d2 : cli ; inc dword ptr [rax] ; push rax ; add al, byte ptr [rax] ; xchg eax, esp ; lahf ; cli ; jmp qword ptr [rax]
0x000000000018ca4a : cli ; inc dword ptr [rsi - 0x44fbffff] ; cli ; jmp qword ptr [rax]
0x000000000018c7ba : cli ; inc eax ; add al, byte ptr [r8] ; adc al, 0x7f ; cli ; jmp rax
0x000000000017c8fa : cli ; inc eax ; push rsp ; cli ; call rax
0x000000000018c7ea : cli ; inc esp ; add al, byte ptr [rax] ; push rsp ; test dl, bh ; jmp rax
0x0000000000159bd9 : cli ; jg 0x159bec ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015a0c2 : cli ; jg 0x15a0d2 ; vzeroupper ; ret
0x000000000015d617 : cli ; jg 0x15d62a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000015dcf6 : cli ; jg 0x15dd08 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000015dff1 : cli ; jg 0x15e004 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015e628 : cli ; jg 0x15e638 ; vzeroupper ; ret
0x000000000017b82e : cli ; jmp qword ptr [rax]
0x0000000000190aae : cli ; jmp qword ptr [rcx]
0x000000000018c39a : cli ; jmp rax
0x0000000000032764 : cli ; jmp rdx
0x000000000018c3f2 : cli ; jmp rsp
0x000000000018ca6a : cli ; lcall [rbp + rsi*2 - 0x2a2bffff] ; cli ; call rsp
0x000000000017c91a : cli ; ljmp [rax + 0x7b] ; cli ; call rax
0x000000000008d02c : cli ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000008cf5f : cli ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000139dd8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000018678c : cli ; mov edi, ebx ; jmp qword ptr [rax + 0x10fffb8b]
0x000000000003a43f : cli ; mov rdi, rbp ; call 0x46f46
0x000000000010cc50 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000032a46 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000090e18 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000150a66 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000085e08 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x0000000000085db0 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000011636c : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x00000000000a9464 : cli ; or eax, 0xb8480000 ; ret 0xffff
0x00000000000d22f2 : cli ; out dx, al ; hlt ; inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0xe9 ; retf 0xfffa
0x00000000001973f5 : cli ; out dx, al ; jmp qword ptr [rcx]
0x0000000000176521 : cli ; push 0x6e ; ja 0x1764ae ; ret 0x48f
0x000000000018c322 : cli ; push qword ptr [rax + rsi + 0x5540002] ; cli ; call rax
0x000000000017b82a : cli ; push qword ptr [rax] ; and dl, bh ; jmp qword ptr [rax]
0x000000000018caca : cli ; push qword ptr [rax] ; retf
0x000000000018c8a2 : cli ; push qword ptr [rsi + rcx*2 - 0x696bfffe] ; cli ; jmp rax
0x000000000017c8f6 : cli ; push rax ; push rbp ; cli ; inc eax ; push rsp ; cli ; call rax
0x000000000018c9e2 : cli ; push rax ; push rsp ; add al, byte ptr [rax] ; xchg eax, esp ; mov dh, 0xfa ; jmp qword ptr [rax]
0x00000000000a0369 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002cb70 : cli ; ret
0x0000000000174fc5 : cli ; ret 0xac65
0x0000000000110f68 : cli ; retf 0
0x00000000000cc4a2 : cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001039cb : cli ; setae al ; ret
0x000000000010f48a : cli ; std ; jbe 0x10f495 ; ret
0x0000000000116d2c : cli ; sub al, 0xf ; xchg eax, ebp ; ret 0xd184
0x00000000001087f1 : cli ; sub al, byte ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x0000000000043ede : cli ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43eff
0x0000000000174e70 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000173c0a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000011357a : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000154fd8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000a30b1 : cmc ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000f0f07 : cmc ; add dh, bl ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000018b9fd : cmc ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; clc ; call qword ptr [rax]
0x00000000001acae7 : cmc ; add dword ptr [rax], eax ; ret 0x502
0x00000000001ac509 : cmc ; add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; clc ; call rsp
0x0000000000165d6a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017a432 : cmc ; call qword ptr [rax]
0x00000000001a15e6 : cmc ; call qword ptr [rcx]
0x0000000000189f82 : cmc ; call qword ptr [rdi + rbp*2 - 0x3cabffff]
0x00000000001a086a : cmc ; call qword ptr [rdx]
0x00000000001a1c36 : cmc ; call qword ptr [rsi]
0x000000000017a3c6 : cmc ; call rax
0x000000000017a6ea : cmc ; call rdi
0x000000000017a256 : cmc ; call rsi
0x0000000000189e2a : cmc ; call rsp
0x00000000000c606f : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c2a23 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c5116 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000cecfc : cmc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000017a5de : cmc ; dec dword ptr [rcx] ; xchg eax, ebp ; cmc ; jmp qword ptr [rax]
0x000000000017a612 : cmc ; dec esi ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x000000000000296f : cmc ; enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x0000000000187f11 : cmc ; in al, dx ; call rsp
0x000000000019397d : cmc ; in eax, dx ; call qword ptr [rsi]
0x00000000000cec34 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000012ad90 : cmc ; inc dword ptr [rax + rax*8 - 0x1a175d8b] ; ret 0xffff
0x000000000017a58e : cmc ; inc dword ptr [rbp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x000000000018a012 : cmc ; inc eax ; je 0x18a021 ; add ah, dl ; stc ; cmc ; jmp rax
0x0000000000112d72 : cmc ; je 0x112d6c ; pop rbx ; ret
0x000000000017a576 : cmc ; jmp qword ptr [rax + 0x20fff595]
0x000000000017a53a : cmc ; jmp qword ptr [rax]
0x000000000017a59a : cmc ; jmp qword ptr [rbx]
0x00000000001a091e : cmc ; jmp qword ptr [rcx]
0x000000000017a1f6 : cmc ; jmp qword ptr [rdi]
0x00000000001a0a52 : cmc ; jmp qword ptr [rdx]
0x00000000001a3a02 : cmc ; jmp qword ptr [rsi]
0x0000000000189d92 : cmc ; jmp rax
0x00000000001a0cb2 : cmc ; jmp rcx
0x00000000001a1146 : cmc ; jmp rsp
0x000000000017a42a : cmc ; lcall [rbx - 0x64000a6c] ; xchg eax, esp ; cmc ; call qword ptr [rax]
0x000000000017a3be : cmc ; lcall [rbx - 0x64000a6c] ; xchg eax, esp ; cmc ; call rax
0x000000000017a58a : cmc ; lcall [rsi - 0x6b] ; cmc ; inc dword ptr [rbp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x000000000017a66e : cmc ; lcall [rsp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x000000000017a61a : cmc ; ljmp [rbp + 0x20fff594] ; xchg eax, esi ; cmc ; jmp qword ptr [rax]
0x0000000000176949 : cmc ; mov ch, 0xab ; ret
0x000000000013ec1a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013965e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000f7d69 : cmc ; mov ebx, edi ; sub rsp, 0x10 ; call 0x103fc9
0x00000000001069f5 : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000015fbf3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000188501 : cmc ; out dx, al ; call rax
0x00000000001737f7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000cfcd3 : cmc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000017a65e : cmc ; push qword ptr [rsi - 0x6c] ; cmc ; jmp qword ptr [rax]
0x0000000000076457 : cmc ; push rax ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x763f1
0x0000000000189faa : cmc ; push rax ; jo 0x189fb9 ; add byte ptr [rbx + rcx*8 - 0xb], ah ; jmp qword ptr [rax]
0x000000000017a1f2 : cmc ; push rdi ; adc esi, ebp ; jmp qword ptr [rdi]
0x000000000017a1ee : cmc ; push rdi ; adc esi, ebp ; push rdi ; adc esi, ebp ; jmp qword ptr [rdi]
0x000000000015fbf7 : cmc ; sub eax, edx ; ret
0x0000000000175f85 : cmc ; xlatb ; ret 0x4e27
0x00000000001047d9 : cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000ec7a8 : cmova eax, edx ; ret
0x000000000007d3c9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000113bd2 : cmovae eax, edi ; ret
0x00000000000ef2d4 : cmovae edx, dword ptr [rax + 0x18] ; mov eax, 0x65 ; syscall
0x000000000007d3c8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a522 : cmovb eax, edi ; pop rbx ; pop rbp ; ret
0x000000000004a5a9 : cmovb eax, edi ; ret
0x00000000000f889c : cmovb eax, edx ; ret
0x000000000004a521 : cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x000000000004a5a8 : cmovb rax, rdi ; ret
0x00000000000f889b : cmovb rax, rdx ; ret
0x0000000000085e98 : cmovbe eax, edx ; ret
0x00000000000de80a : cmovbe esi, ecx ; syscall
0x00000000000de809 : cmovbe rsi, r9 ; syscall
0x00000000000ef0ca : cmove eax, ebx ; pop rbx ; ret
0x00000000000a0534 : cmove eax, ecx ; pop rbx ; ret
0x000000000003a19a : cmove eax, ecx ; ret
0x0000000000087268 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000b39a1 : cmove eax, edx ; add rsp, 0x28 ; ret
0x0000000000083fa3 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000a04fc : cmove eax, edx ; pop rbx ; ret
0x000000000002d6eb : cmove eax, edx ; ret
0x0000000000079ebf : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038444 : cmove ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000007759c : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000074cc0 : cmove r8, rcx ; ret
0x00000000000ef0c9 : cmove rax, rbx ; pop rbx ; ret
0x00000000000a0533 : cmove rax, rcx ; pop rbx ; ret
0x0000000000087279 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000b39a0 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000083fa2 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000a04fb : cmove rax, rdx ; pop rbx ; ret
0x000000000002d6ea : cmove rax, rdx ; ret
0x0000000000038443 : cmove rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000071d7b : cmovg eax, ecx ; test rdx, rdx ; jne 0x71d79 ; ret
0x000000000007b21b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7b219 ; ret
0x00000000000a1ac2 : cmovg eax, edx ; ret
0x00000000000b3351 : cmovg edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000b3350 : cmovg rdx, rax ; mov rax, rdx ; pop rbx ; ret
0x000000000012b6db : cmovl eax, dword ptr [rcx] ; fmul dword ptr [rcx + 0x39] ; ret 0x820f
0x000000000003a1ae : cmovne eax, ecx ; ret
0x0000000000088bdf : cmovne eax, edi ; ret
0x000000000012efb6 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000089336 : cmovne eax, edx ; pop rbx ; ret
0x0000000000085cba : cmovne eax, edx ; ret
0x00000000001590b4 : cmovne eax, edx ; vzeroupper ; ret
0x00000000000c4062 : cmovne edx, eax ; mov rax, rdx ; ret
0x0000000000083959 : cmovne rax, rcx ; ret
0x0000000000088bde : cmovne rax, rdi ; ret
0x000000000012efb5 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089335 : cmovne rax, rdx ; pop rbx ; ret
0x0000000000085cb9 : cmovne rax, rdx ; ret
0x00000000001590b3 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000000c4061 : cmovne rdx, rax ; mov rax, rdx ; ret
0x00000000000fec52 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000edd78 : cmovns eax, edx ; ret
0x00000000000fec51 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000090468 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x000000000012bfd9 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x00000000000380f6 : cmovs eax, edx ; pop rbx ; ret
0x0000000000024a0c : cmovs eax, edx ; ret
0x00000000000b47d1 : cmovs ecx, dword ptr [rcx - 0x2076b712] ; call 0x21209
0x00000000000728d8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x728d9 ; lea eax, [rdx + rdi] ; ret
0x00000000000a04de : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000a0570 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000001983d8 : cmp ah, bl ; sti ; call qword ptr [rax]
0x00000000001552f0 : cmp ah, byte ptr [rbx + 0x1f] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001551d8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000f84b9 : cmp ah, byte ptr [rcx + 0x75] ; retf
0x0000000000179ba5 : cmp ah, dh ; jmp qword ptr [rax]
0x00000000001a62ec : cmp al, 0 ; add byte ptr [rax], al ; js 0x1a628e ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001a9204 : cmp al, 0 ; add byte ptr [rax], al ; nop ; ret 1
0x00000000000f6d33 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000cf0c8 : cmp al, 0x11 ; je 0xcf0d6 ; xor eax, eax ; ret
0x00000000001a3b54 : cmp al, 0x11 ; stc ; jmp qword ptr [rbx]
0x00000000001a08c4 : cmp al, 0x12 ; cmc ; jmp rax
0x000000000002da90 : cmp al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002396a : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfae9
0x0000000000088c31 : cmp al, 0x24 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000007b5b7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007b5a6 : cmp al, 0x24 ; call 0x78064
0x00000000000e7d3c : cmp al, 0x24 ; mov dword ptr [rsp + 8], r10d ; call 0x103fc9
0x0000000000035cc6 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x0000000000165099 : cmp al, 0x24 ; mov r14, qword ptr [r12 + 0x18] ; call 0x212d1
0x00000000001130ea : cmp al, 0x24 ; mov r9, rsp ; jmp 0x1130c2
0x0000000000131cfc : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x170] ; jmp rax
0x000000000011954d : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007d855 : cmp al, 0x30 ; ret
0x00000000000c8cac : cmp al, 0x3f ; jne 0xc8c99 ; mov eax, 1 ; ret
0x0000000000174c00 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000131f97 : cmp al, 0x48 ; add esp, 0x38 ; ret
0x00000000001a1ab4 : cmp al, 0x4b ; add dword ptr [rax], eax ; or byte ptr [rsi - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a1b94 : cmp al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x0000000000173b03 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000001958d4 : cmp al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x000000000000239a : cmp al, 0x7a ; xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x00000000001765eb : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000001974b4 : cmp al, 0xa5 ; add byte ptr [rax], al ; enter -0x1104, -1 ; retf 0
0x00000000001975b4 : cmp al, 0xa6 ; add byte ptr [rax], al ; enter -0x1102, -1 ; retf 0
0x00000000000be598 : cmp al, 0xae ; mov rsi, r12 ; call 0xfb017
0x0000000000032a49 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000006abb2 : cmp al, 0xc ; ret 0x8948
0x0000000000199db4 : cmp al, 0xce ; add byte ptr [rax], al ; js 0x199e3f ; int1 ; call qword ptr [rax]
0x000000000019d454 : cmp al, 0xce ; call rax
0x0000000000177d31 : cmp al, 0xef ; call rax
0x0000000000177d2d : cmp al, 0xef ; jmp qword ptr [rax - 0x2f0010c4]
0x0000000000177d09 : cmp al, 0xef ; push qword ptr [rax + 0x3e] ; out dx, eax ; call qword ptr [rax]
0x00000000000b36b5 : cmp al, 0xf ; xchg eax, esp ; ret 0x6348
0x00000000000e892b : cmp al, 0xf3 ; ret
0x0000000000179b85 : cmp al, 0xf4 ; call qword ptr [rax]
0x0000000000179bd5 : cmp al, 0xf4 ; lcall [rbx + rdi] ; hlt ; call qword ptr [rdi]
0x000000000018af01 : cmp al, 0xf7 ; jmp qword ptr [rax]
0x0000000000155272 : cmp al, 2 ; add byte ptr [rax - 0x77], cl ; dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000015d253 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009bf10 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000001abb75 : cmp al, bh ; call qword ptr [rbx]
0x00000000000c4842 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001a09e1 : cmp al, byte ptr [rcx] ; add ah, ch ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001a09cd : cmp al, byte ptr [rcx] ; add al, dl ; adc esi, ebp ; jmp qword ptr [rcx]
0x00000000001a097d : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x13], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018976d : cmp al, byte ptr [rcx] ; add byte ptr [rax + rcx*4], al ; jmp rsp
0x00000000001a09f5 : cmp al, byte ptr [rcx] ; add byte ptr [rax], cl ; adc al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a0991 : cmp al, byte ptr [rcx] ; add byte ptr [rbx + rdx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001600b6 : cmp al, byte ptr [rsi - 1] ; jne 0x1600dc ; xor eax, eax ; ret
0x00000000000dba97 : cmp al, ch ; ret
0x000000000004183f : cmp al, ch ; retf
0x00000000000906c6 : cmp al, dh ; ret
0x00000000000906c5 : cmp al, r14b ; ret
0x000000000008930a : cmp bh, 0x3d ; jne 0x892d2 ; pop rbx ; ret
0x0000000000033b66 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000186329 : cmp bh, bl ; jmp qword ptr [rax]
0x00000000001862c9 : cmp bh, bl ; jmp rax
0x0000000000186325 : cmp bl, bh ; jmp qword ptr [rax]
0x00000000001862c5 : cmp bl, bh ; jmp rax
0x00000000000f2ee6 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x0000000000002d5d : cmp bl, byte ptr [rip - 0x165c2f47] ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x000000000008aa66 : cmp bl, dl ; jb 0x8aa4c ; mov rdx, rax ; jmp 0x8aa03
0x00000000000a17e6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000d977a : cmp byte ptr [r13 - 0x77], r9b ; retf 0xc149
0x0000000000073522 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000dbba9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000766d6 : cmp byte ptr [rax + 0x29], cl ; ret
0x000000000004bc41 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000078c29 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000078b17 : cmp byte ptr [rax + 0x39], cl ; ret 0x4b74
0x00000000000444b4 : cmp byte ptr [rax + 1], 0 ; jne 0x444b7 ; pop rbx ; ret
0x0000000000090707 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000006eed5 : cmp byte ptr [rax + 1], cl ; ret
0x000000000006e900 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000d8d8c : cmp byte ptr [rax - 0x73], cl ; jl 0xd8dbd ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000026831 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001028a7 : cmp byte ptr [rax - 0x75], cl ; jp 0x102904 ; mov rsi, rdx ; call rax
0x0000000000073523 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000124607 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001017a8 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000008919b : cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000073da0 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x00000000001347fd : cmp byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000011fcde : cmp byte ptr [rax - 0x77], cl ; retf 0xce89
0x00000000001017a7 : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000011c145 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000011dd3e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000006e6a6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000007a8a0 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000083698 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000f4afe : cmp byte ptr [rax - 1], 0x2f ; jne 0xf4b36 ; mov rdx, rax ; jmp 0xf4b1e
0x00000000000f4afd : cmp byte ptr [rax - 1], 0x2f ; jne 0xf4b37 ; mov rdx, rax ; jmp 0xf4b1f
0x000000000014dfc8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000906f6 : cmp byte ptr [rax], ah ; ret
0x000000000012aee7 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b1b8 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001a632c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xdc000193 ; retf 0xfff6
0x0000000000042179 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000190785 : cmp byte ptr [rax], al ; add byte ptr [rax], bh ; retf
0x0000000000038c55 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007b843 : cmp byte ptr [rax], al ; je 0x7b855 ; ret
0x000000000002cb16 : cmp byte ptr [rax], al ; mov byte ptr [rip + 0x3890bf], dl ; ret
0x000000000002d7d2 : cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x000000000002df69 : cmp byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002a385 : cmp byte ptr [rax], al ; ret
0x0000000000155172 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000130577 : cmp byte ptr [rax], ch ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000dbbaa : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095a00 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000090bc6 : cmp byte ptr [rax], dh ; ret
0x00000000000906e6 : cmp byte ptr [rax], dl ; ret
0x00000000000906e5 : cmp byte ptr [rax], r10b ; ret
0x00000000000906f5 : cmp byte ptr [rax], r12b ; ret
0x0000000000090bc5 : cmp byte ptr [rax], r14b ; ret
0x00000000000959ff : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000a17ea : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a17e9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000089f8a : cmp byte ptr [rbp + 0x31], al ; fild dword ptr [rbp + 0x38] ; retf 0x1975
0x00000000000f4c9e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000089ffd : cmp byte ptr [rbp - 0x77], al ; retf
0x00000000000d977b : cmp byte ptr [rbp - 0x77], cl ; retf 0xc149
0x00000000000cdfcb : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000007d794 : cmp byte ptr [rbx + 0x33], ch ; add bl, dh ; ret
0x00000000001647b6 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000032f96 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000115745 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; ret
0x0000000000041f85 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cec36 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xcec47 ; pop rbx ; ret
0x00000000001a3ab0 : cmp byte ptr [rbx + 1], ch ; add ah, cl ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a534c : cmp byte ptr [rbx - 0x4ff1b5f9], al ; add dword ptr [rbx], eax ; ret
0x000000000018eea4 : cmp byte ptr [rbx - 0x6ff1b3f9], al ; add al, byte ptr [rdx] ; retf 0xe0a
0x00000000001960b0 : cmp byte ptr [rbx - 0x7ff1bbf9], al ; add dword ptr [rdx], eax ; ret 0xe0a
0x00000000000a17e7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000011fb80 : cmp byte ptr [rcx + 9], cl ; ror byte ptr [rax - 0x77], 1 ; retf 0xc148
0x0000000000075918 : cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000030424 : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000080cdd : cmp byte ptr [rcx - 0x75], cl ; push rcx ; or dh, dh ; ret 0xf04
0x000000000012d22c : cmp byte ptr [rcx - 0x77], cl ; ret
0x0000000000002cac : cmp byte ptr [rcx], ah ; loop 0x2cc3 ; retf
0x00000000001a0865 : cmp byte ptr [rcx], al ; add al, cl ; adc ch, dh ; call qword ptr [rdx]
0x0000000000189715 : cmp byte ptr [rcx], al ; add byte ptr [rax + rax*4 - 0xd], dh ; jmp rsp
0x00000000001a0801 : cmp byte ptr [rcx], al ; add byte ptr [rax + rdx], ch ; cmc ; call qword ptr [rax]
0x0000000000010318 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000d3fa2 : cmp byte ptr [rcx], al ; retf 0x6348
0x000000000014dfc9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000001a13a8 : cmp byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a3d68 : cmp byte ptr [rcx], bl ; cld ; jmp qword ptr [rdx]
0x00000000000ba09c : cmp byte ptr [rcx], ch ; ret 0xb8
0x000000000009d334 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000000d3fa1 : cmp byte ptr [rcx], r8b ; retf 0x6348
0x00000000000d1a3e : cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x000000000008cdb4 : cmp byte ptr [rdi + rax], dl ; je 0x8cdb6 ; ret
0x000000000000209c : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000185f20 : cmp byte ptr [rdi - 0x3edf0004], 0xfc ; inc eax ; ret 0xfffc
0x000000000002e410 : cmp byte ptr [rdi], 0 ; jne 0x2e429 ; add rsp, 0x18 ; ret
0x000000000002e450 : cmp byte ptr [rdi], 0 ; jne 0x2e469 ; add rsp, 0x18 ; ret
0x00000000000380c8 : cmp byte ptr [rdi], 0 ; jne 0x380d6 ; pop rbx ; ret
0x000000000007e246 : cmp byte ptr [rdi], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007b808 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000d004a : cmp byte ptr [rdi], cl ; test byte ptr [rdi - 0xa000000], bh ; ret
0x000000000004154f : cmp byte ptr [rdi], cl ; test byte ptr [rsp + rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000fef85 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5422
0x000000000015bafd : cmp byte ptr [rdi], dl ; ret
0x000000000015c610 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000015c5f9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015c5e2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015b09e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018626c : cmp byte ptr [rip + 0x3010fffb], 0xfb ; call rax
0x00000000000cd150 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xcd168 ; xor eax, eax ; ret
0x000000000018ef58 : cmp byte ptr [rsi - 0x16], cl ; call qword ptr [rax]
0x000000000002cb6a : cmp byte ptr [rsi - 0x27], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000d1b66 : cmp byte ptr [rsi], cl ; je 0xd1b05 ; ret
0x0000000000194838 : cmp byte ptr [rsi], dh ; out dx, al ; jmp rbx
0x00000000001050c2 : cmp ch, byte ptr [rsi + 0xf48fff9] ; ret 0xfc3
0x00000000000b3320 : cmp cl, al ; je 0xb3338 ; mov rax, rdx ; pop rbx ; ret
0x00000000000872b6 : cmp cl, byte ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000007dde2 : cmp cl, byte ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7502
0x00000000001154f1 : cmp cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000006f6d0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000105fc8 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000c3fc9 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x3ff
0x000000000006f9c9 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x945
0x0000000000137e01 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000137f51 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x00000000001380a1 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x00000000001381f1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000138341 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000138491 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x00000000001385e1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000138731 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000138881 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x00000000001389d1 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000138b21 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000138c71 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000138dc1 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x0000000000138f11 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000139061 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000013d03a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000013d1ba : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000013d33a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000013d4ba : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000013d63a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000013d7ba : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000013d93a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000013daba : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000013dc3a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000013ddba : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000013df3a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000013e0ba : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000013e23a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000013e3ba : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000013e53a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000011a92b : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000874d2 : cmp cl, byte ptr [rdx + 0xf480001] ; ret 0xfc3
0x00000000001769c6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000a8500 : cmp cl, ch ; ret 0xfff7
0x00000000001883cc : cmp cl, cl ; add byte ptr [rax], al ; ret 0xffee
0x00000000000d318b : cmp dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000179b01 : cmp dh, ah ; call qword ptr [rbx]
0x00000000000ff5b4 : cmp dh, al ; add cl, byte ptr [rdx] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ff5cc : cmp dh, al ; add dword ptr [rax], esp ; add rsp, 0x10 ; pop rbx ; ret
0x000000000018aee1 : cmp dh, bh ; call rax
0x000000000018aee9 : cmp dh, bh ; jmp rsp
0x00000000001590b1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000380c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000015e60a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001a145d : cmp dh, ch ; jmp qword ptr [rcx]
0x0000000000194975 : cmp dh, ch ; jmp qword ptr [rdi]
0x00000000001a4de1 : cmp dh, dh ; call qword ptr [rcx]
0x00000000001a4df5 : cmp dh, dh ; jmp rax
0x00000000000da31c : cmp dh, dh ; ret 0x7408
0x00000000000966f5 : cmp dh, dh ; ret 0x7501
0x0000000000089309 : cmp dil, 0x3d ; jne 0x892d3 ; pop rbx ; ret
0x0000000000065bd6 : cmp dl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a0440 : cmp dl, 1 ; ja 0xa0463 ; jb 0xa0452 ; mov byte ptr [rdi], cl ; ret
0x000000000015d65b : cmp dl, 1 ; jb 0x15d66d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015dd2a : cmp dl, 1 ; jb 0x15dd38 ; mov byte ptr [rdi], cl ; ret
0x0000000000085e55 : cmp dl, 3 ; je 0x85e81 ; movsx eax, dl ; ret
0x00000000000839c5 : cmp dl, al ; jne 0x839b8 ; sub rax, 0x10 ; ret
0x00000000001795bc : cmp dl, bl ; jmp qword ptr [rbx]
0x00000000001981f8 : cmp dl, bl ; sti ; call rsp
0x0000000000002c36 : cmp dl, byte ptr [rdi] ; ret
0x0000000000178b19 : cmp dl, dh ; call rax
0x0000000000178b25 : cmp dl, dh ; inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x0000000000178b15 : cmp dl, dh ; inc eax ; cmp dl, dh ; call rax
0x0000000000178b1d : cmp dl, dh ; jmp rax
0x0000000000178b11 : cmp dl, dh ; push qword ptr [rax - 0x3f000dc8] ; cmp dl, dh ; call rax
0x0000000000178b21 : cmp dl, dh ; push rax ; cmp dl, dh ; inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x00000000000839c4 : cmp dl, r8b ; jne 0x839b9 ; sub rax, 0x10 ; ret
0x00000000000c5bc6 : cmp dword ptr [rax + 0x20], edi ; ret
0x00000000000e86b6 : cmp dword ptr [rax + 0x48], edi ; syscall
0x00000000000d2134 : cmp dword ptr [rax + 0x63], ecx ; retf 0xeeb
0x0000000000137357 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000087b83 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbx + rcx*4 + 0x35], cl ; xchg eax, edx ; ret
0x0000000000150927 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000190971 : cmp dword ptr [rax], eax ; add ah, cl ; adc al, 0xeb ; call rdi
0x000000000002134f : cmp dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022a55 : cmp dword ptr [rax], eax ; ret
0x000000000013e758 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000026fad : cmp dword ptr [rcx - 0xa], eax ; ret 0xf08
0x000000000002134e : cmp dword ptr [rcx], 0x5d5b5800 ; ret
0x00000000001a0919 : cmp dword ptr [rcx], eax ; add ah, al ; adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a092d : cmp dword ptr [rcx], eax ; add al, ah ; adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a08c1 : cmp dword ptr [rcx], eax ; add byte ptr [rdx + rdx], bh ; cmc ; jmp rax
0x0000000000189735 : cmp dword ptr [rcx], eax ; add byte ptr [rsp + rax*4 - 0xd], ah ; jmp rsp
0x00000000000ff711 : cmp dword ptr [rdi + 0x10], 0 ; je 0xff728 ; xor eax, eax ; ret
0x0000000000077484 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000117ece : cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x000000000007b841 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b857 ; ret
0x0000000000117eee : cmp dword ptr [rdi + 4], ecx ; sete dl ; and eax, edx ; ret
0x00000000000b1e14 : cmp dword ptr [rdi + 8], edx ; jne 0xb1dea ; ret
0x000000000010396a : cmp dword ptr [rdi], 0 ; je 0x10397e ; ret
0x000000000007e130 : cmp dword ptr [rdi], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000017715c : cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x000000000004b4d7 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000722a8 : cmp dword ptr [rsi + 0x30], 0 ; je 0x722b7 ; ret
0x00000000000f29fc : cmp dword ptr [rsi], 0 ; je 0xf2a0e ; ret
0x000000000000395e : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x0000000000117e95 : cmp dx, word ptr [rsi] ; je 0x117ea6 ; ret
0x00000000000ec9cd : cmp eax, -0x5f ; je 0xec9f0 ; neg eax ; pop rbx ; ret
0x00000000000ecc1d : cmp eax, -0x5f ; je 0xecc40 ; neg eax ; pop rbx ; ret
0x0000000000112d70 : cmp eax, -0xb ; je 0x112d6e ; pop rbx ; ret
0x000000000013102e : cmp eax, -1 ; je 0x131049 ; add rsp, 8 ; ret
0x00000000000722c3 : cmp eax, -1 ; je 0x722d6 ; pop rbx ; ret
0x00000000000456f4 : cmp eax, -1 ; jne 0x456e8 ; mov rax, rdx ; ret
0x0000000000035ae1 : cmp eax, -8 ; jne 0x35ad7 ; xor eax, eax ; ret
0x0000000000035b31 : cmp eax, -8 ; jne 0x35b27 ; xor eax, eax ; ret
0x000000000000fcc9 : cmp eax, 0x11 ; add byte ptr [rax], al ; ret 0
0x0000000000003cfb : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000001a0cad : cmp eax, 0x1d400001 ; cmc ; jmp rcx
0x0000000000165819 : cmp eax, 0x1f0ffffb ; add bl, sil ; ret
0x000000000002a5f9 : cmp eax, 0x20c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f193b : cmp eax, 0x2c2a08 ; ret
0x000000000018626d : cmp eax, 0x3010fffb ; sti ; call rax
0x000000000018622d : cmp eax, 0x3050fffb ; sti ; call qword ptr [rax]
0x0000000000084fe2 : cmp eax, 0x3319c8 ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x0000000000179b55 : cmp eax, 0x3329fff4 ; hlt ; jmp qword ptr [rbx]
0x00000000000c69e1 : cmp eax, 0x4000 ; sete dl ; jmp 0xc69af
0x00000000000dc901 : cmp eax, 0x4000 ; sete dl ; jmp 0xdc8cf
0x00000000000c5d29 : cmp eax, 0x414a53 ; jne 0xc5d00 ; jmp 0xc5ce1
0x0000000000186511 : cmp eax, 0x41d0fffb ; sti ; jmp qword ptr [rax]
0x00000000000c5cd4 : cmp eax, 0x5346544e ; jne 0xc5d03 ; xor eax, eax ; ret
0x00000000001594a4 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000065e22 : cmp eax, 0x89000041 ; retf 0x348
0x00000000001626e5 : cmp eax, 0x89497fff ; ret
0x00000000001897ed : cmp eax, 0x91140001 ; jmp rsp
0x0000000000173eeb : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000008932f : cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000132b95 : cmp eax, 0xc0310028 ; ret
0x00000000000d3a1b : cmp eax, 0xf7fffffc ; ret 0
0x0000000000081367 : cmp eax, 0xfcf74 ; call 0x7ddb7
0x000000000008133c : cmp eax, 0xfcfbc ; call 0x7ddb7
0x00000000000ab2d5 : cmp eax, 0xff ; je 0xab2e6 ; ret
0x00000000001046b8 : cmp eax, 0xfffff000 ; ja 0x1046d0 ; ret
0x0000000000104762 : cmp eax, 0xfffff000 ; ja 0x104778 ; ret
0x000000000010663a : cmp eax, 0xfffff000 ; ja 0x106650 ; ret
0x000000000010670d : cmp eax, 0xfffff000 ; ja 0x106728 ; ret
0x000000000003519e : cmp eax, 0xfffff000 ; ja 0x351b8 ; ret
0x000000000003520d : cmp eax, 0xfffff000 ; ja 0x35228 ; ret
0x000000000003525a : cmp eax, 0xfffff000 ; ja 0x352b0 ; ret
0x0000000000038f25 : cmp eax, 0xfffff000 ; ja 0x38f88 ; ret
0x000000000006af08 : cmp eax, 0xfffff000 ; ja 0x6af20 ; ret
0x000000000006af3b : cmp eax, 0xfffff000 ; ja 0x6af50 ; ret
0x00000000000b39d8 : cmp eax, 0xfffff000 ; ja 0xb39f0 ; ret
0x00000000000c40c2 : cmp eax, 0xfffff000 ; ja 0xc4120 ; ret
0x00000000000c4158 : cmp eax, 0xfffff000 ; ja 0xc41c0 ; ret
0x00000000000c41eb : cmp eax, 0xfffff000 ; ja 0xc4200 ; ret
0x00000000000c427b : cmp eax, 0xfffff000 ; ja 0xc42e8 ; ret
0x00000000000c43c5 : cmp eax, 0xfffff000 ; ja 0xc4408 ; ret
0x00000000000c4438 : cmp eax, 0xfffff000 ; ja 0xc4450 ; ret
0x00000000000c4475 : cmp eax, 0xfffff000 ; ja 0xc44c8 ; ret
0x00000000000c44f8 : cmp eax, 0xfffff000 ; ja 0xc4510 ; ret
0x00000000000e66a8 : cmp eax, 0xfffff000 ; ja 0xe6718 ; ret
0x00000000000e6758 : cmp eax, 0xfffff000 ; ja 0xe67c8 ; ret
0x00000000000e77c6 : cmp eax, 0xfffff000 ; ja 0xe77d8 ; ret
0x00000000000e7814 : cmp eax, 0xfffff000 ; ja 0xe7828 ; ret
0x00000000000e7866 : cmp eax, 0xfffff000 ; ja 0xe7878 ; ret
0x00000000000e78be : cmp eax, 0xfffff000 ; ja 0xe78d8 ; ret
0x00000000000e7922 : cmp eax, 0xfffff000 ; ja 0xe7938 ; ret
0x00000000000e797a : cmp eax, 0xfffff000 ; ja 0xe7990 ; ret
0x00000000000e7ba5 : cmp eax, 0xfffff000 ; ja 0xe7bb8 ; ret
0x00000000000e80d2 : cmp eax, 0xfffff000 ; ja 0xe8138 ; ret
0x00000000000e8165 : cmp eax, 0xfffff000 ; ja 0xe8178 ; ret
0x00000000000e81a5 : cmp eax, 0xfffff000 ; ja 0xe8208 ; ret
0x00000000000e8238 : cmp eax, 0xfffff000 ; ja 0xe8250 ; ret
0x00000000000e8268 : cmp eax, 0xfffff000 ; ja 0xe8280 ; ret
0x00000000000e8298 : cmp eax, 0xfffff000 ; ja 0xe82b0 ; ret
0x00000000000e8925 : cmp eax, 0xfffff000 ; ja 0xe8970 ; ret
0x00000000000e8998 : cmp eax, 0xfffff000 ; ja 0xe89b0 ; ret
0x00000000000e8ac5 : cmp eax, 0xfffff000 ; ja 0xe8b18 ; ret
0x00000000000ec615 : cmp eax, 0xfffff000 ; ja 0xec678 ; ret
0x00000000000ed0a0 : cmp eax, 0xfffff000 ; ja 0xed0b8 ; ret
0x00000000000ed0f4 : cmp eax, 0xfffff000 ; ja 0xed108 ; ret
0x00000000000ed1b8 : cmp eax, 0xfffff000 ; ja 0xed228 ; ret
0x00000000000ed268 : cmp eax, 0xfffff000 ; ja 0xed2d8 ; ret
0x00000000000ed7ef : cmp eax, 0xfffff000 ; ja 0xed848 ; ret
0x00000000000ed9c1 : cmp eax, 0xfffff000 ; ja 0xed9d8 ; ret
0x00000000000eda02 : cmp eax, 0xfffff000 ; ja 0xeda18 ; ret
0x00000000000edfb5 : cmp eax, 0xfffff000 ; ja 0xee018 ; ret
0x00000000000ee055 : cmp eax, 0xfffff000 ; ja 0xee0b8 ; ret
0x00000000000ee0fb : cmp eax, 0xfffff000 ; ja 0xee168 ; ret
0x00000000000ee1ab : cmp eax, 0xfffff000 ; ja 0xee218 ; ret
0x00000000000ee998 : cmp eax, 0xfffff000 ; ja 0xeea10 ; ret
0x00000000000eebb5 : cmp eax, 0xfffff000 ; ja 0xeec00 ; ret
0x00000000000eec65 : cmp eax, 0xfffff000 ; ja 0xeecb0 ; ret
0x00000000000eed14 : cmp eax, 0xfffff000 ; ja 0xeed28 ; ret
0x00000000000f00e8 : cmp eax, 0xfffff000 ; ja 0xf0100 ; ret
0x00000000000f02cd : cmp eax, 0xfffff000 ; ja 0xf02e8 ; ret
0x00000000000f0308 : cmp eax, 0xfffff000 ; ja 0xf0320 ; ret
0x00000000000f0338 : cmp eax, 0xfffff000 ; ja 0xf0350 ; ret
0x00000000000f1c55 : cmp eax, 0xfffff000 ; ja 0xf1cb8 ; ret
0x00000000000f441f : cmp eax, 0xfffff000 ; ja 0xf4438 ; ret
0x00000000000f6e3e : cmp eax, 0xfffff000 ; ja 0xf6ec0 ; ret
0x00000000000f6ef0 : cmp eax, 0xfffff000 ; ja 0xf6f08 ; ret
0x00000000000f7018 : cmp eax, 0xfffff000 ; ja 0xf7088 ; ret
0x00000000000f70c8 : cmp eax, 0xfffff000 ; ja 0xf7138 ; ret
0x00000000000f7178 : cmp eax, 0xfffff000 ; ja 0xf71e8 ; ret
0x00000000000f7228 : cmp eax, 0xfffff000 ; ja 0xf72b0 ; ret
0x00000000000f72f5 : cmp eax, 0xfffff000 ; ja 0xf7358 ; ret
0x00000000000f738c : cmp eax, 0xfffff000 ; ja 0xf73f0 ; ret
0x00000000000f7410 : cmp eax, 0xfffff000 ; ja 0xf7428 ; ret
0x00000000000f7c85 : cmp eax, 0xfffff000 ; ja 0xf7ce8 ; ret
0x00000000000f7d55 : cmp eax, 0xfffff000 ; ja 0xf7db8 ; ret
0x00000000000f7ebe : cmp eax, 0xfffff000 ; ja 0xf7f38 ; ret
0x00000000000f7f78 : cmp eax, 0xfffff000 ; ja 0xf8000 ; ret
0x00000000000f8045 : cmp eax, 0xfffff000 ; ja 0xf80a8 ; ret
0x00000000000f80ee : cmp eax, 0xfffff000 ; ja 0xf8168 ; ret
0x00000000000f81a5 : cmp eax, 0xfffff000 ; ja 0xf8208 ; ret
0x00000000000f8248 : cmp eax, 0xfffff000 ; ja 0xf82d0 ; ret
0x00000000000f8648 : cmp eax, 0xfffff000 ; ja 0xf86b8 ; ret
0x00000000000f86f8 : cmp eax, 0xfffff000 ; ja 0xf8770 ; ret
0x00000000000f87a8 : cmp eax, 0xfffff000 ; ja 0xf8818 ; ret
0x00000000000f8948 : cmp eax, 0xfffff000 ; ja 0xf89b8 ; ret
0x00000000000f89f8 : cmp eax, 0xfffff000 ; ja 0xf8a78 ; ret
0x00000000000f8aa8 : cmp eax, 0xfffff000 ; ja 0xf8ac0 ; ret
0x00000000000f8ad8 : cmp eax, 0xfffff000 ; ja 0xf8af0 ; ret
0x00000000000f8b08 : cmp eax, 0xfffff000 ; ja 0xf8b20 ; ret
0x00000000000f8b38 : cmp eax, 0xfffff000 ; ja 0xf8b50 ; ret
0x00000000000f8c0b : cmp eax, 0xfffff000 ; ja 0xf8c20 ; ret
0x00000000000f8c38 : cmp eax, 0xfffff000 ; ja 0xf8c50 ; ret
0x00000000000f8c68 : cmp eax, 0xfffff000 ; ja 0xf8c80 ; ret
0x00000000000f8c9b : cmp eax, 0xfffff000 ; ja 0xf8cb0 ; ret
0x00000000000f8cc8 : cmp eax, 0xfffff000 ; ja 0xf8ce0 ; ret
0x000000000012eb6b : cmp eax, 0xfffff001 ; jae 0x12eb7a ; ret
0x000000000012ebbb : cmp eax, 0xfffff001 ; jae 0x12ebca ; ret
0x00000000000351d8 : cmp eax, 0xfffff001 ; jae 0x351e7 ; ret
0x00000000000356f8 : cmp eax, 0xfffff001 ; jae 0x35707 ; ret
0x0000000000044f22 : cmp eax, 0xfffff001 ; jae 0x44f35 ; xor eax, eax ; ret
0x00000000000b3ab8 : cmp eax, 0xfffff001 ; jae 0xb3ac7 ; ret
0x00000000000b62d8 : cmp eax, 0xfffff001 ; jae 0xb62e7 ; ret
0x00000000000b6308 : cmp eax, 0xfffff001 ; jae 0xb6317 ; ret
0x00000000000c4018 : cmp eax, 0xfffff001 ; jae 0xc4027 ; ret
0x00000000000c423b : cmp eax, 0xfffff001 ; jae 0xc424a ; ret
0x00000000000c4318 : cmp eax, 0xfffff001 ; jae 0xc4327 ; ret
0x00000000000c4849 : cmp eax, 0xfffff001 ; jae 0xc4858 ; ret
0x00000000000c48d8 : cmp eax, 0xfffff001 ; jae 0xc48e7 ; ret
0x00000000000c5328 : cmp eax, 0xfffff001 ; jae 0xc5337 ; ret
0x00000000000c5528 : cmp eax, 0xfffff001 ; jae 0xc5537 ; ret
0x00000000000c5558 : cmp eax, 0xfffff001 ; jae 0xc5567 ; ret
0x00000000000c55b8 : cmp eax, 0xfffff001 ; jae 0xc55c7 ; ret
0x00000000000c55e8 : cmp eax, 0xfffff001 ; jae 0xc55f7 ; ret
0x00000000000c5618 : cmp eax, 0xfffff001 ; jae 0xc5627 ; ret
0x00000000000c5648 : cmp eax, 0xfffff001 ; jae 0xc5657 ; ret
0x00000000000de678 : cmp eax, 0xfffff001 ; jae 0xde687 ; ret
0x00000000000de6a8 : cmp eax, 0xfffff001 ; jae 0xde6b7 ; ret
0x00000000000de6d8 : cmp eax, 0xfffff001 ; jae 0xde6e7 ; ret
0x00000000000de708 : cmp eax, 0xfffff001 ; jae 0xde717 ; ret
0x00000000000de738 : cmp eax, 0xfffff001 ; jae 0xde747 ; ret
0x00000000000de768 : cmp eax, 0xfffff001 ; jae 0xde777 ; ret
0x00000000000de798 : cmp eax, 0xfffff001 ; jae 0xde7a7 ; ret
0x00000000000de7c8 : cmp eax, 0xfffff001 ; jae 0xde7d7 ; ret
0x00000000000e76e8 : cmp eax, 0xfffff001 ; jae 0xe76f7 ; ret
0x00000000000e79c8 : cmp eax, 0xfffff001 ; jae 0xe79d7 ; ret
0x00000000000e79f8 : cmp eax, 0xfffff001 ; jae 0xe7a07 ; ret
0x00000000000e7b18 : cmp eax, 0xfffff001 ; jae 0xe7b27 ; ret
0x00000000000e7b48 : cmp eax, 0xfffff001 ; jae 0xe7b57 ; ret
0x00000000000e7c08 : cmp eax, 0xfffff001 ; jae 0xe7c17 ; ret
0x00000000000e7c38 : cmp eax, 0xfffff001 ; jae 0xe7c47 ; ret
0x00000000000e87c8 : cmp eax, 0xfffff001 ; jae 0xe87d7 ; ret
0x00000000000e89c8 : cmp eax, 0xfffff001 ; jae 0xe89d7 ; ret
0x00000000000e89f8 : cmp eax, 0xfffff001 ; jae 0xe8a07 ; ret
0x00000000000e8a28 : cmp eax, 0xfffff001 ; jae 0xe8a37 ; ret
0x00000000000e8a58 : cmp eax, 0xfffff001 ; jae 0xe8a67 ; ret
0x00000000000e8a88 : cmp eax, 0xfffff001 ; jae 0xe8a97 ; ret
0x00000000000e8b48 : cmp eax, 0xfffff001 ; jae 0xe8b57 ; ret
0x00000000000e8b78 : cmp eax, 0xfffff001 ; jae 0xe8b87 ; ret
0x00000000000e9438 : cmp eax, 0xfffff001 ; jae 0xe9447 ; ret
0x00000000000e9468 : cmp eax, 0xfffff001 ; jae 0xe9477 ; ret
0x00000000000e9498 : cmp eax, 0xfffff001 ; jae 0xe94a7 ; ret
0x00000000000e94cb : cmp eax, 0xfffff001 ; jae 0xe94da ; ret
0x00000000000e9c78 : cmp eax, 0xfffff001 ; jae 0xe9c87 ; ret
0x00000000000e9cab : cmp eax, 0xfffff001 ; jae 0xe9cba ; ret
0x00000000000e9cd8 : cmp eax, 0xfffff001 ; jae 0xe9ce7 ; ret
0x00000000000e9d08 : cmp eax, 0xfffff001 ; jae 0xe9d17 ; ret
0x00000000000e9d38 : cmp eax, 0xfffff001 ; jae 0xe9d47 ; ret
0x00000000000e9d6b : cmp eax, 0xfffff001 ; jae 0xe9d7a ; ret
0x00000000000e9d98 : cmp eax, 0xfffff001 ; jae 0xe9da7 ; ret
0x00000000000e9dc8 : cmp eax, 0xfffff001 ; jae 0xe9dd7 ; ret
0x00000000000e9df8 : cmp eax, 0xfffff001 ; jae 0xe9e07 ; ret
0x00000000000ecc5b : cmp eax, 0xfffff001 ; jae 0xecc6a ; ret
0x00000000000eda38 : cmp eax, 0xfffff001 ; jae 0xeda47 ; ret
0x00000000000edda8 : cmp eax, 0xfffff001 ; jae 0xeddb7 ; ret
0x00000000000edf78 : cmp eax, 0xfffff001 ; jae 0xedf87 ; ret
0x00000000000ee898 : cmp eax, 0xfffff001 ; jae 0xee8a7 ; ret
0x00000000000ee958 : cmp eax, 0xfffff001 ; jae 0xee967 ; ret
0x00000000000eeb48 : cmp eax, 0xfffff001 ; jae 0xeeb57 ; ret
0x00000000000eeb78 : cmp eax, 0xfffff001 ; jae 0xeeb87 ; ret
0x00000000000eec28 : cmp eax, 0xfffff001 ; jae 0xeec37 ; ret
0x00000000000eecd8 : cmp eax, 0xfffff001 ; jae 0xeece7 ; ret
0x00000000000eeff8 : cmp eax, 0xfffff001 ; jae 0xef007 ; ret
0x00000000000ef028 : cmp eax, 0xfffff001 ; jae 0xef037 ; ret
0x00000000000ef058 : cmp eax, 0xfffff001 ; jae 0xef067 ; ret
0x00000000000f196a : cmp eax, 0xfffff001 ; jae 0xf1979 ; ret
0x00000000000f1be8 : cmp eax, 0xfffff001 ; jae 0xf1bf7 ; ret
0x00000000000f1c18 : cmp eax, 0xfffff001 ; jae 0xf1c27 ; ret
0x00000000000f1ce8 : cmp eax, 0xfffff001 ; jae 0xf1cf7 ; ret
0x00000000000f1d18 : cmp eax, 0xfffff001 ; jae 0xf1d27 ; ret
0x00000000000f1d4b : cmp eax, 0xfffff001 ; jae 0xf1d5a ; ret
0x00000000000f1d78 : cmp eax, 0xfffff001 ; jae 0xf1d87 ; ret
0x00000000000f1da8 : cmp eax, 0xfffff001 ; jae 0xf1db7 ; ret
0x00000000000f1dd8 : cmp eax, 0xfffff001 ; jae 0xf1de7 ; ret
0x00000000000f1e08 : cmp eax, 0xfffff001 ; jae 0xf1e17 ; ret
0x00000000000f4cbb : cmp eax, 0xfffff001 ; jae 0xf4cca ; ret
0x00000000000f4ce8 : cmp eax, 0xfffff001 ; jae 0xf4cf7 ; ret
0x00000000000f4d18 : cmp eax, 0xfffff001 ; jae 0xf4d27 ; ret
0x00000000000f4d4b : cmp eax, 0xfffff001 ; jae 0xf4d5a ; ret
0x00000000000f4d7b : cmp eax, 0xfffff001 ; jae 0xf4d8a ; ret
0x00000000000f4da8 : cmp eax, 0xfffff001 ; jae 0xf4db7 ; ret
0x00000000000f4ddb : cmp eax, 0xfffff001 ; jae 0xf4dea ; ret
0x00000000000f4e08 : cmp eax, 0xfffff001 ; jae 0xf4e17 ; ret
0x00000000000f4e38 : cmp eax, 0xfffff001 ; jae 0xf4e47 ; ret
0x00000000000f4e6b : cmp eax, 0xfffff001 ; jae 0xf4e7a ; ret
0x00000000000f4e98 : cmp eax, 0xfffff001 ; jae 0xf4ea7 ; ret
0x00000000000f4ecb : cmp eax, 0xfffff001 ; jae 0xf4eda ; ret
0x00000000000f6c08 : cmp eax, 0xfffff001 ; jae 0xf6c17 ; ret
0x00000000000f6c38 : cmp eax, 0xfffff001 ; jae 0xf6c47 ; ret
0x00000000000f6d68 : cmp eax, 0xfffff001 ; jae 0xf6d77 ; ret
0x00000000000f6d98 : cmp eax, 0xfffff001 ; jae 0xf6da7 ; ret
0x00000000000f6dc8 : cmp eax, 0xfffff001 ; jae 0xf6dd7 ; ret
0x00000000000f6df8 : cmp eax, 0xfffff001 ; jae 0xf6e07 ; ret
0x00000000000f6f28 : cmp eax, 0xfffff001 ; jae 0xf6f37 ; ret
0x00000000000f6fab : cmp eax, 0xfffff001 ; jae 0xf6fba ; ret
0x00000000000f6fd8 : cmp eax, 0xfffff001 ; jae 0xf6fe7 ; ret
0x00000000000f74c8 : cmp eax, 0xfffff001 ; jae 0xf74d7 ; ret
0x00000000000f74f8 : cmp eax, 0xfffff001 ; jae 0xf7507 ; ret
0x00000000000f753b : cmp eax, 0xfffff001 ; jae 0xf754a ; ret
0x00000000000f7568 : cmp eax, 0xfffff001 ; jae 0xf7577 ; ret
0x00000000000f7598 : cmp eax, 0xfffff001 ; jae 0xf75a7 ; ret
0x00000000000f75c8 : cmp eax, 0xfffff001 ; jae 0xf75d7 ; ret
0x00000000000f75f8 : cmp eax, 0xfffff001 ; jae 0xf7607 ; ret
0x00000000000f7628 : cmp eax, 0xfffff001 ; jae 0xf7637 ; ret
0x00000000000f7658 : cmp eax, 0xfffff001 ; jae 0xf7667 ; ret
0x00000000000f7688 : cmp eax, 0xfffff001 ; jae 0xf7697 ; ret
0x00000000000f76b8 : cmp eax, 0xfffff001 ; jae 0xf76c7 ; ret
0x00000000000f76eb : cmp eax, 0xfffff001 ; jae 0xf76fa ; ret
0x00000000000f7718 : cmp eax, 0xfffff001 ; jae 0xf7727 ; ret
0x00000000000f774b : cmp eax, 0xfffff001 ; jae 0xf775a ; ret
0x00000000000f7778 : cmp eax, 0xfffff001 ; jae 0xf7787 ; ret
0x00000000000f77a8 : cmp eax, 0xfffff001 ; jae 0xf77b7 ; ret
0x00000000000f77d8 : cmp eax, 0xfffff001 ; jae 0xf77e7 ; ret
0x00000000000f7808 : cmp eax, 0xfffff001 ; jae 0xf7817 ; ret
0x00000000000f7838 : cmp eax, 0xfffff001 ; jae 0xf7847 ; ret
0x00000000000f786b : cmp eax, 0xfffff001 ; jae 0xf787a ; ret
0x00000000000f789b : cmp eax, 0xfffff001 ; jae 0xf78aa ; ret
0x00000000000f78c8 : cmp eax, 0xfffff001 ; jae 0xf78d7 ; ret
0x00000000000f78f8 : cmp eax, 0xfffff001 ; jae 0xf7907 ; ret
0x00000000000f792b : cmp eax, 0xfffff001 ; jae 0xf793a ; ret
0x00000000000f795b : cmp eax, 0xfffff001 ; jae 0xf796a ; ret
0x00000000000f798b : cmp eax, 0xfffff001 ; jae 0xf799a ; ret
0x00000000000f79b8 : cmp eax, 0xfffff001 ; jae 0xf79c7 ; ret
0x00000000000f79e8 : cmp eax, 0xfffff001 ; jae 0xf79f7 ; ret
0x00000000000f7a18 : cmp eax, 0xfffff001 ; jae 0xf7a27 ; ret
0x00000000000f7a48 : cmp eax, 0xfffff001 ; jae 0xf7a57 ; ret
0x00000000000f7a7b : cmp eax, 0xfffff001 ; jae 0xf7a8a ; ret
0x00000000000f7aa8 : cmp eax, 0xfffff001 ; jae 0xf7ab7 ; ret
0x00000000000f7ad8 : cmp eax, 0xfffff001 ; jae 0xf7ae7 ; ret
0x00000000000f7b0b : cmp eax, 0xfffff001 ; jae 0xf7b1a ; ret
0x00000000000f7b38 : cmp eax, 0xfffff001 ; jae 0xf7b47 ; ret
0x00000000000f7b6b : cmp eax, 0xfffff001 ; jae 0xf7b7a ; ret
0x00000000000f7b9b : cmp eax, 0xfffff001 ; jae 0xf7baa ; ret
0x00000000000f7bc8 : cmp eax, 0xfffff001 ; jae 0xf7bd7 ; ret
0x00000000000f7bf8 : cmp eax, 0xfffff001 ; jae 0xf7c07 ; ret
0x00000000000f7c28 : cmp eax, 0xfffff001 ; jae 0xf7c37 ; ret
0x00000000000f7d18 : cmp eax, 0xfffff001 ; jae 0xf7d27 ; ret
0x00000000000f7de8 : cmp eax, 0xfffff001 ; jae 0xf7df7 ; ret
0x00000000000f7e18 : cmp eax, 0xfffff001 ; jae 0xf7e27 ; ret
0x00000000000f7e4b : cmp eax, 0xfffff001 ; jae 0xf7e5a ; ret
0x00000000000f7e78 : cmp eax, 0xfffff001 ; jae 0xf7e87 ; ret
0x00000000000f830b : cmp eax, 0xfffff001 ; jae 0xf831a ; ret
0x00000000000f8338 : cmp eax, 0xfffff001 ; jae 0xf8347 ; ret
0x00000000000f8368 : cmp eax, 0xfffff001 ; jae 0xf8377 ; ret
0x00000000000f839b : cmp eax, 0xfffff001 ; jae 0xf83aa ; ret
0x0000000000059f6c : cmp eax, 0xfffff9a7 ; add rax, rdi ; jmp rax
0x00000000001049c1 : cmp eax, 0xfffffe8a ; call rax
0x0000000000088e0a : cmp eax, 1 ; ja 0x88df1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129600 : cmp eax, 1 ; jne 0x129619 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000a0a2f : cmp eax, 2 ; je 0xa0a47 ; xor eax, eax ; ret
0x0000000000129610 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000ceb7d : cmp eax, 3 ; je 0xceb8e ; ret
0x000000000010404a : cmp eax, 4 ; je 0x104055 ; ret
0x000000000012b511 : cmp eax, dword ptr [rax + rax] ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000c48d1 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018978d : cmp eax, dword ptr [rcx] ; add ah, dl ; mov esi, ebx ; call rax
0x00000000000cea19 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000079a85 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79a98 ; movzx eax, byte ptr [rax] ; ret
0x000000000018c53d : cmp eax, dword ptr [rdx] ; add byte ptr [rax + rsi], al ; cli ; call qword ptr [rax]
0x00000000000a170e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xa1809 ; ret
0x00000000000a1723 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xa1809 ; ret
0x00000000000a1738 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xa1809 ; ret
0x00000000000a1753 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xa1809 ; ret
0x00000000000a176e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xa1809 ; ret
0x00000000000a1783 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xa1805 ; ret
0x00000000000a1798 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xa1805 ; ret
0x00000000000a17a3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa1805 ; ret
0x00000000000a17be : cmp eax, dword ptr [rsi + 0x30] ; jne 0xa1805 ; ret
0x00000000000a17d3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xa1805 ; ret
0x00000000000a17e8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xa1805 ; ret
0x00000000000a17f3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa1805 ; ret
0x00000000000a16f3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xa1809 ; ret
0x00000000000a16c3 : cmp eax, dword ptr [rsi + 4] ; jne 0xa1809 ; ret
0x00000000000a16d8 : cmp eax, dword ptr [rsi + 8] ; jne 0xa1809 ; ret
0x00000000001605ba : cmp eax, dword ptr [rsi - 0x10] ; jne 0x1606f9 ; ret
0x00000000001605d3 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x1606f9 ; ret
0x00000000001606e3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1606f7 ; xor eax, eax ; ret
0x0000000000160603 : cmp eax, dword ptr [rsi - 4] ; jne 0x1606f9 ; ret
0x00000000001605e8 : cmp eax, dword ptr [rsi - 8] ; jne 0x1606f9 ; ret
0x00000000000a16ad : cmp eax, dword ptr [rsi] ; jne 0xa1808 ; ret
0x0000000000175db7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000000e6a73 : cmp eax, ebx ; seta al ; pop rbx ; ret
0x000000000008ce3d : cmp eax, ecx ; je 0x8ce25 ; ret
0x000000000015518f : cmp eax, ecx ; jle 0x1551cf ; movsxd rax, ecx ; ret
0x000000000004a44a : cmp eax, ecx ; jne 0x4a446 ; pop rbx ; pop rbp ; ret
0x0000000000003c3b : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001600d3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000004a51f : cmp eax, edi ; cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x00000000001abba5 : cmp eax, edi ; jmp qword ptr [rcx]
0x0000000000088096 : cmp eax, edi ; jne 0x88085 ; ret
0x000000000007cf1b : cmp eax, edx ; jae 0x7cf47 ; movzx eax, byte ptr [rax] ; ret
0x00000000001038eb : cmp eax, edx ; jb 0x1038e6 ; xor eax, eax ; ret
0x0000000000127061 : cmp eax, edx ; je 0x127078 ; add rsp, 8 ; ret
0x00000000000d2131 : cmp eax, edx ; jle 0xd2174 ; movsxd rcx, edx ; jmp 0xd214e
0x0000000000103f80 : cmp eax, edx ; jne 0x103f94 ; mov eax, 0xca ; syscall
0x000000000007de19 : cmp eax, edx ; jne 0x7de24 ; ret
0x00000000000a1aa5 : cmp eax, edx ; jne 0xa1a96 ; xor eax, eax ; ret
0x00000000000fe939 : cmp eax, esi ; jb 0xfe951 ; mov eax, 1 ; ret
0x0000000000104d9e : cmp ebp, eax ; in al, dx ; retf
0x0000000000121d49 : cmp ebp, eax ; shr dword ptr [rbx - 4], 0xff ; jmp 0x121d1b
0x00000000001a13a9 : cmp ebp, esi ; jmp qword ptr [rcx]
0x0000000000186885 : cmp ebx, -1 ; jb 0x186812 ; sti ; jmp rdx
0x000000000018693d : cmp ebx, -1 ; je 0x1868cb ; sti ; jmp rsp
0x0000000000103fe6 : cmp ebx, 0xa ; je 0x103ff1 ; ret
0x00000000001869cd : cmp ebx, 0xfb8140ff ; jmp rax
0x000000000018684d : cmp ebx, 0xfb817cff ; jmp qword ptr [rdx]
0x00000000001867d1 : cmp ebx, 0xfb8950ff ; call rax
0x000000000004448b : cmp ebx, eax ; jne 0x44485 ; pop rbx ; ret
0x0000000000186349 : cmp ebx, edi ; call rax
0x00000000001862a5 : cmp ebx, edi ; jmp qword ptr [rax]
0x0000000000117f18 : cmp ebx, edx ; je 0x117f25 ; ret
0x0000000000117fc9 : cmp ebx, edx ; je 0x117f39 ; ret
0x00000000000e50a2 : cmp ebx, esp ; jae 0xe5090 ; mov rdi, r15 ; call 0x212d1
0x0000000000045d5c : cmp ecx, -1 ; jne 0x45d58 ; mov rax, rdx ; ret
0x00000000000a1fdc : cmp ecx, -1 ; jne 0xa1fd9 ; sub rax, 4 ; ret
0x0000000000042b7b : cmp ecx, 0x24 ; jne 0x42b61 ; ret
0x00000000000450bf : cmp ecx, 0x2f ; jmp rdx
0x0000000000029224 : cmp ecx, 0x860f07ff ; ret
0x0000000000106d6c : cmp ecx, 0xc00 ; je 0x106d89 ; ret
0x00000000000a1eec : cmp ecx, 0xc00 ; je 0xa1f09 ; ret
0x000000000005628d : cmp ecx, 9 ; jbe 0x5626b ; mov qword ptr [rdi], rsi ; ret
0x000000000006364d : cmp ecx, 9 ; jbe 0x6362b ; mov qword ptr [rdi], rsi ; ret
0x000000000006c4ad : cmp ecx, 9 ; jbe 0x6c48b ; mov qword ptr [rdi], rsi ; ret
0x00000000001652fb : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; ret
0x000000000011cab4 : cmp ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001327c8 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xdfe8
0x00000000000229e2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d03bc : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000113f7d : cmp ecx, dword ptr [rax - 0x7d] ; ret 0xeb01
0x00000000000df7ac : cmp ecx, dword ptr [rax - 0xc] ; jne 0xdf7a8 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000165da0 : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x165db9 ; pop rbx ; ret
0x000000000011dd26 : cmp ecx, dword ptr [rdi] ; retf 0xfa81
0x0000000000074cbe : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000002e00 : cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x00000000000a1ac0 : cmp ecx, eax ; cmovg eax, edx ; ret
0x000000000015c62b : cmp ecx, eax ; jne 0x15c659 ; xor eax, eax ; ret
0x000000000015d46b : cmp ecx, eax ; jne 0x15d499 ; xor eax, eax ; ret
0x000000000015d49f : cmp ecx, eax ; jne 0x15d4ac ; xor eax, eax ; ret
0x0000000000046c02 : cmp ecx, ecx ; ret
0x000000000012a443 : cmp ecx, edx ; jae 0x12a456 ; xor eax, eax ; ret
0x000000000012a483 : cmp ecx, edx ; jae 0x12a496 ; xor eax, eax ; ret
0x000000000008cde8 : cmp ecx, edx ; je 0x8cde9 ; cmp ecx, esi ; je 0x8cde9 ; ret
0x000000000008cdec : cmp ecx, esi ; je 0x8cde5 ; ret
0x00000000000728da : cmp ecx, esi ; jne 0x728d7 ; lea eax, [rdx + rdi] ; ret
0x00000000000a1abf : cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000d1f4b : cmp edi, 0x83486875 ; ret 0xeb04
0x00000000001659c8 : cmp edi, 1 ; ja 0x1659d6 ; ret
0x00000000000fa33d : cmp edi, 9 ; setbe al ; ret
0x0000000000111fd1 : cmp edi, dword ptr [rax + 3] ; syscall
0x00000000000508f0 : cmp edi, eax ; ja 0x508d7 ; mov eax, r9d ; ret
0x000000000004a48e : cmp edi, eax ; jbe 0x4a426 ; pop rbx ; pop rbp ; ret
0x0000000000165064 : cmp edi, eax ; je 0x16507f ; call 0x212ce
0x00000000000f4413 : cmp edi, eax ; jne 0xf4451 ; mov eax, 0x88 ; syscall
0x00000000001862a9 : cmp edi, ebx ; jmp qword ptr [rax]
0x000000000008d4ab : cmp edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x000000000011ff42 : cmp edi, ecx ; jne 0x11ff35 ; ret
0x00000000001270a3 : cmp edi, ecx ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000086191 : cmp edi, edi ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000ede71 : cmp edi, edx ; ja 0xedea5 ; ret
0x000000000009ff82 : cmp edi, edx ; jb 0x9ff8f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f4f25 : cmp edi, edx ; jne 0xf4f20 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e7560 : cmp edi, esi ; ja 0xe7555 ; ret
0x00000000000508ef : cmp edi, r8d ; ja 0x508d8 ; mov eax, r9d ; ret
0x000000000010f489 : cmp edx, -3 ; jbe 0x10f496 ; ret
0x000000000010836f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000c8cd5 : cmp edx, 1 ; sete al ; ret
0x00000000000cef4f : cmp edx, dword ptr [r8 + rcx*4] ; je 0xcef77 ; ret
0x00000000000cef50 : cmp edx, dword ptr [rax + rcx*4] ; je 0xcef76 ; ret
0x00000000000ceec5 : cmp edx, dword ptr [rsi + 4] ; je 0xceed6 ; ret
0x00000000000a0b41 : cmp edx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000117e96 : cmp edx, dword ptr [rsi] ; je 0x117ea5 ; ret
0x000000000015a224 : cmp edx, dword ptr [rsi] ; jne 0x15a210 ; ret
0x0000000000132b3b : cmp edx, eax ; ja 0x132b36 ; xor eax, eax ; ret
0x0000000000112efd : cmp edx, eax ; jb 0x112f29 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000cd3c7 : cmp edx, eax ; je 0xcd3e5 ; ret
0x00000000001042a2 : cmp edx, eax ; jne 0x104285 ; ret
0x00000000001134dd : cmp edx, eax ; jne 0x1134c6 ; ret
0x000000000004534d : cmp edx, eax ; jne 0x45346 ; xor eax, eax ; ret
0x000000000004542d : cmp edx, eax ; jne 0x45426 ; xor eax, eax ; ret
0x00000000000823da : cmp edx, eax ; jne 0x823a5 ; ret
0x0000000000106631 : cmp edx, ecx ; ja 0x106662 ; xor eax, eax ; syscall
0x0000000000106701 : cmp edx, ecx ; ja 0x10673d ; mov eax, 0x59 ; syscall
0x000000000015a092 : cmp edx, ecx ; jne 0x15a07e ; vzeroupper ; ret
0x000000000015e5e5 : cmp edx, ecx ; jne 0x15e5c9 ; vzeroupper ; ret
0x00000000000a042b : cmp edx, ecx ; jne 0xa0418 ; ret
0x000000000018c649 : cmp edx, edi ; call rax
0x00000000001039ca : cmp edx, edi ; setae al ; ret
0x0000000000178b29 : cmp edx, esi ; call qword ptr [rax]
0x0000000000113ac6 : cmp edx, esi ; jb 0x113abd ; mov eax, 0xffffffff ; ret
0x000000000012a326 : cmp edx, esi ; jbe 0x12a337 ; xor eax, eax ; ret
0x00000000000a30d6 : cmp edx, esi ; je 0xa30e7 ; test edx, edx ; jne 0xa30d9 ; ret
0x0000000000178b2d : cmp edx, esi ; jmp qword ptr [rax]
0x00000000000881c9 : cmp edx, esi ; jne 0x881c5 ; ret
0x0000000000072b09 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000113bcc : cmp esi, 0x80 ; cmovae eax, edi ; ret
0x0000000000077599 : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000002ab44 : cmp esi, 3 ; je 0x2ab56 ; ret
0x000000000015a7b0 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000104757 : cmp esi, dword ptr [rdi + 0x2e] ; mov eax, 0xe3 ; syscall
0x00000000000cf0ad : cmp esi, dword ptr [rdi + 4] ; jl 0xcf0a6 ; ret
0x0000000000042bd1 : cmp esi, dword ptr [rdi] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000011e6ca : cmp esi, dword ptr [rdx + 0x28] ; ja 0x11e6c1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000159bc5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000175f84 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000007d84f : cmp esi, ecx ; jb 0x7d839 ; mov byte ptr [rax + rsi], dil ; ret
0x000000000007c16a : cmp esi, ecx ; jne 0x7c167 ; lea eax, [rdx + rdi] ; ret
0x000000000004a5a6 : cmp esi, edi ; cmovb rax, rdi ; ret
0x00000000000beff1 : cmp esi, edi ; jge 0xbefd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001a7bf1 : cmp esi, edi ; jmp qword ptr [rbx]
0x00000000000f24c5 : cmp esi, esi ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000179bd9 : cmp esi, esp ; call qword ptr [rdi]
0x0000000000179b45 : cmp esi, esp ; call rsp
0x0000000000179b81 : cmp esi, esp ; jmp qword ptr [rdx]
0x00000000001a08c0 : cmp qword ptr [rcx], rax ; add byte ptr [rdx + rdx], bh ; cmc ; jmp rax
0x00000000000ff710 : cmp qword ptr [rdi + 0x10], 0 ; je 0xff729 ; xor eax, eax ; ret
0x0000000000077483 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b840 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b858 ; ret
0x0000000000103969 : cmp qword ptr [rdi], 0 ; je 0x10397f ; ret
0x00000000000722a7 : cmp qword ptr [rsi + 0x30], 0 ; je 0x722b8 ; ret
0x00000000000f29fb : cmp qword ptr [rsi], 0 ; je 0xf2a0f ; ret
0x00000000000cd3c6 : cmp r10d, r8d ; je 0xcd3e6 ; ret
0x0000000000117f17 : cmp r11, rdx ; je 0x117f26 ; ret
0x000000000008aa65 : cmp r11b, r10b ; jb 0x8aa4d ; mov rdx, rax ; jmp 0x8aa04
0x0000000000103fe5 : cmp r11d, 0xa ; je 0x103ff2 ; ret
0x00000000000456f3 : cmp r8, -1 ; jne 0x456e9 ; mov rax, rdx ; ret
0x000000000004a449 : cmp r8, r9 ; jne 0x4a447 ; pop rbx ; pop rbp ; ret
0x00000000000dba96 : cmp r8b, r13b ; ret
0x00000000001626e4 : cmp r8d, 0x89497fff ; ret
0x000000000008ce3c : cmp r8d, ecx ; je 0x8ce26 ; ret
0x00000000000450be : cmp r9d, 0x2f ; jmp rdx
0x0000000000029223 : cmp r9d, 0x860f07ff ; ret
0x00000000001046b7 : cmp rax, -0x1000 ; ja 0x1046d1 ; ret
0x0000000000104761 : cmp rax, -0x1000 ; ja 0x104779 ; ret
0x0000000000106639 : cmp rax, -0x1000 ; ja 0x106651 ; ret
0x000000000010670c : cmp rax, -0x1000 ; ja 0x106729 ; ret
0x000000000003519d : cmp rax, -0x1000 ; ja 0x351b9 ; ret
0x000000000003520c : cmp rax, -0x1000 ; ja 0x35229 ; ret
0x0000000000035259 : cmp rax, -0x1000 ; ja 0x352b1 ; ret
0x0000000000038f24 : cmp rax, -0x1000 ; ja 0x38f89 ; ret
0x000000000006af07 : cmp rax, -0x1000 ; ja 0x6af21 ; ret
0x000000000006af3a : cmp rax, -0x1000 ; ja 0x6af51 ; ret
0x00000000000b39d7 : cmp rax, -0x1000 ; ja 0xb39f1 ; ret
0x00000000000c40c1 : cmp rax, -0x1000 ; ja 0xc4121 ; ret
0x00000000000c4157 : cmp rax, -0x1000 ; ja 0xc41c1 ; ret
0x00000000000c41ea : cmp rax, -0x1000 ; ja 0xc4201 ; ret
0x00000000000c427a : cmp rax, -0x1000 ; ja 0xc42e9 ; ret
0x00000000000c43c4 : cmp rax, -0x1000 ; ja 0xc4409 ; ret
0x00000000000c4437 : cmp rax, -0x1000 ; ja 0xc4451 ; ret
0x00000000000c4474 : cmp rax, -0x1000 ; ja 0xc44c9 ; ret
0x00000000000c44f7 : cmp rax, -0x1000 ; ja 0xc4511 ; ret
0x00000000000e66a7 : cmp rax, -0x1000 ; ja 0xe6719 ; ret
0x00000000000e6757 : cmp rax, -0x1000 ; ja 0xe67c9 ; ret
0x00000000000e77c5 : cmp rax, -0x1000 ; ja 0xe77d9 ; ret
0x00000000000e7813 : cmp rax, -0x1000 ; ja 0xe7829 ; ret
0x00000000000e7865 : cmp rax, -0x1000 ; ja 0xe7879 ; ret
0x00000000000e78bd : cmp rax, -0x1000 ; ja 0xe78d9 ; ret
0x00000000000e7921 : cmp rax, -0x1000 ; ja 0xe7939 ; ret
0x00000000000e7979 : cmp rax, -0x1000 ; ja 0xe7991 ; ret
0x00000000000e7ba4 : cmp rax, -0x1000 ; ja 0xe7bb9 ; ret
0x00000000000e80d1 : cmp rax, -0x1000 ; ja 0xe8139 ; ret
0x00000000000e8164 : cmp rax, -0x1000 ; ja 0xe8179 ; ret
0x00000000000e81a4 : cmp rax, -0x1000 ; ja 0xe8209 ; ret
0x00000000000e8237 : cmp rax, -0x1000 ; ja 0xe8251 ; ret
0x00000000000e8267 : cmp rax, -0x1000 ; ja 0xe8281 ; ret
0x00000000000e8297 : cmp rax, -0x1000 ; ja 0xe82b1 ; ret
0x00000000000e8924 : cmp rax, -0x1000 ; ja 0xe8971 ; ret
0x00000000000e8997 : cmp rax, -0x1000 ; ja 0xe89b1 ; ret
0x00000000000e8ac4 : cmp rax, -0x1000 ; ja 0xe8b19 ; ret
0x00000000000ec614 : cmp rax, -0x1000 ; ja 0xec679 ; ret
0x00000000000ed09f : cmp rax, -0x1000 ; ja 0xed0b9 ; ret
0x00000000000ed0f3 : cmp rax, -0x1000 ; ja 0xed109 ; ret
0x00000000000ed1b7 : cmp rax, -0x1000 ; ja 0xed229 ; ret
0x00000000000ed267 : cmp rax, -0x1000 ; ja 0xed2d9 ; ret
0x00000000000ed7ee : cmp rax, -0x1000 ; ja 0xed849 ; ret
0x00000000000ed9c0 : cmp rax, -0x1000 ; ja 0xed9d9 ; ret
0x00000000000eda01 : cmp rax, -0x1000 ; ja 0xeda19 ; ret
0x00000000000edfb4 : cmp rax, -0x1000 ; ja 0xee019 ; ret
0x00000000000ee054 : cmp rax, -0x1000 ; ja 0xee0b9 ; ret
0x00000000000ee0fa : cmp rax, -0x1000 ; ja 0xee169 ; ret
0x00000000000ee1aa : cmp rax, -0x1000 ; ja 0xee219 ; ret
0x00000000000ee997 : cmp rax, -0x1000 ; ja 0xeea11 ; ret
0x00000000000eebb4 : cmp rax, -0x1000 ; ja 0xeec01 ; ret
0x00000000000eec64 : cmp rax, -0x1000 ; ja 0xeecb1 ; ret
0x00000000000eed13 : cmp rax, -0x1000 ; ja 0xeed29 ; ret
0x00000000000f00e7 : cmp rax, -0x1000 ; ja 0xf0101 ; ret
0x00000000000f02cc : cmp rax, -0x1000 ; ja 0xf02e9 ; ret
0x00000000000f0307 : cmp rax, -0x1000 ; ja 0xf0321 ; ret
0x00000000000f0337 : cmp rax, -0x1000 ; ja 0xf0351 ; ret
0x00000000000f1c54 : cmp rax, -0x1000 ; ja 0xf1cb9 ; ret
0x00000000000f441e : cmp rax, -0x1000 ; ja 0xf4439 ; ret
0x00000000000f6e3d : cmp rax, -0x1000 ; ja 0xf6ec1 ; ret
0x00000000000f6eef : cmp rax, -0x1000 ; ja 0xf6f09 ; ret
0x00000000000f7017 : cmp rax, -0x1000 ; ja 0xf7089 ; ret
0x00000000000f70c7 : cmp rax, -0x1000 ; ja 0xf7139 ; ret
0x00000000000f7177 : cmp rax, -0x1000 ; ja 0xf71e9 ; ret
0x00000000000f7227 : cmp rax, -0x1000 ; ja 0xf72b1 ; ret
0x00000000000f72f4 : cmp rax, -0x1000 ; ja 0xf7359 ; ret
0x00000000000f738b : cmp rax, -0x1000 ; ja 0xf73f1 ; ret
0x00000000000f740f : cmp rax, -0x1000 ; ja 0xf7429 ; ret
0x00000000000f7c84 : cmp rax, -0x1000 ; ja 0xf7ce9 ; ret
0x00000000000f7d54 : cmp rax, -0x1000 ; ja 0xf7db9 ; ret
0x00000000000f7ebd : cmp rax, -0x1000 ; ja 0xf7f39 ; ret
0x00000000000f7f77 : cmp rax, -0x1000 ; ja 0xf8001 ; ret
0x00000000000f8044 : cmp rax, -0x1000 ; ja 0xf80a9 ; ret
0x00000000000f80ed : cmp rax, -0x1000 ; ja 0xf8169 ; ret
0x00000000000f81a4 : cmp rax, -0x1000 ; ja 0xf8209 ; ret
0x00000000000f8247 : cmp rax, -0x1000 ; ja 0xf82d1 ; ret
0x00000000000f8647 : cmp rax, -0x1000 ; ja 0xf86b9 ; ret
0x00000000000f86f7 : cmp rax, -0x1000 ; ja 0xf8771 ; ret
0x00000000000f87a7 : cmp rax, -0x1000 ; ja 0xf8819 ; ret
0x00000000000f8947 : cmp rax, -0x1000 ; ja 0xf89b9 ; ret
0x00000000000f89f7 : cmp rax, -0x1000 ; ja 0xf8a79 ; ret
0x00000000000f8aa7 : cmp rax, -0x1000 ; ja 0xf8ac1 ; ret
0x00000000000f8ad7 : cmp rax, -0x1000 ; ja 0xf8af1 ; ret
0x00000000000f8b07 : cmp rax, -0x1000 ; ja 0xf8b21 ; ret
0x00000000000f8b37 : cmp rax, -0x1000 ; ja 0xf8b51 ; ret
0x00000000000f8c0a : cmp rax, -0x1000 ; ja 0xf8c21 ; ret
0x00000000000f8c37 : cmp rax, -0x1000 ; ja 0xf8c51 ; ret
0x00000000000f8c67 : cmp rax, -0x1000 ; ja 0xf8c81 ; ret
0x00000000000f8c9a : cmp rax, -0x1000 ; ja 0xf8cb1 ; ret
0x00000000000f8cc7 : cmp rax, -0x1000 ; ja 0xf8ce1 ; ret
0x000000000012eb6a : cmp rax, -0xfff ; jae 0x12eb7b ; ret
0x000000000012ebba : cmp rax, -0xfff ; jae 0x12ebcb ; ret
0x00000000000351d7 : cmp rax, -0xfff ; jae 0x351e8 ; ret
0x00000000000356f7 : cmp rax, -0xfff ; jae 0x35708 ; ret
0x00000000000b3ab7 : cmp rax, -0xfff ; jae 0xb3ac8 ; ret
0x00000000000b62d7 : cmp rax, -0xfff ; jae 0xb62e8 ; ret
0x00000000000b6307 : cmp rax, -0xfff ; jae 0xb6318 ; ret
0x00000000000c4017 : cmp rax, -0xfff ; jae 0xc4028 ; ret
0x00000000000c423a : cmp rax, -0xfff ; jae 0xc424b ; ret
0x00000000000c4317 : cmp rax, -0xfff ; jae 0xc4328 ; ret
0x00000000000c48d7 : cmp rax, -0xfff ; jae 0xc48e8 ; ret
0x00000000000c5327 : cmp rax, -0xfff ; jae 0xc5338 ; ret
0x00000000000c5527 : cmp rax, -0xfff ; jae 0xc5538 ; ret
0x00000000000c5557 : cmp rax, -0xfff ; jae 0xc5568 ; ret
0x00000000000c55b7 : cmp rax, -0xfff ; jae 0xc55c8 ; ret
0x00000000000c55e7 : cmp rax, -0xfff ; jae 0xc55f8 ; ret
0x00000000000c5617 : cmp rax, -0xfff ; jae 0xc5628 ; ret
0x00000000000c5647 : cmp rax, -0xfff ; jae 0xc5658 ; ret
0x00000000000de677 : cmp rax, -0xfff ; jae 0xde688 ; ret
0x00000000000de6a7 : cmp rax, -0xfff ; jae 0xde6b8 ; ret
0x00000000000de6d7 : cmp rax, -0xfff ; jae 0xde6e8 ; ret
0x00000000000de707 : cmp rax, -0xfff ; jae 0xde718 ; ret
0x00000000000de737 : cmp rax, -0xfff ; jae 0xde748 ; ret
0x00000000000de767 : cmp rax, -0xfff ; jae 0xde778 ; ret
0x00000000000de797 : cmp rax, -0xfff ; jae 0xde7a8 ; ret
0x00000000000de7c7 : cmp rax, -0xfff ; jae 0xde7d8 ; ret
0x00000000000e76e7 : cmp rax, -0xfff ; jae 0xe76f8 ; ret
0x00000000000e79c7 : cmp rax, -0xfff ; jae 0xe79d8 ; ret
0x00000000000e79f7 : cmp rax, -0xfff ; jae 0xe7a08 ; ret
0x00000000000e7b17 : cmp rax, -0xfff ; jae 0xe7b28 ; ret
0x00000000000e7b47 : cmp rax, -0xfff ; jae 0xe7b58 ; ret
0x00000000000e7c07 : cmp rax, -0xfff ; jae 0xe7c18 ; ret
0x00000000000e7c37 : cmp rax, -0xfff ; jae 0xe7c48 ; ret
0x00000000000e87c7 : cmp rax, -0xfff ; jae 0xe87d8 ; ret
0x00000000000e89c7 : cmp rax, -0xfff ; jae 0xe89d8 ; ret
0x00000000000e89f7 : cmp rax, -0xfff ; jae 0xe8a08 ; ret
0x00000000000e8a27 : cmp rax, -0xfff ; jae 0xe8a38 ; ret
0x00000000000e8a57 : cmp rax, -0xfff ; jae 0xe8a68 ; ret
0x00000000000e8a87 : cmp rax, -0xfff ; jae 0xe8a98 ; ret
0x00000000000e8b47 : cmp rax, -0xfff ; jae 0xe8b58 ; ret
0x00000000000e8b77 : cmp rax, -0xfff ; jae 0xe8b88 ; ret
0x00000000000e9437 : cmp rax, -0xfff ; jae 0xe9448 ; ret
0x00000000000e9467 : cmp rax, -0xfff ; jae 0xe9478 ; ret
0x00000000000e9497 : cmp rax, -0xfff ; jae 0xe94a8 ; ret
0x00000000000e94ca : cmp rax, -0xfff ; jae 0xe94db ; ret
0x00000000000e9c77 : cmp rax, -0xfff ; jae 0xe9c88 ; ret
0x00000000000e9caa : cmp rax, -0xfff ; jae 0xe9cbb ; ret
0x00000000000e9cd7 : cmp rax, -0xfff ; jae 0xe9ce8 ; ret
0x00000000000e9d07 : cmp rax, -0xfff ; jae 0xe9d18 ; ret
0x00000000000e9d37 : cmp rax, -0xfff ; jae 0xe9d48 ; ret
0x00000000000e9d6a : cmp rax, -0xfff ; jae 0xe9d7b ; ret
0x00000000000e9d97 : cmp rax, -0xfff ; jae 0xe9da8 ; ret
0x00000000000e9dc7 : cmp rax, -0xfff ; jae 0xe9dd8 ; ret
0x00000000000e9df7 : cmp rax, -0xfff ; jae 0xe9e08 ; ret
0x00000000000ecc5a : cmp rax, -0xfff ; jae 0xecc6b ; ret
0x00000000000eda37 : cmp rax, -0xfff ; jae 0xeda48 ; ret
0x00000000000edda7 : cmp rax, -0xfff ; jae 0xeddb8 ; ret
0x00000000000edf77 : cmp rax, -0xfff ; jae 0xedf88 ; ret
0x00000000000ee897 : cmp rax, -0xfff ; jae 0xee8a8 ; ret
0x00000000000ee957 : cmp rax, -0xfff ; jae 0xee968 ; ret
0x00000000000eeb47 : cmp rax, -0xfff ; jae 0xeeb58 ; ret
0x00000000000eeb77 : cmp rax, -0xfff ; jae 0xeeb88 ; ret
0x00000000000eec27 : cmp rax, -0xfff ; jae 0xeec38 ; ret
0x00000000000eecd7 : cmp rax, -0xfff ; jae 0xeece8 ; ret
0x00000000000eeff7 : cmp rax, -0xfff ; jae 0xef008 ; ret
0x00000000000ef027 : cmp rax, -0xfff ; jae 0xef038 ; ret
0x00000000000ef057 : cmp rax, -0xfff ; jae 0xef068 ; ret
0x00000000000f1969 : cmp rax, -0xfff ; jae 0xf197a ; ret
0x00000000000f1be7 : cmp rax, -0xfff ; jae 0xf1bf8 ; ret
0x00000000000f1c17 : cmp rax, -0xfff ; jae 0xf1c28 ; ret
0x00000000000f1ce7 : cmp rax, -0xfff ; jae 0xf1cf8 ; ret
0x00000000000f1d17 : cmp rax, -0xfff ; jae 0xf1d28 ; ret
0x00000000000f1d4a : cmp rax, -0xfff ; jae 0xf1d5b ; ret
0x00000000000f1d77 : cmp rax, -0xfff ; jae 0xf1d88 ; ret
0x00000000000f1da7 : cmp rax, -0xfff ; jae 0xf1db8 ; ret
0x00000000000f1dd7 : cmp rax, -0xfff ; jae 0xf1de8 ; ret
0x00000000000f1e07 : cmp rax, -0xfff ; jae 0xf1e18 ; ret
0x00000000000f4cba : cmp rax, -0xfff ; jae 0xf4ccb ; ret
0x00000000000f4ce7 : cmp rax, -0xfff ; jae 0xf4cf8 ; ret
0x00000000000f4d17 : cmp rax, -0xfff ; jae 0xf4d28 ; ret
0x00000000000f4d4a : cmp rax, -0xfff ; jae 0xf4d5b ; ret
0x00000000000f4d7a : cmp rax, -0xfff ; jae 0xf4d8b ; ret
0x00000000000f4da7 : cmp rax, -0xfff ; jae 0xf4db8 ; ret
0x00000000000f4dda : cmp rax, -0xfff ; jae 0xf4deb ; ret
0x00000000000f4e07 : cmp rax, -0xfff ; jae 0xf4e18 ; ret
0x00000000000f4e37 : cmp rax, -0xfff ; jae 0xf4e48 ; ret
0x00000000000f4e6a : cmp rax, -0xfff ; jae 0xf4e7b ; ret
0x00000000000f4e97 : cmp rax, -0xfff ; jae 0xf4ea8 ; ret
0x00000000000f4eca : cmp rax, -0xfff ; jae 0xf4edb ; ret
0x00000000000f6c07 : cmp rax, -0xfff ; jae 0xf6c18 ; ret
0x00000000000f6c37 : cmp rax, -0xfff ; jae 0xf6c48 ; ret
0x00000000000f6d67 : cmp rax, -0xfff ; jae 0xf6d78 ; ret
0x00000000000f6d97 : cmp rax, -0xfff ; jae 0xf6da8 ; ret
0x00000000000f6dc7 : cmp rax, -0xfff ; jae 0xf6dd8 ; ret
0x00000000000f6df7 : cmp rax, -0xfff ; jae 0xf6e08 ; ret
0x00000000000f6f27 : cmp rax, -0xfff ; jae 0xf6f38 ; ret
0x00000000000f6faa : cmp rax, -0xfff ; jae 0xf6fbb ; ret
0x00000000000f6fd7 : cmp rax, -0xfff ; jae 0xf6fe8 ; ret
0x00000000000f74c7 : cmp rax, -0xfff ; jae 0xf74d8 ; ret
0x00000000000f74f7 : cmp rax, -0xfff ; jae 0xf7508 ; ret
0x00000000000f753a : cmp rax, -0xfff ; jae 0xf754b ; ret
0x00000000000f7567 : cmp rax, -0xfff ; jae 0xf7578 ; ret
0x00000000000f7597 : cmp rax, -0xfff ; jae 0xf75a8 ; ret
0x00000000000f75c7 : cmp rax, -0xfff ; jae 0xf75d8 ; ret
0x00000000000f75f7 : cmp rax, -0xfff ; jae 0xf7608 ; ret
0x00000000000f7627 : cmp rax, -0xfff ; jae 0xf7638 ; ret
0x00000000000f7657 : cmp rax, -0xfff ; jae 0xf7668 ; ret
0x00000000000f7687 : cmp rax, -0xfff ; jae 0xf7698 ; ret
0x00000000000f76b7 : cmp rax, -0xfff ; jae 0xf76c8 ; ret
0x00000000000f76ea : cmp rax, -0xfff ; jae 0xf76fb ; ret
0x00000000000f7717 : cmp rax, -0xfff ; jae 0xf7728 ; ret
0x00000000000f774a : cmp rax, -0xfff ; jae 0xf775b ; ret
0x00000000000f7777 : cmp rax, -0xfff ; jae 0xf7788 ; ret
0x00000000000f77a7 : cmp rax, -0xfff ; jae 0xf77b8 ; ret
0x00000000000f77d7 : cmp rax, -0xfff ; jae 0xf77e8 ; ret
0x00000000000f7807 : cmp rax, -0xfff ; jae 0xf7818 ; ret
0x00000000000f7837 : cmp rax, -0xfff ; jae 0xf7848 ; ret
0x00000000000f786a : cmp rax, -0xfff ; jae 0xf787b ; ret
0x00000000000f789a : cmp rax, -0xfff ; jae 0xf78ab ; ret
0x00000000000f78c7 : cmp rax, -0xfff ; jae 0xf78d8 ; ret
0x00000000000f78f7 : cmp rax, -0xfff ; jae 0xf7908 ; ret
0x00000000000f792a : cmp rax, -0xfff ; jae 0xf793b ; ret
0x00000000000f795a : cmp rax, -0xfff ; jae 0xf796b ; ret
0x00000000000f798a : cmp rax, -0xfff ; jae 0xf799b ; ret
0x00000000000f79b7 : cmp rax, -0xfff ; jae 0xf79c8 ; ret
0x00000000000f79e7 : cmp rax, -0xfff ; jae 0xf79f8 ; ret
0x00000000000f7a17 : cmp rax, -0xfff ; jae 0xf7a28 ; ret
0x00000000000f7a47 : cmp rax, -0xfff ; jae 0xf7a58 ; ret
0x00000000000f7a7a : cmp rax, -0xfff ; jae 0xf7a8b ; ret
0x00000000000f7aa7 : cmp rax, -0xfff ; jae 0xf7ab8 ; ret
0x00000000000f7ad7 : cmp rax, -0xfff ; jae 0xf7ae8 ; ret
0x00000000000f7b0a : cmp rax, -0xfff ; jae 0xf7b1b ; ret
0x00000000000f7b37 : cmp rax, -0xfff ; jae 0xf7b48 ; ret
0x00000000000f7b6a : cmp rax, -0xfff ; jae 0xf7b7b ; ret
0x00000000000f7b9a : cmp rax, -0xfff ; jae 0xf7bab ; ret
0x00000000000f7bc7 : cmp rax, -0xfff ; jae 0xf7bd8 ; ret
0x00000000000f7bf7 : cmp rax, -0xfff ; jae 0xf7c08 ; ret
0x00000000000f7c27 : cmp rax, -0xfff ; jae 0xf7c38 ; ret
0x00000000000f7d17 : cmp rax, -0xfff ; jae 0xf7d28 ; ret
0x00000000000f7de7 : cmp rax, -0xfff ; jae 0xf7df8 ; ret
0x00000000000f7e17 : cmp rax, -0xfff ; jae 0xf7e28 ; ret
0x00000000000f7e4a : cmp rax, -0xfff ; jae 0xf7e5b ; ret
0x00000000000f7e77 : cmp rax, -0xfff ; jae 0xf7e88 ; ret
0x00000000000f830a : cmp rax, -0xfff ; jae 0xf831b ; ret
0x00000000000f8337 : cmp rax, -0xfff ; jae 0xf8348 ; ret
0x00000000000f8367 : cmp rax, -0xfff ; jae 0xf8378 ; ret
0x00000000000f839a : cmp rax, -0xfff ; jae 0xf83ab ; ret
0x0000000000035ae0 : cmp rax, -8 ; jne 0x35ad8 ; xor eax, eax ; ret
0x0000000000035b30 : cmp rax, -8 ; jne 0x35b28 ; xor eax, eax ; ret
0x00000000000c5d28 : cmp rax, 0x414a53 ; jne 0xc5d01 ; jmp 0xc5ce2
0x0000000000079a84 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79a99 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e6a72 : cmp rax, rbx ; seta al ; pop rbx ; ret
0x000000000004a51e : cmp rax, rdi ; cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000088095 : cmp rax, rdi ; jne 0x88086 ; ret
0x000000000007cf1a : cmp rax, rdx ; jae 0x7cf48 ; movzx eax, byte ptr [rax] ; ret
0x00000000001038ea : cmp rax, rdx ; jb 0x1038e7 ; xor eax, eax ; ret
0x00000000001038e9 : cmp rax, rdx ; jb 0x1038e8 ; xor eax, eax ; ret
0x0000000000127060 : cmp rax, rdx ; je 0x127079 ; add rsp, 8 ; ret
0x000000000007de18 : cmp rax, rdx ; jne 0x7de25 ; ret
0x00000000000a1aa4 : cmp rax, rdx ; jne 0xa1a97 ; xor eax, eax ; ret
0x000000000004448a : cmp rbx, rax ; jne 0x44486 ; pop rbx ; ret
0x0000000000045d5b : cmp rcx, -1 ; jne 0x45d59 ; mov rax, rdx ; ret
0x0000000000074cbd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000015c62a : cmp rcx, rax ; jne 0x15c65a ; xor eax, eax ; ret
0x000000000015d46a : cmp rcx, rax ; jne 0x15d49a ; xor eax, eax ; ret
0x00000000000728d9 : cmp rcx, rsi ; jne 0x728d8 ; lea eax, [rdx + rdi] ; ret
0x00000000001659c7 : cmp rdi, 1 ; ja 0x1659d7 ; ret
0x000000000004a48d : cmp rdi, r8 ; jbe 0x4a427 ; pop rbx ; pop rbp ; ret
0x0000000000165063 : cmp rdi, rax ; je 0x165080 ; call 0x212cf
0x000000000011ff41 : cmp rdi, rcx ; jne 0x11ff36 ; ret
0x00000000000ede70 : cmp rdi, rdx ; ja 0xedea6 ; ret
0x000000000009ff81 : cmp rdi, rdx ; jb 0x9ff90 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f4f24 : cmp rdi, rdx ; jne 0xf4f21 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e755f : cmp rdi, rsi ; ja 0xe7556 ; ret
0x000000000010f488 : cmp rdx, -3 ; jbe 0x10f497 ; ret
0x00000000001134dc : cmp rdx, r8 ; jne 0x1134c7 ; ret
0x00000000000823d9 : cmp rdx, r8 ; jne 0x823a6 ; ret
0x0000000000132b3a : cmp rdx, rax ; ja 0x132b37 ; xor eax, eax ; ret
0x00000000001042a1 : cmp rdx, rax ; jne 0x104286 ; ret
0x000000000004534c : cmp rdx, rax ; jne 0x45347 ; xor eax, eax ; ret
0x000000000004542c : cmp rdx, rax ; jne 0x45427 ; xor eax, eax ; ret
0x0000000000106630 : cmp rdx, rcx ; ja 0x106663 ; xor eax, eax ; syscall
0x000000000015a091 : cmp rdx, rcx ; jne 0x15a07f ; vzeroupper ; ret
0x000000000015e5e4 : cmp rdx, rcx ; jne 0x15e5ca ; vzeroupper ; ret
0x00000000000a042a : cmp rdx, rcx ; jne 0xa0419 ; ret
0x00000000000a0429 : cmp rdx, rcx ; jne 0xa041a ; ret
0x00000000001039c9 : cmp rdx, rdi ; setae al ; ret
0x000000000012a325 : cmp rdx, rsi ; jbe 0x12a338 ; xor eax, eax ; ret
0x00000000000881c8 : cmp rdx, rsi ; jne 0x881c6 ; ret
0x000000000007c169 : cmp rsi, rcx ; jne 0x7c168 ; lea eax, [rdx + rdi] ; ret
0x000000000004a5a5 : cmp rsi, rdi ; cmovb rax, rdi ; ret
0x00000000001a4df4 : cmp sil, r14b ; jmp rax
0x00000000001a4de0 : cmp sil, sil ; call qword ptr [rcx]
0x000000000004b4d6 : cmp word ptr [rdx], ax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000157b57 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157e57 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158d57 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ad35 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add al, ch ; ret 0xf12c
0x00000000001975b5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; enter -0x1102, -1 ; retf 0
0x0000000000158a57 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000015c0a9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000001051ae : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000d36d4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rax, rsi ; jmp rax
0x0000000000178895 : cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; inc dword ptr [rax - 0x58] ; int1 ; jmp rax
0x0000000000173fb6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x173f82 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000152606 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158757 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158457 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001760d1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000001ab21d : cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x0000000000069733 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000187e75 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; ret 0xffec
0x0000000000098730 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000073459 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000189211 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000173a9f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000003a26 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000c6234 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000186e91 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rax]
0x0000000000186f0d : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000186e8d : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; ljmp [rdx - 0x59] ; sti ; call qword ptr [rax]
0x0000000000003a25 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000380a3 : cqo ; idiv rsi ; ret
0x00000000000d80f4 : cwde ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000007345a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000025302 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000124de2 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000354df : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000068b23 : cwde ; add byte ptr [rax], al ; mov r14d, eax ; jmp 0x64d55
0x0000000000086566 : cwde ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000001a1910 : cwde ; add qword ptr [r8], rax ; fcomp qword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x0000000000189734 : cwde ; cmp dword ptr [rcx], eax ; add byte ptr [rsp + rax*4 - 0xd], ah ; jmp rsp
0x0000000000132b94 : cwde ; cmp eax, 0xc0310028 ; ret
0x0000000000196aa8 : cwde ; fucomip st(6) ; jmp qword ptr [rax]
0x000000000018e668 : cwde ; imul ecx ; call qword ptr [rdx]
0x000000000019a29d : cwde ; int1 ; jmp qword ptr [rcx]
0x000000000010cbb2 : cwde ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000019dc18 : cwde ; or al, 0xf4 ; call qword ptr [rdi]
0x00000000001a1a68 : cwde ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000001a3a10 : cwde ; push 1 ; add ah, ch ; push rbp ; jmp qword ptr [rbx]
0x0000000000189c04 : cwde ; push rsi ; add dword ptr [rax], eax ; adc al, 0x7d ; hlt ; jmp rsp
0x0000000000003c41 : cwde ; ret
0x000000000018827c : cwde ; ret 0
0x0000000000003d61 : cwde ; retf
0x00000000000023e6 : cwde ; retf 0x81c0
0x0000000000196410 : cwde ; xchg eax, esp ; add byte ptr [rax], al ; jl 0x1963e3 ; stc ; call qword ptr [rcx]
0x0000000000190410 : cwde ; xor al, 0 ; add byte ptr [rbx + rdx*4 - 0x16], cl ; call qword ptr [rdx]
0x0000000000099c79 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x0000000000097c61 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000d7836 : dec byte ptr [r8 + 1] ; retf 0xdeb
0x0000000000099c7a : dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000097c62 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000843fe : dec byte ptr [rax + 0x31] ; retf 0x8948
0x00000000000f339f : dec byte ptr [rax + 0x39] ; retf 0x8948
0x0000000000155277 : dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000015e0bd : dec byte ptr [rax + 0x7f] ; jl 0x15e0e2 ; cld ; vzeroupper ; ret
0x00000000000d7837 : dec byte ptr [rax + 1] ; retf 0xdeb
0x00000000000f2efe : dec byte ptr [rax + 9] ; ret
0x00000000000364e2 : dec byte ptr [rax - 0x73] ; sub al, 7 ; mov rdi, rbp ; call r12
0x000000000004b309 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000084311 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000002391d : dec byte ptr [rax - 0x77] ; fucomip st(0) ; retf 0xfff1
0x00000000000860a0 : dec byte ptr [rax - 0x77] ; ret
0x00000000000849e6 : dec byte ptr [rax - 0x77] ; ret 0x41e8
0x000000000002ee53 : dec byte ptr [rax - 0x77] ; ret 0x8348
0x0000000000084969 : dec byte ptr [rax - 0x77] ; ret 0xbee8
0x000000000011fd2a : dec byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000dedc6 : dec byte ptr [rax - 0x77] ; retf 0xb70f
0x00000000000be20c : dec byte ptr [rax - 0x7d] ; ret
0x00000000000c2750 : dec byte ptr [rbx + rcx*4 + 0x2c] ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000011a18b : dec byte ptr [rcx + rcx*4 - 0x3b] ; mov rdi, rbx ; call rax
0x00000000000e8605 : dec byte ptr [rcx] ; je 0xe8639 ; mov eax, 0x48 ; syscall
0x00000000000eb8dd : dec byte ptr [rdi] ; retf 0xc985
0x0000000000086230 : dec byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001871f3 : dec dword ptr [rax + 0x14000065] ; shr cl, 1 ; call rsp
0x000000000018bcab : dec dword ptr [rax + 0x14000209] ; stc ; call rsp
0x0000000000160fac : dec dword ptr [rax + 0x21] ; ret 0x7be9
0x0000000000160a4e : dec dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000078ab6 : dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000043f54 : dec dword ptr [rax + 0x29] ; ret
0x0000000000099dfa : dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000097da2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000005dee3 : dec dword ptr [rax + 0x29] ; ret 0x8341
0x000000000003c561 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d787e : dec dword ptr [rax + 0x29] ; retf 0xd285
0x000000000003c261 : dec dword ptr [rax + 0x39] ; ret
0x0000000000064d80 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000078f4d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000110fe1 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000012ccad : dec dword ptr [rax + 0x39] ; ret 0xc789
0x000000000006838f : dec dword ptr [rax + 0x39] ; ret 0xd74
0x000000000004662a : dec dword ptr [rax + 0x39] ; ret 0xe075
0x0000000000064def : dec dword ptr [rax + 0x39] ; retf 0x840f
0x000000000005d684 : dec dword ptr [rax + 0x39] ; retf 0x8948
0x000000000004d813 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], 0x85 ; ret
0x0000000000113c15 : dec dword ptr [rax + 0x40c60158] ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000004a6ee : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000004b890 : dec dword ptr [rax + 0x63] ; add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000004e563 : dec dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rsi ; jmp rax
0x0000000000063e87 : dec dword ptr [rax + 0x63] ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000005a305 : dec dword ptr [rax + 0x63] ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x000000000005dc76 : dec dword ptr [rax + 0x63] ; ret
0x0000000000048a9c : dec dword ptr [rax + 0x63] ; ret 0x3ae9
0x0000000000103368 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000de1f4 : dec dword ptr [rax + 0x63] ; ret 0xcf89
0x000000000004c497 : dec dword ptr [rax + 0x63] ; retf
0x000000000006baff : dec dword ptr [rax + 0x63] ; retf 0x3948
0x00000000000f8ee9 : dec dword ptr [rax + 0x63] ; retf 0x8b41
0x000000000018ce73 : dec dword ptr [rax + 0x64000079] ; loop 0x18ce80 ; call qword ptr [rax]
0x000000000006247b : dec dword ptr [rax + 0x6b] ; ret
0x000000000018ca7b : dec dword ptr [rax + 0x7e] ; add dword ptr [rax], eax ; fdivr st(2) ; jmp rax
0x00000000000960b9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000087274 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000e75f8 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000083fa1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000013128d : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d6e9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000010533f : dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000001050c5 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000003646b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000059f70 : dec dword ptr [rax + 1] ; clc ; jmp rax
0x000000000005a364 : dec dword ptr [rax + 1] ; enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000042726 : dec dword ptr [rax + 1] ; ret
0x00000000000adc15 : dec dword ptr [rax + 1] ; retf 0x25e9
0x0000000000063955 : dec dword ptr [rax + 1] ; retf 0x8948
0x0000000000163f44 : dec dword ptr [rax + 9] ; ret
0x000000000004a143 : dec dword ptr [rax + 9] ; ret 0xb848
0x000000000010699c : dec dword ptr [rax + 9] ; retf 0x8348
0x0000000000160c73 : dec dword ptr [rax + 9] ; retf 0xf883
0x0000000000163692 : dec dword ptr [rax + 9] ; retf 0xfe83
0x0000000000162792 : dec dword ptr [rax + 9] ; ror dword ptr [rbp + 0x39], cl ; retf 0x930f
0x00000000000b83ca : dec dword ptr [rax - 0x16a4dbbc] ; retf
0x00000000000358f3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000003a5ba : dec dword ptr [rax - 0x39] ; ret
0x00000000000c649f : dec dword ptr [rax - 0x39] ; ret 0
0x00000000000c6444 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x00000000000c63b7 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x000000000008af82 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000017794f : dec dword ptr [rax - 0x3a] ; out dx, al ; dec dword ptr [rax - 0x3a] ; out dx, al ; jmp rax
0x000000000017795b : dec dword ptr [rax - 0x3a] ; out dx, al ; dec dword ptr [rax] ; ret 0xffee
0x0000000000177953 : dec dword ptr [rax - 0x3a] ; out dx, al ; jmp rax
0x0000000000062960 : dec dword ptr [rax - 0x3c7cb7fe] ; add ebx, ebp ; retf
0x000000000005933d : dec dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x000000000018701f : dec dword ptr [rax - 0x53] ; std ; call rax
0x00000000000ef7f7 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000010095c : dec dword ptr [rax - 0x75] ; adc eax, dword ptr [rcx - 0x77] ; ret
0x0000000000112dd9 : dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000012ab25 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000108af2 : dec dword ptr [rax - 0x75] ; jl 0x108b22 ; cmp al, ch ; retf
0x00000000000d43f3 : dec dword ptr [rax - 0x75] ; jl 0xd4424 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000056c4b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x0000000000112e69 : dec dword ptr [rax - 0x75] ; push rbp ; add dh, dh ; ret 0x7507
0x000000000008c02c : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008c1c6 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x000000000008c592 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000086a13 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x18 ; jmp 0x869e5
0x00000000000e185e : dec dword ptr [rax - 0x77] ; adc ecx, dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000a1d33 : dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000043edb : dec dword ptr [rax - 0x77] ; cli ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43f02
0x00000000000edf19 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000451bc : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000084aa4 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000012a50c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000748e4 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x00000000000db9c2 : dec dword ptr [rax - 0x77] ; out dx, al ; mov rdi, r15 ; call 0xd8419
0x00000000000e4fdb : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x212ce
0x0000000000129269 : dec dword ptr [rax - 0x77] ; out dx, eax ; call r14
0x0000000000025171 : dec dword ptr [rax - 0x77] ; ret
0x00000000000ede5e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x0000000000043d7d : dec dword ptr [rax - 0x77] ; ret 0x1f0f
0x00000000000de86e : dec dword ptr [rax - 0x77] ; ret 0x2477
0x00000000000e7671 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000eb694 : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000035cd1 : dec dword ptr [rax - 0x77] ; ret 0x3777
0x0000000000077013 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000081661 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000044323 : dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x000000000005b285 : dec dword ptr [rax - 0x77] ; ret 0x52e9
0x00000000000f189c : dec dword ptr [rax - 0x77] ; ret 0x5be8
0x00000000000c404c : dec dword ptr [rax - 0x77] ; ret 0x676
0x000000000010d8a6 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000000624d2 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000626c9 : dec dword ptr [rax - 0x77] ; ret 0x850f
0x00000000000817fc : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000082b7b : dec dword ptr [rax - 0x77] ; ret 0x854d
0x0000000000035042 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000000ae38b : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c5117 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000c61f3 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000f0802 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000012dab2 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000c887e : dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x00000000000f1bac : dec dword ptr [rax - 0x77] ; ret 0x9976
0x0000000000125a60 : dec dword ptr [rax - 0x77] ; ret 0x9beb
0x00000000000c6391 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x00000000000e056b : dec dword ptr [rax - 0x77] ; ret 0xabf
0x00000000000c637d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000086d28 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000599dc : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000b6986 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000e76d3 : dec dword ptr [rax - 0x77] ; ret 0xcd77
0x00000000000f191f : dec dword ptr [rax - 0x77] ; ret 0xd8e8
0x000000000006e6aa : dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000031d0d : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000113f6c : dec dword ptr [rax - 0x77] ; ret 0xfc3
0x00000000000ddb04 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000073dce : dec dword ptr [rax - 0x77] ; retf
0x0000000000041a0f : dec dword ptr [rax - 0x77] ; retf 0x15e9
0x000000000003c7a4 : dec dword ptr [rax - 0x77] ; retf 0x20e9
0x000000000012c2b2 : dec dword ptr [rax - 0x77] ; retf 0x3145
0x000000000008061b : dec dword ptr [rax - 0x77] ; retf 0x3ae9
0x0000000000049bda : dec dword ptr [rax - 0x77] ; retf 0x62e9
0x00000000000616b7 : dec dword ptr [rax - 0x77] ; retf 0x6ae9
0x000000000005cd99 : dec dword ptr [rax - 0x77] ; retf 0x840f
0x000000000005ce23 : dec dword ptr [rax - 0x77] ; retf 0x850f
0x000000000004f4f4 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000164431 : dec dword ptr [rax - 0x77] ; retf 0x8949
0x000000000007375f : dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000000e0e03 : dec dword ptr [rax - 0x77] ; retf 0xabf
0x000000000003f17a : dec dword ptr [rax - 0x77] ; retf 0xae9
0x00000000000eab5f : dec dword ptr [rax - 0x77] ; retf 0xbe9
0x000000000005a999 : dec dword ptr [rax - 0x77] ; retf 0xc148
0x00000000000daae7 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x75], 4 ; ret
0x0000000000043bee : dec dword ptr [rax - 0x77] ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43c12
0x00000000000e185b : dec dword ptr [rax - 0x7b] ; dec dword ptr [rax - 0x77] ; adc ecx, dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000007e35d : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000b399c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000010492f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000011bd7b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; retf 0x29d1
0x00000000000deab4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000056bbb : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000014e88c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000000f00b6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000001310b5 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; ret
0x00000000000f4aed : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000000f8d3e : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000880d6 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000012e161 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f487 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x10f498 ; ret
0x0000000000026525 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000026a09 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000012599e : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x000000000003224b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000b601f : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000032e9c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x00000000000ce125 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0xf175
0x000000000002b2a8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000076a1f : dec dword ptr [rax - 0x7f] ; ret
0x000000000013e75c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000018cbe3 : dec dword ptr [rax - 0xbfffeea] ; jrcxz 0x18cbef ; call rax
0x0000000000178723 : dec dword ptr [rax] ; int1 ; jmp qword ptr [rax]
0x000000000017795f : dec dword ptr [rax] ; ret 0xffee
0x000000000018cac3 : dec dword ptr [rax] ; retf
0x000000000004efae : dec dword ptr [rbp + 0x29] ; ret 0xf4c
0x000000000005ac65 : dec dword ptr [rbp + 0x63] ; retf
0x0000000000161c7f : dec dword ptr [rbp + 9] ; retf
0x00000000000ea25b : dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000cc0d5 : dec dword ptr [rbp - 0x77] ; ret
0x0000000000036689 : dec dword ptr [rbp - 0x77] ; retf
0x00000000000895d8 : dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x000000000012f219 : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x0000000000172aeb : dec dword ptr [rbp] ; in al, dx ; call rcx
0x000000000017971f : dec dword ptr [rbx + 0x19] ; hlt ; jmp qword ptr [rsi]
0x0000000000101839 : dec dword ptr [rbx + 0x2b2bac3d] ; add al, ch ; retf
0x00000000001861af : dec dword ptr [rbx + 0x72] ; std ; jmp rcx
0x000000000010507d : dec dword ptr [rbx + 0xb491] ; add bh, dh ; ret 0
0x00000000001899d3 : dec dword ptr [rbx + rcx*2] ; add dword ptr [rax], eax ; xor al, 0xe2 ; jmp qword ptr [rax]
0x0000000000188403 : dec dword ptr [rbx + rcx*8 - 0x274c0000] ; out dx, al ; jmp rsp
0x000000000018be2b : dec dword ptr [rbx + rdx] ; add al, byte ptr [rax] ; push rsp ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000055bfc : dec dword ptr [rbx - 0x76e3dbb4] ; ret 0x2944
0x0000000000030b59 : dec dword ptr [rbx - 0x7af0fbbd] ; retf
0x00000000000ca358 : dec dword ptr [rbx - 0x7cb7ebbd] ; ret
0x00000000000ca1dc : dec dword ptr [rbx - 0x7cb7f7bd] ; ret
0x0000000000177cc7 : dec dword ptr [rbx] ; retf
0x000000000004ee54 : dec dword ptr [rcx + 0x39] ; ret
0x000000000004f3b1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000164aca : dec dword ptr [rcx + 0x39] ; retf
0x000000000006d1bd : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000058c3a : dec dword ptr [rcx + 0x63] ; ret
0x00000000000d87c1 : dec dword ptr [rcx + 0x63] ; ret 0x894c
0x000000000005af27 : dec dword ptr [rcx + 0x63] ; retf
0x00000000001641ff : dec dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x0000000000160a0a : dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000000e50ad : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x212ce
0x00000000000e50ac : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x212cf
0x00000000000523e4 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbx ; call rax
0x00000000000365f5 : dec dword ptr [rcx + rcx*4 - 0x16] ; call r12
0x00000000001650a4 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x212ce
0x00000000000b676f : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0xb31a6
0x0000000000025a2f : dec dword ptr [rcx + rcx*4 - 9] ; call 0x131d16
0x0000000000114808 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x212ce
0x0000000000101ff3 : dec dword ptr [rcx + rcx*4 - 9] ; call 0xfe2d6
0x000000000018ad63 : dec dword ptr [rcx + rsi*4] ; add dword ptr [rax], eax ; sbb r14b, dil ; jmp qword ptr [rax]
0x000000000004b15e : dec dword ptr [rcx - 0x1b42763f] ; idiv bh ; call rax
0x000000000007fb64 : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000001017a4 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000ffd6b : dec dword ptr [rcx - 0x75] ; push rsi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000e1dcb : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000084450 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001627ef : dec dword ptr [rcx - 0x77] ; fisttp dword ptr [rbp - 0x77] ; retf 0x894d
0x00000000000bc56b : dec dword ptr [rcx - 0x77] ; ret
0x0000000000088d2e : dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x00000000000cae94 : dec dword ptr [rcx - 0x77] ; retf
0x000000000007fec3 : dec dword ptr [rcx - 0x7b] ; ret
0x00000000000fccf6 : dec dword ptr [rcx - 0x7c27c3e] ; retf
0x000000000016302e : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000000000162f58 : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x000000000007da46 : dec dword ptr [rcx - 9] ; ret
0x000000000006de2f : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010195d : dec dword ptr [rcx] ; ret
0x00000000000fa33e : dec dword ptr [rcx] ; setbe al ; ret
0x000000000017a5df : dec dword ptr [rcx] ; xchg eax, ebp ; cmc ; jmp qword ptr [rax]
0x000000000018ceab : dec dword ptr [rdi + rdi*8 - 0x1aec0000] ; std ; call rsp
0x000000000018aefb : dec dword ptr [rdi + rsi*4] ; add dword ptr [rax], eax ; push rsp ; cmp al, 0xf7 ; jmp qword ptr [rax]
0x000000000002dd16 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2dca7 ; loopne 0x2dd27 ; ret
0x00000000000fab7d : dec dword ptr [rdi] ; mov bh, 4 ; js 0xfab0e ; loopne 0xfab8e ; ret
0x00000000000e03c2 : dec dword ptr [rdi] ; mov dh, 0x4e ; or byte ptr [rsi - 0x3f], ah ; retf 0x4408
0x00000000000d55f1 : dec dword ptr [rdi] ; mov dh, 0xf8 ; call 0xa2076
0x00000000000e0fa2 : dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d89
0x00000000000e14e5 : dec dword ptr [rdi] ; ret
0x0000000000024a0b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000110f76 : dec dword ptr [rdi] ; ret 0xc4e9
0x0000000000085e97 : dec dword ptr [rdi] ; ret 0xfc3
0x000000000002e9c9 : dec dword ptr [rdi] ; retf 0xc089
0x000000000002c9f0 : dec dword ptr [rdi] ; retf 0xd88
0x000000000010f284 : dec dword ptr [rdi] ; test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000012afdd : dec dword ptr [rdi] ; test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000671a5 : dec dword ptr [rdi] ; test byte ptr [rbp + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000683f2 : dec dword ptr [rdi] ; test byte ptr [rbx + rdx], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012b50e : dec dword ptr [rdi] ; test byte ptr [rbx], bh ; add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000011543a : dec dword ptr [rdi] ; test byte ptr [rdi], dh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000003e0f4 : dec dword ptr [rdi] ; test byte ptr [rsi + rcx - 0x47b80000], dh ; retf 0xfffe
0x000000000011120b : dec dword ptr [rdi] ; test dh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000a4f72 : dec dword ptr [rdi] ; test dh, dl ; or eax, 0xb8480000 ; retf 0xfffe
0x000000000015ff60 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004d7f3 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ch ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000004ea5e : dec dword ptr [rdi] ; xchg cl, dh ; or eax, 0x894c0000 ; ret 0x894c
0x00000000000e8454 : dec dword ptr [rdi] ; xchg dword ptr [rip - 0x76ffffff], ecx ; ret
0x0000000000082d4f : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000035c3d : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000072b0b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000075dee : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000c9de7 : dec dword ptr [rdi] ; xchg eax, esp ; rol byte ptr [rcx + rdi - 0x3f], 0xf ; xchg eax, esi ; ret 0xd009
0x000000000005c4f4 : dec dword ptr [rdx + 0x63] ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x000000000018be83 : dec dword ptr [rdx + 0x76240002] ; stc ; jmp qword ptr [rax]
0x000000000018ccbb : dec dword ptr [rdx + rbx] ; add dword ptr [rax], eax ; and al, 0x2f ; std ; jmp qword ptr [rax]
0x0000000000188adb : dec dword ptr [rdx + rsi*8] ; add byte ptr [rax], al ; in al, 0xab ; out dx, eax ; jmp qword ptr [rax]
0x000000000018c0b3 : dec dword ptr [rdx - 0x41bbfffe] ; stc ; call rsp
0x00000000000f9c48 : dec dword ptr [rdx - 0x73] ; ret
0x0000000000177b9b : dec dword ptr [rip - 0x3600112a] ; retf
0x000000000002d17a : dec dword ptr [rip - 0x7cb79d8c] ; ret
0x0000000000188a6b : dec dword ptr [rsi + rbp*8] ; add byte ptr [rax], al ; xchg eax, esp ; jne 0x188a6a ; jmp qword ptr [rax]
0x00000000001885e3 : dec dword ptr [rsi + rdx*8 + 0xbf40000] ; out dx, eax ; jmp rax
0x00000000000e0c61 : dec dword ptr [rsi - 0x73] ; add al, 0x28 ; call r12
0x0000000000186a8f : dec dword ptr [rsi] ; mov dl, 0xfb ; call qword ptr [rax + 0x20fffbb8]
0x000000000018b5d3 : dec dword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; add al, 0x12 ; clc ; jmp qword ptr [rax]
0x0000000000189a2b : dec dword ptr [rsp + rcx*2] ; add dword ptr [rax], eax ; in al, 0xe4 ; jmp qword ptr [rax]
0x000000000018c9bb : dec dword ptr [rsp + rdx*2] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; jmp qword ptr [rax]
0x00000000000feaef : dec dword ptr es:[rax - 0x77] ; ret
0x000000000018b1eb : dec eax ; leave ; add dword ptr [rax], eax ; xchg eax, esp ; retf 0xfff7
0x0000000000188003 : dec eax ; mov al, 0 ; add byte ptr [rdi + rdi], dl ; out dx, al ; jmp rsp
0x000000000018c8f3 : dec eax ; push rax ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x00000000001882c3 : dec eax ; ret
0x000000000018b0b3 : dec eax ; ret 1
0x000000000018a6c3 : dec eax ; xchg eax, edx ; add dword ptr [rax], eax ; push rsp ; mov dh, dh ; call qword ptr [rax]
0x000000000018b4f3 : dec eax ; xlatb ; add dword ptr [rax], eax ; in al, 3 ; clc ; call qword ptr [rax]
0x00000000001861bf : dec ebx ; jb 0x1861c4 ; jmp rcx
0x000000000018619f : dec ebx ; jno 0x1861a4 ; jmp rcx
0x0000000000178f1b : dec ecx ; jbe 0x178f14 ; call qword ptr [rsi]
0x0000000000178f1b : dec ecx ; jbe 0x178f15 ; call qword ptr [rsi]
0x0000000000178f1a : dec ecx ; jbe 0x178f16 ; call qword ptr [rsi]
0x0000000000179457 : dec ecx ; out 0xf3, al ; dec edi ; in al, 0xf3 ; jmp qword ptr [rcx]
0x0000000000177b9f : dec ecx ; retf
0x000000000017945b : dec edi ; in al, 0xf3 ; jmp qword ptr [rcx]
0x000000000017a613 : dec esi ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x00000000001890ab : dec esp ; adc al, 1 ; add byte ptr [rsi + rdi - 0xf], dl ; jmp rax
0x0000000000188b1b : dec esp ; add byte ptr [rax], al ; and al, 0xb8 ; out dx, eax ; jmp rsp
0x0000000000189313 : dec esp ; and dword ptr [rcx], eax ; add byte ptr [rax + rax*8 - 0xf], ah ; jmp rax
0x000000000018976b : dec esp ; cmp al, byte ptr [rcx] ; add byte ptr [rax + rcx*4], al ; jmp rsp
0x000000000018bb9b : dec esp ; inc dword ptr [rcx] ; add ah, ah ; adc edi, ecx ; jmp rax
0x0000000000188383 : dec esp ; mov dword ptr [rax], 0xeeb9b400 ; jmp rax
0x000000000018b23b : dec esp ; retf 1
0x0000000000036688 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000099df9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000097da1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000026a08 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000018b461 : div bh ; call qword ptr [rax]
0x00000000001aae7d : div bh ; call rdi
0x000000000018b451 : div bh ; jmp rax
0x0000000000096272 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008cb41 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000186af4 : div byte ptr [rbx + rdi*8 - 0x44b7901] ; call qword ptr [rsi]
0x0000000000102189 : div byte ptr [rdx + rsi - 0x80] ; retf 0xa880
0x000000000002ab41 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x2ab59 ; ret
0x00000000001151e2 : div byte ptr [rsp + rdx + 0x78] ; ret
0x00000000000e7561 : div dword ptr [rdi - 0x14] ; ret
0x0000000000002ebd : div dword ptr [rsi + 0x10] ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x0000000000050906 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000008cdb8 : div ebx ; ret
0x00000000000a0608 : div ecx ; mov eax, eax ; ret
0x00000000000a05ef : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000050905 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x00000000001975b8 : enter -0x1102, -1 ; retf 0
0x00000000001974b8 : enter -0x1104, -1 ; retf 0
0x0000000000002734 : enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000008ce3e : enter -0x208c, -0xd ; ret
0x0000000000155757 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000000966f1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000b6cf4 : enter -0x2fd7, -0x2f ; call 0xffffffffeacd2f04
0x00000000000f0487 : enter -0x39bf, 0x40 ; inc dword ptr [rax] ; ret
0x000000000011f7f3 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x000000000008bd6d : enter -0x3eb8, -0x20 ; or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x00000000000f468f : enter -0x3fcf, -0x18 ; leave ; retf
0x00000000001600d4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000002ca4 : enter -0x7042, -0x15 ; retf
0x0000000000099c76 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000097c5e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000099df6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000097d9e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000155537 : enter -0x73b, 0x77 ; ret
0x0000000000034218 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000f1961 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x000000000002e9c2 : enter -0x74bc, -0x6b ; push 0xfffffff ; retf 0xc089
0x0000000000055db2 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x00000000000dba93 : enter -0x7780, 0x47 ; cmp al, ch ; ret
0x00000000001ac088 : enter -0x7b2, -1 ; ret
0x00000000000a5846 : enter -0x7cb8, -0x18 ; or byte ptr [rax + 0x39], cl ; ret
0x000000000004a44b : enter -0xd8b, 0x5b ; pop rbp ; ret
0x0000000000024959 : enter -1, -0x7b ; sal byte ptr [rax + rsi + 0x48], 0x83 ; ret
0x0000000000155e74 : enter -2, -1 ; ret
0x00000000001787a5 : enter -5, -0x40 ; leave ; sti ; jmp rax
0x0000000000062da3 : enter -6, -1 ; jmp 0x62d71
0x00000000001997ad : enter 0, -0x50 ; sbb dh, cl ; call qword ptr [rax]
0x00000000001997c1 : enter 0, -0x54 ; sbb dh, cl ; call qword ptr [rax]
0x00000000000842ac : enter 0, 0 ; call rax
0x0000000000121ce9 : enter 0, 0 ; jmp rcx
0x000000000016d0bc : enter 0, 0 ; retf
0x0000000000171110 : enter 0, 0 ; retf 0
0x00000000001346d0 : enter 0, 0 ; xor eax, eax ; call 0x21108
0x000000000016e268 : enter 0x10, 0 ; retf
0x000000000019e640 : enter 0x116, 0 ; jl 0x19e5d2 ; hlt ; call qword ptr [rax]
0x00000000001a1140 : enter 0x141, 0 ; fdiv qword ptr [rax] ; cmc ; jmp rsp
0x00000000001592d9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000018a52c : enter 0x18b, 0 ; test byte ptr [rcx - 0xa], dh ; call qword ptr [rax]
0x000000000018a6c4 : enter 0x192, 0 ; push rsp ; mov dh, dh ; call qword ptr [rax]
0x000000000005a367 : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x000000000018b0b4 : enter 0x1c2, 0 ; jge 0x18b0bb ; push rax ; ret 1
0x000000000018b1ec : enter 0x1c9, 0 ; xchg eax, esp ; retf 0xfff7
0x000000000018b4f4 : enter 0x1d7, 0 ; in al, 3 ; clc ; call qword ptr [rax]
0x000000000018c8f4 : enter 0x250, 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x0000000000034389 : enter 0x280f, -0x3f ; ret
0x0000000000046ef1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015966e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000001087f0 : enter 0x2afa, 0 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000008e8fd : enter 0x31c3, -0x40 ; ret
0x000000000008527c : enter 0x32ec, 0 ; call qword ptr [rax]
0x0000000000084fe3 : enter 0x3319, 0 ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x0000000000155190 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x000000000007de17 : enter 0x3948, -0x30 ; jne 0x7de26 ; ret
0x00000000000e6997 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000563b8 : enter 0x415d, 0x5c ; pop r13 ; ret
0x00000000001251bb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00000000001250bb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x0000000000002970 : enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x0000000000124867 : enter 0x4789, 0x48 ; mov eax, 1 ; ret
0x00000000001247d4 : enter 0x4789, 0x54 ; mov eax, 1 ; ret
0x0000000000124894 : enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x0000000000107916 : enter 0x577, -0x17 ; ret 0xf9ac
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000562fd : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x000000000017673c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000016da68 : enter 0xa, 0 ; retf
0x0000000000188004 : enter 0xb0, 0 ; adc al, 0x3f ; out dx, al ; jmp rsp
0x000000000016de68 : enter 0xd, 0 ; retf
0x00000000000de808 : enter 0xf49, 0x46 ; int1 ; syscall
0x000000000005442e : enter 0xf4c, 0x4e ; ret 0x3145
0x000000000015c156 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000095a51 : enter 0xf66, -0x15 ; ret
0x0000000000171310 : enter 1, 0 ; retf 1
0x000000000016e620 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000171510 : enter 2, 0 ; retf 2
0x0000000000171710 : enter 3, 0 ; retf 3
0x0000000000171910 : enter 4, 0 ; retf 4
0x000000000009d6a4 : enter 5, 0 ; ret
0x0000000000171b10 : enter 5, 0 ; retf 5
0x0000000000171d10 : enter 6, 0 ; retf 6
0x0000000000171f10 : enter 7, 0 ; retf 7
0x0000000000172110 : enter 8, 0 ; retf 8
0x0000000000172310 : enter 9, 0 ; retf 9
0x0000000000195050 : fadd dword ptr [rax + 0x564c0000] ; out dx, al ; jmp qword ptr [rsi]
0x000000000019a80d : fadd dword ptr [rax] ; add al, al ; hlt ; int1 ; call qword ptr [rax]
0x000000000006cf96 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000042d83 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f1d44 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000012bdef : fadd dword ptr [rbx + 0x14807e0] ; retf 0x148
0x00000000000cd385 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000012071b : fadd dword ptr [rcx + 0xf] ; retf 0xc80f
0x0000000000163a55 : fadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000019d450 : fadd dword ptr [rcx + rax] ; add byte ptr [rsi + rcx*8], bh ; call rax
0x00000000000a1abe : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x000000000005ac80 : fadd dword ptr [rcx - 0x77] ; ret
0x00000000000f8c04 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000d15d8 : fadd qword ptr [rbx + 0x634901eb] ; ret 0x634c
0x00000000000508f3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000018b5d5 : fadd qword ptr [rcx] ; add byte ptr [rdx + rdx], al ; clc ; jmp qword ptr [rax]
0x0000000000033dc4 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000033d54 : fadd st(0) ; ret
0x00000000001606f8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000015d4ae : fadd st(3) ; ret
0x00000000000f25b6 : fadd st(6), st(0) ; sbb eax, 0x9f0f30ff ; ret 0x8545
0x00000000000f2036 : faddp st(6) ; sbb eax, 0x9f0f30ff ; ret 0x8545
0x000000000015bca1 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001161fe : fbstp tbyte ptr [rbp + rax - 0x18] ; ret 0xf0b0
0x0000000000117d6e : fbstp tbyte ptr [rbp - 0x11] ; pop rbx ; ret
0x000000000016544b : fbstp tbyte ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000001652bc : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d242 : fbstp tbyte ptr [rcx] ; fisttp dword ptr [rax - 0x77] ; add ch, al ; ret
0x000000000006fa55 : fbstp tbyte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; jmp rax
0x0000000000175d78 : fcmovb st(0), st(3) ; ret
0x00000000000035d7 : fcmove st(0), st(5) ; retf
0x000000000015978b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000005804a : fcmovnb st(0), st(6) ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000000348b2 : fcmovu st(0), st(5) ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000019e058 : fcom dword ptr [rcx - 0xc] ; call rsp
0x000000000005863a : fcom dword ptr [rdx] ; add byte ptr [rcx - 0x77], al ; retf
0x000000000019e054 : fcom qword ptr [rax] ; add dword ptr [rax], eax ; fcom dword ptr [rcx - 0xc] ; call rsp
0x000000000018f074 : fcom qword ptr [rcx - 0x16] ; call qword ptr [rdx]
0x00000000001794dd : fcomi st(3) ; jmp qword ptr [rcx]
0x0000000000179531 : fcomi st(3) ; jmp rax
0x00000000001794d9 : fcomi st(3) ; lcall [rax] ; fcomi st(3) ; jmp qword ptr [rcx]
0x000000000017952d : fcomi st(3) ; lcall [rax] ; fcomi st(3) ; jmp rax
0x0000000000042b7f : fcomi st(3) ; ret
0x0000000000108443 : fcomi st(4) ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000018a9c1 : fcomi st(6) ; call rax
0x000000000008ce40 : fcomip st(3) ; ret
0x000000000019fa39 : fcomip st(4) ; jmp qword ptr [rcx]
0x0000000000101410 : fcomip st(6) ; ret 0x7508
0x00000000000ef597 : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000089617 : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edx ; ret
0x000000000007315b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e152 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002acdb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000031b96 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000176af9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000f24cb : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001a42b4 : fcomp qword ptr [rax] ; idiv bh ; retf 1
0x00000000001a1914 : fcomp qword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x0000000000174d60 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000018ef54 : fcomp qword ptr [rdi] ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x16], cl ; call qword ptr [rax]
0x000000000019ea54 : fcomp qword ptr [rdx] ; add dword ptr [rax], eax ; test al, 0x91 ; hlt ; jmp qword ptr [rcx]
0x000000000019ed54 : fcomp qword ptr [rip - 0x6397ffff] ; hlt ; jmp qword ptr [rcx]
0x00000000000748e2 : fcos ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x000000000018a9a1 : fdecstp ; jmp rax
0x00000000001a66d5 : fdecstp ; jmp rsp
0x0000000000198550 : fdiv dword ptr [rbp + 0x125c0000] ; cld ; jmp qword ptr [rax]
0x0000000000126d80 : fdiv dword ptr [rbp + 0x24] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000edace : fdiv dword ptr [rbp + 0x4e] ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000160c71 : fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x00000000000e3752 : fdiv dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000178ed8 : fdiv dword ptr [rsi - 0xe] ; call qword ptr [rax]
0x0000000000194650 : fdiv dword ptr [rsi] ; add byte ptr [rdi + rbp - 0x12], bl ; jmp rdi
0x00000000001a1144 : fdiv qword ptr [rax] ; cmc ; jmp rsp
0x0000000000178ef8 : fdiv qword ptr [rbp - 0xe] ; call rax
0x0000000000178f00 : fdiv qword ptr [rbp - 0xe] ; call rdi
0x0000000000022c34 : fdiv st(0) ; adc byte ptr [rax], al ; mov rdi, rbx ; call r15
0x000000000018cac1 : fdiv st(2), st(0) ; dec dword ptr [rax] ; retf
0x000000000018cab9 : fdiv st(2), st(0) ; jmp rax
0x000000000018cac9 : fdiv st(2), st(0) ; push qword ptr [rax] ; retf
0x00000000000de8c4 : fdiv st(3) ; ret
0x00000000001983d9 : fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000185f61 : fdiv st(4), st(0) ; call qword ptr [rax]
0x000000000017882d : fdivp st(3) ; push qword ptr [rax - 0x21] ; sti ; jmp rax
0x000000000018ce31 : fdivp st(5) ; jmp rsp
0x0000000000082886 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000eea81 : fdivr dword ptr [rax + 0x10e] ; syscall
0x00000000001a8d18 : fdivr dword ptr [rax - 9] ; call qword ptr [rsi]
0x00000000001a74c5 : fdivr st(0) ; call qword ptr [rax]
0x0000000000188c24 : fdivr st(2) ; add byte ptr [rax], al ; adc al, 0xdf ; out dx, eax ; jmp qword ptr [rax]
0x000000000018ca81 : fdivr st(2) ; jmp rax
0x0000000000179419 : fdivr st(3), st(0) ; jmp qword ptr [rbp + 0x16fff3e2]
0x00000000000a0acb : fdivr st(3), st(0) ; ret
0x00000000001740b5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001a0374 : fdivr st(4), st(0) ; hlt ; jmp qword ptr [rsi]
0x000000000018a9e1 : fdivr st(6), st(0) ; jmp qword ptr [rax]
0x000000000018a9c9 : fdivr st(6), st(0) ; jmp rsp
0x0000000000113e1b : fdivr st(7) ; inc dword ptr [rbp - 0x14728b40] ; ret 0x1f0f
0x000000000014dfcd : fdivr st(7) ; ret
0x000000000009ab2e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018aa29 : fdivrp st(6) ; call rsp
0x0000000000003730 : fiadd dword ptr [rax] ; pop rsp ; ret 0xf84d
0x000000000008b994 : fiadd dword ptr [rbp + 0x38] ; retf 0xdc72
0x00000000000dd840 : fiadd dword ptr [rbp + 0x39] ; ret 0x597e
0x0000000000039e78 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000000a4e6e : fiadd dword ptr [rbp + 0x450f48f6] ; ret 0x8948
0x000000000003b6df : fiadd dword ptr [rbp - 0x7b] ; fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000160ff5 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000a1d53 : fiadd word ptr [rcx + 0x39] ; sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x000000000018b645 : fiadd word ptr [rcx] ; add byte ptr [rcx], ah ; clc ; jmp rsp
0x0000000000085c01 : ficomp dword ptr [rbx + 0x5d] ; ret
0x00000000001797c4 : ficomp dword ptr [rsp + rsi*8] ; call qword ptr [rax]
0x0000000000176946 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000005fc0d : fidiv dword ptr [rax + rax] ; add byte ptr [rbx - 0x78f0d006], al ; ret
0x0000000000165788 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000001ad0 : fidiv word ptr [rbx] ; retf
0x0000000000163690 : fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x00000000000ec6e2 : fidivr dword ptr [rax + 0x10f] ; syscall
0x0000000000034ec1 : fidivr dword ptr [rax + 0xea] ; syscall
0x0000000000131cd5 : fidivr dword ptr [rax + 1] ; ret
0x000000000012c490 : fidivr dword ptr [rax - 1] ; ret
0x000000000007ec22 : fidivr word ptr [rbx + rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e2f39 : fidivr word ptr [rcx] ; ret
0x0000000000002ea8 : fild dword ptr [rax + 0x2d37b741] ; retf 0x4a9a
0x00000000000b9de5 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000089f8d : fild dword ptr [rbp + 0x38] ; retf 0x1975
0x00000000000858c6 : fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x0000000000160ace : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000010feca : fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000010269d : fild dword ptr [rcx - 0xa] ; and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000000000f9579 : fild qword ptr [rbp + 0x2002b] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000c9fd8 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xd008
0x00000000000f9085 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000000b9232 : fild word ptr [rcx - 0x77] ; retf
0x00000000001aae79 : fild word ptr [rcx] ; add byte ptr [rsi + rsi*8 - 9], dh ; call rdi
0x000000000003b954 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000085b9e : fimul dword ptr [rax + 1] ; ret 0x772
0x0000000000034584 : fimul dword ptr [rax + 9] ; ret 0xb848
0x0000000000150886 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016410d : fimul dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000451b3 : fimul dword ptr [rax - 0x7d] ; ret
0x000000000010e05f : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000a4f3d : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000005a9af : fimul dword ptr [rbp + 0x63] ; retf
0x00000000000bc5ae : fimul dword ptr [rbp - 0x7b] ; fisttp dword ptr [rdi] ; ret 0x8348
0x000000000016310a : fimul dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x00000000000bad6e : fimul dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0x8348
0x0000000000084aa7 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000084cd3 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x000000000011f037 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x0000000000044791 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call 0x21229
0x000000000014cd72 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39adc91
0x000000000014ddf2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39aed11
0x00000000000d312e : fimul dword ptr [rcx - 0x7d] ; ret
0x0000000000033b42 : fimul dword ptr [rcx] ; ret 0xc889
0x00000000000bc8ff : fimul dword ptr [rdi] ; ret 0x144
0x0000000000160a19 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000024b57 : fimul word ptr [rax + 1] ; retf
0x0000000000035cc3 : fimul word ptr [rax - 0x75] ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000000dc3d7 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x7de8
0x00000000000edf34 : fimul word ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000049229 : fimul word ptr [rax - 0x77] ; fucomip st(0) ; sahf ; ret 0xffff
0x0000000000036540 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000012a50f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000abc42 : fimul word ptr [rax - 0x77] ; ret
0x00000000000a51db : fimul word ptr [rax - 0x77] ; ret 0x894c
0x000000000005eaef : fimul word ptr [rax - 0x7d] ; ret
0x00000000000455fc : fimul word ptr [rbp + 0x11] ; retf
0x00000000000f3782 : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000084bad : fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x00000000000d88fc : fimul word ptr [rcx - 0x76b7ebad] ; ret 0x78e8
0x00000000001aa355 : fincstp ; call qword ptr [rdx]
0x00000000001aa3b9 : fincstp ; jmp rsi
0x00000000000ed81a : fistp qword ptr [rax + 0x10] ; syscall
0x00000000000f7272 : fistp qword ptr [rax + 0x113] ; syscall
0x00000000000f70fd : fistp qword ptr [rax + 0x114] ; syscall
0x00000000000ed1ef : fistp qword ptr [rax + 0x115] ; syscall
0x00000000000f71af : fistp qword ptr [rax + 0x116] ; syscall
0x00000000000f6e86 : fistp qword ptr [rax + 0x119] ; syscall
0x00000000000e66df : fistp qword ptr [rax + 0x11] ; syscall
0x00000000000ed29d : fistp qword ptr [rax + 0x11d] ; syscall
0x00000000000f867f : fistp qword ptr [rax + 0x120] ; syscall
0x00000000000ee132 : fistp qword ptr [rax + 0x127] ; syscall
0x00000000000ee1e2 : fistp qword ptr [rax + 0x128] ; syscall
0x00000000000e678f : fistp qword ptr [rax + 0x12] ; syscall
0x00000000000f8737 : fistp qword ptr [rax + 0x12b] ; syscall
0x00000000000f731f : fistp qword ptr [rax + 0x130] ; syscall
0x00000000000f87df : fistp qword ptr [rax + 0x133] ; syscall
0x00000000000e76c6 : fistp qword ptr [rax + 0x135] ; syscall
0x00000000000edfdf : fistp qword ptr [rax + 0x13] ; syscall
0x0000000000038f51 : fistp qword ptr [rax + 0x13e] ; syscall
0x00000000000ecff9 : fistp qword ptr [rax + 0x146] ; syscall
0x00000000000ee07f : fistp qword ptr [rax + 0x14] ; syscall
0x00000000000ee9d7 : fistp qword ptr [rax + 0x17] ; syscall
0x00000000000f1c81 : fistp qword ptr [rax + 0x1a] ; syscall
0x00000000000c4498 : fistp qword ptr [rax + 0x23] ; syscall
0x00000000000f7d7f : fistp qword ptr [rax + 0x2a] ; syscall
0x00000000000f7caf : fistp qword ptr [rax + 0x2b] ; syscall
0x00000000000f812e : fistp qword ptr [rax + 0x2c] ; syscall
0x00000000000f7efe : fistp qword ptr [rax + 0x2d] ; syscall
0x00000000000f81cf : fistp qword ptr [rax + 0x2e] ; syscall
0x00000000000f806f : fistp qword ptr [rax + 0x2f] ; syscall
0x00000000000c418a : fistp qword ptr [rax + 0x3d] ; syscall
0x00000000000f897f : fistp qword ptr [rax + 0x45] ; syscall
0x00000000000f8a37 : fistp qword ptr [rax + 0x46] ; syscall
0x00000000000e8ae6 : fistp qword ptr [rax + 0x55] ; syscall
0x000000000003527e : fistp qword ptr [rax + 0x82] ; syscall
0x00000000000f704f : fistp qword ptr [rax + 0xe8] ; syscall
0x00000000000c42b0 : fistp qword ptr [rax + 0xf7] ; syscall
0x00000000000e81cf : fistp qword ptr [rax + 1] ; syscall
0x00000000000ec641 : fistp qword ptr [rax + 7] ; syscall
0x000000000006f81d : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000072170 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000078eeb : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000001267b8 : fistp word ptr [rbx - 0x17] ; or dword ptr [rbx + 0x5b90ffef], ebp ; ret
0x0000000000084152 : fisttp dword ptr [rax + 0x21] ; retf
0x000000000003b6e2 : fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000b34ce : fisttp dword ptr [rax + 1] ; ret
0x0000000000163a52 : fisttp dword ptr [rax + 9] ; fadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000010d244 : fisttp dword ptr [rax - 0x77] ; add ch, al ; ret
0x0000000000117d6b : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x11] ; pop rbx ; ret
0x0000000000165448 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000002ad57 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000165785 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000046181 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000089d74 : fisttp dword ptr [rax - 0x77] ; ret 0x73e9
0x0000000000089c14 : fisttp dword ptr [rax - 0x77] ; ret 0x74e9
0x00000000000f94ce : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bae8a ; pop rbx ; ret
0x0000000000160acb : fisttp dword ptr [rax - 0x7b] ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000476ef : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x0000000000162ac2 : fisttp dword ptr [rbp + 1] ; rol dword ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000001627f2 : fisttp dword ptr [rbp - 0x77] ; retf 0x894d
0x0000000000162c02 : fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x00000000001633b1 : fisttp dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x0000000000160ff2 : fisttp dword ptr [rcx + 9] ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000dfc04 : fisttp dword ptr [rcx - 0x75] ; adc ecx, dword ptr [rax + 1] ; ret 0x3944
0x000000000004619b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000000ec6a2 : fisttp dword ptr [rcx - 0x77] ; retf 0x8348
0x00000000000a1901 : fisttp dword ptr [rdi] ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000cd50e : fisttp dword ptr [rdi] ; mov ds, word ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000bc5b1 : fisttp dword ptr [rdi] ; ret 0x8348
0x0000000000030bf0 : fisttp dword ptr [rdi] ; retf
0x0000000000089f75 : fisttp dword ptr [rdi] ; test dword ptr [rax + rax - 0x7cb80000], ecx ; ret 0x4801
0x00000000000da491 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008476b : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000162c3d : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x000000000003226e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000002a222 : fisttp qword ptr [rdi] ; ret 0xc389
0x00000000000fe3cc : fisttp word ptr [rax + 0x29] ; retf 0x894c
0x0000000000033182 : fisttp word ptr [rax - 0x39] ; ret
0x0000000000121ffc : fisttp word ptr [rax - 0x75] ; and al, 0x28 ; call rcx
0x000000000005649e : fisttp word ptr [rax - 0x75] ; jl 0x564cf ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001221ef : fisttp word ptr [rax - 0x75] ; push rsp ; and al, 0x20 ; call rdx
0x00000000001323cb : fisttp word ptr [rax - 0x77] ; ret
0x000000000008d411 : fisttp word ptr [rax - 0x77] ; ret 0x46e8
0x00000000000ffa13 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x000000000008743e : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x00000000000d5c6d : fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000000235d2 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000d5fdf : fisttp word ptr [rax - 0x7f] ; retf 0
0x000000000004621f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000011c7ef : fisttp word ptr [rbp + rcx*4 + 0x4c] ; and al, 0x1c ; call qword ptr [rax]
0x00000000000e893d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x00000000000eebcd : fisttp word ptr [rcx + 0x4ab8c2] ; add byte ptr [rax], al ; syscall
0x00000000000eec7d : fisttp word ptr [rcx + 0x4bb8c2] ; add byte ptr [rax], al ; syscall
0x000000000015681d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000de8a0 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000186e8c : fisub dword ptr [rdi - 0x58950005] ; sti ; call qword ptr [rax]
0x000000000015c071 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d8520 : fisub dword ptr [rsi - 0x7f] ; loope 0xd852b ; add esi, esi ; ret
0x0000000000162fb3 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x000000000015bd71 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f9661 : fisubr word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000188685 : fld dword ptr [rax] ; add byte ptr [rsi + rdx], dl ; out dx, eax ; jmp qword ptr [rax]
0x0000000000052062 : fld dword ptr [rbp - 0x77] ; ret 0x8b4c
0x000000000018b55d : fld dword ptr [rcx] ; add ah, dh ; or al, bh ; jmp rsp
0x000000000018b555 : fld dword ptr [rcx] ; add ah, dl ; or al, bh ; call rax
0x0000000000001dd8 : fld dword ptr [rdx + 0x6b865524] ; retf
0x000000000007d852 : fld qword ptr [rax - 0x78] ; cmp al, 0x30 ; ret
0x000000000019ad09 : fld qword ptr [rax] ; add byte ptr [rax + rdx*2 - 0xe], ah ; call qword ptr [rbx]
0x00000000000463eb : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000000ec794 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000000dc78 : fld qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000174da1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000159472 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x00000000001594d2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000179c34 : fld st(6) ; hlt ; jmp rbx
0x0000000000179cc0 : fld st(6) ; hlt ; push qword ptr [rax - 0x39] ; hlt ; call qword ptr [rsi]
0x00000000000039c2 : fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000033d50 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000033cd8 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000033c24 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000033b89 : fld xword ptr [rsp + 8] ; ret
0x0000000000033be8 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000c64d4 : fldcw word ptr [rsi] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b2009 : fldenv [rsi + 0xf] ; jbe 0xb2066 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000090609 : fldenv [rsi + 0xf] ; je 0x90666 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000908e7 : fldenv [rsi + 0xf] ; je 0x90944 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000015c0f1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000090501 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000b23fc : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x00000000000551ec : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000019694d : fldz ; call qword ptr [rdx]
0x0000000000045664 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000163ca2 : fmul dword ptr [rax + 0x11] ; ret 0x2bf
0x0000000000163987 : fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000001633b4 : fmul dword ptr [rax + 0x11] ; ret 0xf48
0x0000000000163a5e : fmul dword ptr [rax + 0x19] ; ret 0x11e9
0x0000000000163270 : fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x00000000000e6c6e : fmul dword ptr [rax + 0x21] ; ret
0x000000000009fb17 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000003f723 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000074b9f : fmul dword ptr [rax - 0x77] ; ret
0x000000000016504f : fmul dword ptr [rax - 0x7b] ; leave ; je 0x16505d ; call rcx
0x00000000000b5801 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000263be : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000001ad1bc : fmul dword ptr [rax] ; add byte ptr [rax], al ; or al, 3 ; add byte ptr [rax], al ; retf
0x000000000005a725 : fmul dword ptr [rbp + 0x63] ; retf
0x000000000005ac5f : fmul dword ptr [rbx - 0x4df7b] ; dec dword ptr [rbp + 0x63] ; retf
0x000000000019db88 : fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x000000000012b6de : fmul dword ptr [rcx + 0x39] ; ret 0x820f
0x000000000011a0b1 : fmul dword ptr [rcx + rcx*4 - 0xf] ; mov rdi, r13 ; call r12
0x0000000000056ae5 : fmul dword ptr [rdi] ; ret
0x000000000006f05a : fmul dword ptr [rdi] ; test bh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000003c25b : fmul dword ptr [rdi] ; test bl, dl ; out 0xff, eax ; dec dword ptr [rax + 0x39] ; ret
0x00000000001633a9 : fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001a1a50 : fmul dword ptr [rdx + 1] ; add byte ptr [rbp + rbx*2 - 0xb], bh ; jmp qword ptr [rcx]
0x00000000000f93ae : fmul qword ptr [rax + 0x39] ; ret
0x000000000008c353 : fmul qword ptr [rax - 0x77] ; ret 0x7ce9
0x000000000008aa69 : fmul qword ptr [rax - 0x77] ; ret 0x8eeb
0x00000000000d5354 : fmul qword ptr [rax - 0x77] ; retf
0x00000000000bff5b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000001a1b54 : fmul qword ptr [rbx + 1] ; add al, ch ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x000000000008d6b9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000914ef : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000004ce57 : fmul qword ptr [rdi] ; lea esi, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000159470 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000000025a6 : fnstenv [rdx + rdx - 0x38975393] ; ret
0x0000000000033d96 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00000000001765ea : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x0000000000032fe9 : fpatan ; ret
0x000000000015be71 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000033cdc : fscale ; fstp st(1) ; ret
0x0000000000178821 : fsincos ; jmp qword ptr [rax]
0x0000000000003bad : fst dword ptr [rbx + 0x55f20b1c] ; jg 0x3c26 ; xchg eax, ebp ; retf 0x10bf
0x0000000000174a87 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000088e0e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000033d98 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000174e00 : fstp st(0) ; ret 0xde5d
0x0000000000033cde : fstp st(1) ; ret
0x0000000000173fcb : fstp st(3), st(0) ; retf 0xeb83
0x00000000001658e9 : fstp xword ptr [rcx + 0x1f0fffeb] ; add bl, dh ; ret
0x0000000000033c22 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000033c9e : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000033be6 : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000197450 : fsub dword ptr [rax + rax - 0x1104e400] ; call qword ptr [rax]
0x00000000000351e8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000351b8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000033d99 : fsub dword ptr [rip + 0x200] ; ret
0x000000000015c171 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000096ad4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001763b8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000009fc5b : fsub qword ptr [rsi + 0xf] ; jmp 0x9fc27
0x000000000015bf71 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000095b6c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000011965b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000177ad9 : fsub st(6), st(0) ; call rbx
0x00000000001888d4 : fsub st(7) ; add byte ptr [rax], al ; push rsp ; pop rbx ; out dx, eax ; call qword ptr [rax]
0x0000000000187749 : fsubp st(2) ; jmp rsp
0x0000000000187e91 : fsubp st(4) ; call rsp
0x000000000018fc50 : fsubr dword ptr [rax + rax] ; add byte ptr [rbp + rdi*2 - 0x16], cl ; call rsi
0x00000000001a3b50 : fsubr dword ptr [rbx + 1] ; add byte ptr [rcx + rdx], bh ; stc ; jmp qword ptr [rbx]
0x00000000001a3c54 : fsubr qword ptr [rcx + rax] ; clc ; add esi, esi ; jmp qword ptr [rbx]
0x00000000000ade6b : fsubr qword ptr [rcx] ; ret
0x0000000000188409 : fsubr st(6) ; jmp rsp
0x00000000001984f1 : fsubr st(7) ; jmp rdx
0x0000000000033c28 : fsubrp st(1) ; ret
0x0000000000176ad8 : fucom st(5) ; loop 0x176b31 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000101b08 : fucomi st(0) ; ret 0xffc7
0x00000000000d2934 : fucomi st(1) ; retf 0xfffc
0x00000000000d2734 : fucomi st(1) ; retf 0xfffe
0x0000000000062b75 : fucomi st(1) ; xchg eax, edx ; retf 0xffff
0x00000000000b6981 : fucomip st(0) ; imul ecx, edi, 0x8948ffff ; ret 0xc031
0x000000000006e41e : fucomip st(0) ; insb byte ptr [rdi], dx ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000d4f5d : fucomip st(0) ; int 0x80
0x0000000000070344 : fucomip st(0) ; out 0x1d, al ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x702e4
0x00000000000dad80 : fucomip st(0) ; pop rdx ; ret
0x00000000000246fa : fucomip st(0) ; push rax ; retf
0x00000000000ea3f9 : fucomip st(0) ; push rcx ; outsb dx, byte ptr [rsi] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000025547 : fucomip st(0) ; ret
0x00000000000ef988 : fucomip st(0) ; ret 0xf97b
0x000000000004ce7f : fucomip st(0) ; retf
0x0000000000023920 : fucomip st(0) ; retf 0xfff1
0x000000000011ef10 : fucomip st(0) ; retf 0xfff7
0x00000000000ea190 : fucomip st(0) ; retf 0xfffc
0x000000000004922c : fucomip st(0) ; sahf ; ret 0xffff
0x0000000000196aa9 : fucomip st(6) ; jmp qword ptr [rax]
0x0000000000188c29 : fucomip st(7) ; jmp qword ptr [rax]
0x0000000000187c59 : fucomp st(3) ; jmp qword ptr [rax]
0x00000000000499dc : fucompp ; retf 0xffed
0x000000000017611e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000198abc : hlt ; adc al, 0xfc ; call qword ptr [rbx]
0x0000000000153dd9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012afe0 : hlt ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000018b99d : hlt ; add dword ptr [rax], eax ; push rsp ; retf 0xfff8
0x000000000018d56c : hlt ; add eax, 0x79b00000 ; std ; jmp qword ptr [rdx]
0x0000000000154cd9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f465b : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001797c6 : hlt ; call qword ptr [rax]
0x0000000000179b02 : hlt ; call qword ptr [rbx]
0x0000000000179dfa : hlt ; call qword ptr [rcx]
0x0000000000179996 : hlt ; call qword ptr [rdi]
0x000000000019dc62 : hlt ; call qword ptr [rdx]
0x0000000000179cc6 : hlt ; call qword ptr [rsi]
0x0000000000179bf6 : hlt ; call rax
0x00000000000d83cd : hlt ; call rcx
0x000000000019ec56 : hlt ; call rdi
0x00000000001796ae : hlt ; call rdx
0x0000000000179c3a : hlt ; call rsi
0x0000000000179b46 : hlt ; call rsp
0x000000000018693c : hlt ; cmp ebx, -1 ; je 0x1868cc ; sti ; jmp rsp
0x000000000008cdeb : hlt ; cmp ecx, esi ; je 0x8cde6 ; ret
0x00000000000d69d7 : hlt ; dec dword ptr [rax + 0x63] ; ret
0x00000000000d1469 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ddb03 : hlt ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000105937 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000017971e : hlt ; dec dword ptr [rbx + 0x19] ; hlt ; jmp qword ptr [rsi]
0x000000000018b460 : hlt ; div bh ; call qword ptr [rax]
0x000000000018a9c0 : hlt ; fcomi st(6) ; call rax
0x0000000000188684 : hlt ; fld dword ptr [rax] ; add byte ptr [rsi + rdx], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a0375 : hlt ; hlt ; jmp qword ptr [rsi]
0x0000000000179bfa : hlt ; inc dword ptr [rax] ; ret
0x00000000000d22f4 : hlt ; inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0xe9 ; retf 0xfffa
0x0000000000179df2 : hlt ; inc dword ptr [rdi + rax*8 - 0x38cb000c] ; hlt ; call qword ptr [rcx]
0x0000000000179912 : hlt ; inc dword ptr [rdi] ; hlt ; jmp qword ptr [rdx]
0x00000000001799e6 : hlt ; inc dword ptr [rdx + 0x45] ; hlt ; jmp rdx
0x0000000000179bfe : hlt ; inc eax ; ret
0x000000000017990e : hlt ; inc ecx ; hlt ; inc dword ptr [rdi] ; hlt ; jmp qword ptr [rdx]
0x00000000001799e2 : hlt ; inc edi ; hlt ; inc dword ptr [rdx + 0x45] ; hlt ; jmp rdx
0x0000000000189c92 : hlt ; inc esp ; pop rdx ; add dword ptr [rax], eax ; mov ah, 0x90 ; hlt ; call qword ptr [rax]
0x000000000019a811 : hlt ; int1 ; call qword ptr [rax]
0x000000000018fa4c : hlt ; je 0x18fa3c ; call rsp
0x0000000000179ba6 : hlt ; jmp qword ptr [rax]
0x0000000000179b5a : hlt ; jmp qword ptr [rbx]
0x000000000019db26 : hlt ; jmp qword ptr [rcx]
0x0000000000179d82 : hlt ; jmp qword ptr [rdi]
0x00000000001797a6 : hlt ; jmp qword ptr [rdx]
0x0000000000179722 : hlt ; jmp qword ptr [rsi]
0x0000000000179be2 : hlt ; jmp rax
0x000000000017999a : hlt ; jmp rbx
0x00000000001799ea : hlt ; jmp rdx
0x000000000019f25e : hlt ; jmp rsi
0x0000000000189c0a : hlt ; jmp rsp
0x00000000001605d5 : hlt ; jne 0x1606f7 ; ret
0x00000000001605d4 : hlt ; jne 0x1606f8 ; ret
0x00000000000df7ae : hlt ; jne 0xdf7a6 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000df7ad : hlt ; jne 0xdf7a7 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000018cbe8 : hlt ; jrcxz 0x18cbea ; call rax
0x0000000000189c02 : hlt ; lcall [rax + 0x14000156] ; jge 0x189c08 ; jmp rsp
0x0000000000108444 : hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000179cd6 : hlt ; lcall [rax + rcx*8 - 0x38df000c] ; hlt ; call qword ptr [rsi]
0x0000000000189c7a : hlt ; lcall [rax - 0x2bfffea7] ; mov esi, esp ; jmp rsp
0x000000000017a05a : hlt ; lcall [rax - 0x3a] ; hlt ; call qword ptr [rax]
0x0000000000179c1e : hlt ; lcall [rax - 0x5f000b3d] ; ret 0xfff4
0x0000000000179bd6 : hlt ; lcall [rbx + rdi] ; hlt ; call qword ptr [rdi]
0x0000000000179b52 : hlt ; lcall [rcx] ; cmp eax, 0x3329fff4 ; hlt ; jmp qword ptr [rbx]
0x0000000000179caa : hlt ; lcall [rdi - 0x38] ; hlt ; jmp qword ptr [rax]
0x0000000000179c02 : hlt ; lcall [rip + 0x10fff4c2] ; ret
0x0000000000179c0a : hlt ; lcall [rip + 0x1dfff4c2] ; ret 0xfff4
0x0000000000179c0e : hlt ; lcall [rip + 0x58fff4c2] ; ret
0x0000000000179c2a : hlt ; lcall [rip + 0xfff4c2] ; ret
0x0000000000179bde : hlt ; lcall [rip - 0x1f000b3e] ; ret 0xfff4
0x0000000000179c1a : hlt ; lcall [rip - 0x67000b3e] ; ret
0x0000000000189b6a : hlt ; ljmp [rax + 0x74000152] ; hlt ; call rsp
0x0000000000179bea : hlt ; ljmp [rax - 0x3d] ; hlt ; push rax ; ret 0xfff4
0x0000000000179b56 : hlt ; ljmp [rcx] ; xor esi, esp ; jmp qword ptr [rbx]
0x000000000017998e : hlt ; ljmp [rsi - 0x1000bba] ; hlt ; call qword ptr [rdi]
0x000000000008d04a : hlt ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000008cf7d : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000013eb9a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013984e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000c489e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000018a54c : hlt ; mov word ptr [rcx], es ; add ah, ah ; je 0x18a550 ; call qword ptr [rax]
0x000000000015fbe3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000018b560 : hlt ; or al, bh ; jmp rsp
0x00000000001885e8 : hlt ; or ebp, edi ; jmp rax
0x000000000019db9c : hlt ; or esi, esp ; jmp qword ptr [rcx]
0x0000000000002738 : hlt ; out 0xdf, eax ; syscall
0x0000000000188838 : hlt ; out dx, eax ; call rsp
0x0000000000179d4e : hlt ; push qword ptr [rax + rcx*8] ; hlt ; jmp qword ptr [rax]
0x0000000000179b9e : hlt ; push qword ptr [rax - 0x15000bc8] ; cmp ah, dh ; jmp qword ptr [rax]
0x0000000000179cc2 : hlt ; push qword ptr [rax - 0x39] ; hlt ; call qword ptr [rsi]
0x0000000000179df6 : hlt ; push qword ptr [rdi + rax*8] ; hlt ; call qword ptr [rcx]
0x0000000000179ce2 : hlt ; push qword ptr [rdi + rax*8] ; hlt ; call qword ptr [rsi]
0x0000000000179b7a : hlt ; push qword ptr [rdi - 0x16000bc2] ; cmp esi, esp ; jmp qword ptr [rdx]
0x0000000000179bee : hlt ; push rax ; ret 0xfff4
0x00000000000b25e3 : hlt ; ret
0x00000000000811b8 : hlt ; retf
0x00000000001883f4 : hlt ; retf 0
0x000000000019662c : hlt ; retf 0xffee
0x000000000018b200 : hlt ; retf 0xfff7
0x000000000018b244 : hlt ; retf 1
0x0000000000174fc3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000015fbe7 : hlt ; sub eax, edx ; ret
0x0000000000003e39 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a546c : hlt ; test byte ptr [rcx], al ; add byte ptr [rax + 0x61], dl ; idiv bh ; retf 0
0x0000000000186f9d : idiv ah ; call rax
0x000000000018a91a : idiv bh ; adc al, 0x9f ; add dword ptr [rax], eax ; retf 0xfff6
0x000000000004b164 : idiv bh ; call rax
0x0000000000041a0d : idiv bh ; dec dword ptr [rax - 0x77] ; retf 0x15e9
0x0000000000056bb9 : idiv bh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000043c66 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000ca356 : idiv bh ; dec dword ptr [rbx - 0x7cb7ebbd] ; ret
0x00000000000e0fa0 : idiv bh ; dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d89
0x000000000018a52a : idiv bh ; enter 0x18b, 0 ; test byte ptr [rcx - 0xa], dh ; call qword ptr [rax]
0x000000000018a6c2 : idiv bh ; enter 0x192, 0 ; push rsp ; mov dh, dh ; call qword ptr [rax]
0x000000000018a54a : idiv bh ; hlt ; mov word ptr [rcx], es ; add ah, ah ; je 0x18a552 ; call qword ptr [rax]
0x000000000004bd6e : idiv bh ; jmp qword ptr [rax]
0x000000000018a4c2 : idiv bh ; lodsb al, byte ptr [rsi] ; mov dword ptr [rcx], eax ; add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rax
0x000000000018a57a : idiv bh ; mov esp, 0x400018d ; js 0x18a582 ; call rax
0x000000000018a5f2 : idiv bh ; mov esp, 0x6400018f ; jg 0x18a5fa ; call rax
0x000000000018a25a : idiv bh ; mov esp, 0x9400017c ; sbb esi, esi ; call rax
0x000000000018a192 : idiv bh ; mov esp, 0xd4000179 ; or esi, esi ; call rax
0x000000000018a9ba : idiv bh ; mov esp, 0xf40001a2 ; fcomi st(6) ; call rax
0x00000000000f1f41 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000bf55b : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000f24c6 : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000001a6116 : idiv bh ; ret 0
0x00000000001a406e : idiv bh ; retf 0
0x00000000001a42b6 : idiv bh ; retf 1
0x000000000018a43a : idiv bh ; rol byte ptr [rdi + 0x62b40001], 0xf6 ; call rsp
0x000000000018aa22 : idiv bh ; shl byte ptr [rbx - 0x215bffff], 0xf6 ; call rsp
0x000000000017ac94 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000ed0eb : idiv byte ptr [rax + 0x118] ; syscall
0x000000000011e4a6 : idiv byte ptr [rcx - 0xa] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000024a06 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000000f1f40 : idiv dil ; mov rax, rbx ; pop rbx ; ret
0x000000000004be08 : idiv edi ; call qword ptr [rax]
0x000000000018b29a : idiv edi ; clc ; retf
0x000000000018b05a : idiv edi ; cld ; rol byte ptr [rcx], 0 ; xchg eax, esp ; js 0x18b063 ; call qword ptr [rax]
0x000000000004c495 : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x00000000000f8ee7 : idiv edi ; dec dword ptr [rax + 0x63] ; retf 0x8b41
0x0000000000164351 : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000058198 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f191d : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xd8e8
0x00000000000cc0d3 : idiv edi ; dec dword ptr [rbp - 0x77] ; ret
0x000000000018b1ea : idiv edi ; enter 0x1c9, 0 ; xchg eax, esp ; retf 0xfff7
0x000000000018b242 : idiv edi ; hlt ; retf 1
0x000000000008bb19 : idiv edi ; inc dword ptr [rbp - 0x77] ; ret 0x8945
0x00000000000f9012 : idiv edi ; inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000000574f8 : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000018b262 : idiv edi ; insb byte ptr [rdi], dx ; retf
0x000000000018b1e2 : idiv edi ; mov ah, 0xc9 ; add dword ptr [rax], eax ; retf 0xfff7
0x000000000018b3aa : idiv edi ; mov eax, 0x340001d0 ; out 0xf7, al ; call rsp
0x000000000018adda : idiv edi ; mov eax, 0x540001b2 ; and al, 0xf7 ; call rax
0x000000000018ac2a : idiv edi ; mov esp, 0x140001aa ; or dh, bh ; call rax
0x000000000018ae42 : idiv edi ; mov esp, 0x440001b4 ; xor bh, dh ; call rax
0x000000000018aeda : idiv edi ; mov esp, 0x540001b6 ; cmp dh, bh ; call rax
0x000000000018b362 : idiv edi ; mov esp, 0x540001cf ; loope 0x18b36b ; call rax
0x000000000018b232 : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x00000000000adffa : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018ad62 : idiv edi ; or al, 0xb1 ; add dword ptr [rax], eax ; sbb r14b, dil ; jmp qword ptr [rax]
0x000000000018ae62 : idiv edi ; or al, 0xb5 ; add dword ptr [rax], eax ; xchg eax, esp ; xor dh, bh ; jmp qword ptr [rax]
0x000000000018aefa : idiv edi ; or al, 0xb7 ; add dword ptr [rax], eax ; push rsp ; cmp al, 0xf7 ; jmp qword ptr [rax]
0x000000000018b25a : idiv edi ; pop rax ; retf
0x000000000018b0a2 : idiv edi ; push rax ; ret 1
0x000000000018b222 : idiv edi ; push rsp ; retf 1
0x00000000001a6c2e : idiv edi ; ret
0x00000000001a6d5e : idiv edi ; ret 0
0x00000000001a9146 : idiv edi ; ret 2
0x000000000018b252 : idiv edi ; retf
0x00000000001a8eb2 : idiv edi ; retf 0
0x000000000018b21a : idiv edi ; retf 1
0x000000000018aeaa : idiv edi ; sal byte ptr [rbp + 0x37940001], 0xf7 ; call rsp
0x000000000018ae4a : idiv edi ; sal byte ptr [rcx + rax - 0x8cf1c00], 1 ; jmp rsp
0x000000000018af42 : idiv edi ; sal byte ptr [rdi + 0x40940001], 0xf7 ; jmp qword ptr [rax]
0x000000000018b20a : idiv edi ; sbb dl, cl ; add dword ptr [rax], eax ; push rsp ; retf
0x000000000018ac82 : idiv edi ; shr byte ptr [rbx + 0xc840001], 0xf7 ; call rsp
0x000000000018b272 : idiv edi ; xchg eax, esp ; retf
0x00000000000380a6 : idiv esi ; ret
0x0000000000186fa1 : idiv esp ; jmp qword ptr [rax]
0x0000000000058197 : idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000380a5 : idiv rsi ; ret
0x00000000000a3a67 : imul cl ; ret 0xfffc
0x000000000009a328 : imul cl ; ret 8
0x000000000002b9e5 : imul dword ptr [rax] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x00000000000deb2d : imul eax ; in eax, dx ; ret 0xfff8
0x0000000000050772 : imul eax ; mov byte ptr [rcx], cl ; std ; dec dword ptr [rax + 0x29] ; ret
0x000000000004aaf2 : imul eax ; or byte ptr [rsi - 3], ah ; dec dword ptr [rax + 0x29] ; ret
0x000000000012daad : imul eax ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000075a5c : imul eax ; pop rsi ; ret 0xfffa
0x0000000000122f97 : imul eax ; ret
0x00000000000d6388 : imul eax ; ret 0xff88
0x00000000000d2f58 : imul eax ; ret 0xffbb
0x00000000000251a3 : imul eax ; retf
0x0000000000101e60 : imul eax ; retf 0xffca
0x0000000000101d7f : imul eax ; stosd dword ptr [rdi], eax ; retf
0x00000000001938a1 : imul eax, dword ptr [rax], 0xedf1cc00 ; jmp qword ptr [rdx]
0x00000000001938c9 : imul eax, dword ptr [rax], 0xedf23400 ; jmp rsp
0x0000000000172b88 : imul eax, dword ptr [rcx], -0x14 ; call qword ptr [rbx]
0x0000000000172b84 : imul eax, dword ptr [rcx], -0x14 ; ljmp [rbx + 1] ; in al, dx ; call qword ptr [rbx]
0x000000000015e741 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001a3ac5 : imul eax, dword ptr [rcx], 0 ; call 0x241a30d3
0x00000000001a3b51 : imul eax, dword ptr [rcx], 0 ; cmp al, 0x11 ; stc ; jmp qword ptr [rbx]
0x00000000001a3b15 : imul eax, dword ptr [rcx], 0 ; pop rax ; add esi, esi ; jmp qword ptr [rbx]
0x00000000001a3a89 : imul eax, dword ptr [rcx], 0 ; xchg eax, esp ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a3b29 : imul eax, dword ptr [rcx], 0 ; xor al, 0x11 ; stc ; jmp qword ptr [rbx]
0x0000000000090297 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x000000000008fc97 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000008985b : imul eax, dword ptr [rdx], 0x83480000 ; ret 0x4801
0x00000000000d0b73 : imul eax, dword ptr [rsi], 0x8948fff5 ; ret
0x0000000000160772 : imul eax, edx ; shr rax, 0x38 ; ret
0x00000000001652fe : imul ebx, dword ptr [rax], -0x18 ; ret
0x0000000000077a96 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf559 : imul ebx, dword ptr [rip + 0x1f0ffff6], 0 ; pop rbx ; ret
0x000000000002f8ce : imul ebx, edx, 0x89480014 ; ret 0xc031
0x000000000018e5f1 : imul ecx ; call qword ptr [rbx]
0x000000000018e6f5 : imul ecx ; call qword ptr [rcx]
0x000000000018e5dd : imul ecx ; call qword ptr [rdx]
0x000000000018e565 : imul ecx ; call qword ptr [rsi]
0x000000000018e6e1 : imul ecx ; jmp qword ptr [rax]
0x0000000000111703 : imul ecx, dword ptr [rax - 0x7d], 0x5d5b30c4 ; pop r12 ; ret
0x0000000000136c27 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000085cf1 : imul ecx, dword ptr [rcx + 0xf48000d], 0x45 ; ret 0xc3f3
0x0000000000150bf7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x000000000008f997 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000000b6983 : imul ecx, edi, 0x8948ffff ; ret 0xc031
0x00000000000feacf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000179afc : imul edi, dword ptr [rcx], 0x3a9afff4 ; hlt ; call qword ptr [rbx]
0x00000000000fd351 : imul edi, dword ptr [rdi], -0xe ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000002d6f3 : imul edi, dword ptr [rsi + 0x38], 0x358b4800 ; retf 0x3866
0x00000000000888e1 : imul edi, dword ptr [rsi], 0 ; cmove rax, rdx ; ret
0x0000000000186a21 : imul edi, ebx, 0xfb6b60ff ; jmp rax
0x0000000000162ff3 : imul edi, esi, 0x8349ffff ; ret 0x4908
0x0000000000121d4c : imul edi, esp, -1 ; jmp 0x121d18
0x000000000008f397 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x000000000008f097 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000008ed97 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000002c34 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003be4 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000007d6c5 : imul esi, dword ptr [rbx], 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007d6e0 : imul esi, dword ptr [rbx], 0 ; ret
0x000000000004d3cd : imul esi, dword ptr [rsi], 0 ; call rax
0x000000000007d7b6 : imul esi, dword ptr cs:[rbx], 0 ; ret
0x000000000007d756 : imul esi, dword ptr ds:[rbx], 0 ; ret
0x000000000007d7a6 : imul esi, dword ptr ss:[rbx], 0 ; ret
0x0000000000144644 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000009b22c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000007d730 : imul r14, qword ptr [rbx], 0 ; ret
0x00000000001a3ac4 : imul r8, qword ptr [rcx], 0 ; call 0x241a30d4
0x0000000000160771 : imul rax, rdx ; shr rax, 0x38 ; ret
0x0000000000188835 : in al, 0 ; add ah, dh ; out dx, eax ; call rsp
0x000000000019b3e1 : in al, 0 ; add byte ptr [rax + rsi*2 - 0xe], cl ; jmp qword ptr [rdx]
0x0000000000160608 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000bed2d : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018bba0 : in al, 0x13 ; stc ; jmp rax
0x000000000019e65c : in al, 0x16 ; add dword ptr [rax], eax ; and byte ptr [rax - 7], ah ; call qword ptr [rax]
0x00000000001a42b0 : in al, 0x20 ; add dword ptr [rax], eax ; fcomp qword ptr [rax] ; idiv bh ; retf 1
0x000000000008ce3b : in al, 0x41 ; cmp eax, ecx ; je 0x8ce27 ; ret
0x00000000000e75ca : in al, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019185c : in al, 0x48 ; add byte ptr [rax], al ; nop ; sbb esp, ebp ; call qword ptr [rbx]
0x000000000011e5f6 : in al, 0x49 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x000000000005c998 : in al, 0x4a ; movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x00000000000d36d0 : in al, 0x4a ; movsxd rax, dword ptr [rsi] ; add rax, rsi ; jmp rax
0x0000000000088a02 : in al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000176401 : in al, 0x4c ; pop rax ; retf
0x00000000000cd71b : in al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001a1c0c : in al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x00000000000819c9 : in al, 0x64 ; mov dword ptr [rax], 0xc ; jmp 0x8199f
0x000000000018c6f8 : in al, 0x65 ; cli ; call qword ptr [rax]
0x00000000000d0f26 : in al, 0x74 ; adc dword ptr [rbp + rcx*4 + 0x7b], eax ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009aefc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000117948 : in al, 0x75 ; and eax, 0x8348d889 ; ret
0x00000000000a39c2 : in al, 0x75 ; ret
0x00000000000a35a3 : in al, 0x75 ; ret 0x8945
0x00000000000895db : in al, 0x75 ; retf 0x2b49
0x0000000000085598 : in al, 0x75 ; sbb bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f1ae8 : in al, 0x89 ; ret
0x00000000001ab31c : in al, 0xa5 ; sti ; jmp qword ptr [rdx]
0x0000000000188ae0 : in al, 0xab ; out dx, eax ; jmp qword ptr [rax]
0x000000000019f25c : in al, 0xbb ; hlt ; jmp rsi
0x000000000019dc5c : in al, 0xc ; add dword ptr [rax], eax ; nop ; or al, 0xf4 ; call qword ptr [rdx]
0x0000000000188294 : in al, 0xc2 ; add byte ptr [rax], al ; xchg eax, esp ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; inc dword ptr [rax] ; ret
0x000000000018b294 : in al, 0xcb ; add dword ptr [rax], eax ; test dh, cl ; idiv edi ; clc ; retf
0x00000000001884d4 : in al, 0xd0 ; add byte ptr [rax], al ; je 0x1884d3 ; out dx, al ; jmp qword ptr [rax]
0x0000000000188bd8 : in al, 0xd3 ; out dx, eax ; jmp rsp
0x000000000018c160 : in al, 0xd4 ; stc ; jmp rsp
0x0000000000189a30 : in al, 0xe4 ; jmp qword ptr [rax]
0x000000000019ff5c : in al, 0xeb ; hlt ; jmp qword ptr [rcx]
0x00000000000038b8 : in al, 0xee ; jne 0x389a ; ret 0x975
0x000000000004b455 : in al, 0xf ; lahf ; ret
0x000000000012f21c : in al, 0xf ; sahf ; ret 0x8349
0x0000000000044ab5 : in al, 0xf ; xchg eax, ebp ; ret 0x854d
0x0000000000112dd7 : in al, 0xf0 ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000189a11 : in al, 0xf3 ; call rax
0x0000000000189a31 : in al, 0xf3 ; jmp qword ptr [rax]
0x000000000017945d : in al, 0xf3 ; jmp qword ptr [rcx]
0x0000000000179451 : in al, 0xf3 ; jmp qword ptr [rsi]
0x0000000000189a19 : in al, 0xf3 ; jmp rsp
0x000000000013eb7a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000a042e : in al, 0xf3 ; ret
0x0000000000188ccc : in al, 0xfe ; add byte ptr [rax], al ; adc al, 0xeb ; out dx, eax ; call qword ptr [rax]
0x00000000001ab3f5 : in al, 1 ; add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x000000000018b6fd : in al, 1 ; add byte ptr [rbp + rcx*2 - 8], dl ; call qword ptr [rax]
0x000000000018b4f8 : in al, 3 ; clc ; call qword ptr [rax]
0x0000000000188578 : in al, 3 ; out dx, eax ; jmp rax
0x000000000009bd68 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000086300 : in al, 6 ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000c6aed : in al, 9 ; ret 0xd889
0x00000000000f7d6e : in al, dx ; adc al, ch ; ret 0
0x00000000000e80ee : in al, dx ; adc al, ch ; retf
0x00000000001a09e4 : in al, dx ; adc esi, ebp ; jmp qword ptr [rcx]
0x000000000006f6d3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000376d4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xcc8
0x000000000008369b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000c3fcc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x3ff
0x0000000000083b9c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x803
0x000000000006f9cc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x945
0x00000000000ac015 : in al, dx ; add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x000000000004bdac : in al, dx ; add dword ptr [rax - 0x94343], eax ; jmp qword ptr [rax]
0x000000000018b835 : in al, dx ; add dword ptr [rax], eax ; adc al, 0x89 ; clc ; call rsp
0x00000000000ac867 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; retf 0x8941
0x00000000001abba1 : in al, dx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp eax, edi ; jmp qword ptr [rcx]
0x000000000004b451 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000014ff50 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001a1a64 : in al, dx ; add qword ptr [rax], rax ; cwde ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x0000000000166462 : in al, dx ; call qword ptr [rax - 0x2f0013a5]
0x0000000000172b8a : in al, dx ; call qword ptr [rbx]
0x0000000000166466 : in al, dx ; call rax
0x0000000000172aee : in al, dx ; call rcx
0x0000000000187e92 : in al, dx ; call rsp
0x0000000000002df0 : in al, dx ; clc ; ret
0x00000000001a0864 : in al, dx ; cmp byte ptr [rcx], al ; add al, cl ; adc ch, dh ; call qword ptr [rdx]
0x000000000018684c : in al, dx ; cmp ebx, 0xfb817cff ; jmp qword ptr [rdx]
0x0000000000172aea : in al, dx ; dec dword ptr [rbp] ; in al, dx ; call rcx
0x0000000000046fed : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000189d31 : in al, dx ; hlt ; jmp qword ptr [rax]
0x000000000019ff71 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000187f0a : in al, dx ; inc dword ptr [rbx + rbp*4 - 0xa7c0000] ; in al, dx ; call rsp
0x00000000001a3d64 : in al, dx ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bl ; cld ; jmp qword ptr [rdx]
0x0000000000178f18 : in al, dx ; jbe 0x178f13 ; dec ecx ; jbe 0x178f17 ; call qword ptr [rsi]
0x0000000000178f18 : in al, dx ; jbe 0x178f14 ; dec ecx ; jbe 0x178f18 ; call qword ptr [rsi]
0x00000000000ceabd : in al, dx ; jl 0xceaf9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187d82 : in al, dx ; jmp qword ptr [rax]
0x000000000019d681 : in al, dx ; jmp qword ptr [rbx]
0x0000000000187e8a : in al, dx ; lcall [rax - 0x58] ; add byte ptr [rax], al ; mov ah, 0xde ; in al, dx ; call rsp
0x0000000000172b86 : in al, dx ; ljmp [rbx + 1] ; in al, dx ; call qword ptr [rbx]
0x0000000000172b82 : in al, dx ; ljmp [rbx + 1] ; in al, dx ; ljmp [rbx + 1] ; in al, dx ; call qword ptr [rbx]
0x00000000000f04db : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000079ec1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013984a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008cb43 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000008d062 : in al, dx ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000008d147 : in al, dx ; mov word ptr [rdi + 4], dx ; ret
0x00000000001051e0 : in al, dx ; mov word ptr [rip + 0x450f4800], es ; ret 0xfc3
0x000000000013ef7a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000087007 : in al, dx ; or al, 0 ; je 0x86fd2 ; ret
0x0000000000087006 : in al, dx ; or al, 0 ; je 0x86fd3 ; ret
0x0000000000087007 : in al, dx ; or al, 0 ; je 0x86fd4 ; ret
0x0000000000087006 : in al, dx ; or al, 0 ; je 0x86fd5 ; ret
0x0000000000108129 : in al, dx ; or al, ch ; nop ; retf
0x000000000008d4a7 : in al, dx ; or al, ch ; push rdx ; cmp edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ceba6 : in al, dx ; or al, ch ; ret
0x000000000006df2e : in al, dx ; or al, ch ; retf
0x000000000012016f : in al, dx ; or al, ch ; retf 0x99
0x0000000000165d42 : in al, dx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000006dcc3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000007e282 : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000113a7f : in al, dx ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000081a17 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000150c74 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000045947 : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x00000000000ff655 : in al, dx ; or byte ptr [rbx + 0x5e0b185f], cl ; sbb dh, dh ; ret
0x000000000012c40d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000cef9f : in al, dx ; or byte ptr [rbx - 0x76bbfb83], cl ; retf 0x894c
0x00000000001970e1 : in al, dx ; out dx, al ; call qword ptr [rax]
0x00000000001884a9 : in al, dx ; out dx, al ; jmp rax
0x0000000000187e72 : in al, dx ; push qword ptr [rax + 0x640000a7] ; ret 0xffec
0x00000000001a3a14 : in al, dx ; push rbp ; jmp qword ptr [rbx]
0x00000000001ac1c4 : in al, dx ; push rsp ; clc ; call qword ptr [rbx]
0x000000000008cd2b : in al, dx ; ret
0x0000000000199264 : in al, dx ; ret 0
0x000000000011f1e0 : in al, dx ; ret 0xffff
0x0000000000104da0 : in al, dx ; retf
0x00000000001765ed : in al, dx ; retf 0xae32
0x0000000000188254 : in al, dx ; rol dword ptr [rax], 0 ; and al, 0xa0 ; out dx, al ; inc dword ptr [rax] ; ret 0
0x00000000000e7a74 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002623 : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000018cf59 : in al, dx ; std ; call rsp
0x000000000018cf61 : in al, dx ; std ; jmp rsp
0x0000000000178855 : in al, dx ; sti ; call rax
0x000000000017651e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1764b1 ; ret 0x48f
0x000000000017651d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1764b2 ; ret 0x48f
0x000000000008527d : in al, dx ; xor al, byte ptr [rax] ; call qword ptr [rax]
0x000000000004cfe6 : in ax, 2 ; add byte ptr [rbx - 0x7af00008], al ; ret
0x000000000018887d : in eax, 0 ; add byte ptr [rax + rdx*2], al ; out dx, eax ; call rsp
0x00000000000c6286 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x0000000000174c23 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000000228d : in eax, 0x2d ; pmuludq mm4, mm7 ; retf
0x00000000000a300c : in eax, 0x30 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000f2407 : in eax, 0x34 ; sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000104845 : in eax, 0x5d ; ret
0x0000000000173eb9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000003be6 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000176ad9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000174c7a : in eax, 0xe5 ; retf 0x2a91
0x00000000000b2ad3 : in eax, 0xf ; je 0xb2af8 ; add rax, 2 ; ret
0x00000000000a0589 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000013ebfa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000178841 : in eax, 0xfb ; jmp qword ptr [rax + 0x10fffbe6]
0x00000000001a729d : in eax, 0xfb ; jmp qword ptr [rdx]
0x000000000018ceb1 : in eax, 0xfd ; call rsp
0x000000000006838d : in eax, 0xff ; dec dword ptr [rax + 0x39] ; ret 0xd74
0x000000000005e020 : in eax, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000005af25 : in eax, 0xff ; dec dword ptr [rcx + 0x63] ; retf
0x0000000000175fa1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000e7b99 : in eax, 1 ; jne 0xe7be9 ; mov eax, 0x10c ; syscall
0x00000000000c64c5 : in eax, 2 ; add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000000c6430 : in eax, 2 ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000004cfe7 : in eax, 2 ; add byte ptr [rbx - 0x7af00008], al ; ret
0x00000000000f25ae : in eax, dx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000010f59a : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001927de : in eax, dx ; call qword ptr [rax]
0x000000000019397e : in eax, dx ; call qword ptr [rsi]
0x0000000000185f85 : in eax, dx ; cld ; push rax ; out dx, al ; cld ; jmp qword ptr [rax]
0x00000000001922c6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000192cea : in eax, dx ; jmp qword ptr [rdi]
0x00000000001938a6 : in eax, dx ; jmp qword ptr [rdx]
0x00000000001732c2 : in eax, dx ; jmp rsp
0x0000000000164e92 : in eax, dx ; jne 0x164e81 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001651dc : in eax, dx ; jne 0x1651c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016530f : in eax, dx ; jne 0x1652f1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e1a4a : in eax, dx ; jne 0xe1a39 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009fb72 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000009f539 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009f54f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f571 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f58f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009f5af : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f5d5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009f5f1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f611 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009f631 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009f657 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f679 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009f697 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009f6b7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009f6d3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009f6f3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009f713 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009f733 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009f759 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009f7a9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009f47f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009f49d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009f4bd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009f4df : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f4ff : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f51f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009f3b5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009f3c7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009f3dd : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009f3f5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009f40b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009f41d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009f43b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009f447 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009f45d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009f3a1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000013965a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002e581 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013effa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001547e0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f6d2a : in eax, dx ; pop rax ; pop rdi ; call rax
0x000000000016578a : in eax, dx ; pop rbx ; ret
0x0000000000071d82 : in eax, dx ; ret
0x00000000000deb2f : in eax, dx ; ret 0xfff8
0x00000000001749f8 : in eax, dx ; retf
0x0000000000048a8f : in eax, dx ; retf 0x13
0x000000000011c46b : in eax, dx ; retf 0x29
0x0000000000178859 : in eax, dx ; sti ; jmp rax
0x000000000009fcc2 : in eax, dx ; sub rax, 1 ; ret
0x0000000000085522 : in eax, dx ; xor eax, eax ; ret
0x000000000015dd28 : inc bl ; cmp dl, 1 ; jb 0x15dd3a ; mov byte ptr [rdi], cl ; ret
0x00000000000b3d2f : inc byte ptr [r13 + 0x69] ; retf
0x00000000000f7771 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000188ccd : inc byte ptr [rax] ; add byte ptr [rbx + rbp*8], dl ; out dx, eax ; call qword ptr [rax]
0x0000000000188cbd : inc byte ptr [rax] ; add byte ptr [rdx + rbp*8 - 0x11], ah ; call rax
0x0000000000113fbe : inc byte ptr [rax] ; retf 0x3b9a
0x00000000000b3d30 : inc byte ptr [rbp + 0x69] ; retf
0x000000000002ab45 : inc byte ptr [rbx] ; je 0x2ab55 ; ret
0x00000000001139ec : inc byte ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000118588 : inc byte ptr [rdi + 0xf] ; xchg eax, edi ; ret 0x8440
0x0000000000179994 : inc byte ptr [rdi - 0xc] ; call qword ptr [rdi]
0x000000000007759a : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000018626b : inc dword ptr [rax + 0x10fffb3d] ; xor bl, bh ; call rax
0x0000000000186373 : inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax - 0x1f0004db]
0x000000000018c6eb : inc dword ptr [rax + 0x34000244] ; pop rbp ; cli ; jmp rax
0x000000000018629f : inc dword ptr [rax + 0x37] ; sti ; jmp qword ptr [rax]
0x000000000018c413 : inc dword ptr [rax + 0x4000235] ; sbb edx, edi ; jmp rsp
0x000000000018648f : inc dword ptr [rax + 0x40fffb57] ; pop rcx ; sti ; jmp qword ptr [rax]
0x0000000000186553 : inc dword ptr [rax + 0x42] ; sti ; call qword ptr [rax - 0x1f0004bd]
0x000000000018653f : inc dword ptr [rax + 0x50] ; sti ; call qword ptr [rax - 0x1f0004af]
0x00000000001864af : inc dword ptr [rax + 0x57] ; sti ; inc dword ptr [rax] ; pop rcx ; sti ; jmp rax
0x000000000018640f : inc dword ptr [rax + 0x58] ; sti ; inc dword ptr [rax] ; pop rdx ; sti ; jmp rax
0x0000000000186493 : inc dword ptr [rax + 0x59] ; sti ; jmp qword ptr [rax]
0x00000000001864f7 : inc dword ptr [rax + 0x5a] ; sti ; jmp qword ptr [rax]
0x000000000018647b : inc dword ptr [rax + 0x5d] ; sti ; jmp qword ptr [rax]
0x00000000001860bb : inc dword ptr [rax + 0x63] ; std ; call rax
0x000000000018608f : inc dword ptr [rax + 0x66] ; std ; call rax
0x00000000001861cf : inc dword ptr [rax + 0x73] ; std ; jmp rcx
0x00000000000cec35 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000012ad91 : inc dword ptr [rax + rax*8 - 0x1a175d8b] ; ret 0xffff
0x0000000000186c13 : inc dword ptr [rax + rdi*4 - 5] ; call rsp
0x000000000018a92b : inc dword ptr [rax - 0x1bfffe61] ; retf
0x00000000001787d7 : inc dword ptr [rax - 0x29] ; sti ; jmp rax
0x0000000000186f9b : inc dword ptr [rax - 0x2f00030a] ; idiv esp ; jmp qword ptr [rax]
0x0000000000186563 : inc dword ptr [rax - 0x2f0004b9] ; sti ; jmp qword ptr [rax]
0x0000000000186383 : inc dword ptr [rax - 0x2f0004d7] ; sub bh, bl ; jmp qword ptr [rax]
0x0000000000186397 : inc dword ptr [rax - 0x2f0004e5] ; sbb al, 0xfb ; jmp qword ptr [rax]
0x0000000000185f37 : inc dword ptr [rax - 0x37] ; cld ; jmp rax
0x0000000000188acb : inc dword ptr [rax - 0x3bffff0f] ; stosb byte ptr [rdi], al ; out dx, eax ; call rsp
0x0000000000178933 : inc dword ptr [rax - 0x3f000337] ; retf
0x0000000000178923 : inc dword ptr [rax - 0x3f000340] ; ret 0xfffc
0x000000000018634f : inc dword ptr [rax - 0x3f0004eb] ; sbb ebx, edi ; call qword ptr [rax]
0x0000000000185f17 : inc dword ptr [rax - 0x44] ; cld ; jmp rax
0x00000000001788f7 : inc dword ptr [rax - 0x45] ; int1 ; call qword ptr [rax - 0x1f000e43]
0x0000000000186a9f : inc dword ptr [rax - 0x49] ; sti ; call rax
0x0000000000186cb7 : inc dword ptr [rax - 0x4c] ; sti ; call rax
0x0000000000178897 : inc dword ptr [rax - 0x58] ; int1 ; jmp rax
0x0000000000185ebf : inc dword ptr [rax - 0x5c] ; cld ; call qword ptr [rax]
0x00000000001865a7 : inc dword ptr [rax - 0x70] ; sti ; call rax
0x00000000001867bf : inc dword ptr [rax - 0x73] ; sti ; call rax
0x00000000000c8ee8 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00000000001869cf : inc dword ptr [rax - 0x7f] ; sti ; jmp rax
0x0000000000057818 : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000004c449 : inc dword ptr [rax - 0x94343] ; jmp qword ptr [rax]
0x000000000018be5b : inc dword ptr [rax] ; adc al, 2 ; add byte ptr [rax + rsi*2 - 7], ah ; jmp qword ptr [rax]
0x000000000018cf55 : inc dword ptr [rax] ; add ah, al ; in al, dx ; std ; call rsp
0x000000000006018c : inc dword ptr [rax] ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000016381c : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8944
0x0000000000163786 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0xffb8
0x000000000019cedd : inc dword ptr [rax] ; add byte ptr [rax + 0x56], dl ; jmp rbx
0x0000000000086192 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000ea9d0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00000000000d09e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c9af8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000052c27 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000a052f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000ab2d6 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xab2e5 ; ret
0x00000000001605ed : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000015c687 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000f7801 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000162c86 : inc dword ptr [rax] ; add byte ptr [rcx + 0xf], cl ; ret 0x8341
0x000000000017b827 : inc dword ptr [rax] ; and dl, bh ; push qword ptr [rax] ; and dl, bh ; jmp qword ptr [rax]
0x0000000000178b27 : inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x000000000017882b : inc dword ptr [rax] ; fdivp st(3) ; push qword ptr [rax - 0x21] ; sti ; jmp rax
0x0000000000185edf : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000186ca7 : inc dword ptr [rax] ; mov dh, 0xfb ; call qword ptr [rax + 0x20fffbb5]
0x0000000000034855 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x00000000001083c0 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x000000000018649b : inc dword ptr [rax] ; pop rbp ; sti ; jmp rax
0x00000000001864b3 : inc dword ptr [rax] ; pop rcx ; sti ; jmp rax
0x0000000000186413 : inc dword ptr [rax] ; pop rdx ; sti ; jmp rax
0x00000000001863f7 : inc dword ptr [rax] ; pop rsp ; sti ; jmp rax
0x000000000018c8d3 : inc dword ptr [rax] ; push rax ; add al, byte ptr [rax] ; xchg eax, esp ; lahf ; cli ; jmp qword ptr [rax]
0x00000000000f048b : inc dword ptr [rax] ; ret
0x000000000018825b : inc dword ptr [rax] ; ret 0
0x000000000018633f : inc dword ptr [rax] ; sti ; call rax
0x00000000001789c7 : inc dword ptr [rax] ; sub al, 0xf2 ; jmp qword ptr [rax]
0x0000000000178963 : inc dword ptr [rax] ; sub dh, dl ; call qword ptr [rax]
0x00000000001789a3 : inc dword ptr [rax] ; sub esi, edx ; jmp qword ptr [rax]
0x0000000000186597 : inc dword ptr [rax] ; xchg eax, edx ; sti ; call qword ptr [rax + 0x20fffb91]
0x0000000000186217 : inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x0000000000100a11 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x3945
0x0000000000066cd2 : inc dword ptr [rbp + 0x31] ; shr cl, cl ; lodsb al, byte ptr [rsi] ; retf
0x0000000000042c92 : inc dword ptr [rbp + 0x5b0974c0] ; ret
0x000000000017a58f : inc dword ptr [rbp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x0000000000113e1d : inc dword ptr [rbp - 0x14728b40] ; ret 0x1f0f
0x00000000000f43d5 : inc dword ptr [rbp - 0x164a8b40] ; retf 0xfffe
0x00000000000380f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00000000001272e5 : inc dword ptr [rbp - 0x75] ; add byte ptr gs:[rax - 0x7d], cl ; ret
0x000000000013284c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000016410a : inc dword ptr [rbp - 0x77] ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000161778 : inc dword ptr [rbp - 0x77] ; loope 0x16176b ; ret
0x00000000000bb497 : inc dword ptr [rbp - 0x77] ; ret
0x000000000008b7c0 : inc dword ptr [rbp - 0x77] ; ret 0x1f0f
0x000000000008bbe0 : inc dword ptr [rbp - 0x77] ; ret 0x3845
0x000000000008c4bc : inc dword ptr [rbp - 0x77] ; ret 0x8941
0x0000000000089c9e : inc dword ptr [rbp - 0x77] ; ret 0x8944
0x000000000008b6e1 : inc dword ptr [rbp - 0x77] ; ret 0x8945
0x0000000000089f36 : inc dword ptr [rbp - 0x77] ; retf
0x000000000012d064 : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x39] ; ret
0x00000000000ba920 : inc dword ptr [rbp - 0x7b] ; rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000000000f0eae : inc dword ptr [rbp - 0x7cd28b40] ; ret
0x00000000000f0f0a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000187f0b : inc dword ptr [rbx + rbp*4 - 0xa7c0000] ; in al, dx ; call rsp
0x00000000000d2297 : inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0x89 ; ret 0x8348
0x00000000000d22f5 : inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0xe9 ; retf 0xfffa
0x00000000000329c3 : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005a75c : inc dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000004eb4a : inc dword ptr [rbx - 0x53343] ; call qword ptr [rax]
0x000000000005cd96 : inc dword ptr [rbx - 0x76b70005] ; retf 0x840f
0x000000000011ed5a : inc dword ptr [rbx - 0x76b79c03] ; ret
0x00000000000d90d9 : inc dword ptr [rbx - 0x76beff08] ; ret 0x8b4c
0x000000000010ef7c : inc dword ptr [rbx - 0x7af00008] ; ret
0x00000000000b0815 : inc dword ptr [rbx - 0x7af08f08] ; ret
0x00000000000e50e0 : inc dword ptr [rbx - 0x7af0fe08] ; retf 6
0x000000000011a5e1 : inc dword ptr [rbx - 0x7bf0fe05] ; retf 0
0x000000000004c3c4 : inc dword ptr [rbx - 0x8ff43] ; call qword ptr [rax]
0x0000000000112d6f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x00000000000626c3 : inc dword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x000000000002152d : inc dword ptr [rbx] ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x21501
0x0000000000038a44 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000a05ed : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a055b : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000dba08 : inc dword ptr [rcx + 0x39] ; ret 0x1c74
0x00000000000ab32c : inc dword ptr [rcx + 0x39] ; retf 0x860f
0x00000000001887ab : inc dword ptr [rcx + 0x43540000] ; out dx, eax ; call rax
0x00000000000581ea : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000055859 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf40
0x000000000004f2a9 : inc dword ptr [rcx + 0xf] ; mov esi, 0x358d48c7 ; retf
0x0000000000030ae8 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000114c15 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3b44
0x00000000000540dd : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x86e9
0x00000000000e9aa3 : inc dword ptr [rcx + 0xfffe1] ; add byte ptr [rcx], cl ; retf 0xea81
0x000000000004d8ec : inc dword ptr [rcx + 1] ; int 0x80
0x000000000005a4d9 : inc dword ptr [rcx + 1] ; retf
0x0000000000186e43 : inc dword ptr [rcx + rbp*4] ; sti ; push qword ptr [rax + rbp*4 - 5] ; jmp rsp
0x000000000007775b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x00000000000f9014 : inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000018671b : inc dword ptr [rcx + rdx*4 - 5] ; call rsp
0x000000000018612f : inc dword ptr [rcx - 0x1e00028e] ; jae 0x18613c ; jmp rcx
0x00000000000f855a : inc dword ptr [rcx - 0x42] ; add eax, 0x74000000 ; retf
0x00000000000602e5 : inc dword ptr [rcx - 0x43] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5c5b9
0x000000000004f354 : inc dword ptr [rcx - 0x45] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000001043df : inc dword ptr [rcx - 0x47] ; retf 0
0x000000000004142d : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000dfcb1 : inc dword ptr [rcx - 0x77] ; ret
0x000000000002b9eb : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000008a4e1 : inc dword ptr [rcx - 0x77] ; ret 0x848b
0x00000000000c977d : inc dword ptr [rcx - 0x77] ; ret 0x8d41
0x00000000000cff03 : inc dword ptr [rcx - 0x77] ; retf
0x00000000000f7402 : inc dword ptr [rcx - 0x77] ; retf 0x3074
0x0000000000060d9b : inc dword ptr [rcx - 0x77] ; ror dword ptr [rax - 0x75], 5 ; ret 0x3530
0x0000000000062665 : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], 0x85 ; retf
0x00000000000ac939 : inc dword ptr [rcx - 0x7d] ; ret
0x00000000000d0077 : inc dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000f1b9e : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000007a447 : inc dword ptr [rcx - 0x7f] ; retf
0x00000000000e6c68 : inc dword ptr [rcx - 0x8b80000] ; fmul dword ptr [rax + 0x21] ; ret
0x00000000000574fa : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000018bb9d : inc dword ptr [rcx] ; add ah, ah ; adc edi, ecx ; jmp rax
0x00000000001659c9 : inc dword ptr [rcx] ; ja 0x1659d5 ; ret
0x000000000018613f : inc dword ptr [rcx] ; jae 0x186144 ; jmp rcx
0x000000000018611f : inc dword ptr [rcx] ; jb 0x186124 ; jmp rcx
0x0000000000185ff7 : inc dword ptr [rcx] ; movsxd rdi, ebp ; call qword ptr [rcx + 0x21fffd63]
0x00000000001ac9fa : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001ac976 : inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x00000000000dad97 : inc dword ptr [rcx] ; ret
0x0000000000179df3 : inc dword ptr [rdi + rax*8 - 0x38cb000c] ; hlt ; call qword ptr [rcx]
0x000000000011545e : inc dword ptr [rdi + rcx + 0x4d] ; ret 0x9d0f
0x00000000000d028d : inc dword ptr [rdi + rcx] ; test dword ptr [rbx - 0x7d000000], edx ; retf 0x8840
0x0000000000179913 : inc dword ptr [rdi] ; hlt ; jmp qword ptr [rdx]
0x00000000001799e7 : inc dword ptr [rdx + 0x45] ; hlt ; jmp rdx
0x0000000000186653 : inc dword ptr [rdx - 0x6e] ; sti ; call rdx
0x0000000000064273 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000006896c : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; retf 0xffb2
0x0000000000186883 : inc dword ptr [rdx] ; cmp ebx, -1 ; jb 0x186814 ; sti ; jmp rdx
0x0000000000186b7b : inc dword ptr [rdx] ; mov ah, 0xfb ; call qword ptr [rdx + 0x22fffbb3]
0x0000000000156ffd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000001875e3 : inc dword ptr [rsi + rdi*2] ; add ah, dl ; retf 0xffea
0x000000000018ca4b : inc dword ptr [rsi - 0x44fbffff] ; cli ; jmp qword ptr [rax]
0x0000000000186ae7 : inc dword ptr [rsi - 0x4a] ; sti ; call rsi
0x00000000001865ef : inc dword ptr [rsi - 0x71] ; sti ; call rsi
0x0000000000186ad7 : inc dword ptr [rsi] ; mov eax, 0xb796fffb ; sti ; jmp qword ptr [rsi]
0x0000000000186013 : inc dword ptr [rsi] ; pop rbp ; std ; call rsi
0x00000000001865df : inc dword ptr [rsi] ; xchg eax, ecx ; sti ; call qword ptr [rsi + 0x26fffb90]
0x00000000001882cb : inc dword ptr [rsp + rax*8] ; add byte ptr [rax], al ; adc al, 0xaa ; out dx, al ; jmp qword ptr [rax]
0x000000000019cedc : inc dword ptr fs:[rax] ; add byte ptr [rax + 0x56], dl ; jmp rbx
0x000000000018cb23 : inc eax ; adc dword ptr [rcx], eax ; add byte ptr [rsp + rbx*2 - 5], ah ; call rsp
0x000000000018c7bb : inc eax ; add al, byte ptr [r8] ; adc al, 0x7f ; cli ; jmp rax
0x00000000001863a7 : inc eax ; and bl, bh ; call qword ptr [rax]
0x0000000000189713 : inc eax ; cmp byte ptr [rcx], al ; add byte ptr [rax + rax*4 - 0xd], dh ; jmp rsp
0x0000000000178b17 : inc eax ; cmp dl, dh ; call rax
0x000000000018622b : inc eax ; cmp eax, 0x3050fffb ; sti ; call qword ptr [rax]
0x0000000000186f0b : inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000018a013 : inc eax ; je 0x18a020 ; add ah, dl ; stc ; cmc ; jmp rax
0x00000000001787a7 : inc eax ; leave ; sti ; jmp rax
0x000000000017c8fb : inc eax ; push rsp ; cli ; call rax
0x0000000000179bff : inc eax ; ret
0x0000000000165f17 : inc eax ; ret 0xffeb
0x0000000000178927 : inc eax ; ret 0xfffc
0x0000000000178937 : inc eax ; retf
0x00000000001787c7 : inc eax ; sar bl, cl ; jmp rax
0x000000000018bf4b : inc eax ; sbb dword ptr [rdx], eax ; add byte ptr [rsi + rcx*4 - 7], ah ; call qword ptr [rax]
0x0000000000186353 : inc eax ; sbb ebx, edi ; call qword ptr [rax]
0x000000000018704b : inc eax ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000033b69 : inc eax ; shr eax, 0x1f ; ret
0x000000000018bb33 : inc eax ; std ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or edi, ecx ; call rsp
0x000000000018651f : inc eax ; sti ; call qword ptr [rax]
0x0000000000186fab : inc eax ; sti ; cld ; call qword ptr [rax]
0x000000000018ac83 : inc eax ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; test byte ptr [rdi + rsi*8], cl ; call rsp
0x0000000000178993 : inc eax ; sub dh, dl ; call rax
0x00000000001789bf : inc eax ; sub esi, edx ; jmp rax
0x00000000001877eb : inc eax ; test dword ptr [rax], eax ; add byte ptr [rax + rbp*8 - 0x16], ah ; call rsp
0x0000000000178877 : inc eax ; xchg eax, edi ; int1 ; call rax
0x0000000000155f9c : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000017ac99 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000132b9f : inc ebx ; mov eax, 0xfffffffe ; ret
0x0000000000035bac : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000074ccc : inc ebx ; nop ; xor eax, eax ; ret
0x00000000001600d9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000017990f : inc ecx ; hlt ; inc dword ptr [rdi] ; hlt ; jmp qword ptr [rdx]
0x00000000000c3d62 : inc edi ; adc al, 0 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000000bcab6 : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc7fe : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bccf7 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001799e3 : inc edi ; hlt ; inc dword ptr [rdx + 0x45] ; hlt ; jmp rdx
0x00000000001776d3 : inc edi ; out dx, al ; jmp qword ptr [rbx]
0x00000000000ef7b1 : inc esi ; jmp qword ptr [r8]
0x000000000018c7eb : inc esp ; add al, byte ptr [rax] ; push rsp ; test dl, bh ; jmp rax
0x0000000000189c93 : inc esp ; pop rdx ; add dword ptr [rax], eax ; mov ah, 0x90 ; hlt ; call qword ptr [rax]
0x000000000018ba43 : inc esp ; test dword ptr [rcx], 0xf8e1d400 ; jmp rax
0x000000000006e420 : insb byte ptr [rdi], dx ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000199a58 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, ah ; retf 0
0x0000000000189884 : insb byte ptr [rdi], dx ; add dword ptr [r8], eax ; xchg eax, esp ; mov bh, 0xf3 ; jmp rsp
0x00000000001a3b79 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; adc ecx, r15d ; jmp qword ptr [rbx]
0x00000000001a3ba1 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; adc rcx, r15 ; jmp qword ptr [rbx]
0x00000000001513f4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3bdd : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000001a3c55 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; clc ; add esi, esi ; jmp qword ptr [rbx]
0x00000000001a3bf1 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; pop rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000001a3bc9 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000001a3c2d : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; rol byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000001a50e4 : insb byte ptr [rdi], dx ; add dword ptr [rcx], 0xf64d1800 ; call rdx
0x00000000000bf194 : insb byte ptr [rdi], dx ; add eax, 0x5be77501 ; pop rbp ; pop r12 ; ret
0x00000000001a1ce4 : insb byte ptr [rdi], dx ; add qword ptr [r8], r8 ; sub byte ptr [rcx - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000033c9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000033be9 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000033d51 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x0000000000033cd9 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000033c25 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x0000000000033b8a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000019a2d4 : insb byte ptr [rdi], dx ; cdq ; int1 ; jmp rsi
0x00000000000a30b0 : insb byte ptr [rdi], dx ; cmc ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000001abba4 : insb byte ptr [rdi], dx ; cmp eax, edi ; jmp qword ptr [rcx]
0x0000000000042bd0 : insb byte ptr [rdi], dx ; cmp esi, dword ptr [rdi] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000018b644 : insb byte ptr [rdi], dx ; fiadd word ptr [rcx] ; add byte ptr [rcx], ah ; clc ; jmp rsp
0x0000000000176ade : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000199ee4 : insb byte ptr [rdi], dx ; iretd ; add byte ptr [rax], al ; js 0x199efb ; cld ; jmp rsi
0x0000000000121e10 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003788 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000087221 : insb byte ptr [rdi], dx ; or eax, 0x450f4800 ; ret 0xfc3
0x000000000019dae4 : insb byte ptr [rdi], dx ; or eax, dword ptr [rcx] ; add byte ptr [rax + 0xb], cl ; hlt ; call qword ptr [rsi]
0x0000000000192ce4 : insb byte ptr [rdi], dx ; pop rbp ; add byte ptr [rax], al ; test al, 0xca ; in eax, dx ; jmp qword ptr [rdi]
0x000000000019ee04 : insb byte ptr [rdi], dx ; popfq ; hlt ; jmp qword ptr [rcx]
0x0000000000165565 : insb byte ptr [rdi], dx ; ret
0x000000000018b264 : insb byte ptr [rdi], dx ; retf
0x000000000004dd90 : insb byte ptr [rdi], dx ; retf 0xffff
0x0000000000175ea6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000195ee4 : insb byte ptr [rdi], dx ; xchg esi, ebp ; jmp rax
0x000000000000239e : insb byte ptr [rdi], dx ; xor bl, al ; retf 0x23c4
0x000000000019ffe4 : insb byte ptr [rdi], dx ; xor byte ptr [rcx], al ; add al, ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000000c61f0 : insb byte ptr [rdi], dx ; xor eax, 0x8948fff7 ; ret 0x8b48
0x0000000000154060 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000895e4 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b63df : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000154f60 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a3c91 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add r14b, sil ; jmp qword ptr [rbx]
0x00000000001a3d65 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bl ; cld ; jmp qword ptr [rdx]
0x00000000000f38e6 : insd dword ptr [rdi], dx ; mov eax, 0xfaeed3e8 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000176adf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001c00 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x0000000000174e8d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000186a69 : insd dword ptr [rdi], dx ; sti ; jmp rax
0x0000000000175d9f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000002ce7 : int 0x80
0x0000000000055d5f : int 0xc3
0x00000000000035d8 : int 0xcb
0x00000000001ac085 : int1 ; add dword ptr [rax], eax ; enter -0x7b2, -1 ; ret
0x000000000018b8ed : int1 ; add dword ptr [rax], eax ; xor al, 0xaf ; clc ; call rsp
0x00000000001788fa : int1 ; call qword ptr [rax - 0x1f000e43]
0x000000000017879a : int1 ; call qword ptr [rax]
0x000000000019a006 : int1 ; call qword ptr [rcx]
0x000000000019a446 : int1 ; call qword ptr [rdi]
0x0000000000199dce : int1 ; call qword ptr [rdx]
0x0000000000199c92 : int1 ; call qword ptr [rsi]
0x000000000017887a : int1 ; call rax
0x00000000000a2a06 : int1 ; call rbx
0x000000000017874a : int1 ; call rsp
0x00000000000deab2 : int1 ; clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000186fcd : int1 ; cld ; jmp qword ptr [rax]
0x00000000000df7ab : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xdf7a9 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000178722 : int1 ; dec dword ptr [rax] ; int1 ; jmp qword ptr [rax]
0x00000000001017a3 : int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001890aa : int1 ; dec esp ; adc al, 1 ; add byte ptr [rsi + rdi - 0xf], dl ; jmp rax
0x0000000000189312 : int1 ; dec esp ; and dword ptr [rcx], eax ; add byte ptr [rax + rax*8 - 0xf], ah ; jmp rax
0x00000000001a01c1 : int1 ; hlt ; jmp rdx
0x0000000000003be3 : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001938a5 : int1 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001788f6 : int1 ; inc dword ptr [rax - 0x45] ; int1 ; call qword ptr [rax - 0x1f000e43]
0x0000000000178896 : int1 ; inc dword ptr [rax - 0x58] ; int1 ; jmp rax
0x0000000000178876 : int1 ; inc eax ; xchg eax, edi ; int1 ; call rax
0x000000000008cded : int1 ; je 0x8cde4 ; ret
0x000000000015dcab : int1 ; jl 0x15dcfc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015dccc : int1 ; jl 0x15dd1d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015dcdf : int1 ; jl 0x15dd30 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015ddb4 : int1 ; jl 0x15de05 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015de0c : int1 ; jl 0x15de5d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000015dea9 : int1 ; jl 0x15defa ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000178726 : int1 ; jmp qword ptr [rax]
0x0000000000199e5e : int1 ; jmp qword ptr [rbx]
0x0000000000199ba2 : int1 ; jmp qword ptr [rcx]
0x000000000017887e : int1 ; jmp rax
0x000000000019a34a : int1 ; jmp rbx
0x00000000000a04e5 : int1 ; jmp rcx
0x0000000000199886 : int1 ; jmp rdi
0x000000000019a2d6 : int1 ; jmp rsi
0x000000000017874e : int1 ; jmp rsp
0x00000000000728db : int1 ; jne 0x728d6 ; lea eax, [rdx + rdi] ; ret
0x0000000000175d64 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000a0609 : int1 ; mov eax, eax ; ret
0x000000000013e9eb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139e1f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000011e6aa : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011a0b4 : int1 ; mov rdi, r13 ; call r12
0x000000000015fbb3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000cd164 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000004ea61 : int1 ; or eax, 0x894c0000 ; ret 0x894c
0x00000000001884d1 : int1 ; out dx, al ; jmp rsp
0x00000000000a05f0 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000004448e : int1 ; pop rbx ; ret
0x0000000000103f92 : int1 ; pop rdx ; pop r10 ; ret
0x0000000000178872 : int1 ; push qword ptr [rax - 0x3f000e6b] ; xchg eax, edi ; int1 ; call rax
0x0000000000178892 : int1 ; push qword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; inc dword ptr [rax - 0x58] ; int1 ; jmp rax
0x0000000000178902 : int1 ; push qword ptr [rax] ; ret 0xfff1
0x0000000000178746 : int1 ; push qword ptr [rcx + rcx*2 + 0x49d4fff1] ; int1 ; jmp rsp
0x0000000000110a07 : int1 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002687 : int1 ; ret
0x00000000000e7b73 : int1 ; ret 0x2c
0x00000000001764b6 : int1 ; ret 0x5803
0x000000000018c229 : int1 ; stc ; call qword ptr [rax]
0x000000000015fbb7 : int1 ; sub eax, edx ; ret
0x00000000000de80c : int1 ; syscall
0x00000000000892e6 : int1 ; xor eax, eax ; pop rbx ; ret
0x00000000001038ee : int1 ; xor eax, eax ; ret
0x0000000000199ebd : iretd ; add byte ptr [rax], al ; jo 0x199ed0 ; cld ; jmp qword ptr [rbx]
0x0000000000199ebc : iretd ; add byte ptr [rax], al ; jo 0x199ed1 ; cld ; jmp qword ptr [rbx]
0x0000000000199ee5 : iretd ; add byte ptr [rax], al ; js 0x199efa ; cld ; jmp rsi
0x00000000001884a5 : iretd ; add byte ptr [rax], al ; mov ah, 0xec ; out dx, al ; jmp rax
0x000000000018b365 : iretd ; add dword ptr [rax], eax ; push rsp ; loope 0x18b368 ; call rax
0x00000000001a9f09 : iretd ; add dword ptr [rax], eax ; sal bh, 1 ; call qword ptr [rcx]
0x000000000008459a : iretd ; call rax
0x0000000000085325 : iretd ; call rcx
0x0000000000037d92 : iretd ; call rdx
0x000000000018ba01 : iretd ; clc ; call qword ptr [rax]
0x000000000017945c : iretd ; in al, 0xf3 ; jmp qword ptr [rcx]
0x000000000012c718 : iretd ; mov dword ptr [rsp + 0x10], edx ; call 0xe8997
0x00000000000e7919 : iretd ; mov eax, 0x103 ; syscall
0x00000000001046bd : ja 0x1046cb ; ret
0x0000000000104744 : ja 0x10471c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000104767 : ja 0x104773 ; ret
0x0000000000104758 : ja 0x10478f ; mov eax, 0xe3 ; syscall
0x000000000010663f : ja 0x10664b ; ret
0x0000000000106633 : ja 0x106660 ; xor eax, eax ; syscall
0x0000000000106712 : ja 0x106723 ; ret
0x0000000000106703 : ja 0x10673b ; mov eax, 0x59 ; syscall
0x0000000000108217 : ja 0x10822a ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000113827 : ja 0x11382c ; ret
0x000000000011b701 : ja 0x11b754 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000011b865 : ja 0x11b845 ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000011e6cd : ja 0x11e6be ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012a367 : ja 0x12a383 ; ret
0x000000000012a4df : ja 0x12a502 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000012a704 : ja 0x12a730 ; ret
0x0000000000132b3d : ja 0x132b34 ; xor eax, eax ; ret
0x0000000000159bc4 : ja 0x159c0a ; jb 0x159bd6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015a0b1 : ja 0x15a0e8 ; jb 0x15a0c0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000015af89 : ja 0x15af57 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015da83 : ja 0x15da87 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000015dfc4 : ja 0x15e022 ; jb 0x15dfd6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015e609 : ja 0x15e64e ; jb 0x15e618 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001659cb : ja 0x1659d3 ; ret
0x0000000000176524 : ja 0x1764ab ; ret 0x48f
0x0000000000178f21 : ja 0x178f16 ; call rcx
0x0000000000178f21 : ja 0x178f17 ; call rcx
0x0000000000186a45 : ja 0x186a44 ; jmp rax
0x0000000000195af1 : ja 0x195ae3 ; call qword ptr [rsi]
0x00000000001ad5dc : ja 0x1ad5ea ; add byte ptr [rax], al ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000003227d : ja 0x3225e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000351a3 : ja 0x351b3 ; ret
0x0000000000035212 : ja 0x35223 ; ret
0x000000000003525f : ja 0x352ab ; ret
0x0000000000038f2a : ja 0x38f83 ; ret
0x0000000000045c6e : ja 0x45cc0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000508f2 : ja 0x508d5 ; mov eax, r9d ; ret
0x0000000000062004 : ja 0x61f91 ; ret 0x348
0x000000000006af0d : ja 0x6af1b ; ret
0x000000000006af40 : ja 0x6af4b ; ret
0x0000000000077da8 : ja 0x77dc1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085d85 : ja 0x85d2e ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000085d65 : ja 0x85d7a ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000085d65 : ja 0x85d7c ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000088e0d : ja 0x88dee ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009b377 : ja 0x9b37d ; ret
0x000000000009b393 : ja 0x9b39d ; mov dword ptr [rdi], ecx ; ret
0x000000000009b3d4 : ja 0x9b3e3 ; mov qword ptr [rdi], rcx ; ret
0x000000000009b459 : ja 0x9b46d ; ret
0x000000000009b4af : ja 0x9b4c7 ; ret
0x000000000009b531 : ja 0x9b54d ; ret
0x000000000009c977 : ja 0x9c981 ; lea rax, [rdi + 2] ; ret
0x000000000009c993 : ja 0x9c9a1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000009c9e4 : ja 0x9c9f7 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000009cac9 : ja 0x9cae1 ; lea rax, [rdi + 0x10] ; ret
0x000000000009cb3f : ja 0x9cb5b ; lea rax, [rdi + 0x14] ; ret
0x000000000009cbc1 : ja 0x9cbe1 ; lea rax, [rdi + 0x18] ; ret
0x000000000009e627 : ja 0x9e62d ; ret
0x000000000009e643 : ja 0x9e64d ; mov dword ptr [rdi], ecx ; ret
0x000000000009e684 : ja 0x9e693 ; mov qword ptr [rdi], rcx ; ret
0x000000000009e709 : ja 0x9e71d ; ret
0x000000000009e75f : ja 0x9e777 ; ret
0x000000000009e7e1 : ja 0x9e7fd ; ret
0x000000000009f0f7 : ja 0x9f0fd ; ret
0x000000000009f113 : ja 0x9f11d ; mov dword ptr [rdi], ecx ; ret
0x000000000009f154 : ja 0x9f163 ; mov qword ptr [rdi], rcx ; ret
0x000000000009f1d9 : ja 0x9f1ed ; ret
0x000000000009f22f : ja 0x9f247 ; ret
0x000000000009f2b1 : ja 0x9f2cd ; ret
0x00000000000a0024 : ja 0xa0055 ; jb 0xa0036 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0443 : ja 0xa0460 ; jb 0xa044f ; mov byte ptr [rdi], cl ; ret
0x00000000000b22e9 : ja 0xb2309 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000b39dd : ja 0xb39eb ; ret
0x00000000000b40a0 : ja 0xb40b1 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c40c7 : ja 0xc411b ; ret
0x00000000000c415d : ja 0xc41bb ; ret
0x00000000000c41f0 : ja 0xc41fb ; ret
0x00000000000c4280 : ja 0xc42e3 ; ret
0x00000000000c43ca : ja 0xc4403 ; ret
0x00000000000c443d : ja 0xc444b ; ret
0x00000000000c447a : ja 0xc44c3 ; ret
0x00000000000c44fd : ja 0xc450b ; ret
0x00000000000c489c : ja 0xc48c8 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000c572f : ja 0xc5735 ; add byte ptr [rax], al ; syscall
0x00000000000c70b5 : ja 0xc70af ; ret
0x00000000000cf0ae : ja 0xcf0b9 ; jl 0xcf0a5 ; ret
0x00000000000dcfd5 : ja 0xdcfcf ; ret
0x00000000000de8d6 : ja 0xde8e8 ; setne al ; movzx eax, al ; ret
0x00000000000e66ad : ja 0xe6713 ; ret
0x00000000000e675d : ja 0xe67c3 ; ret
0x00000000000e6bb1 : ja 0xe6bbb ; xor eax, eax ; ret
0x00000000000e715a : ja 0xe7162 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000e7562 : ja 0xe7553 ; ret
0x00000000000e75b8 : ja 0xe75a9 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e77cb : ja 0xe77d3 ; ret
0x00000000000e7819 : ja 0xe7823 ; ret
0x00000000000e786b : ja 0xe7873 ; ret
0x00000000000e78c3 : ja 0xe78d3 ; ret
0x00000000000e7927 : ja 0xe7933 ; ret
0x00000000000e797f : ja 0xe798b ; ret
0x00000000000e7baa : ja 0xe7bb3 ; ret
0x00000000000e80d7 : ja 0xe8133 ; ret
0x00000000000e816a : ja 0xe8173 ; ret
0x00000000000e81aa : ja 0xe8203 ; ret
0x00000000000e823d : ja 0xe824b ; ret
0x00000000000e826d : ja 0xe827b ; ret
0x00000000000e829d : ja 0xe82ab ; ret
0x00000000000e892a : ja 0xe896b ; ret
0x00000000000e899d : ja 0xe89ab ; ret
0x00000000000e8aca : ja 0xe8b13 ; ret
0x00000000000ec493 : ja 0xec4a8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000ec61a : ja 0xec673 ; ret
0x00000000000ed0a5 : ja 0xed0b3 ; ret
0x00000000000ed0f9 : ja 0xed103 ; ret
0x00000000000ed1bd : ja 0xed223 ; ret
0x00000000000ed26d : ja 0xed2d3 ; ret
0x00000000000ed353 : ja 0xed35f ; ret
0x00000000000ed39c : ja 0xed3a8 ; ret
0x00000000000ed7f4 : ja 0xed843 ; ret
0x00000000000ed9c6 : ja 0xed9d3 ; ret
0x00000000000eda07 : ja 0xeda13 ; ret
0x00000000000ede73 : ja 0xedea3 ; ret
0x00000000000edfba : ja 0xee013 ; ret
0x00000000000ee05a : ja 0xee0b3 ; ret
0x00000000000ee100 : ja 0xee163 ; ret
0x00000000000ee1b0 : ja 0xee213 ; ret
0x00000000000ee69f : ja 0xee6a7 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000ee99d : ja 0xeea0b ; ret
0x00000000000eebba : ja 0xeebfb ; ret
0x00000000000eec6a : ja 0xeecab ; ret
0x00000000000eed19 : ja 0xeed23 ; ret
0x00000000000f00ed : ja 0xf00fb ; ret
0x00000000000f02d2 : ja 0xf02e3 ; ret
0x00000000000f030d : ja 0xf031b ; ret
0x00000000000f033d : ja 0xf034b ; ret
0x00000000000f03d9 : ja 0xf03e5 ; ret
0x00000000000f1c5a : ja 0xf1cb3 ; ret
0x00000000000f4424 : ja 0xf4433 ; ret
0x00000000000f6e43 : ja 0xf6ebb ; ret
0x00000000000f6ef5 : ja 0xf6f03 ; ret
0x00000000000f701d : ja 0xf7083 ; ret
0x00000000000f70cd : ja 0xf7133 ; ret
0x00000000000f717d : ja 0xf71e3 ; ret
0x00000000000f722d : ja 0xf72ab ; ret
0x00000000000f72fa : ja 0xf7353 ; ret
0x00000000000f7391 : ja 0xf73eb ; ret
0x00000000000f7415 : ja 0xf7423 ; ret
0x00000000000f7c8a : ja 0xf7ce3 ; ret
0x00000000000f7d5a : ja 0xf7db3 ; ret
0x00000000000f7ec3 : ja 0xf7f33 ; ret
0x00000000000f7f7d : ja 0xf7ffb ; ret
0x00000000000f804a : ja 0xf80a3 ; ret
0x00000000000f80f3 : ja 0xf8163 ; ret
0x00000000000f81aa : ja 0xf8203 ; ret
0x00000000000f824d : ja 0xf82cb ; ret
0x00000000000f864d : ja 0xf86b3 ; ret
0x00000000000f86fd : ja 0xf876b ; ret
0x00000000000f87ad : ja 0xf8813 ; ret
0x00000000000f894d : ja 0xf89b3 ; ret
0x00000000000f89fd : ja 0xf8a73 ; ret
0x00000000000f8aad : ja 0xf8abb ; ret
0x00000000000f8add : ja 0xf8aeb ; ret
0x00000000000f8b0d : ja 0xf8b1b ; ret
0x00000000000f8b3d : ja 0xf8b4b ; ret
0x00000000000f8c10 : ja 0xf8c1b ; ret
0x00000000000f8c3d : ja 0xf8c4b ; ret
0x00000000000f8c6d : ja 0xf8c7b ; ret
0x00000000000f8ca0 : ja 0xf8cab ; ret
0x00000000000f8ccd : ja 0xf8cdb ; ret
0x000000000011cb7a : jae 0x11cb8b ; mov rdi, rbp ; call 0x129627
0x00000000001271b4 : jae 0x12713b ; ret 0x3901
0x0000000000128df4 : jae 0x128e00 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012a445 : jae 0x12a454 ; xor eax, eax ; ret
0x000000000012a485 : jae 0x12a494 ; xor eax, eax ; ret
0x000000000012eb70 : jae 0x12eb75 ; ret
0x000000000012ebc0 : jae 0x12ebc5 ; ret
0x0000000000131cd4 : jae 0x131cb7 ; mov eax, 1 ; ret
0x0000000000174ae2 : jae 0x174ac4 ; jo 0x174b60 ; mov ebp, 0xfb67d10d ; ret
0x000000000017597e : jae 0x175959 ; push rsi ; pop rdx ; je 0x17594e ; ret 0xacfc
0x00000000001860d5 : jae 0x1860d6 ; jmp rcx
0x00000000001860d9 : jae 0x1860da ; jmp rcx
0x00000000001860dd : jae 0x1860e2 ; jmp qword ptr [rcx - 0x1e00028f]
0x00000000001860e5 : jae 0x1860e6 ; jmp rcx
0x00000000001860e9 : jae 0x1860ea ; jmp rcx
0x00000000001860ed : jae 0x1860f2 ; push qword ptr [rsi + 0x71] ; std ; jmp rcx
0x00000000001860f5 : jae 0x1860f6 ; jmp rcx
0x00000000001860f9 : jae 0x1860fa ; jmp rcx
0x00000000001860fd : jae 0x186102 ; call qword ptr [rax - 0x1e00028f]
0x0000000000186105 : jae 0x186106 ; jmp rcx
0x0000000000186109 : jae 0x18610a ; jmp rcx
0x0000000000186115 : jae 0x186116 ; jmp rcx
0x0000000000186119 : jae 0x18611a ; jmp rcx
0x000000000018611d : jae 0x186122 ; inc dword ptr [rcx] ; jb 0x186126 ; jmp rcx
0x0000000000186125 : jae 0x186126 ; jmp rcx
0x0000000000186129 : jae 0x18612a ; jmp rcx
0x0000000000186135 : jae 0x186136 ; jmp rcx
0x0000000000186139 : jae 0x18613a ; jmp rcx
0x000000000018613d : jae 0x186142 ; inc dword ptr [rcx] ; jae 0x186146 ; jmp rcx
0x0000000000186141 : jae 0x186142 ; jmp rcx
0x0000000000186145 : jae 0x186146 ; jmp rcx
0x0000000000186149 : jae 0x18614a ; jmp rcx
0x0000000000186151 : jae 0x186152 ; jmp rcx
0x000000000018614d : jae 0x186152 ; ljmp [rsi + 0x73] ; std ; jmp rcx
0x0000000000186155 : jae 0x186156 ; jmp rcx
0x0000000000186159 : jae 0x18615a ; jmp rcx
0x000000000018615d : jae 0x18615e ; jmp rsi
0x0000000000186165 : jae 0x186166 ; jmp rcx
0x0000000000186169 : jae 0x18616a ; jmp rcx
0x0000000000186175 : jae 0x186176 ; jmp rcx
0x0000000000186179 : jae 0x18617a ; jmp rcx
0x000000000018617d : jae 0x18617e ; jmp rsi
0x0000000000186185 : jae 0x186186 ; jmp rcx
0x0000000000186189 : jae 0x18618a ; jmp rcx
0x0000000000186191 : jae 0x186192 ; jmp rcx
0x0000000000186195 : jae 0x186196 ; jmp rcx
0x0000000000186199 : jae 0x18619a ; jmp rcx
0x000000000018619d : jae 0x1861a2 ; dec ebx ; jno 0x1861a6 ; jmp rcx
0x00000000001861a5 : jae 0x1861a6 ; jmp rcx
0x00000000001861a9 : jae 0x1861aa ; jmp rcx
0x00000000001861ad : jae 0x1861b2 ; dec dword ptr [rbx + 0x72] ; std ; jmp rcx
0x00000000001861b5 : jae 0x1861b6 ; jmp rcx
0x00000000001861b9 : jae 0x1861ba ; jmp rcx
0x00000000001861bd : jae 0x1861c2 ; dec ebx ; jb 0x1861c6 ; jmp rcx
0x00000000001861c5 : jae 0x1861c6 ; jmp rcx
0x00000000001861c9 : jae 0x1861ca ; jmp rcx
0x00000000001861cd : jae 0x1861d2 ; inc dword ptr [rax + 0x73] ; std ; jmp rcx
0x00000000001861d1 : jae 0x1861d2 ; jmp rcx
0x00000000001861d0 : jae 0x1861d3 ; jmp rcx
0x00000000001861d5 : jae 0x1861d6 ; jmp rcx
0x00000000001861d9 : jae 0x1861da ; jmp rcx
0x00000000001861e5 : jae 0x1861e6 ; jmp rcx
0x00000000001861e9 : jae 0x1861ea ; jmp rcx
0x00000000001861ed : jae 0x1861f2 ; push qword ptr [rax] ; jb 0x1861f6 ; jmp rcx
0x00000000001861f5 : jae 0x1861f6 ; jmp rcx
0x00000000001861f9 : jae 0x1861fa ; jmp rcx
0x0000000000186205 : jae 0x186206 ; jmp rcx
0x0000000000186209 : jae 0x18620a ; jmp rcx
0x000000000018620d : jae 0x186212 ; lcall [rax + 0x30] ; sti ; jmp qword ptr [rax]
0x0000000000186a79 : jae 0x186a78 ; jmp rax
0x00000000001958d5 : jae 0x1958c7 ; jmp qword ptr [rdx]
0x0000000000034bfe : jae 0x34c45 ; xor eax, eax ; pop rbx ; ret
0x00000000000351dd : jae 0x351e2 ; ret
0x00000000000356fd : jae 0x35702 ; ret
0x0000000000044f27 : jae 0x44f30 ; xor eax, eax ; ret
0x0000000000072adb : jae 0x72ae4 ; mov eax, dword ptr [rdx] ; ret
0x0000000000079a88 : jae 0x79a95 ; movzx eax, byte ptr [rax] ; ret
0x000000000007cf1d : jae 0x7cf45 ; movzx eax, byte ptr [rax] ; ret
0x0000000000083945 : jae 0x83966 ; lea rax, [rdx - 8] ; ret
0x00000000000855ae : jae 0x855be ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087171 : jae 0x87186 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000b3abd : jae 0xb3ac2 ; ret
0x00000000000b62dd : jae 0xb62e2 ; ret
0x00000000000b630d : jae 0xb6312 ; ret
0x00000000000c401d : jae 0xc4022 ; ret
0x00000000000c4240 : jae 0xc4245 ; ret
0x00000000000c431d : jae 0xc4322 ; ret
0x00000000000c484e : jae 0xc4853 ; ret
0x00000000000c48dd : jae 0xc48e2 ; ret
0x00000000000c5321 : jae 0xc5327 ; add byte ptr [rax], al ; syscall
0x00000000000c532d : jae 0xc5332 ; ret
0x00000000000c552d : jae 0xc5532 ; ret
0x00000000000c555d : jae 0xc5562 ; ret
0x00000000000c55bd : jae 0xc55c2 ; ret
0x00000000000c55ed : jae 0xc55f2 ; ret
0x00000000000c561d : jae 0xc5622 ; ret
0x00000000000c564d : jae 0xc5652 ; ret
0x00000000000de67d : jae 0xde682 ; ret
0x00000000000de6ad : jae 0xde6b2 ; ret
0x00000000000de6dd : jae 0xde6e2 ; ret
0x00000000000de70d : jae 0xde712 ; ret
0x00000000000de73d : jae 0xde742 ; ret
0x00000000000de76d : jae 0xde772 ; ret
0x00000000000de79d : jae 0xde7a2 ; ret
0x00000000000de7cd : jae 0xde7d2 ; ret
0x00000000000e50a4 : jae 0xe508e ; mov rdi, r15 ; call 0x212cf
0x00000000000e76ed : jae 0xe76f2 ; ret
0x00000000000e79cd : jae 0xe79d2 ; ret
0x00000000000e79fd : jae 0xe7a02 ; ret
0x00000000000e7b1d : jae 0xe7b22 ; ret
0x00000000000e7b4d : jae 0xe7b52 ; ret
0x00000000000e7c0d : jae 0xe7c12 ; ret
0x00000000000e7c3d : jae 0xe7c42 ; ret
0x00000000000e87cd : jae 0xe87d2 ; ret
0x00000000000e89cd : jae 0xe89d2 ; ret
0x00000000000e89fd : jae 0xe8a02 ; ret
0x00000000000e8a2d : jae 0xe8a32 ; ret
0x00000000000e8a5d : jae 0xe8a62 ; ret
0x00000000000e8a8d : jae 0xe8a92 ; ret
0x00000000000e8b4d : jae 0xe8b52 ; ret
0x00000000000e8b7d : jae 0xe8b82 ; ret
0x00000000000e943d : jae 0xe9442 ; ret
0x00000000000e946d : jae 0xe9472 ; ret
0x00000000000e949d : jae 0xe94a2 ; ret
0x00000000000e94d0 : jae 0xe94d5 ; ret
0x00000000000e9c7d : jae 0xe9c82 ; ret
0x00000000000e9cb0 : jae 0xe9cb5 ; ret
0x00000000000e9cdd : jae 0xe9ce2 ; ret
0x00000000000e9d0d : jae 0xe9d12 ; ret
0x00000000000e9d3d : jae 0xe9d42 ; ret
0x00000000000e9d70 : jae 0xe9d75 ; ret
0x00000000000e9d9d : jae 0xe9da2 ; ret
0x00000000000e9dcd : jae 0xe9dd2 ; ret
0x00000000000e9dfd : jae 0xe9e02 ; ret
0x00000000000ecc60 : jae 0xecc65 ; ret
0x00000000000eda3d : jae 0xeda42 ; ret
0x00000000000eddad : jae 0xeddb2 ; ret
0x00000000000edf7d : jae 0xedf82 ; ret
0x00000000000ee89d : jae 0xee8a2 ; ret
0x00000000000ee95d : jae 0xee962 ; ret
0x00000000000eeb4d : jae 0xeeb52 ; ret
0x00000000000eeb7d : jae 0xeeb82 ; ret
0x00000000000eec2d : jae 0xeec32 ; ret
0x00000000000eecdd : jae 0xeece2 ; ret
0x00000000000eeffd : jae 0xef002 ; ret
0x00000000000ef02d : jae 0xef032 ; ret
0x00000000000ef05d : jae 0xef062 ; ret
0x00000000000f196f : jae 0xf1974 ; ret
0x00000000000f1bed : jae 0xf1bf2 ; ret
0x00000000000f1c1d : jae 0xf1c22 ; ret
0x00000000000f1ced : jae 0xf1cf2 ; ret
0x00000000000f1d1d : jae 0xf1d22 ; ret
0x00000000000f1d50 : jae 0xf1d55 ; ret
0x00000000000f1d7d : jae 0xf1d82 ; ret
0x00000000000f1dad : jae 0xf1db2 ; ret
0x00000000000f1ddd : jae 0xf1de2 ; ret
0x00000000000f1e0d : jae 0xf1e12 ; ret
0x00000000000f377e : jae 0xf37a9 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000f4cc0 : jae 0xf4cc5 ; ret
0x00000000000f4ced : jae 0xf4cf2 ; ret
0x00000000000f4d1d : jae 0xf4d22 ; ret
0x00000000000f4d50 : jae 0xf4d55 ; ret
0x00000000000f4d80 : jae 0xf4d85 ; ret
0x00000000000f4dad : jae 0xf4db2 ; ret
0x00000000000f4de0 : jae 0xf4de5 ; ret
0x00000000000f4e0d : jae 0xf4e12 ; ret
0x00000000000f4e3d : jae 0xf4e42 ; ret
0x00000000000f4e70 : jae 0xf4e75 ; ret
0x00000000000f4e9d : jae 0xf4ea2 ; ret
0x00000000000f4ed0 : jae 0xf4ed5 ; ret
0x00000000000f6c0d : jae 0xf6c12 ; ret
0x00000000000f6c3d : jae 0xf6c42 ; ret
0x00000000000f6d6d : jae 0xf6d72 ; ret
0x00000000000f6d9d : jae 0xf6da2 ; ret
0x00000000000f6dcd : jae 0xf6dd2 ; ret
0x00000000000f6dfd : jae 0xf6e02 ; ret
0x00000000000f6e44 : jae 0xf6e3b ; ret
0x00000000000f6f2d : jae 0xf6f32 ; ret
0x00000000000f6fb0 : jae 0xf6fb5 ; ret
0x00000000000f6fdd : jae 0xf6fe2 ; ret
0x00000000000f74cd : jae 0xf74d2 ; ret
0x00000000000f74fd : jae 0xf7502 ; ret
0x00000000000f7540 : jae 0xf7545 ; ret
0x00000000000f756d : jae 0xf7572 ; ret
0x00000000000f759d : jae 0xf75a2 ; ret
0x00000000000f75cd : jae 0xf75d2 ; ret
0x00000000000f75fd : jae 0xf7602 ; ret
0x00000000000f762d : jae 0xf7632 ; ret
0x00000000000f765d : jae 0xf7662 ; ret
0x00000000000f768d : jae 0xf7692 ; ret
0x00000000000f76bd : jae 0xf76c2 ; ret
0x00000000000f76f0 : jae 0xf76f5 ; ret
0x00000000000f771d : jae 0xf7722 ; ret
0x00000000000f7750 : jae 0xf7755 ; ret
0x00000000000f777d : jae 0xf7782 ; ret
0x00000000000f77ad : jae 0xf77b2 ; ret
0x00000000000f77dd : jae 0xf77e2 ; ret
0x00000000000f780d : jae 0xf7812 ; ret
0x00000000000f783d : jae 0xf7842 ; ret
0x00000000000f7870 : jae 0xf7875 ; ret
0x00000000000f78a0 : jae 0xf78a5 ; ret
0x00000000000f78cd : jae 0xf78d2 ; ret
0x00000000000f78fd : jae 0xf7902 ; ret
0x00000000000f7930 : jae 0xf7935 ; ret
0x00000000000f7960 : jae 0xf7965 ; ret
0x00000000000f7990 : jae 0xf7995 ; ret
0x00000000000f79bd : jae 0xf79c2 ; ret
0x00000000000f79ed : jae 0xf79f2 ; ret
0x00000000000f7a1d : jae 0xf7a22 ; ret
0x00000000000f7a4d : jae 0xf7a52 ; ret
0x00000000000f7a80 : jae 0xf7a85 ; ret
0x00000000000f7aad : jae 0xf7ab2 ; ret
0x00000000000f7add : jae 0xf7ae2 ; ret
0x00000000000f7b10 : jae 0xf7b15 ; ret
0x00000000000f7b3d : jae 0xf7b42 ; ret
0x00000000000f7b70 : jae 0xf7b75 ; ret
0x00000000000f7ba0 : jae 0xf7ba5 ; ret
0x00000000000f7bcd : jae 0xf7bd2 ; ret
0x00000000000f7bfd : jae 0xf7c02 ; ret
0x00000000000f7c2d : jae 0xf7c32 ; ret
0x00000000000f7d1d : jae 0xf7d22 ; ret
0x00000000000f7ded : jae 0xf7df2 ; ret
0x00000000000f7e1d : jae 0xf7e22 ; ret
0x00000000000f7e50 : jae 0xf7e55 ; ret
0x00000000000f7e7d : jae 0xf7e82 ; ret
0x00000000000f8310 : jae 0xf8315 ; ret
0x00000000000f833d : jae 0xf8342 ; ret
0x00000000000f836d : jae 0xf8372 ; ret
0x00000000000f83a0 : jae 0xf83a5 ; ret
0x00000000000f9190 : jae 0xf9123 ; fistp qword ptr [rax + 0x14] ; syscall
0x00000000000fe8fd : jae 0xfe948 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000feb9b : jae 0xfebac ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000febdb : jae 0xfebf4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fec1b : jae 0xfec3c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001038ed : jb 0x1038e4 ; xor eax, eax ; ret
0x0000000000112eff : jb 0x112f27 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000113ac8 : jb 0x113abb ; mov eax, 0xffffffff ; ret
0x000000000011e6d1 : jb 0x11e6f5 ; ret
0x000000000011e6cb : jb 0x11e6fd ; ja 0x11e6c0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000137e2a : jb 0x137e3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000137f7a : jb 0x137f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001380ca : jb 0x1380da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013821a : jb 0x13822a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013836a : jb 0x13837a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001384ba : jb 0x1384ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013860a : jb 0x13861a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013875a : jb 0x13876a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001388aa : jb 0x1388ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001389fa : jb 0x138a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138b4a : jb 0x138b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138c9a : jb 0x138caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138dea : jb 0x138dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138f3a : jb 0x138f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013908a : jb 0x13909a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013a7fa : jb 0x13a80a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013a94a : jb 0x13a95a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013aa9a : jb 0x13aaaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013abea : jb 0x13abfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ad3a : jb 0x13ad4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ae8a : jb 0x13ae9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013afda : jb 0x13afea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b12a : jb 0x13b13a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b27a : jb 0x13b28a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b3ca : jb 0x13b3da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b51a : jb 0x13b52a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b66a : jb 0x13b67a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b7ba : jb 0x13b7ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b90a : jb 0x13b91a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ba5a : jb 0x13ba6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000159bc6 : jb 0x159bd4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015a0b3 : jb 0x15a0be ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000015d65e : jb 0x15d66a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015dd15 : jb 0x15dd24 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000015dd20 : jb 0x15dd33 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015dd2d : jb 0x15dd35 ; mov byte ptr [rdi], cl ; ret
0x000000000015dfc6 : jb 0x15dfd4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015e60b : jb 0x15e616 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000186121 : jb 0x186122 ; jmp rcx
0x0000000000186131 : jb 0x186132 ; jmp rcx
0x0000000000186171 : jb 0x186172 ; jmp rcx
0x0000000000186170 : jb 0x186173 ; jmp rcx
0x0000000000186181 : jb 0x186182 ; jmp rcx
0x00000000001861b1 : jb 0x1861b2 ; jmp rcx
0x00000000001861b0 : jb 0x1861b3 ; jmp rcx
0x00000000001861c1 : jb 0x1861c2 ; jmp rcx
0x00000000001861f1 : jb 0x1861f2 ; jmp rcx
0x0000000000186201 : jb 0x186202 ; jmp rcx
0x0000000000186888 : jb 0x18680f ; sti ; jmp rdx
0x000000000018d73d : jb 0x18d72a ; call qword ptr [rax]
0x00000000001a41a9 : jb 0x1a41b2 ; add byte ptr [rbp + rdx - 0xa], dl ; call rdx
0x00000000001afd04 : jb 0x1afd13 ; add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; retf
0x0000000000001acd : jb 0x1b4c ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000001db1 : jb 0x1de4 ; retf
0x0000000000002c30 : jb 0x2bd0 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000003a22 : jb 0x3aa2 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004835d : jb 0x482ea ; retf 0x703d
0x000000000004835c : jb 0x482eb ; retf 0x703d
0x0000000000071255 : jb 0x7127b ; mov dword ptr [rcx], eax ; ret
0x00000000000713cb : jb 0x713fa ; mov byte ptr [rcx], dil ; ret
0x0000000000078137 : jb 0x78166 ; mov byte ptr [rcx], dil ; ret
0x0000000000078227 : jb 0x78256 ; mov byte ptr [rcx], dil ; ret
0x000000000007d851 : jb 0x7d837 ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000085b5b : jb 0x85b70 ; mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x0000000000085ba2 : jb 0x85bb3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000086609 : jb 0x8661a ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x00000000000881c5 : jb 0x881cf ; sub cl, byte ptr [rax + 0x39] ; bnd jne 0x881c9 ; ret
0x0000000000088269 : jb 0x8827a ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008aa68 : jb 0x8aa4a ; mov rdx, rax ; jmp 0x8aa01
0x000000000008c73c : jb 0x8c71e ; movzx r8d, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8c6d2
0x000000000009d2fa : jb 0x9d309 ; add byte ptr [rax], al ; ret
0x000000000009ff84 : jb 0x9ff8d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a0026 : jb 0xa0034 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0025 : jb 0xa0035 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0445 : jb 0xa044d ; mov byte ptr [rdi], cl ; ret
0x00000000000afd73 : jb 0xafd00 ; retf 0x703d
0x00000000000afd72 : jb 0xafd01 ; retf 0x703d
0x00000000000cf1a2 : jb 0xcf1c8 ; xor eax, eax ; ret
0x00000000000d1b8d : jb 0xd1b07 ; ret
0x00000000000ee51f : jb 0xee525 ; add byte ptr [rax], al ; syscall
0x00000000000f0bda : jb 0xf0c4a ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe93b : jb 0xfe94f ; mov eax, 1 ; ret
0x0000000000106d97 : jbe 0x106da4 ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000010f48c : jbe 0x10f493 ; ret
0x000000000012a328 : jbe 0x12a335 ; xor eax, eax ; ret
0x000000000012a701 : jbe 0x12a715 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000012f216 : jbe 0x12f1b8 ; sti ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x000000000012f6d6 : jbe 0x12f73a ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001556a7 : jbe 0x155718 ; add rax, rdi ; vzeroupper ; ret
0x000000000015a657 : jbe 0x15a6c8 ; add rax, rdi ; vzeroupper ; ret
0x00000000001763bc : jbe 0x17638f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000001763bb : jbe 0x176390 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000178ed9 : jbe 0x178ece ; call qword ptr [rax]
0x0000000000178ed9 : jbe 0x178ecf ; call qword ptr [rax]
0x0000000000178f1d : jbe 0x178f12 ; call qword ptr [rsi]
0x0000000000178f19 : jbe 0x178f12 ; dec ecx ; jbe 0x178f16 ; call qword ptr [rsi]
0x0000000000178f1d : jbe 0x178f13 ; call qword ptr [rsi]
0x0000000000178f19 : jbe 0x178f13 ; dec ecx ; jbe 0x178f17 ; call qword ptr [rsi]
0x0000000000178f25 : jbe 0x178f1a ; call rcx
0x0000000000178f25 : jbe 0x178f1b ; call rcx
0x0000000000178f29 : jbe 0x178f1e ; call rcx
0x0000000000178f29 : jbe 0x178f1f ; call rcx
0x000000000017a660 : jbe 0x17a5f9 ; cmc ; jmp qword ptr [rax]
0x00000000001860f0 : jbe 0x186166 ; std ; jmp rcx
0x0000000000186a81 : jbe 0x186a80 ; jmp rax
0x000000000018be89 : jbe 0x18be86 ; jmp qword ptr [rax]
0x000000000019458d : jbe 0x194595 ; add al, ah ; out dx, al ; jmp qword ptr [rdi]
0x0000000000194629 : jbe 0x194631 ; add byte ptr [rdi + rbp - 0x12], dl ; jmp qword ptr [rbx]
0x0000000000194651 : jbe 0x194659 ; add byte ptr [rdi + rbp - 0x12], bl ; jmp rdi
0x00000000001a45bd : jbe 0x1a45c6 ; add al, dl ; and esi, esi ; call qword ptr [rbx]
0x00000000001a45bc : jbe 0x1a45c7 ; add al, dl ; and esi, esi ; call qword ptr [rbx]
0x00000000001a45d1 : jbe 0x1a45da ; add ah, bl ; and esi, esi ; call qword ptr [rdi]
0x0000000000002cc3 : jbe 0x2c97 ; clc ; ret
0x000000000002cb6b : jbe 0x2cb4d ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000002ebe : jbe 0x2ed8 ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x00000000000038ff : jbe 0x38aa ; outsb dx, byte ptr [rsi] ; retf
0x00000000000452eb : jbe 0x45361 ; xor eax, eax ; ret
0x000000000004a490 : jbe 0x4a424 ; pop rbx ; pop rbp ; ret
0x0000000000056290 : jbe 0x56268 ; mov qword ptr [rdi], rsi ; ret
0x00000000000631c3 : jbe 0x63150 ; ret 0x348
0x0000000000063650 : jbe 0x63628 ; mov qword ptr [rdi], rsi ; ret
0x000000000006c4b0 : jbe 0x6c488 ; mov qword ptr [rdi], rsi ; ret
0x000000000007338f : jbe 0x733e2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088bc9 : jbe 0x88beb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090706 : jbe 0x90745 ; add rax, rdi ; ret
0x0000000000090716 : jbe 0x90747 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000090726 : jbe 0x90747 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000090736 : jbe 0x90747 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000096709 : jbe 0x96703 ; ret 0xf10
0x0000000000098329 : jbe 0x98323 ; ret 0xf10
0x00000000000b200c : jbe 0xb2063 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000b2106 : jbe 0xb2145 ; add rax, rdi ; ret
0x00000000000b2116 : jbe 0xb2147 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000b2126 : jbe 0xb2147 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000b2136 : jbe 0xb2147 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b429d : jbe 0xb41c3 ; jmp 0xb4277
0x00000000000c2c30 : jbe 0xc2c81 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c5611 : jbe 0xc5617 ; add byte ptr [rax], al ; syscall
0x00000000000ee5ee : jbe 0xee63d ; add esp, 0x38 ; ret
0x00000000000ee6be : jbe 0xee70d ; add esp, 0x38 ; ret
0x00000000001002b7 : je 0x1002e2 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001028b7 : je 0x1028c3 ; pop rbx ; ret
0x00000000001028a6 : je 0x1028e9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000010396d : je 0x10397b ; ret
0x0000000000103fe9 : je 0x103fee ; ret
0x000000000010404d : je 0x104052 ; ret
0x0000000000104088 : je 0x104096 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000104702 : je 0x104732 ; call rax
0x00000000001048a4 : je 0x1048be ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000010676c : je 0x10677e ; add rsp, 8 ; ret
0x0000000000106d72 : je 0x106d83 ; ret
0x0000000000107c03 : je 0x107c2e ; cmp byte ptr [rax + 0x29], cl ; ret
0x000000000010edda : je 0x10ede4 ; xor eax, eax ; ret
0x000000000010f4a6 : je 0x10f4b2 ; mov rdi, rbx ; call rax
0x000000000010fe23 : je 0x10fe50 ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x0000000000111399 : je 0x1113c5 ; xor byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000112d73 : je 0x112d6b ; pop rbx ; ret
0x0000000000117458 : je 0x117463 ; ret
0x00000000001179da : je 0x117a06 ; add rsp, 8 ; ret
0x0000000000117ce0 : je 0x117cf6 ; add rsp, 8 ; ret
0x0000000000117dc9 : je 0x117dd3 ; ret
0x0000000000117e1c : je 0x117e2d ; mov qword ptr [rdi], rax ; ret
0x0000000000117e98 : je 0x117ea3 ; ret
0x0000000000117f1a : je 0x117f23 ; ret
0x0000000000117fcb : je 0x117f37 ; ret
0x000000000011b7f2 : je 0x11b7fe ; mov rdi, rbx ; call rax
0x000000000011bf09 : je 0x11bf36 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000011c149 : je 0x11c155 ; mov rdi, rbp ; call rax
0x000000000011c458 : je 0x11c463 ; ret
0x000000000011d16e : je 0x11d17a ; mov rdi, rbx ; call rax
0x000000000011d516 : je 0x11d526 ; mov rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000011d703 : je 0x11d714 ; xor eax, eax ; ret
0x000000000011dd42 : je 0x11dd4e ; mov rdi, rbp ; call rdx
0x000000000011e1bb : je 0x11e2d3 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000121d22 : je 0x121d36 ; lea rdi, [rbx + 0xc8] ; call rax
0x0000000000122763 : je 0x12276f ; mov rdi, r12 ; call rax
0x000000000012294b : je 0x122959 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000123afc : je 0x123b08 ; mov rdi, rbx ; call rax
0x0000000000123bc0 : je 0x123bcc ; mov rdi, r12 ; call rax
0x000000000012477f : je 0x12478d ; lea rdi, [rbx + 0x68] ; call rax
0x0000000000124ea9 : je 0x124eb5 ; mov rdi, r12 ; call rax
0x000000000012520f : je 0x12521d ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000127011 : je 0x126fc8 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000126fbf : je 0x126fcb ; pop rbx ; ret
0x0000000000127063 : je 0x127076 ; add rsp, 8 ; ret
0x0000000000127d3b : je 0x127d49 ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001283d4 : je 0x1283e2 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000129080 : je 0x1290dc ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000129190 : je 0x1291ec ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001296c7 : je 0x1296f2 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001297a7 : je 0x1297d2 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012ae13 : je 0x12ae4b ; add rbx, 0x10 ; call 0x127088
0x000000000012ae12 : je 0x12ae4c ; add rbx, 0x10 ; call 0x127089
0x000000000012c4a8 : je 0x12c4b4 ; xor eax, eax ; ret
0x0000000000131031 : je 0x131046 ; add rsp, 8 ; ret
0x000000000014f883 : je 0x14f84d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000150555 : je 0x15055d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000150653 : je 0x15061d ; lea r10, [r10 + r9] ; jmp r10
0x000000000015153a : je 0x151542 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000151693 : je 0x15165d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000153263 : je 0x15322d ; lea r10, [r10 + r9] ; jmp r10
0x00000000001552fd : je 0x1552e0 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000155941 : je 0x1559a8 ; and ch, al ; std ; xlatb ; ret
0x0000000000155a2f : je 0x155a96 ; and ch, al ; std ; xlatb ; ret
0x0000000000155d85 : je 0x155d97 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000156103 : je 0x1560cd ; lea r10, [r10 + r9] ; jmp r10
0x0000000000157793 : je 0x15775d ; lea r10, [r10 + r9] ; jmp r10
0x000000000015c3e7 : je 0x15c3f1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016491d : je 0x164948 ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000165053 : je 0x165059 ; call rcx
0x0000000000165066 : je 0x16507d ; call 0x212cc
0x000000000016509d : je 0x1650c8 ; sbb al, ch ; and eax, edx ; jmp 0x1650a9
0x0000000000165153 : je 0x16515e ; call rax
0x0000000000173eec : je 0x173f1a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000174c48 : je 0x174c13 ; xor al, 0xd8 ; ret
0x0000000000175982 : je 0x17594a ; ret 0xacfc
0x0000000000186940 : je 0x1868c8 ; sti ; jmp rsp
0x0000000000186a3d : je 0x186a3c ; jmp rax
0x0000000000186e48 : je 0x186df5 ; sti ; jmp rsp
0x0000000000187d78 : je 0x187d7d ; in al, dx ; call rax
0x00000000001883e4 : je 0x1883b7 ; add byte ptr [rax], al ; shr dh, cl ; call rsp
0x00000000001884d8 : je 0x1884cf ; out dx, al ; jmp qword ptr [rax]
0x00000000001885f8 : je 0x188609 ; out dx, eax ; call qword ptr [rax]
0x0000000000188da8 : je 0x188da6 ; out dx, eax ; jmp rsp
0x00000000001895b4 : je 0x1895eb ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x0000000000189718 : je 0x18969d ; jmp rsp
0x0000000000189878 : je 0x189830 ; jmp qword ptr [rax]
0x0000000000189b70 : je 0x189bdb ; hlt ; call rsp
0x0000000000189f80 : je 0x189f4c ; cmc ; call qword ptr [rdi + rbp*2 - 0x3cabffff]
0x000000000018a015 : je 0x18a01e ; add ah, dl ; stc ; cmc ; jmp rax
0x000000000018a551 : je 0x18a54b ; call qword ptr [rax]
0x000000000018b240 : je 0x18b213 ; idiv edi ; hlt ; retf 1
0x000000000018bd5c : je 0x18bd72 ; add al, byte ptr [rax] ; push rsp ; push rbx ; stc ; call rsp
0x000000000018be50 : je 0x18bec4 ; stc ; call rsp
0x000000000018c648 : je 0x18c686 ; cli ; call rax
0x000000000018e5ec : je 0x18e60b ; add byte ptr [rax], al ; push rax ; imul ecx ; call qword ptr [rbx]
0x000000000018fa4d : je 0x18fa3b ; call rsp
0x0000000000195a31 : je 0x195a23 ; call qword ptr [rdi]
0x0000000000199dcc : je 0x199e4f ; int1 ; call qword ptr [rdx]
0x000000000019edec : je 0x19ee13 ; add dword ptr [rax], eax ; push rax ; popfq ; hlt ; jmp qword ptr [rcx]
0x000000000019eebc : je 0x19ee66 ; hlt ; jmp qword ptr [rcx]
0x000000000019ffac : je 0x19ff9d ; hlt ; jmp qword ptr [rcx]
0x00000000001a1bbc : je 0x1a1c20 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ae9 : je 0x1a8ae4 ; call qword ptr [rsi]
0x0000000000001cce : je 0x1cfa ; ret
0x0000000000021b22 : je 0x21b2e ; mov rdi, r12 ; call rax
0x0000000000024f77 : je 0x24fa6 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000251c0 : je 0x251ef ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000257d2 : je 0x25801 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025a4f : je 0x25a7e ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026060 : je 0x2608f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002639e : je 0x263cd ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000026c52 : je 0x26c81 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000278c7 : je 0x278f6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000287b0 : je 0x287df ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000028997 : je 0x289c5 ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x0000000000028b22 : je 0x28b51 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000295f8 : je 0x29627 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000297eb : je 0x29819 ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x0000000000029972 : je 0x299a1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002ab47 : je 0x2ab53 ; ret
0x000000000002ab42 : je 0x2ab58 ; cmp esi, 3 ; je 0x2ab58 ; ret
0x000000000002b39d : je 0x2b3a3 ; call rax
0x000000000002b538 : je 0x2b53e ; call rcx
0x000000000002c3bb : je 0x2c3c1 ; call rax
0x0000000000031eee : je 0x31efe ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000033848 : je 0x338fb ; add rdx, rcx ; jmp 0x33869
0x0000000000033847 : je 0x338fc ; add rdx, rcx ; jmp 0x3386a
0x0000000000033cc7 : je 0x33c4b ; ret
0x0000000000033cc6 : je 0x33c4c ; ret
0x0000000000034315 : je 0x34304 ; ret
0x0000000000035a7d : je 0x35a73 ; ret
0x0000000000035a77 : je 0x35a91 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; je 0x35a79 ; ret
0x00000000000365c7 : je 0x365f2 ; sbb byte ptr [rax + 1], cl ; ret
0x000000000003680f : je 0x3683c ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x00000000000381c0 : je 0x381d1 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x0000000000039004 : je 0x38fdc ; mov eax, 0xffffffff ; ret
0x0000000000041f8b : je 0x41fb7 ; or byte ptr [rbp + rcx*4 + 5], cl ; retf
0x0000000000042c95 : je 0x42ca3 ; pop rbx ; ret
0x00000000000443ea : je 0x44416 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000005931f : je 0x5935b ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000005931e : je 0x5935c ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000005d65d : je 0x5fef2 ; call 0x3a118
0x000000000006dc87 : je 0x6dc9b ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006dd57 : je 0x6dd71 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e459 : je 0x6e487 ; mov rax, rdx ; pop rbx ; ret
0x000000000006f55b : je 0x6f579 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071e46 : je 0x71e96 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000071e45 : je 0x71e97 ; add esp, 0x20 ; pop rbx ; ret
0x00000000000722ac : je 0x722b3 ; ret
0x00000000000722c6 : je 0x722d3 ; pop rbx ; ret
0x000000000007281a : je 0x72844 ; or al, 0xeb ; ret 0x5590
0x0000000000075331 : je 0x75366 ; mov eax, edx ; pop rbx ; ret
0x00000000000766d4 : je 0x766ff ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000077049 : je 0x77077 ; mov rax, rdx ; pop rbx ; ret
0x00000000000778dc : je 0x778ef ; mov eax, 0xffffffff ; ret
0x0000000000077cbc : je 0x77ccf ; mov eax, 0xffffffff ; ret
0x00000000000787bf : je 0x787cb ; pop rbx ; ret
0x0000000000078ab4 : je 0x78aeb ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000007b5a1 : je 0x7b5d0 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x78069
0x000000000007b845 : je 0x7b853 ; ret
0x000000000007d93f : je 0x7d987 ; mov qword ptr [rsi], rcx ; ret
0x000000000007e5c3 : je 0x7e5c9 ; call rax
0x0000000000082d06 : je 0x82d30 ; or al, ch ; ret 0xffe9
0x00000000000834a2 : je 0x834ce ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000083b50 : je 0x83add ; retf 0x4c89
0x0000000000083b4f : je 0x83ade ; retf 0x4c89
0x0000000000083f0d : je 0x83f40 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000084180 : je 0x8425e ; call rax
0x00000000000842aa : je 0x8437e ; call rax
0x0000000000084440 : je 0x84498 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000084fe8 : je 0x84ff3 ; ret
0x00000000000850e6 : je 0x85138 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085e58 : je 0x85e7e ; movsx eax, dl ; ret
0x0000000000085f52 : je 0x85f66 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086999 : je 0x869a5 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000008700a : je 0x86fcf ; ret
0x000000000008700a : je 0x86fd1 ; ret
0x0000000000088c34 : je 0x88c46 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089199 : je 0x891c4 ; cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000089307 : je 0x892f2 ; cmp dil, 0x3d ; jne 0x892d5 ; pop rbx ; ret
0x000000000008cdb7 : je 0x8cdb3 ; ret
0x000000000008cdee : je 0x8cde3 ; ret
0x000000000008cdea : je 0x8cde7 ; cmp ecx, esi ; je 0x8cde7 ; ret
0x000000000008ce3f : je 0x8ce23 ; ret
0x000000000009060c : je 0x90663 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000908ea : je 0x90941 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000090c6c : je 0x90c48 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000095c11 : je 0x95c29 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000096104 : je 0x9610f ; bsf eax, edx ; ret
0x00000000000961ad : je 0x961c6 ; bsf rax, rdx ; ret
0x000000000009637c : je 0x963a6 ; bsf rax, rdx ; ret
0x000000000009b679 : je 0x9b6ca ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009cd06 : je 0x9cd57 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009ebea : je 0x9ec3b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a00b3 : je 0xa00d4 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000a0a32 : je 0xa0a44 ; xor eax, eax ; ret
0x00000000000a0a2d : je 0xa0a51 ; cmp eax, 2 ; je 0xa0a49 ; xor eax, eax ; ret
0x00000000000a0a7d : je 0xa0a63 ; ret
0x00000000000a0aca : je 0xa0aab ; ret
0x00000000000a186f : je 0xa1861 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1eaa : je 0xa1e6f ; ret
0x00000000000a1eaa : je 0xa1e71 ; ret
0x00000000000a1ef2 : je 0xa1f03 ; ret
0x00000000000a29fe : je 0xa2a2d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000000a2c76 : je 0xa2ca5 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000a2f6e : je 0xa2f9d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000a30d8 : je 0xa30e5 ; test edx, edx ; jne 0xa30d7 ; ret
0x00000000000ab2da : je 0xab2e1 ; ret
0x00000000000ae3bb : je 0xae3d0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b25a6 : je 0xb2616 ; lea rax, [rdi - 0x10] ; ret
0x00000000000b2ab9 : je 0xb2ad9 ; mov cl, dl ; and cl, 0xf ; je 0xb2ae9 ; ret
0x00000000000b2ac0 : je 0xb2ae2 ; ret
0x00000000000b2ad5 : je 0xb2af6 ; add rax, 2 ; ret
0x00000000000b3322 : je 0xb3336 ; mov rax, rdx ; pop rbx ; ret
0x00000000000b36f2 : je 0xb3720 ; adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000000ba6ab : je 0xba6d6 ; adc byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000bed10 : je 0xbed2e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000bee47 : je 0xbee72 ; and byte ptr [rax - 0x7d], cl ; ret
0x000000000000c028 : je 0xc032 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000c0b6f : je 0xc0b75 ; add byte ptr [rax], al ; syscall
0x00000000000c4599 : je 0xc459f ; call rax
0x00000000000c469a : je 0xc46a3 ; call rdx
0x00000000000c4723 : je 0xc472c ; call rax
0x00000000000c5ab4 : je 0xc5b17 ; mov eax, 0x7f ; ret
0x00000000000c5bc5 : je 0xc5c08 ; mov eax, 0x20 ; ret
0x00000000000c5cf8 : je 0xc5ce2 ; mov eax, 1 ; ret
0x00000000000c5d26 : je 0xc5ce4 ; cmp rax, 0x414a53 ; jne 0xc5d03 ; jmp 0xc5ce4
0x00000000000ca94a : je 0xca954 ; add dword ptr [rax - 0x77], ecx ; retf 0x894c
0x00000000000cd154 : je 0xcd164 ; xor eax, eax ; ret
0x00000000000cd3c9 : je 0xcd3e3 ; ret
0x00000000000cd6b7 : je 0xcd679 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000cd6c4 : je 0xcd69e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ceb80 : je 0xceb8b ; ret
0x00000000000ceb7b : je 0xceb98 ; cmp eax, 3 ; je 0xceb90 ; ret
0x00000000000ceec8 : je 0xceed3 ; ret
0x00000000000cef53 : je 0xcef73 ; ret
0x00000000000cf0ca : je 0xcf0d4 ; xor eax, eax ; ret
0x00000000000cf0c6 : je 0xcf128 ; cmp al, 0x11 ; je 0xcf0d8 ; xor eax, eax ; ret
0x00000000000d1a02 : je 0xd1a70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1b68 : je 0xd1b03 ; ret
0x00000000000d1b9f : je 0xd1b3d ; xor eax, eax ; pop rbx ; ret
0x00000000000d1b9b : je 0xd1b41 ; test al, 1 ; je 0xd1b41 ; xor eax, eax ; pop rbx ; ret
0x00000000000d241a : je 0xd23ce ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfa57 : je 0xdfa60 ; or byte ptr [rcx], bh ; retf 0x850f
0x00000000000e74d5 : je 0xe74e7 ; mov eax, 0x1c ; syscall
0x00000000000e7661 : je 0xe76c9 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000e801d : je 0xe804f ; mov eax, 0x101 ; syscall
0x00000000000e8607 : je 0xe8637 ; mov eax, 0x48 ; syscall
0x00000000000e8857 : je 0xe886e ; mov ebx, dword ptr [rsp + 0x18] ; call 0xc52c8
0x00000000000e8e37 : je 0xe8e62 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000000eaf54 : je 0xeaf90 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000ec9d0 : je 0xec9ed ; neg eax ; pop rbx ; ret
0x00000000000ecc20 : je 0xecc3d ; neg eax ; pop rbx ; ret
0x00000000000ed096 : je 0xed0c9 ; mov eax, 0x118 ; syscall
0x00000000000ee74e : je 0xee755 ; ret
0x00000000000f02c3 : je 0xf02ff ; mov eax, 0x105 ; syscall
0x00000000000f0403 : je 0xf040e ; mov qword ptr [rax], rdx ; ret
0x00000000000f04da : je 0xf04cf ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f0e3d : je 0xf0e4e ; mov rdi, rbp ; call 0x6d117
0x00000000000f1938 : je 0xf1949 ; mov dword ptr [rip + 0x2c2a08], edi ; ret
0x00000000000f28c9 : je 0xf28a0 ; mov eax, 0xffffffff ; jmp 0xf28a5
0x00000000000f29ff : je 0xf2a0b ; ret
0x00000000000f416d : je 0xf41f6 ; call rax
0x00000000000f4304 : je 0xf43e6 ; call rax
0x00000000000f6d26 : je 0xf6d2b ; ret
0x00000000000f7406 : je 0xf743f ; mov eax, 0x149 ; syscall
0x00000000000f98d9 : je 0xf9957 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f9918 : je 0xf9958 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000fc76c : je 0xfc788 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ff715 : je 0xff724 ; xor eax, eax ; ret
0x00000000000ff8c7 : je 0xff8f2 ; adc byte ptr [rcx - 0x77], al ; ret
0x000000000010408c : jg 0x104098 ; jmp qword ptr [rax]
0x0000000000114014 : jg 0x11400b ; ret
0x0000000000122b92 : jg 0x122bdd ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x122ba9 ; ret
0x000000000012362d : jg 0x123680 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127f52 : jg 0x127f9d ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x127f69 ; ret
0x0000000000139a09 : jg 0x139a5c ; ret
0x0000000000139a50 : jg 0x139aa0 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000139a55 : jg 0x139aa8 ; retf
0x0000000000139a8f : jg 0x139ada ; ret
0x0000000000139acf : jg 0x139b1a ; retf
0x0000000000139c09 : jg 0x139c5c ; ret 0x894c
0x0000000000139c50 : jg 0x139ca0 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000139c55 : jg 0x139ca8 ; retf 0x894c
0x0000000000139c8f : jg 0x139cda ; ret 0x894c
0x0000000000139ccb : jg 0x139d16 ; retf 0x894c
0x000000000013c3d9 : jg 0x13c42c ; ret
0x000000000013c420 : jg 0x13c470 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000013c425 : jg 0x13c478 ; retf
0x000000000013c45f : jg 0x13c4aa ; ret
0x000000000013c49f : jg 0x13c4ea ; retf
0x000000000013c5d9 : jg 0x13c62c ; ret 0x894c
0x000000000013c620 : jg 0x13c670 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000013c625 : jg 0x13c678 ; retf 0x894c
0x000000000013c65f : jg 0x13c6aa ; ret 0x894c
0x000000000013c69b : jg 0x13c6e6 ; retf 0x894c
0x000000000013e9c8 : jg 0x13ea19 ; loope 0x13e9c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013ea3f : jg 0x13ea8a ; ret 0xff2
0x000000000013ea58 : jg 0x13eaa9 ; loop 0x13ea57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013eacf : jg 0x13eb1a ; ret
0x000000000013eae8 : jg 0x13eb39 ; jrcxz 0x13eae7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013eb78 : jg 0x13ebc9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013ebf8 : jg 0x13ec49 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013ec78 : jg 0x13ecc9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013ecf8 : jg 0x13ed49 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013ee55 : jg 0x13eea5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000013ee5f : jg 0x13eeaa ; retf 0xff2
0x000000000013eed5 : jg 0x13ef25 ; mov ebx, 0x46f00ff2 ; retf
0x000000000013eedf : jg 0x13ef2a ; retf
0x000000000013ef78 : jg 0x13efc9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013eff8 : jg 0x13f049 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013f088 : jg 0x13f0d9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013f108 : jg 0x13f159 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013f17c : jg 0x13f187 ; ret
0x000000000013f1d6 : jg 0x13f1e9 ; ret
0x000000000013f1d1 : jg 0x13f221 ; psllq mm1, qword ptr [rdi] ; jg 0x13f1ee ; ret
0x000000000013f246 : jg 0x13f259 ; ret
0x000000000013f2b6 : jg 0x13f2c9 ; ret
0x000000000013f2b1 : jg 0x13f301 ; or eax, 0xf7f0ff3 ; ret
0x000000000013f326 : jg 0x13f339 ; ret
0x000000000013f321 : jg 0x13f371 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f396 : jg 0x13f3a9 ; ret
0x000000000013f391 : jg 0x13f3e1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f406 : jg 0x13f419 ; ret
0x000000000013f401 : jg 0x13f451 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f476 : jg 0x13f489 ; ret
0x000000000013f471 : jg 0x13f4c1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f4e6 : jg 0x13f4f9 ; ret
0x000000000013f4e1 : jg 0x13f531 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f556 : jg 0x13f569 ; ret
0x000000000013f5c6 : jg 0x13f5d9 ; ret
0x000000000013f636 : jg 0x13f649 ; ret
0x000000000013f631 : jg 0x13f681 ; add eax, 0xf7f0ff3 ; ret
0x000000000013f6a6 : jg 0x13f6b9 ; ret
0x000000000013f6a1 : jg 0x13f6f1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f716 : jg 0x13f729 ; ret
0x000000000013f711 : jg 0x13f761 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f786 : jg 0x13f799 ; ret
0x000000000013f781 : jg 0x13f7d1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f7f6 : jg 0x13f809 ; ret
0x000000000013f7f1 : jg 0x13f841 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001414e8 : jg 0x141539 ; loope 0x1414e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014155f : jg 0x1415aa ; ret 0xff2
0x0000000000141578 : jg 0x1415c9 ; loop 0x141577 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001415ef : jg 0x14163a ; ret
0x0000000000141608 : jg 0x141659 ; jrcxz 0x141607 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141698 : jg 0x1416e9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141718 : jg 0x141769 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141798 : jg 0x1417e9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141818 : jg 0x141869 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141975 : jg 0x1419c5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000014197f : jg 0x1419ca ; retf 0xff2
0x00000000001419f5 : jg 0x141a45 ; mov ebx, 0x46f00ff2 ; retf
0x00000000001419ff : jg 0x141a4a ; retf
0x0000000000141a98 : jg 0x141ae9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000141b18 : jg 0x141b69 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000141ba8 : jg 0x141bf9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000141c28 : jg 0x141c79 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000141c9c : jg 0x141ca7 ; ret
0x0000000000141cf6 : jg 0x141d09 ; ret
0x0000000000141cf1 : jg 0x141d41 ; psllq mm1, qword ptr [rdi] ; jg 0x141d0e ; ret
0x0000000000141d66 : jg 0x141d79 ; ret
0x0000000000141dd6 : jg 0x141de9 ; ret
0x0000000000141dd1 : jg 0x141e21 ; or eax, 0xf7f0ff3 ; ret
0x0000000000141e46 : jg 0x141e59 ; ret
0x0000000000141e41 : jg 0x141e91 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000141eb6 : jg 0x141ec9 ; ret
0x0000000000141eb1 : jg 0x141f01 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000141f26 : jg 0x141f39 ; ret
0x0000000000141f21 : jg 0x141f71 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000141f96 : jg 0x141fa9 ; ret
0x0000000000141f91 : jg 0x141fe1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142006 : jg 0x142019 ; ret
0x0000000000142001 : jg 0x142051 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142076 : jg 0x142089 ; ret
0x00000000001420e6 : jg 0x1420f9 ; ret
0x0000000000142156 : jg 0x142169 ; ret
0x0000000000142151 : jg 0x1421a1 ; add eax, 0xf7f0ff3 ; ret
0x00000000001421c6 : jg 0x1421d9 ; ret
0x00000000001421c1 : jg 0x142211 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142236 : jg 0x142249 ; ret
0x0000000000142231 : jg 0x142281 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001422a6 : jg 0x1422b9 ; ret
0x00000000001422a1 : jg 0x1422f1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142316 : jg 0x142329 ; ret
0x0000000000142311 : jg 0x142361 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000159bda : jg 0x159beb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000159d6b : jg 0x159d95 ; vzeroupper ; ret
0x0000000000159e12 : jg 0x159e1c ; vzeroupper ; ret
0x0000000000159e9e : jg 0x159ec8 ; vzeroupper ; ret
0x0000000000159f2e : jg 0x159f38 ; vzeroupper ; ret
0x0000000000159fa4 : jg 0x159fb2 ; vzeroupper ; ret
0x000000000015a004 : jg 0x15a012 ; vzeroupper ; ret
0x000000000015a0c3 : jg 0x15a0d1 ; vzeroupper ; ret
0x000000000015d604 : jg 0x15d615 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000015d618 : jg 0x15d629 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000015da8a : jg 0x15da86 ; ret
0x000000000015dcf7 : jg 0x15dd07 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000015dced : jg 0x15dd0d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015dff2 : jg 0x15e003 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015e1d6 : jg 0x15e200 ; vzeroupper ; ret
0x000000000015e1d5 : jg 0x15e201 ; vzeroupper ; ret
0x000000000015e29c : jg 0x15e2a6 ; vzeroupper ; ret
0x000000000015e29b : jg 0x15e2a7 ; vzeroupper ; ret
0x000000000015e36f : jg 0x15e399 ; vzeroupper ; ret
0x000000000015e36e : jg 0x15e39a ; vzeroupper ; ret
0x000000000015e442 : jg 0x15e44c ; vzeroupper ; ret
0x000000000015e441 : jg 0x15e44d ; vzeroupper ; ret
0x000000000015e4c5 : jg 0x15e4d3 ; vzeroupper ; ret
0x000000000015e4c4 : jg 0x15e4d4 ; vzeroupper ; ret
0x000000000015e531 : jg 0x15e53f ; vzeroupper ; ret
0x000000000015e530 : jg 0x15e540 ; vzeroupper ; ret
0x000000000015e61b : jg 0x15e629 ; vzeroupper ; ret
0x000000000015e629 : jg 0x15e637 ; vzeroupper ; ret
0x00000000001606f5 : jg 0x160704 ; neg eax ; ret
0x0000000000160d74 : jg 0x160d7b ; add byte ptr [rax + 0x21], cl ; ret 0x50e9
0x0000000000164498 : jg 0x1644a2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000164b71 : jg 0x164b78 ; add byte ptr [rax - 0x77], cl ; ret 0x3775
0x0000000000177cc4 : jg 0x177ca5 ; out dx, al ; dec dword ptr [rbx] ; retf
0x00000000001796ac : jg 0x1796cf ; hlt ; call rdx
0x000000000017971c : jg 0x179743 ; hlt ; dec dword ptr [rbx + 0x19] ; hlt ; jmp qword ptr [rsi]
0x000000000017a584 : jg 0x17a51e ; cmc ; jmp qword ptr [rax]
0x000000000018a5f9 : jg 0x18a5f3 ; call rax
0x000000000018a5f8 : jg 0x18a5f4 ; call rax
0x000000000018a601 : jg 0x18a5fb ; jmp rsp
0x000000000018c7c1 : jg 0x18c7bf ; jmp rax
0x000000000018fd31 : jg 0x18fd1f ; call qword ptr [rdi]
0x0000000000199e5d : jg 0x199e52 ; jmp qword ptr [rbx]
0x00000000001ae4d4 : jg 0x1ae4de ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000002134d : jg 0x212d7 ; cmp dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000033e6b : jg 0x33ebd ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034313 : jg 0x3431a ; je 0x34306 ; ret
0x00000000000345a5 : jg 0x345f7 ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000035206 : jg 0x3520c ; add byte ptr [rax], al ; syscall
0x0000000000038722 : jg 0x3876b ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000003bb3 : jg 0x3c20 ; xchg eax, ebp ; retf 0x10bf
0x0000000000044fbb : jg 0x45029 ; xor eax, eax ; ret
0x0000000000046fc1 : jg 0x46fce ; ret 0xf089
0x00000000000570c2 : jg 0x570db ; test byte ptr [rip - 0x7c000003], dl ; ret
0x0000000000058432 : jg 0x5844b ; test byte ptr [rbp - 0x7c000017], ah ; ret
0x0000000000058548 : jg 0x58561 ; test byte ptr [rdi - 0x7c000018], cl ; ret
0x000000000007b842 : jg 0x7b882 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000000853ea : jg 0x85439 ; mov rsi, rbp ; call rax
0x000000000009b446 : jg 0x9b451 ; ret
0x000000000009b456 : jg 0x9b464 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009b46a : jg 0x9b479 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009b489 : jg 0x9b497 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009b499 : jg 0x9b4a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009b4a9 : jg 0x9b4ba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009b4ca : jg 0x9b4d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009b4ea : jg 0x9b4f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009b50a : jg 0x9b519 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009b52a : jg 0x9b53c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009b56d : jg 0x9b57f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009b58d : jg 0x9b59f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009b5ab : jg 0x9b5bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009b5cb : jg 0x9b5db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009b5eb : jg 0x9b5fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009b60b : jg 0x9b61b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009bb98 : jg 0x9bba3 ; jne 0x9c458 ; ret
0x000000000009bbbc : jg 0x9bbc8 ; jne 0x9c458 ; ret
0x000000000009bbdf : jg 0x9bbec ; jne 0x9c458 ; ret
0x000000000009bbfa : jg 0x9bc08 ; jne 0x9c458 ; ret
0x000000000009bc1d : jg 0x9bc2c ; jne 0x9c458 ; ret
0x000000000009bc42 : jg 0x9bc52 ; jne 0x9c458 ; ret
0x000000000009bc60 : jg 0x9bc71 ; jne 0x9c458 ; ret
0x000000000009bc7c : jg 0x9bc8e ; jne 0x9c458 ; ret
0x000000000009bc9f : jg 0x9bcb2 ; jne 0x9c458 ; ret
0x000000000009bcc4 : jg 0x9bcd8 ; jne 0x9c458 ; ret
0x000000000009bce2 : jg 0x9bcf7 ; jne 0x9c458 ; ret
0x000000000009bd02 : jg 0x9bd18 ; jne 0x9c458 ; ret
0x000000000009bd24 : jg 0x9bd3b ; jne 0x9c458 ; ret
0x000000000009bd44 : jg 0x9bd5c ; jne 0x9c458 ; ret
0x000000000009bd64 : jg 0x9bd7d ; jne 0x9c458 ; ret
0x000000000009bd7e : jg 0x9bd98 ; jne 0x9c458 ; ret
0x000000000009bda1 : jg 0x9bdbc ; jne 0x9c458 ; ret
0x000000000009bdc6 : jg 0x9bde2 ; jne 0x9c458 ; ret
0x000000000009bde4 : jg 0x9be01 ; jne 0x9c458 ; ret
0x000000000009be04 : jg 0x9be22 ; jne 0x9c458 ; ret
0x000000000009be27 : jg 0x9be46 ; jne 0x9c458 ; ret
0x000000000009be46 : jg 0x9be66 ; jne 0x9c458 ; ret
0x000000000009be66 : jg 0x9be87 ; jne 0x9c458 ; ret
0x000000000009be86 : jg 0x9bea8 ; jne 0x9c458 ; ret
0x000000000009bea9 : jg 0x9becc ; jne 0x9c458 ; ret
0x000000000009bede : jg 0x9bf02 ; jne 0x9c458 ; ret
0x000000000009bf0c : jg 0x9bf31 ; jne 0x9c458 ; ret
0x000000000009bf3c : jg 0x9bf62 ; jne 0x9c458 ; ret
0x000000000009bf68 : jg 0x9bf8f ; jne 0x9c458 ; ret
0x000000000009bf98 : jg 0x9bfc0 ; jne 0x9c458 ; ret
0x000000000009bfc8 : jg 0x9bff1 ; jne 0x9c458 ; ret
0x000000000009bff8 : jg 0x9c022 ; jne 0x9c458 ; ret
0x000000000009c116 : jg 0x9c121 ; ret
0x000000000009c129 : jg 0x9c137 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009c13a : jg 0x9c149 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009c159 : jg 0x9c167 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c169 : jg 0x9c177 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009c17c : jg 0x9c18d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009c19a : jg 0x9c1a9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009c1ba : jg 0x9c1c9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c1da : jg 0x9c1e9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009c1fd : jg 0x9c20f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009c23d : jg 0x9c24f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009c25d : jg 0x9c26f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009c27b : jg 0x9c28b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009c29b : jg 0x9c2ab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009c2bb : jg 0x9c2cb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009c2db : jg 0x9c2eb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009c412 : jg 0x9c41d ; ret
0x000000000009c546 : jg 0x9c57a ; ret
0x000000000009cab6 : jg 0x9cac5 ; lea rax, [rdi + 0xf] ; ret
0x000000000009cac6 : jg 0x9cad8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000009caf9 : jg 0x9cb0b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000009cb19 : jg 0x9cb2b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009cc3f : jg 0x9cc9f ; or eax, 0x1c478d48 ; ret
0x000000000009d24b : jg 0x9d256 ; jne 0x9dc78 ; ret
0x000000000009d270 : jg 0x9d27c ; jne 0x9dc78 ; ret
0x000000000009d293 : jg 0x9d2a0 ; jne 0x9dc78 ; ret
0x000000000009d2ae : jg 0x9d2bc ; jne 0x9dc78 ; ret
0x000000000009d2d1 : jg 0x9d2e0 ; jne 0x9dc78 ; ret
0x000000000009d2f6 : jg 0x9d306 ; jne 0x9dc78 ; ret
0x000000000009d314 : jg 0x9d325 ; jne 0x9dc78 ; ret
0x000000000009d330 : jg 0x9d342 ; jne 0x9dc78 ; ret
0x000000000009d353 : jg 0x9d366 ; jne 0x9dc78 ; ret
0x000000000009d378 : jg 0x9d38c ; jne 0x9dc78 ; ret
0x000000000009d3a6 : jg 0x9d3bb ; jne 0x9dc78 ; ret
0x000000000009d3c6 : jg 0x9d3dc ; jne 0x9dc78 ; ret
0x000000000009d3e8 : jg 0x9d3ff ; jne 0x9dc78 ; ret
0x000000000009d418 : jg 0x9d430 ; jne 0x9dc78 ; ret
0x000000000009d448 : jg 0x9d461 ; jne 0x9dc78 ; ret
0x000000000009d472 : jg 0x9d48c ; jne 0x9dc78 ; ret
0x000000000009d495 : jg 0x9d4b0 ; jne 0x9dc78 ; ret
0x000000000009d4ba : jg 0x9d4d6 ; jne 0x9dc78 ; ret
0x000000000009d4e8 : jg 0x9d505 ; jne 0x9dc78 ; ret
0x000000000009d518 : jg 0x9d536 ; jne 0x9dc78 ; ret
0x000000000009d54b : jg 0x9d56a ; jne 0x9dc78 ; ret
0x000000000009d57a : jg 0x9d59a ; jne 0x9dc78 ; ret
0x000000000009d5aa : jg 0x9d5cb ; jne 0x9dc78 ; ret
0x000000000009d5da : jg 0x9d5fc ; jne 0x9dc78 ; ret
0x000000000009d60d : jg 0x9d630 ; jne 0x9dc78 ; ret
0x000000000009d642 : jg 0x9d666 ; jne 0x9dc78 ; ret
0x000000000009d670 : jg 0x9d695 ; jne 0x9dc78 ; ret
0x000000000009d6a0 : jg 0x9d6c6 ; jne 0x9dc78 ; ret
0x000000000009d6cc : jg 0x9d6f3 ; jne 0x9dc78 ; ret
0x000000000009d6fc : jg 0x9d724 ; jne 0x9dc78 ; ret
0x000000000009d72c : jg 0x9d755 ; jne 0x9dc78 ; ret
0x000000000009d75c : jg 0x9d786 ; jne 0x9dc78 ; ret
0x000000000009d906 : jg 0x9d915 ; lea rax, [rdi + 0x10] ; ret
0x000000000009d919 : jg 0x9d92b ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x000000000009d959 : jg 0x9d96b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009d979 : jg 0x9d98b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x000000000009da9f : jg 0x9daff ; or eax, 0x1d478d48 ; ret
0x000000000009dc32 : jg 0x9dc3d ; ret
0x000000000009dd66 : jg 0x9dd9e ; lea rax, [rdi + 0x40] ; ret
0x000000000009dd65 : jg 0x9dded ; xor byte ptr [rax - 0x73], cl ; ret
0x000000000009e6f6 : jg 0x9e701 ; ret
0x000000000009e706 : jg 0x9e714 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009e71a : jg 0x9e729 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009e739 : jg 0x9e747 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e749 : jg 0x9e757 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009e759 : jg 0x9e76a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009e77a : jg 0x9e789 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009e79a : jg 0x9e7a9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009e7ba : jg 0x9e7c9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009e7da : jg 0x9e7ec ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009e81d : jg 0x9e82f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009e83d : jg 0x9e84f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009e85b : jg 0x9e86b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009e87b : jg 0x9e88b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009e89b : jg 0x9e8ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009e8bb : jg 0x9e8cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f1c6 : jg 0x9f1d1 ; ret
0x000000000009f1d6 : jg 0x9f1e4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009f1ea : jg 0x9f1f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009f209 : jg 0x9f217 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009f219 : jg 0x9f227 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009f229 : jg 0x9f23a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009f24a : jg 0x9f259 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009f26a : jg 0x9f279 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009f28a : jg 0x9f299 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009f2aa : jg 0x9f2bc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009f2ed : jg 0x9f2ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009f30d : jg 0x9f31f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009f32b : jg 0x9f33b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009f34b : jg 0x9f35b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009f36b : jg 0x9f37b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009f38b : jg 0x9f39b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f536 : jg 0x9f546 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009f70f : jg 0x9f770 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009f72f : jg 0x9f790 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009f7a6 : jg 0x9f7df ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009f7a5 : jg 0x9f82e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a01f4 : jg 0xa022c ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000a02c2 : jg 0xa02fa ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000a034c : jg 0xa0357 ; ret
0x00000000000a03ac : jg 0xa03b7 ; ret
0x00000000000a0423 : jg 0xa046f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000a0490 : jg 0xa04cd ; ret 0x2b77
0x00000000000a05ab : jg 0xa0578 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a0607 : jg 0xa0605 ; int1 ; mov eax, eax ; ret
0x00000000000a1805 : jg 0xa180d ; neg eax ; ret
0x00000000000c5ab7 : jg 0xc5abd ; add byte ptr [rax], al ; ret
0x00000000000c5c6b : jg 0xc5c75 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000d1a3f : jg 0xd1aae ; add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000000e2450 : jg 0xe2464 ; ret 0x8589
0x00000000000f243d : jg 0xf2495 ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x0000000000112096 : jge 0x11203f ; mov eax, 3 ; syscall
0x000000000012294f : jge 0x122963 ; call rax
0x0000000000127d3f : jge 0x127d53 ; call rax
0x00000000001283d8 : jge 0x1283ec ; call rax
0x000000000012de49 : jge 0x12de4f ; add al, 0x75 ; retf 0x8949
0x0000000000173f4a : jge 0x173f2b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000175894 : jge 0x175905 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000189c09 : jge 0x189c01 ; jmp rsp
0x000000000018b0b1 : jge 0x18b0ae ; dec eax ; ret 1
0x000000000018b0b9 : jge 0x18b0b6 ; push rax ; ret 1
0x000000000018b0b8 : jge 0x18b0b7 ; push rax ; ret 1
0x000000000018fc55 : jge 0x18fc43 ; call rsi
0x000000000018fc54 : jge 0x18fc44 ; call rsi
0x000000000018fc99 : jge 0x18fc87 ; jmp qword ptr [rax]
0x0000000000194cc9 : jge 0x194cd1 ; add byte ptr [rdx + rax*2], dh ; out dx, al ; jmp rdx
0x0000000000194d19 : jge 0x194d21 ; add ah, dl ; out dx, al ; call qword ptr [rax]
0x000000000000296e : jge 0x296d ; enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x0000000000036a36 : jge 0x36a3f ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000475c3 : jge 0x475ca ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000af00f : jge 0xaf019 ; lea r9, [rsp + 0x30] ; call r12
0x00000000000af3c3 : jge 0xaf3ca ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000beff3 : jge 0xbefd6 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ebead : jge 0xebedf ; mov r12d, dword ptr fs:[rbx] ; call 0xe8918
0x00000000000ebed1 : jge 0xebeff ; call 0xe8914
0x00000000000f31b7 : jge 0xf3172 ; mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x00000000000f416f : jge 0xf4175 ; add byte ptr [rax], al ; call rax
0x00000000000f7591 : jge 0xf7597 ; add byte ptr [rax], al ; syscall
0x0000000000102100 : jl 0x1020cb ; dec dword ptr [rax - 0x77] ; ret
0x0000000000104819 : jl 0x104847 ; or byte ptr [rax + 0xe6], bh ; syscall
0x00000000001050de : jl 0x1050e9 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001050de : jl 0x1050eb ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000108af5 : jl 0x108b1f ; cmp al, ch ; retf
0x0000000000114d3c : jl 0x114d6a ; or byte ptr [rcx - 0x2617dbfc], cl ; ret 0xfff0
0x00000000001176f5 : jl 0x11771f ; and al, ch ; retf
0x0000000000118e86 : jl 0x118eb4 ; adc byte ptr [rax + 0x81], bh ; syscall
0x000000000011d43d : jl 0x11d46b ; adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rcx
0x000000000011d4fd : jl 0x11d52b ; adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rcx
0x00000000001231e5 : jl 0x123210 ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000125edd : jl 0x125f07 ; or al, 0xe8 ; retf
0x000000000013001a : jl 0x130045 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000132855 : jl 0x132883 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000015d4ab : jl 0x15d4b4 ; neg eax ; ret
0x000000000015d584 : jl 0x15d5d3 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000015d5c0 : jl 0x15d60f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000015d7be : jl 0x15d80d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000015d925 : jl 0x15d974 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000015da87 : jl 0x15dad6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000015dcac : jl 0x15dcfb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015dccd : jl 0x15dd1c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015dce0 : jl 0x15dd2f ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015ddb5 : jl 0x15de04 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015de0d : jl 0x15de5c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000015deaa : jl 0x15def9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000015e0c0 : jl 0x15e0df ; cld ; vzeroupper ; ret
0x0000000000175a92 : jl 0x175af1 ; leave ; retf
0x0000000000179450 : jl 0x179439 ; jmp qword ptr [rsi]
0x0000000000186850 : jl 0x1867d6 ; sti ; jmp qword ptr [rdx]
0x0000000000188144 : jl 0x188106 ; add byte ptr [rax], al ; jp 0x188140 ; jmp rsp
0x00000000001884a4 : jl 0x18847c ; add byte ptr [rax], al ; mov ah, 0xec ; out dx, al ; jmp rax
0x000000000018a265 : jl 0x18a26e ; add ah, al ; sbb esi, esi ; jmp rsp
0x000000000018b22c : jl 0x18b201 ; add dword ptr [rax], eax ; adc al, 0xcc ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x000000000018c74c : jl 0x18c79c ; add al, byte ptr [rax] ; and al, 0x78 ; cli ; call rsp
0x0000000000194c2d : jl 0x194c35 ; add byte ptr [rax], dh ; out dx, al ; call rdi
0x00000000001951d4 : jl 0x195236 ; out dx, al ; call qword ptr [rdx]
0x0000000000196414 : jl 0x1963df ; stc ; call qword ptr [rcx]
0x00000000001974f4 : jl 0x1974f6 ; out dx, al ; call qword ptr [rcx]
0x00000000001981f4 : jl 0x1981af ; add byte ptr [rax], al ; cmp dl, bl ; sti ; call rsp
0x000000000019b6d9 : jl 0x19b6ce ; call rbx
0x000000000019b6d9 : jl 0x19b6cf ; call rbx
0x000000000019b6d8 : jl 0x19b6d0 ; call rbx
0x000000000019d7f4 : jl 0x19d805 ; add dword ptr [rax], eax ; mov dh, ch ; jmp qword ptr [rdi]
0x000000000019e644 : jl 0x19e5ce ; hlt ; call qword ptr [rax]
0x00000000001a0994 : jl 0x1a09ac ; cmc ; jmp qword ptr [rcx]
0x00000000001a0ea4 : jl 0x1a0ed1 ; cmc ; call qword ptr [rdx]
0x00000000001a13f4 : jl 0x1a1441 ; add dword ptr [rax], eax ; test al, 0x39 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1a54 : jl 0x1a1ab6 ; cmc ; jmp qword ptr [rcx]
0x00000000001a3630 : jl 0x1a363b ; add byte ptr [rax], al ; mov esp, 0x38000166 ; retf
0x00000000001a4094 : jl 0x1a40ab ; idiv bh ; retf 0
0x00000000001a5f04 : jl 0x1a5ead ; idiv bh ; retf 0
0x000000000000265b : jl 0x25ed ; loop 0x2639 ; ret 0x943d
0x0000000000026065 : jl 0x2608f ; call r15
0x0000000000026220 : jl 0x2624e ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x00000000000263a3 : jl 0x263cd ; call r15
0x000000000002682f : jl 0x2685d ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002740f : jl 0x2743d ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000278cc : jl 0x278f6 ; call r15
0x00000000000287b5 : jl 0x287df ; call r14
0x0000000000028b27 : jl 0x28b51 ; call r15
0x00000000000295fd : jl 0x29627 ; call r14
0x0000000000029977 : jl 0x299a1 ; call r15
0x0000000000031e4e : jl 0x31e5f ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000003293d : jl 0x32968 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000363f0 : jl 0x3641d ; or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x0000000000036796 : jl 0x367c1 ; and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000043640 : jl 0x4366c ; or byte ptr [rcx - 0x75], cl ; ret 0x8940
0x0000000000045743 : jl 0x4576e ; xor byte ptr [rax - 0x77], cl ; retf
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00000000000564a1 : jl 0x564cc ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000878d7 : jl 0x87906 ; or byte ptr [rbp + rcx*4 + 0x14], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0x14d
0x000000000008866b : jl 0x88696 ; adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000895d6 : jl 0x895d8 ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x0000000000090bda : jl 0x90c45 ; add rax, rdi ; ret
0x0000000000090bea : jl 0x90c47 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000090c0a : jl 0x90c47 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000090c2a : jl 0x90c47 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000c0764 : jl 0xc0792 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000c55b1 : jl 0xc55b7 ; add byte ptr [rax], al ; syscall
0x00000000000c6c92 : jl 0xc6c77 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000ca5d5 : jl 0xca571 ; add byte ptr [rax + 0x39], cl ; retf 0x8841
0x00000000000ceabe : jl 0xceaf8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cecf6 : jl 0xced0c ; or al, ch ; retf 0xf525
0x00000000000cf0b0 : jl 0xcf0a3 ; ret
0x00000000000cf730 : jl 0xcf75f ; or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000d2510 : jl 0xd252f ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000d43f6 : jl 0xd4421 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000d5071 : jl 0xd509c ; or byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000000d6486 : jl 0xd64b0 ; jo 0xd648f ; ret 0xc083
0x00000000000d8d8f : jl 0xd8dba ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000dcbb2 : jl 0xdcb97 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000e7f8a : jl 0xe7fb8 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x00000000000e86d6 : jl 0xe86e0 ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000000000ec73c : jl 0xec76a ; or byte ptr [rax + 0x10f], bh ; syscall
0x00000000000f2ffa : jl 0xf3028 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000f6d24 : jl 0xf6d3d ; je 0xf6d2d ; ret
0x00000000001232ec : jle 0x12333c ; add esp, 0x20 ; pop rbx ; ret
0x0000000000126cd8 : jle 0x126cf0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000155191 : jle 0x1551cd ; movsxd rax, ecx ; ret
0x0000000000173f42 : jle 0x173edb ; xlatb ; retf 0xa1eb
0x0000000000175b05 : jle 0x175b40 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000001875e5 : jle 0x1875eb ; add ah, dl ; retf 0xffea
0x00000000001875e4 : jle 0x1875ec ; add ah, dl ; retf 0xffea
0x000000000018760d : jle 0x187615 ; add byte ptr [rbp + rcx*8 - 0x16], dl ; call rax
0x000000000018a2ad : jle 0x18a2b6 ; add ah, dl ; and esi, esi ; jmp qword ptr [rax]
0x000000000018ca7d : jle 0x18ca86 ; add byte ptr [rax + rbx*8 - 6], ah ; jmp rax
0x000000000018ca7c : jle 0x18ca87 ; add byte ptr [rax + rbx*8 - 6], ah ; jmp rax
0x0000000000199db9 : jle 0x199dae ; call qword ptr [rax]
0x0000000000199dcd : jle 0x199dc2 ; call qword ptr [rdx]
0x00000000001a4df1 : jle 0x1a4dfa ; add byte ptr [rax + rdi - 0xa], cl ; jmp rax
0x000000000002ab92 : jle 0x2aba5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003274 : jle 0x3272 ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000000360d : jle 0x3641 ; retf 0x8792
0x00000000000722a9 : jle 0x722e1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000000888e2 : jle 0x888ea ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000009614e : jle 0x96158 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000c5b01 : jle 0xc5b07 ; add byte ptr [rax], al ; ret
0x00000000000d2133 : jle 0xd2172 ; movsxd rcx, edx ; jmp 0xd214c
0x00000000000e91ad : jle 0xe91a7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f75c1 : jle 0xf75c7 ; add byte ptr [rax], al ; syscall
0x00000000000f9696 : jle 0xf967f ; sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000100b0a : jmp 0x100ad0
0x000000000010b30b : jmp 0x10b2d1
0x000000000010bb2b : jmp 0x10baf1
0x00000000001108ab : jmp 0x110871
0x0000000000112d2a : jmp 0x112cf8
0x00000000001130ef : jmp 0x1130bd
0x00000000001131cf : jmp 0x113195
0x000000000011ce15 : jmp 0x11cde3
0x000000000012182b : jmp 0x1217f1
0x0000000000121b7b : jmp 0x121b41
0x0000000000121d4f : jmp 0x121d15
0x0000000000123d2a : jmp 0x123cf0
0x00000000001247a7 : jmp 0x124775
0x0000000000125237 : jmp 0x125205
0x000000000012f972 : jmp 0x12f938
0x000000000012f9f2 : jmp 0x12f9b8
0x000000000015b4f8 : jmp 0x15b4c6
0x000000000015b576 : jmp 0x15b544
0x000000000015ba08 : jmp 0x15b9d6
0x000000000015ba86 : jmp 0x15ba54
0x000000000015cb28 : jmp 0x15caf6
0x000000000015cba6 : jmp 0x15cb74
0x000000000015d038 : jmp 0x15d006
0x000000000015d0b6 : jmp 0x15d084
0x0000000000164eb3 : jmp 0x164e79
0x0000000000175b09 : jmp 0x175ad7
0x0000000000176056 : jmp 0x176024
0x0000000000179b80 : jmp 0x23178fc3
0x0000000000002ca7 : jmp 0x2c75
0x000000000003093b : jmp 0x30901
0x0000000000036bd1 : jmp 0x36b97
0x00000000000039df : jmp 0x39a5
0x00000000000039e3 : jmp 0x39b1
0x00000000000581cf : jmp 0x58195
0x0000000000058d91 : jmp 0x58d5f
0x00000000000602ec : jmp 0x5c5b2
0x00000000000600e8 : jmp 0x5cbca
0x00000000000603af : jmp 0x5ce8c
0x0000000000061324 : jmp 0x5d61a
0x0000000000062b76 : jmp 0x5f60f
0x00000000000631a1 : jmp 0x5fbb1
0x0000000000062967 : jmp 0x62935
0x0000000000062ad4 : jmp 0x62aa2
0x0000000000062da7 : jmp 0x62d6d
0x0000000000067961 : jmp 0x63c42
0x0000000000068a3e : jmp 0x64ca0
0x0000000000068ae2 : jmp 0x64d23
0x0000000000068b29 : jmp 0x64d4f
0x0000000000068b19 : jmp 0x64d83
0x0000000000068bc7 : jmp 0x64ea6
0x0000000000068a2a : jmp 0x654b8
0x000000000006a038 : jmp 0x662fb
0x0000000000068f2d : jmp 0x68efb
0x0000000000070839 : jmp 0x70807
0x000000000007a0a2 : jmp 0x7a068
0x00000000000819d1 : jmp 0x81997
0x0000000000083f85 : jmp 0x83f53
0x0000000000084368 : jmp 0x84336
0x0000000000085703 : jmp 0x856c9
0x0000000000086a19 : jmp 0x869df
0x0000000000095a54 : jmp 0x95a1a
0x0000000000095c6c : jmp 0x95c32
0x000000000009fb1e : jmp 0x9fae4
0x000000000009fbef : jmp 0x9fbb5
0x000000000009fc5e : jmp 0x9fc24
0x00000000000a3003 : jmp 0xa2fd1
0x00000000000b42a3 : jmp 0xb4271
0x00000000000bc283 : jmp 0xbc251
0x00000000000c44e3 : jmp 0xc44a9
0x00000000000c6595 : jmp 0xc655b
0x00000000000cfe50 : jmp 0xcfe16
0x00000000000f01c9 : jmp 0xf0197
0x00000000000f28d0 : jmp 0xf289e
0x00000000000fc1db : jmp 0xfc1a1
0x00000000000fdabb : jmp 0xfda81
0x0000000000123970 : jmp 0xffffffff895ffc00
0x00000000000a1713 : jmp 0xffffffffc30a171c
0x0000000000045c71 : jmp 0xffffffffc313e5c6
0x0000000000058436 : jmp 0xffffffffc389843e
0x0000000000106be6 : jmp 0xffffffffc408f537
0x000000000008ab59 : jmp 0xffffffffcb41f466
0x000000000008abb9 : jmp 0xffffffffcb41f4c6
0x000000000008ac50 : jmp 0xffffffffcb41f55d
0x00000000000b2d57 : jmp 0xffffffffcb947561
0x000000000011ff04 : jmp 0xffffffffcb9b401d
0x000000000007c1d2 : jmp 0xffffffffd107c1d9
0x00000000000bfeb3 : jmp 0xfffffffff63dc143
0x00000000000ef7b3 : jmp qword ptr [r8]
0x0000000000186807 : jmp qword ptr [rax + 0x10fffb82]
0x000000000018678f : jmp qword ptr [rax + 0x10fffb8b]
0x0000000000178843 : jmp qword ptr [rax + 0x10fffbe6]
0x000000000017a577 : jmp qword ptr [rax + 0x20fff595]
0x0000000000186fd3 : jmp qword ptr [rax + 0x20fffd0a]
0x0000000000186fdb : jmp qword ptr [rax + 0x20fffd0d]
0x0000000000186fe3 : jmp qword ptr [rax + 0x20fffd10]
0x0000000000186feb : jmp qword ptr [rax + 0x20fffd13]
0x0000000000186ff3 : jmp qword ptr [rax + 0x20fffd16]
0x0000000000186ffb : jmp qword ptr [rax + 0x20fffd19]
0x0000000000187003 : jmp qword ptr [rax + 0x20fffd1c]
0x000000000018609f : jmp qword ptr [rax + 0x20fffd5f]
0x00000000001860a7 : jmp qword ptr [rax + 0x20fffd60]
0x00000000001860af : jmp qword ptr [rax + 0x20fffd61]
0x0000000000186a4f : jmp qword ptr [rax - 0x1f00049c]
0x0000000000178c13 : jmp qword ptr [rax - 0x2f000db7]
0x0000000000178be3 : jmp qword ptr [rax - 0x2f000db9]
0x0000000000178a53 : jmp qword ptr [rax - 0x2f000dcb]
0x0000000000177d2f : jmp qword ptr [rax - 0x2f0010c4]
0x0000000000036c51 : jmp qword ptr [rax]
0x000000000017941b : jmp qword ptr [rbp + 0x16fff3e2]
0x00000000000025db : jmp qword ptr [rbx]
0x00000000001860df : jmp qword ptr [rcx - 0x1e00028f]
0x000000000017945f : jmp qword ptr [rcx]
0x0000000000176744 : jmp qword ptr [rdi]
0x0000000000186857 : jmp qword ptr [rdx + 0x12fffb88]
0x00000000001797a7 : jmp qword ptr [rdx]
0x0000000000165f03 : jmp qword ptr [rsi - 0x3d]
0x0000000000179453 : jmp qword ptr [rsi]
0x0000000000001b66 : jmp r10
0x00000000001377fd : jmp r9
0x0000000000021d21 : jmp rax
0x000000000017999b : jmp rbx
0x000000000008cf14 : jmp rcx
0x0000000000032a4e : jmp rdi
0x0000000000001b67 : jmp rdx
0x000000000002bf27 : jmp rsi
0x0000000000002b1d : jmp rsp
0x00000000001021bc : jne 0x1021f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010240b : jne 0x1023fb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000103967 : jne 0x103978 ; cmp qword ptr [rdi], 0 ; je 0x103981 ; ret
0x0000000000103f91 : jne 0x103f89 ; pop rdx ; pop r10 ; ret
0x0000000000103f82 : jne 0x103f92 ; mov eax, 0xca ; syscall
0x00000000001042a4 : jne 0x104283 ; ret
0x00000000001047c2 : jne 0x1047f7 ; mov eax, 0xe6 ; syscall
0x00000000001049bd : jne 0x1049a8 ; lea rdi, [rip - 0x176] ; call rax
0x00000000001049fc : jne 0x104a1b ; leave ; ret
0x0000000000105436 : jne 0x105425 ; mov rax, rdi ; ret
0x0000000000105575 : jne 0x105511 ; mov rax, rdi ; ret
0x00000000001056d8 : jne 0x1056eb ; add rsp, 0xd8 ; ret
0x0000000000105873 : jne 0x105886 ; add rsp, 0xd8 ; ret
0x0000000000106be5 : jne 0x106bd5 ; mov rax, rdi ; ret
0x0000000000106cd1 : jne 0x106c73 ; mov rax, rdi ; ret
0x0000000000106e53 : jne 0x106e66 ; add rsp, 0xd8 ; ret
0x00000000001079f4 : jne 0x107a0b ; add rsp, 0x28 ; ret
0x0000000000107a54 : jne 0x107a6b ; add rsp, 0x28 ; ret
0x0000000000107b0d : jne 0x107b20 ; add rsp, 0xd8 ; ret
0x0000000000107d5d : jne 0x107d70 ; add rsp, 0xd8 ; ret
0x000000000010810d : jne 0x108120 ; add rsp, 0xd8 ; ret
0x000000000010cb8e : jne 0x10cb04 ; pop rbx ; ret
0x000000000010e73d : jne 0x10e79e ; add rsp, 0x38 ; ret
0x000000000010e824 : jne 0x10e831 ; add rsp, 0x28 ; ret
0x000000000010f599 : jne 0x10f590 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000111fc7 : jne 0x111fef ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001130db : jne 0x113105 ; add rsp, 0x18 ; ret
0x00000000001131b9 : jne 0x1131d7 ; add rsp, 0x18 ; ret
0x00000000001134df : jne 0x1134c4 ; ret
0x0000000000113d1c : jne 0x113d30 ; add rsp, 0x18 ; ret
0x0000000000113df9 : jne 0x113e45 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000113e95 : jne 0x113ecf ; add rsp, 0x38 ; ret
0x00000000001150f2 : jne 0x115103 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000011527b : jne 0x115288 ; add rsp, 0x18 ; ret
0x00000000001156e0 : jne 0x1156ed ; add rsp, 0x18 ; ret
0x0000000000115a4d : jne 0x115a2f ; ret
0x00000000001177ec : jne 0x1177f3 ; ret
0x000000000011782c : jne 0x117820 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117d6f : jne 0x117d63 ; pop rbx ; ret
0x0000000000117e81 : jne 0x117ea1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118d9a : jne 0x118da3 ; ret
0x0000000000119ad3 : jne 0x119ae0 ; add rsp, 0x18 ; ret
0x000000000011b807 : jne 0x11b816 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000011c59f : jne 0x11c5ae ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011cb6b : jne 0x11cba5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011cc02 : jne 0x11cc13 ; mov rdi, rbx ; call 0x129627
0x000000000011cc12 : jne 0x11cc2b ; mov rdi, rbx ; call 0x129627
0x000000000011d7bd : jne 0x11d808 ; mov dword ptr [rsi], 0 ; ret
0x000000000011e10d : jne 0x11e0a7 ; xor eax, eax ; pop rbx ; ret
0x000000000011e558 : jne 0x11e59a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011e866 : jne 0x11e8d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e9a0 : jne 0x11e9af ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011ec55 : jne 0x11ec84 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011ecf5 : jne 0x11ed25 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011eeea : jne 0x11eeaa ; xor eax, eax ; pop rbx ; ret
0x000000000011ef4a : jne 0x11ef0d ; mov eax, 1 ; pop rbx ; ret
0x000000000011f4d2 : jne 0x11f45f ; retf 0x4c89
0x000000000011f55b : jne 0x11f568 ; add rsp, 0x58 ; ret
0x000000000011ff44 : jne 0x11ff33 ; ret
0x0000000000122b98 : jne 0x122ba3 ; ret
0x0000000000123257 : jne 0x123268 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001232eb : jne 0x123372 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000125e93 : jne 0x125ea2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000126263 : jne 0x12627d ; add rsp, 0x18 ; ret
0x00000000001262e4 : jne 0x1262f7 ; add rsp, 0x88 ; ret
0x000000000012636b : jne 0x126386 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001263fb : jne 0x126416 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000126497 : jne 0x1264d9 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000126557 : jne 0x126599 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000012666f : jne 0x126687 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001266e3 : jne 0x1266fd ; add rsp, 0x18 ; ret
0x000000000012675c : jne 0x126776 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000126d81 : jne 0x126daf ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001274b1 : jne 0x1274be ; add rsp, 0x78 ; ret
0x0000000000127517 : jne 0x127524 ; add rsp, 0x78 ; ret
0x0000000000127587 : jne 0x127594 ; add rsp, 0x78 ; ret
0x00000000001275f7 : jne 0x127604 ; add rsp, 0x78 ; ret
0x0000000000127658 : jne 0x127665 ; add rsp, 0x78 ; ret
0x00000000001276bc : jne 0x1276c9 ; add rsp, 0x78 ; ret
0x0000000000127727 : jne 0x127734 ; add rsp, 0x78 ; ret
0x00000000001277a1 : jne 0x1277ae ; add rsp, 0x78 ; ret
0x0000000000127b69 : jne 0x127b7c ; add rsp, 0x98 ; ret
0x0000000000127c4f : jne 0x127c83 ; add rsp, 0x28 ; ret
0x0000000000127cb7 : jne 0x127ca3 ; pop rbx ; ret
0x0000000000127f58 : jne 0x127f63 ; ret
0x00000000001294c1 : jne 0x1294ce ; add rsp, 0x48 ; ret
0x0000000000129518 : jne 0x12955a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129598 : jne 0x1295d9 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129603 : jne 0x129616 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000129658 : jne 0x12969c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012970b : jne 0x12977b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001297eb : jne 0x12985b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001298b8 : jne 0x1298fb ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129938 : jne 0x12997a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001299c6 : jne 0x1299d5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129a26 : jne 0x129a35 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129a78 : jne 0x129ac0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129af8 : jne 0x129b3a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a128 : jne 0x12a16c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a1a8 : jne 0x12a1ec ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a228 : jne 0x12a26c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a2a8 : jne 0x12a2ec ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a8c9 : jne 0x12a8dc ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000012a92a : jne 0x12a93d ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000012a995 : jne 0x12a9a4 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012aa08 : jne 0x12aa17 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012aa72 : jne 0x12aa87 ; mov eax, 1 ; ret
0x000000000012aab2 : jne 0x12aac7 ; mov eax, 1 ; ret
0x000000000012ad94 : jne 0x12ad3c ; call 0x127084
0x000000000012f4ce : jne 0x12f502 ; add rsp, 0x18 ; ret
0x000000000012f65c : jne 0x12f66d ; xor eax, eax ; pop rbx ; ret
0x000000000012f945 : jne 0x12f97b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f9c5 : jne 0x12f9fb ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001306fe : jne 0x130746 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000131354 : jne 0x13136f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000131651 : jne 0x131664 ; add rsp, 0xa8 ; ret
0x0000000000131693 : jne 0x1316a6 ; add rsp, 0xa8 ; ret
0x0000000000131e81 : jne 0x131eb9 ; add rsp, 0x38 ; ret
0x0000000000131ef5 : jne 0x131f21 ; mov rax, qword ptr [rip + 0x2875aa] ; call qword ptr [rax]
0x0000000000131f0e : jne 0x131f42 ; add rsp, 0x38 ; ret
0x0000000000131f96 : jne 0x131fda ; add rsp, 0x38 ; ret
0x00000000001320f6 : jne 0x132122 ; add rsp, 0x48 ; ret
0x0000000000132659 : jne 0x13266c ; add rsp, 0x28 ; ret
0x00000000001329bf : jne 0x1329da ; add rsp, 0x38 ; ret
0x0000000000134bc5 : jne 0x134bd4 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134c4b : jne 0x134c5a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134d8f : jne 0x134dad ; mov eax, 0x27 ; syscall
0x000000000013cdc1 : jne 0x13cdef ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000013cdc0 : jne 0x13cdf0 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000149c31 : jne 0x14a1e6 ; ret
0x0000000000155693 : jne 0x1556b7 ; xor eax, eax ; vzeroupper ; ret
0x0000000000155d3a : jne 0x155d45 ; vzeroupper ; ret
0x0000000000155e34 : jne 0x155d46 ; ret
0x0000000000155f7f : jne 0x155d49 ; vzeroupper ; ret
0x0000000000159993 : jne 0x1599c8 ; mov rax, r8 ; vzeroupper ; ret
0x000000000015a094 : jne 0x15a07c ; vzeroupper ; ret
0x000000000015a1fa : jne 0x15a205 ; vzeroupper ; ret
0x000000000015a282 : jne 0x15a206 ; ret
0x000000000015a3cf : jne 0x15a209 ; vzeroupper ; ret
0x000000000015a226 : jne 0x15a20e ; ret
0x000000000015a643 : jne 0x15a667 ; xor eax, eax ; vzeroupper ; ret
0x000000000015c62d : jne 0x15c657 ; xor eax, eax ; ret
0x000000000015bc21 : jne 0x15c65b ; xor eax, eax ; ret
0x000000000015bc49 : jne 0x15c667 ; xor eax, eax ; ret
0x000000000015d46d : jne 0x15d497 ; xor eax, eax ; ret
0x000000000015d251 : jne 0x15d49b ; xor eax, eax ; ret
0x000000000015d4a1 : jne 0x15d4aa ; xor eax, eax ; ret
0x000000000015d277 : jne 0x15d4ae ; xor eax, eax ; ret
0x000000000015e5e7 : jne 0x15e5c7 ; vzeroupper ; ret
0x000000000015e755 : jne 0x15e6e6 ; lea rax, [rdi + 3] ; ret
0x000000000015e727 : jne 0x15e6e6 ; lea rax, [rdi + 7] ; ret
0x000000000015e726 : jne 0x15e6e7 ; lea rax, [rdi + 7] ; ret
0x000000000015feb4 : jne 0x1600c8 ; xor eax, eax ; ret
0x00000000001600b9 : jne 0x1600d9 ; xor eax, eax ; ret
0x000000000015ff61 : jne 0x1600dd ; xor eax, eax ; ret
0x00000000001600d1 : jne 0x1600de ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001606e6 : jne 0x1606f4 ; xor eax, eax ; ret
0x00000000001605bd : jne 0x1606f6 ; ret
0x0000000000164ba7 : jne 0x164c1a ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000164e93 : jne 0x164e80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001651dd : jne 0x1651c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001652bd : jne 0x1652ae ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165310 : jne 0x1652f0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016544c : jne 0x16543b ; pop rbx ; ret
0x00000000001654f5 : jne 0x1654db ; pop rbx ; ret
0x00000000001655b7 : jne 0x1655b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000165789 : jne 0x16577b ; pop rbx ; ret
0x00000000001659fb : jne 0x165a03 ; ret
0x0000000000165d69 : jne 0x165d68 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000165da6 : jne 0x165db3 ; pop rbx ; ret
0x0000000000173fb7 : jne 0x173f81 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000175f4b : jne 0x175f72 ; retf 0x32dd
0x0000000000178ef9 : jne 0x178eee ; call rax
0x0000000000178ef9 : jne 0x178eef ; call rax
0x0000000000178f01 : jne 0x178ef6 ; call rdi
0x0000000000178f01 : jne 0x178ef7 ; call rdi
0x0000000000178f31 : jne 0x178f26 ; call rcx
0x0000000000178f31 : jne 0x178f27 ; call rcx
0x0000000000185fd0 : jne 0x186031 ; std ; jmp qword ptr [rcx]
0x0000000000188a71 : jne 0x188a64 ; jmp qword ptr [rax]
0x000000000018cdb1 : jne 0x18cdb2 ; call rax
0x00000000001a2439 : jne 0x1a2432 ; call qword ptr [rdx]
0x00000000001a2438 : jne 0x1a2433 ; call qword ptr [rdx]
0x00000000001a4521 : jne 0x1a452a ; add byte ptr [rcx - 0xa], cl ; call qword ptr [rbx]
0x00000000001a4549 : jne 0x1a4552 ; add byte ptr [rcx - 0xa], ah ; call qword ptr [rsi]
0x00000000001ac979 : jne 0x1ac982 ; retf
0x00000000001acc0d : jne 0x1acc16 ; retf
0x000000000002322f : jne 0x231c3 ; call rsi
0x000000000002e413 : jne 0x2e426 ; add rsp, 0x18 ; ret
0x000000000002e453 : jne 0x2e466 ; add rsp, 0x18 ; ret
0x000000000003229c : jne 0x322b0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000032fe8 : jne 0x32fc6 ; ret
0x0000000000033dc2 : jne 0x33dd8 ; fadd st(0) ; add rsp, 8 ; ret
0x00000000000341a8 : jne 0x341b6 ; addsd xmm0, xmm0 ; ret
0x00000000000344c4 : jne 0x344d6 ; addss xmm0, xmm0 ; ret
0x0000000000034b6f : jne 0x34b7c ; add rsp, 0x18 ; ret
0x0000000000034d96 : jne 0x34da9 ; add rsp, 0x148 ; ret
0x0000000000035107 : jne 0x3515c ; add rsp, 0x148 ; ret
0x00000000000353bc : jne 0x353d6 ; add rsp, 0x118 ; ret
0x000000000003544f : jne 0x35469 ; add rsp, 0x118 ; ret
0x00000000000356df : jne 0x356ee ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000035a0f : jne 0x35a22 ; add rsp, 0x148 ; ret
0x0000000000035ae4 : jne 0x35ad4 ; xor eax, eax ; ret
0x0000000000035b34 : jne 0x35b24 ; xor eax, eax ; ret
0x0000000000035f63 : jne 0x35f76 ; add rsp, 0xa8 ; ret
0x000000000000360b : jne 0x3674 ; jle 0x3643 ; retf 0x8792
0x000000000003802c : jne 0x37ff8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000380cb : jne 0x380d3 ; pop rbx ; ret
0x000000000003819f : jne 0x381ac ; add rsp, 0x28 ; ret
0x000000000003828f : jne 0x3829c ; add rsp, 0x28 ; ret
0x00000000000385ab : jne 0x385b8 ; add rsp, 0x18 ; ret
0x0000000000038835 : jne 0x3884b ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000038ba : jne 0x3898 ; ret 0x975
0x0000000000038a89 : jne 0x38a96 ; add rsp, 0x18 ; ret
0x0000000000038ad6 : jne 0x38ae3 ; add rsp, 0x18 ; ret
0x0000000000038b28 : jne 0x38b35 ; add rsp, 0x18 ; ret
0x0000000000038b75 : jne 0x38b82 ; add rsp, 0x18 ; ret
0x0000000000038bc8 : jne 0x38bd5 ; add rsp, 0x18 ; ret
0x0000000000038c15 : jne 0x38c22 ; add rsp, 0x18 ; ret
0x0000000000038f1b : jne 0x38f37 ; mov eax, 0x13e ; syscall
0x000000000003a18b : jne 0x3a1ca ; xor eax, eax ; ret
0x000000000003cb1b : jne 0x3cb5a ; xor eax, eax ; ret
0x000000000003f4fb : jne 0x3f53a ; xor eax, eax ; ret
0x0000000000041df2 : jne 0x41e35 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000041ea2 : jne 0x41f1a ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000041f80 : jne 0x41fe4 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000042b7e : jne 0x42b5e ; ret
0x0000000000042d7e : jne 0x42d91 ; add rsp, 0xd8 ; ret
0x00000000000442d8 : jne 0x442eb ; add rsp, 0xd8 ; ret
0x000000000004448d : jne 0x44483 ; pop rbx ; ret
0x00000000000444b8 : jne 0x444b3 ; pop rbx ; ret
0x000000000004534f : jne 0x45344 ; xor eax, eax ; ret
0x0000000000045375 : jne 0x4535f ; mov eax, 1 ; ret
0x000000000004542f : jne 0x45424 ; xor eax, eax ; ret
0x0000000000045455 : jne 0x4543f ; mov eax, 1 ; ret
0x00000000000456f7 : jne 0x456e5 ; mov rax, rdx ; ret
0x0000000000045d5f : jne 0x45d55 ; mov rax, rdx ; ret
0x0000000000046c01 : jne 0x46c41 ; leave ; ret
0x00000000000473db : jne 0x4741a ; xor eax, eax ; ret
0x000000000004a44c : jne 0x4a444 ; pop rbx ; pop rbp ; ret
0x000000000004a6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x000000000004a775 : jne 0x4a755 ; mov rax, rsi ; ret
0x000000000004a7df : jne 0x4a7fb ; add rsp, 0x38 ; ret
0x0000000000055e62 : jne 0x55e75 ; add rsp, 0xd8 ; ret
0x0000000000055f34 : jne 0x55f47 ; add rsp, 0xd8 ; ret
0x0000000000055fed : jne 0x56000 ; add rsp, 0xd8 ; ret
0x00000000000560a2 : jne 0x560b5 ; add rsp, 0xd8 ; ret
0x0000000000056162 : jne 0x56175 ; add rsp, 0xd8 ; ret
0x0000000000056222 : jne 0x56235 ; add rsp, 0xd8 ; ret
0x000000000006a222 : jne 0x6a235 ; add rsp, 0xd8 ; ret
0x000000000006a2f6 : jne 0x6a309 ; add rsp, 0xd8 ; ret
0x000000000006a3b2 : jne 0x6a3c5 ; add rsp, 0xd8 ; ret
0x000000000006a791 : jne 0x6a7ac ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006a7e1 : jne 0x6a7f6 ; mov rax, rbx ; pop rbx ; ret
0x000000000006a8e6 : jne 0x6a8f9 ; add rsp, 0xa8 ; ret
0x000000000006ae73 : jne 0x6ae8d ; add rsp, 0x18 ; ret
0x000000000006b752 : jne 0x6b765 ; add rsp, 0xd8 ; ret
0x0000000000071492 : jne 0x714a5 ; add rsp, 0xd8 ; ret
0x000000000007154d : jne 0x71560 ; add rsp, 0xd8 ; ret
0x0000000000071634 : jne 0x71647 ; add rsp, 0xd8 ; ret
0x0000000000071706 : jne 0x71719 ; add rsp, 0xd8 ; ret
0x00000000000717c2 : jne 0x717d5 ; add rsp, 0xd8 ; ret
0x0000000000071ab2 : jne 0x71ac5 ; add rsp, 0xd8 ; ret
0x0000000000071d81 : jne 0x71d73 ; ret
0x00000000000728dc : jne 0x728d5 ; lea eax, [rdx + rdi] ; ret
0x0000000000076e42 : jne 0x76e55 ; add rsp, 0xd8 ; ret
0x00000000000780d4 : jne 0x780ed ; add rsp, 0x48 ; ret
0x000000000007837e : jne 0x78399 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a6a3 : jne 0x7a6b4 ; xor eax, eax ; ret
0x000000000007b1a8 : jne 0x7b1f9 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000007b221 : jne 0x7b213 ; ret
0x000000000007bdde : jne 0x7bdd3 ; ret
0x000000000007bff9 : jne 0x7c023 ; pop rbx ; ret
0x000000000007c121 : jne 0x7c0e7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c16c : jne 0x7c165 ; lea eax, [rdx + rdi] ; ret
0x000000000007cb36 : jne 0x7cb2b ; ret
0x000000000007de1b : jne 0x7de22 ; ret
0x000000000007e3e4 : jne 0x7e3d8 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000007e5df : jne 0x7e629 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000823dc : jne 0x823a3 ; ret
0x00000000000839c7 : jne 0x839b6 ; sub rax, 0x10 ; ret
0x0000000000085277 : jne 0x8528b ; mov rax, qword ptr [rip + 0x32ecc8] ; call qword ptr [rax]
0x0000000000085332 : jne 0x85346 ; mov rax, qword ptr [rip + 0x32ec0d] ; call qword ptr [rax]
0x00000000000853f7 : jne 0x8540b ; mov rax, qword ptr [rip + 0x32eb48] ; call qword ptr [rax]
0x00000000000854df : jne 0x854f5 ; mov rdi, r13 ; call rax
0x00000000000854de : jne 0x854f6 ; mov rdi, r13 ; call rax
0x00000000000854dd : jne 0x854f7 ; mov rdi, r13 ; call rax
0x0000000000085521 : jne 0x85514 ; xor eax, eax ; ret
0x0000000000085583 : jne 0x8555d ; mov rdi, rsi ; call rax
0x0000000000085582 : jne 0x8555e ; mov rdi, rsi ; call rax
0x0000000000085581 : jne 0x8555f ; mov rdi, rsi ; call rax
0x0000000000085599 : jne 0x855bb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000855db : jne 0x855d3 ; ret
0x0000000000088098 : jne 0x88083 ; ret
0x00000000000881cb : jne 0x881c3 ; ret
0x00000000000889ef : jne 0x889e1 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008930d : jne 0x892cf ; pop rbx ; ret
0x00000000000892e5 : jne 0x892dd ; xor eax, eax ; pop rbx ; ret
0x000000000008a6f3 : jne 0x8a6e4 ; or byte ptr [rdi], sil ; ret
0x000000000008cb42 : jne 0x8cb35 ; mov qword ptr [rdx], rcx ; ret
0x000000000008cc0b : jne 0x8cc00 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008cce6 : jne 0x8ccdb ; ret
0x000000000008cd2a : jne 0x8cd1b ; ret
0x000000000008cd84 : jne 0x8cd63 ; ret
0x000000000008ce3a : jne 0x8ce28 ; cmp r8d, ecx ; je 0x8ce28 ; ret
0x000000000008ce79 : jne 0x8ce6d ; xor eax, eax ; ret
0x000000000008cedb : jne 0x8cebb ; ret
0x000000000008ebbc : jne 0x8eba6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000906b7 : jne 0x90714 ; xor eax, eax ; ret
0x0000000000090687 : jne 0x90738 ; xor eax, eax ; ret
0x0000000000090b5a : jne 0x90bd4 ; xor eax, eax ; ret
0x0000000000090b89 : jne 0x90c04 ; xor eax, eax ; ret
0x0000000000096273 : jne 0x9627e ; xor rax, rax ; ret
0x000000000009bb9a : jne 0x9c456 ; ret
0x000000000009d24d : jne 0x9dc76 ; ret
0x000000000009f951 : jne 0x9f942 ; ret
0x000000000009fa01 : jne 0x9f9f2 ; ret
0x000000000009fb71 : jne 0x9fb66 ; lea rax, [rcx - 1] ; ret
0x000000000009fcc1 : jne 0x9fcb6 ; sub rax, 1 ; ret
0x00000000000a042d : jne 0xa0416 ; ret
0x00000000000a0b17 : jne 0xa0b0b ; ret
0x00000000000a1786 : jne 0xa1802 ; ret
0x00000000000a16af : jne 0xa1806 ; ret
0x00000000000a168e : jne 0xa1808 ; xor eax, eax ; ret
0x00000000000a19d3 : jne 0xa199b ; ret
0x00000000000a1aa7 : jne 0xa1a94 ; xor eax, eax ; ret
0x00000000000a1aa2 : jne 0xa1ab9 ; cmp rax, rdx ; jne 0xa1a99 ; xor eax, eax ; ret
0x00000000000a1b5e : jne 0xa1b53 ; ret
0x00000000000a1b88 : jne 0xa1b73 ; ret
0x00000000000a1c73 : jne 0xa1c43 ; ret
0x00000000000a1c5d : jne 0xa1c53 ; ret
0x00000000000a1d30 : jne 0xa1d27 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a1f43 : jne 0xa1f3b ; ret
0x00000000000a1fdf : jne 0xa1fd6 ; sub rax, 4 ; ret
0x00000000000a1ffe : jne 0xa2010 ; ret
0x00000000000a30dc : jne 0xa30d3 ; ret
0x00000000000a3a9b : jne 0xa3ada ; xor eax, eax ; ret
0x00000000000a620b : jne 0xa624a ; xor eax, eax ; ret
0x00000000000a88eb : jne 0xa892a ; xor eax, eax ; ret
0x00000000000ab063 : jne 0xab0db ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ab141 : jne 0xab1a5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ab213 : jne 0xab256 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ae05f : jne 0xae08b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000aee22 : jne 0xaee35 ; add rsp, 0xd8 ; ret
0x00000000000af1db : jne 0xaf21a ; xor eax, eax ; ret
0x00000000000b1e17 : jne 0xb1de7 ; ret
0x00000000000b20b7 : jne 0xb2114 ; xor eax, eax ; ret
0x00000000000b2087 : jne 0xb2138 ; xor eax, eax ; ret
0x00000000000b2174 : jne 0xb216b ; ret
0x00000000000b258b : jne 0xb25e6 ; lea rax, [rdi - 0x10] ; ret
0x00000000000b2623 : jne 0xb262e ; xor rax, rax ; ret
0x00000000000b28bb : jne 0xb2876 ; mov rax, rdx ; ret
0x00000000000b30d8 : jne 0xb30e5 ; add rsp, 0x28 ; ret
0x00000000000b3149 : jne 0xb3158 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000b6371 : jne 0xb639b ; add rsp, 0x28 ; ret
0x00000000000b64a2 : jne 0xb64be ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000b6be9 : jne 0xb6c01 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bc134 : jne 0xbc141 ; add rsp, 0x18 ; ret
0x00000000000bece4 : jne 0xbecf1 ; add rsp, 0x18 ; ret
0x00000000000bf197 : jne 0xbf186 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0b6c : jne 0xc0b9f ; mov eax, 0x74 ; syscall
0x00000000000c0b8b : jne 0xc0be1 ; add rsp, 0x38 ; ret
0x00000000000c2c2f : jne 0xc2caf ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c4391 : jne 0xc43ad ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c43bb : jne 0xc43d7 ; mov eax, 0x22 ; syscall
0x00000000000c446b : jne 0xc4487 ; mov eax, 0x23 ; syscall
0x00000000000c4d22 : jne 0xc4d5b ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c4ea2 : jne 0xc4edb ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c536c : jne 0xc539f ; mov eax, 0x69 ; syscall
0x00000000000c538b : jne 0xc53e1 ; add rsp, 0x38 ; ret
0x00000000000c53fc : jne 0xc542f ; mov eax, 0x6a ; syscall
0x00000000000c541b : jne 0xc5471 ; add rsp, 0x38 ; ret
0x00000000000c568f : jne 0xc5695 ; add byte ptr [rax], al ; syscall
0x00000000000c568c : jne 0xc56bf ; mov eax, 0x75 ; syscall
0x00000000000c56ab : jne 0xc5709 ; add rsp, 0x38 ; ret
0x00000000000c572c : jne 0xc575f ; mov eax, 0x77 ; syscall
0x00000000000c574b : jne 0xc57a9 ; add rsp, 0x38 ; ret
0x00000000000c5ae9 : jne 0xc5ab9 ; ret
0x00000000000c5bf4 : jne 0xc5bce ; mov eax, 0x40 ; ret
0x00000000000c5d2e : jne 0xc5cfb ; jmp 0xc5cdc
0x00000000000c5cd9 : jne 0xc5cfe ; xor eax, eax ; ret
0x00000000000c67c9 : jne 0xc67ab ; xor eax, eax ; ret
0x00000000000c69bb : jne 0xc69f4 ; add rsp, 0xa8 ; ret
0x00000000000c8cae : jne 0xc8c97 ; mov eax, 1 ; ret
0x00000000000c8d46 : jne 0xc8d20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8e48 : jne 0xc8e21 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd163 : jne 0xcd15e ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000cd683 : jne 0xcd679 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000cd71a : jne 0xcd706 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce940 : jne 0xce90d ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000cec3a : jne 0xcec43 ; pop rbx ; ret
0x00000000000cf694 : jne 0xcf6e3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d1467 : jne 0xd146c ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d1bb5 : jne 0xd1b07 ; ret
0x00000000000d1bb4 : jne 0xd1b08 ; ret
0x00000000000d1b62 : jne 0xd1b79 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1b09 ; ret
0x00000000000dc6e9 : jne 0xdc6cb ; xor eax, eax ; ret
0x00000000000dc8db : jne 0xdc914 ; add rsp, 0xa8 ; ret
0x00000000000df7af : jne 0xdf7a5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000df7cf : jne 0xdf7e8 ; mov eax, 2 ; ret
0x00000000000e1a4b : jne 0xe1a38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e3751 : jne 0xe3733 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e669e : jne 0xe66bf ; mov eax, 0x11 ; syscall
0x00000000000e674e : jne 0xe676f ; mov eax, 0x12 ; syscall
0x00000000000e6b8a : jne 0xe6b99 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000e7136 : jne 0xe713e ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000e7527 : jne 0xe753f ; add rsp, 0x28 ; ret
0x00000000000e7690 : jne 0xe76e2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e774c : jne 0xe7759 ; add rsp, 0x18 ; ret
0x00000000000e779e : jne 0xe77ab ; add rsp, 0x18 ; ret
0x00000000000e7b9b : jne 0xe7be7 ; mov eax, 0x10c ; syscall
0x00000000000e7e17 : jne 0xe7e61 ; add rsp, 0x58 ; ret
0x00000000000e7efa : jne 0xe7f68 ; mov eax, 0x101 ; syscall
0x00000000000e803c : jne 0xe8089 ; add rsp, 0x58 ; ret
0x00000000000e80cb : jne 0xe80e4 ; xor eax, eax ; syscall
0x00000000000e819b : jne 0xe81b7 ; mov eax, 1 ; syscall
0x00000000000e8626 : jne 0xe8671 ; add rsp, 0x18 ; ret
0x00000000000e86b5 : jne 0xe86f7 ; mov eax, 0x48 ; syscall
0x00000000000e87a7 : jne 0xe87b4 ; add rsp, 0x58 ; ret
0x00000000000e8893 : jne 0xe8903 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e891b : jne 0xe8937 ; mov eax, 3 ; syscall
0x00000000000e8abb : jne 0xe8ad7 ; mov eax, 0x55 ; syscall
0x00000000000e9414 : jne 0xe93be ; mov rdi, rbx ; call 0x85ea7
0x00000000000e9c5f : jne 0xe9c72 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000000ec60b : jne 0xec627 ; mov eax, 7 ; syscall
0x00000000000ed1ae : jne 0xed1cf ; mov eax, 0x115 ; syscall
0x00000000000ed25e : jne 0xed27f ; mov eax, 0x11d ; syscall
0x00000000000ed733 : jne 0xed759 ; add rsp, 0x38 ; ret
0x00000000000ed799 : jne 0xed7ad ; add rsp, 0x18 ; ret
0x00000000000edacf : jne 0xedb26 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000edfab : jne 0xedfc7 ; mov eax, 0x13 ; syscall
0x00000000000ee04b : jne 0xee067 ; mov eax, 0x14 ; syscall
0x00000000000ee47c : jne 0xee4af ; mov eax, 0x71 ; syscall
0x00000000000ee49b : jne 0xee4f9 ; add rsp, 0x38 ; ret
0x00000000000ee51c : jne 0xee54f ; mov eax, 0x72 ; syscall
0x00000000000ee53b : jne 0xee599 ; add rsp, 0x38 ; ret
0x00000000000ee5cf : jne 0xee5d7 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000ee5ed : jne 0xee66b ; add rsp, 0x38 ; ret
0x00000000000ee6bd : jne 0xee73b ; add rsp, 0x38 ; ret
0x00000000000ee7b6 : jne 0xee7cd ; add rsp, 0x28 ; ret
0x00000000000ee98e : jne 0xee9af ; mov eax, 0x17 ; syscall
0x00000000000eebab : jne 0xeebc7 ; mov eax, 0x4a ; syscall
0x00000000000eec5b : jne 0xeec77 ; mov eax, 0x4b ; syscall
0x00000000000eef85 : jne 0xeefcd ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ef1a7 : jne 0xef1b4 ; add rsp, 0x58 ; ret
0x00000000000ef212 : jne 0xef21f ; add rsp, 0x28 ; ret
0x00000000000ef300 : jne 0xef343 ; add rsp, 0x68 ; ret
0x00000000000ef466 : jne 0xef477 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ef596 : jne 0xef578 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ef5f7 : jne 0xef5d8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ef74d : jne 0xef723 ; ret
0x00000000000f01a4 : jne 0xf01eb ; add rsp, 0x38 ; ret
0x00000000000f0273 : jne 0xf02bb ; add rsp, 0x38 ; ret
0x00000000000f176a : jne 0xf177d ; add rsp, 0xd8 ; ret
0x00000000000f181d : jne 0xf1830 ; add rsp, 0xd8 ; ret
0x00000000000f1c4b : jne 0xf1c67 ; mov eax, 0x1a ; syscall
0x00000000000f29c5 : jne 0xf29d2 ; add rsp, 0x18 ; ret
0x00000000000f2e73 : jne 0xf2e83 ; ret
0x00000000000f3bc7 : jne 0xf3bda ; add rsp, 0xd8 ; ret
0x00000000000f3c87 : jne 0xf3c9a ; add rsp, 0xd8 ; ret
0x00000000000f3e6b : jne 0xf3e7e ; add rsp, 0x418 ; ret
0x00000000000f4415 : jne 0xf444f ; mov eax, 0x88 ; syscall
0x00000000000f465a : jne 0xf4658 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4b02 : jne 0xf4b32 ; mov rdx, rax ; jmp 0xf4b1a
0x00000000000f4f27 : jne 0xf4f1e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f6ccb : jne 0xf6cf1 ; add rsp, 0x68 ; ret
0x00000000000f700e : jne 0xf702f ; mov eax, 0xe8 ; syscall
0x00000000000f70be : jne 0xf70df ; mov eax, 0x114 ; syscall
0x00000000000f716e : jne 0xf718f ; mov eax, 0x116 ; syscall
0x00000000000f721e : jne 0xf723f ; mov eax, 0x113 ; syscall
0x00000000000f72eb : jne 0xf7307 ; mov eax, 0x130 ; syscall
0x00000000000f7382 : jne 0xf739f ; mov eax, 0x95 ; syscall
0x00000000000f7c7b : jne 0xf7c97 ; mov eax, 0x2b ; syscall
0x00000000000f7d4b : jne 0xf7d67 ; mov eax, 0x2a ; syscall
0x00000000000f7f6e : jne 0xf7f8f ; mov eax, 0x2d ; syscall
0x00000000000f803b : jne 0xf8057 ; mov eax, 0x2f ; syscall
0x00000000000f819b : jne 0xf81b7 ; mov eax, 0x2e ; syscall
0x00000000000f823e : jne 0xf825f ; mov eax, 0x2c ; syscall
0x00000000000f861a : jne 0xf8627 ; add rsp, 0x18 ; ret
0x00000000000f863e : jne 0xf865f ; mov eax, 0x120 ; syscall
0x00000000000f86ee : jne 0xf870f ; mov eax, 0x12b ; syscall
0x00000000000f879e : jne 0xf87bf ; mov eax, 0x133 ; syscall
0x00000000000f893e : jne 0xf895f ; mov eax, 0x45 ; syscall
0x00000000000f89ee : jne 0xf8a0f ; mov eax, 0x46 ; syscall
0x00000000000f8b90 : jne 0xf8bc7 ; mov eax, 0x42 ; syscall
0x00000000000f8baf : jne 0xf8c01 ; add rsp, 0x58 ; ret
0x00000000000fedc4 : jne 0xfedb3 ; ret
0x00000000000ff6d7 : jne 0xff655 ; xor eax, eax ; ret
0x000000000010cd34 : jno 0x10cd66 ; add byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2a70
0x000000000015bede : jno 0x15beed ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015d580 : jno 0x15d589 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000015d7ba : jno 0x15d7c3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000015d921 : jno 0x15d932 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000015da86 : jno 0x15db0a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000001860d1 : jno 0x1860d2 ; jmp rcx
0x00000000001860e1 : jno 0x1860e2 ; jmp rcx
0x00000000001860f1 : jno 0x1860f2 ; jmp rcx
0x0000000000186101 : jno 0x186102 ; jmp rcx
0x0000000000186111 : jno 0x186112 ; jmp rcx
0x0000000000186110 : jno 0x186113 ; jmp rcx
0x0000000000186161 : jno 0x186162 ; jmp rcx
0x00000000001861a1 : jno 0x1861a2 ; jmp rcx
0x00000000001861e1 : jno 0x1861e2 ; jmp rcx
0x0000000000186a35 : jno 0x186a34 ; jmp rax
0x000000000018732d : jno 0x187335 ; add byte ptr [rdx + rbx*2 - 0x16], dh ; call rax
0x000000000018a531 : jno 0x18a52b ; call qword ptr [rax]
0x000000000019512a : jno 0x195138 ; ret
0x00000000001ad938 : jno 0x1ad941 ; add byte ptr [rax], al ; retf 5
0x00000000001adc60 : jno 0x1adc6c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000001eca : jno 0x1ea4 ; adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x000000000000222b : jno 0x2278 ; ret 0x1dd4
0x0000000000022a63 : jno 0x22ad3 ; cmp dword ptr [rax], eax ; ret
0x0000000000003a8b : jno 0x3ad5 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000045b64 : jno 0x45bb6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000071251 : jno 0x7125f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000713c7 : jno 0x713d3 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000078133 : jno 0x7813f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000078223 : jno 0x7822f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000007db3b : jno 0x7db79 ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000ee47f : jno 0xee485 ; add byte ptr [rax], al ; syscall
0x00000000000f89fe : jno 0xf89f5 ; ret
0x00000000000ff556 : jno 0xff55f ; cmovne eax, edx ; ret
0x00000000000ff555 : jno 0xff560 ; cmovne eax, edx ; ret
0x0000000000124783 : jnp 0x1247ef ; call rax
0x0000000000125213 : jnp 0x12526f ; call rax
0x0000000000174965 : jnp 0x174922 ; ret
0x0000000000175962 : jnp 0x1759c0 ; retf
0x0000000000175d69 : jnp 0x175db6 ; retf 0x99e0
0x00000000001769c9 : jnp 0x176a0a ; retf
0x000000000017c901 : jnp 0x17c8ff ; call rax
0x000000000017c905 : jnp 0x17c903 ; call rax
0x000000000017c909 : jnp 0x17c907 ; jmp qword ptr [rax]
0x000000000017c90d : jnp 0x17c90b ; jmp qword ptr [rax]
0x000000000017c911 : jnp 0x17c90f ; call rax
0x000000000017c91d : jnp 0x17c91b ; call rax
0x000000000017c921 : jnp 0x17c923 ; call qword ptr [rax - 0x2f000586]
0x000000000017c929 : jnp 0x17c927 ; call rax
0x000000000017c92d : jnp 0x17c92b ; call rax
0x000000000017c931 : jnp 0x17c92f ; call rax
0x000000000017c935 : jnp 0x17c933 ; call rax
0x000000000017c939 : jnp 0x17c937 ; call rax
0x000000000017c93d : jnp 0x17c93b ; call rax
0x000000000017c941 : jnp 0x17c93f ; call rax
0x000000000019b69d : jnp 0x19b692 ; call rsi
0x000000000019b69d : jnp 0x19b693 ; call rsi
0x00000000001af044 : jnp 0x1af050 ; add byte ptr [rax], al ; ret 4
0x0000000000002662 : jnp 0x2686 ; retf
0x0000000000030b57 : jnp 0x30b69 ; dec dword ptr [rbx - 0x7af0fbbd] ; retf
0x000000000005500a : jnp 0x55020 ; call 0x212c4
0x0000000000035a78 : jnp 0x74ccdf90 ; int1 ; ret
0x0000000000080441 : jnp 0x80482 ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000000854f2 : jnp 0x85541 ; mov rsi, r13 ; call rax
0x000000000008555a : jnp 0x855a6 ; call rax
0x0000000000086fa1 : jnp 0x86f3f ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000b2f28 : jnp 0xb2f3d ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000cec37 : jnp 0xceca2 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000000e50de : jnp 0xe50e6 ; inc dword ptr [rbx - 0x7af0fe08] ; retf 6
0x00000000000f6df1 : jnp 0xf6df7 ; add byte ptr [rax], al ; syscall
0x0000000000105936 : jns 0x105931 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000011e4a7 : jns 0x11e4a4 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000128851 : jns 0x12885d ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000128850 : jns 0x12885e ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000156257 : jns 0x156232 ; retf 0xead3
0x00000000001563a7 : jns 0x156382 ; retf 0xead3
0x00000000001564f7 : jns 0x1564d2 ; retf 0xead3
0x0000000000156647 : jns 0x156622 ; retf 0xead3
0x0000000000156797 : jns 0x156772 ; retf 0xead3
0x00000000001568e7 : jns 0x1568c2 ; retf 0xead3
0x0000000000156a37 : jns 0x156a12 ; retf 0xead3
0x0000000000156b87 : jns 0x156b62 ; retf 0xead3
0x0000000000156cd7 : jns 0x156cb2 ; retf 0xead3
0x0000000000156e27 : jns 0x156e02 ; retf 0xead3
0x0000000000156f77 : jns 0x156f52 ; retf 0xead3
0x00000000001570c7 : jns 0x1570a2 ; retf 0xead3
0x0000000000157217 : jns 0x1571f2 ; retf 0xead3
0x0000000000157367 : jns 0x157342 ; retf 0xead3
0x00000000001574b7 : jns 0x157492 ; retf 0xead3
0x0000000000157927 : jns 0x157902 ; retf 0xead3
0x0000000000157aa7 : jns 0x157a82 ; retf 0xead3
0x0000000000157c27 : jns 0x157c02 ; retf 0xead3
0x0000000000157da7 : jns 0x157d82 ; retf 0xead3
0x0000000000157f27 : jns 0x157f02 ; retf 0xead3
0x00000000001580a7 : jns 0x158082 ; retf 0xead3
0x0000000000158227 : jns 0x158202 ; retf 0xead3
0x00000000001583a7 : jns 0x158382 ; retf 0xead3
0x0000000000158527 : jns 0x158502 ; retf 0xead3
0x00000000001586a7 : jns 0x158682 ; retf 0xead3
0x0000000000158827 : jns 0x158802 ; retf 0xead3
0x00000000001589a7 : jns 0x158982 ; retf 0xead3
0x0000000000158b27 : jns 0x158b02 ; retf 0xead3
0x0000000000158ca7 : jns 0x158c82 ; retf 0xead3
0x0000000000158e27 : jns 0x158e02 ; retf 0xead3
0x000000000015d587 : jns 0x15d58a ; ret
0x000000000015d7c1 : jns 0x15d7c4 ; ret
0x000000000015d928 : jns 0x15d933 ; ret
0x0000000000173a6e : jns 0x173a04 ; ret 0xf869
0x0000000000173a6d : jns 0x173a05 ; ret 0xf869
0x0000000000186a89 : jns 0x186a88 ; jmp rax
0x000000000018a195 : jns 0x18a19e ; add ah, dl ; or esi, esi ; call rax
0x000000000018c759 : jns 0x18c757 ; jmp qword ptr [rax]
0x000000000018ce75 : jns 0x18ce7d ; add byte ptr [rdx - 3], ah ; call qword ptr [rax]
0x000000000018d571 : jns 0x18d572 ; jmp qword ptr [rdx]
0x00000000001989e1 : jns 0x1989d5 ; call qword ptr [rdx]
0x0000000000198a31 : jns 0x198a25 ; call qword ptr [rax]
0x0000000000198a59 : jns 0x198a4d ; jmp rbx
0x0000000000001b2d : jns 0x1b38 ; ret
0x0000000000002c97 : jns 0x2c65 ; clc ; ret
0x0000000000003367 : jns 0x3342 ; ret 0x5a51
0x0000000000003a23 : jns 0x3a76 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004d7e3 : jns 0x4d81a ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x000000000007cde3 : jns 0x7cd71 ; xor eax, dword ptr [rax] ; ret
0x0000000000086feb : jns 0x87000 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000086feb : jns 0x87002 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000c5521 : jns 0xc5527 ; add byte ptr [rax], al ; syscall
0x00000000000ceefb : jns 0xceee7 ; mov eax, 1 ; ret
0x00000000000ef094 : jns 0xef0a2 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f722e : jns 0xf7225 ; ret
0x00000000000f7f7e : jns 0xf7f75 ; ret
0x00000000000f824e : jns 0xf8245 ; ret
0x000000000009f436 : jns 0xffffffffed39f79c ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009f498 : jns 0xffffffffed39fbfe ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009f4b8 : jns 0xffffffffed39fd1e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000011a675 : jo 0x11a602 ; ret
0x000000000011a77a : jo 0x11a707 ; ret
0x000000000011c18f : jo 0x11c1f5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000131d01 : jo 0x131d08 ; add byte ptr [rax], al ; jmp rax
0x0000000000131d32 : jo 0x131d39 ; add byte ptr [rax], al ; jmp rax
0x0000000000172ae8 : jo 0x172af1 ; in al, dx ; dec dword ptr [rbp] ; in al, dx ; call rcx
0x0000000000174ae4 : jo 0x174b5e ; mov ebp, 0xfb67d10d ; ret
0x0000000000177d0c : jo 0x177d4f ; out dx, eax ; call qword ptr [rax]
0x0000000000178830 : jo 0x178814 ; sti ; jmp rax
0x0000000000179418 : jo 0x1793fd ; jmp qword ptr [rbp + 0x16fff3e2]
0x0000000000179cc4 : jo 0x179c90 ; hlt ; call qword ptr [rsi]
0x0000000000185ebc : jo 0x185e68 ; cld ; inc dword ptr [rax - 0x5c] ; cld ; call qword ptr [rax]
0x00000000001862d0 : jo 0x186308 ; sti ; push qword ptr [rax] ; xor ebx, edi ; call qword ptr [rax]
0x00000000001863a4 : jo 0x1863cc ; sti ; inc eax ; and bl, bh ; call qword ptr [rax]
0x00000000001864f4 : jo 0x186555 ; sti ; inc dword ptr [rax + 0x5a] ; sti ; jmp qword ptr [rax]
0x000000000018651c : jo 0x186569 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000186570 : jo 0x1865c4 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000186998 : jo 0x186925 ; sti ; jmp rax
0x0000000000186a71 : jo 0x186a70 ; jmp rax
0x0000000000186f00 : jo 0x186eae ; sti ; jmp rax
0x0000000000186fa8 : jo 0x186fab ; cld ; inc eax ; sti ; cld ; call qword ptr [rax]
0x0000000000189fad : jo 0x189fb6 ; add byte ptr [rbx + rcx*8 - 0xb], ah ; jmp qword ptr [rax]
0x000000000018be61 : jo 0x18be5e ; jmp qword ptr [rax]
0x000000000018be60 : jo 0x18be5f ; jmp qword ptr [rax]
0x000000000018df4d : jo 0x18df4e ; jmp qword ptr [rdi]
0x000000000018df4c : jo 0x18df4f ; jmp qword ptr [rdi]
0x0000000000199ec0 : jo 0x199ecd ; cld ; jmp qword ptr [rbx]
0x000000000019a3e8 : jo 0x19a3c5 ; add byte ptr [rax], al ; add al, 0x9d ; int1 ; call rsp
0x000000000019b3e5 : jo 0x19b3da ; jmp qword ptr [rdx]
0x000000000019b3e5 : jo 0x19b3db ; jmp qword ptr [rdx]
0x000000000019b3e4 : jo 0x19b3dc ; jmp qword ptr [rdx]
0x000000000019d220 : jo 0x19d1ce ; jmp rsi
0x00000000001a0080 : jo 0x1a0074 ; hlt ; jmp qword ptr [rcx]
0x00000000001a1620 : jo 0x1a167c ; cmc ; jmp qword ptr [rcx]
0x00000000001a34e8 : jo 0x1a3554 ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000001a4069 : jo 0x1a4073 ; add byte ptr [rax + rdx], al ; idiv bh ; retf 0
0x00000000001af78c : jo 0x1af797 ; add byte ptr [rax], al ; retf 7
0x0000000000026a05 : jo 0x26a1d ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002de83 : jo 0x2ded4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002de82 : jo 0x2ded5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002edcf : jo 0x2edbb ; retf
0x00000000000422c9 : jo 0x422d4 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000062b73 : jo 0x62bab ; fucomi st(1) ; xchg eax, edx ; retf 0xffff
0x0000000000071dfa : jo 0x71e12 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000758ca : jo 0x75857 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000758c9 : jo 0x75858 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000079d34 : jo 0x79d85 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079d7f : jo 0x79dd0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000007ec8 : jo 0x7f03 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000009728 : jo 0x9745 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000a2265 : jo 0xa22cb ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a243a : jo 0xa24a0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a26dd : jo 0xa273f ; pop rbp ; pop r12 ; ret
0x00000000000a5d64 : jo 0xa5d51 ; retf 0xfff8
0x00000000000aab7c : jo 0xaab69 ; retf 0xfff8
0x00000000000b107a : jo 0xb10a7 ; ret 0x9848
0x00000000000b469a : jo 0xb46ab ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c55e1 : jo 0xc55e7 ; add byte ptr [rax], al ; syscall
0x00000000000d6488 : jo 0xd648d ; ret 0xc083
0x000000000000de98 : jo 0xdef2 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000e6b64 : jo 0xe6b7a ; adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e6b63 : jo 0xe6b7b ; adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e7489 : jo 0xe74a2 ; adc dword ptr [rdi + 0xf8], eax ; ret
0x00000000000e7488 : jo 0xe74a3 ; adc dword ptr [rdi + 0xf8], eax ; ret
0x00000000000e91ac : jo 0xe9232 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f2e6d : jo 0xf2e80 ; test sil, 1 ; jne 0xf2e89 ; ret
0x00000000001028aa : jp 0x102901 ; mov rsi, rdx ; call rax
0x0000000000105262 : jp 0x105217 ; stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000010527e : jp 0x105289 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000010527e : jp 0x10528b ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000011e6ad : jp 0x11e70d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000174c73 : jp 0x174c2d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000017c919 : jp 0x17c91b ; ljmp [rax + 0x7b] ; cli ; call rax
0x000000000017c925 : jp 0x17c923 ; call rax
0x0000000000186a4d : jp 0x186a50 ; jmp qword ptr [rax - 0x1f00049c]
0x0000000000188149 : jp 0x18813b ; jmp rsp
0x0000000000188148 : jp 0x18813c ; jmp rsp
0x000000000018b081 : jp 0x18b07c ; call rsp
0x00000000001afa38 : jp 0x1afa45 ; add byte ptr [rax], al ; ret
0x000000000000239b : jp 0x237a ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x00000000000025d9 : jp 0x25bd ; jmp qword ptr [rbx]
0x00000000000025d8 : jp 0x25be ; jmp qword ptr [rbx]
0x000000000002cb69 : jp 0x2cbac ; jbe 0x2cb4f ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000341a6 : jp 0x341b8 ; jne 0x341b8 ; addsd xmm0, xmm0 ; ret
0x00000000000344c2 : jp 0x344d8 ; jne 0x344d8 ; addss xmm0, xmm0 ; ret
0x0000000000003a8a : jp 0x3b04 ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000d0055 : jp 0xd0056 ; and al, 4 ; add dword ptr [rbx + rcx - 0xa], esi ; ret
0x00000000000ef6e5 : jp 0xef71c ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f6dc1 : jp 0xf6dc7 ; add byte ptr [rax], al ; syscall
0x000000000010095a : jrcxz 0x100963 ; dec dword ptr [rax - 0x75] ; adc eax, dword ptr [rcx - 0x77] ; ret
0x00000000001012f2 : jrcxz 0x10136f ; or byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000101a06 : jrcxz 0x101a14 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000103fe3 : jrcxz 0x103fa8 ; cmp r11d, 0xa ; je 0x103ff4 ; ret
0x000000000010475b : jrcxz 0x104761 ; add byte ptr [rax], al ; syscall
0x00000000001326c5 : jrcxz 0x1326d1 ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000013eaea : jrcxz 0x13eae5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013eae9 : jrcxz 0x13eae6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014160a : jrcxz 0x141605 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141609 : jrcxz 0x141606 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000164e94 : jrcxz 0x164ee5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001738c5 : jrcxz 0x17391f ; ret
0x0000000000175a8d : jrcxz 0x175a50 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000001765e9 : jrcxz 0x1765cd ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000179c38 : jrcxz 0x179c04 ; hlt ; call rsi
0x000000000018b6dd : jrcxz 0x18b6e6 ; add ah, dl ; clc ; call rsp
0x000000000018cbe9 : jrcxz 0x18cbe9 ; call rax
0x000000000019fba5 : jrcxz 0x19fb9d ; call qword ptr [rsi]
0x000000000019fbb9 : jrcxz 0x19fbb1 ; jmp qword ptr [rcx]
0x00000000001ab319 : jrcxz 0x1ab322 ; add ah, ah ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x0000000000001f83 : jrcxz 0x1f61 ; retf 0xbe35
0x0000000000001f4a : jrcxz 0x1fc7 ; retf 0x6321
0x0000000000002726 : jrcxz 0x26c7 ; retf
0x000000000003901d : jrcxz 0x3908a ; nop ; xor eax, eax ; ret
0x00000000000783c2 : jrcxz 0x78414 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ceefc : jrcxz 0xceebc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e1781 : jrcxz 0xe17b1 ; sub eax, 0xc0894900 ; call r12
0x00000000000e1a4c : jrcxz 0xe1a9d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e205a : jrcxz 0xe20d5 ; retf
0x00000000000e50a3 : jrcxz 0xe5120 ; loope 0xe50fb ; mov edi, edi ; call 0x212d0
0x0000000000108354 : js 0x108369 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000001083d4 : js 0x1083e7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000113f50 : js 0x113f6e ; mov rax, rdx ; movsxd rdx, esi ; ret
0x000000000011be30 : js 0x11be50 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001233bc : js 0x1233cf ; retf 0xc80f
0x00000000001233bb : js 0x1233d0 ; retf 0xc80f
0x00000000001271b0 : js 0x1271b0 ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x000000000012f423 : js 0x12f438 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001759c8 : js 0x17599c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000175961 : js 0x1759e1 ; pop rdx ; retf
0x0000000000179d80 : js 0x179d4d ; hlt ; jmp qword ptr [rdi]
0x000000000018a581 : js 0x18a57b ; call rax
0x000000000018b061 : js 0x18b05c ; call qword ptr [rax]
0x000000000018c751 : js 0x18c74f ; call rsp
0x000000000018cdb9 : js 0x18cdba ; jmp rsp
0x0000000000194835 : js 0x19483d ; add byte ptr [rax], bh ; out dx, al ; jmp rbx
0x0000000000195b5d : js 0x195b4f ; call qword ptr [rdx]
0x0000000000195b8d : js 0x195b7f ; call qword ptr [rdx]
0x00000000001974f0 : js 0x19749e ; add byte ptr [rax], al ; jl 0x1974fa ; out dx, al ; call qword ptr [rcx]
0x0000000000199db8 : js 0x199e3b ; int1 ; call qword ptr [rax]
0x0000000000199ee8 : js 0x199ef7 ; cld ; jmp rsi
0x000000000019cded : js 0x19ce06 ; adc byte ptr [rbx + 0x80e4c02], al ; ret
0x000000000019e608 : js 0x19e592 ; hlt ; call qword ptr [rbx]
0x000000000019e978 : js 0x19e90d ; hlt ; jmp qword ptr [rcx]
0x000000000019eff0 : js 0x19f019 ; add dword ptr [rax], eax ; pop rsp ; test al, 0xf4 ; call rsp
0x00000000001a3bf0 : js 0x1a3c65 ; add dword ptr [rax], eax ; pop rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x00000000001a4df0 : js 0x1a4e77 ; add dword ptr [rax], eax ; cmp sil, r14b ; jmp rax
0x00000000001a62f0 : js 0x1a628a ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001a8d19 : js 0x1a8d14 ; call qword ptr [rsi]
0x0000000000001ace : js 0x1ac3 ; fidiv word ptr [rbx] ; retf
0x0000000000021e5b : js 0x21e66 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000026f28 : js 0x26eb5 ; ret 0x8348
0x000000000002b76b : js 0x2b776 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002dae1 : js 0x2da6d ; loopne 0x2daf4 ; movzx eax, ax ; ret
0x000000000002db21 : js 0x2daad ; loopne 0x2db2e ; movzx eax, ax ; ret
0x000000000002dbc1 : js 0x2db4d ; loopne 0x2dbd0 ; movzx eax, ax ; ret
0x000000000002dca1 : js 0x2dc2a ; loopne 0x2dcaa ; ret
0x000000000002dd1a : js 0x2dca3 ; loopne 0x2dd23 ; ret
0x000000000002dd2a : js 0x2dcb6 ; loopne 0x2dd3d ; movzx eax, ax ; ret
0x000000000002dd6a : js 0x2dcf6 ; loopne 0x2dd77 ; movzx eax, ax ; ret
0x000000000002de0a : js 0x2dd96 ; loopne 0x2de19 ; movzx eax, ax ; ret
0x000000000002de93 : js 0x2dee4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002de92 : js 0x2dee5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000000306d : js 0x3023 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000030ae6 : js 0x30af6 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000030bc0 : js 0x30bd0 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000003789d : js 0x378c1 ; call rdx
0x00000000000444b5 : js 0x444be ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000058f27 : js 0x58f66 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000058f26 : js 0x58f67 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000063027 : js 0x62fb4 ; ret 0x348
0x00000000000758cd : js 0x758db ; ret
0x000000000007e638 : js 0x7e643 ; ret
0x0000000000086209 : js 0x86204 ; ret 0
0x000000000008730b : js 0x87306 ; ret 0
0x000000000008735b : js 0x87356 ; ret 0
0x00000000000873ab : js 0x873a6 ; ret 0
0x00000000000873fb : js 0x873f6 ; ret 0
0x00000000000c5641 : js 0xc5647 ; add byte ptr [rax], al ; syscall
0x00000000000c5ff7 : js 0xc6003 ; ret
0x00000000000d84fb : js 0xd850e ; add al, 0x75 ; mov al, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000e6a70 : js 0xe6a89 ; cmp rax, rbx ; seta al ; pop rbx ; ret
0x00000000000e6b14 : js 0xe6b2a ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000e6b13 : js 0xe6b2b ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000edf33 : js 0xedf1c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f03d2 : js 0xf03e5 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f5bf8 : js 0xf5b85 ; ret 0xe8c1
0x00000000000f5bf7 : js 0xf5b86 ; ret 0xe8c1
0x00000000000f5c8a : js 0xf5c17 ; ret 0xe8c1
0x00000000000f5c89 : js 0xf5c18 ; ret 0xe8c1
0x00000000000f6047 : js 0xf5fd4 ; ret 0xe8c1
0x00000000000f6046 : js 0xf5fd5 ; ret 0xe8c1
0x00000000000f60d9 : js 0xf6066 ; ret 0xe8c1
0x00000000000f60d8 : js 0xf6067 ; ret 0xe8c1
0x00000000000fa0f8 : js 0xfa084 ; loopne 0xfa10b ; movzx eax, ax ; ret
0x00000000000fa228 : js 0xfa1b1 ; loopne 0xfa231 ; ret
0x00000000000fa2b8 : js 0xfa244 ; loopne 0xfa2c5 ; movzx eax, ax ; ret
0x00000000000fa5b8 : js 0xfa544 ; loopne 0xfa5c7 ; movzx eax, ax ; ret
0x00000000000faa81 : js 0xfaa0d ; loopne 0xfaa94 ; movzx eax, ax ; ret
0x00000000000fab81 : js 0xfab0a ; loopne 0xfab8a ; ret
0x00000000000fac01 : js 0xfab8d ; loopne 0xfac0e ; movzx eax, ax ; ret
0x00000000000fae81 : js 0xfae0d ; loopne 0xfae90 ; movzx eax, ax ; ret
0x000000000009f3d8 : js 0xffffffffed39f63e ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009f406 : js 0xffffffffed39f86c ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009f458 : js 0xffffffffed39fcbe ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000025635 : lahf ; add dword ptr [rax], eax ; add al, ch ; ret 0x83
0x0000000000085d86 : lahf ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000018a91d : lahf ; add dword ptr [rax], eax ; retf 0xfff6
0x0000000000198389 : lahf ; cli ; call qword ptr [rax]
0x000000000018c8d9 : lahf ; cli ; jmp qword ptr [rax]
0x00000000000e50dd : lahf ; jnp 0xe50e7 ; inc dword ptr [rbx - 0x7af0fe08] ; retf 6
0x000000000010527d : lahf ; jp 0x10528a ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000010527d : lahf ; jp 0x10528c ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000175fa3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000156d5d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000175892 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000176094 : lahf ; push -0x57d3205 ; call 0xffffffffab252b96
0x00000000001740a0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000004b457 : lahf ; ret
0x000000000003849d : lahf ; ret 0x37
0x000000000007d4d2 : lahf ; ret 0x3949
0x00000000000f203d : lahf ; ret 0x8545
0x00000000001737fd : lahf ; ret 0x871e
0x0000000000050f00 : lahf ; ret 0x87e
0x0000000000050ac8 : lahf ; ret 0x8e0f
0x000000000007d602 : lahf ; ret 0xcbe9
0x000000000005f5d8 : lahf ; ret 0xd129
0x00000000000cd897 : lahf ; ret 0xd189
0x000000000005cc93 : lahf ; ret 0xd629
0x00000000000d7051 : lahf ; ret 0xe183
0x00000000000a0489 : lahf ; ret 0xea81
0x000000000012e15f : lahf ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000008707d : lahf ; xchg dword ptr [rbx], ecx ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001573ed : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000189c03 : lcall [rax + 0x14000156] ; jge 0x189c07 ; jmp rsp
0x000000000018620f : lcall [rax + 0x30] ; sti ; jmp qword ptr [rax]
0x00000000000f24c7 : lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000189733 : lcall [rax + 0x64000139] ; test bl, dh ; jmp rsp
0x0000000000179cd7 : lcall [rax + rcx*8 - 0x38df000c] ; hlt ; call qword ptr [rsi]
0x0000000000189c7b : lcall [rax - 0x2bfffea7] ; mov esi, esp ; jmp rsp
0x000000000018900b : lcall [rax - 0x2bfffef1] ; movsxd rsi, eax ; jmp rsp
0x000000000017a05b : lcall [rax - 0x3a] ; hlt ; call qword ptr [rax]
0x0000000000187e8b : lcall [rax - 0x58] ; add byte ptr [rax], al ; mov ah, 0xde ; in al, dx ; call rsp
0x0000000000179c1f : lcall [rax - 0x5f000b3d] ; ret 0xfff4
0x000000000018950b : lcall [rax - 0x6bfffed3] ; mov al, 0xf2 ; call rsp
0x00000000001794db : lcall [rax] ; fcomi st(3) ; jmp qword ptr [rcx]
0x000000000017952f : lcall [rax] ; fcomi st(3) ; jmp rax
0x00000000001794d7 : lcall [rax] ; fcomi st(3) ; lcall [rax] ; fcomi st(3) ; jmp qword ptr [rcx]
0x000000000017952b : lcall [rax] ; fcomi st(3) ; lcall [rax] ; fcomi st(3) ; jmp rax
0x000000000018b20b : lcall [rax] ; retf 1
0x0000000000119f8d : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010ce20 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000ede19 : lcall [rbp + 0x41] ; pop rsp ; ret
0x000000000018701b : lcall [rbp + 0x48fffdab] ; lodsd eax, dword ptr [rsi] ; std ; call rax
0x000000000005d152 : lcall [rbp + 0x74] ; ret 0x8440
0x000000000018cdc3 : lcall [rbp + rbp + 1] ; add byte ptr [rsi + rdx*4 - 3], ah ; call rsp
0x000000000018ca6b : lcall [rbp + rsi*2 - 0x2a2bffff] ; cli ; call rsp
0x0000000000087475 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000007dfa0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011afbc : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000037502 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ab3c3 : lcall [rbx + 0x5d] ; pop r14 ; ret
0x00000000000703f0 : lcall [rbx + 0x5d] ; ret
0x0000000000179bd7 : lcall [rbx + rdi] ; hlt ; call qword ptr [rdi]
0x000000000018be4b : lcall [rbx + rdx + 0x6f740002] ; stc ; call rsp
0x000000000017a42b : lcall [rbx - 0x64000a6c] ; xchg eax, esp ; cmc ; call qword ptr [rax]
0x000000000017a3bf : lcall [rbx - 0x64000a6c] ; xchg eax, esp ; cmc ; call rax
0x000000000006fe1e : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000179b53 : lcall [rcx] ; cmp eax, 0x3329fff4 ; hlt ; jmp qword ptr [rbx]
0x000000000017938b : lcall [rdi - 0x18] ; call qword ptr [rax + 0x16fff3e8]
0x0000000000179cab : lcall [rdi - 0x38] ; hlt ; jmp qword ptr [rax]
0x0000000000179c03 : lcall [rip + 0x10fff4c2] ; ret
0x0000000000179c0b : lcall [rip + 0x1dfff4c2] ; ret 0xfff4
0x0000000000179c0f : lcall [rip + 0x58fff4c2] ; ret
0x0000000000179c2b : lcall [rip + 0xfff4c2] ; ret
0x0000000000179bdf : lcall [rip - 0x1f000b3e] ; ret 0xfff4
0x0000000000179c1b : lcall [rip - 0x67000b3e] ; ret
0x0000000000186c07 : lcall [rsi + 0x2efffbb2] ; mov dl, 0xfb ; call rsp
0x00000000001875d3 : lcall [rsi + rdi*2] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffea
0x000000000017a58b : lcall [rsi - 0x6b] ; cmc ; inc dword ptr [rbp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x0000000000186647 : lcall [rsp + rcx*4 - 0x73d30005] ; sti ; call rdx
0x000000000017a66f : lcall [rsp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x00000000000d3dfc : lcall [rsp + rsi*2] ; sub byte ptr [rax - 0x80], al ; call qword ptr [rsi]
0x000000000013f176 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000728ef : lea eax, [r8 - 1] ; ret
0x00000000001138db : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000b1dea : lea eax, [rax + rax - 1] ; ret
0x00000000000b32d4 : lea eax, [rax + rax*4] ; ret
0x00000000000df82b : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000e0c63 : lea eax, [rax + rbp] ; call r12
0x00000000000906e4 : lea eax, [rax + rdi + 0x10] ; ret
0x00000000000906f4 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000090bc4 : lea eax, [rax + rdi + 0x30] ; ret
0x00000000000906c4 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000bf0e2 : lea eax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000728f0 : lea eax, [rax - 1] ; ret
0x00000000000add3f : lea eax, [rax] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000edda1 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x000000000011e0eb : lea eax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c8f01 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8df1 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113a90 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000001138dc : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x0000000000095fcd : lea eax, [rcx + rsi] ; ret
0x000000000009fb74 : lea eax, [rcx - 1] ; ret
0x00000000000871d3 : lea eax, [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000009cacc : lea eax, [rdi + 0x10] ; ret
0x000000000009cae1 : lea eax, [rdi + 0x11] ; ret
0x000000000009caff : lea eax, [rdi + 0x12] ; ret
0x000000000009cb1f : lea eax, [rdi + 0x13] ; ret
0x000000000009cb42 : lea eax, [rdi + 0x14] ; ret
0x000000000009cb61 : lea eax, [rdi + 0x15] ; ret
0x000000000009cb81 : lea eax, [rdi + 0x16] ; ret
0x000000000009cba1 : lea eax, [rdi + 0x17] ; ret
0x000000000009cbc4 : lea eax, [rdi + 0x18] ; ret
0x000000000009cbe9 : lea eax, [rdi + 0x19] ; ret
0x000000000009cc07 : lea eax, [rdi + 0x1a] ; ret
0x000000000009cc27 : lea eax, [rdi + 0x1b] ; ret
0x000000000009cc43 : lea eax, [rdi + 0x1c] ; ret
0x000000000009cc63 : lea eax, [rdi + 0x1d] ; ret
0x000000000009cc83 : lea eax, [rdi + 0x1e] ; ret
0x000000000009cca3 : lea eax, [rdi + 0x1f] ; ret
0x000000000009db03 : lea eax, [rdi + 0x20] ; ret
0x000000000009dd69 : lea eax, [rdi + 0x40] ; ret
0x000000000009ca1d : lea eax, [rdi + 0xa] ; ret
0x000000000009ca3d : lea eax, [rdi + 0xb] ; ret
0x000000000009ca5f : lea eax, [rdi + 0xc] ; ret
0x000000000009ca7f : lea eax, [rdi + 0xd] ; ret
0x000000000009ca9f : lea eax, [rdi + 0xe] ; ret
0x000000000009cab9 : lea eax, [rdi + 0xf] ; ret
0x000000000009c967 : lea eax, [rdi + 1] ; ret
0x000000000009c97a : lea eax, [rdi + 2] ; ret
0x000000000009c985 : lea eax, [rdi + 3] ; ret
0x000000000009c998 : lea eax, [rdi + 4] ; ret
0x000000000009c9ad : lea eax, [rdi + 5] ; ret
0x000000000009c9cb : lea eax, [rdi + 6] ; ret
0x000000000009c9d7 : lea eax, [rdi + 7] ; ret
0x000000000009c9ea : lea eax, [rdi + 8] ; ret
0x0000000000112f30 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009c9ff : lea eax, [rdi + 9] ; ret
0x0000000000090719 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000090729 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000090623 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000159595 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000008d0d6 : lea eax, [rdi + rax - 1] ; mov qword ptr [rdi], rdx ; ret
0x000000000008d0c4 : lea eax, [rdi + rax - 1] ; ret
0x0000000000095c17 : lea eax, [rdi + rax] ; ret
0x000000000015522a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000113d70 : lea eax, [rdi + rsi + 8] ; ret
0x000000000002d835 : lea eax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000095ec9 : lea eax, [rdi + rsi] ; ret
0x00000000000b247e : lea eax, [rdi - 0x10] ; ret
0x00000000000b25e1 : lea eax, [rdi - 0xc] ; ret
0x00000000000b2601 : lea eax, [rdi - 4] ; ret
0x00000000000b25f1 : lea eax, [rdi - 8] ; ret
0x000000000009c953 : lea eax, [rdi] ; ret
0x000000000014c48d : lea eax, [rdx + 0xa] ; ret
0x000000000014c4ad : lea eax, [rdx + 0xb] ; ret
0x000000000014c4cf : lea eax, [rdx + 0xc] ; ret
0x000000000014c4ef : lea eax, [rdx + 0xd] ; ret
0x000000000014c50f : lea eax, [rdx + 0xe] ; ret
0x000000000014c39f : lea eax, [rdx + 0xf] ; ret
0x000000000014c3c7 : lea eax, [rdx + 1] ; ret
0x000000000014c3dd : lea eax, [rdx + 2] ; ret
0x000000000014c3f5 : lea eax, [rdx + 3] ; ret
0x000000000014c40b : lea eax, [rdx + 4] ; ret
0x000000000014c41d : lea eax, [rdx + 5] ; ret
0x000000000014c43b : lea eax, [rdx + 6] ; ret
0x000000000014c347 : lea eax, [rdx + 7] ; ret
0x000000000014c44d : lea eax, [rdx + 8] ; ret
0x000000000014c46d : lea eax, [rdx + 9] ; ret
0x00000000000728de : lea eax, [rdx + rdi] ; ret
0x00000000000a05a3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000083961 : lea eax, [rdx - 0x10] ; ret
0x0000000000083948 : lea eax, [rdx - 8] ; ret
0x000000000014c3b5 : lea eax, [rdx] ; ret
0x000000000004d656 : lea eax, [rip + 0x1297a4] ; jmp rax
0x000000000002cb40 : lea eax, [rip + 0x150733] ; ret
0x0000000000021b81 : lea eax, [rip + 0x15b244] ; ret
0x0000000000021b91 : lea eax, [rip + 0x15d081] ; ret
0x000000000008713a : lea eax, [rip + 0x191e0] ; cmovne rax, rdx ; ret
0x00000000000f243b : lea eax, [rip + 0x2c4f7f] ; pop rbp ; pop r12 ; ret
0x00000000000ef4d4 : lea eax, [rip + 0x2c7be6] ; pop rbx ; ret
0x0000000000105111 : lea eax, [rip + 0x450f4800] ; ret 0xfc3
0x00000000000f4b89 : lea eax, [rip + 0x8a249] ; pop rbx ; ret
0x00000000000a1ea4 : lea eax, [rip + 0xb8246] ; je 0xa1e75 ; ret
0x00000000000a1ea4 : lea eax, [rip + 0xb8246] ; je 0xa1e77 ; ret
0x0000000000087004 : lea eax, [rip + 0xcec26] ; je 0x86fd5 ; ret
0x0000000000087004 : lea eax, [rip + 0xcec26] ; je 0x86fd7 ; ret
0x000000000010533a : lea eax, [rip - 0x65030] ; cmovne rax, rdx ; ret
0x0000000000163c55 : lea eax, [rip - 0x76b80000] ; ret 0x8949
0x00000000000cef70 : lea eax, [rsi + 1] ; ret
0x0000000000058d8a : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x58d66
0x0000000000165d59 : lea ebp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000364e4 : lea ebp, [rdi + rax] ; mov rdi, rbp ; call r12
0x00000000000e4da3 : lea ebp, [rsp + rax] ; mov rdi, rbp ; call 0x21088
0x00000000001740b1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000a21bb : lea ecx, [rax + 1] ; call rbx
0x00000000000a2317 : lea ecx, [rax + 4] ; call rbx
0x00000000000a2716 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000075044 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000137860 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000009b20e : lea ecx, [rbx + rcx] ; jmp rcx
0x00000000000d7835 : lea ecx, [rbx - 2] ; add rdx, rcx ; jmp 0xd784f
0x00000000000f749a : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x0000000000149c96 : lea ecx, [rdx + 0x10] ; jne 0x14a1e9 ; ret
0x0000000000149f94 : lea ecx, [rdx + 0xa] ; jne 0x14a1e9 ; ret
0x0000000000149fb4 : lea ecx, [rdx + 0xb] ; jne 0x14a1e9 ; ret
0x0000000000149fd4 : lea ecx, [rdx + 0xc] ; jne 0x14a1e9 ; ret
0x0000000000149ff6 : lea ecx, [rdx + 0xd] ; jne 0x14a1e9 ; ret
0x000000000014a016 : lea ecx, [rdx + 0xe] ; jne 0x14a1e9 ; ret
0x000000000014a036 : lea ecx, [rdx + 0xf] ; jne 0x14a1e9 ; ret
0x0000000000149e8c : lea ecx, [rdx + 1] ; jne 0x14a1e9 ; ret
0x0000000000149eae : lea ecx, [rdx + 2] ; jne 0x14a1e9 ; ret
0x0000000000149ed4 : lea ecx, [rdx + 3] ; jne 0x14a1e9 ; ret
0x0000000000149eec : lea ecx, [rdx + 4] ; jne 0x14a1e9 ; ret
0x0000000000070556 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000149f12 : lea ecx, [rdx + 5] ; jne 0x14a1e9 ; ret
0x0000000000149f34 : lea ecx, [rdx + 6] ; jne 0x14a1e9 ; ret
0x0000000000149f52 : lea ecx, [rdx + 7] ; jne 0x14a1e9 ; ret
0x0000000000149c2e : lea ecx, [rdx + 8] ; jne 0x14a1e9 ; ret
0x0000000000149f74 : lea ecx, [rdx + 9] ; jne 0x14a1e9 ; ret
0x0000000000083956 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000084a09 : lea ecx, [rip + 0xf886a] ; mov rdx, rcx ; jmp 0x849ae
0x00000000000faa07 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000074e50 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000a2312 : lea ecx, [rsp + 0x18] ; lea rcx, [rax + 4] ; call rbx
0x0000000000074d6b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000011c6b1 : lea ecx, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000011c8b8 : lea ecx, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a269e : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000a24cc : lea ecx, [rsp + 0x28] ; call r12
0x00000000000a21b6 : lea ecx, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x00000000000a2ba7 : lea ecx, [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000af012 : lea ecx, [rsp + 0x30] ; call r12
0x00000000000a28ac : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000126e8b : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000011cdc9 : lea ecx, [rsp + 0x40] ; call qword ptr [rax]
0x000000000011be2f : lea edi, [rax + 0x18] ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000021e5a : lea edi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000012294e : lea edi, [rbp + 0x10] ; call rax
0x0000000000055009 : lea edi, [rbx + 0x10] ; call 0x212c5
0x0000000000125212 : lea edi, [rbx + 0x58] ; call rax
0x0000000000124782 : lea edi, [rbx + 0x68] ; call rax
0x0000000000121d25 : lea edi, [rbx + 0xc8] ; call rax
0x000000000009bd7d : lea edi, [rdi + 0x10] ; jne 0x9c459 ; ret
0x000000000009d471 : lea edi, [rdi + 0x10] ; jne 0x9dc79 ; ret
0x000000000009bda0 : lea edi, [rdi + 0x11] ; jne 0x9c459 ; ret
0x000000000009d494 : lea edi, [rdi + 0x11] ; jne 0x9dc79 ; ret
0x000000000009bdc5 : lea edi, [rdi + 0x12] ; jne 0x9c459 ; ret
0x000000000009d4b9 : lea edi, [rdi + 0x12] ; jne 0x9dc79 ; ret
0x000000000009bde3 : lea edi, [rdi + 0x13] ; jne 0x9c459 ; ret
0x000000000009d4e7 : lea edi, [rdi + 0x13] ; jne 0x9dc79 ; ret
0x000000000009be03 : lea edi, [rdi + 0x14] ; jne 0x9c459 ; ret
0x000000000009d517 : lea edi, [rdi + 0x14] ; jne 0x9dc79 ; ret
0x000000000009be26 : lea edi, [rdi + 0x15] ; jne 0x9c459 ; ret
0x000000000009d54a : lea edi, [rdi + 0x15] ; jne 0x9dc79 ; ret
0x000000000009be45 : lea edi, [rdi + 0x16] ; jne 0x9c459 ; ret
0x000000000009d579 : lea edi, [rdi + 0x16] ; jne 0x9dc79 ; ret
0x000000000009be65 : lea edi, [rdi + 0x17] ; jne 0x9c459 ; ret
0x000000000009d5a9 : lea edi, [rdi + 0x17] ; jne 0x9dc79 ; ret
0x000000000009be85 : lea edi, [rdi + 0x18] ; jne 0x9c459 ; ret
0x000000000009d5d9 : lea edi, [rdi + 0x18] ; jne 0x9dc79 ; ret
0x000000000009bea8 : lea edi, [rdi + 0x19] ; jne 0x9c459 ; ret
0x000000000009d60c : lea edi, [rdi + 0x19] ; jne 0x9dc79 ; ret
0x000000000009bedd : lea edi, [rdi + 0x1a] ; jne 0x9c459 ; ret
0x000000000009d641 : lea edi, [rdi + 0x1a] ; jne 0x9dc79 ; ret
0x000000000009bf0b : lea edi, [rdi + 0x1b] ; jne 0x9c459 ; ret
0x000000000009d66f : lea edi, [rdi + 0x1b] ; jne 0x9dc79 ; ret
0x000000000009bf3b : lea edi, [rdi + 0x1c] ; jne 0x9c459 ; ret
0x000000000009d69f : lea edi, [rdi + 0x1c] ; jne 0x9dc79 ; ret
0x000000000009bf67 : lea edi, [rdi + 0x1d] ; jne 0x9c459 ; ret
0x000000000009d6cb : lea edi, [rdi + 0x1d] ; jne 0x9dc79 ; ret
0x000000000009bf97 : lea edi, [rdi + 0x1e] ; jne 0x9c459 ; ret
0x000000000009d6fb : lea edi, [rdi + 0x1e] ; jne 0x9dc79 ; ret
0x000000000009bfc7 : lea edi, [rdi + 0x1f] ; jne 0x9c459 ; ret
0x000000000009d72b : lea edi, [rdi + 0x1f] ; jne 0x9dc79 ; ret
0x000000000009bff7 : lea edi, [rdi + 0x20] ; jne 0x9c459 ; ret
0x000000000009d75b : lea edi, [rdi + 0x20] ; jne 0x9dc79 ; ret
0x000000000009bcc3 : lea edi, [rdi + 0xa] ; jne 0x9c459 ; ret
0x000000000009d377 : lea edi, [rdi + 0xa] ; jne 0x9dc79 ; ret
0x000000000009bce1 : lea edi, [rdi + 0xb] ; jne 0x9c459 ; ret
0x000000000009d3a5 : lea edi, [rdi + 0xb] ; jne 0x9dc79 ; ret
0x000000000009bd01 : lea edi, [rdi + 0xc] ; jne 0x9c459 ; ret
0x000000000009d3c5 : lea edi, [rdi + 0xc] ; jne 0x9dc79 ; ret
0x000000000009bd23 : lea edi, [rdi + 0xd] ; jne 0x9c459 ; ret
0x000000000009d3e7 : lea edi, [rdi + 0xd] ; jne 0x9dc79 ; ret
0x000000000009bd43 : lea edi, [rdi + 0xe] ; jne 0x9c459 ; ret
0x000000000009d417 : lea edi, [rdi + 0xe] ; jne 0x9dc79 ; ret
0x000000000009bd63 : lea edi, [rdi + 0xf] ; jne 0x9c459 ; ret
0x000000000009d447 : lea edi, [rdi + 0xf] ; jne 0x9dc79 ; ret
0x000000000009bb97 : lea edi, [rdi + 1] ; jne 0x9c459 ; ret
0x000000000009d24a : lea edi, [rdi + 1] ; jne 0x9dc79 ; ret
0x000000000009bbbb : lea edi, [rdi + 2] ; jne 0x9c459 ; ret
0x000000000009d26f : lea edi, [rdi + 2] ; jne 0x9dc79 ; ret
0x000000000009bbde : lea edi, [rdi + 3] ; jne 0x9c459 ; ret
0x000000000009d292 : lea edi, [rdi + 3] ; jne 0x9dc79 ; ret
0x000000000009bbf9 : lea edi, [rdi + 4] ; jne 0x9c459 ; ret
0x000000000009d2ad : lea edi, [rdi + 4] ; jne 0x9dc79 ; ret
0x000000000009bc1c : lea edi, [rdi + 5] ; jne 0x9c459 ; ret
0x000000000009d2d0 : lea edi, [rdi + 5] ; jne 0x9dc79 ; ret
0x000000000009bc41 : lea edi, [rdi + 6] ; jne 0x9c459 ; ret
0x000000000009d2f5 : lea edi, [rdi + 6] ; jne 0x9dc79 ; ret
0x000000000009bc5f : lea edi, [rdi + 7] ; jne 0x9c459 ; ret
0x000000000009d313 : lea edi, [rdi + 7] ; jne 0x9dc79 ; ret
0x000000000009bc7b : lea edi, [rdi + 8] ; jne 0x9c459 ; ret
0x000000000009d32f : lea edi, [rdi + 8] ; jne 0x9dc79 ; ret
0x000000000009bc9e : lea edi, [rdi + 9] ; jne 0x9c459 ; ret
0x000000000009d352 : lea edi, [rdi + 9] ; jne 0x9dc79 ; ret
0x0000000000081366 : lea edi, [rip + 0xfcf74] ; call 0x7ddb8
0x000000000008133b : lea edi, [rip + 0xfcfbc] ; call 0x7ddb8
0x00000000001049c0 : lea edi, [rip - 0x176] ; call rax
0x0000000000059f6b : lea edi, [rip - 0x659] ; add rax, rdi ; jmp rax
0x000000000007cb41 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000072a17 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000006295c : lea edx, [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000035b89 : lea edx, [rax - 1] ; mov dword ptr [rip + 0x37e616], edx ; ret
0x00000000000b3370 : lea edx, [rbx + 1] ; pop rbx ; mov rax, rdx ; ret
0x0000000000137934 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000001034fc : lea edx, [rcx + 0x70] ; call rax
0x000000000008d566 : lea edx, [rdx + rcx] ; jmp r10
0x00000000000fa7e3 : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000137d28 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000085cb3 : lea edx, [rip + 0x107d7] ; cmovne rax, rdx ; ret
0x00000000000861f3 : lea edx, [rip + 0x11eb7] ; cmovne rax, rdx ; ret
0x0000000000126636 : lea edx, [rip + 0x2e94] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000010527b : lea edx, [rip + 0x37a9f] ; cmovne rax, rdx ; ret
0x00000000001050db : lea edx, [rip + 0x37c5f] ; cmovne rax, rdx ; ret
0x00000000001051ab : lea edx, [rip + 0x3a65f] ; cmovne rax, rdx ; ret
0x0000000000085d23 : lea edx, [rip + 0xaf0c7] ; cmovne rax, rdx ; ret
0x000000000008622d : lea edx, [rip + 0xafe1d] ; cmovne rax, rdx ; ret
0x00000000000874eb : lea edx, [rip + 0xb585f] ; cmovne rax, rdx ; ret
0x00000000000871eb : lea edx, [rip + 0xb5b3f] ; cmovne rax, rdx ; ret
0x000000000008707b : lea edx, [rip + 0xb879f] ; cmovne rax, rdx ; ret
0x00000000000873cb : lea edx, [rip + 0xbaf6f] ; cmovne rax, rdx ; ret
0x000000000008732b : lea edx, [rip + 0xbafff] ; cmovne rax, rdx ; ret
0x000000000008741b : lea edx, [rip + 0xbd06f] ; cmovne rax, rdx ; ret
0x000000000008737b : lea edx, [rip + 0xbd0ff] ; cmovne rax, rdx ; ret
0x00000000000a1e88 : lea edx, [rip + 0xbe262] ; cmovne rax, rdx ; ret
0x0000000000085d63 : lea edx, [rip + 0xc0c77] ; cmovne rax, rdx ; ret
0x0000000000086263 : lea edx, [rip + 0xc1f27] ; cmovne rax, rdx ; ret
0x00000000000872b3 : lea edx, [rip + 0xc3a57] ; cmovne rax, rdx ; ret
0x00000000000872e3 : lea edx, [rip + 0xc5237] ; cmovne rax, rdx ; ret
0x0000000000086fe8 : lea edx, [rip + 0xd7992] ; cmovne rax, rdx ; ret
0x0000000000085cef : lea edx, [rip + 0xd896b] ; cmovne rax, rdx ; ret
0x00000000000a30ae : lea edx, [rip + 0xf56c] ; cmovne rax, rdx ; ret
0x00000000000571a9 : lea edx, [rip - 0x30d] ; add rax, rdx ; jmp rax
0x00000000000ef74a : lea edx, [rsi + 1] ; jne 0xef726 ; ret
0x00000000000d7831 : lea edx, [rsi + rdx + 2] ; lea ecx, [rbx - 2] ; add rdx, rcx ; jmp 0xd7853
0x00000000000ed476 : lea edx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x000000000011cc11 : lea esi, [rbp + 0x10] ; mov rdi, rbx ; call 0x129628
0x000000000011cc01 : lea esi, [rbp + 8] ; mov rdi, rbx ; call 0x129628
0x000000000011cb79 : lea esi, [rbx + 8] ; mov rdi, rbp ; call 0x129628
0x0000000000071250 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002fba : lea esi, [rdi] ; ret 0x793b
0x000000000004ce59 : lea esi, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000006efc7 : lea esi, [rip + 0x1d3] ; mov rdi, rbp ; call rax
0x0000000000042164 : lea esi, [rip + 0x336] ; call rax
0x00000000001019f0 : lea esi, [rip + 0x7e3b5] ; call 0x2e488
0x000000000007c1cf : lea esi, [rip - 0x1615] ; call rax
0x000000000004f2d4 : lea esi, [rip - 0x161a] ; add rax, rsi ; jmp rax
0x000000000007c4d5 : lea esi, [rip - 0x191b] ; call rax
0x000000000006f332 : lea esi, [rip - 0x198] ; call rax
0x000000000007c838 : lea esi, [rip - 0x1c7e] ; call rax
0x000000000004dead : lea esi, [rip - 0x1f3] ; add rax, rsi ; jmp rax
0x000000000007afbf : lea esi, [rip - 0x405] ; call rax
0x000000000004e6ae : lea esi, [rip - 0x9f4] ; add rax, rsi ; jmp rax
0x000000000004e83f : lea esi, [rip - 0xb85] ; add rax, rsi ; jmp rax
0x000000000007acb1 : lea esi, [rip - 0xf7] ; call rax
0x000000000009ff8f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000129731 : lea esi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000011e5f8 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x00000000001081b0 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x0000000000114d98 : lea esi, [rsp] ; shl rsi, 3 ; call 0x21029
0x00000000000c2ae9 : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000370c1 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000003795b : lea esp, [rbx + rax*8 + 8] ; nop ; call qword ptr [rbx]
0x000000000008d565 : lea r10, [r10 + r9] ; jmp r10
0x000000000003795a : lea r12, [rbx + rax*8 + 8] ; nop ; call qword ptr [rbx]
0x00000000000e0c62 : lea r8, [rax + r13] ; call r12
0x000000000004d655 : lea r8, [rip + 0x1297a4] ; jmp rax
0x000000000013785f : lea r9, [r11 + r9] ; jmp r9
0x0000000000075043 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000074e4f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000a2311 : lea r9, [rsp + 0x18] ; lea rcx, [rax + 4] ; call rbx
0x0000000000074d6a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000011c6b0 : lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000011c8b7 : lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000a269d : lea r9, [rsp + 0x20] ; call rbx
0x00000000000a24cb : lea r9, [rsp + 0x28] ; call r12
0x00000000000a21b5 : lea r9, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x00000000000a2ba6 : lea r9, [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000af011 : lea r9, [rsp + 0x30] ; call r12
0x00000000000a28ab : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000126e8a : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000011cdc8 : lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000a24ca : lea r9, ds:[rsp + 0x28] ; call r12
0x00000000000b32d3 : lea rax, [r8 + rax*4] ; ret
0x00000000000c5d11 : lea rax, [rax + rax - 1] ; ret
0x00000000000906e3 : lea rax, [rax + rdi + 0x10] ; ret
0x00000000000906f3 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000090bc3 : lea rax, [rax + rdi + 0x30] ; ret
0x00000000000906c3 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000bf0e1 : lea rax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011e0ea : lea rax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c8f00 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8df0 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095fcc : lea rax, [rcx + rsi] ; ret
0x000000000009fb73 : lea rax, [rcx - 1] ; ret
0x000000000009cacb : lea rax, [rdi + 0x10] ; ret
0x000000000009cae0 : lea rax, [rdi + 0x11] ; ret
0x000000000009cafe : lea rax, [rdi + 0x12] ; ret
0x000000000009cb1e : lea rax, [rdi + 0x13] ; ret
0x000000000009cb41 : lea rax, [rdi + 0x14] ; ret
0x000000000009cb60 : lea rax, [rdi + 0x15] ; ret
0x000000000009cb80 : lea rax, [rdi + 0x16] ; ret
0x000000000009cba0 : lea rax, [rdi + 0x17] ; ret
0x000000000009cbc3 : lea rax, [rdi + 0x18] ; ret
0x000000000009cbe8 : lea rax, [rdi + 0x19] ; ret
0x000000000009cc06 : lea rax, [rdi + 0x1a] ; ret
0x000000000009cc26 : lea rax, [rdi + 0x1b] ; ret
0x000000000009cc42 : lea rax, [rdi + 0x1c] ; ret
0x000000000009cc62 : lea rax, [rdi + 0x1d] ; ret
0x000000000009cc82 : lea rax, [rdi + 0x1e] ; ret
0x000000000009cca2 : lea rax, [rdi + 0x1f] ; ret
0x000000000009db02 : lea rax, [rdi + 0x20] ; ret
0x000000000009dd68 : lea rax, [rdi + 0x40] ; ret
0x000000000009ca1c : lea rax, [rdi + 0xa] ; ret
0x000000000009ca3c : lea rax, [rdi + 0xb] ; ret
0x000000000009ca5e : lea rax, [rdi + 0xc] ; ret
0x000000000009ca7e : lea rax, [rdi + 0xd] ; ret
0x000000000009ca9e : lea rax, [rdi + 0xe] ; ret
0x000000000009cab8 : lea rax, [rdi + 0xf] ; ret
0x000000000009c966 : lea rax, [rdi + 1] ; ret
0x000000000009c979 : lea rax, [rdi + 2] ; ret
0x000000000009c984 : lea rax, [rdi + 3] ; ret
0x000000000009c997 : lea rax, [rdi + 4] ; ret
0x000000000009c9ac : lea rax, [rdi + 5] ; ret
0x000000000009c9ca : lea rax, [rdi + 6] ; ret
0x000000000009c9d6 : lea rax, [rdi + 7] ; ret
0x000000000009c9e9 : lea rax, [rdi + 8] ; ret
0x000000000009c9fe : lea rax, [rdi + 9] ; ret
0x0000000000090718 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000090728 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000090622 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000159594 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000008d0d5 : lea rax, [rdi + rax - 1] ; mov qword ptr [rdi], rdx ; ret
0x000000000008d0c3 : lea rax, [rdi + rax - 1] ; ret
0x0000000000095c16 : lea rax, [rdi + rax] ; ret
0x0000000000155229 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000113d6f : lea rax, [rdi + rsi + 8] ; ret
0x000000000002d834 : lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000095ec8 : lea rax, [rdi + rsi] ; ret
0x00000000000b247d : lea rax, [rdi - 0x10] ; ret
0x00000000000b25e0 : lea rax, [rdi - 0xc] ; ret
0x00000000000b2600 : lea rax, [rdi - 4] ; ret
0x00000000000b25f0 : lea rax, [rdi - 8] ; ret
0x000000000009c952 : lea rax, [rdi] ; ret
0x000000000014c48c : lea rax, [rdx + 0xa] ; ret
0x000000000014c4ac : lea rax, [rdx + 0xb] ; ret
0x000000000014c4ce : lea rax, [rdx + 0xc] ; ret
0x000000000014c4ee : lea rax, [rdx + 0xd] ; ret
0x000000000014c50e : lea rax, [rdx + 0xe] ; ret
0x000000000014c39e : lea rax, [rdx + 0xf] ; ret
0x000000000014c3c6 : lea rax, [rdx + 1] ; ret
0x000000000014c3dc : lea rax, [rdx + 2] ; ret
0x000000000014c3f4 : lea rax, [rdx + 3] ; ret
0x000000000014c40a : lea rax, [rdx + 4] ; ret
0x000000000014c41c : lea rax, [rdx + 5] ; ret
0x000000000014c43a : lea rax, [rdx + 6] ; ret
0x000000000014c346 : lea rax, [rdx + 7] ; ret
0x000000000014c44c : lea rax, [rdx + 8] ; ret
0x000000000014c46c : lea rax, [rdx + 9] ; ret
0x0000000000083960 : lea rax, [rdx - 0x10] ; ret
0x0000000000083947 : lea rax, [rdx - 8] ; ret
0x000000000014c3b4 : lea rax, [rdx] ; ret
0x000000000002cb3f : lea rax, [rip + 0x150733] ; ret
0x0000000000021b80 : lea rax, [rip + 0x15b244] ; ret
0x0000000000021b90 : lea rax, [rip + 0x15d081] ; ret
0x00000000000ef4d3 : lea rax, [rip + 0x2c7be6] ; pop rbx ; ret
0x00000000000f4b88 : lea rax, [rip + 0x8a249] ; pop rbx ; ret
0x00000000000a1ea3 : lea rax, [rip + 0xb8246] ; je 0xa1e76 ; ret
0x0000000000087003 : lea rax, [rip + 0xcec26] ; je 0x86fd6 ; ret
0x0000000000058d89 : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x58d67
0x00000000000b25b9 : lea rax, es:[rdi - 0x10] ; ret
0x00000000000e4da2 : lea rbp, [r12 + rax] ; mov rdi, rbp ; call 0x21089
0x0000000000165d58 : lea rbp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000364e3 : lea rbp, [rdi + rax] ; mov rdi, rbp ; call r12
0x000000000009b20d : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a21ba : lea rcx, [rax + 1] ; call rbx
0x00000000000a2316 : lea rcx, [rax + 4] ; call rbx
0x00000000000a2715 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000070555 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000083955 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000084a08 : lea rcx, [rip + 0xf886a] ; mov rdx, rcx ; jmp 0x849af
0x00000000000faa06 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000011be2e : lea rdi, [rax + 0x18] ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012294d : lea rdi, [rbp + 0x10] ; call rax
0x0000000000055008 : lea rdi, [rbx + 0x10] ; call 0x212c6
0x0000000000125211 : lea rdi, [rbx + 0x58] ; call rax
0x0000000000124781 : lea rdi, [rbx + 0x68] ; call rax
0x0000000000121d24 : lea rdi, [rbx + 0xc8] ; call rax
0x0000000000081365 : lea rdi, [rip + 0xfcf74] ; call 0x7ddb9
0x000000000008133a : lea rdi, [rip + 0xfcfbc] ; call 0x7ddb9
0x00000000001049bf : lea rdi, [rip - 0x176] ; call rax
0x0000000000137933 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b336f : lea rdx, [rbx + 1] ; pop rbx ; mov rax, rdx ; ret
0x00000000001034fb : lea rdx, [rcx + 0x70] ; call rax
0x00000000000fa7e2 : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000137d27 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000000ef749 : lea rdx, [rsi + 1] ; jne 0xef727 ; ret
0x000000000011e5f7 : lea rsi, [r12 + 8] ; call qword ptr [rax]
0x000000000011cc10 : lea rsi, [rbp + 0x10] ; mov rdi, rbx ; call 0x129629
0x000000000011cc00 : lea rsi, [rbp + 8] ; mov rdi, rbx ; call 0x129629
0x000000000011cb78 : lea rsi, [rbx + 8] ; mov rdi, rbp ; call 0x129629
0x0000000000042163 : lea rsi, [rip + 0x336] ; call rax
0x00000000001019ef : lea rsi, [rip + 0x7e3b5] ; call 0x2e489
0x000000000007c1ce : lea rsi, [rip - 0x1615] ; call rax
0x000000000007c4d4 : lea rsi, [rip - 0x191b] ; call rax
0x000000000006f331 : lea rsi, [rip - 0x198] ; call rax
0x000000000007c837 : lea rsi, [rip - 0x1c7e] ; call rax
0x000000000007afbe : lea rsi, [rip - 0x405] ; call rax
0x000000000007acb0 : lea rsi, [rip - 0xf7] ; call rax
0x000000000009ff8e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000129730 : lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000129721 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x00000000000c2ae8 : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000104f1 : leave ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001374c7 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001883d5 : leave ; add byte ptr [rax], al ; push rsp ; ret
0x00000000001883cd : leave ; add byte ptr [rax], al ; ret 0xffee
0x00000000000c7f85 : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000018b1fd : leave ; add dword ptr [rax], eax ; hlt ; retf 0xfff7
0x000000000018b1e5 : leave ; add dword ptr [rax], eax ; retf 0xfff7
0x000000000018b1ed : leave ; add dword ptr [rax], eax ; xchg eax, esp ; retf 0xfff7
0x0000000000001520 : leave ; add eax, 0 ; add byte ptr [rax], al ; retf
0x0000000000151197 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000035601 : leave ; add edi, esi ; ret 0
0x0000000000034131 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000002a0ba : leave ; call r15
0x0000000000002ca0 : leave ; clc ; ret
0x0000000000178935 : leave ; cld ; inc eax ; retf
0x0000000000185f39 : leave ; cld ; jmp rax
0x000000000009fe36 : leave ; cmove rax, rdx ; ret
0x000000000018a919 : leave ; idiv bh ; adc al, 0x9f ; add dword ptr [rax], eax ; retf 0xfff6
0x000000000007d6df : leave ; imul esi, dword ptr [rbx], 0 ; ret
0x0000000000178f1c : leave ; jbe 0x178f13 ; call qword ptr [rsi]
0x0000000000178f1c : leave ; jbe 0x178f14 ; call qword ptr [rsi]
0x0000000000165052 : leave ; je 0x16505a ; call rcx
0x000000000002b537 : leave ; je 0x2b53f ; call rcx
0x0000000000035a7c : leave ; je 0x35a74 ; ret
0x0000000000075330 : leave ; je 0x75367 ; mov eax, edx ; pop rbx ; ret
0x000000000008cf13 : leave ; jmp rcx
0x0000000000115a4c : leave ; jne 0x115a30 ; ret
0x000000000008cd29 : leave ; jne 0x8cd1c ; ret
0x000000000008ce78 : leave ; jne 0x8ce6e ; xor eax, eax ; ret
0x000000000009f950 : leave ; jne 0x9f943 ; ret
0x000000000009fa00 : leave ; jne 0x9f9f3 ; ret
0x000000000009fcc0 : leave ; jne 0x9fcb7 ; sub rax, 1 ; ret
0x00000000000a1c5c : leave ; jne 0xa1c54 ; ret
0x00000000000a1d2f : leave ; jne 0xa1d28 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000b28ba : leave ; jne 0xb2877 ; mov rax, rdx ; ret
0x00000000000fedc3 : leave ; jne 0xfedb4 ; ret
0x0000000000155228 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000009ab31 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a0b14 : leave ; mov dword ptr [rdx], ecx ; jne 0xa0b0e ; ret
0x0000000000084360 : leave ; mov dword ptr fs:[rax], 0xc ; jmp 0x8433e
0x0000000000179458 : leave ; out 0xf3, al ; dec edi ; in al, 0xf3 ; jmp qword ptr [rcx]
0x0000000000046c03 : leave ; ret
0x00000000000f0e43 : leave ; ret 0xfff7
0x00000000000f4693 : leave ; retf
0x0000000000174261 : leave ; retf 0x6ee8
0x0000000000172a49 : leave ; retf 0xcccb
0x00000000000b47fb : leave ; retf 0xfff6
0x000000000012c7d3 : leave ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x16efdbac], cl ; ret
0x00000000001787a9 : leave ; sti ; jmp rax
0x000000000010bbbd : leave ; sub al, byte ptr [rax] ; add ecx, ebp ; retf 0xfffd
0x00000000000a269a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000f80e2 : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x00000000000f7eb2 : leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000001897eb : ljmp [rax + 0x1400013d] ; xchg eax, ecx ; jmp rsp
0x000000000018b8eb : ljmp [rax + 0x340001f1] ; scasd eax, dword ptr [rdi] ; clc ; call rsp
0x000000000018887b : ljmp [rax + 0x40000e5] ; push rax ; out dx, eax ; call rsp
0x0000000000188ebb : ljmp [rax + 0x4000107] ; sbb eax, esi ; call rsp
0x00000000001863cf : ljmp [rax + 0x58] ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x0000000000189a0b : ljmp [rax + 0x6400014b] ; in al, 0xf3 ; call rax
0x0000000000189b6b : ljmp [rax + 0x74000152] ; hlt ; call rsp
0x000000000017c91b : ljmp [rax + 0x7b] ; cli ; call rax
0x000000000018978b : ljmp [rax - 0x2bfffec5] ; mov esi, ebx ; call rax
0x0000000000179beb : ljmp [rax - 0x3d] ; hlt ; push rax ; ret 0xfff4
0x0000000000165f1f : ljmp [rax - 0x3e] ; jmp 0x165f25
0x000000000018b07b : ljmp [rax - 0x4bfffe3f] ; jp 0x18b082 ; call rsp
0x000000000017a61b : ljmp [rbp + 0x20fff594] ; xchg eax, esi ; cmc ; jmp qword ptr [rax]
0x00000000001860cf : ljmp [rbp - 0x1e00028f] ; jae 0x1860dc ; jmp rcx
0x000000000018b6db : ljmp [rbx + 0x45d40001] ; clc ; call rsp
0x0000000000172b87 : ljmp [rbx + 1] ; in al, dx ; call qword ptr [rbx]
0x0000000000172b83 : ljmp [rbx + 1] ; in al, dx ; ljmp [rbx + 1] ; in al, dx ; call qword ptr [rbx]
0x000000000018c0e3 : ljmp [rbx - 0x3d4bfffe] ; stc ; call rax
0x000000000018b693 : ljmp [rcx + 0x37d40001] ; clc ; call rsp
0x000000000017ac95 : ljmp [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00000000000da35b : ljmp [rcx] ; ret 0x6348
0x00000000000be716 : ljmp [rcx] ; ret 0xf44
0x0000000000179b57 : ljmp [rcx] ; xor esi, esp ; jmp qword ptr [rbx]
0x000000000008732d : ljmp [rdi + 0xf48000b] ; ret 0xc3f3
0x00000000000f4b00 : ljmp [rdi] ; jne 0xf4b34 ; mov rdx, rax ; jmp 0xf4b1c
0x000000000018cdab : ljmp [rdx + rbx + 0x75a40001] ; std ; call rax
0x0000000000186e8f : ljmp [rdx - 0x59] ; sti ; call qword ptr [rax]
0x00000000000881c6 : ljmp [rdx] ; cmp rdx, rsi ; jne 0x881c8 ; ret
0x000000000018600f : ljmp [rsi + 0x66] ; std ; inc dword ptr [rsi] ; pop rbp ; std ; call rsi
0x000000000018614f : ljmp [rsi + 0x73] ; std ; jmp rcx
0x000000000018b643 : ljmp [rsi + rbx*8 + 1] ; add byte ptr [rcx], ah ; clc ; jmp rsp
0x000000000018bd83 : ljmp [rsi + rcx + 2] ; add byte ptr [rsi + rdx*2 - 7], dl ; call rax
0x000000000017998f : ljmp [rsi - 0x1000bba] ; hlt ; call qword ptr [rdi]
0x0000000000186c0b : ljmp [rsi] ; mov dl, 0xfb ; call rsp
0x000000000018b833 : ljmp [rsp + rbp*8 - 0x76ebffff] ; clc ; call rsp
0x000000000018bd43 : ljmp [rsp + rcx + 0x4d940002] ; stc ; jmp rax
0x000000000018664b : ljmp [rsp + rcx*4] ; sti ; call rdx
0x0000000000022c35 : lock adc byte ptr [rax], al ; mov rdi, rbx ; call r15
0x00000000000d4bcb : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000d593e : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015b42e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000085b46 : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000000ed198 : lock and byte ptr [rax - 0x77], cl ; ret
0x0000000000112dd8 : lock dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000011bd7a : lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; retf 0x29d1
0x000000000013284b : lock inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000011ed59 : lock inc dword ptr [rbx - 0x76b79c03] ; ret
0x0000000000150290 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000006db70 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d4f76 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000015fb60 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a1724 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], r8d ; test al, 0x58 ; cmc ; jmp qword ptr [rcx]
0x00000000000a5b87 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x0000000000127817 : lodsb al, byte ptr [rsi] ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000185ee5 : lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000185ee1 : lodsb al, byte ptr [rsi] ; cld ; push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x000000000019f061 : lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000018b834 : lodsb al, byte ptr [rsi] ; in al, dx ; add dword ptr [rax], eax ; adc al, 0x89 ; clc ; call rsp
0x000000000018b6dc : lodsb al, byte ptr [rsi] ; jrcxz 0x18b6e7 ; add ah, dl ; clc ; call rsp
0x000000000019fba4 : lodsb al, byte ptr [rsi] ; jrcxz 0x19fb9e ; call qword ptr [rsi]
0x0000000000175986 : lodsb al, byte ptr [rsi] ; loop 0x175953 ; retf
0x0000000000198424 : lodsb al, byte ptr [rsi] ; mov ah, 0 ; add byte ptr [rax - 0x40], bl ; cli ; call qword ptr [rax]
0x000000000018a4c4 : lodsb al, byte ptr [rsi] ; mov dword ptr [rcx], eax ; add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rax
0x000000000019eee4 : lodsb al, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001508b4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017673d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000d241b : lodsb al, byte ptr [rsi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a3a24 : lodsb al, byte ptr [rsi] ; push 1 ; add byte ptr [rax], cl ; add dh, dh ; jmp qword ptr [rbx]
0x0000000000066cd7 : lodsb al, byte ptr [rsi] ; retf
0x00000000001997c4 : lodsb al, byte ptr [rsi] ; sbb dh, cl ; call qword ptr [rax]
0x0000000000105263 : lodsb al, byte ptr [rsi] ; stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000198451 : lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000186ced : lodsb al, byte ptr [rsi] ; sti ; jmp rax
0x000000000010183c : lodsb al, byte ptr [rsi] ; sub ebp, dword ptr [rbx] ; add al, ch ; retf
0x0000000000173fbb : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000019f09c : lodsb al, byte ptr fs:[rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000003a66c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007551f : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000185ee9 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00000000001860d0 : lodsd eax, dword ptr [rsi] ; jno 0x1860d3 ; jmp rcx
0x0000000000189509 : lodsd eax, dword ptr [rsi] ; lcall [rax - 0x6bfffed3] ; mov al, 0xf2 ; call rsp
0x0000000000175d65 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000154420 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000045cd2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000005b4af : lodsd eax, dword ptr [rsi] ; retf
0x0000000000105193 : lodsd eax, dword ptr [rsi] ; stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000187021 : lodsd eax, dword ptr [rsi] ; std ; call rax
0x0000000000186ce5 : lodsd eax, dword ptr [rsi] ; sti ; jmp rax
0x00000000000f957a : lodsd eax, dword ptr [rsi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f95a4 : lodsd eax, dword ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000017a61c : lodsd eax, dword ptr [rsi] ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x000000000003a66b : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000187020 : lodsq rax, qword ptr [rsi] ; std ; call rax
0x0000000000100b08 : loop 0x100b0f ; jmp 0x100ad2
0x0000000000126819 : loop 0x1267ab ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001269bd : loop 0x12694f ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000013ea5a : loop 0x13ea55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013ea59 : loop 0x13ea56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000014157a : loop 0x141575 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141579 : loop 0x141576 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000175987 : loop 0x175952 ; retf
0x0000000000176ada : loop 0x176b2f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000017941d : loop 0x179414 ; call qword ptr [rsi]
0x00000000001899c1 : loop 0x1899b8 ; jmp rsp
0x00000000001899d9 : loop 0x1899d0 ; jmp qword ptr [rax]
0x000000000018b371 : loop 0x18b36c ; jmp rsp
0x000000000018ce79 : loop 0x18ce7a ; call qword ptr [rax]
0x000000000018ce78 : loop 0x18ce7b ; call qword ptr [rax]
0x000000000018e20d : loop 0x18e1fa ; call qword ptr [rdx]
0x000000000019fafd : loop 0x19faf5 ; jmp qword ptr [rcx]
0x00000000001af040 : loop 0x1af04d ; add byte ptr [rax], al ; jnp 0x1af054 ; add byte ptr [rax], al ; ret 4
0x00000000000224d6 : loop 0x2245d ; retf 0x8508
0x000000000000265d : loop 0x2637 ; ret 0x943d
0x0000000000002cae : loop 0x2cc1 ; retf
0x0000000000038097 : loop 0x380c0 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000045098 : loop 0x450b1 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000058c38 : loop 0x58c3e ; dec dword ptr [rcx + 0x63] ; ret
0x000000000006b92a : loop 0x6b8bc ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000007fb62 : loop 0x7fb6c ; dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000084597 : loop 0x845e5 ; mov edi, ecx ; call rax
0x000000000008ebbd : loop 0x8ebf5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000009be6a : loop 0x9be75 ; add byte ptr [rax], al ; ret
0x00000000000a056f : loop 0xa0589 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000a1e8b : loop 0xa1e9e ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000a1e8b : loop 0xa1ea0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000a1ff9 : loop 0xa2006 ; mov rax, rdi ; jne 0xa2015 ; ret
0x00000000000b6113 : loop 0xb6100 ; retf 0xffff
0x00000000000b6cf2 : loop 0xb6c85 ; enter -0x2fd7, -0x2f ; call 0xffffffffeacd2f06
0x00000000000c5c5c : loop 0xc5c91 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000df3af : loop 0xdf3c2 ; retf 0x8348
0x00000000000ed69e : loop 0xed666 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000000fe5f0 : loop 0xfe5dc ; retf 0xf22a
0x0000000000109b91 : loope 0x109b9b ; add byte ptr [rbx - 0x16f7dbbc], cl ; ret 0xfffd
0x00000000001130ee : loope 0x1130dd ; retf
0x00000000001131ce : loope 0x1131bd ; ret
0x000000000011f1db : loope 0x11f22b ; mov edi, ebp ; call 0x11b4d6
0x0000000000121cee : loope 0x121c83 ; ret
0x000000000013e9ca : loope 0x13e9c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013e9c9 : loope 0x13e9c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001414ea : loope 0x1414e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001414e9 : loope 0x1414e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000149ffb : loope 0x14a002 ; add byte ptr [rax], al ; ret
0x000000000015e88b : loope 0x15e895 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000016177b : loope 0x161768 ; ret
0x00000000001651de : loope 0x165240 ; pop rbp ; pop r12 ; ret
0x00000000001654f6 : loope 0x165555 ; ret
0x0000000000175a91 : loope 0x175b13 ; pop rdx ; leave ; retf
0x000000000017b369 : loope 0x17b373 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001860d4 : loope 0x18614c ; std ; jmp rcx
0x00000000001860d8 : loope 0x186150 ; std ; jmp rcx
0x00000000001860dc : loope 0x186158 ; std ; jmp qword ptr [rcx - 0x1e00028f]
0x00000000001860e4 : loope 0x18615c ; std ; jmp rcx
0x00000000001860e8 : loope 0x186160 ; std ; jmp rcx
0x00000000001860ec : loope 0x186168 ; std ; push qword ptr [rsi + 0x71] ; std ; jmp rcx
0x00000000001860f4 : loope 0x18616c ; std ; jmp rcx
0x00000000001860f8 : loope 0x186170 ; std ; jmp rcx
0x00000000001860fc : loope 0x186178 ; std ; call qword ptr [rax - 0x1e00028f]
0x0000000000186104 : loope 0x18617c ; std ; jmp rcx
0x0000000000186108 : loope 0x186180 ; std ; jmp rcx
0x0000000000186114 : loope 0x18618c ; std ; jmp rcx
0x0000000000186118 : loope 0x186190 ; std ; jmp rcx
0x000000000018611c : loope 0x186198 ; std ; inc dword ptr [rcx] ; jb 0x186127 ; jmp rcx
0x0000000000186124 : loope 0x18619c ; std ; jmp rcx
0x0000000000186128 : loope 0x1861a0 ; std ; jmp rcx
0x0000000000186134 : loope 0x1861ac ; std ; jmp rcx
0x0000000000186138 : loope 0x1861b0 ; std ; jmp rcx
0x000000000018613c : loope 0x1861b8 ; std ; inc dword ptr [rcx] ; jae 0x186147 ; jmp rcx
0x0000000000186144 : loope 0x1861bc ; std ; jmp rcx
0x0000000000186148 : loope 0x1861c0 ; std ; jmp rcx
0x000000000018614c : loope 0x1861c8 ; std ; ljmp [rsi + 0x73] ; std ; jmp rcx
0x0000000000186154 : loope 0x1861cc ; std ; jmp rcx
0x0000000000186158 : loope 0x1861d0 ; std ; jmp rcx
0x000000000018615c : loope 0x1861d4 ; std ; jmp rsi
0x0000000000186164 : loope 0x1861dc ; std ; jmp rcx
0x0000000000186168 : loope 0x1861e0 ; std ; jmp rcx
0x0000000000186174 : loope 0x1861ec ; std ; jmp rcx
0x0000000000186178 : loope 0x1861f0 ; std ; jmp rcx
0x000000000018617c : loope 0x1861f4 ; std ; jmp rsi
0x0000000000186184 : loope 0x1861fc ; std ; jmp rcx
0x0000000000186188 : loope 0x186200 ; std ; jmp rcx
0x0000000000186194 : loope 0x18620c ; std ; jmp rcx
0x0000000000186198 : loope 0x186210 ; std ; jmp rcx
0x000000000018619c : loope 0x186218 ; std ; dec ebx ; jno 0x1861a7 ; jmp rcx
0x00000000001861a4 : loope 0x18621c ; std ; jmp rcx
0x00000000001861a8 : loope 0x186220 ; std ; jmp rcx
0x00000000001861ac : loope 0x186228 ; std ; dec dword ptr [rbx + 0x72] ; std ; jmp rcx
0x00000000001861b4 : loope 0x18622c ; std ; jmp rcx
0x00000000001861b8 : loope 0x186230 ; std ; jmp rcx
0x00000000001861bc : loope 0x186238 ; std ; dec ebx ; jb 0x1861c7 ; jmp rcx
0x00000000001861c4 : loope 0x18623c ; std ; jmp rcx
0x00000000001861c8 : loope 0x186240 ; std ; jmp rcx
0x00000000001861cc : loope 0x186248 ; std ; inc dword ptr [rax + 0x73] ; std ; jmp rcx
0x00000000001861d4 : loope 0x18624c ; std ; jmp rcx
0x00000000001861d8 : loope 0x186250 ; std ; jmp rcx
0x00000000001861e4 : loope 0x18625c ; std ; jmp rcx
0x00000000001861e8 : loope 0x186260 ; std ; jmp rcx
0x00000000001861ec : loope 0x186268 ; std ; push qword ptr [rax] ; jb 0x1861f7 ; jmp rcx
0x00000000001861f4 : loope 0x18626c ; std ; jmp rcx
0x00000000001861f8 : loope 0x186270 ; std ; jmp rcx
0x0000000000186204 : loope 0x18627c ; std ; jmp rcx
0x0000000000186208 : loope 0x186280 ; std ; jmp rcx
0x000000000018620c : loope 0x186288 ; std ; lcall [rax + 0x30] ; sti ; jmp qword ptr [rax]
0x0000000000187779 : loope 0x187767 ; call rax
0x00000000001887ad : loope 0x1887b5 ; add byte ptr [rbx + rax*2 - 0x11], dl ; call rax
0x000000000018b369 : loope 0x18b364 ; call rax
0x000000000018ba49 : loope 0x18ba45 ; jmp rax
0x0000000000002736 : loope 0x26f1 ; hlt ; out 0xdf, eax ; syscall
0x00000000000037b2 : loope 0x37d8 ; retf 0x5038
0x0000000000045376 : loope 0x45336 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000045456 : loope 0x45416 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000045b67 : loope 0x45bb9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000045b98 : loope 0x45beb ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000045c0d : loope 0x45c60 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000049226 : loope 0x49279 ; mov esi, ebx ; mov rdi, rbx ; call 0x454d9
0x00000000000756b1 : loope 0x75686 ; mov dword ptr [rdi], ecx ; ret
0x000000000007a6b6 : loope 0x7a6bc ; dec dword ptr [rax + 0x39] ; ret
0x000000000009f849 : loope 0x9f8b8 ; nop dword ptr [rax + rax] ; ret
0x00000000000a0a7e : loope 0xa0a75 ; ret
0x00000000000b2abe : loope 0xb2ad3 ; je 0xb2ae4 ; ret
0x00000000000c5cf9 : loope 0xc5cb9 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c5c94 : loope 0xc5cc9 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000c8c9f : loope 0xc8c26 ; retf 0xeb04
0x00000000000d1b50 : loope 0xd1ad9 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d1b50 : loope 0xd1adb ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d1b24 : loope 0xd1b29 ; add esi, esi ; ret
0x00000000000d8523 : loope 0xd8528 ; add esi, esi ; ret
0x00000000000e50a5 : loope 0xe50f9 ; mov edi, edi ; call 0x212ce
0x00000000000eed0a : loope 0xeed11 ; mov eax, 0xa9 ; syscall
0x00000000001000d2 : loopne 0x100139 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010394b : loopne 0x103950 ; ret
0x00000000001039ef : loopne 0x1039af ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000104048 : loopne 0x10405d ; cmp eax, 4 ; je 0x104057 ; ret
0x0000000000104211 : loopne 0x104224 ; pop rbp ; pop r12 ; ret
0x00000000001049be : loopne 0x104a10 ; lea edi, [rip - 0x176] ; call rax
0x0000000000112e8b : loopne 0x112eed ; pop rbp ; pop r12 ; ret
0x0000000000112e9d : loopne 0x112eff ; pop rbp ; pop r12 ; ret
0x0000000000112f34 : loopne 0x112f33 ; add eax, 0x10 ; ret
0x00000000001134e0 : loopne 0x1134d7 ; ret
0x0000000000113d3b : loopne 0x113d49 ; shr rax, 4 ; and eax, 0x7f ; ret
0x0000000000113d42 : loopne 0x113dc5 ; ret
0x000000000011907e : loopne 0x1190fe ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011b5f1 : loopne 0x11b661 ; nop dword ptr [rax + rax] ; ret
0x0000000000127127 : loopne 0x127130 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000137d81 : loopne 0x137d98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000137d80 : loopne 0x137d99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000137ed1 : loopne 0x137ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000137ed0 : loopne 0x137ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138021 : loopne 0x138038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138020 : loopne 0x138039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138171 : loopne 0x138188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138170 : loopne 0x138189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001382c1 : loopne 0x1382d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001382c0 : loopne 0x1382d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138411 : loopne 0x138428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138410 : loopne 0x138429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138561 : loopne 0x138578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138560 : loopne 0x138579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001386af : loopne 0x1386c6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001386ae : loopne 0x1386c7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138801 : loopne 0x138818 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138800 : loopne 0x138819 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138951 : loopne 0x138968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138950 : loopne 0x138969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138aa1 : loopne 0x138ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138aa0 : loopne 0x138ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138bf1 : loopne 0x138c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138bf0 : loopne 0x138c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138d41 : loopne 0x138d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138d40 : loopne 0x138d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138e91 : loopne 0x138ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138e90 : loopne 0x138ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138fe1 : loopne 0x138ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000138fe0 : loopne 0x138ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013a751 : loopne 0x13a768 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013a750 : loopne 0x13a769 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013a8a1 : loopne 0x13a8b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013a8a0 : loopne 0x13a8b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013a9f1 : loopne 0x13aa08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013a9f0 : loopne 0x13aa09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ab41 : loopne 0x13ab58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ab40 : loopne 0x13ab59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ac91 : loopne 0x13aca8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ac90 : loopne 0x13aca9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ade1 : loopne 0x13adf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013ade0 : loopne 0x13adf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013af31 : loopne 0x13af48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013af30 : loopne 0x13af49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b07f : loopne 0x13b096 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b07e : loopne 0x13b097 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b1d1 : loopne 0x13b1e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b1d0 : loopne 0x13b1e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b321 : loopne 0x13b338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b320 : loopne 0x13b339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b471 : loopne 0x13b488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b470 : loopne 0x13b489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b5c1 : loopne 0x13b5d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b5c0 : loopne 0x13b5d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b711 : loopne 0x13b728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b710 : loopne 0x13b729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b861 : loopne 0x13b878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b860 : loopne 0x13b879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b9b1 : loopne 0x13b9c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013b9b0 : loopne 0x13b9c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001656bf : loopne 0x1656b6 ; ret
0x0000000000165f14 : loopne 0x165ed9 ; jmp 0x165f18
0x00000000001740b4 : loopne 0x174094 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000177958 : loopne 0x177928 ; out dx, al ; dec dword ptr [rax - 0x3a] ; out dx, al ; dec dword ptr [rax] ; ret 0xffee
0x0000000000178900 : loopne 0x1788c6 ; int1 ; push qword ptr [rax] ; ret 0xfff1
0x00000000001789c4 : loopne 0x1789f7 ; inc dword ptr [rax] ; sub al, 0xf2 ; jmp qword ptr [rax]
0x00000000001789c4 : loopne 0x1789f8 ; inc dword ptr [rax] ; sub al, 0xf2 ; jmp qword ptr [rax]
0x0000000000179be4 : loopne 0x179bab ; hlt ; jmp rax
0x0000000000179be8 : loopne 0x179bb5 ; hlt ; ljmp [rax - 0x3d] ; hlt ; push rax ; ret 0xfff4
0x0000000000185ee8 : loopne 0x185e9a ; cld ; call rax
0x00000000001862c4 : loopne 0x186301 ; sti ; jmp rax
0x00000000001862c8 : loopne 0x186307 ; sti ; jmp rax
0x0000000000186504 : loopne 0x186568 ; sti ; jmp rax
0x0000000000186508 : loopne 0x18656e ; sti ; jmp rax
0x000000000018650c : loopne 0x186578 ; sti ; call qword ptr [rax - 0x2f0004c3]
0x000000000018c6f4 : loopne 0x18c741 ; add al, byte ptr [rax] ; in al, 0x65 ; cli ; call qword ptr [rax]
0x000000000018cabc : loopne 0x18ca91 ; add dword ptr [rax], eax ; fdiv st(2), st(0) ; dec dword ptr [rax] ; retf
0x0000000000194590 : loopne 0x1945c3 ; out dx, al ; jmp qword ptr [rdi]
0x0000000000195b58 : loopne 0x195aec ; add byte ptr [rax], al ; and al, 0x78 ; out dx, al ; call qword ptr [rdx]
0x0000000000198450 : loopne 0x198401 ; sti ; call qword ptr [rax]
0x000000000019f258 : loopne 0x19f283 ; add dword ptr [rax], eax ; in al, 0xbb ; hlt ; jmp rsi
0x000000000019ff58 : loopne 0x19ff90 ; add dword ptr [rax], eax ; in al, 0xeb ; hlt ; jmp qword ptr [rcx]
0x00000000001a0930 : loopne 0x1a0947 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1420 : loopne 0x1a145e ; cmc ; jmp qword ptr [rcx]
0x00000000001a1458 : loopne 0x1a14a5 ; add dword ptr [rax], eax ; xor al, 0x3a ; cmc ; jmp qword ptr [rcx]
0x00000000001a6658 : loopne 0x1a65f8 ; add dword ptr [rax], eax ; and al, 0xd7 ; idiv bh ; ret 0
0x00000000001a6d58 : loopne 0x1a6cff ; add dword ptr [rax], eax ; test byte ptr [rbx], cl ; idiv edi ; ret 0
0x000000000002dae3 : loopne 0x2daf2 ; movzx eax, ax ; ret
0x000000000002db23 : loopne 0x2db2c ; movzx eax, ax ; ret
0x000000000002dbc3 : loopne 0x2dbce ; movzx eax, ax ; ret
0x000000000002dca3 : loopne 0x2dca8 ; ret
0x000000000002dd1c : loopne 0x2dd21 ; ret
0x000000000002dd2c : loopne 0x2dd3b ; movzx eax, ax ; ret
0x000000000002dd6c : loopne 0x2dd75 ; movzx eax, ax ; ret
0x000000000002dcf3 : loopne 0x2dd76 ; ret
0x000000000002de0c : loopne 0x2de17 ; movzx eax, ax ; ret
0x000000000002e768 : loopne 0x2e7cc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033d97 : loopne 0x33d7e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000034495 : loopne 0x344a1 ; ret
0x000000000003460f : loopne 0x3467e ; movq mm0, qword ptr [rsp - 0x28] ; ret
0x0000000000034a14 : loopne 0x34a20 ; ret
0x00000000000358b4 : loopne 0x35904 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003bf94 : loopne 0x3bfa8 ; xchg eax, edx ; ret 0x294c
0x000000000003e964 : loopne 0x3e978 ; xchg eax, edx ; ret 0x294c
0x000000000004569d : loopne 0x456a6 ; sub eax, 1 ; ret
0x000000000004f2f8 : loopne 0x4f334 ; rol byte ptr [rcx - 0x47], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000005aefa : loopne 0x5aebb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000006c179 : loopne 0x6c1dd ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006cbe7 : loopne 0x6cc4d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006dc8c : loopne 0x6dc92 ; add byte ptr [rax], al ; jmp rax
0x000000000006dcc8 : loopne 0x6dcce ; add byte ptr [rax], al ; call rax
0x000000000006dc91 : loopne 0x6dce3 ; mov eax, 0xffffffff ; ret
0x000000000006dd1a : loopne 0x6dd20 ; add byte ptr [rax], al ; call rax
0x000000000006dd5c : loopne 0x6dd62 ; add byte ptr [rax], al ; jmp rax
0x000000000006dd61 : loopne 0x6ddd2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007185d : loopne 0x718c2 ; pop r12 ; pop r13 ; ret
0x000000000007276c : loopne 0x727d3 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000007280 : loopne 0x7302 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000756f9 : loopne 0x75702 ; mov edx, eax ; mov eax, edx ; ret
0x00000000000757b8 : loopne 0x757be ; mov edx, eax ; jmp 0x75770
0x00000000000757e9 : loopne 0x757f2 ; mov edx, eax ; mov eax, edx ; ret
0x00000000000758a8 : loopne 0x758ae ; mov edx, eax ; jmp 0x75860
0x0000000000076987 : loopne 0x769ec ; pop r12 ; pop r13 ; ret
0x0000000000077a9a : loopne 0x77afc ; pop rbp ; pop r12 ; ret
0x0000000000078106 : loopne 0x7810b ; ret
0x0000000000078116 : loopne 0x7811b ; ret
0x000000000007bb76 : loopne 0x7bbdd ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080581 : loopne 0x80595 ; xchg eax, esp ; ret 0x7de9
0x000000000008713c : loopne 0x870d6 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000008713c : loopne 0x870d8 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000889f3 : loopne 0x88a55 ; pop rbp ; pop r12 ; ret
0x0000000000088a05 : loopne 0x88a67 ; pop rbp ; pop r12 ; ret
0x0000000000089308 : loopne 0x89352 ; cmp bh, 0x3d ; jne 0x892d4 ; pop rbx ; ret
0x000000000009bf6c : loopne 0x9bf76 ; add byte ptr [rax], al ; ret
0x00000000000a04dd : loopne 0xa04f7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000b3bd1 : loopne 0xb3bd8 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000bf5ce : loopne 0xbf5d5 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000bf66a : loopne 0xbf671 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c8caf : loopne 0xc8c6f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ce813 : loopne 0xce818 ; ret
0x00000000000d1686 : loopne 0xd168b ; ret 0xc085
0x00000000000d1a81 : loopne 0xd1a8a ; add eax, 8 ; ret
0x00000000000d3d11 : loopne 0xd3d78 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d90d7 : loopne 0xd90e0 ; inc dword ptr [rbx - 0x76beff08] ; ret 0x8b4c
0x00000000000df815 : loopne 0xdf828 ; ret
0x00000000000e2a84 : loopne 0xe2aeb ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e75bc : loopne 0xe761e ; pop rbp ; pop r12 ; ret
0x00000000000e75cd : loopne 0xe762f ; pop rbp ; pop r12 ; ret
0x00000000000ef3ac : loopne 0xef40e ; pop rbp ; pop r12 ; ret
0x00000000000f41e6 : loopne 0xf41f0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6b7c : loopne 0xf6ba6 ; and rax, rdi ; or rax, rsi ; ret
0x00000000000f74a0 : loopne 0xf74a7 ; ret
0x00000000000fa0de : loopne 0xfa0e4 ; ret
0x00000000000fa0fa : loopne 0xfa109 ; movzx eax, ax ; ret
0x00000000000fa16e : loopne 0xfa174 ; ret
0x00000000000fa20e : loopne 0xfa214 ; ret
0x00000000000fa22a : loopne 0xfa22f ; ret
0x00000000000fa29e : loopne 0xfa2a4 ; ret
0x00000000000fa2ba : loopne 0xfa2c3 ; movzx eax, ax ; ret
0x00000000000fa32e : loopne 0xfa334 ; ret
0x00000000000fa3be : loopne 0xfa3c4 ; ret
0x00000000000fa45e : loopne 0xfa464 ; ret
0x00000000000fa4fe : loopne 0xfa504 ; ret
0x00000000000fa59e : loopne 0xfa5a4 ; ret
0x00000000000fa5ba : loopne 0xfa5c5 ; movzx eax, ax ; ret
0x00000000000fa62e : loopne 0xfa634 ; ret
0x00000000000fa6c9 : loopne 0xfa6cf ; ret
0x00000000000fa75e : loopne 0xfa764 ; ret
0x00000000000fa93a : loopne 0xfa940 ; ret
0x00000000000faa70 : loopne 0xfaa76 ; ret
0x00000000000faa83 : loopne 0xfaa92 ; movzx eax, ax ; ret
0x00000000000faaf0 : loopne 0xfaaf6 ; ret
0x00000000000fab70 : loopne 0xfab76 ; ret
0x00000000000fab83 : loopne 0xfab88 ; ret
0x00000000000fabf0 : loopne 0xfabf6 ; ret
0x00000000000fac03 : loopne 0xfac0c ; movzx eax, ax ; ret
0x00000000000fac70 : loopne 0xfac76 ; ret
0x00000000000facf0 : loopne 0xfacf6 ; ret
0x00000000000fad70 : loopne 0xfad76 ; ret
0x00000000000fadf0 : loopne 0xfadf6 ; ret
0x00000000000fae70 : loopne 0xfae76 ; ret
0x00000000000fae83 : loopne 0xfae8e ; movzx eax, ax ; ret
0x00000000000faef0 : loopne 0xfaef6 ; ret
0x00000000000faf6d : loopne 0xfaf73 ; ret
0x00000000000faff0 : loopne 0xfaff6 ; ret
0x00000000000fb19a : loopne 0xfb1a0 ; ret
0x00000000000fe901 : loopne 0xfe963 ; pop rbp ; pop r12 ; ret
0x00000000000fe923 : loopne 0xfe985 ; pop rbp ; pop r12 ; ret
0x000000000019844d : mov ah, 0 ; add al, ah ; lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000001983ad : mov ah, 0 ; add al, dl ; xchg eax, ecx ; sti ; call qword ptr [rax]
0x0000000000198425 : mov ah, 0 ; add byte ptr [rax - 0x40], bl ; cli ; call qword ptr [rax]
0x00000000001983fd : mov ah, 0 ; add byte ptr [rax - 0x51], ah ; out dx, eax ; call qword ptr [rax]
0x0000000000121d87 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000f78c1 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x00000000001983d5 : mov ah, 0 ; add byte ptr [rax], bh ; fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000198475 : mov ah, 0 ; add byte ptr [rax], cl ; sti ; call qword ptr [rax]
0x000000000018c3f0 : mov ah, 0x12 ; cli ; jmp rsp
0x00000000001a09bc : mov ah, 0x13 ; cmc ; jmp qword ptr [rcx]
0x0000000000173aca : mov ah, 0x13 ; ret
0x0000000000190aac : mov ah, 0x1f ; cli ; jmp qword ptr [rcx]
0x0000000000025300 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000e40f5 : mov ah, 0x24 ; mov eax, 0x89000000 ; ret 0xbc41
0x000000000018b658 : mov ah, 0x2b ; clc ; call rax
0x000000000018cca0 : mov ah, 0x2e ; std ; call rax
0x000000000019022c : mov ah, 0x32 ; add byte ptr [rax], al ; mov ebp, edx ; call qword ptr [rsi]
0x00000000001a092c : mov ah, 0x39 ; add dword ptr [rax], eax ; loopne 0x1a094b ; cmc ; jmp qword ptr [rcx]
0x0000000000189874 : mov ah, 0x42 ; add dword ptr [rax], eax ; je 0x189834 ; jmp qword ptr [rax]
0x000000000018b6e8 : mov ah, 0x46 ; clc ; call qword ptr [rax]
0x0000000000178748 : mov ah, 0x49 ; int1 ; call rsp
0x00000000001a1b2c : mov ah, 0x4b ; add dword ptr [rax], eax ; mov al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x000000000018c8a4 : mov ah, 0x4e ; add al, byte ptr [rax] ; xchg eax, esp ; xchg eax, esi ; cli ; jmp rax
0x000000000019800c : mov ah, 0x53 ; out dx, eax ; call qword ptr [rbx]
0x00000000001ac33c : mov ah, 0x59 ; clc ; call qword ptr [rdi]
0x00000000001a1a7c : mov ah, 0x5d ; cmc ; jmp qword ptr [rcx]
0x00000000001a3c2c : mov ah, 0x6c ; add dword ptr [rax], eax ; rol byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x0000000000194c2c : mov ah, 0x7c ; add byte ptr [rax], al ; xor byte ptr [rax - 0x12], al ; call rdi
0x000000000019816c : mov ah, 0x82 ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000189c98 : mov ah, 0x90 ; hlt ; call qword ptr [rax]
0x0000000000186718 : mov ah, 0x91 ; sti ; inc dword ptr [rcx + rdx*4 - 5] ; call rsp
0x0000000000173f70 : mov ah, 0xa5 ; ret
0x00000000001ab21c : mov ah, 0xa6 ; sti ; jmp qword ptr [rdx]
0x0000000000188388 : mov ah, 0xb9 ; out dx, al ; jmp rax
0x0000000000198a2c : mov ah, 0xba ; add byte ptr [rax], al ; xor byte ptr [rcx - 0x10], bh ; call qword ptr [rax]
0x0000000000188284 : mov ah, 0xc2 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call rax
0x000000000018c0e8 : mov ah, 0xc2 ; stc ; call rax
0x000000000018b1e4 : mov ah, 0xc9 ; add dword ptr [rax], eax ; retf 0xfff7
0x000000000018b220 : mov ah, 0xcb ; idiv edi ; push rsp ; retf 1
0x00000000001a9d2c : mov ah, 0xcd ; add dword ptr [rax], eax ; push rax ; retf 0xfff7
0x0000000000188408 : mov ah, 0xd8 ; out dx, al ; jmp rsp
0x0000000000187e90 : mov ah, 0xde ; in al, dx ; call rsp
0x000000000018b6fc : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; call qword ptr [rax]
0x00000000001884a8 : mov ah, 0xec ; out dx, al ; jmp rax
0x0000000000002737 : mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x0000000000188bd4 : mov ah, 0xf8 ; add byte ptr [rax], al ; in al, 0xd3 ; out dx, eax ; jmp rsp
0x0000000000186b7d : mov ah, 0xfb ; call qword ptr [rdx + 0x22fffbb3]
0x0000000000186af9 : mov ah, 0xfb ; call qword ptr [rsi]
0x0000000000186cb9 : mov ah, 0xfb ; call rax
0x0000000000186cb5 : mov ah, 0xfb ; inc dword ptr [rax - 0x4c] ; sti ; call rax
0x0000000000186c39 : mov ah, 0xfb ; jmp rsp
0x000000000018ae4d : mov ah, 1 ; add ah, ah ; xor bh, dh ; jmp rsp
0x000000000018ae45 : mov ah, 1 ; add byte ptr [rax + rsi - 9], al ; call rax
0x00000000001738c4 : mov ah, bl ; push rsi ; ret
0x0000000000078a73 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7651 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x000000000002a0b4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000188005 : mov al, 0 ; add byte ptr [rdi + rdi], dl ; out dx, al ; jmp rsp
0x000000000018905c : mov al, 0x12 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff0
0x000000000000d130 : mov al, 0x16 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001997b0 : mov al, 0x1a ; int1 ; call qword ptr [rax]
0x0000000000002974 : mov al, 0x1f ; retf
0x000000000011df9c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000011df54 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000178990 : mov al, 0x2a ; inc eax ; sub dh, dl ; call rax
0x0000000000178a40 : mov al, 0x34 ; bnd jmp rax ; xor al, 0xf2 ; call qword ptr [rax]
0x0000000000178b14 : mov al, 0x38 ; inc eax ; cmp dl, dh ; call rax
0x000000000004e49e : mov al, 0x48 ; add eax, edi ; jmp rax
0x000000000008c742 : mov al, 0x48 ; mov edx, eax ; jmp 0x8c6cc
0x00000000001a1a28 : mov al, 0x4a ; add dword ptr [rax], eax ; pop rbp ; cmc ; jmp qword ptr [rcx]
0x00000000000f31b8 : mov al, 0x4c ; mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x00000000001a1f28 : mov al, 0x4f ; add dword ptr [rax], eax ; xor al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x0000000000199ba0 : mov al, 0x50 ; int1 ; jmp qword ptr [rcx]
0x00000000001a1b30 : mov al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x00000000001a2f28 : mov al, 0x5f ; add dword ptr [rax], eax ; xchg eax, esp ; test al, 0xf5 ; call rsi
0x00000000001860b8 : mov al, 0x62 ; std ; inc dword ptr [rax + 0x63] ; std ; call rax
0x0000000000076a1c : mov al, 0x68 ; std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001a3b28 : mov al, 0x6b ; add dword ptr [rax], eax ; xor al, 0x11 ; stc ; jmp qword ptr [rbx]
0x00000000001861e0 : mov al, 0x71 ; std ; jmp rcx
0x0000000000001db0 : mov al, 0x72 ; retf
0x0000000000186200 : mov al, 0x72 ; std ; jmp rcx
0x000000000018d570 : mov al, 0x79 ; std ; jmp qword ptr [rdx]
0x00000000001869cc : mov al, 0x81 ; sti ; inc dword ptr [rax - 0x7f] ; sti ; jmp rax
0x00000000001a8eb0 : mov al, 0x85 ; idiv edi ; retf 0
0x00000000000038fd : mov al, 0x85 ; jbe 0x38ac ; outsb dx, byte ptr [rsi] ; retf
0x00000000000d84ff : mov al, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000001867bc : mov al, 0x8d ; sti ; inc dword ptr [rax - 0x73] ; sti ; call rax
0x00000000001865a4 : mov al, 0x90 ; sti ; inc dword ptr [rax - 0x70] ; sti ; call rax
0x0000000000178874 : mov al, 0x95 ; int1 ; inc eax ; xchg eax, edi ; int1 ; call rax
0x0000000000196628 : mov al, 0x96 ; add byte ptr [rax], al ; hlt ; retf 0xffee
0x0000000000187e74 : mov al, 0xa7 ; add byte ptr [rax], al ; ret 0xffec
0x0000000000186cb4 : mov al, 0xb4 ; sti ; inc dword ptr [rax - 0x4c] ; sti ; call rax
0x0000000000186a9c : mov al, 0xb7 ; sti ; inc dword ptr [rax - 0x49] ; sti ; call rax
0x00000000001962d0 : mov al, 0xb9 ; out dx, al ; call qword ptr [rdx]
0x000000000019dc28 : mov al, 0xc ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xf4 ; call qword ptr [rsi]
0x000000000015922f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000017a050 : mov al, 0xc6 ; hlt ; jmp qword ptr [rax]
0x000000000019dca0 : mov al, 0xd ; hlt ; call qword ptr [rcx]
0x0000000000178820 : mov al, 0xd9 ; sti ; jmp qword ptr [rax]
0x00000000000add0a : mov al, 0xe9 ; retf 0xfff5
0x0000000000175d76 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000189511 : mov al, 0xf2 ; call rsp
0x00000000000c606e : mov al, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x000000000018c9c1 : mov al, 0xfa ; jmp qword ptr [rax]
0x00000000000e9699 : mov al, 4 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x33eb
0x000000000009bf9c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000009bb9c : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000000760 : mov al, byte ptr [rax] ; add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x00000000000e79f1 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000097f0b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000097f39 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000097fbd : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000874d3 : mov al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000014c3b0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000097ee5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000002ec3 : mov al, byte ptr [rsi - 0x73] ; ret 0xc1bb
0x000000000019a000 : mov al, dl ; add byte ptr [rax], al ; nop ; int1 ; call qword ptr [rcx]
0x0000000000097ef5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000198735 : mov bh, 0 ; add byte ptr [rax], cl ; retf
0x0000000000047bb4 : mov bh, 0x12 ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x000000000013f791 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000861f5 : mov bh, 0x1e ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000ee194 : mov bh, 0x2c ; add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x0000000000175e00 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000002a47f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000015e728 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000000cd6b8 : mov bh, 0x48 ; mov esi, ebx ; mov rdi, rbp ; call r12
0x00000000001760d8 : mov bh, 0x4e ; retf 0x9d7d
0x000000000008cf92 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x000000000008d144 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b3df1 : mov bh, 0x57 ; adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000b3d2d : mov bh, 0x5c ; inc byte ptr [r13 + 0x69] ; retf
0x000000000002d837 : mov bh, 0x8b ; add al, 0x10 ; ret
0x00000000000cd4b1 : mov bh, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000002c9c : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x0000000000174da4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002dae6 : mov bh, 0xc0 ; ret
0x00000000001083ac : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000172a46 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x000000000008cfde : mov bh, 0xe ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000178695 : mov bh, 0xf0 ; jmp qword ptr [rax]
0x0000000000178691 : mov bh, 0xf0 ; push rax ; mov bh, 0xf0 ; jmp qword ptr [rax]
0x0000000000189889 : mov bh, 0xf3 ; jmp rsp
0x00000000000038b4 : mov bh, 0xfa ; add ebx, ebp ; in al, 0xee ; jne 0x389e ; ret 0x975
0x0000000000186b5d : mov bh, 0xfb ; call qword ptr [rdx]
0x0000000000186aa1 : mov bh, 0xfb ; call rax
0x0000000000186a9d : mov bh, 0xfb ; inc dword ptr [rax - 0x49] ; sti ; call rax
0x0000000000186add : mov bh, 0xfb ; jmp qword ptr [rsi]
0x0000000000186c9d : mov bh, 0xfb ; jmp rax
0x00000000000f8853 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000018aefd : mov bh, 1 ; add byte ptr [rsp + rdi - 9], dl ; jmp qword ptr [rax]
0x000000000002dadf : mov bh, 4 ; js 0x2da6f ; loopne 0x2daf6 ; movzx eax, ax ; ret
0x000000000002db1f : mov bh, 4 ; js 0x2daaf ; loopne 0x2db30 ; movzx eax, ax ; ret
0x000000000002dbbf : mov bh, 4 ; js 0x2db4f ; loopne 0x2dbd2 ; movzx eax, ax ; ret
0x000000000002dc9f : mov bh, 4 ; js 0x2dc2c ; loopne 0x2dcac ; ret
0x000000000002dd18 : mov bh, 4 ; js 0x2dca5 ; loopne 0x2dd25 ; ret
0x000000000002dd28 : mov bh, 4 ; js 0x2dcb8 ; loopne 0x2dd3f ; movzx eax, ax ; ret
0x000000000002dd68 : mov bh, 4 ; js 0x2dcf8 ; loopne 0x2dd79 ; movzx eax, ax ; ret
0x000000000002de08 : mov bh, 4 ; js 0x2dd98 ; loopne 0x2de1b ; movzx eax, ax ; ret
0x00000000000fa0f6 : mov bh, 4 ; js 0xfa086 ; loopne 0xfa10d ; movzx eax, ax ; ret
0x00000000000fa226 : mov bh, 4 ; js 0xfa1b3 ; loopne 0xfa233 ; ret
0x00000000000fa2b6 : mov bh, 4 ; js 0xfa246 ; loopne 0xfa2c7 ; movzx eax, ax ; ret
0x00000000000fa5b6 : mov bh, 4 ; js 0xfa546 ; loopne 0xfa5c9 ; movzx eax, ax ; ret
0x00000000000faa7f : mov bh, 4 ; js 0xfaa0f ; loopne 0xfaa96 ; movzx eax, ax ; ret
0x00000000000fab7f : mov bh, 4 ; js 0xfab0c ; loopne 0xfab8c ; ret
0x00000000000fabff : mov bh, 4 ; js 0xfab8f ; loopne 0xfac10 ; movzx eax, ax ; ret
0x00000000000fae7f : mov bh, 4 ; js 0xfae0f ; loopne 0xfae92 ; movzx eax, ax ; ret
0x00000000001245ad : mov bh, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001764b3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000e6b71 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000018c859 : mov bh, dl ; jmp rax
0x00000000000f7984 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x000000000016001e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017613b : mov bl, 0x29 ; retf 0xbf4b
0x00000000000c5d27 : mov bl, 0x48 ; cmp eax, 0x414a53 ; jne 0xc5d02 ; jmp 0xc5ce3
0x00000000000b28bc : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000076119 : mov bl, 0x55 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x760c3
0x000000000012f099 : mov bl, 0x64 ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000175e83 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000176120 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000002e03 : mov bl, 0xee ; clc ; ret
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000189879 : mov bl, 0xf3 ; jmp qword ptr [rax]
0x0000000000003c3d : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000018b169 : mov bl, 0xf7 ; jmp rax
0x0000000000186b81 : mov bl, 0xfb ; jmp qword ptr [rdx]
0x0000000000186ac5 : mov bl, 0xfb ; jmp rax
0x0000000000057462 : mov bl, 4 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000018685d : mov bl, bh ; call qword ptr [rdx + 0x12fffb87]
0x0000000000186859 : mov bl, bh ; call qword ptr [rdx]
0x00000000001869d9 : mov bl, bh ; call rax
0x0000000000186999 : mov bl, bh ; jmp rax
0x0000000000186995 : mov bl, bh ; push qword ptr [rax - 0x78] ; sti ; jmp rax
0x0000000000189771 : mov bl, dh ; jmp rsp
0x0000000000173aa1 : mov bx, 0xf32d ; retf
0x0000000000115b08 : mov byte ptr [r10], 0 ; ret
0x00000000000f0488 : mov byte ptr [r8 - 1], 0 ; ret
0x0000000000117c9e : mov byte ptr [rax + 0x18], 0 ; add rsp, 8 ; ret
0x000000000008c030 : mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008c1ca : mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x000000000008a8b3 : mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000baa23 : mov byte ptr [rax + 0x4c], 0x89 ; retf 0x8948
0x0000000000113c16 : mov byte ptr [rax + 1], bl ; mov byte ptr [rax + 2], 0 ; pop rbx ; ret
0x0000000000189e44 : mov byte ptr [rax + 1], ch ; add byte ptr [rax + rbp*2 - 0xb], al ; call rax
0x000000000012cf94 : mov byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000113c19 : mov byte ptr [rax + 2], 0 ; pop rbx ; ret
0x0000000000105572 : mov byte ptr [rax + 3], cl ; jne 0x105514 ; mov rax, rdi ; ret
0x0000000000105571 : mov byte ptr [rax + 3], r9b ; jne 0x105515 ; mov rax, rdi ; ret
0x000000000017190c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x0000000000042bd4 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007d854 : mov byte ptr [rax + rsi], bh ; ret
0x000000000007d853 : mov byte ptr [rax + rsi], dil ; ret
0x00000000000ad2d5 : mov byte ptr [rax - 0x76fffffd], cl ; ret
0x00000000000f0489 : mov byte ptr [rax - 1], 0 ; ret
0x00000000000f2586 : mov byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000000f4b2e : mov byte ptr [rax], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000021e1a : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000021e5d : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000f3a1e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f52b : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x7bf66
0x0000000000130e8d : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001262e9 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f4418 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001a0800 : mov byte ptr [rax], bh ; add dword ptr [rax], eax ; sub al, 0x10 ; cmc ; call qword ptr [rax]
0x0000000000075917 : mov byte ptr [rax], bh ; mov eax, r10d ; ret
0x000000000005bf40 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005bf41 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ab32 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000075916 : mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x00000000001a1500 : mov byte ptr [rbp + 1], al ; add byte ptr [rsi + rdx*2], ch ; cmc ; call qword ptr [rax]
0x00000000000cef52 : mov byte ptr [rbx + rbx - 0xd], dh ; ret
0x00000000000ef096 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000000306a : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000198900 : mov byte ptr [rcx + 0x125c0000], bh ; cld ; call rsp
0x00000000000b3e10 : mov byte ptr [rcx + 1], cl ; retf 0xf42
0x000000000014a073 : mov byte ptr [rcx + 2], dl ; ret
0x000000000014a092 : mov byte ptr [rcx + 4], dl ; ret
0x000000000014a0d3 : mov byte ptr [rcx + 8], dl ; ret
0x0000000000105432 : mov byte ptr [rcx + rax + 1], cl ; jne 0x105429 ; mov rax, rdi ; ret
0x000000000002bf23 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000011d811 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x0000000000030936 : mov byte ptr [rcx - 0x75], 0x47 ; add al, 0xeb ; ret
0x0000000000198b48 : mov byte ptr [rcx - 4], bl ; call qword ptr [rbx]
0x000000000008cb50 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000008cc97 : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000003227f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff5cd : mov byte ptr [rcx], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000112f12 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000f2e71 : mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x0000000000027a57 : mov byte ptr [rcx], 9 ; ret 0x3948
0x000000000018ce74 : mov byte ptr [rcx], bh ; add byte ptr [rdx - 3], ah ; call qword ptr [rax]
0x00000000000713ce : mov byte ptr [rcx], bh ; ret
0x000000000018c1f4 : mov byte ptr [rcx], ch ; add al, byte ptr [rax] ; adc al, 0xea ; stc ; call rsp
0x000000000018bcac : mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; adc al, 0x43 ; stc ; call rsp
0x0000000000050774 : mov byte ptr [rcx], cl ; std ; dec dword ptr [rax + 0x29] ; ret
0x00000000000713cd : mov byte ptr [rcx], dil ; ret
0x000000000007d93d : mov byte ptr [rcx], dl ; je 0x7d989 ; mov qword ptr [rsi], rcx ; ret
0x000000000014a050 : mov byte ptr [rcx], dl ; ret
0x000000000009f53a : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009d91b : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x000000000009c12b : mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009f54b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009cac8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000009b458 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009f550 : mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f572 : mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f590 : mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009f5b0 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009cb3e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000009b4ae : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009d9a1 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x000000000009c181 : mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009f5d1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009f5d6 : mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009f5f2 : mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f612 : mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009f632 : mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009da23 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x000000000009c203 : mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009f653 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009cbc0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000009b530 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009f658 : mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f67a : mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009f698 : mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009f6b8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009f6d4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009f6f4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009f714 : mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009f734 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009c305 : mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009f755 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009f75a : mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009f7aa : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009f480 : mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009f49e : mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009f4be : mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009f4e0 : mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f500 : mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f520 : mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009f3b6 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000113826 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000113825 : mov byte ptr [rdi + 1], sil ; ret
0x000000000008d02d : mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000009f3c8 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009c976 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000009b376 : mov byte ptr [rdi + 2], dh ; ret
0x000000000009d7a9 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x000000000008cf60 : mov byte ptr [rdi + 2], dl ; ret
0x000000000009f3d9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009f3de : mov byte ptr [rdi + 3], ch ; ret
0x000000000008d04b : mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000009f3f6 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009c992 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000009b392 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009d7d7 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x000000000008cf7e : mov byte ptr [rdi + 4], dl ; ret
0x000000000009f407 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009f40c : mov byte ptr [rdi + 5], ch ; ret
0x000000000008d084 : mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x000000000009f41e : mov byte ptr [rdi + 6], ch ; ret
0x000000000008cfb7 : mov byte ptr [rdi + 6], dl ; ret
0x000000000009f43c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000cd100 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000cd079 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000cd0f0 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000cd0b4 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000cd130 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000cd145 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000cd0cd : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000cd088 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009f448 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009b3d3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009d829 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x000000000009c0a9 : mov byte ptr [rdi + 8], dl ; ret
0x000000000009f459 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009f45e : mov byte ptr [rdi + 9], ch ; ret
0x00000000000b91fe : mov byte ptr [rdi + rax], ch ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000001139fe : mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000176135 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x00000000001a5f00 : mov byte ptr [rdi - 0x5c83ffff], cl ; idiv bh ; retf 0
0x000000000011ff3e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x11ff39 ; ret
0x00000000001393ab : mov byte ptr [rdi - 1], dl ; ret
0x000000000008d0c0 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rax - 1] ; ret
0x0000000000078530 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000021e1d : mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000021e60 : mov byte ptr [rdi], 0 ; ret
0x00000000000cd0e4 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000cd11e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000009f3a2 : mov byte ptr [rdi], ch ; ret
0x0000000000084a0c : mov byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; retf 0x92eb
0x00000000000a002b : mov byte ptr [rdi], cl ; ret
0x000000000015a0b5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000008cf21 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x000000000009c950 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000009b350 : mov byte ptr [rdi], dh ; ret
0x000000000009d782 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000009c022 : mov byte ptr [rdi], dl ; ret
0x000000000009f3b2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000008cf20 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x000000000009acba : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000014c3d9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000097f0e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000014c407 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000097f3c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009ac50 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000097fc0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000e4026 : mov byte ptr [rdx], 0 ; add byte ptr [rax - 0x77], cl ; retf
0x000000000010cec8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000115b09 : mov byte ptr [rdx], 0 ; ret
0x00000000000ff5b5 : mov byte ptr [rdx], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000062961 : mov byte ptr [rdx], al ; add rbx, 1 ; jmp 0x6293b
0x0000000000062ace : mov byte ptr [rdx], al ; add rbx, 1 ; jmp 0x62aa8
0x000000000014c3b2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000097ee7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000010f636 : mov byte ptr [rip + 0x2a918b], 1 ; pop rbx ; ret
0x000000000002cb18 : mov byte ptr [rip + 0x3890bf], dl ; ret
0x00000000000024e4 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x0000000000088092 : mov byte ptr [rsi + 2], dl ; cmp rax, rdi ; jne 0x88089 ; ret
0x0000000000106be3 : mov byte ptr [rsi*2 - 0x776b717], al ; ret
0x0000000000106be2 : mov byte ptr [rsi*2 - 0x776b717], r8b ; ret
0x000000000004a6ef : mov byte ptr [rsi], al ; jne 0x4a6df ; mov rax, rsi ; ret
0x000000000004a773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x000000000019ee00 : mov byte ptr [rsi], bl ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; popfq ; hlt ; jmp qword ptr [rcx]
0x000000000018e600 : mov byte ptr [rsi], dl ; add byte ptr [rax], al ; pop rsp ; imul ecx ; call qword ptr [rdx]
0x000000000018cbe4 : mov byte ptr [rsi], dl ; add dword ptr [rax], eax ; hlt ; jrcxz 0x18cbee ; call rax
0x00000000000ed537 : mov byte ptr [rsp + 0x10], al ; mov eax, r10d ; syscall
0x00000000000a0ac9 : mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x00000000001984ed : mov ch, 0 ; add al, dh ; fsubr st(7) ; jmp rdx
0x000000000012eb64 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x0000000000198551 : mov ch, 0 ; add byte ptr [rdx + rdx - 4], bl ; jmp qword ptr [rax]
0x000000000000271e : mov ch, 0x24 ; retf 0x54da
0x00000000001738c2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000174c03 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000175896 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000002df67 : mov ch, 0x5f ; cmp byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000026627 : mov ch, 0x69 ; adc eax, 0x3d8d4800 ; ret 0x1569
0x0000000000175f9f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000017694a : mov ch, 0xab ; ret
0x00000000000f95a3 : mov ch, 0xad ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000038b3 : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, 0xee ; jne 0x389f ; ret 0x975
0x00000000000f43d9 : mov ch, 0xe9 ; retf 0xfffe
0x00000000001927dd : mov ch, 0xed ; call qword ptr [rax]
0x0000000000186ab1 : mov ch, 0xfb ; call qword ptr [rax]
0x0000000000186cad : mov ch, 0xfb ; jmp qword ptr [rax]
0x0000000000186b71 : mov ch, 0xfb ; jmp rdx
0x0000000000001b70 : mov ch, 4 ; retf
0x000000000015bfa6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000268f5 : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000de5a4 : mov ch, byte ptr [rip + 0x5a0a8900] ; pop rcx ; pop rbx ; ret
0x00000000000f7711 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003d00 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000016554c : mov cl, 0x24 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000fb276 : mov cl, 0x35 ; in al, dx ; ret
0x0000000000037663 : mov cl, 0x35 ; jmp rsi
0x000000000011051f : mov cl, 0x35 ; ret
0x00000000000fb4ef : mov cl, 0x35 ; ret 0x2b
0x00000000000fd71f : mov cl, 0x35 ; retf
0x00000000001763a1 : mov cl, 0x3f ; retf
0x00000000000d3784 : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x000000000011b5e8 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000002c9d : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000f9fa3 : mov cl, 0x9e ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000131780 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000186c11 : mov cl, 0xfb ; inc dword ptr [rax + rdi*4 - 5] ; call rsp
0x000000000018ad65 : mov cl, 1 ; add byte ptr [rdx + rbx - 9], al ; jmp qword ptr [rax]
0x000000000002c8b7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000093335 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000008d564 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000175d72 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000155db4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000015d660 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b2abb : mov cl, dl ; and cl, 0xf ; je 0xb2ae7 ; ret
0x000000000017602c : mov cs, edi ; ret 0x8b36
0x000000000003a72d : mov cs, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000015686e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000009b370 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000198605 : mov dh, 0 ; add al, ch ; sub eax, esi ; jmp qword ptr [rbx]
0x000000000012ebb4 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x0000000000198669 : mov dh, 0 ; add byte ptr [rcx + rbx*2 - 0x10], dh ; jmp rbx
0x0000000000079aad : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a81f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078163 : mov dh, 0 ; ret
0x0000000000075ec1 : mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013f801 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000090df4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000032fe4 : mov dh, 0x17 ; test dl, dl ; jne 0x32fca ; ret
0x00000000000c67c5 : mov dh, 0x17 ; test dl, dl ; jne 0xc67af ; xor eax, eax ; ret
0x00000000000dc6e5 : mov dh, 0x17 ; test dl, dl ; jne 0xdc6cf ; xor eax, eax ; ret
0x0000000000032be9 : mov dh, 0x24 ; or cl, ch ; ret 0xfffc
0x000000000011dd92 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000c7f81 : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x00000000000c77ab : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003ae81 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008c740 : mov dh, 0x45 ; mov al, 0x48 ; mov edx, eax ; jmp 0x8c6ce
0x0000000000055428 : mov dh, 0x46 ; or eax, 0x8118e383 ; ret
0x000000000015fbf1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000015fbe1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000015fbb1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015fbd1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000015fbc1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000004b6b8 : mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000011f29d : mov dh, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000026a07 : mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000b9ee1 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000089ef8 : mov dh, 0x4e ; add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x00000000000e03c4 : mov dh, 0x4e ; or byte ptr [rsi - 0x3f], ah ; retf 0x4408
0x0000000000174d62 : mov dh, 0x4e ; ret 0x474c
0x00000000000d0265 : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x00000000000c8e84 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c8eb1 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008cfb3 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008d165 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008cf7a : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x000000000008cf5c : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000112fa9 : mov dh, 0x55 ; add dh, dh ; ret
0x000000000015fbf5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000015fbe5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000015fbb5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000056f9d : mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000055602 : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf01
0x0000000000056f2a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005585c : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf40
0x000000000015fbc5 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000da31a : mov dh, 0x57 ; cmp dh, dh ; ret 0x7408
0x0000000000113b62 : mov dh, 0x58 ; add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x000000000003240a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000106d96 : mov dh, 0x76 ; add eax, 0x440f4800 ; ret 0x90c3
0x000000000005d14d : mov dh, 0x7a ; add dword ptr [rax - 0x80], eax ; lcall [rbp + 0x74] ; ret 0x8440
0x00000000001865ec : mov dh, 0x8f ; sti ; inc dword ptr [rsi - 0x71] ; sti ; call rsi
0x00000000000d5515 : mov dh, 0x94 ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3145
0x0000000000186ae4 : mov dh, 0xb6 ; sti ; inc dword ptr [rsi - 0x4a] ; sti ; call rsi
0x0000000000122bb7 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000012a8cc : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x00000000000e9c62 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000011e07b : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ff70 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000000b1de8 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000c5d0f : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x000000000006bf74 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000cb703 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000005c734 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b7f29 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000e9ea5 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aeed : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006aeba : mov dh, 0xc0 ; neg eax ; ret
0x000000000011f26b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000bed3c : mov dh, 0xc0 ; pop rbx ; ret
0x000000000003593c : mov dh, 0xc0 ; ret
0x0000000000022901 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000b9e80 : mov dh, 0xc1 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000a0541 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000007aa12 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010839e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000175fa4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000d4047 : mov dh, 0xd1 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000b700e : mov dh, 0xd2 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000005c272 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x0000000000090e1a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000a0029 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x000000000008e911 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000155dc4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005c997 : mov dh, 0xe4 ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d36cf : mov dh, 0xe4 ; movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x00000000000d377f : mov dh, 0xf6 ; movsxd rax, dword ptr [rcx + r14*4] ; add rax, rcx ; jmp rax
0x00000000000d55f3 : mov dh, 0xf8 ; call 0xa2074
0x000000000018c9e9 : mov dh, 0xfa ; jmp qword ptr [rax]
0x0000000000032a45 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000186ca9 : mov dh, 0xfb ; call qword ptr [rax + 0x20fffbb5]
0x0000000000186ae9 : mov dh, 0xfb ; call rsi
0x0000000000186ae5 : mov dh, 0xfb ; inc dword ptr [rsi - 0x4a] ; sti ; call rsi
0x000000000018aee5 : mov dh, 1 ; add ah, dl ; cmp dh, bh ; jmp rsp
0x000000000018aedd : mov dh, 1 ; add byte ptr [rdx + rdi - 9], dl ; call rax
0x000000000007a831 : mov dh, 2 ; ret
0x00000000000d21a3 : mov dh, 4 ; add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000005dd28 : mov dh, 4 ; and al, 0x39 ; ret
0x00000000000d1a1c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001246fd : mov dh, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000e0fa4 : mov dh, 5 ; ret 0x2d89
0x0000000000155dc1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000090df1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008e914 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000000a19ed : mov dh, bl ; ret
0x00000000000a0a7c : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000019d7f8 : mov dh, ch ; jmp qword ptr [rdi]
0x000000000018a6c9 : mov dh, dh ; call qword ptr [rax]
0x0000000000186aa0 : mov dil, 0xfb ; call rax
0x00000000000f7954 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003be8 : mov dl, 0x1e ; ret
0x0000000000001f81 : mov dl, 0x3a ; jrcxz 0x1f63 ; retf 0xbe35
0x00000000000c5e2e : mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000011965d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d95d : mov dl, 0x8b ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000186d80 : mov dl, 0xa9 ; sti ; jmp qword ptr [rdx]
0x00000000000348da : mov dl, 0xdd ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000000000189521 : mov dl, 0xf2 ; call qword ptr [rax]
0x0000000000186a91 : mov dl, 0xfb ; call qword ptr [rax + 0x20fffbb8]
0x0000000000186cc9 : mov dl, 0xfb ; call qword ptr [rax]
0x0000000000186c0d : mov dl, 0xfb ; call rsp
0x0000000000186c09 : mov dl, 0xfb ; ljmp [rsi] ; mov dl, 0xfb ; call rsp
0x000000000018addd : mov dl, 1 ; add byte ptr [rsp - 9], dl ; call rax
0x00000000000fa7e5 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000fa802 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x000000000009c043 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009c062 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009c0a3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000139430 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000009d780 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000009c020 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000009f3b0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000019fec8 : mov dl, ch ; hlt ; jmp qword ptr [rcx]
0x000000000004a491 : mov ds, word ptr [rbx + 0x5d] ; ret
0x00000000000cd510 : mov ds, word ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001763be : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000106ccd : mov dword ptr [r11 + 0xc], eax ; jne 0x106c77 ; mov rax, rdi ; ret
0x00000000000b2f26 : mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000011d7be : mov dword ptr [r14], 0 ; ret
0x0000000000113aef : mov dword ptr [r8], ecx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000038723 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00000000001046a0 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000113b77 : mov dword ptr [r8], r11d ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x000000000015d656 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000015d641 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000071db9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071df9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072388 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007750c : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000cf17b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x0000000000071dbd : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000007240a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000006f529 : mov dword ptr [rax + 0x88], edx ; call 0x7bf68
0x0000000000165dbf : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007be95 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000b4699 : mov dword ptr [rax + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000106be1 : mov dword ptr [rax + rcx*4 + 4], ecx ; jne 0x106bd9 ; mov rax, rdi ; ret
0x00000000000451e6 : mov dword ptr [rax - 0x77], ecx ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000cf0aa : mov dword ptr [rax - 4], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xcf0a9 ; ret
0x000000000012ab3d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x0000000000115ba2 : mov dword ptr [rax], 0 ; ret
0x000000000005330d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x00000000000f2b08 : mov dword ptr [rax], 0x16 ; ret
0x00000000000ec5f0 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000132a98 : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000033258 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00000000000819cb : mov dword ptr [rax], 0xc ; jmp 0x8199d
0x0000000000084362 : mov dword ptr [rax], 0xc ; jmp 0x8433c
0x00000000000816b8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x0000000000188385 : mov dword ptr [rax], 0xeeb9b400 ; jmp rax
0x00000000000ede94 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000bf868 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000222b8 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x0000000000111725 : mov dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xdf89
0x00000000000a1773 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e79c1 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001958d1 : mov dword ptr [rax], eax ; add byte ptr [rbx + rsi*2], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001878d5 : mov dword ptr [rax], eax ; add byte ptr [rdi + rdi*8 - 0x16], ah ; call rsp
0x00000000000de854 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000000636e4 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113b78 : mov dword ptr [rax], ebx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x000000000007055a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000113af0 : mov dword ptr [rax], ecx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000000e2911 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x0000000000112d24 : mov dword ptr [rax], edi ; mov rax, qword ptr [rbp - 0x80] ; jmp 0x112cfe
0x0000000000082566 : mov dword ptr [rax], edi ; ret
0x00000000000f6bd1 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a1f41 : mov dword ptr [rax], edx ; jne 0xa1f3d ; ret
0x00000000001138d9 : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000038724 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000de8a2 : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x000000000002d7d5 : mov dword ptr [rax], edx ; ret
0x0000000000072a1b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000002dec : mov dword ptr [rax], esp ; mov eax, 0xf3f8ec1c ; ret
0x00000000000de853 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000117e80 : mov dword ptr [rbp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e865 : mov dword ptr [rbp + 0x68], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000058ddb : mov dword ptr [rbp - 0x4b8], eax ; call 0x75088
0x0000000000068f27 : mov dword ptr [rbp - 0x4b8], edx ; jmp 0x68f01
0x0000000000068bc1 : mov dword ptr [rbp - 0x520], edx ; jmp 0x64eac
0x000000000004dd89 : mov dword ptr [rbp - 0x530], edx ; call 0x4a808
0x0000000000062da1 : mov dword ptr [rbp - 0x538], eax ; jmp 0x62d73
0x0000000000066193 : mov dword ptr [rbp - 0x568], ecx ; call 0x72428
0x00000000000659b5 : mov dword ptr [rbp - 0x568], edx ; call 0x72428
0x0000000000066192 : mov dword ptr [rbp - 0x568], r9d ; call 0x72429
0x000000000006795b : mov dword ptr [rbp - 0x56c], ebx ; jmp 0x63c48
0x000000000006655f : mov dword ptr [rbp - 0x580], edx ; call 0x727a8
0x000000000006655e : mov dword ptr [rbp - 0x580], r10d ; call 0x727a9
0x000000000006a032 : mov dword ptr [rbp - 0x5b8], eax ; jmp 0x66301
0x0000000000068a24 : mov dword ptr [rbp - 0x5c0], ecx ; jmp 0x654be
0x000000000005f46a : mov dword ptr [rbp - 0x610], ecx ; call 0x5bf08
0x000000000005f469 : mov dword ptr [rbp - 0x610], r9d ; call 0x5bf09
0x00000000000600e2 : mov dword ptr [rbp - 0x678], eax ; jmp 0x5cbd0
0x0000000000103124 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x0000000000102da9 : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001034f8 : mov dword ptr [rbp - 0x80], edx ; lea rdx, [rcx + 0x70] ; call rax
0x0000000000102f98 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000103283 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000010342c : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000103308 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000f900f : mov dword ptr [rbp - 0x830], eax ; mov eax, r10d ; syscall
0x0000000000102031 : mov dword ptr [rbp - 0xc8], ecx ; call 0xfe2d8
0x0000000000102069 : mov dword ptr [rbp - 0xc8], edx ; call 0xfe2d8
0x00000000000842a7 : mov dword ptr [rbp], eax ; je 0x84381 ; call rax
0x000000000010b308 : mov dword ptr [rbp], eax ; jmp 0x10b2d4
0x000000000010bb28 : mov dword ptr [rbp], eax ; jmp 0x10baf4
0x00000000001108a8 : mov dword ptr [rbp], eax ; jmp 0x110874
0x0000000000121828 : mov dword ptr [rbp], eax ; jmp 0x1217f4
0x0000000000121b78 : mov dword ptr [rbp], eax ; jmp 0x121b44
0x00000000000fc1d8 : mov dword ptr [rbp], eax ; jmp 0xfc1a4
0x00000000000fdab8 : mov dword ptr [rbp], eax ; jmp 0xfda84
0x0000000000085a48 : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000112daf : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011a1a3 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003800a : mov dword ptr [rbp], edx ; call rax
0x0000000000111bd2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111bd1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ab82 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078787 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000123d24 : mov dword ptr [rbx + 0x10], eax ; movups xmmword ptr [rbx], xmm0 ; jmp 0x123cf6
0x0000000000131dd6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000078c3f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000febda : mov dword ptr [rbx + 0x10], esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a6d5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000131d8e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076baa : mov dword ptr [rbx + 0x18], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fec1a : mov dword ptr [rbx + 0x18], esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a738 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc33b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b49e4 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077531 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000085265 : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000b4b13 : mov dword ptr [rbx + 0x30], ecx ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000cd790 : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5445 : mov dword ptr [rbx + 0x38], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034bfd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000007b87d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008531d : mov dword ptr [rbx + 0x48], ecx ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000007b53b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000079d32 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071e44 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000106cce : mov dword ptr [rbx + 0xc], eax ; jne 0x106c76 ; mov rax, rdi ; ret
0x00000000000b2f27 : mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000e6a25 : mov dword ptr [rbx + 4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ab97 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000076031 : mov dword ptr [rbx + 8], edx ; movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000feb9a : mov dword ptr [rbx + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000855ad : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2af2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000007b80c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000132191 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007b880 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127015 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f2a90 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000083f10 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000070905 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c4957 : mov dword ptr [rbx], ecx ; add byte ptr [rax + 0x142], bh ; syscall
0x000000000007238b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000085269 : mov dword ptr [rbx], edi ; call rcx
0x000000000005bf3e : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000636e2 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085321 : mov dword ptr [rbx], esi ; mov rdi, r9 ; call rcx
0x000000000006de32 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006db1e : mov dword ptr [rcx + 0x130], edx ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000014a0b2 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000a19d0 : mov dword ptr [rcx + 4], eax ; jne 0xa199e ; ret
0x000000000014a0a3 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000a19cf : mov dword ptr [rcx + 4], r8d ; jne 0xa199f ; ret
0x000000000014a114 : mov dword ptr [rcx + 5], edx ; ret
0x000000000014a124 : mov dword ptr [rcx + 6], edx ; ret
0x000000000014a0f3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000010140b : mov dword ptr [rcx + 8], 0xf6df75f8 ; ret 0x7508
0x000000000014a0e4 : mov dword ptr [rcx + 8], edx ; ret
0x000000000008cf10 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000001139e9 : mov dword ptr [rcx + rax - 2], edx ; mov eax, r8d ; ret
0x000000000002969c : mov dword ptr [rcx - 0x77], eax ; ret 0x8ce9
0x000000000008ced7 : mov dword ptr [rcx - 0x7c], 0xf3db75f9 ; ret
0x000000000015d657 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000015d642 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000015d631 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000a1b58 : mov dword ptr [rcx], 0 ; jne 0xa1b59 ; ret
0x00000000001a968d : mov dword ptr [rcx], 0xf7a6b000 ; call rax
0x000000000018b165 : mov dword ptr [rcx], 0xf7b37400 ; jmp rax
0x0000000000086ed9 : mov dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000018a4c5 : mov dword ptr [rcx], eax ; add byte ptr [rbx + rbp*2 - 0xa], ah ; jmp rax
0x00000000000cf2b8 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000a1b86 : mov dword ptr [rcx], eax ; jne 0xa1b75 ; ret
0x00000000000c44dc : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0xc44b0
0x0000000000113af3 : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x00000000000351ea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071257 : mov dword ptr [rcx], eax ; ret
0x000000000007544a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000703dc : mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000710c1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000113b4a : mov dword ptr [rcx], edi ; ret
0x000000000014a071 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014a090 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014a0d1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000014a0b0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014a0f1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014a101 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014a111 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014a121 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014a131 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014a141 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014a0a0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000014a0e1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000014a061 : mov dword ptr [rcx], edx ; ret
0x00000000000a1b85 : mov dword ptr [rcx], r8d ; jne 0xa1b76 ; ret
0x00000000000e74c2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000117cdd : mov dword ptr [rdi + 0x10], eax ; je 0x117cf9 ; add rsp, 8 ; ret
0x000000000007db64 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000009cadd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000009d93d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000009cb1b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009d97b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x000000000009cb9d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000009d9fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x000000000009b4ab : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009c17e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009b52d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000045d1f : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009f56d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f5ab : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f62d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009c200 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009b570 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009b590 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009b551 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e74aa : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000ed8e5 : mov dword ptr [rdi + 0x16], eax ; ret
0x000000000009cc03 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000009da63 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000009b573 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009f693 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000012a3a0 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b433 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000778f7 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000009cbe5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x000000000009da45 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000009cc23 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000009da83 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x000000000009b555 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009f675 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009f6b3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012a432 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000012a366 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000b3e65 : mov dword ptr [rdi + 0x20], ecx ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ef9e : mov dword ptr [rdi + 0x20], ecx ; ret
0x000000000007db61 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000012a343 : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012a4e1 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ce942 : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000ce945 : mov dword ptr [rdi + 0x30], eax ; ret
0x0000000000124868 : mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000007b463 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001247d5 : mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000124895 : mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000007dba9 : mov dword ptr [rdi + 0x60], ecx ; ret
0x000000000007dc36 : mov dword ptr [rdi + 0x880], eax ; ret
0x0000000000112f5a : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009cb5d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000009d9bd : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000009b4cd : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000009f5ed : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009cafb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000009d95b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009cb7d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000009d9dd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000009b48b : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009f58b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009f60d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000013f645 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000013f488 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f728 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000013f5d5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000013f418 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000038ed3 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009c9c7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000009d807 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x000000000013f565 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000013f3a8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b3b7 : mov dword ptr [rdi + 3], edx ; ret
0x000000000009f437 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000008d064 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x0000000000038ecd : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009c9a9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x000000000009d7e9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x000000000013f338 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000008cf97 : mov dword ptr [rdi + 4], edx ; ret
0x000000000009f419 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e6bb0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ca5b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x000000000009d8ab : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x000000000013f2c8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b41b : mov dword ptr [rdi + 5], edx ; ret
0x000000000009f4db : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009ca7b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x000000000009d8cb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x000000000013f258 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b42b : mov dword ptr [rdi + 6], edx ; ret
0x000000000009f4fb : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009ca19 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000009d869 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009ca9b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x000000000009d8eb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x000000000013f1e8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b3f9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000009f499 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009f51b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f03e8 : mov dword ptr [rdi + 8], 0 ; ret
0x0000000000085b70 : mov dword ptr [rdi + 8], 0 ; xor eax, eax ; ret
0x00000000000470ae : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000011f826 : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x000000000007b437 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000075ebd : mov dword ptr [rdi + 8], ecx ; movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000045ca4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000038704 : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x00000000000386ec : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; ret
0x000000000009d84b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000009ca39 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009d889 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x000000000009c9fb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000045524 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000007815f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000009b3eb : mov dword ptr [rdi + 8], edx ; ret
0x000000000009f47b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009f4b9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000ed352 : mov dword ptr [rdi + 8], esi ; ret
0x00000000000a045b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000a0055 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x00000000000a0453 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015a0d5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000a0045 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000000a044b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0037 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x00000000001390f5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139133 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000045c0f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000013947c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ec98 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013965c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ec18 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013984c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013eb98 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139a1d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013eb09 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139c1d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013ea79 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139e1d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013e9e9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009c340 : mov dword ptr [rdi - 1], edx ; ret
0x00000000001397fd : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000139615 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001397f9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000139bd9 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000001392af : mov dword ptr [rdi - 4], edx ; ret
0x0000000000139bd6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139dd6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139fd6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000045b9a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000139137 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001392ac : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001393a8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001392f4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ed18 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000070930 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000381c2 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000008cf69 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x0000000000036bcf : mov dword ptr [rdi], eax ; jmp 0x36b99
0x000000000011f823 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000386e9 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x00000000000f03d5 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a5eb : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x000000000003870a : mov dword ptr [rdi], eax ; ret
0x0000000000045b94 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000045c9e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000ed3ae : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000005528a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009c995 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000009c9e7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000008d110 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x000000000009c974 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000009b374 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009d7a7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x000000000009c047 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009d7d5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x000000000009c065 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009d827 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x000000000009c0a7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009c9c5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000009d805 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x000000000009b3b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009ca17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000009d867 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009b3f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009ca37 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009d887 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x000000000009b407 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000015dd17 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000009b418 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009b428 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009b438 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008d038 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009b3a6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009b3e8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000015dd23 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000034136 : mov dword ptr [rdi], ecx ; ret
0x000000000015a0cf : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000008cf41 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000009c964 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000009d794 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x000000000009c982 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000009d7c2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x000000000009c9d4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x000000000009d814 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x000000000009c360 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009c3a1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009c3c1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009c3d1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000115b9f : mov dword ptr [rdi], edx ; mov qword ptr [rax], 0 ; ret
0x000000000009c3e1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009c3f1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009c370 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009c3b1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008cca3 : mov dword ptr [rdi], edx ; pop rbx ; ret
0x0000000000034476 : mov dword ptr [rdi], edx ; ret
0x000000000009f3c4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009f3f2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009f444 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000008d0e1 : mov dword ptr [rdi], esi ; lea rax, [rdi + rax - 1] ; ret
0x000000000015d63f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000046e76 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000085a59 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x000000000015d62e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000085b5e : mov dword ptr [rdi], esi ; mov rax, r8 ; ret
0x000000000008d011 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000015d653 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000046e5b : mov dword ptr [rdi], esi ; ret
0x00000000000e6b8d : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x0000000000137d12 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000008cf68 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x00000000001251bc : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x00000000000787e5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x00000000000710be : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071254 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000011e6d0 : mov dword ptr [rdx + 0x20], esi ; ret
0x00000000000cf1a1 : mov dword ptr [rdx + 0x20], esi ; xor eax, eax ; ret
0x000000000013f89b : mov dword ptr [rdx + 0x27], ecx ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000713ca : mov dword ptr [rdx + 0x28], esi ; mov byte ptr [rcx], dil ; ret
0x000000000011e6ac : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011e6b0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000121e0e : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001250bc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000014c437 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000097f7c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000006b00e : mov dword ptr [rdx + 4], 1 ; ret
0x000000000014c419 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000097f5e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000014c4cb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000014c449 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000001480f9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000014c4eb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000014c469 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000148109 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000014c489 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000014c50b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000098000 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b4906 : mov dword ptr [rdx + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000058d8e : mov dword ptr [rdx + 8], eax ; jmp 0x58d62
0x000000000014c4a9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000014c39b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x0000000000097fe2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000006afbb : mov dword ptr [rdx + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000cf207 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115b3e : mov dword ptr [rdx + rax*8], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5cdd : mov dword ptr [rdx], 0x89480000 ; ret
0x000000000014c3c4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000014c3f2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000014c344 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000000f01c2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0xf019e
0x00000000000351ba : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000046e78 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000047093 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000c150d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000038f8a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000097ef9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c0c92 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002df6d : mov dword ptr [rdx], eax ; ret
0x00000000000761bc : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000008660c : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x00000000000a0b15 : mov dword ptr [rdx], ecx ; jne 0xa0b0d ; ret
0x00000000000de5a7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000008cb45 : mov dword ptr [rdx], ecx ; ret
0x00000000000f2ee5 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x00000000000dbaeb : mov dword ptr [rdx], edi ; ret
0x00000000000c1363 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c142d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x0000000000087661 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c150c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001654ef : mov dword ptr [rip + 0x25138b], ebx ; jne 0x1654e1 ; pop rbx ; ret
0x0000000000132b92 : mov dword ptr [rip + 0x283d98], esi ; xor eax, eax ; ret
0x0000000000104938 : mov dword ptr [rip + 0x2b3942], eax ; pop rbp ; ret
0x00000000000f94d0 : mov dword ptr [rip + 0x2bae8a], ebx ; pop rbx ; ret
0x00000000000f193a : mov dword ptr [rip + 0x2c2a08], edi ; ret
0x00000000000f0ba9 : mov dword ptr [rip + 0x2c66a1], edx ; ret
0x0000000000086318 : mov dword ptr [rip + 0x3306ca], eax ; ret
0x000000000007d7b4 : mov dword ptr [rip + 0x336b2e], eax ; ret
0x000000000007d7a4 : mov dword ptr [rip + 0x336b36], eax ; ret
0x000000000007d792 : mov dword ptr [rip + 0x336b38], edx ; ret
0x000000000007d754 : mov dword ptr [rip + 0x336b3e], eax ; ret
0x000000000007d72e : mov dword ptr [rip + 0x336b4c], eax ; ret
0x000000000007d744 : mov dword ptr [rip + 0x336b56], eax ; ret
0x000000000007d6fe : mov dword ptr [rip + 0x336b84], eax ; ret
0x000000000007d6dd : mov dword ptr [rip + 0x336bc9], eax ; ret
0x000000000007d713 : mov dword ptr [rip + 0x339213], eax ; ret
0x0000000000035b9b : mov dword ptr [rip + 0x37e60b], eax ; mov eax, edx ; ret
0x0000000000035b8c : mov dword ptr [rip + 0x37e616], edx ; ret
0x000000000002134b : mov dword ptr [rip + 0x39817f], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000085cf2 : mov dword ptr [rip + 0x450f4800], ecx ; ret 0xc3f3
0x00000000000dc674 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003866d : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000cf224 : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000038671 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000075913 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x00000000000cf227 : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000ed19b : mov dword ptr [rsi + 0x48], eax ; ret
0x0000000000072935 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ec496 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x0000000000038dfb : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000038e87 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000a1978 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000dc657 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000011d7a1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000dc670 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b2171 : mov dword ptr [rsi + rcx], edx ; jne 0xb216e ; ret
0x000000000015dd26 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000015dd19 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000011d7bf : mov dword ptr [rsi], 0 ; ret
0x000000000011d850 : mov dword ptr [rsi], 0xa ; ret
0x000000000011d840 : mov dword ptr [rsi], 0xb ; ret
0x000000000011d870 : mov dword ptr [rsi], 0xc ; ret
0x000000000011d79b : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x000000000011d860 : mov dword ptr [rsi], 8 ; ret
0x00000000000778fb : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007d942 : mov dword ptr [rsi], ecx ; ret
0x0000000000112f5e : mov dword ptr [rsi], edi ; ret
0x000000000012ee31 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000038726 : mov dword ptr [rsi], edx ; ret
0x0000000000033b85 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000012c719 : mov dword ptr [rsp + 0x10], edx ; call 0xe8996
0x000000000008059f : mov dword ptr [rsp + 0x18], ebx ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000011cdc4 : mov dword ptr [rsp + 0x18], edx ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000080625 : mov dword ptr [rsp + 0x18], edx ; mov qword ptr [rsp + 8], rax ; call rsi
0x00000000000f6caa : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x28], r9 ; syscall
0x00000000000369c3 : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000000f6caf : mov dword ptr [rsp + 0x28], ecx ; syscall
0x0000000000104e13 : mov dword ptr [rsp + 0x90], eax ; call 0x21109
0x0000000000127a63 : mov dword ptr [rsp + 0xc8], edx ; call rax
0x00000000000f7d92 : mov dword ptr [rsp + 0xc], eax ; call 0x104026
0x0000000000034ea2 : mov dword ptr [rsp + 0xf8], eax ; syscall
0x00000000000e7d74 : mov dword ptr [rsp + 8], eax ; call 0x104026
0x00000000000805a4 : mov dword ptr [rsp + 8], eax ; call rsi
0x000000000011cbcc : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call 0x129628
0x000000000012a822 : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000801d3 : mov dword ptr [rsp + 8], ebx ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000073dae : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x0000000000080526 : mov dword ptr [rsp + 8], ecx ; xor edi, edi ; call qword ptr [rax]
0x00000000000e7d3f : mov dword ptr [rsp + 8], edx ; call 0x103fc6
0x0000000000080427 : mov dword ptr [rsp + 8], edx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000e7d3e : mov dword ptr [rsp + 8], r10d ; call 0x103fc7
0x0000000000033c54 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000046fea : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000114d3f : mov dword ptr [rsp], eax ; call 0x21025
0x00000000001347e6 : mov dword ptr [rsp], eax ; call 0x21235
0x000000000008417d : mov dword ptr [rsp], eax ; je 0x84261 ; call rax
0x0000000000084452 : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004989e : mov dword ptr [rsp], ecx ; call 0x45b15
0x00000000001131c9 : mov dword ptr [rsp], ecx ; mov r9, rsp ; jmp 0x11319b
0x00000000000791c2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x000000000007b5a5 : mov dword ptr [rsp], edi ; call 0x78065
0x00000000001130e9 : mov dword ptr [rsp], edi ; mov r9, rsp ; jmp 0x1130c3
0x000000000004989d : mov dword ptr [rsp], r9d ; call 0x45b16
0x000000000005330c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x00000000000f2b07 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000ec5ef : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000132a97 : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x00000000000819ca : mov dword ptr fs:[rax], 0xc ; jmp 0x8199e
0x0000000000084361 : mov dword ptr fs:[rax], 0xc ; jmp 0x8433d
0x00000000000816b7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000bf867 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000222b7 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000de8a1 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000de852 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000010b307 : mov dword ptr fs:[rbp], eax ; jmp 0x10b2d5
0x000000000010bb27 : mov dword ptr fs:[rbp], eax ; jmp 0x10baf5
0x00000000001108a7 : mov dword ptr fs:[rbp], eax ; jmp 0x110875
0x0000000000121827 : mov dword ptr fs:[rbp], eax ; jmp 0x1217f5
0x0000000000121b77 : mov dword ptr fs:[rbp], eax ; jmp 0x121b45
0x00000000000fc1d7 : mov dword ptr fs:[rbp], eax ; jmp 0xfc1a5
0x00000000000fdab7 : mov dword ptr fs:[rbp], eax ; jmp 0xfda85
0x0000000000111bd0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c44db : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xc44b1
0x00000000000351e9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f01c1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0xf019f
0x00000000000351b9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c1362 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c142c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000a0044 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000139610 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009b360 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ec7a3 : mov eax, 0 ; cmova eax, edx ; ret
0x000000000011be44 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a05bb : mov eax, 0x10 ; pop rbx ; ret
0x000000000006b020 : mov eax, 0x10 ; ret
0x00000000000ed47a : mov eax, 0x10 ; syscall
0x00000000000ed8df : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000e7efc : mov eax, 0x101 ; syscall
0x00000000000e7c30 : mov eax, 0x102 ; syscall
0x00000000000e791a : mov eax, 0x103 ; syscall
0x00000000000e94c3 : mov eax, 0x104 ; syscall
0x00000000000f02c5 : mov eax, 0x105 ; syscall
0x00000000000e7972 : mov eax, 0x106 ; syscall
0x00000000000e9dc0 : mov eax, 0x107 ; syscall
0x000000000006af33 : mov eax, 0x108 ; syscall
0x00000000000e9ca3 : mov eax, 0x109 ; syscall
0x00000000000e9d00 : mov eax, 0x10a ; syscall
0x00000000000e9d63 : mov eax, 0x10b ; syscall
0x00000000000e7b9d : mov eax, 0x10c ; syscall
0x00000000000e8448 : mov eax, 0x10d ; syscall
0x00000000000eea82 : mov eax, 0x10e ; syscall
0x00000000000ec6e3 : mov eax, 0x10f ; syscall
0x00000000000e66a0 : mov eax, 0x11 ; syscall
0x00000000000f79e0 : mov eax, 0x110 ; syscall
0x00000000000f7220 : mov eax, 0x113 ; syscall
0x00000000000f70c0 : mov eax, 0x114 ; syscall
0x00000000000ed1b0 : mov eax, 0x115 ; syscall
0x00000000000f7170 : mov eax, 0x116 ; syscall
0x00000000000ed098 : mov eax, 0x118 ; syscall
0x00000000000f6e36 : mov eax, 0x119 ; syscall
0x00000000000f7a40 : mov eax, 0x11b ; syscall
0x00000000000ed260 : mov eax, 0x11d ; syscall
0x00000000000f7a73 : mov eax, 0x11e ; syscall
0x00000000000f7aa0 : mov eax, 0x11f ; syscall
0x00000000000e6750 : mov eax, 0x12 ; syscall
0x00000000000f8640 : mov eax, 0x120 ; syscall
0x00000000000f6f20 : mov eax, 0x122 ; syscall
0x00000000000f76b0 : mov eax, 0x123 ; syscall
0x00000000000e8a20 : mov eax, 0x124 ; syscall
0x00000000000e8a80 : mov eax, 0x125 ; syscall
0x00000000000f77d0 : mov eax, 0x126 ; syscall
0x00000000000ee0f3 : mov eax, 0x127 ; syscall
0x00000000000ee1a3 : mov eax, 0x128 ; syscall
0x00000000000f86f0 : mov eax, 0x12b ; syscall
0x00000000000f7ad0 : mov eax, 0x12c ; syscall
0x00000000000f7533 : mov eax, 0x12d ; syscall
0x00000000000f6fa3 : mov eax, 0x12e ; syscall
0x00000000000ed9b7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000f7b03 : mov eax, 0x12f ; syscall
0x00000000000edfad : mov eax, 0x13 ; syscall
0x00000000000f72ed : mov eax, 0x130 ; syscall
0x00000000000f75f0 : mov eax, 0x131 ; syscall
0x00000000000eecd0 : mov eax, 0x132 ; syscall
0x00000000000f87a0 : mov eax, 0x133 ; syscall
0x00000000000f7b30 : mov eax, 0x134 ; syscall
0x00000000000e76c7 : mov eax, 0x135 ; syscall
0x00000000000f7b63 : mov eax, 0x136 ; syscall
0x00000000000f7b93 : mov eax, 0x137 ; syscall
0x0000000000038f1d : mov eax, 0x13e ; syscall
0x00000000000f7bc0 : mov eax, 0x13f ; syscall
0x00000000000ee04d : mov eax, 0x14 ; syscall
0x000000000018c854 : mov eax, 0x1400024c ; mov bh, dl ; jmp rax
0x00000000000c495a : mov eax, 0x142 ; syscall
0x00000000000ecfbf : mov eax, 0x146 ; syscall
0x00000000000ee272 : mov eax, 0x147 ; syscall
0x00000000000ee382 : mov eax, 0x148 ; syscall
0x00000000000f7408 : mov eax, 0x149 ; syscall
0x00000000000f7bf0 : mov eax, 0x14a ; syscall
0x00000000000f7c20 : mov eax, 0x14b ; syscall
0x00000000000e8290 : mov eax, 0x15 ; syscall
0x0000000000083f20 : mov eax, 0x16 ; ret
0x00000000000e8a50 : mov eax, 0x16 ; syscall
0x00000000000ee990 : mov eax, 0x17 ; syscall
0x00000000000de730 : mov eax, 0x18 ; syscall
0x00000000000f7893 : mov eax, 0x19 ; syscall
0x00000000000f1c4d : mov eax, 0x1a ; syscall
0x00000000000f1d10 : mov eax, 0x1b ; syscall
0x00000000000e74d7 : mov eax, 0x1c ; syscall
0x00000000000f8c93 : mov eax, 0x1d ; syscall
0x00000000000f8c30 : mov eax, 0x1e ; syscall
0x00000000000f8cc0 : mov eax, 0x1f ; syscall
0x00000000000c5ca2 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000a05c9 : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c5bc7 : mov eax, 0x20 ; ret
0x00000000000e89c0 : mov eax, 0x20 ; syscall
0x000000000002dcc7 : mov eax, 0x200 ; ret
0x00000000000e89f0 : mov eax, 0x21 ; syscall
0x00000000000c43bd : mov eax, 0x22 ; syscall
0x00000000000c446d : mov eax, 0x23 ; syscall
0x00000000000b62d0 : mov eax, 0x24 ; syscall
0x00000000000c4310 : mov eax, 0x25 ; syscall
0x00000000000b6300 : mov eax, 0x26 ; syscall
0x00000000000c52c0 : mov eax, 0x27 ; syscall
0x00000000000ecc53 : mov eax, 0x28 ; syscall
0x00000000000f8360 : mov eax, 0x29 ; syscall
0x00000000000f7d4d : mov eax, 0x2a ; syscall
0x00000000000f7c7d : mov eax, 0x2b ; syscall
0x00000000000f80e6 : mov eax, 0x2c ; syscall
0x00000000000f7eb6 : mov eax, 0x2d ; syscall
0x00000000000f819d : mov eax, 0x2e ; syscall
0x00000000000f803d : mov eax, 0x2f ; syscall
0x00000000000a05c2 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000f8330 : mov eax, 0x30 ; syscall
0x00000000000f7d10 : mov eax, 0x31 ; syscall
0x00000000000f7e70 : mov eax, 0x32 ; syscall
0x00000000000f7e10 : mov eax, 0x33 ; syscall
0x00000000000f7de0 : mov eax, 0x34 ; syscall
0x000000000018cab4 : mov eax, 0x340001ca ; fdiv st(2), st(0) ; jmp rax
0x000000000018b3ac : mov eax, 0x340001d0 ; out 0xf7, al ; call rsp
0x00000000000f8393 : mov eax, 0x35 ; syscall
0x00000000000f8303 : mov eax, 0x36 ; syscall
0x00000000000f7e43 : mov eax, 0x37 ; syscall
0x0000000000042178 : mov eax, 0x38 ; syscall
0x00000000000c4841 : mov eax, 0x3a ; syscall
0x00000000000c48d0 : mov eax, 0x3b ; syscall
0x00000000000f6d32 : mov eax, 0x3c ; syscall
0x00000000000c40ba : mov eax, 0x3d ; syscall
0x00000000000424a8 : mov eax, 0x3e ; mov edi, ebx ; syscall
0x00000000000351d0 : mov eax, 0x3e ; syscall
0x00000000000c4010 : mov eax, 0x3f ; syscall
0x00000000000a05d7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c5bf6 : mov eax, 0x40 ; ret
0x00000000000f8b30 : mov eax, 0x40 ; syscall
0x000000000018ce2c : mov eax, 0x4000062 ; fdivp st(5) ; jmp rsp
0x00000000001899bc : mov eax, 0x400014a ; loop 0x1899bd ; jmp rsp
0x00000000000f8b00 : mov eax, 0x41 ; syscall
0x00000000000f8b92 : mov eax, 0x42 ; syscall
0x00000000000f8c60 : mov eax, 0x43 ; syscall
0x00000000000f8aa0 : mov eax, 0x44 ; syscall
0x0000000000188b7c : mov eax, 0x440000f6 ; retf 0xffef
0x00000000000f8940 : mov eax, 0x45 ; syscall
0x0000000000173ebb : mov eax, 0x45155e93 ; ret 0x591c
0x00000000000f89f0 : mov eax, 0x46 ; syscall
0x00000000000f8ad0 : mov eax, 0x47 ; syscall
0x00000000000e8609 : mov eax, 0x48 ; syscall
0x00000000000e87c0 : mov eax, 0x49 ; syscall
0x00000000000eebad : mov eax, 0x4a ; syscall
0x00000000000eec5d : mov eax, 0x4b ; syscall
0x00000000000f0300 : mov eax, 0x4c ; syscall
0x00000000000f0330 : mov eax, 0x4d ; syscall
0x00000000000e8c4b : mov eax, 0x4f ; syscall
0x00000000000e8b40 : mov eax, 0x50 ; syscall
0x00000000000e8b70 : mov eax, 0x51 ; syscall
0x000000000006af00 : mov eax, 0x52 ; syscall
0x00000000000e7c00 : mov eax, 0x53 ; syscall
0x00000000000e9df0 : mov eax, 0x54 ; syscall
0x000000000018addc : mov eax, 0x540001b2 ; and al, 0xf7 ; call rax
0x000000000018b99c : mov eax, 0x540001f4 ; retf 0xfff8
0x000000000018c224 : mov eax, 0x5400022a ; int1 ; stc ; call qword ptr [rax]
0x00000000000e8abd : mov eax, 0x55 ; syscall
0x00000000000e9c70 : mov eax, 0x56 ; syscall
0x00000000000e9d90 : mov eax, 0x57 ; syscall
0x00000000000e9cd0 : mov eax, 0x58 ; syscall
0x00000000000e9d30 : mov eax, 0x59 ; syscall
0x00000000000e7b10 : mov eax, 0x5a ; syscall
0x00000000000e7b40 : mov eax, 0x5b ; syscall
0x000000000002a4d8 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000125fec : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000e9430 : mov eax, 0x5c ; syscall
0x00000000000e9460 : mov eax, 0x5d ; syscall
0x00000000000e9490 : mov eax, 0x5e ; syscall
0x00000000000e7b00 : mov eax, 0x5f ; syscall
0x00000000000a05d0 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000b39d0 : mov eax, 0x60 ; syscall
0x00000000000eda30 : mov eax, 0x62 ; syscall
0x00000000000f79b0 : mov eax, 0x63 ; syscall
0x0000000000003608 : mov eax, 0x637514da ; jle 0x3646 ; retf 0x8792
0x00000000000c4040 : mov eax, 0x64 ; syscall
0x00000000000ef2d8 : mov eax, 0x65 ; syscall
0x00000000000c52e0 : mov eax, 0x66 ; syscall
0x00000000000f7830 : mov eax, 0x67 ; syscall
0x00000000000c5300 : mov eax, 0x68 ; syscall
0x00000000000c536e : mov eax, 0x69 ; syscall
0x00000000000c53fe : mov eax, 0x6a ; syscall
0x00000000000c52f0 : mov eax, 0x6b ; syscall
0x00000000000c5310 : mov eax, 0x6c ; syscall
0x00000000000c5550 : mov eax, 0x6d ; syscall
0x00000000000c52d0 : mov eax, 0x6e ; syscall
0x00000000000c5580 : mov eax, 0x6f ; syscall
0x00000000000c55e0 : mov eax, 0x70 ; syscall
0x00000000000ee47e : mov eax, 0x71 ; syscall
0x00000000000ee51e : mov eax, 0x72 ; syscall
0x00000000000c5320 : mov eax, 0x73 ; syscall
0x00000000000c0b6e : mov eax, 0x74 ; syscall
0x00000000000e7135 : mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000c568e : mov eax, 0x75 ; syscall
0x00000000000c5610 : mov eax, 0x76 ; syscall
0x00000000000e7159 : mov eax, 0x77 ; mov edi, edx ; syscall
0x00000000000c572e : mov eax, 0x77 ; syscall
0x00000000000c5640 : mov eax, 0x78 ; syscall
0x00000000000c5520 : mov eax, 0x79 ; syscall
0x00000000000f6dc0 : mov eax, 0x7a ; syscall
0x00000000000f6df0 : mov eax, 0x7b ; syscall
0x00000000000c55b0 : mov eax, 0x7c ; syscall
0x00000000000f7590 : mov eax, 0x7d ; syscall
0x00000000000c5b46 : mov eax, 0x7d00 ; ret
0x00000000000c5b00 : mov eax, 0x7e ; ret
0x00000000000f75c0 : mov eax, 0x7e ; syscall
0x00000000000c5c6a : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000c5ab6 : mov eax, 0x7f ; ret
0x0000000000035205 : mov eax, 0x7f ; syscall
0x0000000000114010 : mov eax, 0x7fffffff ; ret
0x00000000000a05ad : mov eax, 0x80 ; pop rbx ; ret
0x0000000000035dc2 : mov eax, 0x81 ; syscall
0x0000000000035252 : mov eax, 0x82 ; syscall
0x00000000000356f0 : mov eax, 0x83 ; syscall
0x00000000000c50f5 : mov eax, 0x83485874 ; ret 0xc610
0x00000000000e76e0 : mov eax, 0x84 ; syscall
0x00000000000e78b6 : mov eax, 0x85 ; syscall
0x00000000000f7a10 : mov eax, 0x86 ; syscall
0x00000000000f6fd0 : mov eax, 0x87 ; syscall
0x00000000000f4417 : mov eax, 0x88 ; syscall
0x00000000000e79c0 : mov eax, 0x89 ; syscall
0x00000000000e40f7 : mov eax, 0x89000000 ; ret 0xbc41
0x00000000000ee0e4 : mov eax, 0x8949002c ; retf 0x8b
0x00000000000e79f0 : mov eax, 0x8a ; syscall
0x00000000000edd60 : mov eax, 0x8c ; syscall
0x00000000001a1630 : mov eax, 0x8c000146 ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000edda0 : mov eax, 0x8d ; syscall
0x00000000000de670 : mov eax, 0x8e ; syscall
0x00000000000de6a0 : mov eax, 0x8f ; syscall
0x00000000000de6d0 : mov eax, 0x90 ; syscall
0x00000000000de700 : mov eax, 0x91 ; syscall
0x00000000000de760 : mov eax, 0x92 ; syscall
0x00000000000de790 : mov eax, 0x93 ; syscall
0x00000000000de7c0 : mov eax, 0x94 ; syscall
0x000000000018b614 : mov eax, 0x940001dc ; adc edi, eax ; jmp rax
0x000000000018c9a4 : mov eax, 0x94000253 ; scasb al, byte ptr [rdi] ; cli ; call rsp
0x00000000000f1d70 : mov eax, 0x95 ; syscall
0x00000000000f1da0 : mov eax, 0x96 ; syscall
0x00000000000f1dd0 : mov eax, 0x97 ; syscall
0x00000000000f1e00 : mov eax, 0x98 ; syscall
0x00000000000eeff0 : mov eax, 0x99 ; syscall
0x00000000000f74f0 : mov eax, 0x9a ; syscall
0x00000000000f78f0 : mov eax, 0x9b ; syscall
0x00000000000f7923 : mov eax, 0x9d ; syscall
0x00000000000f74c0 : mov eax, 0x9e ; syscall
0x00000000000f7560 : mov eax, 0x9f ; syscall
0x00000000000f564e : mov eax, 0xa ; pop rbx ; pop rbp ; ret
0x00000000000f1c10 : mov eax, 0xa ; syscall
0x00000000000eeb70 : mov eax, 0xa1 ; syscall
0x0000000000003278 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000eec20 : mov eax, 0xa2 ; syscall
0x00000000000eeb40 : mov eax, 0xa3 ; syscall
0x00000000000b3ab0 : mov eax, 0xa4 ; syscall
0x000000000018c394 : mov eax, 0xa4000232 ; or al, 0xfa ; jmp rax
0x00000000000f7863 : mov eax, 0xa5 ; syscall
0x00000000000f6d60 : mov eax, 0xa6 ; syscall
0x00000000000ef020 : mov eax, 0xa7 ; syscall
0x00000000000ef050 : mov eax, 0xa8 ; syscall
0x00000000000eed0c : mov eax, 0xa9 ; syscall
0x00000000000ee890 : mov eax, 0xaa ; syscall
0x00000000000ee950 : mov eax, 0xab ; syscall
0x00000000000f6c30 : mov eax, 0xac ; syscall
0x00000000000f6c00 : mov eax, 0xad ; syscall
0x00000000000f7620 : mov eax, 0xae ; syscall
0x00000000000f7743 : mov eax, 0xaf ; syscall
0x00000000000f1be0 : mov eax, 0xb ; syscall
0x00000000000f7650 : mov eax, 0xb0 ; syscall
0x00000000000f7710 : mov eax, 0xb1 ; syscall
0x00000000000f7953 : mov eax, 0xb2 ; syscall
0x00000000000f7983 : mov eax, 0xb3 ; syscall
0x00000000000f78c0 : mov eax, 0xb4 ; syscall
0x000000000012eb63 : mov eax, 0xb5 ; syscall
0x000000000012ebb3 : mov eax, 0xb6 ; syscall
0x0000000000186ad9 : mov eax, 0xb796fffb ; sti ; jmp qword ptr [rsi]
0x0000000000121e9f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000034eb7 : mov eax, 0xba ; syscall
0x00000000000f6d90 : mov eax, 0xbb ; syscall
0x00000000000f4ec3 : mov eax, 0xbc ; syscall
0x00000000000f4e63 : mov eax, 0xbd ; syscall
0x00000000000f4d43 : mov eax, 0xbe ; syscall
0x00000000000f4d73 : mov eax, 0xbf ; syscall
0x00000000000cd7c1 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000e682c : mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x0000000000083f38 : mov eax, 0xc ; pop rbx ; ret
0x00000000000f4dd3 : mov eax, 0xc0 ; syscall
0x00000000000f4cb3 : mov eax, 0xc1 ; syscall
0x00000000000f4da0 : mov eax, 0xc2 ; syscall
0x00000000000f4e00 : mov eax, 0xc3 ; syscall
0x00000000000f4ce0 : mov eax, 0xc4 ; syscall
0x000000000018cf54 : mov eax, 0xc40000ff ; in al, dx ; std ; call rsp
0x00000000000f4e90 : mov eax, 0xc5 ; syscall
0x00000000000f4e30 : mov eax, 0xc6 ; syscall
0x00000000000f4d10 : mov eax, 0xc7 ; syscall
0x00000000001776d0 : mov eax, 0xc7ffee63 ; out dx, al ; jmp qword ptr [rbx]
0x00000000000b3910 : mov eax, 0xc9 ; syscall
0x000000000012ee82 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x000000000012ee7c : mov eax, 0xca ; ret
0x0000000000103f84 : mov eax, 0xca ; syscall
0x000000000018920c : mov eax, 0xd400011c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00000000000f7680 : mov eax, 0xd5 ; syscall
0x00000000000f1d43 : mov eax, 0xd8 ; syscall
0x00000000000f8c03 : mov eax, 0xdc ; syscall
0x000000000019b830 : mov eax, 0xdc0000e8 ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a6330 : mov eax, 0xdc000193 ; retf 0xfff6
0x00000000000ec793 : mov eax, 0xdd ; syscall
0x0000000000034ee4 : mov eax, 0xe ; syscall
0x0000000000127126 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010475a : mov eax, 0xe3 ; syscall
0x00000000000bed2c : mov eax, 0xe4 ; syscall
0x00000000000c6285 : mov eax, 0xe5 ; syscall
0x00000000001047c4 : mov eax, 0xe6 ; syscall
0x00000000000f7010 : mov eax, 0xe8 ; syscall
0x00000000000f76e3 : mov eax, 0xe9 ; syscall
0x0000000000034ec2 : mov eax, 0xea ; syscall
0x00000000000f00e0 : mov eax, 0xeb ; syscall
0x0000000000034f71 : mov eax, 0xf ; syscall
0x0000000000002dee : mov eax, 0xf3f8ec1c ; ret
0x00000000000c4273 : mov eax, 0xf7 ; syscall
0x00000000000c5b66 : mov eax, 0xfa ; ret
0x00000000000f38e7 : mov eax, 0xfaeed3e8 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a1430 : mov eax, 0xfc000144 ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000c5b70 : mov eax, 0xfc17 ; ret
0x00000000000f77a0 : mov eax, 0xfd ; syscall
0x00000000000c5ae4 : mov eax, 0xfde8 ; jne 0xc5abe ; ret
0x00000000000f7770 : mov eax, 0xfe ; syscall
0x00000000000f7800 : mov eax, 0xff ; syscall
0x00000000000c5b10 : mov eax, 0xfffa ; ret
0x0000000000132ba1 : mov eax, 0xfffffffe ; ret
0x00000000000c44de : mov eax, 0xffffffff ; jmp 0xc44ae
0x00000000000f01c4 : mov eax, 0xffffffff ; jmp 0xf019c
0x00000000000f28cb : mov eax, 0xffffffff ; jmp 0xf28a3
0x00000000000562c8 : mov eax, 0xffffffff ; mov qword ptr [rdi], rsi ; ret
0x0000000000113f67 : mov eax, 0xffffffff ; mov rdx, rax ; ret
0x00000000000ede15 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000374fe : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab3bf : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000703ec : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000332be : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000034dcd : mov eax, 0xffffffff ; ret
0x00000000000ef85e : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001606f0 : mov eax, 1 ; jg 0x160709 ; neg eax ; ret
0x00000000000a1800 : mov eax, 1 ; jg 0xa1812 ; neg eax ; ret
0x000000000015d4a6 : mov eax, 1 ; jl 0x15d4b9 ; neg eax ; ret
0x0000000000059f11 : mov eax, 1 ; jmp rax
0x00000000000c5ff2 : mov eax, 1 ; js 0xc6008 ; ret
0x000000000011ef98 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rcx ; ret
0x0000000000046e55 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000125104 : mov eax, 1 ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000001250cc : mov eax, 1 ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000121d9c : mov eax, 1 ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000121db5 : mov eax, 1 ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e27fd : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007bd92 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023cc4 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000007231f : mov eax, 1 ; pop rbx ; ret
0x0000000000035a88 : mov eax, 1 ; ret
0x00000000000e819d : mov eax, 1 ; syscall
0x00000000000f5499 : mov eax, 2 ; pop rbx ; pop rbp ; ret
0x0000000000047095 : mov eax, 2 ; ret
0x0000000000104695 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000b2b31 : mov eax, 3 ; ret
0x00000000000e891d : mov eax, 3 ; syscall
0x00000000000b2b41 : mov eax, 4 ; ret
0x00000000000e77be : mov eax, 4 ; syscall
0x00000000001048b7 : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000e372c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000b2b51 : mov eax, 5 ; ret
0x00000000000e780c : mov eax, 5 ; syscall
0x00000000000b2b61 : mov eax, 6 ; ret
0x00000000000e785e : mov eax, 6 ; syscall
0x000000000010252c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000b2b71 : mov eax, 7 ; ret
0x00000000000ec60d : mov eax, 7 ; syscall
0x00000000000a05b4 : mov eax, 8 ; pop rbx ; ret
0x0000000000022950 : mov eax, 8 ; ret
0x00000000000e8260 : mov eax, 8 ; syscall
0x00000000000e6a30 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1b3c : mov eax, 9 ; syscall
0x00000000001044a2 : mov eax, dword ptr [0x10] ; ret
0x0000000000030937 : mov eax, dword ptr [r15 + 4] ; jmp 0x30905
0x0000000000129438 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f4f31 : mov eax, dword ptr [rax + 0x160] ; ret
0x0000000000131cff : mov eax, dword ptr [rax + 0x170] ; jmp rax
0x00000000000f9948 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000129475 : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f9930 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000001177e7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x1177f8 ; ret
0x00000000000ee748 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xee75b ; ret
0x0000000000074341 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000001038f9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000f9fa7 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000f4c9c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000012471d : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000074ce4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000012504d : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000038126 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007bdd8 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x7bdd9 ; ret
0x000000000002cb9e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f4f2a : mov eax, dword ptr [rax + 8] ; ret
0x000000000002b397 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x2b3a9 ; call rax
0x000000000002dcc5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de87 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d7ef : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002d838 : mov eax, dword ptr [rax + rdx] ; ret
0x00000000000fa934 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000018791d : mov eax, dword ptr [rax] ; add ah, al ; or ebx, ebp ; call rsp
0x0000000000195b59 : mov eax, dword ptr [rax] ; add byte ptr [rax + rdi*2], ah ; out dx, al ; call qword ptr [rdx]
0x0000000000187905 : mov eax, dword ptr [rax] ; add byte ptr [rsi + rax - 0x15], dh ; jmp qword ptr [rax]
0x000000000002cb9c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002dc9c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000038123 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001178b9 : mov eax, dword ptr [rax] ; ret
0x00000000000e80c7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0xe80e8 ; xor eax, eax ; syscall
0x000000000007e5be : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e5ce ; call rax
0x0000000000001ac9 : mov eax, dword ptr [rbp + 0x7872a51b] ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000068b13 : mov eax, dword ptr [rbp - 0x470] ; jmp 0x64d89
0x0000000000112d27 : mov eax, dword ptr [rbp - 0x80] ; jmp 0x112cfb
0x000000000007b58d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000102da6 : mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000007752d : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007bab9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000854dc : mov eax, dword ptr [rbx + 0x40] ; jne 0x854f8 ; mov rdi, r13 ; call rax
0x0000000000085580 : mov eax, dword ptr [rbx + 0x40] ; jne 0x85560 ; mov rdi, rsi ; call rax
0x000000000011e603 : mov eax, dword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000126fba : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x126fd0 ; pop rbx ; ret
0x0000000000097f79 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001480f6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000148106 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000097ffd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000009801d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001517fa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001530d2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014c3f0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000097f25 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000014c341 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000148011 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000014c3c1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000097ef6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001aca68 : mov eax, dword ptr [rcx] ; retf 2
0x000000000007298e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000007cb50 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007cb78 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000165da1 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x165db8 ; pop rbx ; ret
0x00000000000c471d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xc4732 ; call rax
0x000000000012a6fe : mov eax, dword ptr [rdi + 0x18] ; jbe 0x12a718 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000012a301 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bfd31 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000016514d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x165164 ; call rax
0x00000000000a1780 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xa1808 ; ret
0x00000000000a1795 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xa1808 ; ret
0x000000000011d7f7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012a680 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000077571 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a17a0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa1808 ; ret
0x00000000000a17bb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xa1808 ; ret
0x00000000000a17d0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xa1808 ; ret
0x00000000000a17e5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xa1808 ; ret
0x00000000000a17f0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa1808 ; ret
0x000000000011d82f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077461 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074ce1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d1a58 : mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1a50 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007ce01 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000000758c8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x758e0 ; ret
0x0000000000030938 : mov eax, dword ptr [rdi + 4] ; jmp 0x30904
0x00000000000e6ba0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000ed300 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000129606 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012971e : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000127831 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbp ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011e561 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a1c6d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa1c49 ; ret
0x00000000000774d0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000774a0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000121e20 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007d711 : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x339213], eax ; ret
0x000000000007cb45 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007d7b1 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x336b2e], rax ; ret
0x000000000007d7a1 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x336b36], rax ; ret
0x000000000007d751 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x336b3e], rax ; ret
0x000000000007d741 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x336b56], rax ; ret
0x00000000000bfe40 : mov eax, dword ptr [rdi] ; ret
0x0000000000078100 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000078110 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000122b94 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x122ba7 ; ret
0x0000000000122b93 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x122ba8 ; ret
0x0000000000127f54 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x127f67 ; ret
0x0000000000127f53 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x127f68 ; ret
0x00000000000df7b1 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002dc53 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000a0a77 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa0a69 ; ret
0x0000000000093336 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002cb6e : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000724f7 : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dbae8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007055c : mov eax, dword ptr [rdx] ; ret
0x000000000007cb31 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7cb30 ; ret
0x000000000012f6d4 : mov eax, dword ptr [rip + 0x285e76] ; call qword ptr [rax]
0x000000000012f097 : mov eax, dword ptr [rip + 0x2864b3] ; call qword ptr [rax]
0x0000000000131ef8 : mov eax, dword ptr [rip + 0x2875aa] ; call qword ptr [rax]
0x00000000000f9fa1 : mov eax, dword ptr [rip + 0x2b9eb1] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000853fa : mov eax, dword ptr [rip + 0x32eb48] ; call qword ptr [rax]
0x0000000000085335 : mov eax, dword ptr [rip + 0x32ec0d] ; call qword ptr [rax]
0x000000000008527a : mov eax, dword ptr [rip + 0x32ecc8] ; call qword ptr [rax]
0x000000000008255f : mov eax, dword ptr [rip + 0x33196b] ; mov qword ptr [rax], rdi ; ret
0x000000000008043f : mov eax, dword ptr [rip + 0x33397b] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cde1 : mov eax, dword ptr [rip + 0x338879] ; ret
0x0000000000035b60 : mov eax, dword ptr [rip + 0x37e642] ; ret
0x0000000000035b50 : mov eax, dword ptr [rip + 0x37e656] ; ret
0x000000000002d7ce : mov eax, dword ptr [rip + 0x38660c] ; mov qword ptr [rax], rdx ; ret
0x000000000002a381 : mov eax, dword ptr [rip + 0x38b6a9] ; ret
0x0000000000022a61 : mov eax, dword ptr [rip + 0x396a71] ; ret
0x0000000000022a51 : mov eax, dword ptr [rip + 0x396a91] ; ret
0x00000000001052b1 : mov eax, dword ptr [rip + 0x450f4800] ; ret 0xfc3
0x0000000000117ecb : mov eax, dword ptr [rsi + 0x18] ; cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x000000000002de81 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002de91 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb79 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x0000000000021a81 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000027413 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000010b303 : mov eax, dword ptr [rsp + 0x24] ; mov dword ptr fs:[rbp], eax ; jmp 0x10b2d9
0x0000000000121b73 : mov eax, dword ptr [rsp + 0x24] ; mov dword ptr fs:[rbp], eax ; jmp 0x121b49
0x000000000011d4c2 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000010bb23 : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x10baf9
0x00000000001108a3 : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x110879
0x0000000000121823 : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x1217f9
0x00000000000fc1d3 : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0xfc1a9
0x00000000000fdab3 : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0xfda89
0x0000000000035299 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c43f3 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000ef47b : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002e42d : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000036a39 : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000000369be : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000c4592 : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xc45a6 ; call rax
0x0000000000164c1d : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000fa003 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fa064 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001100c5 : mov eax, dword ptr [rsp] ; call rax
0x0000000000038b25 : mov eax, dword ptr [rsp] ; jne 0x38b38 ; add rsp, 0x18 ; ret
0x0000000000038b72 : mov eax, dword ptr [rsp] ; jne 0x38b85 ; add rsp, 0x18 ; ret
0x0000000000038bc5 : mov eax, dword ptr [rsp] ; jne 0x38bd8 ; add rsp, 0x18 ; ret
0x0000000000038c12 : mov eax, dword ptr [rsp] ; jne 0x38c25 ; add rsp, 0x18 ; ret
0x00000000000f29c2 : mov eax, dword ptr [rsp] ; jne 0xf29d5 ; add rsp, 0x18 ; ret
0x000000000007ebaf : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e1786 : mov eax, eax ; call r12
0x00000000001139fc : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000e80f9 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000022159 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000038099 : mov eax, eax ; or rax, rdx ; ret
0x000000000008330e : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000711c0 : mov eax, eax ; pop rbx ; ret
0x0000000000085b61 : mov eax, eax ; ret
0x000000000015aec4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000000c48a2 : mov eax, eax ; syscall
0x0000000000159961 : mov eax, eax ; vzeroupper ; ret
0x0000000000085bfd : mov eax, ebp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x0000000000126195 : mov eax, ebp ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000002d5d6 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000779ce : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002e511 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005058b : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007775d : mov eax, ebp ; syscall
0x0000000000045663 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000e2840 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000077e5f : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000edacd : mov eax, ebx ; jne 0xedb28 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000eea80 : mov eax, ebx ; mov eax, 0x10e ; syscall
0x000000000011a0b0 : mov eax, ebx ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000089616 : mov eax, ebx ; pop rbx ; cmovne rax, rdx ; ret
0x000000000006e151 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002acda : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031b95 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000038448 : mov eax, ebx ; pop rbx ; ret
0x00000000000f24ca : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000045527 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000de807 : mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x00000000000f0486 : mov eax, ecx ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f1960 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000e6996 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000563b7 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000562fc : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008433a : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000003324c : mov eax, ecx ; ret
0x0000000000034eb0 : mov eax, ecx ; syscall
0x000000000002dcf0 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000108356 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000108330 : mov eax, edi ; bswap eax ; ret
0x000000000018b839 : mov eax, edi ; call rsp
0x00000000000380a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00000000000a1ffc : mov eax, edi ; jne 0xa2012 ; ret
0x00000000000f04f3 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000070903 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000222ab : mov eax, edi ; neg eax ; ret
0x000000000007e3e8 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000008d485 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000222be : mov eax, edi ; ret
0x0000000000108340 : mov eax, edi ; ror ax, 8 ; ret
0x0000000000038042 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010821a : mov eax, edi ; sar rax, 6 ; ret
0x00000000001083d6 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000044e43 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000088bdc : mov eax, edx ; cmovne rax, rdi ; ret
0x0000000000115279 : mov eax, edx ; jne 0x11528a ; add rsp, 0x18 ; ret
0x000000000012a993 : mov eax, edx ; jne 0x12a9a6 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012aa06 : mov eax, edx ; jne 0x12aa19 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001329bd : mov eax, edx ; jne 0x1329dc ; add rsp, 0x38 ; ret
0x0000000000134bc3 : mov eax, edx ; jne 0x134bd6 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134c49 : mov eax, edx ; jne 0x134c5c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b30d6 : mov eax, edx ; jne 0xb30e7 ; add rsp, 0x28 ; ret
0x00000000000ef1a5 : mov eax, edx ; jne 0xef1b6 ; add rsp, 0x58 ; ret
0x0000000000113b47 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000ed568 : mov eax, edx ; mov r12d, dword ptr fs:[r8] ; syscall
0x0000000000113f53 : mov eax, edx ; movsxd rdx, esi ; ret
0x00000000000fc785 : mov eax, edx ; pop r12 ; ret
0x00000000000c115b : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006fe20 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000532be : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006fec9 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000550cb : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d6f1 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000046225 : mov eax, edx ; pop rbx ; ret
0x0000000000035ba1 : mov eax, edx ; ret
0x0000000000100b04 : mov eax, edx ; shl rdx, 2 ; jmp 0x100ad6
0x0000000000021ad2 : mov eax, edx ; syscall
0x00000000000c150f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011e7e1 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c0c95 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000c05d1 : mov eax, esi ; call rax
0x0000000000034cb6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000006da58 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006e034 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006b34d : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b647 : mov eax, esi ; pop rbx ; ret
0x000000000004a6f4 : mov eax, esi ; ret
0x00000000000c4892 : mov eax, esi ; syscall
0x000000000007276b : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007185c : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002e767 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077a99 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed567 : mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000759e2 : mov eax, r10d ; pop rbx ; ret
0x0000000000075919 : mov eax, r10d ; ret
0x0000000000038fe5 : mov eax, r10d ; syscall
0x000000000007185b : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e75ba : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001223f4 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007775c : mov eax, r13d ; syscall
0x00000000001139fb : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000711bf : mov eax, r8d ; pop rbx ; ret
0x00000000001139ed : mov eax, r8d ; ret
0x00000000000c48a1 : mov eax, r8d ; syscall
0x00000000000508f4 : mov eax, r9d ; ret
0x000000000010441e : mov eax, r9d ; syscall
0x000000000011ce10 : mov ebp, 0x10 ; jmp 0x11cde8
0x0000000000090bb1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090bc1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000090ba1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000f1f3f : mov ebp, 0x48fff640 ; mov eax, ebx ; pop rbx ; ret
0x0000000000155b01 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x0000000000175db4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000035c37 : mov ebp, 0x83000000 ; clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000185f1d : mov ebp, 0xbf80fffc ; cld ; jmp qword ptr [rax]
0x00000000001788fd : mov ebp, 0xbfe0fff1 ; int1 ; push qword ptr [rax] ; ret 0xfff1
0x000000000016e104 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000172a3d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000090c21 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000155b31 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000090c01 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000090be1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000000363e : mov ebp, 0xef5aa220 ; nop ; retf 0xe9ee
0x0000000000090cc7 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x0000000000090af7 : mov ebp, 0xf80148c0 ; ret
0x00000000001559f0 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000960bc : mov ebp, 0xf80148c6 ; ret
0x0000000000174ae6 : mov ebp, 0xfb67d10d ; ret
0x0000000000056c4e : mov ebp, 0xfffff730 ; call rax
0x000000000004b30c : mov ebp, 0xfffff758 ; call rax
0x000000000005a74e : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000e1867 : mov ebp, 0xfffffe08 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd320
0x00000000000e07df : mov ebp, 0xfffffe28 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000077757 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x00000000000602e7 : mov ebp, 2 ; jmp 0x5c5b7
0x00000000001651c7 : mov ebp, dword ptr [rbx + 0x10] ; call 0xf1be5
0x000000000011a18d : mov ebp, eax ; mov rdi, rbx ; call rax
0x0000000000034cbc : mov ebp, ecx ; jmp rdx
0x000000000003ac1a : mov ebp, ecx ; sub rdx, rcx ; jmp 0x3ac62
0x000000000003d5ca : mov ebp, ecx ; sub rdx, rcx ; jmp 0x3d612
0x000000000003ff7a : mov ebp, ecx ; sub rdx, rcx ; jmp 0x3ffc2
0x0000000000047fda : mov ebp, ecx ; sub rdx, rcx ; jmp 0x48022
0x00000000001901f1 : mov ebp, edx ; call qword ptr [rsi]
0x0000000000104844 : mov ebp, esp ; pop rbp ; ret
0x0000000000198a7d : mov ebx, 0x14d00000 ; cld ; call qword ptr [rdx]
0x0000000000198ab9 : mov ebx, 0x14f40000 ; cld ; call qword ptr [rbx]
0x0000000000175b04 : mov ebx, 0x1b5c347e ; jmp 0x175adc
0x0000000000002dc2 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000018608c : mov ebx, 0x40fffd65 ; std ; call rax
0x000000000013eed7 : mov ebx, 0x46f00ff2 ; retf
0x00000000000e7cfa : mov ebx, 0x48000000 ; add esp, 0x68 ; ret
0x000000000008d191 : mov ebx, 0x48000037 ; cmove eax, edx ; ret
0x0000000000088911 : mov ebx, 0x480000d2 ; cmove eax, edx ; ret
0x0000000000105131 : mov ebx, 0x48000549 ; cmovne eax, edx ; ret
0x0000000000087541 : mov ebx, 0x48000d25 ; cmovne eax, edx ; ret
0x0000000000139a34 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000139a52 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000198b45 : mov ebx, 0x59880000 ; cld ; call qword ptr [rbx]
0x0000000000001f47 : mov ebx, 0x79e33a1c ; retf 0x6321
0x0000000000003789 : mov ebx, 0x952a6c41 ; ret
0x00000000000cd890 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x0000000000103fe4 : mov ebx, 0xafb8341 ; je 0x103ff3 ; ret
0x00000000001788f9 : mov ebx, 0xbd90fff1 ; int1 ; jmp rax
0x0000000000172a3b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000121d26 : mov ebx, 0xc8 ; call rax
0x000000000008c4b7 : mov ebx, 0xffed01e9 ; inc dword ptr [rbp - 0x77] ; ret 0x8941
0x000000000004ec7c : mov ebx, 1 ; jmp rax
0x0000000000188404 : mov ebx, cs ; add byte ptr [rax], al ; mov ah, 0xd8 ; out dx, al ; jmp rsp
0x00000000000c4d25 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000176124 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000000e8859 : mov ebx, dword ptr [rsp + 0x18] ; call 0xc52c6
0x00000000000f0e3b : mov ebx, eax ; je 0xf0e50 ; mov rdi, rbp ; call 0x6d119
0x000000000011e10b : mov ebx, eax ; jne 0x11e0a9 ; xor eax, eax ; pop rbx ; ret
0x00000000000783af : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001069f7 : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000008aa63 : mov ebx, ebp ; cmp r11b, r10b ; jb 0x8aa4f ; mov rdx, rax ; jmp 0x8aa06
0x00000000001867d5 : mov ebx, edi ; call rax
0x0000000000186855 : mov ebx, edi ; jmp qword ptr [rdx + 0x12fffb88]
0x00000000000f7d6a : mov ebx, edi ; sub rsp, 0x10 ; call 0x103fc8
0x000000000002c3b6 : mov ebx, edi ; test rax, rax ; je 0x2c3c6 ; call rax
0x00000000000cd6e1 : mov ebx, edx ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000bfdc0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x00000000000783c1 : mov ebx, esp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198901 : mov ecx, 0x125c0000 ; cld ; call rsp
0x00000000000f7398 : mov ecx, 0x145 ; mov eax, ecx ; syscall
0x00000000001658ea : mov ecx, 0x1f0fffeb ; add bl, dh ; ret
0x0000000000034eab : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x0000000000173fb9 : mov ecx, 0x5b92ac50 ; retf
0x0000000000001dad : mov ecx, 0x72b02084 ; retf
0x0000000000188145 : mov ecx, 0x7a440000 ; out dx, al ; jmp rsp
0x0000000000175a8e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000000f84b4 : mov ecx, 0x8364002b ; cmp ah, byte ptr [rcx + 0x75] ; retf
0x00000000000ede50 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000000de860 : mov ecx, 0xcb ; mov eax, ecx ; syscall
0x000000000004f2fc : mov ecx, 1 ; jmp rax
0x00000000000757b3 : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x75775
0x00000000000758a3 : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x75865
0x00000000000757b4 : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x75774
0x00000000000758a4 : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x75864
0x000000000016504d : mov ecx, dword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x16505f ; call rcx
0x000000000002b532 : mov ecx, dword ptr [rax + rsi*8] ; test rcx, rcx ; je 0x2b544 ; call rcx
0x00000000000603a9 : mov ecx, dword ptr [rbp - 0x610] ; jmp 0x5ce92
0x000000000006131e : mov ecx, dword ptr [rbp - 0x610] ; jmp 0x5d620
0x000000000011b707 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x000000000015d63c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000012a440 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x12a459 ; xor eax, eax ; ret
0x000000000012a480 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x12a499 ; xor eax, eax ; ret
0x0000000000044fb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000013785e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000000e0dc2 : mov ecx, dword ptr [rdi] ; call r12
0x0000000000074cbb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000093333 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000035a79 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; je 0x35a77 ; ret
0x00000000000a1c59 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa1c57 ; ret
0x00000000000452e6 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000175f44 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x175f79 ; retf 0x32dd
0x0000000000139bd3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139dd3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139fd3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009b390 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009b3d1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000013f643 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000013f5d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000013f563 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000013f485 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f415 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f3a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f335 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f2c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f255 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f1e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f725 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009b371 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000121ffe : mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x000000000011d441 : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000f1963 : mov ecx, dword ptr [rsp + 8] ; syscall
0x0000000000085701 : mov ecx, eax ; jmp 0x856cb
0x000000000008cb54 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000008cf0b : mov ecx, eax ; movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000011d80c : mov ecx, eax ; movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x000000000002288b : mov ecx, ebp ; call rbx
0x00000000000fa0d9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000007bd10 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000000a0012 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007bd4a : mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000000a2a05 : mov ecx, esi ; call rbx
0x000000000011a0b3 : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000001130ed : mov ecx, esp ; jmp 0x1130bf
0x00000000001131cd : mov ecx, esp ; jmp 0x113197
0x000000000011f1da : mov ecx, esp ; mov rdi, rbp ; call 0x11b4d7
0x00000000000d47d4 : mov edi, 0x20 ; call 0x211e7
0x000000000008500e : mov edi, 0x200 ; call 0x212c7
0x00000000000ff078 : mov edi, 0x2000004 ; call rcx
0x000000000017a540 : mov edi, 0x20fff595 ; xchg eax, esi ; cmc ; jmp qword ptr [rax]
0x000000000004cbca : mov edi, 0x440f48c0 ; ret 0x54e9
0x0000000000114805 : mov edi, 0x4cfffffd ; mov edi, esi ; call 0x212d1
0x00000000001a8ead : mov edi, 0x85b00001 ; idiv edi ; retf 0
0x00000000000f3e4b : mov edi, 0x89480008 ; ret 0xff31
0x00000000000c5115 : mov edi, 0x8948fff5 ; ret 0x8949
0x00000000000f9080 : mov edi, 0x89ee894c ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000185f21 : mov edi, 0xc120fffc ; cld ; inc eax ; ret 0xfffc
0x00000000001883c9 : mov edi, 0xc938ffee ; add byte ptr [rax], al ; ret 0xffee
0x000000000006dcc7 : mov edi, 0xe0 ; call rax
0x000000000006dc8b : mov edi, 0xe0 ; jmp rax
0x00000000000d004d : mov edi, 0xf6000000 ; ret
0x00000000000e7cd7 : mov edi, 0xffffff9c ; syscall
0x000000000006add0 : mov edi, 1 ; call 0xe7857
0x0000000000003e2a : mov edi, cs ; retf
0x00000000000be596 : mov edi, dword ptr [r14 + r13*4] ; mov rsi, r12 ; call 0xfb019
0x000000000003789c : mov edi, dword ptr [rax + 0x20] ; call rdx
0x00000000000ebed0 : mov edi, dword ptr [rbp + 0x28] ; call 0xe8915
0x00000000000ebeac : mov edi, dword ptr [rbp + 0x28] ; mov r12d, dword ptr fs:[rbx] ; call 0xe8919
0x0000000000112095 : mov edi, dword ptr [rbp - 0x60] ; mov eax, 3 ; syscall
0x0000000000077756 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000004b30b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000056c4d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x00000000000af00e : mov edi, dword ptr [rbp] ; lea r9, [rsp + 0x30] ; call r12
0x0000000000036a35 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000085559 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x00000000000854f1 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x0000000000111fd0 : mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x00000000001651c4 : mov edi, dword ptr [rbx] ; mov rbp, qword ptr [rbx + 0x10] ; call 0xf1be8
0x00000000000853e9 : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000044fba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006dcc6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dc8a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000010408b : mov edi, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000111f20 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x00000000001028a9 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000174da6 : mov edi, dword ptr [rdx] ; ret
0x00000000000be597 : mov edi, dword ptr [rsi + rbp*4] ; mov rsi, r12 ; call 0xfb018
0x00000000000a24c9 : mov edi, dword ptr [rsi] ; lea r9, [rsp + 0x28] ; call r12
0x00000000000e5d52 : mov edi, dword ptr [rsp + 0x10] ; call 0xe2766
0x000000000011d45d : mov edi, dword ptr [rsp + 0x10] ; call rax
0x0000000000118e85 : mov edi, dword ptr [rsp + 0x10] ; mov eax, 0x81 ; syscall
0x00000000000f2ff9 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000011d43c : mov edi, dword ptr [rsp + 0x10] ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000eeaeb : mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000e7f89 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000132854 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000024bd0 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00000000000c0763 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000044bca : mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000025e0a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025c9f : mov edi, dword ptr [rsp + 0x30] ; call r15
0x000000000002556f : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000024f7b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000026c56 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x000000000002682e : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000278cb : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000002740e : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000287b4 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x0000000000026064 : mov edi, dword ptr [rsp + 0x48] ; call r15
0x00000000000e8709 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000007baeb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000364fc : mov edi, dword ptr [rsp + 8] ; call r12
0x0000000000114d3b : mov edi, dword ptr [rsp + 8] ; mov dword ptr [rsp], eax ; call 0x21029
0x00000000000ec73b : mov edi, dword ptr [rsp + 8] ; mov eax, 0x10f ; syscall
0x0000000000104818 : mov edi, dword ptr [rsp + 8] ; mov eax, 0xe6 ; syscall
0x000000000007b5b6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000035cc5 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000012619b : mov edi, eax ; call qword ptr [r10]
0x0000000000021e49 : mov edi, eax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000f7d90 : mov edi, eax ; mov dword ptr [rsp + 0xc], eax ; call 0x104028
0x00000000000e7d72 : mov edi, eax ; mov dword ptr [rsp + 8], eax ; call 0x104028
0x00000000000c43d9 : mov edi, eax ; mov eax, 0x22 ; syscall
0x00000000000f6d30 : mov edi, eax ; mov eax, 0x3c ; syscall
0x0000000000134d9d : mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000e78b4 : mov edi, eax ; mov eax, 0x85 ; syscall
0x0000000000034eb5 : mov edi, eax ; mov eax, 0xba ; syscall
0x000000000011b704 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000bc366 : mov edi, eax ; movsxd rdx, dword ptr [r8 + rdi*4] ; add rdx, r8 ; jmp rdx
0x0000000000038fe0 : mov edi, eax ; sub rsi, r8 ; mov eax, r10d ; syscall
0x000000000011f1dd : mov edi, ebp ; call 0x11b4d4
0x000000000011cb7d : mov edi, ebp ; call 0x129624
0x00000000000e4da7 : mov edi, ebp ; call 0x21084
0x0000000000044796 : mov edi, ebp ; call 0x21224
0x00000000000e4fdd : mov edi, ebp ; call 0x212cc
0x000000000003a441 : mov edi, ebp ; call 0x46f44
0x00000000000f0e40 : mov edi, ebp ; call 0x6d114
0x00000000000ce4ed : mov edi, ebp ; call 0xfa7f4
0x000000000011e1c2 : mov edi, ebp ; call qword ptr [rbx]
0x00000000000364e8 : mov edi, ebp ; call r12
0x00000000000f3784 : mov edi, ebp ; call r14
0x000000000002ea33 : mov edi, ebp ; call rax
0x00000000000a28b1 : mov edi, ebp ; call rbx
0x000000000012a511 : mov edi, ebp ; call rcx
0x000000000011dd45 : mov edi, ebp ; call rdx
0x000000000011c6ae : mov edi, ebp ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000011c8b5 : mov edi, ebp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000ee2e7 : mov edi, ebp ; mov eax, 0x147 ; syscall
0x00000000000ee3f7 : mov edi, ebp ; mov eax, 0x148 ; syscall
0x00000000000f1b3a : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000000a2a02 : mov edi, ebp ; mov r9, r14 ; call rbx
0x0000000000036a89 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001100c2 : mov edi, ebp ; mov rax, qword ptr [rsp] ; call rax
0x00000000000f31ba : mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x0000000000082871 : mov edi, ebp ; mov rsi, rbx ; call 0x7eb37
0x000000000010015e : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000011d66d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000011cc05 : mov edi, ebx ; call 0x129624
0x00000000000b47d6 : mov edi, ebx ; call 0x21204
0x000000000004922b : mov edi, ebx ; call 0x454d4
0x00000000000e9417 : mov edi, ebx ; call 0x85ea4
0x000000000011ba46 : mov edi, ebx ; call 0xf7d14
0x000000000011e60a : mov edi, ebx ; call qword ptr [rax]
0x000000000002a33a : mov edi, ebx ; call r12
0x0000000000022c39 : mov edi, ebx ; call r15
0x00000000000523e9 : mov edi, ebx ; call rax
0x0000000000186651 : mov edi, ebx ; inc dword ptr [rdx - 0x6e] ; sti ; call rdx
0x000000000018678d : mov edi, ebx ; jmp qword ptr [rax + 0x10fffb8b]
0x0000000000117d6d : mov edi, ebx ; jne 0x117d65 ; pop rbx ; ret
0x00000000001652bb : mov edi, ebx ; jne 0x1652b0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016544a : mov edi, ebx ; jne 0x16543d ; pop rbx ; ret
0x000000000011c7ee : mov edi, ebx ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ed819 : mov edi, ebx ; mov eax, 0x10 ; syscall
0x00000000000e66de : mov edi, ebx ; mov eax, 0x11 ; syscall
0x00000000000f7271 : mov edi, ebx ; mov eax, 0x113 ; syscall
0x00000000000f70fc : mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000000ed1ee : mov edi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f71ae : mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000000f6e85 : mov edi, ebx ; mov eax, 0x119 ; syscall
0x00000000000ed29c : mov edi, ebx ; mov eax, 0x11d ; syscall
0x00000000000e678e : mov edi, ebx ; mov eax, 0x12 ; syscall
0x00000000000f867e : mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000000ee131 : mov edi, ebx ; mov eax, 0x127 ; syscall
0x00000000000ee1e1 : mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000f8736 : mov edi, ebx ; mov eax, 0x12b ; syscall
0x00000000000edfde : mov edi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f731e : mov edi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f87de : mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e76c5 : mov edi, ebx ; mov eax, 0x135 ; syscall
0x0000000000038f50 : mov edi, ebx ; mov eax, 0x13e ; syscall
0x00000000000ee07e : mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000000ecff8 : mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000ee9d6 : mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f1c80 : mov edi, ebx ; mov eax, 0x1a ; syscall
0x00000000000c4497 : mov edi, ebx ; mov eax, 0x23 ; syscall
0x00000000000f7d7e : mov edi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f7cae : mov edi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f812d : mov edi, ebx ; mov eax, 0x2c ; syscall
0x00000000000f7efd : mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000f81ce : mov edi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f806e : mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000c4189 : mov edi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f897e : mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f8a36 : mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000000e8ae5 : mov edi, ebx ; mov eax, 0x55 ; syscall
0x000000000003527d : mov edi, ebx ; mov eax, 0x82 ; syscall
0x00000000000f704e : mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000c42af : mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000e81ce : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000000ec640 : mov edi, ebx ; mov eax, 7 ; syscall
0x0000000000104738 : mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000f9084 : mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000eebcc : mov edi, ebx ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000eec7c : mov edi, ebx ; mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e893c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x0000000000121ffb : mov edi, ebx ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000001221ee : mov edi, ebx ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000006f81c : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000007216f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000078eea : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000424ad : mov edi, ebx ; syscall
0x00000000000e80fe : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000124fc1 : mov edi, ebx ; xor ebx, ebx ; call 0x212ce
0x000000000006fa54 : mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000084599 : mov edi, ecx ; call rax
0x0000000000085324 : mov edi, ecx ; call rcx
0x0000000000037d91 : mov edi, ecx ; call rdx
0x000000000012c717 : mov edi, ecx ; mov dword ptr [rsp + 0x10], edx ; call 0xe8998
0x00000000000e7918 : mov edi, ecx ; mov eax, 0x103 ; syscall
0x00000000000e50a7 : mov edi, edi ; call 0x212cc
0x0000000000058e09 : mov edi, edi ; call 0x75084
0x00000000000db9c7 : mov edi, edi ; call 0xd8414
0x000000000008042c : mov edi, edi ; call qword ptr [rax]
0x0000000000075048 : mov edi, edi ; call r12
0x0000000000073db3 : mov edi, edi ; call rax
0x00000000000f0eac : mov edi, edi ; inc dword ptr [rbp - 0x7cd28b40] ; ret
0x00000000000365f4 : mov edi, edi ; mov rdx, r13 ; call r12
0x0000000000084aa3 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000fab7c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000004a771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x00000000000c4890 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000c489f : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e713a : mov edi, edx ; syscall
0x0000000000025a31 : mov edi, esi ; call 0x131d14
0x000000000011480a : mov edi, esi ; call 0x212cc
0x0000000000075a5b : mov edi, esi ; call 0x21cc4
0x00000000000deb2c : mov edi, esi ; call 0x6ae24
0x0000000000101ff5 : mov edi, esi ; call 0xfe2d4
0x0000000000036527 : mov edi, esi ; call r12
0x0000000000085586 : mov edi, esi ; call rax
0x000000000002322b : mov edi, esi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000001650a6 : mov edi, esp ; call 0x212cc
0x00000000000b6771 : mov edi, esp ; call 0xb31a4
0x00000000000801d8 : mov edi, esp ; call qword ptr [rax]
0x0000000000021b25 : mov edi, esp ; call rax
0x0000000000074d70 : mov edi, esp ; call rbx
0x00000000001294af : mov edi, esp ; call rdx
0x00000000000e8c49 : mov edi, esp ; mov eax, 0x4f ; syscall
0x0000000000035dc0 : mov edi, esp ; mov eax, 0x81 ; syscall
0x00000000001a0094 : mov edi, gs ; hlt ; jmp qword ptr [rcx]
0x0000000000035dbf : mov edi, r12d ; mov eax, 0x81 ; syscall
0x00000000000ce4ec : mov edi, r13d ; call 0xfa7f5
0x00000000000f7d8f : mov edi, r8d ; mov dword ptr [rsp + 0xc], eax ; call 0x104029
0x00000000000e7d71 : mov edi, r8d ; mov dword ptr [rsp + 8], eax ; call 0x104029
0x00000000000e7917 : mov edi, r9d ; mov eax, 0x103 ; syscall
0x00000000000f8896 : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a04f6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000089366 : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000089330 : mov edx, 0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000011ba41 : mov edx, 0x10 ; mov edi, ebx ; call 0xf7d19
0x00000000000787e6 : mov edx, 0x130 ; pop rbx ; ret
0x000000000013ee57 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000139c34 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000139c52 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000185f15 : mov edx, 0xbc40fffc ; cld ; jmp rax
0x000000000000ee11 : mov edx, 0xd ; add byte ptr [rax], al ; ret
0x0000000000085e93 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000024a07 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000044e50 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000129265 : mov edx, 0xffffffff ; mov rdi, rbp ; call r14
0x00000000000380ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000129cf6 : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000004e778 : mov edx, 1 ; jmp rax
0x00000000000df7fe : mov edx, 2 ; cmove eax, edx ; ret
0x0000000000035034 : mov edx, 8 ; mov eax, ecx ; syscall
0x00000000000f6ee8 : mov edx, 8 ; syscall
0x0000000000103428 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000077508 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c4694 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc46a9 ; call rdx
0x0000000000075551 : mov edx, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x0000000000021a7e : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000103429 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001037a4 : mov edx, dword ptr [rbp + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000003a804 : mov edx, dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x00000000001654f1 : mov edx, dword ptr [rbx] ; and eax, 0x5be17500 ; ret
0x00000000000fc781 : mov edx, dword ptr [rbx] ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000010f638 : mov edx, dword ptr [rcx + 0x5b01002a] ; ret
0x00000000001530cf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001517fd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000015a222 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x15a212 ; ret
0x00000000000855d5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x855d9 ; ret
0x00000000000cf177 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000009b3b2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009b3a3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009b3f3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b1e11 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xb1ded ; ret
0x000000000009b403 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000102f95 : mov edx, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000139611 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001399d0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139261 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009c980 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000009d7c0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x000000000009b380 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000009f3f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009c9d1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x000000000009d811 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x000000000009b3c1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009c961 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000009d791 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x000000000009b361 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000132859 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x00000000000ff074 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rcx
0x0000000000086a15 : mov edx, dword ptr [rsp + 0x18] ; jmp 0x869e3
0x000000000011c369 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000001221f1 : mov edx, dword ptr [rsp + 0x20] ; call rdx
0x00000000000f6d16 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000000fc780 : mov edx, dword ptr fs:[rbx] ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000125a62 : mov edx, eax ; jmp 0x125a02
0x0000000000021532 : mov edx, eax ; jmp 0x214fc
0x000000000007034a : mov edx, eax ; jmp 0x702de
0x00000000000757ba : mov edx, eax ; jmp 0x7576e
0x00000000000758aa : mov edx, eax ; jmp 0x7585e
0x0000000000075a0c : mov edx, eax ; jmp 0x7599c
0x0000000000075fa8 : mov edx, eax ; jmp 0x75f48
0x000000000007611d : mov edx, eax ; jmp 0x760bf
0x000000000007645c : mov edx, eax ; jmp 0x763ec
0x000000000008aa6b : mov edx, eax ; jmp 0x8a9fe
0x000000000008c744 : mov edx, eax ; jmp 0x8c6ca
0x00000000000b9e21 : mov edx, eax ; jmp 0xb9dea
0x00000000000eaf01 : mov edx, eax ; jmp 0xeaec1
0x00000000000f4b05 : mov edx, eax ; jmp 0xf4b17
0x0000000000100165 : mov edx, eax ; jmp rcx
0x00000000000eebce : mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000eec7e : mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e893e : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000756fb : mov edx, eax ; mov eax, edx ; ret
0x000000000008d0b0 : mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x0000000000113f6e : mov edx, eax ; ret
0x00000000000365f7 : mov edx, ebp ; call r12
0x0000000000103128 : mov edx, ebp ; call rax
0x0000000000126bdc : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000fed16 : mov edx, ebp ; mov rsi, r15 ; mov rdi, rbx ; call r12
0x0000000000036521 : mov edx, ebp ; mov rsi, rbp ; mov rdi, r14 ; call r12
0x0000000000036664 : mov edx, ebp ; mov rsi, rbp ; mov rdi, rbx ; call r12
0x000000000003653c : mov edx, ebp ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000010330c : mov edx, ebx ; call rax
0x0000000000165787 : mov edx, ebx ; jne 0x16577d ; pop rbx ; ret
0x00000000000ec6e1 : mov edx, ebx ; mov eax, 0x10f ; syscall
0x0000000000034ec0 : mov edx, ebx ; mov eax, 0xea ; syscall
0x0000000000084aa6 : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000084cd2 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000011f036 : mov edx, ebx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000085c00 : mov edx, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ed094 : mov edx, ecx ; je 0xed0cb ; mov eax, 0x118 ; syscall
0x00000000000f7404 : mov edx, ecx ; je 0xf7441 ; mov eax, 0x149 ; syscall
0x0000000000084a10 : mov edx, ecx ; jmp 0x849a7
0x00000000000bc281 : mov edx, ecx ; jmp 0xbc251
0x00000000000bc281 : mov edx, ecx ; jmp 0xbc253
0x00000000000e94c1 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x00000000000e7970 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000006af31 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x00000000000e9ca1 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x00000000000e9d61 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000000f7a71 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x00000000000f7531 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000000f6fa1 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x00000000000f7b01 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000000f7b61 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000000f7b91 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000000ecfbd : mov edx, ecx ; mov eax, 0x146 ; syscall
0x00000000000f7891 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000000ecc51 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000000f8391 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x00000000000f8301 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000000f7e41 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000c4231 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x00000000000f7921 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x00000000000f7861 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x00000000000f7741 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x00000000000f7951 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x00000000000f7981 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x000000000012eb61 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x000000000012ebb1 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x00000000000f4ec1 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x00000000000f4e61 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x00000000000f4d41 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x00000000000f4d71 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000000f4dd1 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x00000000000f4cb1 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x00000000000f1d41 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000000f8c01 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x00000000000ec791 : mov edx, ecx ; mov eax, 0xdd ; syscall
0x00000000000f76e1 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000bc2ed : mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000003a43e : mov edx, edi ; mov rdi, rbp ; call 0x46f47
0x000000000010cc4f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000a0368 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000043edd : mov edx, edi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43f00
0x00000000000de805 : mov edx, edx ; mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x0000000000132406 : mov edx, esi ; add r9, qword ptr [rsp + 8] ; call rax
0x000000000019b8d5 : mov edx, esi ; call qword ptr [rdx]
0x0000000000103430 : mov edx, esi ; call rax
0x000000000019b945 : mov edx, esi ; jmp qword ptr [rcx]
0x0000000000134626 : mov edx, esi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x00000000000a2c7a : mov edx, esi ; mov rdi, rbp ; call rbx
0x0000000000043bf0 : mov edx, esi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43c10
0x00000000000ec9c0 : mov edx, esi ; xor esi, esi ; syscall
0x00000000000b6112 : mov edx, esp ; call 0xb2b84
0x0000000000102f9c : mov edx, esp ; call rax
0x00000000000e8446 : mov edx, esp ; mov eax, 0x10d ; syscall
0x00000000000ed69d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x0000000000084596 : mov edx, esp ; mov rdi, rcx ; call rax
0x00000000000e8445 : mov edx, r12d ; mov eax, 0x10d ; syscall
0x000000000003a43d : mov edx, r15d ; mov rdi, rbp ; call 0x46f48
0x00000000000de671 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001879cd : mov es, word ptr [rax] ; add byte ptr [rsp + rdx - 0x15], al ; call qword ptr [rax]
0x00000000000faa09 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000057f0b : mov es, word ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000087063 : mov es, word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000009d5de : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000066c57 : mov esi, 0x30 ; call 0x636a7
0x00000000000843fc : mov esi, 0x3148feda ; retf 0x8948
0x000000000004f2ac : mov esi, 0x358d48c7 ; retf
0x000000000004e7ad : mov esi, 0x358d48c7 ; retf 0x1288
0x000000000008ce26 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000117137 : mov esi, 0x3c000002 ; sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x0000000000021e4a : mov esi, 0x415b0007 ; pop rsi ; ret
0x00000000000e7f1f : mov esi, 0x48000000 ; add esp, 0x78 ; ret
0x00000000000b251e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x0000000000175d66 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000003a667 : mov esi, 0x4c8d4803 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ed69f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x0000000000175e03 : mov esi, 0x6400fd4c ; retf 0xf64
0x0000000000173eea : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000008cd01 : mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x000000000008ce75 : mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x0000000000134628 : mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000104419 : mov esi, 0x80 ; mov eax, r9d ; syscall
0x0000000000104068 : mov esi, 0x80 ; syscall
0x00000000000c4748 : mov esi, 0x81 ; mov eax, r13d ; syscall
0x0000000000023d82 : mov esi, 0x83480147 ; ret
0x000000000003ae52 : mov esi, 0x83480163 ; ret
0x0000000000101de6 : mov esi, 0x89480045 ; ret 0xe883
0x000000000008430f : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008cda1 : mov esi, 0x89c63907 ; ret 0xb8
0x00000000000c225c : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000215ae : mov esi, 0xbf0007ee ; ret 0
0x0000000000178921 : mov esi, 0xc080fffc ; cld ; inc eax ; ret 0xfffc
0x0000000000172a3e : mov esi, 0xc2c1c0bf ; ret
0x00000000000feb40 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008cd25 : mov esi, 0xc984070c ; jne 0x8cd20 ; ret
0x000000000003ac17 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x3ac65
0x000000000003d5c7 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x3d615
0x000000000003ff77 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x3ffc5
0x0000000000047fd7 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x48025
0x0000000000003e27 : mov esi, 0xcf8cb236 ; retf
0x000000000008cce1 : mov esi, 0xd2840714 ; jne 0x8cce0 ; ret
0x000000000010002c : mov esi, 0xe8000001 ; retf
0x000000000000b151 : mov esi, 0xf ; add byte ptr [rax], al ; retf 0
0x00000000000a0484 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000100ea3 : mov esi, 0xf600000a ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000002ca5 : mov esi, 0xf8cbeb8f ; ret
0x00000000000def3b : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000006319c : mov esi, 1 ; jmp 0x5fbb6
0x000000000006c334 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f2d68 : mov esi, 2 ; jmp rax
0x00000000000f2d7b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x00000000000f4095 : mov esi, dword ptr [rax] ; call 0x70ae4
0x00000000000f31bd : mov esi, dword ptr [rax] ; call r14
0x000000000002322e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000006380a : mov esi, dword ptr [rip + 0x350750] ; call rax
0x000000000005c08d : mov esi, dword ptr [rip + 0x357ecd] ; call rax
0x000000000005bce9 : mov esi, dword ptr [rip + 0x358271] ; call rax
0x0000000000058eac : mov esi, dword ptr [rip + 0x35b0ae] ; call rax
0x0000000000050314 : mov esi, dword ptr [rip + 0x363c46] ; call rax
0x000000000004d3ca : mov esi, dword ptr [rip + 0x366b90] ; call rax
0x00000000000452ea : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000a0043 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000011c36e : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000b36f1 : mov esi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000003680e : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x0000000000082cd1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000016509c : mov esi, dword ptr [rsp + 0x18] ; call 0x212ce
0x00000000000eeae7 : mov esi, dword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000022886 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000011bf08 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x00000000000834a1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000002556a : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000010fe22 : mov esi, dword ptr [rsp + 8] ; mov rdi, rbp ; call r12
0x000000000010fa51 : mov esi, dword ptr [rsp] ; mov rdi, r13 ; call r12
0x00000000001253c1 : mov esi, dword ptr [rsp] ; mov rdi, rbp ; call rbx
0x0000000000068b27 : mov esi, eax ; jmp 0x64d51
0x0000000000198df1 : mov esi, eax ; jmp rdx
0x00000000000e7133 : mov esi, eax ; mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000e7157 : mov esi, eax ; mov eax, 0x77 ; mov edi, edx ; syscall
0x0000000000034ebe : mov esi, eax ; mov edx, ebx ; mov eax, 0xea ; syscall
0x000000000013177f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000084aa9 : mov esi, ebp ; call rax
0x00000000000e66dc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x00000000000f70fa : mov esi, ebp ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000000ed1ec : mov esi, ebp ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f71ac : mov esi, ebp ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000000ed29a : mov esi, ebp ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x00000000000e678c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x00000000000f867c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000000ee12f : mov esi, ebp ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x00000000000ee1df : mov esi, ebp ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000f8734 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x00000000000edfdc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f731c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f87dc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000ee07c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000000ecff6 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000ee9d4 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f7d7c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f7cac : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f81cc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f806c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000c4187 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f897c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f8a34 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000000f704c : mov esi, ebp ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000c42ad : mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000e81cc : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000104736 : mov esi, ebp ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000f9082 : mov esi, ebp ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000e80fc : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000364f9 : mov esi, ebp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x0000000000084cd5 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000036524 : mov esi, ebp ; mov rdi, r14 ; call r12
0x00000000000db9c4 : mov esi, ebp ; mov rdi, r15 ; call 0xd8417
0x0000000000127835 : mov esi, ebp ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000365f1 : mov esi, ebp ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x00000000000b47d3 : mov esi, ebp ; mov rdi, rbx ; call 0x21207
0x0000000000036667 : mov esi, ebp ; mov rdi, rbx ; call r12
0x00000000000523e6 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000fef68 : mov esi, ebp ; xor r15d, r15d ; call rax
0x0000000000082874 : mov esi, ebx ; call 0x7eb34
0x0000000000189791 : mov esi, ebx ; call rax
0x0000000000035c26 : mov esi, ebx ; mov eax, ecx ; syscall
0x0000000000035cc2 : mov esi, ebx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f3781 : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000084bac : mov esi, ebx ; mov rdi, r13 ; call rax
0x0000000000126198 : mov esi, ebx ; mov rdi, rax ; call qword ptr [r10]
0x000000000003653f : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000012a50e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x0000000000049228 : mov esi, ebx ; mov rdi, rbx ; call 0x454d7
0x00000000000bed28 : mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000363f4 : mov esi, edi ; call r14
0x0000000000070837 : mov esi, edi ; jmp 0x70809
0x00000000000ed9b5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000ee5cc : mov esi, edi ; mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000ee69c : mov esi, edi ; mov eax, 0x77 ; mov edi, edx ; syscall
0x00000000000e7cd5 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000011a18a : mov esi, edi ; mov rbp, r8 ; mov rdi, rbx ; call rax
0x000000000004b308 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x00000000000fed19 : mov esi, edi ; mov rdi, rbx ; call r12
0x00000000000bed13 : mov esi, edi ; xor edi, edi ; call rax
0x00000000001228ea : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000001028ad : mov esi, edx ; call rax
0x00000000000e77bc : mov esi, edx ; mov eax, 4 ; syscall
0x00000000000e780a : mov esi, edx ; mov eax, 5 ; syscall
0x00000000000e785c : mov esi, edx ; mov eax, 6 ; syscall
0x00000000001a5a59 : mov esi, esi ; call qword ptr [rbx]
0x000000000010cc52 : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000044793 : mov esi, esi ; mov rdi, rbp ; call 0x21227
0x0000000000121d74 : mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c5e29 : mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000be59b : mov esi, esp ; call 0xfb014
0x000000000011e565 : mov esi, esp ; call qword ptr [rax]
0x00000000000c69c9 : mov esi, esp ; call qword ptr [rdx]
0x0000000000189c81 : mov esi, esp ; jmp rsp
0x000000000006adce : mov esi, esp ; mov edi, 1 ; call 0xe7859
0x00000000000ee2e5 : mov esi, esp ; mov edi, ebp ; mov eax, 0x147 ; syscall
0x00000000000ee3f5 : mov esi, esp ; mov edi, ebp ; mov eax, 0x148 ; syscall
0x00000000000f726f : mov esi, esp ; mov edi, ebx ; mov eax, 0x113 ; syscall
0x00000000000f6e83 : mov esi, esp ; mov edi, ebx ; mov eax, 0x119 ; syscall
0x00000000000f812b : mov esi, esp ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x00000000000f7efb : mov esi, esp ; mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000deb29 : mov esi, esp ; mov rdi, r14 ; call 0x6ae27
0x0000000000126bdf : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000011e607 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007216c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000038fb : mov esi, fs ; mov al, 0x85 ; jbe 0x38ae ; outsb dx, byte ptr [rsi] ; retf
0x00000000001885e4 : mov esi, ss ; add byte ptr [rax], al ; hlt ; or ebp, edi ; jmp rax
0x000000000002ed5c : mov esp, 0x100386e ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000001875c4 : mov esp, 0x1400007d ; retf 0xffea
0x000000000018ac2c : mov esp, 0x140001aa ; or dh, bh ; call rax
0x000000000009b258 : mov esp, 0x1d8d4cd2 ; call rsi
0x000000000009c8d2 : mov esp, 0x1d8d4cd2 ; pop rcx ; ret 0xd
0x000000000009b915 : mov esp, 0x1d8d4cd2 ; ret 0xdd0
0x000000000009c89a : mov esp, 0x1d8d4cd2 ; xchg eax, ecx ; ret 0xd
0x0000000000002971 : mov esp, 0x1fb02742 ; retf
0x00000000000327db : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000017895d : mov esp, 0x29f0fffc ; inc dword ptr [rax] ; sub dh, dl ; call qword ptr [rax]
0x0000000000194834 : mov esp, 0x38000078 ; out dx, al ; jmp rbx
0x00000000001a3634 : mov esp, 0x38000166 ; retf
0x000000000018a57c : mov esp, 0x400018d ; js 0x18a580 ; call rax
0x00000000001884fc : mov esp, 0x440000d1 ; cmc ; out dx, al ; call rax
0x000000000018ae44 : mov esp, 0x440001b4 ; xor bh, dh ; call rax
0x0000000000087277 : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000906c1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000906f1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000906e1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001a2434 : mov esp, 0x48000154 ; jne 0x1a2437 ; call qword ptr [rdx]
0x0000000000105110 : mov esp, 0x4800058d ; cmovne eax, edx ; ret
0x0000000000087520 : mov esp, 0x48000d69 ; cmovne eax, edx ; ret
0x000000000018aedc : mov esp, 0x540001b6 ; cmp dh, bh ; call rax
0x000000000018b364 : mov esp, 0x540001cf ; loope 0x18b369 ; call rax
0x00000000001a4534 : mov esp, 0x58000175 ; and esi, esi ; call qword ptr [rbx]
0x000000000018a5f4 : mov esp, 0x6400018f ; jg 0x18a5f8 ; call rax
0x000000000019db34 : mov esp, 0x6800010b ; or esi, esp ; jmp qword ptr [rcx]
0x0000000000187d74 : mov esp, 0x740000a1 ; add ah, ch ; call rax
0x000000000018c644 : mov esp, 0x7400023f ; cmp edx, edi ; call rax
0x0000000000198734 : mov esp, 0x80000b7 ; retf
0x000000000006a039 : mov esp, 0x83ffffc2 ; retf
0x0000000000187774 : mov esp, 0x84000083 ; loope 0x18776c ; call rax
0x00000000000f5550 : mov esp, 0x890008df ; ret 0xe8c1
0x000000000007c122 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000001884cc : mov esp, 0x940000d0 ; int1 ; out dx, al ; jmp rsp
0x000000000018a25c : mov esp, 0x9400017c ; sbb esi, esi ; call rax
0x00000000000d80f2 : mov esp, 0x9824 ; add al, ch ; retf
0x000000000018c3e4 : mov esp, 0xa4000234 ; adc bh, dl ; call rax
0x0000000000187744 : mov esp, 0xb3000082 ; fsubp st(2) ; jmp rsp
0x000000000018cc9c : mov esp, 0xb4000119 ; std ; call rax
0x0000000000087266 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000009ba95 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x0000000000096263 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000018a194 : mov esp, 0xd4000179 ; or esi, esi ; call rax
0x000000000018b554 : mov esp, 0xd40001d9 ; or al, bh ; call rax
0x000000000018bde4 : mov esp, 0xd4000211 ; stc ; call rax
0x000000000018c81c : mov esp, 0xd400024b ; test edx, edi ; call rax
0x000000000002159c : mov esp, 0xe8000000 ; retf
0x000000000018a9bc : mov esp, 0xf40001a2 ; fcomi st(6) ; call rax
0x000000000011dd80 : mov esp, 0xf6000000 ; ret 0xf04
0x00000000000b8fb1 : mov esp, 0xf6000003 ; ret
0x0000000000001edc : mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x000000000019fa34 : mov esp, 0xf800012a ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000000907ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000906d1 : mov esp, 0xf80148c0 ; ret
0x0000000000155722 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000052c24 : mov esp, 0xfffffe ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000ed56c : mov esp, dword ptr [rax] ; syscall
0x00000000000ebeb1 : mov esp, dword ptr [rbx] ; call 0xe8914
0x0000000000034cb9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x000000000011e5f5 : mov esp, esp ; lea rsi, [r12 + 8] ; call qword ptr [rax]
0x000000000000394d : mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000084451 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036bce : mov qword ptr [r15], rax ; jmp 0x36b9a
0x00000000000e2910 : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x000000000015d630 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000113af2 : mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000113b49 : mov qword ptr [r9], rdi ; ret
0x0000000000071db8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071df8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072387 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007750b : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cf17a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x0000000000071dbc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072409 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000006f528 : mov qword ptr [rax + 0x88], rdx ; call 0x7bf69
0x0000000000165dbe : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007be94 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000b4698 : mov qword ptr [rax + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ede93 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000115ba1 : mov qword ptr [rax], 0 ; ret
0x00000000001138d8 : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000070559 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000082565 : mov qword ptr [rax], rdi ; ret
0x00000000000f6bd0 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002d7d4 : mov qword ptr [rax], rdx ; ret
0x0000000000072a1a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000117e7f : mov qword ptr [rbp + 0x18], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e864 : mov qword ptr [rbp + 0x68], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068f26 : mov qword ptr [rbp - 0x4b8], rdx ; jmp 0x68f02
0x0000000000068bc0 : mov qword ptr [rbp - 0x520], rdx ; jmp 0x64ead
0x0000000000062da0 : mov qword ptr [rbp - 0x538], rax ; jmp 0x62d74
0x00000000000659b4 : mov qword ptr [rbp - 0x568], rdx ; call 0x72429
0x000000000006a031 : mov qword ptr [rbp - 0x5b8], rax ; jmp 0x66302
0x0000000000068a23 : mov qword ptr [rbp - 0x5c0], rcx ; jmp 0x654bf
0x00000000000600e1 : mov qword ptr [rbp - 0x678], rax ; jmp 0x5cbd1
0x0000000000103123 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000102030 : mov qword ptr [rbp - 0xc8], rcx ; call 0xfe2d9
0x0000000000038009 : mov qword ptr [rbp], rdx ; call rax
0x000000000002ab81 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078786 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000123d23 : mov qword ptr [rbx + 0x10], rax ; movups xmmword ptr [rbx], xmm0 ; jmp 0x123cf7
0x0000000000131dd5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000078c3e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000febd9 : mov qword ptr [rbx + 0x10], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a6d4 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000131d8d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000fec19 : mov qword ptr [rbx + 0x18], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a737 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc33a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b49e3 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077530 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007b53a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000feb99 : mov qword ptr [rbx + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000855ac : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2af1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000132190 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000127014 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000083f0f : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000085268 : mov qword ptr [rbx], rdi ; call rcx
0x00000000000636e1 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085320 : mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000006db1d : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000014a113 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000014a123 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000014a133 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000014a143 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000cf2b7 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075449 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000014a0d0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000014a0f0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000014a100 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000014a110 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014a120 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014a130 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014a140 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000014a0e0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000014a0c0 : mov qword ptr [rcx], rdx ; ret
0x0000000000045d1e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009cb9c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000009d9fc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x000000000009b52c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009b50c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009f62c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009c1ff : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009b56f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009b58f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009b550 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b432 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000778f6 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012a365 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000011ef9d : mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000007b462 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007dba8 : mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000007dc35 : mov qword ptr [rdi + 0x880], rax ; ret
0x000000000009cb5c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000009d9bc : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000009b4cc : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009f5ec : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009cb7c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000009d9dc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000009b4ec : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009f60c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000013f487 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f417 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f3a7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000013f337 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ca5a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x000000000009d8aa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x000000000013f2c7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b41a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000009f4da : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009ca7a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x000000000009d8ca : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x000000000013f257 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b42a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000009f4fa : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009ca9a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x000000000009d8ea : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x000000000013f1e7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009b43a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000009f51a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f03e7 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000045523 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000045ca3 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000000470ad : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000011f825 : mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x000000000007b436 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000038703 : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x00000000000386eb : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x000000000007815e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000000f03d7 : mov qword ptr [rdi + 8], rsi ; ret
0x00000000000a044a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0036 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001390f4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139132 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000045c0e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000013947b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ec97 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013965b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ec17 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013984b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013eb97 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139a1c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013eb08 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139c1c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013ea78 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139e1c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013e9e8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009c380 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000045b99 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001390f8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000139136 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001392ab : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001393a7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001392f3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ed17 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000055289 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011f822 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000386e8 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x0000000000038709 : mov qword ptr [rdi], r8 ; ret
0x0000000000045b68 : mov qword ptr [rdi], r9 ; ret
0x00000000000f03d4 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a5ea : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000117e1e : mov qword ptr [rdi], rax ; ret
0x0000000000112f01 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009c9e6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000009c0a6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009b3f6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009b406 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009b417 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009b427 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009b437 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000009b3e7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009b3d6 : mov qword ptr [rdi], rcx ; ret
0x000000000015a0ce : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000009c9d3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x000000000009d813 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x000000000009c3a0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009c3c0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009c3d0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009c3e0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009c3f0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009c3b0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008cca2 : mov qword ptr [rdi], rdx ; pop rbx ; ret
0x000000000008cc0f : mov qword ptr [rdi], rdx ; ret
0x000000000009f443 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000085a58 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x000000000015d62d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000085b5d : mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x0000000000046e5a : mov qword ptr [rdi], rsi ; ret
0x00000000000787e4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000710bd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071253 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000011e6cf : mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000cf1a0 : mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x00000000000713c9 : mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000011e6ab : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011e6af : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c4ca : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000014813a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000014c4ea : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000014815a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000014c50a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000014817a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006afba : mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000058d8d : mov qword ptr [rdx + 8], rax ; jmp 0x58d63
0x000000000014c39a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000014806a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000115b3d : mov qword ptr [rdx + rax*8], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014c343 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000000f8cfe : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000148013 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002df6c : mov qword ptr [rdx], rax ; ret
0x00000000000761bb : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008660b : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008cb44 : mov qword ptr [rdx], rcx ; ret
0x00000000000f2ee4 : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000dbaea : mov qword ptr [rdx], rdi ; ret
0x0000000000132b91 : mov qword ptr [rip + 0x283d98], rsi ; xor eax, eax ; ret
0x0000000000104937 : mov qword ptr [rip + 0x2b3942], rax ; pop rbp ; ret
0x00000000000f94cf : mov qword ptr [rip + 0x2bae8a], rbx ; pop rbx ; ret
0x00000000000f0ba8 : mov qword ptr [rip + 0x2c66a1], rdx ; ret
0x0000000000086317 : mov qword ptr [rip + 0x3306ca], rax ; ret
0x000000000007d7b3 : mov qword ptr [rip + 0x336b2e], rax ; ret
0x000000000007d7a3 : mov qword ptr [rip + 0x336b36], rax ; ret
0x000000000007d791 : mov qword ptr [rip + 0x336b38], rdx ; ret
0x000000000007d753 : mov qword ptr [rip + 0x336b3e], rax ; ret
0x000000000007d72d : mov qword ptr [rip + 0x336b4c], rax ; ret
0x000000000007d743 : mov qword ptr [rip + 0x336b56], rax ; ret
0x000000000007d6fd : mov qword ptr [rip + 0x336b84], rax ; ret
0x00000000000dc673 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000011d7de : mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000cf223 : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000038670 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000ed19a : mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000072934 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000038dfa : mov qword ptr [rsi + 0xc], rax ; xor eax, eax ; ret
0x00000000000dc656 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000011d7ae : mov qword ptr [rsi + 8], rax ; ret
0x00000000000dc66f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000778fa : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000007d941 : mov qword ptr [rsi], rcx ; ret
0x0000000000112f5d : mov qword ptr [rsi], rdi ; ret
0x000000000012ee30 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000369c2 : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000f6cae : mov qword ptr [rsp + 0x28], r9 ; syscall
0x0000000000127a62 : mov qword ptr [rsp + 0xc8], rdx ; call rax
0x0000000000034ea1 : mov qword ptr [rsp + 0xf8], r8 ; syscall
0x00000000000801d2 : mov qword ptr [rsp + 8], r11 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000805a3 : mov qword ptr [rsp + 8], rax ; call rsi
0x000000000011cbcb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call 0x129629
0x000000000012a821 : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000073dad : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000080525 : mov qword ptr [rsp + 8], rcx ; xor edi, edi ; call qword ptr [rax]
0x0000000000080426 : mov qword ptr [rsp + 8], rdx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001347e5 : mov qword ptr [rsp], rax ; call 0x21236
0x00000000001131c8 : mov qword ptr [rsp], rcx ; mov r9, rsp ; jmp 0x11319c
0x00000000000791c1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000007b5a4 : mov qword ptr [rsp], rdi ; call 0x78066
0x00000000001130e8 : mov qword ptr [rsp], rdi ; mov r9, rsp ; jmp 0x1130c4
0x0000000000126f9e : mov qword ptr fs:[rax], rdx ; ret
0x0000000000038008 : mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000127013 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002df6b : mov qword ptr fs:[rdx], rax ; ret
0x00000000000a0035 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000e94c0 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x000000000006af30 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x00000000000e9ca0 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x00000000000e9d60 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000000f7a70 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000f7530 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000000f6fa0 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x00000000000f7b00 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000000f7b60 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000000f7b90 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000ecfbc : mov r10, rcx ; mov eax, 0x146 ; syscall
0x00000000000f7890 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000ecc50 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000f8390 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x00000000000f8300 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000000f7e40 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000c4230 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x00000000000f7920 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000000f7860 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000000f7740 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000000f7950 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000f7980 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000012eb60 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000012ebb0 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000f4ec0 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x00000000000f4e60 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x00000000000f4d40 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000000f4d70 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000f4dd0 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000000f4cb0 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000f1d40 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000000f8c00 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000f76e0 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x00000000000de804 : mov r10, rdx ; mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x000000000013ee56 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000139c51 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x000000000004f2f1 : mov r10d, 1 ; jmp rax
0x0000000000035033 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000021531 : mov r10d, eax ; jmp 0x214fd
0x0000000000075a0b : mov r10d, eax ; jmp 0x7599d
0x000000000007645b : mov r10d, eax ; jmp 0x763ed
0x00000000000b9e20 : mov r10d, eax ; jmp 0xb9deb
0x00000000000bc280 : mov r10d, ecx ; jmp 0xbc252
0x00000000000bc280 : mov r10d, ecx ; jmp 0xbc254
0x00000000000ec790 : mov r10d, ecx ; mov eax, 0xdd ; syscall
0x000000000013eed6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000139a51 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000004ec7b : mov r11d, 1 ; jmp rax
0x000000000011e5f4 : mov r12, rsp ; lea rsi, [r12 + 8] ; call qword ptr [rax]
0x00000000000ed56b : mov r12d, dword ptr [r8] ; syscall
0x00000000000ebeb0 : mov r12d, dword ptr [rbx] ; call 0xe8915
0x00000000000ed56a : mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000ebeaf : mov r12d, dword ptr fs:[rbx] ; call 0xe8916
0x00000000000602e6 : mov r13d, 2 ; jmp 0x5c5b8
0x000000000016509b : mov r14, qword ptr [r12 + 0x18] ; call 0x212cf
0x0000000000068b26 : mov r14d, eax ; jmp 0x64d52
0x00000000000f195f : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000e1785 : mov r8, rax ; call r12
0x00000000000eea7f : mov r8, rbx ; mov eax, 0x10e ; syscall
0x00000000000f0485 : mov r8, rcx ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000100b03 : mov r8, rdx ; shl rdx, 2 ; jmp 0x100ad7
0x000000000008c741 : mov r8b, 0x48 ; mov edx, eax ; jmp 0x8c6cd
0x00000000000e7b9c : mov r8d, 0x10c ; syscall
0x0000000000059f10 : mov r8d, 1 ; jmp rax
0x00000000000f1962 : mov r9, qword ptr [rsp + 8] ; syscall
0x000000000002288a : mov r9, r13 ; call rbx
0x00000000000a2a04 : mov r9, r14 ; call rbx
0x00000000001130ec : mov r9, rsp ; jmp 0x1130c0
0x00000000001131cc : mov r9, rsp ; jmp 0x113198
0x000000000004f2fb : mov r9d, 1 ; jmp rax
0x00000000000603a8 : mov r9d, dword ptr [rbp - 0x610] ; jmp 0x5ce93
0x000000000006131d : mov r9d, dword ptr [rbp - 0x610] ; jmp 0x5d621
0x0000000000034dcc : mov rax, -1 ; ret
0x0000000000034f70 : mov rax, 0xf ; syscall
0x00000000000b2b10 : mov rax, 1 ; ret
0x00000000000b2b20 : mov rax, 2 ; ret
0x00000000000b2b30 : mov rax, 3 ; ret
0x00000000000b2b40 : mov rax, 4 ; ret
0x00000000000b2b50 : mov rax, 5 ; ret
0x00000000000b2b60 : mov rax, 6 ; ret
0x00000000000b2b70 : mov rax, 7 ; ret
0x00000000001044a1 : mov rax, qword ptr [0x10] ; ret
0x00000000000f4f30 : mov rax, qword ptr [rax + 0x160] ; ret
0x0000000000131cfe : mov rax, qword ptr [rax + 0x170] ; jmp rax
0x00000000000f9947 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f992f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000074340 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000001038f8 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012471c : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000074ce3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000012504c : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f4f40 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f4f29 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b396 : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x2b3aa ; call rax
0x000000000002dce4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d7ee : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002cb9b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000038122 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001178b8 : mov rax, qword ptr [rax] ; ret
0x000000000007e5bd : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e5cf ; call rax
0x0000000000068b12 : mov rax, qword ptr [rbp - 0x470] ; jmp 0x64d8a
0x0000000000112d26 : mov rax, qword ptr [rbp - 0x80] ; jmp 0x112cfc
0x000000000007b58c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007752c : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007bab8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000854db : mov rax, qword ptr [rbx + 0x40] ; jne 0x854f9 ; mov rdi, r13 ; call rax
0x000000000008557f : mov rax, qword ptr [rbx + 0x40] ; jne 0x85561 ; mov rdi, rsi ; call rax
0x0000000000126fb9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x126fd1 ; pop rbx ; ret
0x0000000000148010 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000c471c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xc4733 ; call rax
0x000000000012a6fd : mov rax, qword ptr [rdi + 0x18] ; jbe 0x12a719 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000012a300 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bfd30 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000016514c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x165165 ; call rax
0x000000000011d7f6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077570 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000011d82e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077460 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074ce0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007ce00 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000129605 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012971d : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000011e560 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000007d710 : mov rax, qword ptr [rdi] ; mov dword ptr [rip + 0x339213], eax ; ret
0x000000000007cb44 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000002dc82 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002cb6d : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000dbae7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007cb30 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7cb31 ; ret
0x000000000012f6d3 : mov rax, qword ptr [rip + 0x285e76] ; call qword ptr [rax]
0x000000000012f096 : mov rax, qword ptr [rip + 0x2864b3] ; call qword ptr [rax]
0x0000000000131ef7 : mov rax, qword ptr [rip + 0x2875aa] ; call qword ptr [rax]
0x00000000000853f9 : mov rax, qword ptr [rip + 0x32eb48] ; call qword ptr [rax]
0x0000000000085334 : mov rax, qword ptr [rip + 0x32ec0d] ; call qword ptr [rax]
0x0000000000085279 : mov rax, qword ptr [rip + 0x32ecc8] ; call qword ptr [rax]
0x000000000008043e : mov rax, qword ptr [rip + 0x33397b] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cde0 : mov rax, qword ptr [rip + 0x338879] ; ret
0x000000000002a380 : mov rax, qword ptr [rip + 0x38b6a9] ; ret
0x0000000000022a60 : mov rax, qword ptr [rip + 0x396a71] ; ret
0x0000000000022a50 : mov rax, qword ptr [rip + 0x396a91] ; ret
0x000000000002cb78 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x0000000000021a80 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027412 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000011d4c1 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002e42c : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000036a38 : mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000164c1c : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000fa002 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fa063 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001100c4 : mov rax, qword ptr [rsp] ; call rax
0x00000000001044a0 : mov rax, qword ptr fs:[0x10] ; ret
0x00000000001178b7 : mov rax, qword ptr fs:[rax] ; ret
0x000000000008660e : mov rax, r10 ; pop rbx ; ret
0x0000000000087663 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e766 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077a98 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f312d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c05d0 : mov rax, r14 ; call rax
0x000000000007ebae : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085b60 : mov rax, r8 ; ret
0x0000000000159960 : mov rax, r8 ; vzeroupper ; ret
0x00000000000563b6 : mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000562fb : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085bfc : mov rax, rbp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x00000000000779cd : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002e510 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086405 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000e283f : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000077e5e : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089615 : mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x000000000006e150 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002acd9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031b94 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000038447 : mov rax, rbx ; pop rbx ; ret
0x00000000000f24c9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000084339 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000003324b : mov rax, rcx ; ret
0x00000000000380a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000a1ffb : mov rax, rdi ; jne 0xa2013 ; ret
0x00000000000f04f2 : mov rax, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000070902 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e3e7 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000008d484 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a5ed : mov rax, rdi ; ret
0x0000000000108219 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000b6beb : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000088bdb : mov rax, rdx ; cmovne rax, rdi ; ret
0x00000000001329bc : mov rax, rdx ; jne 0x1329dd ; add rsp, 0x38 ; ret
0x00000000000b30d5 : mov rax, rdx ; jne 0xb30e8 ; add rsp, 0x28 ; ret
0x0000000000113f52 : mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000082a01 : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000bf9da : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000826e6 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000046224 : mov rax, rdx ; pop rbx ; ret
0x00000000000456f9 : mov rax, rdx ; ret
0x00000000000c0c94 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000006da57 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000001064dc : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f98d : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000006fb5e : mov rax, rsi ; pop rbx ; ret
0x000000000004a6f3 : mov rax, rsi ; ret
0x00000000001651c6 : mov rbp, qword ptr [rbx + 0x10] ; call 0xf1be6
0x000000000011a18c : mov rbp, r8 ; mov rdi, rbx ; call rax
0x0000000000034cbb : mov rbp, r9 ; jmp rdx
0x000000000003ac19 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x3ac63
0x000000000003d5c9 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x3d613
0x000000000003ff79 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x3ffc3
0x0000000000047fd9 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x48023
0x0000000000104843 : mov rbp, rsp ; pop rbp ; ret
0x00000000000c4d24 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000011e10a : mov rbx, rax ; jne 0x11e0aa ; xor eax, eax ; pop rbx ; ret
0x00000000001069f6 : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002c3b5 : mov rbx, rdi ; test rax, rax ; je 0x2c3c7 ; call rax
0x00000000000bfdbf : mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000000e0dc1 : mov rcx, qword ptr [r15] ; call r12
0x000000000002b531 : mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x2b545 ; call rcx
0x000000000016504c : mov rcx, qword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x165060 ; call rcx
0x000000000011b706 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000009b3d0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000121ffd : mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000011d440 : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000011f1d9 : mov rcx, r12 ; mov rdi, rbp ; call 0x11b4d8
0x000000000011a0b2 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008cb53 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000085700 : mov rcx, rax ; jmp 0x856cc
0x00000000000a0011 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a24c8 : mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x28] ; call r12
0x000000000003789b : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000004b30a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000056c4c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000036a34 : mov rdi, qword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000085558 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000854f0 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x00000000001651c3 : mov rdi, qword ptr [rbx] ; mov rbp, qword ptr [rbx + 0x10] ; call 0xf1be9
0x00000000000853e8 : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000044fb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006dcc5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dc89 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000010408a : mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001028a8 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000e5d51 : mov rdi, qword ptr [rsp + 0x10] ; call 0xe2767
0x000000000011d45c : mov rdi, qword ptr [rsp + 0x10] ; call rax
0x0000000000024bcf : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000025e09 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000025c9e : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002556e : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000024f7a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c55 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000278ca : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000287b3 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000026063 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000364fb : mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000007b5b5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000035cc4 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000001650a5 : mov rdi, r12 ; call 0x212cd
0x00000000000b6770 : mov rdi, r12 ; call 0xb31a5
0x00000000000801d7 : mov rdi, r12 ; call qword ptr [rax]
0x0000000000021b24 : mov rdi, r12 ; call rax
0x0000000000074d6f : mov rdi, r12 ; call rbx
0x00000000000e8c48 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000000e50ae : mov rdi, r13 ; call 0x212cd
0x000000000010fa54 : mov rdi, r13 ; call r12
0x00000000000f3783 : mov rdi, r13 ; call r14
0x000000000002ea32 : mov rdi, r13 ; call rax
0x00000000000f31b9 : mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x0000000000025a30 : mov rdi, r14 ; call 0x131d15
0x0000000000114809 : mov rdi, r14 ; call 0x212cd
0x00000000000deb2b : mov rdi, r14 ; call 0x6ae25
0x0000000000101ff4 : mov rdi, r14 ; call 0xfe2d5
0x0000000000036526 : mov rdi, r14 ; call r12
0x000000000002322a : mov rdi, r14 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000000e50a6 : mov rdi, r15 ; call 0x212cd
0x0000000000058e08 : mov rdi, r15 ; call 0x75085
0x00000000000db9c6 : mov rdi, r15 ; call 0xd8415
0x000000000008042b : mov rdi, r15 ; call qword ptr [rax]
0x0000000000075047 : mov rdi, r15 ; call r12
0x0000000000073db2 : mov rdi, r15 ; call rax
0x00000000000365f3 : mov rdi, r15 ; mov rdx, r13 ; call r12
0x0000000000084aa2 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000e78b3 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x0000000000038fdf : mov rdi, r8 ; sub rsi, r8 ; mov eax, r10d ; syscall
0x0000000000085323 : mov rdi, r9 ; call rcx
0x0000000000037d90 : mov rdi, r9 ; call rdx
0x000000000012619a : mov rdi, rax ; call qword ptr [r10]
0x0000000000021e48 : mov rdi, rax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000f6d2f : mov rdi, rax ; mov eax, 0x3c ; syscall
0x0000000000034eb4 : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000011b703 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000011f1dc : mov rdi, rbp ; call 0x11b4d5
0x000000000011cb7c : mov rdi, rbp ; call 0x129625
0x00000000000e4da6 : mov rdi, rbp ; call 0x21085
0x0000000000044795 : mov rdi, rbp ; call 0x21225
0x00000000000e4fdc : mov rdi, rbp ; call 0x212cd
0x000000000003a440 : mov rdi, rbp ; call 0x46f45
0x00000000000f0e3f : mov rdi, rbp ; call 0x6d115
0x000000000011e1c1 : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000364e7 : mov rdi, rbp ; call r12
0x000000000011bf0c : mov rdi, rbp ; call r14
0x000000000006efcd : mov rdi, rbp ; call rax
0x00000000000a28b0 : mov rdi, rbp ; call rbx
0x000000000012a510 : mov rdi, rbp ; call rcx
0x000000000011dd44 : mov rdi, rbp ; call rdx
0x000000000011c6ad : mov rdi, rbp ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000011c8b4 : mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000f1b39 : mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000000a2a01 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000036a88 : mov rdi, rbp ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001100c1 : mov rdi, rbp ; mov rax, qword ptr [rsp] ; call rax
0x0000000000082870 : mov rdi, rbp ; mov rsi, rbx ; call 0x7eb38
0x000000000011d66c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000011cc04 : mov rdi, rbx ; call 0x129625
0x00000000000b47d5 : mov rdi, rbx ; call 0x21205
0x000000000004922a : mov rdi, rbx ; call 0x454d5
0x00000000000e9416 : mov rdi, rbx ; call 0x85ea5
0x000000000011e609 : mov rdi, rbx ; call qword ptr [rax]
0x000000000002a339 : mov rdi, rbx ; call r12
0x0000000000022c38 : mov rdi, rbx ; call r15
0x00000000000523e8 : mov rdi, rbx ; call rax
0x0000000000117d6c : mov rdi, rbx ; jne 0x117d66 ; pop rbx ; ret
0x00000000001652ba : mov rdi, rbx ; jne 0x1652b1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165449 : mov rdi, rbx ; jne 0x16543e ; pop rbx ; ret
0x000000000011c7ed : mov rdi, rbx ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000e76c4 : mov rdi, rbx ; mov eax, 0x135 ; syscall
0x0000000000038f4f : mov rdi, rbx ; mov eax, 0x13e ; syscall
0x00000000000f1c7f : mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000c4496 : mov rdi, rbx ; mov eax, 0x23 ; syscall
0x00000000000e8ae4 : mov rdi, rbx ; mov eax, 0x55 ; syscall
0x000000000003527c : mov rdi, rbx ; mov eax, 0x82 ; syscall
0x00000000000ec63f : mov rdi, rbx ; mov eax, 7 ; syscall
0x0000000000121ffa : mov rdi, rbx ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000001221ed : mov rdi, rbx ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000006f81b : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007216e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000078ee9 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000124fc0 : mov rdi, rbx ; xor ebx, ebx ; call 0x212cf
0x000000000006fa53 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000084598 : mov rdi, rcx ; call rax
0x0000000000075a5a : mov rdi, rsi ; call 0x21cc5
0x0000000000085585 : mov rdi, rsi ; call rax
0x00000000001294ae : mov rdi, rsp ; call rdx
0x0000000000077507 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c4693 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc46aa ; call rdx
0x0000000000021a7d : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000139260 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009b3c0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000132858 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000086a14 : mov rdx, qword ptr [rsp + 0x18] ; jmp 0x869e4
0x00000000001221f0 : mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x00000000000b6111 : mov rdx, r12 ; call 0xb2b85
0x0000000000102f9b : mov rdx, r12 ; call rax
0x0000000000084595 : mov rdx, r12 ; mov rdi, rcx ; call rax
0x00000000000365f6 : mov rdx, r13 ; call r12
0x0000000000103127 : mov rdx, r13 ; call rax
0x0000000000126bdb : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000132405 : mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x000000000010342f : mov rdx, r14 ; call rax
0x00000000000a2c79 : mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000010cc4e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000125a61 : mov rdx, rax ; jmp 0x125a03
0x000000000008aa6a : mov rdx, rax ; jmp 0x8a9ff
0x000000000008c743 : mov rdx, rax ; jmp 0x8c6cb
0x00000000000eaf00 : mov rdx, rax ; jmp 0xeaec2
0x00000000000f4b04 : mov rdx, rax ; jmp 0xf4b18
0x0000000000100164 : mov rdx, rax ; jmp rcx
0x0000000000113f6d : mov rdx, rax ; ret
0x000000000010330b : mov rdx, rbx ; call rax
0x0000000000165786 : mov rdx, rbx ; jne 0x16577e ; pop rbx ; ret
0x00000000000ec6e0 : mov rdx, rbx ; mov eax, 0x10f ; syscall
0x0000000000084aa5 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000084cd1 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000011f035 : mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000085bff : mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x0000000000084a0f : mov rdx, rcx ; jmp 0x849a8
0x00000000000e796f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000a0367 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000043edc : mov rdx, rdi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43f01
0x0000000000043bef : mov rdx, rsi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x43c11
0x00000000000ec9bf : mov rdx, rsi ; xor esi, esi ; syscall
0x00000000000f4094 : mov rsi, qword ptr [rax] ; call 0x70ae5
0x00000000000f31bc : mov rsi, qword ptr [rax] ; call r14
0x000000000002322d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000063809 : mov rsi, qword ptr [rip + 0x350750] ; call rax
0x000000000005c08c : mov rsi, qword ptr [rip + 0x357ecd] ; call rax
0x000000000005bce8 : mov rsi, qword ptr [rip + 0x358271] ; call rax
0x0000000000058eab : mov rsi, qword ptr [rip + 0x35b0ae] ; call rax
0x0000000000050313 : mov rsi, qword ptr [rip + 0x363c46] ; call rax
0x000000000004d3c9 : mov rsi, qword ptr [rip + 0x366b90] ; call rax
0x00000000000452e9 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000011c36d : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000003680d : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x00000000000eeae6 : mov rsi, qword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000022885 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000011bf07 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x00000000000834a0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000010fe21 : mov rsi, qword ptr [rsp + 8] ; mov rdi, rbp ; call r12
0x000000000010fa50 : mov rsi, qword ptr [rsp] ; mov rdi, r13 ; call r12
0x00000000001253c0 : mov rsi, qword ptr [rsp] ; mov rdi, rbp ; call rbx
0x00000000000be59a : mov rsi, r12 ; call 0xfb015
0x00000000000deb28 : mov rsi, r12 ; mov rdi, r14 ; call 0x6ae28
0x0000000000126bde : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000011e606 : mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000084aa8 : mov rsi, r13 ; call rax
0x00000000000f9081 : mov rsi, r13 ; mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000084cd4 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000523e5 : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000fef67 : mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000010cc51 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000044792 : mov rsi, r14 ; mov rdi, rbp ; call 0x21228
0x00000000000363f3 : mov rsi, r15 ; call r14
0x00000000000fed18 : mov rsi, r15 ; mov rdi, rbx ; call r12
0x000000000013177e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000853ec : mov rsi, rbp ; call rax
0x0000000000104735 : mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000e80fb : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000364f8 : mov rsi, rbp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x0000000000036523 : mov rsi, rbp ; mov rdi, r14 ; call r12
0x00000000000db9c3 : mov rsi, rbp ; mov rdi, r15 ; call 0xd8418
0x0000000000127834 : mov rsi, rbp ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000b47d2 : mov rsi, rbp ; mov rdi, rbx ; call 0x21208
0x0000000000036666 : mov rsi, rbp ; mov rdi, rbx ; call r12
0x0000000000084442 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000082873 : mov rsi, rbx ; call 0x7eb35
0x0000000000035c25 : mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000035cc1 : mov rsi, rbx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f3780 : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000084bab : mov rsi, rbx ; mov rdi, r13 ; call rax
0x0000000000126197 : mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000003653e : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000012a50d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000049227 : mov rsi, rbx ; mov rdi, rbx ; call 0x454d8
0x0000000000070836 : mov rsi, rdi ; jmp 0x7080a
0x00000000000e7cd4 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000011a189 : mov rsi, rdi ; mov rbp, r8 ; mov rdi, rbx ; call rax
0x00000000000bed12 : mov rsi, rdi ; xor edi, edi ; call rax
0x00000000001228e9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001028ac : mov rsi, rdx ; call rax
0x00000000000e77bb : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000000e7809 : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000000e785b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000011e564 : mov rsi, rsp ; call qword ptr [rax]
0x00000000000c69c8 : mov rsi, rsp ; call qword ptr [rdx]
0x0000000000034cb8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x0000000000186ae8 : mov sil, 0xfb ; call rsi
0x0000000000186cb8 : mov spl, 0xfb ; call rax
0x000000000003fa75 : mov ss, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000015d655 : mov word ptr [r9 - 2], cx ; ret
0x000000000012cf90 : mov word ptr [rax + 0x63], cs ; push rbp ; mov byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000000b3697 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000116a2f : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000011cf65 : mov word ptr [rax + rsi*4 + 0x75000001], ss ; ret
0x00000000001a1c84 : mov word ptr [rax - 0xb], fs ; jmp qword ptr [rcx]
0x000000000009bbc0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000195b89 : mov word ptr [rax], es ; add byte ptr [rax + rdi*2], dh ; out dx, al ; call qword ptr [rdx]
0x00000000000edd61 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x000000000018794d : mov word ptr [rax], es ; add byte ptr [rsi + rcx - 0x15], al ; call qword ptr [rax]
0x000000000014a0a2 : mov word ptr [rcx + 4], dx ; ret
0x000000000014a0e3 : mov word ptr [rcx + 8], dx ; ret
0x00000000001139e8 : mov word ptr [rcx + rax - 2], dx ; mov eax, r8d ; ret
0x000000000014a070 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014a060 : mov word ptr [rcx], dx ; ret
0x000000000018a54d : mov word ptr [rcx], es ; add ah, ah ; je 0x18a54f ; call qword ptr [rax]
0x000000000009cadc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000009d93c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x000000000009b46c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000009f56c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000ed8e4 : mov word ptr [rdi + 0x16], ax ; ret
0x000000000009cbe4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x000000000009da44 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x000000000009b554 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000009f674 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000013f727 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000038ed2 : mov word ptr [rdi + 2], dx ; ret
0x000000000008d063 : mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000009c9a8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x000000000009d7e8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x000000000008cf96 : mov word ptr [rdi + 4], dx ; ret
0x000000000009f418 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009d84a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x000000000009c9fa : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000009b3ea : mov word ptr [rdi + 8], dx ; ret
0x000000000009f47a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a045a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000a0054 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000001a1634 : mov word ptr [rdi - 0xb], ss ; jmp qword ptr [rcx]
0x00000000001397fc : mov word ptr [rdi - 2], cx ; ret
0x0000000000139614 : mov word ptr [rdi - 2], dx ; ret
0x00000000001397f8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009b373 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009c046 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000015dd22 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a045f : mov word ptr [rdi], cx ; ret
0x000000000015a0e4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x000000000010fd80 : mov word ptr [rdi], ds ; add al, byte ptr [rax] ; mov rdi, rbp ; call r12
0x000000000008cf40 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000009c963 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000009d793 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x000000000009b363 : mov word ptr [rdi], dx ; ret
0x000000000009f3c3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000008d0e0 : mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x000000000008d010 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000015d652 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a0059 : mov word ptr [rdi], si ; ret
0x00000000000e6b8c : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000121e0d : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000014c418 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000097f5d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000097fe1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000000239d : mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x000000000014c3c3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000097ef8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f991d : mov word ptr [rdx], ax ; ret
0x00000000001051e1 : mov word ptr [rip + 0x450f4800], es ; ret 0xfc3
0x00000000000ec495 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000038e86 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001a52c4 : mov word ptr [rsi - 0xa], ss ; call rdx
0x000000000015dd25 : mov word ptr [rsi - 2], cx ; ret
0x00000000000e6b73 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001a9728 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x000000000018d6ec : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf
0x000000000019d9ac : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf 0xa02
0x000000000019de44 : mov word ptr [rsi], es ; push rbp ; add dword ptr [rdi], 2 ; ret
0x000000000019e604 : mov word ptr [rsi], ss ; add dword ptr [rax], eax ; js 0x19e596 ; hlt ; call qword ptr [rbx]
0x00000000000abe95 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000033c53 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a0053 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000008ad95 : movabs al, byte ptr [0x1450000022e870f] ; retf
0x000000000008aec1 : movabs al, byte ptr [0x14500000251870f] ; ret 0x14d
0x0000000000179c24 : movabs al, byte ptr [0x1dfff4c2a0fff4c2] ; ret 0xfff4
0x000000000008bf0f : movabs al, byte ptr [0x2948000000d2870f] ; ret
0x0000000000159d67 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000005f14e : movabs al, byte ptr [0x8348c16349fffffb] ; ret
0x00000000000545c5 : movabs al, byte ptr [0x840fc08548000000] ; ret 5
0x0000000000057839 : movabs al, byte ptr [0x840fc08548000000] ; retf
0x0000000000066ccf : movabs al, byte ptr [0xace9d23145fffffa] ; retf
0x00000000001787a4 : movabs al, byte ptr [0xe0fffbc9c0fffbc8] ; retf 0xfffb
0x0000000000185f34 : movabs al, byte ptr [0xe0fffcc940fffcc7] ; retf 0xfffc
0x0000000000179c28 : movabs al, byte ptr [0xfff4c21dfff4c2] ; ret
0x000000000011d4bd : movabs byte ptr [0x2824448b48000001], al ; call rax
0x0000000000165606 : movabs byte ptr [0x5b00000000002515], al ; ret
0x0000000000003c13 : movabs byte ptr [0xd0bd63067c9a2d95], al ; retf 0x6e33
0x0000000000175ea3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x000000000000255f : movabs byte ptr [0xdec51188012c607d], al ; retf 0x736c
0x0000000000175b01 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000002d61 : movabs dword ptr [0x1ad04fca8653d0e9], eax ; retf 0x2217
0x00000000000b6029 : movabs dword ptr [0x8348c38948000000], eax ; ret
0x00000000000c6d13 : movabs dword ptr [0x894801788d48fff5], eax ; ret
0x00000000000d1b8b : movabs dword ptr [0xf3ffffff6d820fc8], eax ; ret
0x0000000000173f47 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x000000000000087f : movabs eax, dword ptr [0x8000010c8449000e] ; ret 0x440c
0x00000000000f0eab : movabs eax, dword ptr [0x832d74c085ffff89] ; ret
0x00000000001747fa : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000033ff0 : movapd xmm0, xmm1 ; ret
0x0000000000033ff1 : movaps xmm0, xmm1 ; ret
0x00000000000d24ae : movaps xmmword ptr [r12], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137d82 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000137d7e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000cfe02 : movaps xmmword ptr [rdi], xmm0 ; ret
0x0000000000137e2c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000d24af : movaps xmmword ptr [rsp], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034473 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000033f0a : movd mm0, eax ; ret
0x0000000000033f09 : movd mm0, rax ; ret
0x0000000000033f7f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000342e6 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000033fed : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x0000000000034369 : movd mm1, edi ; movaps xmm0, xmm1 ; ret
0x0000000000033f7e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000033fec : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000034472 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000342bc : movd xmm0, eax ; ret
0x00000000000342e5 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000034368 : movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x0000000000034a97 : movdqa xmm0, xmm3 ; pop rbx ; ret
0x00000000001646cf : movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x0000000000034610 : movdqa xmm0, xmmword ptr [rsp - 0x28] ; ret
0x0000000000034867 : movdqa xmm0, xmmword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000e6b10 : movdqu xmm0, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000000e6b60 : movdqu xmm0, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x000000000009b440 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000113c5b : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000009cc9d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009dafd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x000000000009c300 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009b60d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dd63 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x000000000009c543 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000013f3ff : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f38f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f31f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f2af : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009cc3d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000009da9d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009b5ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000013f23f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009cc5d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009dabd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009b5cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000013f1cf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009cc7d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009dadd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009b5ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000013f7ef : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f77f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f70f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f69f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f62f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f5bf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f54f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f4df : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f46f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a03cd : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000013e95b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000013e9cb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009c400 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009d904 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x000000000009cab4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000009c127 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009b454 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009b497 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009b487 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009b508 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009b4c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009b4e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009b468 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009b609 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009b5a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009b5c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009b5e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009b444 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009f534 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000013f1d4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000001f6b : movlhps xmm2, xmm3 ; ret
0x0000000000098042 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000098062 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000098082 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000097ecc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000097e76 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000098043 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000098063 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000098083 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000097ecd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000097e77 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000034a10 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x0000000000034a98 : movq mm0, mm3 ; pop rbx ; ret
0x00000000000e6b11 : movq mm0, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000000e6b61 : movq mm0, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x000000000009b441 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000113c5c : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000001646d0 : movq mm0, qword ptr [rsp - 0x18] ; ret
0x0000000000034611 : movq mm0, qword ptr [rsp - 0x28] ; ret
0x00000000000349e0 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000034868 : movq mm0, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x000000000009cc9e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009dafe : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x000000000009c301 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009b60e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000009f72e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009dd64 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x000000000009c544 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000009f7a4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000013f400 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f390 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f320 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f2b0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009cc3e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000009da9e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009b5ae : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000009f6ce : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000013f240 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009cc5e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009dabe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009b5ce : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000009f6ee : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000013f1d0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009cc7e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009dade : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009b5ee : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000009f70e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000013f7f0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f780 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f710 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f6a0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f630 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f5c0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f550 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f4e0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013f470 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a0345 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a03ce : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000013e95c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000013e9cc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013f107 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013f087 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013eff7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ef77 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013eef7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ee77 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013edf7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ed77 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ecf7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ec77 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ebf7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013eb77 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013eae7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013ea57 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013e9c7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009c401 : movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009d905 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x000000000009cab5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000009c128 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009b455 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009b4a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009c17b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009b498 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009b488 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009b509 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009b4c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009b4e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009b469 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009b60a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009b5aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009b5ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009b5ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009b445 : movq qword ptr [rdi], mm0 ; ret
0x000000000009f535 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000013f1d5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000033f08 : movq xmm0, rax ; ret
0x0000000000033f7d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000033feb : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000018c3e8 : movsb byte ptr [rdi], byte ptr [rsi] ; adc bh, dl ; call rax
0x000000000019d21c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rcx] ; add byte ptr [rax - 0x57], dh ; jmp rsi
0x0000000000197451 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; sbb al, 0xfb ; out dx, al ; call qword ptr [rax]
0x00000000001a161c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], r8d ; jo 0x1a1680 ; cmc ; jmp qword ptr [rcx]
0x00000000001a141c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], r8d ; loopne 0x1a1462 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1c1c : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; add byte ptr [rax - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000029fdc : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000185ec1 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000009ff95 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000189d90 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rax
0x000000000018b450 : movsb byte ptr [rdi], byte ptr [rsi] ; div bh ; jmp rax
0x000000000018aa28 : movsb byte ptr [rdi], byte ptr [rsi] ; fdivrp st(6) ; call rsp
0x0000000000187c58 : movsb byte ptr [rdi], byte ptr [rsi] ; fucomp st(3) ; jmp qword ptr [rax]
0x000000000018e67c : movsb byte ptr [rdi], byte ptr [rsi] ; imul ecx ; call qword ptr [rbx]
0x0000000000188834 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, 0 ; add ah, dh ; out dx, eax ; call rsp
0x0000000000174c22 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000018ba00 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; clc ; call qword ptr [rax]
0x000000000018cdb0 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x18cdb3 ; call rax
0x000000000019b69c : movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b693 ; call rsi
0x000000000019b69c : movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19b694 ; call rsi
0x000000000019fafc : movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x19faf6 ; jmp qword ptr [rcx]
0x000000000018c9c0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; jmp qword ptr [rax]
0x0000000000188288 : movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call rax
0x000000000018c8f8 : movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x000000000019dc2c : movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xf4 ; call qword ptr [rsi]
0x000000000018c398 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, 0xfa ; jmp rax
0x00000000001885d0 : movsb byte ptr [rdi], byte ptr [rsi] ; or bh, ch ; call qword ptr [rax]
0x0000000000188efc : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rcx], eax ; add byte ptr [rbp + rbx - 0x10], ah ; call rsp
0x000000000018bb38 : movsb byte ptr [rdi], byte ptr [rsi] ; or edi, ecx ; call rsp
0x0000000000188289 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call rax
0x0000000000188291 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rsp
0x000000000009ff87 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000189060 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff0
0x000000000018b958 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff8
0x00000000001875d8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffea
0x00000000000e4820 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xfff3
0x000000000018b234 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x000000000019a21c : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], cl ; add al, dl ; xchg eax, esi ; int1 ; jmp qword ptr [rax]
0x0000000000114d9a : movsb byte ptr [rdi], byte ptr [rsi] ; shl rsi, 3 ; call 0x21027
0x00000000001883f0 : movsb byte ptr [rdi], byte ptr [rsi] ; shr dh, cl ; push rsp ; retf 0
0x000000000012ee79 : movsb byte ptr [rdi], byte ptr [rsi] ; sub byte ptr [rax], al ; mov eax, 0xca ; ret
0x00000000001346f8 : movsb byte ptr [rdi], byte ptr [rsi] ; sub dword ptr [rax], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000173b05 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000001882c0 : movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xee ; dec eax ; ret
0x000000000004d658 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edi ; adc al, byte ptr [rax] ; jmp rax
0x000000000003384a : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xeeb
0x00000000001974b5 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; enter -0x1104, -1 ; retf 0
0x00000000001974f1 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; jl 0x1974f9 ; out dx, al ; call qword ptr [rcx]
0x00000000001a74c1 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; cld ; fdivr st(0) ; call qword ptr [rax]
0x0000000000185ec5 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp rax
0x000000000018c8f9 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x000000000017611d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000019eebd : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001764b5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000001acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4d ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000058435 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0xffffffffc389843f
0x000000000017941c : movsd dword ptr [rdi], dword ptr [rsi] ; loop 0x179415 ; call qword ptr [rsi]
0x0000000000175d71 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000188299 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; inc dword ptr [rax] ; ret
0x0000000000003900 : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; retf
0x0000000000045bc2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000f72bf : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x00000000001ab31d : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp qword ptr [rdx]
0x0000000000174801 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000033f82 : movsd qword ptr [rdi], xmm1 ; ret
0x0000000000033f63 : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b3178 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000046fa3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000001a74c0 : movsq qword ptr [rdi], qword ptr [rsi] ; add dword ptr [rax], eax ; cld ; fdivr st(0) ; call qword ptr [rax]
0x0000000000131785 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000342e9 : movss dword ptr [rdi], xmm1 ; ret
0x00000000000342d0 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000164d94 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000046f5d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000feb3f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085e5a : movsx eax, dl ; ret
0x000000000008cd24 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x8cd21 ; ret
0x00000000000fedbf : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xfedb8 ; ret
0x000000000008cce0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x8cce1 ; ret
0x000000000003ac16 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3ac66
0x000000000003d5c6 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3d616
0x000000000003ff76 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3ffc6
0x0000000000047fd6 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x48026
0x000000000003ac15 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3ac67
0x000000000003d5c5 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3d617
0x000000000003ff75 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3ffc7
0x0000000000047fd5 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x48027
0x00000000000fedbe : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xfedb9 ; ret
0x00000000001627bc : movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x000000000008d561 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000013cddb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000013785b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000004e7ce : movsxd rax, dword ptr [r8 + rax*4] ; add rax, rdi ; jmp rax
0x000000000004d740 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, rsi ; jmp rax
0x000000000004e7cf : movsxd rax, dword ptr [rax + rax*4] ; add rax, rdi ; jmp rax
0x000000000004d741 : movsxd rax, dword ptr [rax + rax*4] ; add rax, rsi ; jmp rax
0x000000000004e49c : movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x000000000007b87e : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000080b0 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x00000000000f79b1 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000cec38 : movsxd rax, dword ptr [rax] ; jne 0xcec45 ; pop rbx ; ret
0x0000000000174ba0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000004e0e5 : movsxd rax, dword ptr [rbx - 0x53343] ; call qword ptr [rax]
0x00000000000d3781 : movsxd rax, dword ptr [rcx + r14*4] ; add rax, rcx ; jmp rax
0x000000000006b8d7 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000d3782 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000b2479 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000a000d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000b9e83 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000004e565 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rsi ; jmp rax
0x000000000005c4f5 : movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x000000000002215c : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000063c0d : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000c5e2c : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000149f79 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000005c4f6 : movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x00000000000d36d1 : movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x000000000004b892 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x000000000006c68c : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000a04b8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000a0572 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000d36d2 : movsxd rax, dword ptr [rsi] ; add rax, rsi ; jmp rax
0x0000000000155300 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000015543d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00000000001551e7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000155194 : movsxd rax, ecx ; ret
0x00000000001776d1 : movsxd rbp, esi ; inc edi ; out dx, al ; jmp qword ptr [rbx]
0x00000000001552f1 : movsxd rbx, dword ptr [rdi] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001759ca : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000001732c0 : movsxd rbx, dword ptr [rsi] ; in eax, dx ; jmp rsp
0x000000000000394a : movsxd rbx, ebp ; clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x00000000001551d9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000009ba7a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000015b06d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009b209 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000008cf0d : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000011ed5d : movsxd rcx, dword ptr [rax - 0x77] ; ret
0x000000000009ba7b : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000013cddc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000013785c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000015b06e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009b20a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000008cf0e : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000008d562 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000001a3534 : movsxd rcx, dword ptr [rdx] ; ret
0x00000000000a04e0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000155227 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000000d2136 : movsxd rcx, edx ; jmp 0xd2149
0x00000000000d2135 : movsxd rcx, edx ; jmp 0xd214a
0x0000000000032a47 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000032a48 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000000360c : movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x0000000000185ff9 : movsxd rdi, ebp ; call qword ptr [rcx + 0x21fffd63]
0x00000000001860bd : movsxd rdi, ebp ; call rax
0x0000000000185ffd : movsxd rdi, ebp ; jmp qword ptr [rcx]
0x0000000000186429 : movsxd rdi, ebx ; call qword ptr [rax + 0x20fffb65]
0x000000000018650d : movsxd rdi, ebx ; call qword ptr [rax - 0x2f0004c3]
0x00000000001863e9 : movsxd rdi, ebx ; call rax
0x000000000002de85 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002dd15 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000085263 : movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000d6f4e : movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0x000000000013792f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000d6723 : movsxd rdx, dword ptr [r13 + rdx*4] ; add rdx, r13 ; jmp rdx
0x000000000011d80e : movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000bc368 : movsxd rdx, dword ptr [r8 + rdi*4] ; add rdx, r8 ; jmp rdx
0x000000000008d0b2 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000011d80f : movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000bc369 : movsxd rdx, dword ptr [rax + rdi*4] ; add rdx, r8 ; jmp rdx
0x000000000008d0b3 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000008cfe2 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000d6724 : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, r13 ; jmp rdx
0x0000000000137930 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000003275f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000d6f4f : movsxd rdx, dword ptr [rdx + rdx*4] ; add rdx, r10 ; jmp rdx
0x000000000005c275 : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x00000000001139f9 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000113f56 : movsxd rdx, esi ; ret
0x000000000002bf20 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000002bf21 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000000cd791 : movsxd rsi, dword ptr [rcx + rsi] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000189011 : movsxd rsi, eax ; jmp rsp
0x000000000015fb7c : movsxd rsi, esi ; ret 0x7520
0x000000000012a739 : movsxd rsp, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001627bd : movsxd rsp, dword ptr [rdx] ; add rdx, r12 ; jmp rdx
0x00000000000ed31c : movups xmm0, xmmword ptr [rax] ; add bl, dh ; ret
0x00000000000b3179 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000046f5e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000046fa4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000a016f : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000a01f6 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000038ce1 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000123d27 : movups xmmword ptr [rbx], xmm0 ; jmp 0x123cf3
0x00000000000a01f7 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000a0170 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000a016b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000a016a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000125109 : movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000000e6851 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000001250d1 : movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x00000000000a01f2 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000e6855 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x000000000003586f : movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000035873 : movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000000e6b65 : movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x00000000000e748a : movups xmmword ptr [rdi + 0xf8], xmm0 ; ret
0x0000000000121da1 : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000113c5f : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000009ff32 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000a00d9 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000a00b6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000009ff2f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000cfce6 : movups xmmword ptr [rdi], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033f83 : movups xmmword ptr [rdi], xmm1 ; ret
0x0000000000033f64 : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000342d1 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000121dba : movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e6b15 : movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x0000000000164d95 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000122bb6 : movzx eax, al ; add eax, 1 ; ret
0x000000000012a8cb : movzx eax, al ; add rsp, 0x18 ; ret
0x00000000000e9c61 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000011e07a : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ff6f : movzx eax, al ; add rsp, 8 ; ret
0x00000000000b1de7 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000c5d0e : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x00000000000e9ea4 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aeec : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006aeb9 : movzx eax, al ; neg eax ; ret
0x000000000011f26a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000bed3b : movzx eax, al ; pop rbx ; ret
0x000000000003593b : movzx eax, al ; ret
0x0000000000022900 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000002dae5 : movzx eax, ax ; ret
0x000000000007aa10 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079aac : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a81e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078162 : movzx eax, byte ptr [rax] ; ret
0x000000000008c73f : movzx eax, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8c6cf
0x00000000000df810 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000008e8f8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000155dc0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000090df0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008e913 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a830 : movzx eax, byte ptr [rdx] ; ret
0x000000000007aa11 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0540 : movzx eax, cl ; pop rbx ; ret
0x000000000010839d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000001083ab : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000010839c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002dc9e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e6b70 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000115a47 : movzx ecx, byte ptr [rcx - 1] ; test cl, cl ; jne 0x115a35 ; ret
0x000000000009f94a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x9f949 ; ret
0x000000000009f9fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x9f9f9 ; ret
0x000000000015bf24 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000a0028 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008e910 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000155dc3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000d55f2 : movzx edi, al ; call 0xa2075
0x00000000000f8852 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000075ec0 : movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000032fe3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x32fcb ; ret
0x00000000000c67c4 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xc67b0 ; xor eax, eax ; ret
0x00000000000dc6e4 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xdc6d0 ; xor eax, eax ; ret
0x000000000008ead1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000014f90f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000155d48 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000008e963 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000015fba4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000015fc04 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000015fbf4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000015fbe4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000015fbd4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000015fbc4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000015fbb4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000013f120 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015bcd7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000015fb8b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000013f800 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000090df3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008cfb2 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008d164 : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008cf79 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x000000000008cf5b : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x000000000005c271 : movzx edx, dl ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x0000000000090e19 : movzx edx, dl ; sub eax, edx ; ret
0x000000000013f0a0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000013f790 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000008cf91 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x000000000008d143 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], dx ; ret
0x000000000008c73e : movzx r8d, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8c6d0
0x0000000000001dab : mul byte ptr [rax] ; mov ecx, 0x72b02084 ; retf
0x0000000000095f07 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000034011 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034387 : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034010 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034386 : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000082cb7 : neg dword ptr [rbx - 0x17] ; ret 0xffb5
0x00000000000a1abd : neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000351e7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000015a20f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x00000000000cd384 : neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9ea7 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aeef : neg eax ; pop rbx ; ret
0x00000000000222ad : neg eax ; ret
0x000000000018eea9 : nop ; add al, byte ptr [rdx] ; retf 0xe0a
0x0000000000116a31 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000013e857 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000021bf3 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001620ff : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x000000000015b38c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000064ebd : nop ; add dword ptr [rax], eax ; add al, ch ; cli ; ret
0x0000000000104300 : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x000000000010621c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ee933 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b3cf8 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000b95bd : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000001a1608 : nop ; add dword ptr [rax], r8d ; push rsp ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001961b8 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1c08 : nop ; add qword ptr [rax], r8 ; in al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x000000000004e774 : nop ; add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000008d0b5 : nop ; add rdx, r8 ; jmp rdx
0x000000000008cfe4 : nop ; add rdx, rax ; jmp rdx
0x0000000000082cbf : nop ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000022a3f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011df5f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000090b8f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000003795f : nop ; call qword ptr [rbx]
0x000000000000f0e0 : nop ; call qword ptr [rcx]
0x0000000000023230 : nop ; call rsi
0x0000000000186f90 : nop ; cld ; jmp rax
0x00000000001ac508 : nop ; cmc ; add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; clc ; call rsp
0x000000000002cb15 : nop ; cmp byte ptr [rax], al ; mov byte ptr [rip + 0x3890bf], dl ; ret
0x000000000002cb1b : nop ; cmp byte ptr [rax], al ; ret
0x00000000000cd14f : nop ; cmp byte ptr [rsi + 0x30], 0x11 ; je 0xcd169 ; xor eax, eax ; ret
0x0000000000186510 : nop ; cmp eax, 0x41d0fffb ; sti ; jmp qword ptr [rax]
0x00000000001867d0 : nop ; cmp ebx, 0xfb8950ff ; call rax
0x000000000019ad08 : nop ; fld qword ptr [rax] ; add byte ptr [rax + rdx*2 - 0xe], ah ; call qword ptr [rbx]
0x0000000000189c99 : nop ; hlt ; call qword ptr [rax]
0x000000000019e965 : nop ; hlt ; jmp qword ptr [rcx]
0x000000000010cf1d : nop ; hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000004d3cc : nop ; imul esi, dword ptr [rsi], 0 ; call rax
0x000000000019a005 : nop ; int1 ; call qword ptr [rcx]
0x00000000001a01c0 : nop ; int1 ; hlt ; jmp rdx
0x00000000001a9f08 : nop ; iretd ; add dword ptr [rax], eax ; sal bh, 1 ; call qword ptr [rcx]
0x0000000000186100 : nop ; jno 0x186103 ; jmp rcx
0x000000000017c918 : nop ; jp 0x17c91c ; ljmp [rax + 0x7b] ; cli ; call rax
0x000000000017c924 : nop ; jp 0x17c924 ; call rax
0x00000000000cef6f : nop ; lea eax, [rsi + 1] ; ret
0x000000000008395f : nop ; lea rax, [rdx - 0x10] ; ret
0x000000000006f52a : nop ; mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x7bf67
0x0000000000186cac : nop ; mov ch, 0xfb ; jmp qword ptr [rax]
0x000000000013942f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000010469f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000013960f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f7a9f : nop ; mov eax, 0x11f ; syscall
0x00000000000f7b2f : nop ; mov eax, 0x134 ; syscall
0x00000000000f7bbf : nop ; mov eax, 0x13f ; syscall
0x00000000000f1cdf : nop ; mov eax, 0x1c ; syscall
0x00000000000c430f : nop ; mov eax, 0x25 ; syscall
0x00000000000c52bf : nop ; mov eax, 0x27 ; syscall
0x00000000000f832f : nop ; mov eax, 0x30 ; syscall
0x00000000000f7d0f : nop ; mov eax, 0x31 ; syscall
0x00000000000f7e6f : nop ; mov eax, 0x32 ; syscall
0x00000000000f7ddf : nop ; mov eax, 0x34 ; syscall
0x00000000000e8b3f : nop ; mov eax, 0x50 ; syscall
0x00000000000e7bff : nop ; mov eax, 0x53 ; syscall
0x00000000000e9c6f : nop ; mov eax, 0x56 ; syscall
0x00000000000e9d8f : nop ; mov eax, 0x57 ; syscall
0x00000000000e9ccf : nop ; mov eax, 0x58 ; syscall
0x00000000000e942f : nop ; mov eax, 0x5c ; syscall
0x00000000000f79af : nop ; mov eax, 0x63 ; syscall
0x00000000000c551f : nop ; mov eax, 0x79 ; syscall
0x00000000000f6fcf : nop ; mov eax, 0x87 ; syscall
0x00000000000e79bf : nop ; mov eax, 0x89 ; syscall
0x00000000000edd5f : nop ; mov eax, 0x8c ; syscall
0x00000000000f1d6f : nop ; mov eax, 0x95 ; syscall
0x00000000000eefef : nop ; mov eax, 0x99 ; syscall
0x00000000000f755f : nop ; mov eax, 0x9f ; syscall
0x00000000000eeb3f : nop ; mov eax, 0xa3 ; syscall
0x00000000000f6bff : nop ; mov eax, 0xad ; syscall
0x00000000000f770f : nop ; mov eax, 0xb1 ; syscall
0x00000000000f78bf : nop ; mov eax, 0xb4 ; syscall
0x00000000000f4d9f : nop ; mov eax, 0xc2 ; syscall
0x00000000000f4dff : nop ; mov eax, 0xc3 ; syscall
0x00000000000f4cdf : nop ; mov eax, 0xc4 ; syscall
0x00000000000f4e8f : nop ; mov eax, 0xc5 ; syscall
0x00000000000f776f : nop ; mov eax, 0xfe ; syscall
0x000000000011396f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000072f0f : nop ; mov eax, 0xffffffff ; ret
0x000000000010f5ef : nop ; mov eax, 1 ; pop rbx ; ret
0x0000000000085e5f : nop ; mov eax, 1 ; ret
0x00000000000dc5af : nop ; mov eax, 2 ; ret
0x000000000018791c : nop ; mov eax, dword ptr [rax] ; add ah, al ; or ebx, ebp ; call rsp
0x0000000000102da5 : nop ; mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000a179f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa1809 ; ret
0x00000000000a17ef : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa1809 ; ret
0x00000000000ed2ff : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000780ff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000010833f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000035baf : nop ; mov eax, edx ; ret
0x000000000011ce0f : nop ; mov ebp, 0x10 ; jmp 0x11cde9
0x00000000001788fc : nop ; mov ebp, 0xbfe0fff1 ; int1 ; push qword ptr [rax] ; ret 0xfff1
0x00000000000ede4f : nop ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000001399cf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009c97f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000072a19 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000cf19f : nop ; mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x00000000000f7b8f : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000f788f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000ecc4f : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000f794f : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000f797f : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000012eb5f : nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000012ebaf : nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000f4d6f : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000f4caf : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000ec78f : nop ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x00000000000f4f2f : nop ; mov rax, qword ptr [rax + 0x160] ; ret
0x000000000007756f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007745f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000003809f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000010188f : nop ; mov rdi, r14 ; call 0xfe2d6
0x00000000000854bf : nop ; mov rdi, rbp ; call rax
0x0000000000103126 : nop ; mov rdx, r13 ; call rax
0x00000000000f909f : nop ; mov rsi, r13 ; mov edi, ebx ; mov eax, r10d ; syscall
0x000000000008d0df : nop ; mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x000000000009b43f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000034a0f : nop ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000019eed0 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000186428 : nop ; movsxd rdi, ebx ; call qword ptr [rax + 0x20fffb65]
0x000000000019dc60 : nop ; or al, 0xf4 ; call qword ptr [rdx]
0x0000000000094ded : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000177d00 : nop ; out dx, eax ; jmp rax
0x000000000003448f : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000000a0a0 : nop ; pop rbx ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000166464 : nop ; pop rbx ; in al, dx ; call rax
0x00000000000bef4f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011965f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000851df : nop ; pop rbx ; ret
0x000000000011e01f : nop ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c483f : nop ; pop rdi ; mov eax, 0x3a ; syscall
0x000000000010483f : nop ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000186544 : nop ; push rcx ; sti ; jmp rax
0x000000000002ab1f : nop ; ret
0x0000000000003072 : nop ; ret 0x5bdb
0x00000000001a9208 : nop ; ret 1
0x0000000000007df0 : nop ; retf
0x000000000000221a : nop ; retf 0x3844
0x0000000000003643 : nop ; retf 0xe9ee
0x000000000018caac : nop ; retf 1
0x0000000000191860 : nop ; sbb esp, ebp ; call qword ptr [rbx]
0x0000000000187030 : nop ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax - 0x2f000252]
0x0000000000187034 : nop ; scasb al, byte ptr [rdi] ; std ; call rax
0x0000000000088167 : nop ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000880d4 : nop ; stc ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000186665 : nop ; sti ; call qword ptr [rdx]
0x00000000001865a9 : nop ; sti ; call rax
0x00000000001865a5 : nop ; sti ; inc dword ptr [rax - 0x70] ; sti ; call rax
0x000000000018642c : nop ; sti ; jmp qword ptr [rax]
0x00000000001865e5 : nop ; sti ; jmp qword ptr [rsi]
0x0000000000186558 : nop ; sti ; jmp rax
0x0000000000187048 : nop ; stosd dword ptr [rdi], eax ; std ; inc eax ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x00000000001894dc : nop ; sub al, 1 ; add byte ptr [rbx + rbp*4 - 0xe], ah ; jmp rax
0x000000000007cb7f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000b261f : nop ; test rsi, rsi ; jne 0xb2632 ; xor rax, rax ; ret
0x000000000018659c : nop ; xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x0000000000035a8f : nop ; xor eax, eax ; ret
0x000000000008cc9f : nop ; xor edx, edx ; mov qword ptr [rdi], rdx ; pop rbx ; ret
0x0000000000085554 : nop dword ptr [r8] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x0000000000164f13 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000165568 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000082a2b : nop dword ptr [rax + rax] ; jmp rax
0x0000000000115b03 : nop dword ptr [rax + rax] ; mov byte ptr [r10], 0 ; ret
0x00000000001134e3 : nop dword ptr [rax + rax] ; mov eax, ecx ; ret
0x000000000010832b : nop dword ptr [rax + rax] ; mov eax, edi ; bswap eax ; ret
0x000000000009b37b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001038f3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000009c5eb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000127433 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074348 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000217f8 : nop dword ptr [rax + rax] ; ret
0x00000000000e6a7b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000037723 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a180b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000035d3 : nop dword ptr [rax - 0x80] ; fcmove st(0), st(5) ; retf
0x00000000000b2adc : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000086355 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000780ec : nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000012add4 : nop dword ptr [rax] ; call 0x127086
0x0000000000165d5d : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000007f24d : nop dword ptr [rax] ; call rax
0x000000000008d034 : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000f6f1c : nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x00000000000eeccd : nop dword ptr [rax] ; mov eax, 0x132 ; syscall
0x00000000000e828c : nop dword ptr [rax] ; mov eax, 0x15 ; syscall
0x00000000000351cc : nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x00000000000f8c5c : nop dword ptr [rax] ; mov eax, 0x43 ; syscall
0x00000000000e87bd : nop dword ptr [rax] ; mov eax, 0x49 ; syscall
0x000000000006aefd : nop dword ptr [rax] ; mov eax, 0x52 ; syscall
0x00000000000e7afc : nop dword ptr [rax] ; mov eax, 0x5f ; syscall
0x00000000000eda2c : nop dword ptr [rax] ; mov eax, 0x62 ; syscall
0x00000000000356ec : nop dword ptr [rax] ; mov eax, 0x83 ; syscall
0x00000000000edd9c : nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x00000000000f74bc : nop dword ptr [rax] ; mov eax, 0x9e ; syscall
0x00000000000eec1d : nop dword ptr [rax] ; mov eax, 0xa2 ; syscall
0x00000000000ee94c : nop dword ptr [rax] ; mov eax, 0xab ; syscall
0x00000000000f00dc : nop dword ptr [rax] ; mov eax, 0xeb ; syscall
0x00000000000c5b6c : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x0000000000035ba4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000cd3cd : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00000000001228cc : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000e898d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x00000000000e825c : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x00000000000bfe3d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x0000000000035b4d : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x37e656] ; ret
0x000000000002dced : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000700b4 : nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000000ebecc : nop dword ptr [rax] ; mov edi, dword ptr [rbp + 0x28] ; call 0xe8919
0x000000000009c04d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e290c : nop dword ptr [rax] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000000b9e19 : nop dword ptr [rax] ; mov r10d, eax ; jmp 0xb9df2
0x00000000000bc279 : nop dword ptr [rax] ; mov r10d, ecx ; jmp 0xbc259
0x00000000000444bc : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000c680c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000085555 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000eaef9 : nop dword ptr [rax] ; mov rdx, rax ; jmp 0xeaec9
0x00000000000c69c5 : nop dword ptr [rax] ; mov rsi, rsp ; call qword ptr [rdx]
0x000000000006dcdd : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x00000000000adffc : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002be01 : nop dword ptr [rax] ; ret
0x000000000007a09d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x7a06d
0x000000000007ba35 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000e8159 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x000000000015ab3d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000010772c : nop dword ptr [rax] ; xor esi, esi ; mov rax, rsi ; ret
0x00000000001025ed : nop dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000009c007 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000082a2a : nop word ptr [rax + rax] ; jmp rax
0x000000000009c5ea : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000011c43a : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000007af5a : nop word ptr [rax + rax] ; ret
0x00000000000e6a7a : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000037722 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a180a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000088166 : not byte ptr [rax - 0x76b70007] ; ret
0x000000000017a1f4 : not dword ptr [rbx] ; cmc ; jmp qword ptr [rdi]
0x000000000017a1f0 : not dword ptr [rbx] ; cmc ; push rdi ; adc esi, ebp ; jmp qword ptr [rdi]
0x000000000012aa41 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000033b0d : not eax ; and eax, ecx ; ret
0x0000000000033e40 : not eax ; and eax, edx ; ret
0x0000000000132a33 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000007d93b : not edx ; mov byte ptr [rcx], dl ; je 0x7d98b ; mov qword ptr [rsi], rcx ; ret
0x0000000000132a32 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000185f40 : or ah, 0xfc ; jmp qword ptr [rax]
0x0000000000199ec1 : or ah, bh ; jmp qword ptr [rbx]
0x0000000000150887 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000154499 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001508b5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000a2ca : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007eca : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000819cd : or al, 0 ; add byte ptr [rax], al ; jmp 0x8199b
0x0000000000084364 : or al, 0 ; add byte ptr [rax], al ; jmp 0x8433a
0x00000000000edeaa : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ede51 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000cd7c2 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000e682d : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000083f39 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011d872 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000816ba : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003a188 : or al, 0 ; add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x0000000000136ab8 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a1eef : or al, 0 ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x0000000000085d67 : or al, 0 ; cmovne rax, rdx ; ret
0x0000000000087008 : or al, 0 ; je 0x86fd1 ; ret
0x0000000000087008 : or al, 0 ; je 0x86fd3 ; ret
0x000000000018be2c : or al, 0x13 ; add al, byte ptr [rax] ; push rsp ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000018be84 : or al, 0x15 ; add al, byte ptr [rax] ; and al, 0x76 ; stc ; jmp qword ptr [rax]
0x000000000008e8f6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000018ccbc : or al, 0x1a ; add dword ptr [rax], eax ; and al, 0x2f ; std ; jmp qword ptr [rax]
0x000000000018f084 : or al, 0x21 ; add byte ptr [rax], al ; call 0x1318dae5
0x000000000019f084 : or al, 0x21 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x000000000004989f : or al, 0x24 ; call 0x45b14
0x00000000001131ca : or al, 0x24 ; mov r9, rsp ; jmp 0x11319a
0x00000000000791c3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x00000000001049f6 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x104a21 ; leave ; ret
0x00000000000b6015 : or al, 0x30 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000f6b3a : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x00000000000d1b63 : or al, 0x31 ; sar byte ptr [rax], 0xe ; je 0xd1b08 ; ret
0x00000000000f749b : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x00000000000c41a9 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003529c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000c44b6 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c43f6 : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000a1aa3 : or al, 0x48 ; cmp eax, edx ; jne 0xa1a98 ; xor eax, eax ; ret
0x0000000000112f5c : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000007b5a3 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x78067
0x00000000000b3323 : or al, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000001899d4 : or al, 0x4b ; add dword ptr [rax], eax ; xor al, 0xe2 ; jmp qword ptr [rax]
0x0000000000189a2c : or al, 0x4c ; add dword ptr [rax], eax ; in al, 0xe4 ; jmp qword ptr [rax]
0x00000000001134db : or al, 0x4c ; cmp edx, eax ; jne 0x1134c8 ; ret
0x000000000018c9bc : or al, 0x54 ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; jmp qword ptr [rax]
0x0000000000085f53 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000001ecd : or al, 0x5c ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000001a1a04 : or al, 0x5d ; cmc ; jmp qword ptr [rcx]
0x00000000000b2f29 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x0000000000104212 : or al, 0x5d ; pop r12 ; ret
0x00000000001a1cd4 : or al, 0x61 ; cmc ; jmp qword ptr [rcx]
0x000000000002d7d0 : or al, 0x66 ; cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x000000000008cf95 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000000344c3 : or al, 0x75 ; or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000129e47 : or al, 0x75 ; retf
0x0000000000114bd3 : or al, 0x75 ; retf 0x3944
0x0000000000106cd0 : or al, 0x75 ; wait ; mov rax, rdi ; ret
0x00000000000bef05 : or al, 0x7c ; ret 0x850f
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000002ab43 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x2ab57 ; ret
0x000000000009ba7c : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000004b6ba : or al, 0x83 ; ret
0x00000000000a0803 : or al, 0x83 ; ret 0x8301
0x00000000000d88f0 : or al, 0x83 ; ret 0x8901
0x0000000000083b56 : or al, 0x83 ; retf 0x8902
0x00000000000a04e1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000008cf0f : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x00000000000a056b : or al, 0x89 ; ret 0xe283
0x00000000000c5829 : or al, 0x89 ; retf 0x8948
0x000000000008d563 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000093334 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013cddd : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000013785d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000019e7c4 : or al, 0x8d ; hlt ; call qword ptr [rdx]
0x00000000000faa08 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000105370 : or al, 0x91 ; add eax, 0x450f4800 ; ret 0xfc3
0x000000000015b06f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009b20b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000002c82 : or al, 0xaf ; xbegin 0xfffffffff8c6f086 ; ret
0x0000000000137861 : or al, 0xb ; jmp r9
0x000000000009b20f : or al, 0xb ; jmp rcx
0x000000000018ad64 : or al, 0xb1 ; add dword ptr [rax], eax ; sbb r14b, dil ; jmp qword ptr [rax]
0x0000000000198384 : or al, 0xb4 ; add byte ptr [rax], al ; test al, 0x9f ; cli ; call qword ptr [rax]
0x000000000018ae64 : or al, 0xb5 ; add dword ptr [rax], eax ; xchg eax, esp ; xor dh, bh ; jmp qword ptr [rax]
0x000000000018aefc : or al, 0xb7 ; add dword ptr [rax], eax ; push rsp ; cmp al, 0xf7 ; jmp qword ptr [rax]
0x00000000001250be : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000085d66 : or al, 0xc ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000019db84 : or al, 0xc ; add dword ptr [rax], eax ; fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x000000000016504e : or al, 0xd8 ; test rcx, rcx ; je 0x16505e ; call rcx
0x000000000018b5d4 : or al, 0xdc ; add dword ptr [rax], eax ; add al, 0x12 ; clc ; jmp qword ptr [rax]
0x00000000000f7cc5 : or al, 0xe8 ; push rbp ; ret
0x00000000000ec657 : or al, 0xe8 ; ret
0x0000000000125edf : or al, 0xe8 ; retf
0x000000000007281c : or al, 0xeb ; ret 0x5590
0x0000000000188a6c : or al, 0xee ; add byte ptr [rax], al ; xchg eax, esp ; jne 0x188a69 ; jmp qword ptr [rax]
0x00000000001885f9 : or al, 0xef ; call qword ptr [rax]
0x0000000000123571 : or al, 0xf ; retf 0x5089
0x000000000011d970 : or al, 0xf ; retf 0xd189
0x000000000003040a : or al, 0xf ; retf 0xd289
0x00000000000a16f5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009bd03 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000002b533 : or al, 0xf0 ; test rcx, rcx ; je 0x2b543 ; call rcx
0x00000000001ac084 : or al, 0xf1 ; add dword ptr [rax], eax ; enter -0x7b2, -1 ; ret
0x0000000000188adc : or al, 0xf2 ; add byte ptr [rax], al ; in al, 0xab ; out dx, eax ; jmp qword ptr [rax]
0x000000000013f323 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000035213 : or al, 0xf3 ; ret
0x000000000019dc19 : or al, 0xf4 ; call qword ptr [rdi]
0x000000000019dc61 : or al, 0xf4 ; call qword ptr [rdx]
0x000000000019dc2d : or al, 0xf4 ; call qword ptr [rsi]
0x000000000019dbb1 : or al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000053b95 : or al, 0xf6 ; ret 0xf01
0x0000000000056f2c : or al, 0xf6 ; ret 0xf08
0x000000000005585e : or al, 0xf6 ; ret 0xf40
0x000000000018ac89 : or al, 0xf7 ; call rsp
0x00000000000f0f53 : or al, 0xf7 ; ret 0xfc07
0x000000000018bb51 : or al, 0xf9 ; jmp qword ptr [rax]
0x000000000018c399 : or al, 0xfa ; jmp rax
0x000000000019cb84 : or al, 0xfc ; add byte ptr [rax], al ; or byte ptr [rbx], dh ; jmp rax
0x0000000000186fd9 : or al, 0xfd ; jmp qword ptr [rax + 0x20fffd0d]
0x000000000019db99 : or al, 1 ; add ah, dh ; or esi, esp ; jmp qword ptr [rcx]
0x000000000019db85 : or al, 1 ; add al, bl ; or esi, esp ; jmp qword ptr [rcx]
0x00000000000e7412 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000e7b9e : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000e74ac : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019dbad : or al, 1 ; add byte ptr [rax], dl ; or al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000000971 : or al, 1 ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000001ad1c0 : or al, 3 ; add byte ptr [rax], al ; retf
0x000000000009bf40 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000008cd26 : or al, 7 ; test cl, cl ; jne 0x8cd1f ; ret
0x000000000018b559 : or al, bh ; call rax
0x000000000018b561 : or al, bh ; jmp rsp
0x0000000000160f4e : or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000014fa5d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152671 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fa81 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000009670 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x00000000000f564f : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011d852 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f1c11 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000003fd3a : or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x3175
0x000000000008f998 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004bf2f : or al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000100ea4 : or al, byte ptr [rax] ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000085d27 : or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000da6ff : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000cb134 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d494d : or al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000a1c5a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000035a7a : or al, byte ptr [rbp - 0xc0e8b37] ; ret
0x00000000000d0267 : or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x00000000000e9d01 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001aba71 : or al, byte ptr [rdx] ; retf
0x00000000001585d7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010812a : or al, ch ; nop ; retf
0x000000000008d4a8 : or al, ch ; push rdx ; cmp edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ceba7 : or al, ch ; ret
0x0000000000082d08 : or al, ch ; ret 0xffe9
0x000000000006df2f : or al, ch ; retf
0x0000000000120170 : or al, ch ; retf 0x99
0x00000000000cecf8 : or al, ch ; retf 0xf525
0x0000000000081990 : or al, ch ; retf 0xffd8
0x0000000000199ee9 : or bh, ah ; jmp rsi
0x000000000010408d : or bh, bh ; and bl, dh ; ret
0x00000000000778dd : or bh, byte ptr [rax - 1] ; ret
0x00000000000adebf : or bh, byte ptr [rcx] ; ret
0x00000000000ab2d4 : or bh, byte ptr [rip + 0xff] ; je 0xab2e7 ; ret
0x00000000001885d1 : or bh, ch ; call qword ptr [rax]
0x0000000000186fd5 : or bh, ch ; jmp qword ptr [rax]
0x00000000001885c1 : or bh, ch ; jmp rax
0x00000000000d8502 : or bh, dh ; ret
0x0000000000087048 : or bh, dh ; ret 0
0x000000000011ae3e : or bl, al ; mov eax, 1 ; ret
0x00000000000de83c : or bl, al ; nop ; ret
0x00000000000c1432 : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000113d73 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000058d8f : or bl, bpl ; retf
0x000000000003229d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000088c35 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000de5a8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00000000000451e4 : or bl, ch ; mov dword ptr [rax - 0x77], ecx ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000058d90 : or bl, ch ; retf
0x000000000018cac4 : or bl, cl ; add dword ptr [rax], eax ; xchg eax, esp ; fdiv st(2), st(0) ; push qword ptr [rax] ; retf
0x000000000013f4e3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000000ed9c7 : or bl, dh ; ret
0x00000000000cd0b5 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000cd089 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000c8df2 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000081985 : or byte ptr [r11 + 0x94807e0], al ; ret
0x00000000000f2ec8 : or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x0000000000033208 : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f2e06 : or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000097fdf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000cd07a : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000cd146 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000075ebe : or byte ptr [r15], r9b ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000004a185 : or byte ptr [r8 + 0x21], r9b ; retf 0xc689
0x0000000000074141 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000d1ab2 : or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000cf735 : or byte ptr [r8 + 0x63], r9b ; retf 0x6348
0x00000000000470af : or byte ptr [r8 + 2], r15b ; ret
0x00000000000cd131 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007420f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000d250c : or byte ptr [r8 - 0x75], r9b ; jl 0xd2533 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000097fbe : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000148068 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000003896a : or byte ptr [r8 - 0x77], cl ; retf
0x0000000000127832 : or byte ptr [r8 - 0x77], r9b ; out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000007d0b7 : or byte ptr [r8 - 0x77], r9b ; push rdi ; sub cl, ch ; retf 0xfffe
0x000000000007e286 : or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x00000000000cfda0 : or byte ptr [r8 - 0x77], r9b ; ret 0xdb31
0x00000000000ca1de : or byte ptr [r8 - 0x7d], cl ; ret
0x0000000000080cd3 : or byte ptr [r8 - 0x7d], cl ; retf 0x4801
0x00000000001587b2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d71ad : or byte ptr [r9 + 0x63], cl ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000011e604 : or byte ptr [r9 + r9*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000009801e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000476bc : or byte ptr [r9 - 0x7d], r9b ; ret 0x4c01
0x000000000012cfb8 : or byte ptr [r9], dil ; ret 0x5a75
0x00000000000cd0f1 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000cd0ce : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000000ed5f8 : or byte ptr [r9], sil ; retf 0xc2f7
0x000000000011be43 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x00000000000ec73e : or byte ptr [rax + 0x10f], bh ; syscall
0x00000000000858c3 : or byte ptr [rax + 0x19], cl ; fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x000000000004a186 : or byte ptr [rax + 0x21], cl ; retf 0xc689
0x000000000003be1c : or byte ptr [rax + 0x29], cl ; ret
0x00000000000d7970 : or byte ptr [rax + 0x29], cl ; ret 0x6349
0x00000000000fe7bf : or byte ptr [rax + 0x29], cl ; retf 0xc8e8
0x0000000000078c25 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000108a66 : or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x00000000000f6d19 : or byte ptr [rax + 0x38], bh ; syscall
0x00000000000a584a : or byte ptr [rax + 0x39], cl ; ret
0x0000000000084071 : or byte ptr [rax + 0x39], cl ; ret 0x5974
0x00000000000db1a1 : or byte ptr [rax + 0x39], cl ; ret 0xea75
0x0000000000045dda : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x0000000000132b39 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x00000000000866e6 : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000072aae : or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000072456 : or byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000db287 : or byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000007cf19 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000001231e7 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d1ab3 : or byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000cf736 : or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000f564d : or byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; ret
0x0000000000195126 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000e682b : or byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; ret
0x000000000010481b : or byte ptr [rax + 0xe6], bh ; syscall
0x00000000000ca66d : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000010839b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000b567e : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000007edb6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000004d743 : or byte ptr [rax + 1], 0xf0 ; jmp rax
0x000000000004e7d1 : or byte ptr [rax + 1], 0xf8 ; jmp rax
0x0000000000121db4 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000023cc3 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000f5498 : or byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; ret
0x00000000000470b0 : or byte ptr [rax + 2], bh ; ret
0x000000000010252b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000c225d : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000cd132 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000034857 : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000119c96 : or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000074210 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000014a1f7 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x00000000000a1ea2 : or byte ptr [rax - 0x73], cl ; add eax, 0xb8246 ; je 0xa1e77 ; ret
0x0000000000087002 : or byte ptr [rax - 0x73], cl ; add eax, 0xcec26 ; je 0x86fd7 ; ret
0x000000000007dab3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000fa001 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fa062 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000001002b4 : or byte ptr [rax - 0x75], cl ; je 0x1002e5 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000d250d : or byte ptr [rax - 0x75], cl ; jl 0xd2532 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000006dcc4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000011d82d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000007e283 : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x000000000010fa4f : or byte ptr [rax - 0x75], cl ; xor al, 0x24 ; mov rdi, r13 ; call r12
0x0000000000097fbf : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000010330a : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000f0ba7 : or byte ptr [rax - 0x77], cl ; adc eax, 0x2c66a1 ; ret
0x0000000000097ed0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000108218 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000031b93 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000085b9b : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 1] ; ret 0x772
0x00000000000724e1 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000001012f4 : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000058d8c : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x0000000000148069 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000058caa : or byte ptr [rax - 0x77], cl ; or cl, bpl ; ret 0xffe1
0x0000000000127833 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011cb7b : or byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x129626
0x00000000000f0e3e : or byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d116
0x000000000010fe25 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000011d66b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007d0b8 : or byte ptr [rax - 0x77], cl ; push rdi ; sub cl, ch ; retf 0xfffe
0x00000000000cf381 : or byte ptr [rax - 0x77], cl ; ret
0x000000000011f7cc : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x00000000000e1f30 : or byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000041114 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d5073 : or byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000001296c9 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000025c24 : or byte ptr [rax - 0x77], cl ; ret 0xc984
0x00000000000cfda1 : or byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000048a51 : or byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000003896b : or byte ptr [rax - 0x77], cl ; retf
0x0000000000080532 : or byte ptr [rax - 0x77], cl ; retf 0x13e9
0x0000000000104398 : or byte ptr [rax - 0x77], cl ; retf 0x8949
0x0000000000058d8b : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x0000000000058ca9 : or byte ptr [rax - 0x77], r9b ; or cl, bpl ; ret 0xffe1
0x00000000000855d7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000009de39 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x000000000003795e : or byte ptr [rax - 0x7cb7ec01], dl ; ret
0x0000000000081a18 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000035adf : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x35ad9 ; xor eax, eax ; ret
0x0000000000035b2f : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x35b29 ; xor eax, eax ; ret
0x0000000000036625 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000003a7dd : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012ac0d : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x0000000000080cd4 : or byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000000f2e6e : or byte ptr [rax - 0xa], al ; mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x00000000000703eb : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007dc38 : or byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000014fcbc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000033245 : or byte ptr [rax], 0x48 ; add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x00000000000857ee : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007dc39 : or byte ptr [rax], al ; add bl, dh ; ret
0x00000000001633a4 : or byte ptr [rax], al ; add byte ptr [rax + 9], cl ; fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000002a2da : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000014fcbd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152811 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fce1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000007be97 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000824d6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000001d130 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000005998 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000001d7d8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17db
0x000000000001dbb0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17dd
0x000000000001e300 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x17e1
0x000000000000d648 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x0000000000006a42 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ce32 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000522a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000009a42 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000162cbc : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x00000000000f6e32 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000035201 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003524e : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x0000000000035192 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000035035 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000035c21 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x00000000000a05b5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000022951 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000018bac : or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000e8261 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000008fb18 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001ad1bd : or byte ptr [rax], al ; add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; retf
0x00000000000823d6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x823a9 ; ret
0x00000000000756a1 : or byte ptr [rax], al ; add rsp, 0x80 ; ret
0x0000000000199a56 : or byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, ah ; retf 0
0x000000000004a5e8 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000f8850 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000f4b8d : or byte ptr [rax], al ; pop rbx ; ret
0x00000000001a92be : or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x000000000009f47d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009f4bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009f45b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000156dae : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000113e94 : or byte ptr [rbp + 0x32], dh ; add rsp, 0x38 ; ret
0x00000000000cd3a5 : or byte ptr [rbp + 0x39], al ; ret 0x457f
0x0000000000045948 : or byte ptr [rbp + 0x39], cl ; ret
0x00000000000cff13 : or byte ptr [rbp + 0x39], cl ; retf 0x3f74
0x00000000000d01fe : or byte ptr [rbp + 0x39], cl ; retf 0xdc75
0x0000000000113a8f : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x0000000000071e3a : or byte ptr [rbp + 0x708949c9], al ; xor byte ptr [rdi], cl ; ret 0x4389
0x00000000001a3540 : or byte ptr [rbp + 0xb], cl ; ret
0x00000000000341a7 : or byte ptr [rbp + 6], dh ; addsd xmm0, xmm0 ; ret
0x00000000000878d9 : or byte ptr [rbp + rcx*4 + 0x14], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0x14d
0x0000000000045755 : or byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000041f8d : or byte ptr [rbp + rcx*4 + 5], cl ; retf
0x00000000000b1e16 : or byte ptr [rbp - 0x35], dh ; ret
0x00000000000cff00 : or byte ptr [rbp - 0x76be00be], cl ; retf
0x00000000000bb15b : or byte ptr [rbp - 0x7b], al ; rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000000000e915c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x00000000000e8c73 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000003e3f : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000011e7fb : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000012943e : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000240bb : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000855af : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000022a43 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ff656 : or byte ptr [rbx + 0x5e0b185f], cl ; sbb dh, dh ; ret
0x00000000001271ae : or byte ptr [rbx + 0x74fff878], al ; jae 0x127141 ; ret 0x3901
0x00000000000f35be : or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x0000000000081986 : or byte ptr [rbx + 0x94807e0], al ; ret
0x00000000000f2ec9 : or byte ptr [rbx + 0x94901e0], al ; ret 0x894d
0x00000000000f2f4b : or byte ptr [rbx + 0x94901e1], al ; retf 0x894c
0x0000000000192ebd : or byte ptr [rbx + rcx + 0x47], al ; ret
0x0000000000112496 : or byte ptr [rbx + rcx*4 + 0x25], cl ; retf 0x2a19
0x0000000000033209 : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000cf732 : or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000cfd9d : or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000f2e07 : or byte ptr [rbx + rcx*4 + 0x57], cl ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000505e7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000000724f6 : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012c40e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000cefa0 : or byte ptr [rbx - 0x76bbfb83], cl ; retf 0x894c
0x000000000006d229 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000104064 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000019cb88 : or byte ptr [rbx], dh ; jmp rax
0x0000000000046ddb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000011f8ea : or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x00000000000d7910 : or byte ptr [rcx + 0x39], cl ; ret
0x000000000006fec8 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000006f6e7 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006e033 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000000d6f4d : or byte ptr [rcx + 0x63], cl ; adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x00000000000d71ae : or byte ptr [rcx + 0x63], cl ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000004565b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f3534 : or byte ptr [rcx + 9], cl ; rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000046220 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000000c2539 : or byte ptr [rcx + rcx*4 + 0x3c], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000116adc : or byte ptr [rcx + rcx*4 + 0x50], al ; add al, 0xe9 ; ret 0xfffc
0x00000000000369c1 : or byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x00000000000801d6 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000011e605 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000008042a : or byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x0000000000073db1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000000363f2 : or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x000000000008ce76 : or byte ptr [rcx + rcx*8 - 0x3fce128b], al ; ret
0x0000000000114d3e : or byte ptr [rcx - 0x2617dbfc], cl ; ret 0xfff0
0x0000000000045662 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000043642 : or byte ptr [rcx - 0x75], cl ; ret 0x8940
0x000000000009801f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000011e5f3 : or byte ptr [rcx - 0x77], cl ; in al, 0x49 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x000000000003bb06 : or byte ptr [rcx - 0x77], cl ; ret
0x00000000000a79ac : or byte ptr [rcx - 0x77], cl ; ret 0x6349
0x000000000003293f : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000fa0d8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa0ea ; ret
0x00000000000fa168 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa17a ; ret
0x00000000000fa208 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa21a ; ret
0x00000000000fa298 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa2aa ; ret
0x00000000000fa328 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa33a ; ret
0x00000000000fa3b8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa3ca ; ret
0x00000000000fa458 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa46a ; ret
0x00000000000fa4f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa50a ; ret
0x00000000000fa598 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa5aa ; ret
0x00000000000fa628 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa63a ; ret
0x00000000000fa6c3 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa6d5 ; ret
0x00000000000fa758 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfa76a ; ret
0x00000000000faa6a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfaa7c ; ret
0x00000000000faaea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfaafc ; ret
0x00000000000fab6a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfab7c ; ret
0x00000000000fabea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfabfc ; ret
0x00000000000fac6a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfac7c ; ret
0x00000000000facea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfacfc ; ret
0x00000000000fad6a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfad7c ; ret
0x00000000000fadea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfadfc ; ret
0x00000000000fae6a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfae7c ; ret
0x00000000000faeea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfaefc ; ret
0x00000000000faf67 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfaf79 ; ret
0x00000000000fafea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xfaffc ; ret
0x000000000003b37f : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a1dfd : or byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x000000000008a201 : or byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x000000000008bb9e : or byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d0bdf : or byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000476bd : or byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000008bd71 : or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x00000000000f8ee3 : or byte ptr [rcx - 0x81f73], cl ; dec dword ptr [rax + 0x63] ; retf 0x8b41
0x0000000000178724 : or byte ptr [rcx - 0xf], cl ; jmp qword ptr [rax]
0x000000000006ab95 : or byte ptr [rcx], ah ; test byte ptr [rax + 9], cl ; ret
0x00000000000e7422 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000006af34 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e74c4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cd11c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000cd0cf : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000b1e13 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x000000000012cfb9 : or byte ptr [rcx], bh ; ret 0x5a75
0x00000000000dfa59 : or byte ptr [rcx], bh ; retf 0x850f
0x00000000000cd0f2 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000cf83b : or byte ptr [rcx], ch ; ret
0x00000000000cda3b : or byte ptr [rcx], cl ; retf 0xd189
0x00000000000a3638 : or byte ptr [rcx], dh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000023b5d : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000dbbab : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ed5f9 : or byte ptr [rcx], dh ; retf 0xc2f7
0x000000000007cbc3 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000044548 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000011cbcf : or byte ptr [rcx], dh ; shr al, 0x49 ; retf 0
0x000000000006ab94 : or byte ptr [rcx], spl ; test byte ptr [rax + 9], cl ; ret
0x000000000017673e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000197e80 : or byte ptr [rdi + 0x4f1c0000], ch ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001936bd : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x00000000000e03ca : or byte ptr [rdi + rcx - 0x49], al ; ret 0x8948
0x000000000002dae4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000078161 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000075ebf : or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000003ae7f : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000122bb5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000012a8ca : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x00000000000e9c60 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000000f6f68 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000011f269 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000425a8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000004503f : or byte ptr [rdi], cl ; ret 0x8d4c
0x0000000000030400 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000011d960 : or byte ptr [rdi], cl ; retf 0xd189
0x0000000000137e2b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000dad4a : or byte ptr [rdi], cl ; test dword ptr [rax], edi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x0000000000021aba : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000008a6f6 : or byte ptr [rdi], dh ; ret
0x000000000008a6f5 : or byte ptr [rdi], sil ; ret
0x000000000018ecfe : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x0000000000085b5a : or byte ptr [rdx + 0xb], dh ; mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x000000000006b854 : or byte ptr [rdx], al ; add byte ptr [rax], al ; xor eax, eax ; call 0x77aa8
0x00000000000cd08a : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000cd0b6 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000f193c : or byte ptr [rdx], ch ; sub al, 0 ; ret
0x00000000000ed302 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000ed301 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000cd165 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009abd1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000006319b : or byte ptr [rsi + 1], bh ; jmp 0x5fbb7
0x00000000000e03c6 : or byte ptr [rsi - 0x3f], ah ; retf 0x4408
0x00000000000e03c5 : or byte ptr [rsi - 0x3f], r12b ; retf 0x4408
0x0000000000097fe0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001a1ab8 : or byte ptr [rsi - 0xb], bl ; jmp qword ptr [rcx]
0x000000000004aaf4 : or byte ptr [rsi - 3], ah ; dec dword ptr [rax + 0x29] ; ret
0x000000000019cb47 : or byte ptr [rsi], 8 ; ret
0x0000000000000973 : or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000000cd147 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000cd07b : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003e3e : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000000ce31 : or byte ptr ss:[rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001ac9fc : or ch, byte ptr [rdi + 5] ; ret
0x0000000000178934 : or cl, 0xfc ; inc eax ; retf
0x0000000000033cdb : or cl, bl ; std ; fstp st(1) ; ret
0x0000000000058cad : or cl, bpl ; ret 0xffe1
0x0000000000192eba : or cl, byte ptr [r14] ; or byte ptr [rbx + rcx + 0x47], al ; ret
0x000000000002a481 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000736b9 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000dc3da : or cl, byte ptr [rax - 0x77] ; ret 0x7de8
0x000000000014ea6c : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000006f687 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000086712 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000006b92c : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001083d5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x0000000000132404 : or cl, byte ptr [rcx + rcx*4 - 0xe] ; add r9, qword ptr [rsp + 8] ; call rax
0x0000000000002deb : or cl, byte ptr [rcx - 0x13e347e0] ; clc ; ret
0x00000000000b9c4a : or cl, byte ptr [rcx - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0xf601
0x0000000000108355 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000149f96 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000012c411 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000192ebb : or cl, byte ptr [rsi] ; or byte ptr [rbx + rcx + 0x47], al ; ret
0x00000000001936bb : or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x00000000000828b7 : or cl, ch ; ret
0x0000000000058cae : or cl, ch ; ret 0xffe1
0x0000000000032beb : or cl, ch ; ret 0xfffc
0x0000000000109b97 : or cl, ch ; ret 0xfffd
0x0000000000002c9f : or cl, cl ; clc ; ret
0x000000000009fe35 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000176122 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000018ac31 : or dh, bh ; call rax
0x000000000018ac51 : or dh, bh ; jmp qword ptr [rax]
0x000000000018ac39 : or dh, bh ; jmp rsp
0x00000000000344c5 : or dh, bl ; addps xmm0, xmm0 ; ret
0x000000000013f403 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f4425 : or dh, bl ; ret
0x0000000000175f4a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000001ac978 : or dh, byte ptr [rbp + 5] ; retf
0x00000000000a0b16 : or dh, byte ptr [rbp - 0x11] ; ret
0x00000000000d1a01 : or dh, byte ptr [rsp + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a9d80 : or dh, cl ; add dword ptr [rax], eax ; pop rsp ; retf
0x00000000000c0aab : or dh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000f3408 : or dh, dh ; ret 0x7401
0x000000000007dde6 : or dh, dh ; ret 0x7502
0x000000000011dd94 : or dh, dh ; ret 0x8802
0x0000000000080ce1 : or dh, dh ; ret 0xf04
0x0000000000034a5d : or dl, byte ptr [rip + 0x6f0f6600] ; ret 0x87e8
0x0000000000034ae7 : or dl, byte ptr [rip + 0x6f0f6600] ; ret 0xfde8
0x0000000000198478 : or dl, dh ; sti ; call qword ptr [rax]
0x00000000000e74d6 : or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000024e3 : or dword ptr [rax + 0x41001835], 0xffffffdd ; out 0xa9, al ; ret 0xbd07
0x000000000002ca03 : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x00000000000df674 : or dword ptr [rax + 8], 0x2000 ; ret
0x0000000000018b7b : or dword ptr [rax + rax], edx ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; retf
0x0000000000136387 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ed7e3 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x0000000000121d23 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00000000000b336e : or dword ptr [rax - 0x73], ecx ; push rbx ; add dword ptr [rbx + 0x48], ebx ; mov eax, edx ; ret
0x00000000000853f8 : or dword ptr [rax - 0x75], ecx ; add eax, 0x32eb48 ; call qword ptr [rax]
0x0000000000085333 : or dword ptr [rax - 0x75], ecx ; add eax, 0x32ec0d ; call qword ptr [rax]
0x0000000000085278 : or dword ptr [rax - 0x75], ecx ; add eax, 0x32ecc8 ; call qword ptr [rax]
0x000000000006dc88 : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x000000000010d5f9 : or dword ptr [rax - 0x77], ecx ; ret 0x850f
0x0000000000024b47 : or dword ptr [rax - 0x7d], 0x394801c0 ; ret
0x0000000000044485 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc33d8c95
0x0000000000027bef : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000002c51e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000ac412 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ad7f9 : or dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000acf39 : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000009aefe : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000014fbed : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156c5f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fb47 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000747e7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000222ba : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000e6a31 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1b3d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000009503e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009a125 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000f4092 : or dword ptr [rax], eax ; mov rsi, qword ptr [rax] ; call 0x70ae7
0x00000000000e4ecd : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000780ea : or dword ptr [rax], eax ; nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001730b7 : or dword ptr [rax], ecx ; retf
0x0000000000175893 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000017a5e0 : or dword ptr [rbp - 0x69df000b], edx ; cmc ; jmp qword ptr [rax]
0x000000000015c4a6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000001267bb : or dword ptr [rbx + 0x5b90ffef], ebp ; ret
0x000000000005dacc : or dword ptr [rbx - 0x7bf0fe15], eax ; retf
0x000000000006dcd3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078c50 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d3b8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000803c1 : or dword ptr [rcx + 0x39], ecx ; retf
0x000000000003b44b : or dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000000e1152 : or dword ptr [rcx + 1], 0 ; add dh, dh ; ret 0xf04
0x00000000000a1836 : or dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000011e1bd : or dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000e9ca4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000188efd : or dword ptr [rcx], eax ; add byte ptr [rbp + rbx - 0x10], ah ; call rsp
0x00000000000023e0 : or dword ptr [rdi + 0x2735a120], 0xffffff98 ; retf 0x81c0
0x00000000000cf140 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000132a13 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006dce0 : or dword ptr [rdi], 0x20 ; ret
0x00000000000d7b2a : or dword ptr [rdi], 0xffffff86 ; retf
0x00000000000358b6 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000010cb6d : or dword ptr [rdi], ecx ; retf
0x0000000000149f76 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000a94d6 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi + rax + 0x39480000], ebp ; ret 0xd67d
0x00000000000a46a6 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi + rax + 0x39480000], edi ; ret 0xd67d
0x0000000000085e09 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x0000000000085db1 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000011636d : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x00000000000f2583 : or dword ptr [rdi], ecx ; xchg esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000001760ee : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000085e92 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x000000000018bcad : or dword ptr [rdx], eax ; add byte ptr [rbx + rax*2], dl ; stc ; call rsp
0x000000000005628f : or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x00000000001586cf : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012a51a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038836 : or eax, 0x10c48348 ; pop rbx ; ret
0x0000000000033eab : or eax, 0x151590 ; orpd xmm0, xmm1 ; ret
0x00000000000e8858 : or eax, 0x18245c8b ; call 0xc52c7
0x000000000009cc41 : or eax, 0x1c478d48 ; ret
0x000000000009daa1 : or eax, 0x1d478d48 ; ret
0x0000000000149ff8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000a2d72 : or eax, 0x358d4800 ; ret 0xdb9
0x000000000006c57a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006bed2 : or eax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000002c62a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000870d3 : or eax, 0x450f4800 ; ret 0x66c3
0x0000000000087128 : or eax, 0x450f4800 ; ret 0x90c3
0x0000000000085cf3 : or eax, 0x450f4800 ; ret 0xc3f3
0x00000000000870b2 : or eax, 0x450f4800 ; ret 0xfc3
0x0000000000095c12 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x00000000000b6bea : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000004deaf : or eax, 0x48fffffe ; add eax, esi ; jmp rax
0x000000000018bd5d : or eax, 0x53540002 ; stc ; call rsp
0x000000000006a7e2 : or eax, 0x5bd88948 ; ret
0x000000000009bd25 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000ed3a9 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000005542a : or eax, 0x8118e383 ; ret
0x0000000000150797 : or eax, 0x83480000 ; ret 0x4910
0x0000000000152331 : or eax, 0x83480000 ; ret 0xe910
0x00000000001507c5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000c1f1d : or eax, 0x83480feb ; ret
0x00000000000f0aad : or eax, 0x834820eb ; ret
0x000000000002d17b : or eax, 0x83486274 ; ret
0x000000000009d3e9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00000000000e8457 : or eax, 0x89000001 ; ret
0x000000000005406c : or eax, 0x89480000 ; ret 0x8948
0x000000000004ea62 : or eax, 0x894c0000 ; ret 0x894c
0x000000000008f698 : or eax, 0x894d0000 ; retf
0x0000000000131032 : or eax, 0x8c48348 ; ret
0x0000000000129452 : or eax, 0x8c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000a9465 : or eax, 0xb8480000 ; ret 0xffff
0x00000000000a4f76 : or eax, 0xb8480000 ; retf 0xfffe
0x00000000000b2742 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000177b9c : or eax, 0xc9ffeed6 ; retf
0x0000000000173f41 : or eax, 0xcad7947e ; jmp 0x173eed
0x000000000019dc9d : or eax, 0xdb00001 ; hlt ; call qword ptr [rcx]
0x000000000016de59 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000016de65 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000000e95e6 : or eax, 0xe20d8b48 ; ret 0x2c
0x00000000001760d3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000175d73 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000013f2b3 : or eax, 0xf7f0ff3 ; ret
0x0000000000084a0a : or eax, 0xf886a ; mov rdx, rcx ; jmp 0x849ad
0x0000000000002e01 : or eax, 0xf8eeb385 ; ret
0x00000000000351ed : or eax, 0xffffffff ; ret
0x0000000000155d89 : or eax, 1 ; ret
0x000000000015a211 : or eax, 1 ; vzeroupper ; ret
0x000000000014f98d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001524d1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f9b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a99c4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; retf 1
0x00000000000040f0 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010630 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001a9344 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; ret
0x000000000011d842 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a9adc : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000000f1be1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000199235 : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, al ; ret 0
0x000000000008f818 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004c018 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a1f18 : or eax, dword ptr [rax] ; cmove rax, rdx ; ret
0x000000000008707f : or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000a1ea8 : or eax, dword ptr [rax] ; je 0xa1e71 ; ret
0x00000000000a1ea8 : or eax, dword ptr [rax] ; je 0xa1e73 ; ret
0x00000000000c4958 : or eax, dword ptr [rax] ; mov eax, 0x142 ; syscall
0x00000000000c9195 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000c6221 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000c9793 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000001999ca : or eax, dword ptr [rax] ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0
0x00000000000c9c8d : or eax, dword ptr [rbx] ; add byte ptr [rcx], bh ; ret
0x000000000019cb2e : or eax, dword ptr [rcx + 0xa] ; ret
0x000000000019db35 : or eax, dword ptr [rcx] ; add byte ptr [rax + 0xb], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019dae5 : or eax, dword ptr [rcx] ; add byte ptr [rax + 0xb], cl ; hlt ; call qword ptr [rsi]
0x00000000000e9d64 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019daa9 : or eax, dword ptr [rcx] ; add byte ptr [rbx + rcx - 0xc], al ; call qword ptr [rbx]
0x000000000019db21 : or eax, dword ptr [rcx] ; add byte ptr [rbx + rcx - 0xc], cl ; jmp qword ptr [rcx]
0x000000000018bd0d : or eax, dword ptr [rdx] ; add ah, dl ; stc ; call rax
0x00000000000e76dd : or eax, dword ptr [rdx] ; add byte ptr [rax + 0x84], bh ; syscall
0x0000000000195128 : or eax, dword ptr [rdx] ; jno 0x19513a ; ret
0x000000000019cb45 : or eax, dword ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x00000000001ac862 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000001a6c6d : or eax, dword ptr [rdx] ; ret 0xf00e
0x00000000000cb2b7 : or eax, ebp ; ret
0x0000000000034217 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000001083a0 : or eax, edi ; bswap eax ; ret
0x0000000000042b79 : or eax, edx ; cmp ecx, 0x24 ; jne 0x42b63 ; ret
0x0000000000034125 : or eax, edx ; movq xmm0, rax ; ret
0x000000000003809c : or eax, edx ; ret
0x00000000000f6b82 : or eax, esi ; ret
0x000000000007cb74 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000fd71b : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x0000000000050775 : or ebp, edi ; dec dword ptr [rax + 0x29] ; ret
0x0000000000186fd1 : or ebp, edi ; jmp qword ptr [rax + 0x20fffd0a]
0x00000000001885e9 : or ebp, edi ; jmp rax
0x0000000000070920 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187921 : or ebx, ebp ; call rsp
0x00000000000f0800 : or ebx, esi ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013f473 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000006af0e : or ebx, esi ; ret
0x00000000000eb92c : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000083e2e : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000079577 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000086d05 : or ecx, dword ptr [rax - 0x77] ; retf
0x000000000006fe78 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000024ee9 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f0bd2 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000007d3b9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000a1794 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a17e4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000115b3c : or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000118cd8 : or ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0x95e9
0x0000000000162b6c : or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000000000112fa7 : or ecx, dword ptr [rdi] ; mov dh, 0x55 ; add dh, dh ; ret
0x000000000011d954 : or ecx, dword ptr [rdi] ; retf 0xd285
0x000000000009bce3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000c5ae3 : or edi, dword ptr [rax + 0xfde8] ; jne 0xc5abf ; ret
0x00000000000fe93c : or edi, dword ptr [rax + 1] ; ret
0x00000000000f2ee2 : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000018bb39 : or edi, ecx ; call rsp
0x000000000009f847 : or edi, edi ; loope 0x9f8ba ; nop dword ptr [rax + rax] ; ret
0x0000000000034366 : or edi, edx ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x00000000000f1ba0 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000002ddf : or edx, ebp ; clc ; ret
0x0000000000033cc5 : or edx, esi ; je 0x33c4d ; ret
0x00000000000c5c5b : or edx, esp ; add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x00000000001a82e8 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x000000000011b8a4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a82e9 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000ddb01 : or esi, dword ptr [rsi] ; hlt ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000ed34e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000006de30 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f393 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000351a4 : or esi, ebx ; ret
0x00000000001a6d45 : or esi, edi ; call qword ptr [rcx]
0x0000000000003bb0 : or esi, edx ; push rbp ; jg 0x3c23 ; xchg eax, ebp ; retf 0x10bf
0x000000000018a199 : or esi, esi ; call rax
0x00000000000ff553 : or esi, esi ; jno 0xff562 ; cmovne eax, edx ; ret
0x00000000000b8fb9 : or esi, esi ; ret
0x00000000001013dc : or esi, esi ; ret 0xf08
0x000000000019daad : or esi, esp ; call qword ptr [rbx]
0x000000000019dae9 : or esi, esp ; call qword ptr [rsi]
0x000000000019db25 : or esi, esp ; jmp qword ptr [rcx]
0x000000000006dcd4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078c51 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000000306b : or esp, dword ptr [rdx] ; js 0x3025 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000193c72 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000ec494 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000000df673 : or qword ptr [rax + 8], 0x2000 ; ret
0x00000000000cf13f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000132a12 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000358b5 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000149f75 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000034ae6 : or r10b, byte ptr [rip + 0x6f0f6600] ; ret 0xfde8
0x00000000000f1b9f : or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000013f4e2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000013f472 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000019db24 : or r14, rsp ; jmp qword ptr [rcx]
0x000000000018ac38 : or r14b, dil ; jmp rsp
0x000000000013f402 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000019daac : or r14d, esp ; call qword ptr [rbx]
0x000000000013f392 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001ac861 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000019cb2d : or r8d, dword ptr [rcx + 0xa] ; ret
0x000000000002a480 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x0000000000149ff7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c579 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006bed1 : or rax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000351ec : or rax, 0xffffffffffffffff ; ret
0x00000000001584b2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000199234 : or rax, qword ptr [r8] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, al ; ret 0
0x0000000000150a17 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001999c9 : or rax, qword ptr [rax] ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0
0x0000000000195127 : or rax, qword ptr [rdx] ; jno 0x19513b ; ret
0x000000000019cb44 : or rax, qword ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x00000000001a6c6c : or rax, qword ptr [rdx] ; ret 0xf00e
0x0000000000042b78 : or rax, rdx ; cmp ecx, 0x24 ; jne 0x42b64 ; ret
0x0000000000034124 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003809b : or rax, rdx ; ret
0x00000000000f6b81 : or rax, rsi ; ret
0x00000000000f2ee1 : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000019dae8 : or rsi, rsp ; call qword ptr [rsi]
0x0000000000193c71 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x000000000011dd93 : or sil, sil ; ret 0x8802
0x0000000000033eb0 : orpd xmm0, xmm1 ; ret
0x0000000000033eb1 : orps xmm0, xmm1 ; ret
0x000000000003427e : orps xmm0, xmm3 ; ret
0x000000000018888d : out 0, al ; add ah, al ; push rax ; out dx, eax ; jmp qword ptr [rax]
0x00000000001047c5 : out 0, al ; add byte ptr [rax], al ; syscall
0x00000000001888d5 : out 0, eax ; add byte ptr [rbx + rbx*2 - 0x11], dl ; call qword ptr [rax]
0x00000000001083a9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000070346 : out 0x1d, al ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x702e2
0x000000000011ae90 : out 0x31, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000035b7e : out 0x37, al ; add byte ptr [rcx], bh ; ret 0x237f
0x00000000000e75b9 : out 0x44, al ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010240c : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000023cb2 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000126be0 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000011e608 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000007216d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000a1870 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000456f8 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000839c8 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000000deb2a : out 0x4c, al ; mov edi, esi ; call 0x6ae26
0x00000000000889f0 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00000000000bf198 : out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x0000000000127cb8 : out 0x5b, eax ; ret
0x0000000000186160 : out 0x71, al ; std ; jmp rcx
0x0000000000186180 : out 0x72, al ; std ; jmp rcx
0x0000000000175960 : out 0x78, al ; jnp 0x1759c2 ; retf
0x00000000000ef4d6 : out 0x7b, al ; sub al, 0 ; pop rbx ; ret
0x000000000002dd03 : out 0x80, eax ; sete al ; ret
0x00000000000f7270 : out 0x89, al ; fistp qword ptr [rax + 0x113] ; syscall
0x00000000000f6e84 : out 0x89, al ; fistp qword ptr [rax + 0x119] ; syscall
0x00000000000f812c : out 0x89, al ; fistp qword ptr [rax + 0x2c] ; syscall
0x00000000000f7efc : out 0x89, al ; fistp qword ptr [rax + 0x2d] ; syscall
0x00000000000ee2e6 : out 0x89, al ; out dx, eax ; mov eax, 0x147 ; syscall
0x00000000000ee3f6 : out 0x89, al ; out dx, eax ; mov eax, 0x148 ; syscall
0x000000000010015d : out 0x89, al ; out dx, eax ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000d06ec : out 0x89, eax ; ret
0x000000000006d5ca : out 0x89, eax ; ret 0xc031
0x00000000000862b5 : out 0x9a, eax ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000024ea : out 0xa9, al ; ret 0xbd07
0x00000000000038fc : out 0xb0, al ; test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000173ef1 : out 0xb3, al ; retf 0xe80
0x000000000006adcf : out 0xbf, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xe7858
0x0000000000174c20 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000002739 : out 0xdf, eax ; syscall
0x00000000000be59c : out 0xe8, al ; outsb dx, byte ptr [rsi] ; retf 3
0x00000000000b03c7 : out 0xe8, al ; ret
0x00000000000246ec : out 0xe8, eax ; pop rsi ; retf
0x00000000000245b3 : out 0xe8, eax ; push rdi ; retf
0x000000000002d047 : out 0xe8, eax ; ret
0x00000000000b5268 : out 0xe8, eax ; ret 0xfd17
0x0000000000122bd8 : out 0xe8, eax ; ret 0xffc2
0x00000000000af83f : out 0xe8, eax ; retf
0x00000000000c5860 : out 0xe8, eax ; retf 0x244
0x00000000000f3a90 : out 0xe8, eax ; retf 0xfffd
0x00000000001650a7 : out 0xe8, eax ; sbb eax, edx ; jmp 0x1650af
0x00000000000ba674 : out 0xe9, al ; ret
0x0000000000031aba : out 0xeb, eax ; retf 0x8b49
0x0000000000188481 : out 0xee, al ; jmp rsp
0x0000000000179459 : out 0xf3, al ; dec edi ; in al, 0xf3 ; jmp qword ptr [rcx]
0x000000000013ec7a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000088099 : out 0xf3, al ; ret
0x000000000013ecfa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176948 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000001aa709 : out 0xf7, al ; call qword ptr [rcx]
0x000000000018b3b1 : out 0xf7, al ; call rsp
0x0000000000178845 : out 0xfb, al ; call qword ptr [rax]
0x000000000018cbf1 : out 0xfc, al ; jmp rsp
0x000000000018ced9 : out 0xfd, al ; call rsp
0x000000000002152a : out 0xfe, eax ; and eax, 0x3ff ; mov r10d, eax ; jmp 0x21504
0x000000000003c25f : out 0xff, eax ; dec dword ptr [rax + 0x39] ; ret
0x00000000001ab679 : out 1, eax ; add byte ptr [rbx], dl ; sti ; jmp qword ptr [rdx]
0x0000000000114d9d : out 3, al ; call 0x21024
0x0000000000113d6d : out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x000000000010e087 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000011120e : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000188a6d : out dx, al ; add byte ptr [rax], al ; xchg eax, esp ; jne 0x188a68 ; jmp qword ptr [rax]
0x0000000000113823 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x113830 ; ret
0x00000000000892e3 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000194d1e : out dx, al ; call qword ptr [rax]
0x00000000001883d2 : out dx, al ; call qword ptr [rcx + rcx*8 - 0x3cac0000]
0x00000000001974f6 : out dx, al ; call qword ptr [rcx]
0x0000000000195a32 : out dx, al ; call qword ptr [rdi]
0x00000000001951d6 : out dx, al ; call qword ptr [rdx]
0x0000000000195af2 : out dx, al ; call qword ptr [rsi]
0x0000000000084aaa : out dx, al ; call rax
0x0000000000177ada : out dx, al ; call rbx
0x0000000000194c32 : out dx, al ; call rdi
0x000000000019608e : out dx, al ; call rsi
0x00000000001883da : out dx, al ; call rsp
0x0000000000002e04 : out dx, al ; clc ; ret
0x0000000000185f89 : out dx, al ; cld ; jmp qword ptr [rax]
0x00000000000f38ea : out dx, al ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000130576 : out dx, al ; cmp byte ptr [rax], ch ; add byte ptr [rax - 0x39], cl ; ret
0x000000000017794e : out dx, al ; dec dword ptr [rax - 0x3a] ; out dx, al ; dec dword ptr [rax - 0x3a] ; out dx, al ; jmp rax
0x000000000017795a : out dx, al ; dec dword ptr [rax - 0x3a] ; out dx, al ; dec dword ptr [rax] ; ret 0xffee
0x0000000000177952 : out dx, al ; dec dword ptr [rax - 0x3a] ; out dx, al ; jmp rax
0x00000000001310b4 : out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; ret
0x000000000017795e : out dx, al ; dec dword ptr [rax] ; ret 0xffee
0x0000000000188402 : out dx, al ; dec dword ptr [rbx + rcx*8 - 0x274c0000] ; out dx, al ; jmp rsp
0x0000000000177cc6 : out dx, al ; dec dword ptr [rbx] ; retf
0x0000000000177b9a : out dx, al ; dec dword ptr [rip - 0x3600112a] ; retf
0x0000000000188002 : out dx, al ; dec eax ; mov al, 0 ; add byte ptr [rdi + rdi], dl ; out dx, al ; jmp rsp
0x00000000001882c2 : out dx, al ; dec eax ; ret
0x0000000000177b9e : out dx, al ; dec ecx ; retf
0x0000000000188382 : out dx, al ; dec esp ; mov dword ptr [rax], 0xeeb9b400 ; jmp rax
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000175d77 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000000d22f3 : out dx, al ; hlt ; inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0xe9 ; retf 0xfffa
0x0000000000003be5 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000018829a : out dx, al ; inc dword ptr [rax] ; ret
0x000000000018825a : out dx, al ; inc dword ptr [rax] ; ret 0
0x00000000001882ca : out dx, al ; inc dword ptr [rsp + rax*8] ; add byte ptr [rax], al ; adc al, 0xaa ; out dx, al ; jmp qword ptr [rax]
0x00000000001776d2 : out dx, al ; inc edi ; out dx, al ; jmp qword ptr [rbx]
0x00000000001882d2 : out dx, al ; jmp qword ptr [rax]
0x00000000001776d6 : out dx, al ; jmp qword ptr [rbx]
0x00000000001940a6 : out dx, al ; jmp qword ptr [rcx]
0x0000000000194592 : out dx, al ; jmp qword ptr [rdi]
0x00000000001958d6 : out dx, al ; jmp qword ptr [rdx]
0x0000000000195056 : out dx, al ; jmp qword ptr [rsi]
0x0000000000177956 : out dx, al ; jmp rax
0x000000000019483a : out dx, al ; jmp rbx
0x00000000001962e6 : out dx, al ; jmp rcx
0x0000000000194656 : out dx, al ; jmp rdi
0x0000000000177796 : out dx, al ; jmp rdx
0x000000000018800a : out dx, al ; jmp rsp
0x00000000000038b9 : out dx, al ; jne 0x3899 ; ret 0x975
0x00000000000f7499 : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000006de31 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000003277 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000e66dd : out dx, al ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x00000000000f70fb : out dx, al ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000000ed1ed : out dx, al ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f71ad : out dx, al ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000000ed29b : out dx, al ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x00000000000e678d : out dx, al ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x00000000000f867d : out dx, al ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000000ee130 : out dx, al ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x00000000000ee1e0 : out dx, al ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000f8735 : out dx, al ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x00000000000edfdd : out dx, al ; mov edi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f731d : out dx, al ; mov edi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f87dd : out dx, al ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000ee07d : out dx, al ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000000ecff7 : out dx, al ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000ee9d5 : out dx, al ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f7d7d : out dx, al ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f7cad : out dx, al ; mov edi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f81cd : out dx, al ; mov edi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f806d : out dx, al ; mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000c4188 : out dx, al ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f897d : out dx, al ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f8a35 : out dx, al ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000000f704d : out dx, al ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000c42ae : out dx, al ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000e81cd : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000104737 : out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000f9083 : out dx, al ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000e80fd : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000035dbe : out dx, al ; mov edi, r12d ; mov eax, 0x81 ; syscall
0x000000000013947a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000364fa : out dx, al ; mov rdi, qword ptr [rsp + 8] ; call r12
0x0000000000084cd6 : out dx, al ; mov rdi, r12 ; call rax
0x0000000000036525 : out dx, al ; mov rdi, r14 ; call r12
0x00000000000db9c5 : out dx, al ; mov rdi, r15 ; call 0xd8416
0x0000000000127836 : out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000365f2 : out dx, al ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x00000000000f1b38 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000000b47d4 : out dx, al ; mov rdi, rbx ; call 0x21206
0x0000000000036668 : out dx, al ; mov rdi, rbx ; call r12
0x00000000000523e7 : out dx, al ; mov rdi, rbx ; call rax
0x0000000000038f4e : out dx, al ; mov rdi, rbx ; mov eax, 0x13e ; syscall
0x00000000000f1c7e : out dx, al ; mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000ec63e : out dx, al ; mov rdi, rbx ; mov eax, 7 ; syscall
0x000000000013f08a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000002219 : out dx, al ; nop ; retf 0x3844
0x0000000000156b0e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001760d2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x000000000017595f : out dx, al ; out 0x78, al ; jnp 0x1759c3 ; retf
0x0000000000188d31 : out dx, al ; out dx, eax ; call rsp
0x000000000003260d : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f0696 : out dx, al ; push 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000188282 : out dx, al ; push qword ptr [rdx + rax*8 - 0x5b5c0000] ; out dx, al ; call rax
0x00000000001883e2 : out dx, al ; push qword ptr [rdx + rcx*8] ; add byte ptr [rdx + rdx*8 - 0x12], ah ; call rsp
0x00000000001883f2 : out dx, al ; push rsp ; retf 0
0x0000000000054f3e : out dx, al ; ret
0x000000000003105b : out dx, al ; ret 0x14
0x00000000000f7b76 : out dx, al ; ret 0x2b
0x000000000000262a : out dx, al ; ret 0x88ad
0x0000000000002919 : out dx, al ; retf 0x182c
0x00000000000a1d31 : out dx, al ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000fef69 : out dx, al ; xor r15d, r15d ; call rax
0x00000000000b22ed : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000006f05d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001abf75 : out dx, eax ; add dword ptr [rax], eax ; call 0xffffffffe41ab7c9
0x00000000000727ee : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007284a : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f1de : out dx, eax ; call 0x11b4d3
0x000000000011cb7e : out dx, eax ; call 0x129623
0x00000000000e4da8 : out dx, eax ; call 0x21083
0x0000000000044797 : out dx, eax ; call 0x21223
0x00000000000e4fde : out dx, eax ; call 0x212cb
0x000000000003a442 : out dx, eax ; call 0x46f43
0x00000000000f0e41 : out dx, eax ; call 0x6d113
0x00000000000ce4ee : out dx, eax ; call 0xfa7f3
0x0000000000177d0e : out dx, eax ; call qword ptr [rax]
0x000000000011e1c3 : out dx, eax ; call qword ptr [rbx]
0x00000000000364e9 : out dx, eax ; call r12
0x00000000000f3785 : out dx, eax ; call r14
0x000000000002ea34 : out dx, eax ; call rax
0x00000000000a28b2 : out dx, eax ; call rbx
0x000000000012a512 : out dx, eax ; call rcx
0x000000000011dd46 : out dx, eax ; call rdx
0x000000000018883a : out dx, eax ; call rsp
0x00000000001769c5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000012dab1 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000188ada : out dx, eax ; dec dword ptr [rdx + rsi*8] ; add byte ptr [rax], al ; in al, 0xab ; out dx, eax ; jmp qword ptr [rax]
0x0000000000188a6a : out dx, eax ; dec dword ptr [rsi + rbp*8] ; add byte ptr [rax], al ; xchg eax, esp ; jne 0x188a6b ; jmp qword ptr [rax]
0x00000000001885e2 : out dx, eax ; dec dword ptr [rsi + rdx*8 + 0xbf40000] ; out dx, eax ; jmp rax
0x0000000000188b1a : out dx, eax ; dec esp ; add byte ptr [rax], al ; and al, 0xb8 ; out dx, eax ; jmp rsp
0x0000000000001acf : out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001a0081 : out dx, eax ; hlt ; jmp qword ptr [rcx]
0x0000000000188aca : out dx, eax ; inc dword ptr [rax - 0x3bffff0f] ; stosb byte ptr [rdi], al ; out dx, eax ; call rsp
0x00000000001887aa : out dx, eax ; inc dword ptr [rcx + 0x43540000] ; out dx, eax ; call rax
0x0000000000177d2e : out dx, eax ; jmp qword ptr [rax - 0x2f0010c4]
0x000000000018868a : out dx, eax ; jmp qword ptr [rax]
0x000000000019816e : out dx, eax ; jmp qword ptr [rbx]
0x0000000000197e86 : out dx, eax ; jmp qword ptr [rdx]
0x0000000000198376 : out dx, eax ; jmp qword ptr [rsi]
0x0000000000177d02 : out dx, eax ; jmp rax
0x00000000001984f2 : out dx, eax ; jmp rdx
0x00000000001887ba : out dx, eax ; jmp rsp
0x000000000011c6af : out dx, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000011c8b6 : out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000018887a : out dx, eax ; ljmp [rax + 0x40000e5] ; push rax ; out dx, eax ; call rsp
0x00000000000ee2e8 : out dx, eax ; mov eax, 0x147 ; syscall
0x00000000000ee3f8 : out dx, eax ; mov eax, 0x148 ; syscall
0x00000000000f1b3b : out dx, eax ; mov eax, 9 ; syscall
0x00000000000df7b0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000001392aa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001393a6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001392f2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a2a03 : out dx, eax ; mov r9, r14 ; call rbx
0x00000000000f4f28 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000036a8a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001100c3 : out dx, eax ; mov rax, qword ptr [rsp] ; call rax
0x0000000000045d60 : out dx, eax ; mov rax, rdx ; ret
0x00000000000f31bb : out dx, eax ; mov rsi, qword ptr [rax] ; call r14
0x0000000000082872 : out dx, eax ; mov rsi, rbx ; call 0x7eb36
0x000000000013f10a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000003642 : out dx, eax ; nop ; retf 0xe9ee
0x0000000000156c0d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000002918 : out dx, eax ; out dx, al ; retf 0x182c
0x000000000010015f : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000117d70 : out dx, eax ; pop rbx ; ret
0x000000000015b4f3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4cb
0x000000000015b571 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b549
0x000000000015ba03 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b9db
0x000000000015ba81 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15ba59
0x000000000015cb23 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15cafb
0x000000000015cba1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15cb79
0x000000000015d033 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15d00b
0x000000000015d0b1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15d089
0x0000000000177d0a : out dx, eax ; push qword ptr [rax + 0x3e] ; out dx, eax ; call qword ptr [rax]
0x0000000000188bd2 : out dx, eax ; push qword ptr [rax + rdi*8 - 0x2c1c0000] ; out dx, eax ; jmp rsp
0x000000000015b0f3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015b108 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015b11d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000188682 : out dx, eax ; push rsp ; fld dword ptr [rax] ; add byte ptr [rsi + rdx], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000000a0b18 : out dx, eax ; ret
0x000000000009fa93 : out dx, eax ; ret 0xf66
0x0000000000061325 : out dx, eax ; ret 0xffff
0x000000000009fa76 : out dx, eax ; retf 0x4466
0x000000000017609b : out dx, eax ; retf 0xab0d
0x00000000000cfdfe : out dx, eax ; sal byte ptr [rcx], 0xc0 ; movaps xmmword ptr [rdi], xmm0 ; ret
0x000000000008d50a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000015c60c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000015c5f5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015c5de : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015b09a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a1fe0 : out dx, eax ; sub rax, 4 ; ret
0x00000000000d69d5 : out dx, eax ; test al, 0xf4 ; dec dword ptr [rax + 0x63] ; ret
0x000000000017a5f0 : out dx, eax ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x0000000000164937 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000011d66e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000045350 : out dx, eax ; xor eax, eax ; ret
0x0000000000151c3e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006e456 : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x6e48a ; mov rax, rdx ; pop rbx ; ret
0x0000000000077046 : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x7707a ; mov rax, rdx ; pop rbx ; ret
0x000000000015e74e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000041ea3 : outsb dx, byte ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ea3fc : outsb dx, byte ptr [rsi] ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ea259 : outsb dx, byte ptr [rsi] ; dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000176523 : outsb dx, byte ptr [rsi] ; ja 0x1764ac ; ret 0x48f
0x0000000000186150 : outsb dx, byte ptr [rsi] ; jae 0x186153 ; jmp rcx
0x00000000000870b1 : outsb dx, byte ptr [rsi] ; or eax, 0x450f4800 ; ret 0xfc3
0x000000000012c71e : outsb dx, byte ptr [rsi] ; ret 0xfffb
0x0000000000003902 : outsb dx, byte ptr [rsi] ; retf
0x00000000000be59e : outsb dx, byte ptr [rsi] ; retf 3
0x0000000000174264 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000175898 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000018be31 : outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000186010 : outsb dx, byte ptr [rsi] ; std ; inc dword ptr [rsi] ; pop rbp ; std ; call rsi
0x000000000018cd71 : outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000186a2d : outsb dx, byte ptr [rsi] ; sti ; jmp rax
0x0000000000003785 : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000d67ba : outsd dx, dword ptr [rsi] ; adc byte ptr [rax + 0x63], cl ; ret
0x00000000000d67df : outsd dx, dword ptr [rsi] ; adc byte ptr [rbx + 0x634801c3], al ; ret
0x00000000000349e1 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000034869 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x0000000000165585 : outsd dx, dword ptr [rsi] ; add al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000189f85 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rsp ; ret
0x000000000007db62 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000034612 : outsd dx, dword ptr [rsi] ; and al, 0xd8 ; ret
0x000000000004a19a : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000001646d1 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; ret
0x000000000008d6b8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000914ee : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000e6b62 : outsd dx, dword ptr [rsi] ; jo 0xe6b7c ; adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e6b12 : outsd dx, dword ptr [rsi] ; js 0xe6b2c ; adc dword ptr [rsi + 0x70], eax ; ret
0x0000000000139a32 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x0000000000139c32 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000015c40d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000015c4ad : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000015bfd2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000015c052 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000095f0a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000034a99 : outsd dx, dword ptr [rsi] ; ret
0x0000000000034a39 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000174c26 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000053571 : outsd dx, dword ptr [rsi] ; ret 0x78e8
0x000000000005354c : outsd dx, dword ptr [rsi] ; ret 0x8341
0x0000000000034a62 : outsd dx, dword ptr [rsi] ; ret 0x87e8
0x0000000000139be7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000050a32 : outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x000000000015c4b2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000009c8c1 : outsd dx, dword ptr [rsi] ; ret 0xd
0x000000000005568a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000034aec : outsd dx, dword ptr [rsi] ; ret 0xfde8
0x00000000000554eb : outsd dx, dword ptr [rsi] ; ret 0xfee8
0x0000000000034764 : outsd dx, dword ptr [rsi] ; retf
0x00000000001515e9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000139cb2 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000005545c : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000015b4ea : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000008741d : outsd dx, dword ptr [rsi] ; ror byte ptr [rbx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000509d0 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000005350e : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000000873cd : outsd dx, dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000018be51 : outsd dx, dword ptr [rsi] ; stc ; call rsp
0x0000000000174c25 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000014f882 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000b2ad4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000b2abf : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000014f881 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000176025 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000176026 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000090ae5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x000000000015a0b6 : pextrw edi, mm0, 0x77 ; ret
0x000000000004a19f : pinsrw mm0, eax, 6 ; ret
0x000000000004a19e : pinsrw xmm0, eax, 6 ; ret
0x0000000000034171 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034491 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000090af3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000906b2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x90719 ; xor eax, eax ; ret
0x0000000000090b55 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x90bd9 ; xor eax, eax ; ret
0x0000000000090b84 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x90c09 ; xor eax, eax ; ret
0x00000000000b20b2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xb2119 ; xor eax, eax ; ret
0x0000000000034170 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034490 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000000228f : pmuludq mm4, mm7 ; retf
0x00000000000de6a1 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000195ee1 : pop qword ptr [rax] ; add byte ptr [rdi + rax*4 - 0x12], ch ; jmp rax
0x000000000018a5f5 : pop qword ptr [rcx] ; add byte ptr [rdi + rdi*2 - 0xa], ah ; call rax
0x00000000001ae898 : pop qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x0000000000103f94 : pop r10 ; ret
0x00000000001764af : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000075a07 : pop r11 ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x759a1
0x000000000006fa5a : pop r12 ; jmp rax
0x00000000000f2d66 : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000100162 : pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000078eee : pop r12 ; pop r13 ; jmp rax
0x0000000000082f9b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021fa6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021448 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006cbe9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002d5d9 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129d1e : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000370c5 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000021933 : pop r12 ; pop r13 ; ret
0x00000000000b2e79 : pop r12 ; pop r14 ; ret
0x00000000000c2aed : pop r12 ; pop rbp ; ret
0x0000000000021bf9 : pop r12 ; ret
0x00000000000b32ce : pop r12 ; sub r8, rdx ; lea rax, [r8 + rax*4] ; ret
0x0000000000078ef0 : pop r13 ; jmp rax
0x0000000000082f9d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021fa8 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002144a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006cbeb : pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002d5db : pop r13 ; pop r14 ; ret
0x0000000000129d20 : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000370c7 : pop r13 ; pop rbp ; ret
0x0000000000021935 : pop r13 ; ret
0x0000000000129cf4 : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x0000000000082f9f : pop r14 ; pop r15 ; jmp rax
0x0000000000021faa : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002144c : pop r14 ; pop r15 ; ret
0x000000000006cbed : pop r14 ; pop rbp ; ret
0x0000000000021e21 : pop r14 ; ret
0x0000000000129d22 : pop r14 ; xor eax, eax ; jmp rcx
0x0000000000082fa1 : pop r15 ; jmp rax
0x0000000000021fac : pop r15 ; pop rbp ; ret
0x000000000002144e : pop r15 ; ret
0x0000000000124896 : pop r8 ; mov eax, 1 ; ret
0x000000000011ef2f : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x000000000018574f : pop r9 ; clc ; ret 0x6e1f
0x000000000012506e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001927d9 : pop rax ; add byte ptr [rax], al ; xchg eax, esp ; mov ch, 0xed ; call qword ptr [rax]
0x0000000000113b63 : pop rax ; add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x0000000000113c17 : pop rax ; add esi, eax ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001a3b18 : pop rax ; add esi, esi ; jmp qword ptr [rbx]
0x00000000001a1cd0 : pop rax ; add qword ptr [r8], r8 ; or al, 0x61 ; cmc ; jmp qword ptr [rcx]
0x00000000001a4538 : pop rax ; and esi, esi ; call qword ptr [rbx]
0x0000000000125214 : pop rax ; call rax
0x00000000001a16d1 : pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000000cf0c7 : pop rax ; cmp al, 0x11 ; je 0xcf0d7 ; xor eax, eax ; ret
0x000000000004c494 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x00000000001a45d0 : pop rax ; jbe 0x1a45db ; add ah, bl ; and esi, esi ; call qword ptr [rdi]
0x0000000000125076 : pop rax ; jmp rcx
0x00000000001958d0 : pop rax ; mov dword ptr [rax], eax ; add byte ptr [rbx + rsi*2], bh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000124897 : pop rax ; mov eax, 1 ; ret
0x000000000002dcc4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002dc52 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000003e26 : pop rax ; mov esi, 0xcf8cb236 ; retf
0x000000000011e6ae : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000f24c8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000d8501 : pop rax ; or bh, dh ; ret
0x00000000001936ba : pop rax ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x000000000009a124 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000874ee : pop rax ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000011f457 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021351 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000011ef30 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000f6d2b : pop rax ; pop rdi ; call rax
0x0000000000131d91 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000038128 : pop rax ; ret
0x0000000000044b64 : pop rax ; retf
0x00000000001999d0 : pop rax ; retf 0
0x00000000000ebeb4 : pop rax ; retf 0xffff
0x000000000019a2d0 : pop rax ; rol dword ptr [rax], cl ; add byte ptr [rcx + rbx*4 - 0xf], ch ; jmp rsi
0x00000000001864f5 : pop rax ; sti ; inc dword ptr [rax + 0x5a] ; sti ; jmp qword ptr [rax]
0x0000000000186411 : pop rax ; sti ; inc dword ptr [rax] ; pop rdx ; sti ; jmp rax
0x00000000001863f1 : pop rax ; sti ; jmp qword ptr [rax]
0x0000000000186431 : pop rax ; sti ; jmp rax
0x00000000001863d1 : pop rax ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x00000000001100f2 : pop rax ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000024974 : pop rax ; xchg byte ptr [rip + 0x3d8d4800], dl ; ret 0x15
0x0000000000001ecf : pop rax ; xchg eax, edi ; retf 0x20f4
0x0000000000186210 : pop rax ; xor bl, bh ; jmp qword ptr [rax]
0x0000000000018ba9 : pop rbp ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000192ce5 : pop rbp ; add byte ptr [rax], al ; test al, 0xca ; in eax, dx ; jmp qword ptr [rdi]
0x000000000011e7fd : pop rbp ; add eax, edx ; ret
0x00000000000c4d26 : pop rbp ; clc ; leave ; ret
0x000000000018c6f1 : pop rbp ; cli ; jmp rax
0x00000000001a1a05 : pop rbp ; cmc ; jmp qword ptr [rcx]
0x0000000000002399 : pop rbp ; cmp al, 0x7a ; xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000175ea5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000006f81f : pop rbp ; jmp rax
0x000000000011be35 : pop rbp ; jmp rcx
0x000000000011d672 : pop rbp ; jmp rdx
0x00000000000fc784 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000174800 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000001951d5 : pop rbp ; out dx, al ; call qword ptr [rdx]
0x0000000000188929 : pop rbp ; out dx, eax ; call qword ptr [rax]
0x0000000000188911 : pop rbp ; out dx, eax ; call rsp
0x000000000006fa59 : pop rbp ; pop r12 ; jmp rax
0x00000000000f2d65 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000100161 : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000078eed : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000082f9a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021447 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d5d8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129d1d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000021932 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b2e78 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000021bf8 : pop rbp ; pop r12 ; ret
0x000000000011c8fd : pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000082f9e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000021fa9 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002144b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006cbec : pop rbp ; pop r14 ; pop rbp ; ret
0x000000000002d5dc : pop rbp ; pop r14 ; ret
0x0000000000129d21 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000370c8 : pop rbp ; pop rbp ; ret
0x0000000000045668 : pop rbp ; pop rbx ; ret
0x0000000000021353 : pop rbp ; ret
0x00000000000311f9 : pop rbp ; ret 0x14
0x000000000007ce96 : pop rbp ; retf 0x33
0x0000000000186015 : pop rbp ; std ; call rsi
0x00000000001863dd : pop rbp ; sti ; call rax
0x000000000018647d : pop rbp ; sti ; jmp qword ptr [rax]
0x000000000018649d : pop rbp ; sti ; jmp rax
0x00000000000e7662 : pop rbp ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000000a0a1 : pop rbx ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000075a08 : pop rbx ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x759a0
0x00000000001737f8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a05a6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000010420f : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001a1901 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001737f6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000089618 : pop rbx ; cmovne rax, rdx ; ret
0x0000000000166461 : pop rbx ; in al, dx ; call qword ptr [rax - 0x2f0013a5]
0x0000000000166465 : pop rbx ; in al, dx ; call rax
0x000000000007b594 : pop rbx ; jmp rax
0x00000000000cd7c0 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000ede14 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000e27fc : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000cd0e6 : pop rbx ; mov eax, 1 ; ret
0x00000000001048b6 : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000e372b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000038125 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a05f1 : pop rbx ; mov eax, eax ; ret
0x000000000006fe1f : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000532bd : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000105e46 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000007185a : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007bd49 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000008cc9a : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000563b5 : pop rbx ; mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e3e6 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000082a00 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000b3373 : pop rbx ; mov rax, rdx ; ret
0x000000000006da56 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000871ee : pop rbx ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000001888d9 : pop rbx ; out dx, eax ; call qword ptr [rax]
0x000000000006cbe8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000370c4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000c2aec : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000002a4dc : pop rbx ; pop r12 ; ret
0x0000000000021e20 : pop rbx ; pop r14 ; ret
0x000000000011e7fc : pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006f81e : pop rbx ; pop rbp ; jmp rax
0x000000000011be34 : pop rbx ; pop rbp ; jmp rcx
0x000000000011d671 : pop rbx ; pop rbp ; jmp rdx
0x00000000000fc783 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006fa58 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000f2d64 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000100160 : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000078eec : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000003260e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021931 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b2e77 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000021bf7 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c8fc : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000ab3c4 : pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000021352 : pop rbx ; pop rbp ; ret
0x000000000002ab89 : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x0000000000176ae0 : pop rbx ; ret 0x6f9
0x0000000000165069 : pop rbx ; ret 0xffeb
0x0000000000068a3f : pop rbx ; ret 0xffff
0x000000000007b501 : pop rbx ; retf
0x000000000011ef31 : pop rbx ; sete al ; movzx eax, al ; ret
0x0000000000186479 : pop rbx ; sti ; inc dword ptr [rax + 0x5d] ; sti ; jmp qword ptr [rax]
0x0000000000186499 : pop rbx ; sti ; inc dword ptr [rax] ; pop rbp ; sti ; jmp rax
0x0000000000003075 : pop rbx ; sub edi, esi ; retf 0x54f7
0x0000000000001d51 : pop rbx ; test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000001048a6 : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000003229e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007bd12 : pop rbx ; xor edx, edx ; jmp rax
0x000000000011f84e : pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x0000000000081cfb : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x4c72
0x0000000000137637 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010e73e : pop rcx ; add rsp, 0x38 ; ret
0x0000000000093524 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001ac33d : pop rcx ; clc ; call qword ptr [rdi]
0x0000000000185460 : pop rcx ; clc ; ret 0x6e1f
0x0000000000198b49 : pop rcx ; cld ; call qword ptr [rbx]
0x000000000008af81 : pop rcx ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000034388 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000000f28c8 : pop rcx ; je 0xf28a1 ; mov eax, 0xffffffff ; jmp 0xf28a6
0x0000000000150b07 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008198f : pop rcx ; or al, ch ; retf 0xffd8
0x0000000000006a41 : pop rcx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012b29f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f240b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de5aa : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x00000000001a15d0 : pop rcx ; push rdi ; cmc ; call qword ptr [rax]
0x00000000000c415e : pop rcx ; ret
0x000000000009c8d7 : pop rcx ; ret 0xd
0x00000000000f20aa : pop rcx ; retf
0x0000000000073d03 : pop rcx ; retf 0x33
0x00000000000b628b : pop rcx ; retf 0xc
0x0000000000186495 : pop rcx ; sti ; jmp qword ptr [rax]
0x00000000001864b5 : pop rcx ; sti ; jmp rax
0x0000000000137e28 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000e7bea : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a2f29 : pop rdi ; add dword ptr [rax], eax ; xchg eax, esp ; test al, 0xf5 ; call rsi
0x000000000004c85c : pop rdi ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x000000000002690e : pop rdi ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000015729d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000155942 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x00000000000f6d2c : pop rdi ; call rax
0x00000000001a1b81 : pop rdi ; cmc ; jmp qword ptr [rcx]
0x000000000002df68 : pop rdi ; cmp byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000001051ad : pop rdi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000139849 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139659 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000175d9e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001050dd : pop rdi ; jl 0x1050ea ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001050dd : pop rdi ; jl 0x1050ec ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000082fa2 : pop rdi ; jmp rax
0x0000000000174d61 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000c4840 : pop rdi ; mov eax, 0x3a ; syscall
0x0000000000139479 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001392a9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001393a5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001392f1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000874ed : pop rdi ; pop rax ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000021fad : pop rdi ; pop rbp ; ret
0x000000000002144f : pop rdi ; ret
0x0000000000185500 : pop rdi ; retf
0x0000000000001c36 : pop rdi ; retf 0x49f2
0x00000000000ff658 : pop rdi ; sbb byte ptr [rbx], cl ; pop rsi ; sbb dh, dh ; ret
0x000000000019e699 : pop rdi ; stc ; call qword ptr [rax]
0x00000000001860a1 : pop rdi ; std ; jmp qword ptr [rax]
0x0000000000185fcd : pop rdi ; std ; push qword ptr [rbp + 0x5c] ; std ; jmp qword ptr [rcx]
0x00000000001863e1 : pop rdi ; sti ; call rax
0x0000000000186505 : pop rdi ; sti ; jmp rax
0x0000000000189c95 : pop rdx ; add dword ptr [rax], eax ; mov ah, 0x90 ; hlt ; call qword ptr [rax]
0x0000000000151006 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000004cd76 : pop rdx ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000041f81 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000eb692 : pop rdx ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000000fb852 : pop rdx ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000003be2 : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000175981 : pop rdx ; je 0x17594b ; ret 0xacfc
0x0000000000175a93 : pop rdx ; leave ; retf
0x00000000000c5ab5 : pop rdx ; mov eax, 0x7f ; ret
0x0000000000176947 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000177795 : pop rdx ; out dx, al ; jmp rdx
0x0000000000003641 : pop rdx ; out dx, eax ; nop ; retf 0xe9ee
0x0000000000103f93 : pop rdx ; pop r10 ; ret
0x00000000000f24cc : pop rdx ; pop rbx ; ret
0x00000000000de5a9 : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000103fb9 : pop rdx ; pop rsi ; ret
0x0000000000001b96 : pop rdx ; ret
0x0000000000175963 : pop rdx ; retf
0x00000000001863d5 : pop rdx ; sti ; call qword ptr [rax]
0x00000000001863f5 : pop rdx ; sti ; inc dword ptr [rax] ; pop rsp ; sti ; jmp rax
0x00000000001864f9 : pop rdx ; sti ; jmp qword ptr [rax]
0x0000000000186415 : pop rdx ; sti ; jmp rax
0x00000000001764b0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000b25b5 : pop rdx ; test al, 0xf0 ; jne 0xb25e9 ; lea rax, [rdi - 0x10] ; ret
0x000000000015b4f4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4ca
0x000000000015b572 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b548
0x000000000015ba04 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b9da
0x000000000015ba82 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15ba58
0x000000000015cb24 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15cafa
0x000000000015cba2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15cb78
0x000000000015d034 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15d00a
0x000000000015d0b2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15d088
0x000000000015719e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000fe6eb : pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000001a1ab9 : pop rsi ; cmc ; jmp qword ptr [rcx]
0x0000000000129cf5 : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x0000000000082fa0 : pop rsi ; pop r15 ; jmp rax
0x0000000000021fab : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002144d : pop rsi ; pop r15 ; ret
0x000000000006cbee : pop rsi ; pop rbp ; ret
0x0000000000021e22 : pop rsi ; ret
0x0000000000075a5e : pop rsi ; ret 0xfffa
0x00000000000246ee : pop rsi ; retf
0x00000000000024bf : pop rsi ; retf 0x8a3f
0x00000000000e885e : pop rsi ; retf 0xfffd
0x00000000000ff65b : pop rsi ; sbb dh, dh ; ret
0x000000000018601d : pop rsi ; std ; call rsi
0x000000000018609d : pop rsi ; std ; jmp qword ptr [rax + 0x20fffd5f]
0x0000000000186501 : pop rsi ; sti ; jmp rax
0x000000000012f6d7 : pop rsi ; sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000017a58c : pop rsi ; xchg eax, ebp ; cmc ; inc dword ptr [rbp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x0000000000129d23 : pop rsi ; xor eax, eax ; jmp rcx
0x0000000000151e50 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000198904 : pop rsp ; adc bh, ah ; call rsp
0x0000000000198554 : pop rsp ; adc bh, ah ; jmp qword ptr [rax]
0x00000000001a3bf4 : pop rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x0000000000151304 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3a64 : pop rsp ; add dh, dh ; jmp qword ptr [rbx]
0x0000000000152b50 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000e885a : pop rsp ; and al, 0x18 ; call 0xc52c5
0x00000000000805a0 : pop rsp ; and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rsi
0x00000000000b3175 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000801d4 : pop rsp ; and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000001ac50d : pop rsp ; clc ; call rsp
0x00000000001a1951 : pop rsp ; cmc ; jmp qword ptr [rcx]
0x000000000018e604 : pop rsp ; imul ecx ; call qword ptr [rdx]
0x00000000000b3d2e : pop rsp ; inc byte ptr [r13 + 0x69] ; retf
0x000000000006fa5b : pop rsp ; jmp rax
0x00000000001983d4 : pop rsp ; mov ah, 0 ; add byte ptr [rax], bh ; fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000000f2d67 : pop rsp ; mov esi, 2 ; jmp rax
0x0000000000100163 : pop rsp ; mov rdx, rax ; jmp rcx
0x00000000000cd383 : pop rsp ; neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000019e964 : pop rsp ; nop ; hlt ; jmp qword ptr [rcx]
0x000000000014fce0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000078eef : pop rsp ; pop r13 ; jmp rax
0x0000000000082f9c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021fa7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021449 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006cbea : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002d5da : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000129d1f : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000370c6 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000021934 : pop rsp ; pop r13 ; ret
0x00000000000b2e7a : pop rsp ; pop r14 ; ret
0x0000000000001ece : pop rsp ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000c2aee : pop rsp ; pop rbp ; ret
0x0000000000003960 : pop rsp ; ret
0x0000000000003281 : pop rsp ; ret 0x52c0
0x0000000000003732 : pop rsp ; ret 0xf84d
0x0000000000102070 : pop rsp ; ret 0xffff
0x0000000000117e30 : pop rsp ; ret 6
0x00000000001a9d84 : pop rsp ; retf
0x0000000000045549 : pop rsp ; retf 0x4df0
0x0000000000175b07 : pop rsp ; sbb ebp, ebx ; retf
0x0000000000185fd1 : pop rsp ; std ; jmp qword ptr [rcx]
0x00000000001864fd : pop rsp ; sti ; call qword ptr [rax]
0x000000000018cb29 : pop rsp ; sti ; call rsp
0x00000000001863f9 : pop rsp ; sti ; jmp rax
0x00000000001863d9 : pop rsp ; sti ; push rax ; pop rbp ; sti ; call rax
0x000000000018cdc4 : pop rsp ; sub eax, 0x96640001 ; std ; call rsp
0x00000000000b32cf : pop rsp ; sub r8, rdx ; lea rax, [r8 + rax*4] ; ret
0x000000000019eff4 : pop rsp ; test al, 0xf4 ; call rsp
0x00000000000c0581 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017a670 : pop rsp ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x000000000007e633 : pop rsp ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x7e648 ; ret
0x000000000007e632 : pop rsp ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x7e649 ; ret
0x000000000006e7ec : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000007626f : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006cb94 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a6d59 : popfq ; add dword ptr [rax], eax ; test byte ptr [rbx], cl ; idiv edi ; ret 0
0x000000000019ee19 : popfq ; hlt ; call qword ptr [rbx]
0x000000000019edf1 : popfq ; hlt ; jmp qword ptr [rcx]
0x0000000000058196 : popfq ; idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x000000000019a3ed : popfq ; int1 ; call rsp
0x0000000000175a8c : popfq ; jrcxz 0x175a51 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000000310b9 : popfq ; ret
0x00000000000b499e : popfq ; ret 0x3948
0x0000000000002727 : popfq ; retf
0x0000000000117387 : popfq ; retf 0x29
0x0000000000176842 : popfq ; retf 0xde4f
0x0000000000153530 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018701c : popfq ; stosd dword ptr [rdi], eax ; std ; dec dword ptr [rax - 0x53] ; std ; call rax
0x000000000004d9bf : popfq ; sub eax, 0x89480036 ; ret 0x2948
0x00000000000fdb4d : popfq ; sub eax, dword ptr [rax] ; add ecx, ebp ; retf 0xfffd
0x000000000013f1d2 : psllq mm1, qword ptr [r15] ; jg 0x13f1ed ; ret
0x0000000000141cf2 : psllq mm1, qword ptr [r15] ; jg 0x141d0d ; ret
0x000000000013f1d3 : psllq mm1, qword ptr [rdi] ; jg 0x13f1ec ; ret
0x0000000000141cf3 : psllq mm1, qword ptr [rdi] ; jg 0x141d0c ; ret
0x000000000009b486 : psllq mm1, qword ptr [rdi] ; jg 0x9b49a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009b485 : psllq mm1, qword ptr [rdi] ; jg 0x9b49b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009b4e7 : psllq mm1, qword ptr [rdi] ; jg 0x9b4fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c156 : psllq mm1, qword ptr [rdi] ; jg 0x9c16a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c155 : psllq mm1, qword ptr [rdi] ; jg 0x9c16b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c1b7 : psllq mm1, qword ptr [rdi] ; jg 0x9c1cc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009e736 : psllq mm1, qword ptr [rdi] ; jg 0x9e74a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e735 : psllq mm1, qword ptr [rdi] ; jg 0x9e74b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e797 : psllq mm1, qword ptr [rdi] ; jg 0x9e7ac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009f206 : psllq mm1, qword ptr [rdi] ; jg 0x9f21a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009f205 : psllq mm1, qword ptr [rdi] ; jg 0x9f21b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009f267 : psllq mm1, qword ptr [rdi] ; jg 0x9f27c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b5efc : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000001a09e0 : push -0x13fffec6 ; adc esi, ebp ; jmp qword ptr [rcx]
0x0000000000101b64 : push -0x16000039 ; ret 0xfffe
0x0000000000174864 : push -0x30 ; retf 0xe72e
0x00000000001a35e0 : push -0x3fffe9a ; retf 0xfff5
0x00000000000da316 : push -0x49f0e48c ; push rdi ; cmp dh, dh ; ret 0x7408
0x0000000000173eee : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000105192 : push -0x53 ; stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000019eee0 : push -0x53fffee1 ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000176095 : push -0x57d3205 ; call 0xffffffffab252b95
0x0000000000186e90 : push -0x59 ; sti ; call qword ptr [rax]
0x00000000001740a1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000002cb5 : push -0x7329150 ; ret
0x00000000001a3ce0 : push -0x73fffe93 ; add dh, dh ; jmp qword ptr [rdi]
0x000000000011a596 : push -0x7601077d ; ret
0x00000000000b0a6d : push -0x763076b4 ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000069b78 : push -0x77 ; ret 0x348
0x000000000002b9e6 : push -0x77d0000 ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000084a0b : push -0x78 ; str word ptr [rax - 0x77] ; retf 0x92eb
0x000000000005ca61 : push -0x7c000006 ; ret 0x8908
0x0000000000076a1d : push -0x7eb70003 ; ret
0x000000000015e734 : push -0x9ffffff ; ret 0x7501
0x0000000000049bd5 : push -0xb4617 ; dec dword ptr [rax - 0x77] ; retf 0x62e9
0x00000000000d69d3 : push -0xb571018 ; dec dword ptr [rax + 0x63] ; ret
0x0000000000179bec : push -0xf000b3d ; ret 0xfff4
0x00000000000b25a7 : push -0xfb872b8 ; ret
0x0000000000186a61 : push -5 ; jmp rax
0x000000000018725d : push 0 ; add ah, dl ; adc al, 0xea ; call rsp
0x00000000000c53ff : push 0 ; add byte ptr [rax], al ; syscall
0x0000000000175895 : push 0x1b6e41b5 ; std ; retf
0x000000000013234b : push 0x246c8b48 ; sub byte ptr [rax - 0x7f], cl ; ret
0x00000000000f0697 : push 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001863d0 : push 0x30fffb58 ; pop rdx ; sti ; call qword ptr [rax]
0x000000000007d8b0 : push 0x33 ; add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x0000000000195343 : push 0x44180e0a ; ret
0x0000000000164ba8 : push 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000000000007478d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000002aab8 : push 0x48bffff ; and al, 0x89 ; ret
0x000000000019b3e0 : push 0x4c0000e4 ; jo 0x19b3df ; jmp qword ptr [rdx]
0x000000000019b3e0 : push 0x4c0000e4 ; jo 0x19b3e0 ; jmp qword ptr [rdx]
0x00000000001a15e0 : push 0x55000146 ; push rdi ; cmc ; call qword ptr [rcx]
0x000000000011e867 : push 0x5c415d5b ; ret
0x0000000000189e45 : push 0x68440001 ; cmc ; call rax
0x0000000000186a5d : push 0x6a60fffb ; sti ; jmp rax
0x0000000000195ee0 : push 0x6c00008f ; xchg esi, ebp ; jmp rax
0x0000000000176522 : push 0x6e ; ja 0x1764ad ; ret 0x48f
0x000000000007adad : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000003607 : push 0x7514dab8 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000007bdda : push 0x75c08548 ; ret
0x0000000000175e02 : push 0xfd4cbe ; retf 0xf64
0x000000000002e9c6 : push 0xfffffff ; retf 0xc089
0x00000000001a3a11 : push 1 ; add ah, ch ; push rbp ; jmp qword ptr [rbx]
0x00000000001a39fd : push 1 ; add al, dl ; push rbp ; jmp qword ptr [rsi]
0x00000000001a3a61 : push 1 ; add byte ptr [rax + rax - 0xa], bl ; jmp qword ptr [rbx]
0x00000000001a3a25 : push 1 ; add byte ptr [rax], cl ; add dh, dh ; jmp qword ptr [rbx]
0x000000000012473e : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000009bee2 : push 5 ; add byte ptr [rax], al ; ret
0x00000000000f9228 : push 8 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001863a3 : push qword ptr [rax + 0x1f] ; sti ; inc eax ; and bl, bh ; call qword ptr [rax]
0x00000000001862cf : push qword ptr [rax + 0x2f] ; sti ; push qword ptr [rax] ; xor ebx, edi ; call qword ptr [rax]
0x0000000000062b72 : push qword ptr [rax + 0x31] ; fucomi st(1) ; xchg eax, edx ; retf 0xffff
0x0000000000177d0b : push qword ptr [rax + 0x3e] ; out dx, eax ; call qword ptr [rax]
0x00000000001865a3 : push qword ptr [rax + 0x40fffb90] ; nop ; sti ; call rax
0x0000000000186cb3 : push qword ptr [rax + 0x40fffbb4] ; mov ah, 0xfb ; call rax
0x0000000000186a9b : push qword ptr [rax + 0x40fffbb7] ; mov bh, 0xfb ; call rax
0x00000000001860b7 : push qword ptr [rax + 0x40fffd62] ; movsxd rdi, ebp ; call rax
0x000000000018651b : push qword ptr [rax + 0x44] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018656f : push qword ptr [rax + 0x4b] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00000000001864f3 : push qword ptr [rax + 0x58] ; sti ; inc dword ptr [rax + 0x5a] ; sti ; jmp qword ptr [rax]
0x0000000000187e73 : push qword ptr [rax + 0x640000a7] ; ret 0xffec
0x0000000000186e47 : push qword ptr [rax + rbp*4 - 5] ; jmp rsp
0x00000000000722c5 : push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000179d4f : push qword ptr [rax + rcx*8] ; hlt ; jmp qword ptr [rax]
0x0000000000188bd3 : push qword ptr [rax + rdi*8 - 0x2c1c0000] ; out dx, eax ; jmp rsp
0x000000000018c323 : push qword ptr [rax + rsi + 0x5540002] ; cli ; call rax
0x0000000000179b9f : push qword ptr [rax - 0x15000bc8] ; cmp ah, dh ; jmp qword ptr [rax]
0x00000000001861ff : push qword ptr [rax - 0x1e00028e] ; jae 0x18620c ; jmp rcx
0x00000000001861df : push qword ptr [rax - 0x1e00028f] ; jae 0x1861ec ; jmp rcx
0x0000000000178a3f : push qword ptr [rax - 0x1f000dcc] ; xor al, 0xf2 ; call qword ptr [rax]
0x000000000017882f : push qword ptr [rax - 0x21] ; sti ; jmp rax
0x0000000000179417 : push qword ptr [rax - 0x24] ; jmp qword ptr [rbp + 0x16fff3e2]
0x0000000000179cc3 : push qword ptr [rax - 0x39] ; hlt ; call qword ptr [rsi]
0x0000000000178b13 : push qword ptr [rax - 0x3f000dc8] ; cmp dl, dh ; call rax
0x000000000017898f : push qword ptr [rax - 0x3f000dd6] ; sub dh, dl ; call rax
0x0000000000178873 : push qword ptr [rax - 0x3f000e6b] ; xchg eax, edi ; int1 ; call rax
0x0000000000186eff : push qword ptr [rax - 0x57] ; sti ; jmp rax
0x000000000018905b : push qword ptr [rax - 0x5bfffeee] ; ret 0xfff0
0x0000000000185ebb : push qword ptr [rax - 0x5d] ; cld ; inc dword ptr [rax - 0x5c] ; cld ; call qword ptr [rax]
0x0000000000186997 : push qword ptr [rax - 0x78] ; sti ; jmp rax
0x0000000000186fa7 : push qword ptr [rax - 6] ; cld ; inc eax ; sti ; cld ; call qword ptr [rax]
0x000000000017b82b : push qword ptr [rax] ; and dl, bh ; jmp qword ptr [rax]
0x0000000000178893 : push qword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; inc dword ptr [rax - 0x58] ; int1 ; jmp rax
0x0000000000185f5f : push qword ptr [rax] ; fdiv st(4), st(0) ; call qword ptr [rax]
0x0000000000172ae7 : push qword ptr [rax] ; in al, dx ; dec dword ptr [rbp] ; in al, dx ; call rcx
0x000000000017883f : push qword ptr [rax] ; in eax, 0xfb ; jmp qword ptr [rax + 0x10fffbe6]
0x00000000001861ef : push qword ptr [rax] ; jb 0x1861f4 ; jmp rcx
0x000000000009ab2f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000185fcb : push qword ptr [rax] ; pop rdi ; std ; push qword ptr [rbp + 0x5c] ; std ; jmp qword ptr [rcx]
0x00000000001863d3 : push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x0000000000178903 : push qword ptr [rax] ; ret 0xfff1
0x000000000018cacb : push qword ptr [rax] ; retf
0x0000000000185ed3 : push qword ptr [rax] ; test eax, 0xaa20fffc ; cld ; call qword ptr [rax]
0x0000000000186337 : push qword ptr [rax] ; xor bh, bl ; call qword ptr [rax]
0x000000000018624f : push qword ptr [rax] ; xor bl, bh ; push rax ; xor ebx, edi ; call rax
0x00000000001862bb : push qword ptr [rax] ; xor eax, 0x3710fffb ; sti ; jmp rax
0x00000000001862d3 : push qword ptr [rax] ; xor ebx, edi ; call qword ptr [rax]
0x00000000001600b8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000185fcf : push qword ptr [rbp + 0x5c] ; std ; jmp qword ptr [rcx]
0x0000000000164ba6 : push qword ptr [rbp + 0x6a] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000155d39 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000012283d : push qword ptr [rbp + rax - 0x18] ; retf
0x000000000007bd7d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000131030 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000018bd5b : push qword ptr [rbp + rcx + 2] ; add byte ptr [rbx + rdx*2 - 7], dl ; call rsp
0x0000000000045d5e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000a1fde : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x000000000010f598 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011782b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000456f6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000010240a : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c120 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000351dc : push qword ptr [rbx + 1] ; ret
0x0000000000072ada : push qword ptr [rbx + 2] ; mov eax, dword ptr [rdx] ; ret
0x0000000000044f26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000018693f : push qword ptr [rbx + rax*4 - 5] ; jmp rsp
0x000000000018bd0b : push qword ptr [rbx + rcx + 0x47d40002] ; stc ; call rax
0x00000000001271b2 : push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x00000000000f918f : push qword ptr [rbx - 0x77] ; fistp qword ptr [rax + 0x14] ; syscall
0x000000000006d431 : push qword ptr [rbx - 0x77] ; ret 0xe283
0x00000000000e267d : push qword ptr [rcx + rbp - 0x18] ; retf
0x0000000000178747 : push qword ptr [rcx + rcx*2 + 0x49d4fff1] ; int1 ; jmp rsp
0x0000000000186717 : push qword ptr [rcx + rdx*4 - 0x6ebb0005] ; sti ; call rsp
0x0000000000058048 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000000cfcd4 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007867f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000075de8 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000aba4b : push qword ptr [rcx] ; shl byte ptr [rsi - 0x70], 1 ; retf 0xc083
0x00000000000fb863 : push qword ptr [rcx] ; shr bl, 0xa1 ; call 0x1082a7
0x0000000000060e75 : push qword ptr [rcx] ; shr cl, 0x99 ; retf
0x000000000008b801 : push qword ptr [rcx] ; shr cl, cl ; ret 0xfffe
0x000000000002c361 : push qword ptr [rcx] ; shr cl, cl ; retf 0xfffd
0x00000000000c489b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000c43c9 : push qword ptr [rdi + 0x34] ; ret
0x00000000000e8929 : push qword ptr [rdi + 0x3c] ; ret
0x00000000000c4479 : push qword ptr [rdi + 0x44] ; ret
0x000000000003525e : push qword ptr [rdi + 0x47] ; ret
0x00000000000ed7f3 : push qword ptr [rdi + 0x4a] ; ret
0x00000000000c40c6 : push qword ptr [rdi + 0x4f] ; ret
0x0000000000038f29 : push qword ptr [rdi + 0x54] ; ret
0x00000000000f7390 : push qword ptr [rdi + 0x55] ; ret
0x00000000000e80d6 : push qword ptr [rdi + 0x57] ; ret
0x00000000000c415c : push qword ptr [rdi + 0x59] ; ret
0x00000000000c427f : push qword ptr [rdi + 0x5e] ; ret
0x00000000000e66ac : push qword ptr [rdi + 0x61] ; ret
0x00000000000ee99c : push qword ptr [rdi + 0x69] ; ret
0x00000000000f7ec2 : push qword ptr [rdi + 0x6b] ; ret
0x00000000000f89fc : push qword ptr [rdi + 0x71] ; ret
0x00000000000f6e42 : push qword ptr [rdi + 0x73] ; ret
0x00000000000f722c : push qword ptr [rdi + 0x79] ; ret
0x00000000000f4423 : push qword ptr [rdi + 0xa] ; ret
0x00000000000351a2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000035211 : push qword ptr [rdi + 0xc] ; ret
0x00000000000e77ca : push qword ptr [rdi + 3] ; ret
0x00000000000e7ba9 : push qword ptr [rdi + 4] ; ret
0x00000000000e7818 : push qword ptr [rdi + 5] ; ret
0x000000000006af3f : push qword ptr [rdi + 6] ; ret
0x00000000000e7926 : push qword ptr [rdi + 7] ; ret
0x00000000000ed9c5 : push qword ptr [rdi + 8] ; ret
0x000000000006af0c : push qword ptr [rdi + 9] ; ret
0x00000000000bfea4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000179df7 : push qword ptr [rdi + rax*8] ; hlt ; call qword ptr [rcx]
0x0000000000179ce3 : push qword ptr [rdi + rax*8] ; hlt ; call qword ptr [rsi]
0x0000000000179b7b : push qword ptr [rdi - 0x16000bc2] ; cmp esi, esp ; jmp qword ptr [rdx]
0x0000000000104743 : push qword ptr [rdi - 0x32] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000189873 : push qword ptr [rdx + rax*2 - 0x4c8bffff] ; jmp qword ptr [rax]
0x0000000000188283 : push qword ptr [rdx + rax*8 - 0x5b5c0000] ; out dx, al ; call rax
0x00000000001883e3 : push qword ptr [rdx + rcx*8] ; add byte ptr [rdx + rdx*8 - 0x12], ah ; call rsp
0x0000000000186887 : push qword ptr [rdx - 0x7e] ; sti ; jmp rdx
0x0000000000186ae3 : push qword ptr [rsi + 0x46fffbb6] ; mov dh, 0xfb ; call rsi
0x00000000001860ef : push qword ptr [rsi + 0x71] ; std ; jmp rcx
0x00000000000e2f37 : push qword ptr [rsi + rbx*8 + 0x39] ; ret
0x000000000018c8a3 : push qword ptr [rsi + rcx*2 - 0x696bfffe] ; cli ; jmp rax
0x00000000000f9917 : push qword ptr [rsi + rsi - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000017a65f : push qword ptr [rsi - 0x6c] ; cmc ; jmp qword ptr [rax]
0x0000000000186047 : push qword ptr [rsi] ; std ; call rsi
0x000000000018b6fb : push qword ptr [rsp + 0x4d540001] ; clc ; call qword ptr [rax]
0x00000000001247d6 : push r12 ; mov eax, 1 ; ret
0x0000000000126e88 : push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000126e86 : push r14 ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007b53c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ef2d5 : push r8 ; sbb byte ptr [rax + 0x65], bh ; syscall
0x0000000000173f4c : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000011db05 : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000011d985 : push rax ; adc al, 0xf ; retf 0xd789
0x000000000011dafc : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000071dba : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000f2f32 : push rax ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000000de99 : push rax ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000007cb81 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000011d97a : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x000000000011c531 : push rax ; adc dh, dh ; ret 0x7401
0x0000000000080055 : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000116adf : push rax ; add al, 0xe9 ; ret 0xfffc
0x000000000009572d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018c8f5 : push rax ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x000000000018c8d5 : push rax ; add al, byte ptr [rax] ; xchg eax, esp ; lahf ; cli ; jmp qword ptr [rax]
0x000000000007b53d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000076458 : push rax ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x763f0
0x00000000000499d7 : push rax ; add dword ptr [rax + 0xf], ecx ; fucompp ; retf 0xffed
0x000000000007815c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000ca5d1 : push rax ; add dword ptr [rcx - 0x75], eax ; jl 0xca575 ; add byte ptr [rax + 0x39], cl ; retf 0x8841
0x00000000000ad3a6 : push rax ; add dword ptr [rcx], edi ; retf
0x0000000000101934 : push rax ; add eax, 0x83490000 ; ret
0x000000000008745e : push rax ; add ecx, ebp ; retf
0x00000000001a1ac8 : push rax ; add qword ptr [r8], rax ; and al, 0x5e ; cmc ; jmp qword ptr [rcx]
0x0000000000072aa9 : push rax ; and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x000000000012f811 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x000000000000b2e8 : push rax ; call qword ptr [rcx]
0x0000000000022908 : push rax ; call rbx
0x00000000000cf0ab : push rax ; cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xcf0a8 ; ret
0x000000000004bc40 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000006eed4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000178b23 : push rax ; cmp dl, dh ; inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x000000000010f486 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x10f499 ; ret
0x00000000001938c8 : push rax ; imul eax, dword ptr [rax], 0xedf23400 ; jmp rsp
0x000000000018e5f0 : push rax ; imul ecx ; call qword ptr [rbx]
0x00000000001970e0 : push rax ; in al, dx ; out dx, al ; call qword ptr [rax]
0x00000000001a3bc8 : push rax ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x0000000000199ba1 : push rax ; int1 ; jmp qword ptr [rcx]
0x0000000000194cc8 : push rax ; jge 0x194cd2 ; add byte ptr [rdx + rax*2], dh ; out dx, al ; jmp rdx
0x0000000000189fab : push rax ; jo 0x189fb8 ; add byte ptr [rbx + rcx*8 - 0xb], ah ; jmp qword ptr [rax]
0x0000000000074d69 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000018b1fb : push rax ; leave ; add dword ptr [rax], eax ; hlt ; retf 0xfff7
0x0000000000185ee3 : push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000173fba : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000178693 : push rax ; mov bh, 0xf0 ; jmp qword ptr [rax]
0x0000000000186c9c : push rax ; mov bh, 0xfb ; jmp rax
0x0000000000186ac4 : push rax ; mov bl, 0xfb ; jmp rax
0x0000000000186993 : push rax ; mov bl, bh ; push qword ptr [rax - 0x78] ; sti ; jmp rax
0x00000000001867d4 : push rax ; mov ebx, edi ; call rax
0x000000000012504f : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e0dc0 : push rax ; mov rcx, qword ptr [r15] ; call r12
0x00000000000287b2 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000026062 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000001028ab : push rax ; mov rsi, rdx ; call rax
0x000000000003586e : push rax ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000001867a4 : push rax ; nop ; sti ; jmp rax
0x000000000011d96f : push rax ; or al, 0xf ; retf 0xd189
0x00000000000d0266 : push rax ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x0000000000119c95 : push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000007dab2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000cd3a4 : push rax ; or byte ptr [rbp + 0x39], al ; ret 0x457f
0x00000000000d6f4c : push rax ; or byte ptr [rcx + 0x63], cl ; adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x000000000011d95f : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x000000000007dde5 : push rax ; or dh, dh ; ret 0x7502
0x000000000014fbec : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185f87 : push rax ; out dx, al ; cld ; jmp qword ptr [rax]
0x0000000000188881 : push rax ; out dx, eax ; call rsp
0x0000000000188891 : push rax ; out dx, eax ; jmp qword ptr [rax]
0x000000000018574e : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001a16d0 : push rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001863db : push rax ; pop rbp ; sti ; call rax
0x000000000011c62a : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c760 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045110 : push rax ; pop rbx ; ret
0x000000000019edf0 : push rax ; popfq ; hlt ; jmp qword ptr [rcx]
0x000000000017c8f7 : push rax ; push rbp ; cli ; inc eax ; push rsp ; cli ; call rax
0x000000000019cee0 : push rax ; push rsi ; jmp rbx
0x000000000018c9e3 : push rax ; push rsp ; add al, byte ptr [rax] ; xchg eax, esp ; mov dh, 0xfa ; jmp qword ptr [rax]
0x000000000000a040 : push rax ; ret
0x0000000000055739 : push rax ; ret 0xf41
0x0000000000179bef : push rax ; ret 0xfff4
0x000000000018b0a4 : push rax ; ret 1
0x000000000000a0d0 : push rax ; retf
0x00000000001a9d30 : push rax ; retf 0xfff7
0x000000000007f52c : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x00000000000ef2d6 : push rax ; sbb byte ptr [rax + 0x65], bh ; syscall
0x000000000007cb76 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072389 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000011d990 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x0000000000103945 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000186541 : push rax ; sti ; call qword ptr [rax - 0x1f0004af]
0x0000000000186320 : push rax ; sti ; jmp qword ptr [rax]
0x000000000017899f : push rax ; sub dh, dl ; inc dword ptr [rax] ; sub esi, edx ; jmp qword ptr [rax]
0x000000000017895f : push rax ; sub edx, esi ; inc dword ptr [rax] ; sub dh, dl ; call qword ptr [rax]
0x0000000000186f08 : push rax ; test al, 0xfb ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rax]
0x00000000001869f8 : push rax ; test bl, bh ; call rax
0x0000000000186efb : push rax ; test eax, 0xa970fffb ; sti ; jmp rax
0x00000000001869f0 : push rax ; test ebx, edi ; call rax
0x00000000001869e8 : push rax ; xchg bl, bh ; call rax
0x00000000001869e0 : push rax ; xchg ebx, edi ; call rax
0x00000000001862db : push rax ; xor al, 0xfb ; call rax
0x0000000000186230 : push rax ; xor bl, bh ; call qword ptr [rax]
0x00000000001862f3 : push rax ; xor bl, bh ; call rax
0x00000000000eb92f : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000173f4d : push rax ; xor byte ptr [rcx], ah ; retf
0x0000000000178a07 : push rax ; xor dh, dl ; call qword ptr [rax]
0x0000000000186253 : push rax ; xor ebx, edi ; call rax
0x0000000000186237 : push rax ; xor edi, ebx ; call rax
0x00000000001789e7 : push rax ; xor edx, esi ; call qword ptr [rax]
0x0000000000178a27 : push rax ; xor esi, edx ; call qword ptr [rax]
0x00000000000ed195 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000112e87 : push rbp ; adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129081 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000007611a : push rbp ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x760c2
0x000000000011eab0 : push rbp ; add byte ptr [rdi], cl ; retf 0x1089
0x0000000000112faa : push rbp ; add dh, dh ; ret
0x0000000000112e6c : push rbp ; add dh, dh ; ret 0x7507
0x000000000012907c : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x1290e0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012918c : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x1291f0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000019de46 : push rbp ; add dword ptr [rdi], 2 ; ret
0x000000000017c8f9 : push rbp ; cli ; inc eax ; push rsp ; cli ; call rax
0x0000000000189e01 : push rbp ; cmc ; jmp qword ptr [rax]
0x00000000000574fd : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000011fd29 : push rbp ; dec byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000199c91 : push rbp ; int1 ; call qword ptr [rsi]
0x0000000000001ccd : push rbp ; je 0x1cfb ; ret
0x0000000000003bb2 : push rbp ; jg 0x3c21 ; xchg eax, ebp ; retf 0x10bf
0x0000000000003bb1 : push rbp ; jg 0x3c22 ; xchg eax, ebp ; retf 0x10bf
0x00000000001a3a15 : push rbp ; jmp qword ptr [rbx]
0x00000000001a3a01 : push rbp ; jmp qword ptr [rsi]
0x0000000000126e89 : push rbp ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000add09 : push rbp ; mov al, 0xe9 ; retf 0xfff5
0x000000000008c02f : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008c1c9 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x000000000008a8b2 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000012cf93 : push rbp ; mov byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000000c50f4 : push rbp ; mov eax, 0x83485874 ; ret 0xc610
0x0000000000103125 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000154678 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000103309 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000bfdbd : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000001a15e4 : push rbp ; push rdi ; cmc ; call qword ptr [rcx]
0x000000000007ec77 : push rbp ; push rdx ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x00000000000f7392 : push rbp ; ret
0x0000000000124630 : push rbp ; ret 5
0x0000000000002729 : push rbp ; retf
0x00000000000343c7 : push rbp ; sbb dl, byte ptr [rip + 0x7e0f6600] ; ret 0xd089
0x0000000000002656 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x25f2 ; loop 0x263e ; ret 0x943d
0x0000000000104840 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000cd705 : push rbx ; adc byte ptr [rax + 0x39], cl ; retf 0x574
0x0000000000073526 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000011d8f8 : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000e6a26 : push rbx ; add al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x000000000018c9a5 : push rbx ; add al, byte ptr [rax] ; xchg eax, esp ; scasb al, byte ptr [rdi] ; cli ; call rsp
0x00000000000c5d2a : push rbx ; add byte ptr [r13 - 0x36], sil ; jmp 0xc5ce0
0x00000000000c8e85 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000111a49 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000000b3371 : push rbx ; add dword ptr [rbx + 0x48], ebx ; mov eax, edx ; ret
0x00000000000c8eb2 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000107ff2 : push rbx ; and byte ptr [rcx], ch ; retf 0x37e9
0x0000000000076d22 : push rbx ; and byte ptr [rcx], ch ; retf 0x40e9
0x000000000011daf7 : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000078c28 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000078b16 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x4b74
0x000000000000209b : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000015dfc5 : push rbx ; jb 0x15dfd5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c5cd8 : push rbx ; jne 0xc5cff ; xor eax, eax ; ret
0x00000000000c5cd7 : push rbx ; jne 0xc5d00 ; xor eax, eax ; ret
0x00000000000b258c : push rbx ; lea rax, [rdi - 0x10] ; ret
0x00000000000bfdbe : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000009c542 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000078c24 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000108a65 : push rbx ; or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x00000000000cfd9c : push rbx ; or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000076032 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000003e3c : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000019800d : push rbx ; out dx, eax ; call qword ptr [rbx]
0x0000000000033ccc : push rbx ; ret
0x00000000000b4871 : push rbx ; retf 0xfff6
0x000000000005bf2d : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000011daea : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000101009 : push rbx ; sbb dh, dh ; ret 0x7508
0x000000000018bd61 : push rbx ; stc ; call rsp
0x00000000000d1fd9 : push rbx ; sub al, 0x89 ; ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x00000000000cea15 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000011db00 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000002d64 : push rbx ; xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000017597c : push rbx ; xchg eax, edx ; jae 0x17595b ; push rsi ; pop rdx ; je 0x175950 ; ret 0xacfc
0x000000000011db08 : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000ea089 : push rbx ; xor dh, dh ; ret 0xf01
0x000000000000af89 : push rcx ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000ad9c9 : push rcx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008aec4 : push rcx ; add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; ret 0x14d
0x000000000008cc95 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000174c05 : push rcx ; call qword ptr [rsi]
0x000000000007e35c : push rcx ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000019e059 : push rcx ; hlt ; call rsp
0x000000000015d7bd : push rcx ; jl 0x15d80e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000015d924 : push rcx ; jl 0x15d975 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000086208 : push rcx ; js 0x86205 ; ret 0
0x000000000014a1f6 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000011f8e9 : push rcx ; or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x00000000000f3407 : push rcx ; or dh, dh ; ret 0x7401
0x0000000000080ce0 : push rcx ; or dh, dh ; ret 0xf04
0x00000000000ea3fb : push rcx ; outsb dx, byte ptr [rsi] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000081fa8 : push rcx ; ret
0x000000000010c40a : push rcx ; ret 0x2a
0x00000000000e7c13 : push rcx ; ret 0x2c
0x000000000011c97b : push rcx ; retf
0x000000000011f84a : push rcx ; sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x000000000007edbd : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000004ec0b : push rcx ; sbb esi, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000186545 : push rcx ; sti ; jmp rax
0x000000000004b720 : push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009f5d2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009d9a2 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x0000000000030427 : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000008406c : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5974
0x000000000009f730 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000f2e0a : push rdi ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000b3df2 : push rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000030418 : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000017a1f3 : push rdi ; adc esi, ebp ; jmp qword ptr [rdi]
0x000000000017a1ef : push rdi ; adc esi, ebp ; push rdi ; adc esi, ebp ; jmp qword ptr [rdi]
0x000000000009f408 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009f41a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009c9aa : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000009d7ea : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000013f339 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000075fa5 : push rdi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75f4b
0x000000000009f3da : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ca5c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009d8ac : push rdi ; add eax, 0xd478d48 ; ret
0x000000000009f438 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000004b3a9 : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000139138 : push rdi ; clc ; ret
0x00000000001392b0 : push rdi ; cld ; ret
0x0000000000139dd7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001a15d1 : push rdi ; cmc ; call qword ptr [rax]
0x00000000001a15e5 : push rdi ; cmc ; call qword ptr [rcx]
0x0000000000189e29 : push rdi ; cmc ; call rsp
0x00000000001a160d : push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000013ec19 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000006e6a5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000872b5 : push rdi ; cmp cl, byte ptr [rax + rax] ; cmovne rax, rdx ; ret
0x00000000000da31b : push rdi ; cmp dh, dh ; ret 0x7408
0x00000000000c4848 : push rdi ; cmp eax, 0xfffff001 ; jae 0xc4859 ; ret
0x0000000000160faa : push rdi ; dec dword ptr [rax + 0x21] ; ret 0x7be9
0x0000000000160a4c : push rdi ; dec dword ptr [rax + 0x21] ; ret 0x8948
0x000000000013eb99 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013e9ea : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000186190 : push rdi ; jae 0x186193 ; jmp rcx
0x000000000007b464 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013ea7a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000112f5b : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000030409 : push rdi ; or al, 0xf ; retf 0xd289
0x0000000000084070 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5974
0x000000000009f47c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009f4ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009f45a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b1e15 : push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x0000000000046dda : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004565a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000045661 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000078160 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000303ff : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000009cc40 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000009daa0 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000004c017 : push rdi ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000e80d8 : push rdi ; ret
0x00000000000d398b : push rdi ; ret 0
0x000000000015c4ae : push rdi ; ret 0xff3
0x0000000000159f75 : push rdi ; ret 0xfffa
0x00000000000245b5 : push rdi ; retf
0x000000000015c053 : push rdi ; retf 0xcab2
0x000000000007db40 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000004b3ad : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000fe62b : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000012a433 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000003043e : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000018bd91 : push rdi ; stc ; jmp qword ptr [rax]
0x0000000000139fd7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001397fa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000186491 : push rdi ; sti ; inc dword ptr [rax + 0x59] ; sti ; jmp qword ptr [rax]
0x00000000001864b1 : push rdi ; sti ; inc dword ptr [rax] ; pop rcx ; sti ; jmp rax
0x0000000000139bd7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012a344 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000012a392 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000012a3c2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000007d0bb : push rdi ; sub cl, ch ; retf 0xfffe
0x00000000000f3a1c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001040f1 : push rdi ; sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009f710 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000095f0b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000906b8 : push rdi ; xor eax, eax ; ret
0x0000000000006351 : push rdx ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000189b6d : push rdx ; add dword ptr [rax], eax ; je 0x189bde ; hlt ; call rsp
0x0000000000089ef4 : push rdx ; add eax, 0x4eb60f44 ; add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x0000000000030423 : push rdx ; cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000008d4aa : push rdx ; cmp edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x000000000008730a : push rdx ; js 0x87307 ; ret 0
0x000000000008735a : push rdx ; js 0x87357 ; ret 0
0x00000000000873aa : push rdx ; js 0x873a7 ; ret 0
0x00000000000873fa : push rdx ; js 0x873f7 ; ret 0
0x000000000011bd79 : push rdx ; lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; retf 0x29d1
0x0000000000186b70 : push rdx ; mov ch, 0xfb ; jmp rdx
0x00000000000872e6 : push rdx ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000855d6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000030405 : push rdx ; sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x0000000000030414 : push rdx ; xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000007ec78 : push rdx ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x000000000015b0f4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015de09 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x15de60 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000088093 : push rsi ; add cl, byte ptr [rax + 0x39] ; clc ; jne 0x88088 ; ret
0x000000000013f5d1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000189c05 : push rsi ; add dword ptr [rax], eax ; adc al, 0x7d ; hlt ; jmp rsp
0x00000000000ef74b : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000013f641 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000009b415 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000013f561 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009b3b3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000010172f : push rsi ; add edi, dword ptr [rcx] ; ret 0x830f
0x00000000000c56ac : push rsi ; add rsp, 0x38 ; ret
0x000000000015b109 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000139262 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001399d1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139605 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001397e5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001399c5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139425 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000176520 : push rsi ; cli ; push 0x6e ; ja 0x1764af ; ret 0x48f
0x00000000001a1505 : push rsi ; cmc ; call qword ptr [rax]
0x00000000001a1561 : push rsi ; cmc ; jmp qword ptr [rcx]
0x000000000015fbf6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000006ef4b : push rsi ; cmp byte ptr [rax + 1], cl ; ret
0x000000000015fbe6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000007d746 : push rsi ; imul esi, dword ptr [rbx], 0 ; ret
0x000000000015fbb6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000019cee1 : push rsi ; jmp rbx
0x00000000000da35a : push rsi ; ljmp [rcx] ; ret 0x6348
0x0000000000056f9e : push rsi ; or al, 0x83 ; ret
0x0000000000055603 : push rsi ; or al, 0xf6 ; ret 0xf01
0x0000000000056f2b : push rsi ; or al, 0xf6 ; ret 0xf08
0x000000000005585d : push rsi ; or al, 0xf6 ; ret 0xf40
0x00000000000f35bd : push rsi ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000000b1e12 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x0000000000087126 : push rsi ; or eax, 0x450f4800 ; ret 0x90c3
0x0000000000195055 : push rsi ; out dx, al ; jmp qword ptr [rsi]
0x0000000000175980 : push rsi ; pop rdx ; je 0x17594c ; ret 0xacfc
0x0000000000126e87 : push rsi ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000003427f : push rsi ; ret
0x0000000000056cfb : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000000ffd6e : push rsi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000011f6d1 : push rsi ; sbb byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x00000000000cf225 : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x000000000018bd89 : push rsi ; stc ; call rax
0x00000000000e1dce : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000010429e : push rsi ; sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x104289 ; ret
0x000000000015fbc6 : push rsi ; sub eax, edx ; ret
0x0000000000101bdb : push rsi ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000173f48 : push rsi ; xchg eax, ebp ; jge 0x173f2d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000001865d4 : push rsi ; xchg eax, edx ; sti ; jmp rsi
0x00000000000ec497 : push rsi ; xor ax, ax ; ret
0x000000000015b11e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000683f5 : push rsp ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a3bcc : push rsp ; adc ecx, edi ; jmp qword ptr [rbx]
0x000000000018c9bd : push rsp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 0xfa ; jmp qword ptr [rax]
0x000000000018c9e5 : push rsp ; add al, byte ptr [rax] ; xchg eax, esp ; mov dh, 0xfa ; jmp qword ptr [rax]
0x00000000000ed7e4 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000ed6a1 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000001a16cc : push rsp ; add dword ptr [r8], r8d ; push rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001a2435 : push rsp ; add dword ptr [rax], eax ; jne 0x1a2436 ; call qword ptr [rdx]
0x00000000001139ea : push rsp ; add esi, edi ; mov eax, r8d ; ret
0x000000000012c71a : push rsp ; and al, 0x10 ; call 0xe8995
0x000000000013285a : push rsp ; and al, 0x10 ; call rdx
0x00000000000ff075 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rcx
0x00000000000fef64 : push rsp ; and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000008cfb4 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008cf32 : push rsp ; and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x0000000000086a16 : push rsp ; and al, 0x18 ; jmp 0x869e2
0x000000000011cdc5 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000103305 : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000080626 : push rsp ; and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000011c36a : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000369c4 : push rsp ; and al, 0x20 ; call rax
0x00000000001221f2 : push rsp ; and al, 0x20 ; call rdx
0x00000000000ed477 : push rsp ; and al, 0x30 ; mov eax, 0x10 ; syscall
0x0000000000103280 : push rsp ; and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000008cf93 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x000000000008d166 : push rsp ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000003460d : push rsp ; and al, 0xe0 ; movdqa xmm0, xmmword ptr [rsp - 0x28] ; ret
0x000000000008d145 : push rsp ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x000000000008cf7b : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x000000000018ade0 : push rsp ; and al, 0xf7 ; call rax
0x0000000000046fa0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000008cf5d : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000046f5a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e7d40 : push rsp ; and al, 8 ; call 0x103fc5
0x0000000000113e92 : push rsp ; and al, 8 ; jne 0x113ed2 ; add rsp, 0x38 ; ret
0x000000000004989a : push rsp ; and al, 8 ; mov dword ptr [rsp], r9d ; call 0x45b19
0x00000000000f6d17 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000080428 : push rsp ; and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000018b700 : push rsp ; clc ; call qword ptr [rax]
0x00000000001ac1c5 : push rsp ; clc ; call qword ptr [rbx]
0x000000000017c8fd : push rsp ; cli ; call rax
0x000000000018af00 : push rsp ; cmp al, 0xf7 ; jmp qword ptr [rax]
0x00000000001a09cc : push rsp ; cmp al, byte ptr [rcx] ; add al, dl ; adc esi, ebp ; jmp qword ptr [rcx]
0x000000000018aee0 : push rsp ; cmp dh, bh ; call rax
0x00000000001a13bc : push rsp ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000018693b : push rsp ; cmp ebx, -1 ; je 0x1868cd ; sti ; jmp rsp
0x0000000000188683 : push rsp ; fld dword ptr [rax] ; add byte ptr [rsi + rdx], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001890b0 : push rsp ; int1 ; jmp rax
0x000000000018c228 : push rsp ; int1 ; stc ; call qword ptr [rax]
0x0000000000090beb : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000018b368 : push rsp ; loope 0x18b365 ; call rax
0x0000000000186c38 : push rsp ; mov ah, 0xfb ; jmp rsp
0x000000000018a6c8 : push rsp ; mov dh, dh ; call qword ptr [rax]
0x0000000000189520 : push rsp ; mov dl, 0xf2 ; call qword ptr [rax]
0x00000000001247d7 : push rsp ; mov eax, 1 ; ret
0x000000000018a54b : push rsp ; mov word ptr [rcx], es ; add ah, ah ; je 0x18a551 ; call qword ptr [rax]
0x0000000000154379 : push rsp ; or eax, 0x894d0000 ; retf
0x00000000001887b0 : push rsp ; out dx, eax ; call rax
0x000000000018be30 : push rsp ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000001888d8 : push rsp ; pop rbx ; out dx, eax ; call qword ptr [rax]
0x00000000000ebec2 : push rsp ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c5cd6 : push rsp ; push rbx ; jne 0xc5d01 ; xor eax, eax ; ret
0x00000000000c5cd5 : push rsp ; push rbx ; jne 0xc5d02 ; xor eax, eax ; ret
0x000000000018bd60 : push rsp ; push rbx ; stc ; call rsp
0x00000000001a160c : push rsp ; push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000018bd88 : push rsp ; push rsi ; stc ; call rax
0x0000000000031235 : push rsp ; ret
0x00000000001991cc : push rsp ; ret 0
0x00000000000fa094 : push rsp ; ret 0x8940
0x00000000001a91cc : push rsp ; ret 1
0x000000000018b210 : push rsp ; retf
0x00000000001883f3 : push rsp ; retf 0
0x00000000000454e0 : push rsp ; retf 0x48f8
0x00000000000fa809 : push rsp ; retf 0x8b40
0x00000000000f225b : push rsp ; retf 0xf021
0x000000000018b9a0 : push rsp ; retf 0xfff8
0x000000000018b224 : push rsp ; retf 1
0x0000000000189918 : push rsp ; sal ebx, 1 ; call qword ptr [rax]
0x0000000000187e70 : push rsp ; shr esp, 0xff ; mov al, 0xa7 ; add byte ptr [rax], al ; ret 0xffec
0x00000000000f1f0a : push rsp ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000f1eab : push rsp ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017614a : push rsp ; syscall
0x000000000018c7f0 : push rsp ; test dl, bh ; jmp rax
0x000000000018a690 : push rsp ; test esi, esi ; jmp qword ptr [rax]
0x000000000019e67c : push rsp ; test esp, esi ; call qword ptr [rax]
0x00000000000d6725 : push rsp ; xchg eax, ebp ; add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x00000000001962cc : push rsp ; xchg eax, ebx ; add byte ptr [rax], al ; mov al, 0xb9 ; out dx, al ; call qword ptr [rdx]
0x00000000000835d4 : push rsp ; xor esi, dword ptr [rbx] ; add dh, dh ; ret 0xf02
0x0000000000151b10 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018be4c : pushfq ; adc eax, dword ptr [rdx] ; add byte ptr [rdi + rbp*2 - 7], dh ; call rsp
0x000000000008b728 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000187c55 : pushfq ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fucomp st(3) ; jmp qword ptr [rax]
0x0000000000021eb4 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000024e1a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000f9660 : pushfq ; fisubr word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000019ed59 : pushfq ; hlt ; jmp qword ptr [rcx]
0x00000000001a3b14 : pushfq ; imul eax, dword ptr [rcx], 0 ; pop rax ; add esi, esi ; jmp qword ptr [rbx]
0x0000000000087220 : pushfq ; insb byte ptr [rdi], dx ; or eax, 0x450f4800 ; ret 0xfc3
0x0000000000178f30 : pushfq ; jne 0x178f27 ; call rcx
0x0000000000178f30 : pushfq ; jne 0x178f28 ; call rcx
0x0000000000101a05 : pushfq ; jrcxz 0x101a15 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000152810 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001507c4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000001a19b4 : pushfq ; pop rsp ; cmc ; jmp qword ptr [rcx]
0x00000000000e4f28 : pushfq ; ret
0x0000000000192d24 : pushfq ; retf
0x000000000011cb80 : pushfq ; retf 0
0x00000000001a62c4 : pushfq ; retf 0xfff6
0x0000000000087473 : pushfq ; stc ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cfdfd : pxor mm0, mm0 ; xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000cfdfc : pxor xmm0, xmm0 ; xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000944ad : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001867a0 : rcl byte ptr [rax - 0x6faf0005], 0xfb ; jmp rax
0x0000000000002d63 : rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x00000000001a09d0 : rcl byte ptr [rbx], 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000187a8c : rcl byte ptr [rcx + 0x1d940000], 0xeb ; call rsp
0x000000000018cb24 : rcl byte ptr [rcx], 1 ; add byte ptr [rsp + rbx*2 - 5], ah ; call rsp
0x0000000000178878 : rcl byte ptr [rdi - 0x662f000f], 0xf1 ; jmp rax
0x0000000000176291 : rcl byte ptr [rdi], cl ; retf
0x000000000017c8fc : rcl byte ptr [rdx + rdi*8 - 1], 0xd0 ; jnp 0x17c904 ; call rax
0x0000000000001ecb : rcl byte ptr [rip + 0x42585c0c], 1 ; xchg eax, edi ; retf 0x20f4
0x000000000018cdb4 : rcl byte ptr [rip + 0x78c40001], 1 ; std ; jmp rsp
0x0000000000198a80 : rcl byte ptr [rsp + rdi*8], 1 ; call qword ptr [rdx]
0x00000000001885bc : rcl ch, 0 ; add byte ptr [rax + rcx], dl ; out dx, eax ; jmp rax
0x00000000000b6cf6 : rcl cl, 1 ; call 0xffffffffeacd2f02
0x00000000001787c8 : rcl dl, 0xfb ; jmp rax
0x00000000000235ce : rcl dword ptr [rax + 0x48df8948], 0x83 ; ret
0x00000000000f8633 : rcl dword ptr [rdx], 0x2c ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x0000000000175dba : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x000000000017597f : rcl dword ptr [rsi + 0x5a], cl ; je 0x17594d ; ret 0xacfc
0x00000000000f8233 : rcl dword ptr [rsi], 0x2c ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x0000000000175db9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000017597b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x175951 ; ret 0xacfc
0x0000000000033c21 : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000002d67 : rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000001450ed : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008330f : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000322a0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c115c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006fe21 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000000532bf : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000045667 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000082a21 : rcr byte ptr [rbx + 0x48], cl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000032636 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000023b5f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000b2e76 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000037a3f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d6de : rcr byte ptr [rbx + 0x5d], 0xe9 ; retf 0xc5
0x00000000000c121c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006feca : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000550cc : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000006d6f2 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006fa57 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; jmp rax
0x00000000000cd6c5 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; ret
0x000000000018639c : rcr byte ptr [rbx + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000093dbd : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000196948 : rcr byte ptr [rcx - 0x26dc0000], 1 ; out dx, al ; call qword ptr [rdx]
0x0000000000186354 : rcr byte ptr [rcx], 0xfb ; call qword ptr [rax]
0x000000000018bf4c : rcr byte ptr [rcx], 2 ; add byte ptr [rsi + rcx*4 - 7], ah ; call qword ptr [rax]
0x0000000000175d9d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001863e0 : rcr byte ptr [rdi - 5], 1 ; call rax
0x00000000000ef529 : rcr byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000187c1c : rcr byte ptr [rdx - 0x2e7c0000], 0xeb ; call qword ptr [rax]
0x0000000000002d68 : rcr byte ptr [rdx], 1 ; retf 0x2217
0x000000000018b55c : rcr cl, 1 ; add dword ptr [rax], eax ; hlt ; or al, bh ; jmp rsp
0x0000000000045699 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001760f1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000005356b : rcr dword ptr [rdi], 0x13 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x78e8
0x000000000009ff94 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000009ff86 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000131784 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000a036a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000113a2f : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000081793 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003581a : rep stosq qword ptr [rdi], rax ; ret
0x00000000000008aa : ret
0x0000000000007288 : ret 0
0x0000000000009a98 : ret 0x10
0x0000000000128f37 : ret 0x101
0x00000000000007bf : ret 0x102
0x000000000007fbba : ret 0x102a
0x00000000000395fa : ret 0x10e8
0x0000000000006951 : ret 0x11
0x000000000004563c : ret 0x114d
0x00000000000247f7 : ret 0x1175
0x000000000002a484 : ret 0x1176
0x000000000005aeba : ret 0x11c5
0x000000000004b7f7 : ret 0x11e9
0x000000000004a6ba : ret 0x12c4
0x0000000000096a6a : ret 0x13
0x0000000000049ea9 : ret 0x1335
0x00000000000f0b23 : ret 0x1374
0x0000000000044cb3 : ret 0x1385
0x000000000003105c : ret 0x14
0x00000000000ba995 : ret 0x144
0x00000000001647d1 : ret 0x145
0x0000000000077d76 : ret 0x1476
0x0000000000090c29 : ret 0x147c
0x000000000003646f : ret 0x148
0x00000000000463f2 : ret 0x149
0x000000000003b276 : ret 0x14ab
0x0000000000028498 : ret 0x14c
0x00000000000878e0 : ret 0x14d
0x000000000002497c : ret 0x15
0x000000000002662e : ret 0x1569
0x00000000000a2cb7 : ret 0x1572
0x00000000000cd3c8 : ret 0x1574
0x0000000000117146 : ret 0x1575
0x00000000000def41 : ret 0x1589
0x00000000000f4b46 : ret 0x1675
0x0000000000024c9a : ret 0x1689
0x0000000000059e7a : ret 0x16e
0x00000000000c641e : ret 0x16e9
0x000000000008ec2a : ret 0x17
0x00000000001556f6 : ret 0x1776
0x000000000002937d : ret 0x17e9
0x00000000000ed5fd : ret 0x180
0x000000000015dab9 : ret 0x180f
0x0000000000037e4b : ret 0x1874
0x0000000000090725 : ret 0x1876
0x000000000006aad6 : ret 0x187d
0x000000000008718a : ret 0x18d
0x000000000000db60 : ret 0x19
0x00000000000bceb7 : ret 0x190
0x0000000000024b70 : ret 0x1945
0x000000000011715b : ret 0x1974
0x0000000000077a6a : ret 0x1976
0x000000000002a47b : ret 0x1a72
0x00000000001762fa : ret 0x1ad4
0x00000000000e4a49 : ret 0x1ae9
0x0000000000174a8d : ret 0x1b49
0x00000000000c5e41 : ret 0x1b8
0x00000000001153f9 : ret 0x1b9
0x0000000000001c01 : ret 0x1bb7
0x00000000000b5195 : ret 0x1be
0x00000000000824df : ret 0x1bf
0x00000000000035a7 : ret 0x1bf9
0x00000000000dba0b : ret 0x1c74
0x00000000000ede61 : ret 0x1c77
0x000000000016ff30 : ret 0x1d4
0x00000000001706c8 : ret 0x1d5
0x00000000000b31e1 : ret 0x1db
0x000000000000222d : ret 0x1dd4
0x000000000011db3d : ret 0x1de8
0x00000000000399c9 : ret 0x1de9
0x0000000000115b8f : ret 0x1e74
0x0000000000009390 : ret 0x1f
0x000000000002a627 : ret 0x1f0f
0x0000000000112efe : ret 0x1f72
0x0000000000163ad7 : ret 0x1f77
0x000000000002bf7d : ret 0x1fe9
0x000000000002d727 : ret 0x200
0x00000000000e8e3c : ret 0x2044
0x000000000016109a : ret 0x2045
0x00000000000d341b : ret 0x2073
0x000000000009df0d : ret 0x2074
0x00000000000bb555 : ret 0x20be
0x0000000000042d6a : ret 0x20e8
0x0000000000033e28 : ret 0x2148
0x0000000000045d44 : ret 0x2173
0x00000000000d6569 : ret 0x2174
0x0000000000078c2c : ret 0x2175
0x000000000003b4eb : ret 0x2275
0x000000000009aef8 : ret 0x2288
0x000000000011713f : ret 0x233c
0x000000000015c612 : ret 0x2373
0x00000000000839a3 : ret 0x2374
0x0000000000035b82 : ret 0x237f
0x000000000016ef38 : ret 0x24
0x0000000000002854 : ret 0x244f
0x0000000000079cd9 : ret 0x2475
0x00000000000de871 : ret 0x2477
0x000000000005ce9a : ret 0x25
0x000000000007ad23 : ret 0x2501
0x000000000010fb60 : ret 0x2674
0x0000000000054c8a : ret 0x268
0x00000000000d17e4 : ret 0x26e8
0x00000000000963b6 : ret 0x2774
0x0000000000082b55 : ret 0x2775
0x00000000000531e3 : ret 0x27e9
0x0000000000127c38 : ret 0x28
0x0000000000096c05 : ret 0x280f
0x0000000000134d22 : ret 0x284b
0x0000000000090715 : ret 0x2876
0x00000000000ab667 : ret 0x28b
0x00000000000b9144 : ret 0x28f5
0x000000000007ec3a : ret 0x29
0x0000000000034a3a : ret 0x290f
0x00000000000b6c4d : ret 0x2941
0x000000000004e06d : ret 0x2944
0x00000000000dd850 : ret 0x2945
0x000000000003c072 : ret 0x2948
0x000000000012ded7 : ret 0x2949
0x0000000000039ed0 : ret 0x294c
0x000000000004a45e : ret 0x294d
0x000000000008c64d : ret 0x2975
0x00000000000e7674 : ret 0x2977
0x00000000001193ba : ret 0x29fa
0x000000000005912a : ret 0x2a
0x0000000000117422 : ret 0x2a24
0x000000000011108a : ret 0x2a2d
0x0000000000001b19 : ret 0x2a63
0x000000000010cd3a : ret 0x2a70
0x0000000000110f53 : ret 0x2a74
0x00000000000f7b77 : ret 0x2b
0x000000000010393a : ret 0x2b04
0x0000000000107031 : ret 0x2b28
0x0000000000024332 : ret 0x2b48
0x00000000001017ab : ret 0x2b49
0x0000000000103e22 : ret 0x2b5a
0x0000000000103b22 : ret 0x2b5d
0x00000000000817d2 : ret 0x2b75
0x00000000000a0492 : ret 0x2b77
0x000000000011f52d : ret 0x2b8
0x00000000000fd72a : ret 0x2ba1
0x00000000000f846a : ret 0x2bef
0x0000000000163ca5 : ret 0x2bf
0x00000000000e7b74 : ret 0x2c
0x0000000000117154 : ret 0x2c3c
0x000000000010d3ed : ret 0x2c6
0x00000000000f07e2 : ret 0x2c69
0x000000000006aa52 : ret 0x2ce9
0x0000000000112ef0 : ret 0x2d72
0x000000000008cd08 : ret 0x2d74
0x00000000000e0fa6 : ret 0x2d89
0x00000000000de2b4 : ret 0x2de9
0x0000000000006cf0 : ret 0x2e
0x000000000010d385 : ret 0x2e66
0x000000000008407f : ret 0x2e74
0x00000000000c1a6a : ret 0x2f53
0x0000000000115a2e : ret 0x2f74
0x00000000000b4fb2 : ret 0x301c
0x0000000000038718 : ret 0x3039
0x0000000000001b8c : ret 0x306a
0x0000000000127155 : ret 0x307f
0x00000000000d4662 : ret 0x30f
0x0000000000043922 : ret 0x3145
0x000000000011f7f0 : ret 0x3148
0x000000000011f7cf : ret 0x3149
0x000000000011f6d8 : ret 0x314d
0x000000000003fd3e : ret 0x3175
0x00000000000f889e : ret 0x31c3
0x0000000000084d0a : ret 0x32f2
0x0000000000077c5c : ret 0x33
0x0000000000086522 : ret 0x3304
0x00000000000864da : ret 0x3333
0x000000000007b89a : ret 0x334e
0x000000000007ddda : ret 0x336e
0x00000000000e7912 : ret 0x3375
0x0000000000026228 : ret 0x3389
0x000000000007cede : ret 0x3399
0x00000000000e96a1 : ret 0x33eb
0x0000000000067c04 : ret 0x34
0x0000000000090c09 : ret 0x347c
0x0000000000061e37 : ret 0x348
0x000000000004da96 : ret 0x349
0x000000000006d731 : ret 0x34c1
0x0000000000060da2 : ret 0x3530
0x00000000000e78b0 : ret 0x3575
0x0000000000107e40 : ret 0x3576
0x000000000004d68b : ret 0x36
0x0000000000053231 : ret 0x3666
0x0000000000082672 : ret 0x36e9
0x0000000000038497 : ret 0x37
0x0000000000164b76 : ret 0x3775
0x00000000001556d6 : ret 0x3776
0x0000000000035cd4 : ret 0x3777
0x00000000000ac91c : ret 0x3789
0x00000000000399a2 : ret 0x37a4
0x000000000002d5bb : ret 0x38
0x000000000003aaba : ret 0x3801
0x0000000000175bda : ret 0x3827
0x000000000002f85a : ret 0x3845
0x000000000002f49a : ret 0x3865
0x000000000002f252 : ret 0x3869
0x000000000002ed52 : ret 0x386e
0x000000000006e8fe : ret 0x3873
0x00000000000efd34 : ret 0x3875
0x0000000000090705 : ret 0x3876
0x000000000007b80b : ret 0x389
0x0000000000174266 : ret 0x38ae
0x000000000006e426 : ret 0x38b
0x0000000000066539 : ret 0x3901
0x0000000000112515 : ret 0x3904
0x0000000000024156 : ret 0x3918
0x00000000000219da : ret 0x3927
0x00000000000210c2 : ret 0x392f
0x000000000004a82c : ret 0x3941
0x00000000000cd506 : ret 0x3944
0x0000000000100a1a : ret 0x3945
0x0000000000027a5a : ret 0x3948
0x000000000002571e : ret 0x3949
0x00000000000a4776 : ret 0x394c
0x00000000000334ed : ret 0x394d
0x00000000000efe0b : ret 0x3975
0x00000000000de21f : ret 0x3980
0x0000000000108001 : ret 0x39e9
0x000000000009f942 : ret 0x3a01
0x000000000015c5fb : ret 0x3a73
0x0000000000131cc3 : ret 0x3a83
0x0000000000048a9f : ret 0x3ae9
0x000000000010022d : ret 0x3b01
0x0000000000114c19 : ret 0x3b44
0x00000000000a0121 : ret 0x3b48
0x00000000000e893f : ret 0x3b8
0x000000000002899f : ret 0x3b89
0x000000000005d622 : ret 0x3c
0x000000000009de81 : ret 0x3c75
0x00000000000260ff : ret 0x3ce9
0x0000000000046568 : ret 0x3d74
0x00000000000efc57 : ret 0x3d75
0x000000000010f87f : ret 0x3d79
0x0000000000023927 : ret 0x3d83
0x0000000000044326 : ret 0x3dbe
0x0000000000006eb8 : ret 0x3f
0x000000000006e0fa : ret 0x3f75
0x000000000000fe88 : ret 0x40
0x0000000000026b0f : ret 0x4001
0x000000000002c2b7 : ret 0x4002
0x00000000000d3871 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x000000000003272d : ret 0x4074
0x00000000000a21c1 : ret 0x408d
0x00000000000893aa : ret 0x40e9
0x000000000002c521 : ret 0x4101
0x00000000000cfdc7 : ret 0x4104
0x000000000004e86e : ret 0x4108
0x000000000004e272 : ret 0x4110
0x000000000008cc47 : ret 0x4153
0x0000000000081952 : ret 0x4173
0x0000000000024a0e : ret 0x41c3
0x00000000000849e9 : ret 0x41e8
0x000000000011dda5 : ret 0x4203
0x000000000008eb0a : ret 0x4266
0x0000000000128f41 : ret 0x4288
0x00000000000b3df5 : ret 0x428d
0x0000000000076d31 : ret 0x42e9
0x0000000000071e43 : ret 0x4389
0x0000000000032271 : ret 0x4401
0x000000000005525b : ret 0x4404
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x0000000000043531 : ret 0x4440
0x000000000002683f : ret 0x445f
0x00000000000df8b5 : ret 0x4489
0x0000000000128622 : ret 0x448b
0x00000000000bab40 : ret 0x448d
0x00000000000440c4 : ret 0x44c6
0x0000000000021708 : ret 0x4501
0x00000000000a42f2 : ret 0x4504
0x00000000000cd3a8 : ret 0x457f
0x0000000000089ba2 : ret 0x4601
0x00000000000b2287 : ret 0x4675
0x000000000008d414 : ret 0x46e8
0x00000000000080e8 : ret 0x47
0x000000000008cdd4 : ret 0x474
0x0000000000174d64 : ret 0x474c
0x0000000000008130 : ret 0x48
0x0000000000022928 : ret 0x4801
0x00000000000ddbf6 : ret 0x4802
0x00000000000fac22 : ret 0x4803
0x0000000000026327 : ret 0x4804
0x00000000000faea2 : ret 0x4805
0x00000000000fada2 : ret 0x4806
0x00000000000fad22 : ret 0x4807
0x00000000000460ea : ret 0x4808
0x00000000000faba2 : ret 0x4809
0x000000000002f3c6 : ret 0x480a
0x00000000000faa22 : ret 0x480b
0x0000000000046c26 : ret 0x4810
0x0000000000021341 : ret 0x4811
0x0000000000126854 : ret 0x4812
0x00000000000f8e45 : ret 0x4814
0x000000000004b249 : ret 0x481e
0x000000000004b269 : ret 0x4820
0x00000000000ffed8 : ret 0x4830
0x00000000000681a3 : ret 0x4840
0x00000000000218ed : ret 0x4864
0x0000000000037e1b : ret 0x4872
0x00000000000d1661 : ret 0x48b
0x0000000000096108 : ret 0x48c3
0x000000000003860e : ret 0x48d
0x0000000000176526 : ret 0x48f
0x0000000000021f09 : ret 0x4901
0x0000000000028423 : ret 0x4902
0x00000000000ad798 : ret 0x4904
0x000000000007df92 : ret 0x4908
0x00000000000b6022 : ret 0x4909
0x00000000000bb0aa : ret 0x490f
0x00000000000c6ba1 : ret 0x4910
0x0000000000131c22 : ret 0x4918
0x00000000000fff63 : ret 0x4930
0x00000000000d344a : ret 0x4940
0x0000000000003a27 : ret 0x49ec
0x00000000000d23dd : ret 0x4a8b
0x0000000000021dc3 : ret 0x4a8d
0x00000000000eebcf : ret 0x4ab8
0x00000000000f2c72 : ret 0x4b01
0x0000000000078b1a : ret 0x4b74
0x00000000000eec7f : ret 0x4bb8
0x00000000000266a0 : ret 0x4c01
0x00000000001138d6 : ret 0x4c02
0x0000000000162daf : ret 0x4c07
0x00000000000c4ab4 : ret 0x4c08
0x00000000001134ba : ret 0x4c0c
0x000000000007e984 : ret 0x4c10
0x00000000000befd7 : ret 0x4c48
0x00000000000b7a65 : ret 0x4c80
0x000000000012c878 : ret 0x4c89
0x0000000000089d3c : ret 0x4d01
0x00000000000f9059 : ret 0x4d02
0x000000000009b682 : ret 0x4d10
0x00000000000eb7ed : ret 0x4de9
0x0000000000175f87 : ret 0x4e27
0x00000000000f32b5 : ret 0x4f01
0x00000000000c5ba4 : ret 0x4f74
0x00000000001acaea : ret 0x502
0x0000000000022f7f : ret 0x5089
0x00000000000e644a : ret 0x50e8
0x0000000000160d79 : ret 0x50e9
0x000000000015c5e4 : ret 0x5173
0x000000000004d8c0 : ret 0x51ff
0x0000000000003282 : ret 0x52c0
0x000000000005b288 : ret 0x52e9
0x00000000000df3d2 : ret 0x5408
0x0000000000043fa1 : ret 0x540a
0x00000000000fef88 : ret 0x5422
0x00000000000b3861 : ret 0x5438
0x0000000000090be9 : ret 0x547c
0x00000000000e8d77 : ret 0x5488
0x0000000000033c71 : ret 0x5489
0x000000000004cbcf : ret 0x54e9
0x00000000001741ec : ret 0x5508
0x00000000000024c6 : ret 0x5576
0x000000000007281e : ret 0x5590
0x0000000000051f15 : ret 0x55e8
0x000000000009de67 : ret 0x5675
0x00000000001069aa : ret 0x576
0x0000000000106672 : ret 0x577
0x00000000001556b6 : ret 0x5776
0x00000000001764b8 : ret 0x5803
0x00000000000292b8 : ret 0x5841
0x0000000000036eab : ret 0x589
0x0000000000173ec0 : ret 0x591c
0x0000000000026423 : ret 0x5941
0x000000000002e32e : ret 0x5974
0x00000000000dd843 : ret 0x597e
0x0000000000003369 : ret 0x5a51
0x000000000012cfbb : ret 0x5a75
0x0000000000174c27 : ret 0x5ae4
0x000000000006a594 : ret 0x5ba
0x0000000000003073 : ret 0x5bdb
0x00000000000f189f : ret 0x5be8
0x00000000000ead12 : ret 0x5be9
0x00000000000efbab : ret 0x5c3c
0x0000000000003131 : ret 0x5cbe
0x00000000000ffa16 : ret 0x5d5b
0x0000000000086e5c : ret 0x5ee8
0x00000000000e9b1e : ret 0x5ee9
0x0000000000023836 : ret 0x5f74
0x00000000000004b9 : ret 0x6080
0x000000000002c7fa : ret 0x60e8
0x00000000000027a1 : ret 0x617e
0x00000000000f1699 : ret 0x61e8
0x000000000013145b : ret 0x6273
0x0000000000176952 : ret 0x62c1
0x00000000000450b6 : ret 0x6348
0x00000000000387ed : ret 0x6349
0x0000000000059714 : ret 0x634c
0x00000000000d1fab : ret 0x634d
0x00000000000b226a : ret 0x6375
0x0000000000155414 : ret 0x637f
0x00000000000863e1 : ret 0x63be
0x000000000002ac83 : ret 0x6411
0x00000000000f569a : ret 0x644
0x0000000000090bd9 : ret 0x647c
0x000000000011ba63 : ret 0x6601
0x0000000000090c89 : ret 0x6610
0x0000000000090691 : ret 0x6620
0x00000000000028ab : ret 0x6642
0x0000000000085d8c : ret 0x66c3
0x0000000000086608 : ret 0x672
0x000000000011a937 : ret 0x674
0x00000000000c404f : ret 0x676
0x00000000001556a6 : ret 0x6776
0x0000000000173edf : ret 0x67b2
0x000000000002713a : ret 0x68
0x000000000007bc05 : ret 0x6874
0x000000000008b7cf : ret 0x68e9
0x0000000000072ed0 : ret 0x6ae8
0x00000000000c64ca : ret 0x6ae9
0x0000000000003e42 : ret 0x6bba
0x00000000000ce8d2 : ret 0x6d7e
0x000000000003939d : ret 0x6de8
0x0000000000185463 : ret 0x6e1f
0x00000000000baad5 : ret 0x6eb8
0x000000000010e44e : ret 0x6ee
0x0000000000176ae1 : ret 0x6f9
0x00000000001084d5 : ret 0x708d
0x00000000000347f6 : ret 0x7374
0x0000000000089d77 : ret 0x73e9
0x000000000007bd81 : ret 0x7401
0x00000000000832ee : ret 0x7402
0x00000000000f1b81 : ret 0x7404
0x0000000000162b37 : ret 0x7407
0x000000000007cf53 : ret 0x7408
0x000000000006d9f7 : ret 0x7420
0x0000000000051864 : ret 0x7450
0x00000000000d6fc7 : ret 0x7480
0x0000000000089c17 : ret 0x74e9
0x00000000000966f7 : ret 0x7501
0x000000000007dde8 : ret 0x7502
0x0000000000096701 : ret 0x7504
0x0000000000112e6f : ret 0x7507
0x0000000000096706 : ret 0x7508
0x000000000015e70b : ret 0x7510
0x000000000006edc2 : ret 0x7520
0x00000000000d109e : ret 0x7540
0x00000000000ce47e : ret 0x7580
0x000000000008a24f : ret 0x75e9
0x000000000015b4d2 : ret 0x7677
0x000000000008a00f : ret 0x76e9
0x0000000000085ba1 : ret 0x772
0x00000000000d219f : ret 0x774
0x00000000000489a2 : ret 0x775
0x00000000000459a2 : ret 0x777
0x0000000000046c16 : ret 0x77f
0x0000000000053572 : ret 0x78e8
0x0000000000115972 : ret 0x78e9
0x000000000004a63a : ret 0x790
0x0000000000002fbc : ret 0x793b
0x000000000010090f : ret 0x7ae9
0x0000000000160faf : ret 0x7be9
0x0000000000034425 : ret 0x7c7
0x0000000000043736 : ret 0x7c80
0x000000000008bbeb : ret 0x7ce9
0x00000000000dc3dd : ret 0x7de8
0x0000000000080584 : ret 0x7de9
0x0000000000090631 : ret 0x7e20
0x000000000015560c : ret 0x7e40
0x000000000008d6bc : ret 0x7f10
0x0000000000162184 : ret 0x7fff
0x00000000000002e0 : ret 0x80
0x000000000008e899 : ret 0x8000
0x00000000000881c2 : ret 0x8001
0x00000000000b620a : ret 0x8010
0x00000000000efb76 : ret 0x8040
0x000000000011a92e : ret 0x8041
0x000000000009babd : ret 0x8072
0x000000000010e08a : ret 0x8080
0x00000000000039dc : ret 0x80fc
0x00000000000b31f9 : ret 0x8141
0x000000000016398a : ret 0x8148
0x00000000000b8f96 : ret 0x8166
0x00000000000e711f : ret 0x8189
0x000000000008c745 : ret 0x81eb
0x000000000004b349 : ret 0x820f
0x000000000002563a : ret 0x83
0x000000000008c457 : ret 0x8301
0x0000000000111de4 : ret 0x8303
0x000000000008a6c5 : ret 0x8305
0x00000000000390bc : ret 0x830f
0x0000000000090b01 : ret 0x8340
0x000000000004b116 : ret 0x8341
0x0000000000022513 : ret 0x8348
0x00000000000531b4 : ret 0x8349
0x00000000000c77b0 : ret 0x8401
0x000000000002b9ee : ret 0x840f
0x0000000000116370 : ret 0x841
0x000000000005d155 : ret 0x8440
0x000000000008a4e4 : ret 0x848b
0x00000000000d4bd1 : ret 0x84c6
0x00000000000a0b11 : ret 0x8504
0x000000000002e3bd : ret 0x850f
0x0000000000155b91 : ret 0x8520
0x00000000000b366b : ret 0x8545
0x0000000000052da8 : ret 0x8548
0x0000000000044ab8 : ret 0x854d
0x00000000000e02cf : ret 0x8589
0x00000000000bcefe : ret 0x858b
0x000000000008c1c1 : ret 0x85e9
0x000000000002c598 : ret 0x860f
0x00000000000540e1 : ret 0x86e9
0x0000000000027687 : ret 0x870f
0x00000000001737fe : ret 0x871e
0x0000000000090735 : ret 0x876
0x0000000000050f01 : ret 0x87e
0x0000000000034a63 : ret 0x87e8
0x00000000000282b3 : ret 0x8801
0x000000000011dd96 : ret 0x8802
0x000000000007528d : ret 0x880f
0x000000000000262c : ret 0x88ad
0x000000000002bba1 : ret 0x8901
0x0000000000118af4 : ret 0x8904
0x000000000005ca66 : ret 0x8908
0x0000000000042fcc : ret 0x8910
0x0000000000043646 : ret 0x8940
0x000000000004b108 : ret 0x8941
0x0000000000059882 : ret 0x8944
0x000000000008b6e4 : ret 0x8945
0x00000000000242cc : ret 0x8948
0x0000000000025fb6 : ret 0x8949
0x0000000000023f84 : ret 0x894c
0x0000000000056328 : ret 0x894d
0x000000000004621b : ret 0x894e
0x00000000000f5de7 : ret 0x896
0x0000000000038ec0 : ret 0x8966
0x00000000000f508d : ret 0x8a2
0x00000000000025cb : ret 0x8a4c
0x0000000000024888 : ret 0x8b01
0x000000000006c582 : ret 0x8b04
0x000000000002d80e : ret 0x8b05
0x00000000000ffd8e : ret 0x8b28
0x000000000017602e : ret 0x8b36
0x000000000002c8be : ret 0x8b41
0x00000000000a1d5a : ret 0x8b44
0x000000000002a12b : ret 0x8b48
0x0000000000025bc0 : ret 0x8b49
0x000000000004619e : ret 0x8b4a
0x0000000000032942 : ret 0x8b4c
0x000000000006e348 : ret 0x8b64
0x0000000000126ffe : ret 0x8be
0x0000000000075a0d : ret 0x8beb
0x0000000000051fde : ret 0x8c0f
0x00000000000038da : ret 0x8cba
0x000000000002884f : ret 0x8ce9
0x000000000008b26b : ret 0x8d01
0x000000000006b92f : ret 0x8d04
0x000000000012551a : ret 0x8d0f
0x00000000000a7d95 : ret 0x8d41
0x000000000008087c : ret 0x8d44
0x00000000000be41c : ret 0x8d45
0x0000000000023ec7 : ret 0x8d48
0x000000000003864d : ret 0x8d49
0x0000000000045759 : ret 0x8d4a
0x0000000000045042 : ret 0x8d4c
0x0000000000074c75 : ret 0x8d4d
0x0000000000034060 : ret 0x8d74
0x000000000004b124 : ret 0x8d89
0x0000000000050ac9 : ret 0x8e0f
0x000000000008aa6c : ret 0x8eeb
0x000000000004b3c4 : ret 0x8f0f
0x0000000000036e6a : ret 0x8f2
0x000000000007034b : ret 0x8feb
0x000000000008c1cd : ret 0x9066
0x000000000002d6ed : ret 0x90c3
0x000000000010d4cc : ret 0x920f
0x000000000006840a : ret 0x925
0x00000000000ae5f8 : ret 0x9272
0x0000000000084318 : ret 0x93be
0x00000000000e0956 : ret 0x940f
0x00000000000475c8 : ret 0x941
0x000000000000265f : ret 0x943d
0x0000000000033fe7 : ret 0x948
0x0000000000162d07 : ret 0x949
0x000000000003466c : ret 0x94c
0x00000000001627ca : ret 0x94d
0x00000000000a5c9f : ret 0x950f
0x0000000000174e53 : ret 0x9576
0x000000000008bd02 : ret 0x9588
0x0000000000118cdc : ret 0x95e9
0x00000000000e9e2f : ret 0x970f
0x00000000000038bc : ret 0x975
0x000000000008327c : ret 0x976
0x00000000000a7f6e : ret 0x9848
0x000000000009deb5 : ret 0x9874
0x00000000000f1baf : ret 0x9976
0x000000000011ff7a : ret 0x9b
0x0000000000075fa9 : ret 0x9beb
0x0000000000115462 : ret 0x9d0f
0x000000000009baa0 : ret 0x9d72
0x000000000007611e : ret 0x9deb
0x000000000000d881 : ret 0xa
0x00000000000c6394 : ret 0xa0e9
0x00000000000fd099 : ret 0xa475
0x0000000000174b43 : ret 0xa514
0x000000000010a6d8 : ret 0xa575
0x0000000000036ab4 : ret 0xa6e9
0x0000000000108e86 : ret 0xa775
0x00000000000dd89c : ret 0xa77f
0x00000000000f458d : ret 0xabe
0x00000000000d3f7f : ret 0xabe8
0x00000000000e056e : ret 0xabf
0x0000000000174fc7 : ret 0xac65
0x0000000000175984 : ret 0xacfc
0x0000000000060eda : ret 0xad83
0x00000000000757bb : ret 0xafeb
0x000000000007444d : ret 0xb074
0x00000000000fb58d : ret 0xb075
0x0000000000119b6c : ret 0xb374
0x00000000000c0d6a : ret 0xb375
0x0000000000118aea : ret 0xb489
0x00000000000c6380 : ret 0xb4e9
0x000000000004b144 : ret 0xb589
0x000000000002ee92 : ret 0xb60f
0x00000000000b7987 : ret 0xb67d
0x00000000000b3def : ret 0xb70f
0x00000000000b4066 : ret 0xb74
0x0000000000050a33 : ret 0xb7e8
0x0000000000034233 : ret 0xb8
0x0000000000160d70 : ret 0xb841
0x0000000000033e61 : ret 0xb848
0x0000000000043b72 : ret 0xb940
0x00000000000c4ce0 : ret 0xb941
0x0000000000174e8e : ret 0xb9b9
0x000000000000327d : ret 0xba88
0x00000000000eaf02 : ret 0xbbeb
0x00000000000c4b48 : ret 0xbc41
0x00000000000024ec : ret 0xbd07
0x000000000004b134 : ret 0xbd89
0x00000000000c69e8 : ret 0xbdeb
0x0000000000053800 : ret 0xbe07
0x0000000000060e32 : ret 0xbe08
0x0000000000174be4 : ret 0xbe57
0x000000000008496c : ret 0xbee8
0x000000000005fbc3 : ret 0xbf08
0x0000000000037ce4 : ret 0xc
0x000000000008e759 : ret 0xc000
0x000000000002f8d4 : ret 0xc031
0x00000000001a2534 : ret 0xc044
0x000000000011bacf : ret 0xc069
0x000000000002acce : ret 0xc083
0x00000000000f0b1c : ret 0xc084
0x00000000000904f0 : ret 0xc085
0x000000000019bb6d : ret 0xc0a
0x00000000000524a8 : ret 0xc141
0x0000000000021895 : ret 0xc148
0x0000000000025730 : ret 0xc149
0x0000000000056a0d : ret 0xc189
0x0000000000002ec6 : ret 0xc1bb
0x00000000000e9162 : ret 0xc221
0x0000000000038614 : ret 0xc229
0x00000000000387c0 : ret 0xc269
0x00000000000ba903 : ret 0xc26b
0x00000000000823db : ret 0xc275
0x00000000000e68e4 : ret 0xc283
0x000000000015c4b4 : ret 0xc2b2
0x000000000011db98 : ret 0xc2e8
0x00000000000380f8 : ret 0xc35b
0x00000000000cdf7a : ret 0xc373
0x00000000000ce93f : ret 0xc375
0x000000000002a225 : ret 0xc389
0x00000000000823dd : ret 0xc3f3
0x00000000000ea9d8 : ret 0xc3f6
0x0000000000172a42 : ret 0xc4c3
0x0000000000110f79 : ret 0xc4e9
0x00000000000b9e22 : ret 0xc4eb
0x0000000000174798 : ret 0xc4ff
0x0000000000155671 : ret 0xc540
0x0000000000039145 : ret 0xc5e8
0x0000000000021533 : ret 0xc5eb
0x00000000000c50fa : ret 0xc610
0x00000000000b921f : ret 0xc729
0x00000000000dff5d : ret 0xc741
0x0000000000045a82 : ret 0xc748
0x000000000003a809 : ret 0xc749
0x00000000000b22c1 : ret 0xc75
0x0000000000050968 : ret 0xc789
0x00000000000bcfcf : ret 0xc801
0x0000000000033b44 : ret 0xc889
0x0000000000053e52 : ret 0xc931
0x0000000000025c27 : ret 0xc984
0x000000000007535c : ret 0xc985
0x000000000009ae51 : ret 0xc9ff
0x00000000000e8c79 : ret 0xca21
0x0000000000160dff : ret 0xcae9
0x0000000000088d31 : ret 0xcb8
0x000000000008736a : ret 0xcbd
0x000000000007bb5f : ret 0xcbe8
0x000000000007d603 : ret 0xcbe9
0x00000000000376da : ret 0xcc8
0x000000000017422a : ret 0xcca7
0x000000000017630d : ret 0xcd11
0x000000000009ba70 : ret 0xcd72
0x00000000000e76d6 : ret 0xcd77
0x00000000000314e2 : ret 0xce80
0x0000000000155b9d : ret 0xce89
0x00000000000ac702 : ret 0xcf76
0x00000000000de1f7 : ret 0xcf89
0x000000000000ab51 : ret 0xd
0x00000000000c9fde : ret 0xd008
0x00000000000c9df0 : ret 0xd009
0x0000000000082d52 : ret 0xd020
0x000000000003692a : ret 0xd021
0x00000000000c5952 : ret 0xd029
0x0000000000043faf : ret 0xd084
0x0000000000034203 : ret 0xd089
0x00000000000dfd19 : ret 0xd101
0x000000000005f5d9 : ret 0xd129
0x00000000000cd4bf : ret 0xd141
0x000000000008589a : ret 0xd148
0x0000000000105426 : ret 0xd174
0x0000000000116d30 : ret 0xd184
0x00000000000cd898 : ret 0xd189
0x0000000000033210 : ret 0xd231
0x0000000000021abd : ret 0xd284
0x000000000002a00a : ret 0xd285
0x00000000000df227 : ret 0xd289
0x0000000000047238 : ret 0xd2e8
0x000000000008cc54 : ret 0xd308
0x00000000000e186f : ret 0xd320
0x000000000003bd8f : ret 0xd348
0x0000000000162e1d : ret 0xd349
0x0000000000035c40 : ret 0xd521
0x0000000000041aa8 : ret 0xd529
0x000000000000089a : ret 0xd5a4
0x000000000005cc94 : ret 0xd629
0x00000000001180fb : ret 0xd675
0x00000000000a46af : ret 0xd67d
0x0000000000068392 : ret 0xd74
0x000000000010688e : ret 0xd75
0x000000000008c73b : ret 0xd772
0x0000000000039c06 : ret 0xd774
0x00000000000c6aef : ret 0xd889
0x00000000000f1922 : ret 0xd8e8
0x0000000000175da5 : ret 0xd8f
0x00000000001041cc : ret 0xd975
0x00000000001042a3 : ret 0xda75
0x000000000012253b : ret 0xda78
0x00000000000a080c : ret 0xda89
0x0000000000033b40 : ret 0xdaf7
0x00000000000cfda4 : ret 0xdb31
0x00000000000ce772 : ret 0xdb77
0x00000000000a2d77 : ret 0xdb9
0x00000000000af0f0 : ret 0xdc00
0x0000000000175e86 : ret 0xdcd9
0x000000000009b91a : ret 0xdd0
0x0000000000174e02 : ret 0xde5d
0x0000000000173b91 : ret 0xde9e
0x00000000000f4b06 : ret 0xdeb
0x0000000000124c3e : ret 0xdf75
0x000000000011172a : ret 0xdf89
0x000000000008e619 : ret 0xe000
0x000000000015e6c9 : ret 0xe074
0x000000000004662d : ret 0xe075
0x0000000000122345 : ret 0xe078
0x0000000000071e34 : ret 0xe083
0x00000000001960b8 : ret 0xe0a
0x0000000000075328 : ret 0xe181
0x00000000000d7052 : ret 0xe183
0x0000000000100166 : ret 0xe1ff
0x0000000000032fd0 : ret 0xe281
0x0000000000027b1e : ret 0xe283
0x000000000008cfe7 : ret 0xe2ff
0x000000000007d932 : ret 0xe375
0x00000000000028e3 : ret 0xe3d
0x000000000011d3e6 : ret 0xe4e8
0x0000000000088b38 : ret 0xe575
0x0000000000052bb0 : ret 0xe57f
0x0000000000164226 : ret 0xe583
0x00000000000d9f47 : ret 0xe675
0x00000000000a04f2 : ret 0xe680
0x0000000000175fa6 : ret 0xe71f
0x00000000000839c6 : ret 0xe775
0x000000000006f152 : ret 0xe8
0x000000000010e062 : ret 0xe801
0x00000000001115d1 : ret 0xe841
0x0000000000037e63 : ret 0xe875
0x0000000000052dd5 : ret 0xe87f
0x00000000000b3e9d : ret 0xe883
0x00000000000b9518 : ret 0xe889
0x00000000000d6289 : ret 0xe8c0
0x00000000000f5393 : ret 0xe8c1
0x000000000002f329 : ret 0xe901
0x000000000002f3a7 : ret 0xe902
0x000000000009aee6 : ret 0xe908
0x0000000000151976 : ret 0xe910
0x000000000004b8fd : ret 0xe920
0x0000000000162d8d : ret 0xe940
0x00000000000263ad : ret 0xe95b
0x0000000000174307 : ret 0xe970
0x00000000000db1a4 : ret 0xea75
0x00000000000a048a : ret 0xea81
0x00000000000b7d21 : ret 0xeac0
0x00000000000b6cfa : ret 0xeac1
0x00000000000e1ad9 : ret 0xead1
0x00000000000feda6 : ret 0xeb01
0x00000000000d7160 : ret 0xeb02
0x00000000000d1f51 : ret 0xeb04
0x00000000000c4bcb : ret 0xeb08
0x000000000014f9b6 : ret 0xeb10
0x00000000000fdd3a : ret 0xeb73
0x000000000002ea7b : ret 0xebe8
0x000000000010b1ea : ret 0xec
0x0000000000176ab8 : ret 0xec2
0x00000000001085d1 : ret 0xec75
0x00000000000acf40 : ret 0xed72
0x000000000003b500 : ret 0xed74
0x000000000002c528 : ret 0xed75
0x00000000000e417d : ret 0xed85
0x0000000000072e4d : ret 0xede8
0x00000000000acaa7 : ret 0xee72
0x00000000000adc9f : ret 0xee75
0x000000000008af77 : ret 0xee77
0x000000000017675a : ret 0xef32
0x000000000004534e : ret 0xef75
0x000000000008b9fe : ret 0xef77
0x000000000013073a : ret 0xefd2
0x00000000001236fa : ret 0xefdb
0x0000000000081ff3 : ret 0xf
0x000000000008e4d9 : ret 0xf000
0x00000000000ba0a6 : ret 0xf001
0x00000000000f7469 : ret 0xf009
0x00000000001a6c6f : ret 0xf00e
0x000000000002765a : ret 0xf01
0x00000000000835d9 : ret 0xf02
0x00000000000ce980 : ret 0xf039
0x000000000002c2a6 : ret 0xf04
0x0000000000045ddd : ret 0xf075
0x0000000000026fb0 : ret 0xf08
0x0000000000085b44 : ret 0xf083
0x0000000000046fc3 : ret 0xf089
0x000000000011803a : ret 0xf091
0x0000000000116202 : ret 0xf0b0
0x0000000000080058 : ret 0xf0f
0x0000000000058471 : ret 0xf10
0x000000000011ad3a : ret 0xf12c
0x00000000000ce12c : ret 0xf175
0x0000000000132b3c : ret 0xf177
0x0000000000090cdc : ret 0xf188
0x0000000000106aea : ret 0xf1a7
0x000000000004cb17 : ret 0xf1e9
0x0000000000096714 : ret 0xf20
0x0000000000112e3f : ret 0xf221
0x00000000000baa97 : ret 0xf229
0x00000000000b3e43 : ret 0xf275
0x00000000000ffedc : ret 0xf375
0x0000000000053cc9 : ret 0xf40
0x0000000000021778 : ret 0xf41
0x00000000000deb4a : ret 0xf425
0x00000000000be718 : ret 0xf44
0x0000000000053768 : ret 0xf45
0x00000000000da202 : ret 0xf470
0x00000000000866e9 : ret 0xf475
0x000000000002534e : ret 0xf48
0x000000000007d843 : ret 0xf49
0x000000000004e04e : ret 0xf4c
0x0000000000179d98 : ret 0xf4c7
0x00000000000538e1 : ret 0xf50
0x00000000000de434 : ret 0xf5e9
0x00000000000b9c50 : ret 0xf601
0x0000000000085db4 : ret 0xf631
0x000000000007d896 : ret 0xf641
0x000000000005568b : ret 0xf66
0x00000000000b8d6a : ret 0xf682
0x0000000000027291 : ret 0xf685
0x00000000000b816a : ret 0xf68e
0x00000000001082ea : ret 0xf6f2
0x00000000000fd1aa : ret 0xf705
0x00000000000fb6aa : ret 0xf720
0x0000000000044a9e : ret 0xf741
0x0000000000031d10 : ret 0xf748
0x000000000004598e : ret 0xf749
0x0000000000100842 : ret 0xf789
0x00000000000ae73a : ret 0xf7f2
0x00000000000a53ba : ret 0xf8
0x00000000000d3f21 : ret 0xf80
0x00000000000268fb : ret 0xf800
0x00000000000aae3a : ret 0xf82b
0x0000000000003733 : ret 0xf84d
0x00000000000a873a : ret 0xf852
0x0000000000173a70 : ret 0xf869
0x000000000007cf03 : ret 0xf8b
0x00000000001590b6 : ret 0xf8c5
0x00000000000ef98a : ret 0xf97b
0x000000000010791a : ret 0xf9ac
0x00000000000f5e1a : ret 0xf9ff
0x00000000001157c4 : ret 0xfa81
0x00000000000d9e9d : ret 0xfa83
0x00000000000b9540 : ret 0xfac1
0x000000000002396f : ret 0xfae9
0x00000000000722fa : ret 0xfaef
0x000000000008818a : ret 0xfb06
0x0000000000186674 : ret 0xfb8e
0x0000000000186d58 : ret 0xfbae
0x0000000000186b6c : ret 0xfbb5
0x0000000000085cea : ret 0xfc
0x000000000008e259 : ret 0xfc00
0x00000000000f0f55 : ret 0xfc07
0x0000000000085e9a : ret 0xfc3
0x000000000005236a : ret 0xfcee
0x00000000000b526a : ret 0xfd17
0x00000000000ea37a : ret 0xfd5a
0x0000000000034aed : ret 0xfde8
0x00000000000e6a6a : ret 0xfdf6
0x000000000008e119 : ret 0xfe00
0x000000000010823a : ret 0xfe43
0x0000000000100878 : ret 0xfe89
0x00000000000838fc : ret 0xfe9
0x0000000000033b50 : ret 0xfeb8
0x00000000000554ec : ret 0xfee8
0x000000000008dfd9 : ret 0xff00
0x0000000000041ed5 : ret 0xff2
0x00000000000ac37c : ret 0xff25
0x0000000000155e09 : ret 0xff2d
0x000000000008ea3a : ret 0xff3
0x000000000005e6d1 : ret 0xff31
0x00000000000f46fa : ret 0xff36
0x000000000009de64 : ret 0xff48
0x000000000008de99 : ret 0xff80
0x0000000000115a83 : ret 0xff81
0x000000000012bf42 : ret 0xff85
0x00000000000d638a : ret 0xff88
0x000000000011aa8a : ret 0xffae
0x0000000000082cba : ret 0xffb5
0x0000000000073ae7 : ret 0xffb8
0x00000000000d2f5a : ret 0xffbb
0x000000000002536a : ret 0xffbe
0x000000000003f5a9 : ret 0xffbf
0x000000000008dd59 : ret 0xffc0
0x0000000000122bda : ret 0xffc2
0x00000000000670c1 : ret 0xffc7
0x0000000000081a3e : ret 0xffdf
0x000000000008dc19 : ret 0xffe0
0x0000000000058cb0 : ret 0xffe1
0x00000000000e414a : ret 0xffe6
0x0000000000022a3a : ret 0xffe7
0x0000000000082d0a : ret 0xffe9
0x00000000001875c1 : ret 0xffea
0x000000000016506a : ret 0xffeb
0x0000000000187e79 : ret 0xffec
0x00000000000467ba : ret 0xffed
0x00000000000e5406 : ret 0xffee
0x0000000000039ab1 : ret 0xffef
0x000000000008399a : ret 0xfff
0x00000000000312cb : ret 0xfff0
0x0000000000104e1c : ret 0xfff1
0x00000000001895a9 : ret 0xfff2
0x00000000000e4dab : ret 0xfff3
0x0000000000030ecb : ret 0xfff4
0x000000000017a73d : ret 0xfff5
0x000000000004be48 : ret 0xfff6
0x00000000000a8502 : ret 0xfff7
0x000000000008d999 : ret 0xfff8
0x00000000000309cb : ret 0xfff9
0x0000000000033982 : ret 0xfffa
0x000000000002b5bc : ret 0xfffb
0x0000000000026bdb : ret 0xfffc
0x000000000003cdf7 : ret 0xfffd
0x000000000002ed65 : ret 0xfffe
0x000000000002d6e5 : ret 0xffff
0x0000000000058de3 : ret 1
0x0000000000000fcc : ret 2
0x0000000000043602 : ret 3
0x0000000000090d89 : ret 4
0x00000000000482be : ret 5
0x0000000000117e31 : ret 6
0x0000000000001854 : ret 7
0x00000000000019ec : ret 8
0x00000000000e2aa8 : ret 9
0x0000000000000766 : retf
0x0000000000004be8 : retf 0
0x0000000000007341 : retf 0x10
0x000000000011d8e5 : retf 0x1089
0x0000000000003bb6 : retf 0x10bf
0x0000000000004389 : retf 0x11
0x000000000004556d : retf 0x114d
0x000000000008ab54 : retf 0x1189
0x00000000000539d0 : retf 0x12
0x000000000004e932 : retf 0x1286
0x000000000004e7b2 : retf 0x1288
0x0000000000002924 : retf 0x12c5
0x0000000000050a97 : retf 0x12ca
0x0000000000043ee4 : retf 0x12eb
0x0000000000048a88 : retf 0x13
0x000000000009deaa : retf 0x1373
0x0000000000049dc2 : retf 0x13aa
0x0000000000080535 : retf 0x13e9
0x00000000000309a6 : retf 0x14
0x000000000012246b : retf 0x141
0x00000000000f3bd2 : retf 0x146
0x000000000003ecb2 : retf 0x146a
0x000000000012bdf5 : retf 0x148
0x0000000000024b44 : retf 0x1489
0x000000000008ae2c : retf 0x149
0x000000000013cdac : retf 0x14c
0x000000000002da12 : retf 0x1533
0x0000000000122d85 : retf 0x15e8
0x0000000000041a12 : retf 0x15e9
0x0000000000104878 : retf 0x15ff
0x000000000008ed02 : retf 0x16
0x00000000000c5bb3 : retf 0x1674
0x00000000000259cd : retf 0x1689
0x0000000000129a9f : retf 0x168b
0x0000000000002e0a : retf 0x172
0x000000000001d7e0 : retf 0x17db
0x000000000001dbb8 : retf 0x17dd
0x000000000001e308 : retf 0x17e1
0x0000000000089c03 : retf 0x17e9
0x000000000000291a : retf 0x182c
0x000000000008abb4 : retf 0x189
0x0000000000046ced : retf 0x194d
0x0000000000089f90 : retf 0x1975
0x00000000000f7892 : retf 0x19b8
0x00000000000dec3e : retf 0x1a74
0x000000000004e129 : retf 0x1b
0x0000000000164b99 : retf 0x1b8
0x000000000008663c : retf 0x1bb
0x0000000000037bb1 : retf 0x1be
0x00000000000512c1 : retf 0x1c
0x00000000000a0ab3 : retf 0x1c74
0x000000000016ff68 : retf 0x1d4
0x0000000000170708 : retf 0x1d5
0x0000000000055d06 : retf 0x1de9
0x000000000008cbff : retf 0x1e74
0x00000000000623f0 : retf 0x1e75
0x00000000000f7a72 : retf 0x1eb8
0x000000000011ec7c : retf 0x1ee8
0x000000000009099b : retf 0x1f0f
0x00000000001295ee : retf 0x1f75
0x0000000000163f72 : retf 0x1f77
0x00000000001a3cfe : retf 0x2000
0x000000000003c7a7 : retf 0x20e9
0x0000000000001ed2 : retf 0x20f4
0x00000000000099d8 : retf 0x21
0x0000000000078ab9 : retf 0x2148
0x0000000000162d04 : retf 0x2149
0x000000000007da02 : retf 0x2173
0x0000000000002d6a : retf 0x2217
0x000000000004a473 : retf 0x2274
0x00000000000022c0 : retf 0x2281
0x00000000000023a1 : retf 0x23c4
0x000000000016ef78 : retf 0x24
0x00000000000c5862 : retf 0x244
0x000000000016527a : retf 0x2509
0x0000000000164f52 : retf 0x250a
0x00000000000adc18 : retf 0x25e9
0x0000000000159daa : retf 0x25f8
0x0000000000067696 : retf 0x27
0x000000000008c0d5 : retf 0x2775
0x0000000000106632 : retf 0x2777
0x0000000000137d19 : retf 0x280f
0x0000000000130962 : retf 0x283a
0x0000000000130062 : retf 0x2843
0x00000000000ecc52 : retf 0x28b8
0x0000000000117388 : retf 0x29
0x00000000000f2bb5 : retf 0x2944
0x000000000004d8a4 : retf 0x2948
0x00000000000a2c8c : retf 0x294c
0x00000000001615aa : retf 0x2977
0x000000000011bd82 : retf 0x29d1
0x0000000000108e34 : retf 0x2a
0x000000000011249a : retf 0x2a19
0x00000000000ed095 : retf 0x2a74
0x000000000008b8c5 : retf 0x2a75
0x0000000000174c7c : retf 0x2a91
0x00000000000f7366 : retf 0x2b
0x00000000000895dd : retf 0x2b49
0x00000000000fd832 : retf 0x2ba0
0x00000000000277d0 : retf 0x2bb
0x00000000000f0976 : retf 0x2c68
0x000000000002a48f : retf 0x2c73
0x000000000002a469 : retf 0x2c76
0x00000000001740fa : retf 0x2c90
0x000000000009de90 : retf 0x2d73
0x00000000000e068a : retf 0x2d87
0x00000000000f7532 : retf 0x2db8
0x000000000000b328 : retf 0x2e
0x0000000000037a75 : retf 0x2e66
0x00000000000f6fa2 : retf 0x2eb8
0x00000000000d8cd2 : retf 0x2f5
0x0000000000106702 : retf 0x2f77
0x00000000000f7b02 : retf 0x2fb8
0x00000000000b5792 : retf 0x3014
0x00000000000f7405 : retf 0x3074
0x000000000005aa1a : retf 0x30be
0x000000000004292a : retf 0x30e8
0x00000000000c8cd1 : retf 0x3102
0x00000000000ee26e : retf 0x3145
0x000000000013e636 : retf 0x3148
0x000000000011f639 : retf 0x3149
0x0000000000175ee5 : retf 0x3159
0x00000000000e4174 : retf 0x3174
0x0000000000087394 : retf 0x32
0x00000000001209ba : retf 0x328b
0x0000000000175f4d : retf 0x32dd
0x0000000000073d04 : retf 0x33
0x000000000008631a : retf 0x3306
0x0000000000083196 : retf 0x3310
0x0000000000074092 : retf 0x33c6
0x0000000000174803 : retf 0x33e6
0x000000000006cee4 : retf 0x34
0x000000000003d962 : retf 0x343d
0x000000000005cf53 : retf 0x348
0x00000000000d9795 : retf 0x34c
0x0000000000104cd2 : retf 0x35
0x000000000005f49a : retf 0x3549
0x00000000000f8392 : retf 0x35b8
0x0000000000132665 : retf 0x35e8
0x0000000000047394 : retf 0x36
0x0000000000055362 : retf 0x3614
0x0000000000174d31 : retf 0x3617
0x0000000000104368 : retf 0x3674
0x00000000000f7b62 : retf 0x36b8
0x0000000000037c94 : retf 0x37
0x000000000004286a : retf 0x373e
0x000000000013e612 : retf 0x377
0x0000000000089efd : retf 0x3775
0x00000000000f7b92 : retf 0x37b8
0x0000000000107ff5 : retf 0x37e9
0x000000000000221b : retf 0x3844
0x0000000000002e2e : retf 0x385b
0x000000000002d6fa : retf 0x3866
0x000000000002a45a : retf 0x38b5
0x000000000002d5ba : retf 0x38c2
0x00000000000212ca : retf 0x392c
0x00000000000212b2 : retf 0x392e
0x00000000000210b2 : retf 0x392f
0x0000000000087f1a : retf 0x3941
0x0000000000114bd5 : retf 0x3944
0x0000000000059af0 : retf 0x3948
0x00000000001053f0 : retf 0x3949
0x0000000000027819 : retf 0x394c
0x000000000009b664 : retf 0x394d
0x00000000000456c4 : retf 0x3973
0x00000000000c5bc4 : retf 0x3974
0x000000000000efd0 : retf 0x3a
0x000000000008061e : retf 0x3ae9
0x0000000000113f7b : retf 0x3b9a
0x0000000000027950 : retf 0x3bb
0x000000000008242d : retf 0x3d83
0x0000000000176346 : retf 0x3d8a
0x00000000000c4232 : retf 0x3db8
0x000000000003ac1e : retf 0x3deb
0x00000000000410cf : retf 0x3e7e
0x000000000012e094 : retf 0x3e8
0x0000000000173bdb : retf 0x3ec
0x00000000000402ff : retf 0x3f3d
0x00000000000cff16 : retf 0x3f74
0x00000000000c3fd2 : retf 0x3ff
0x0000000000076d25 : retf 0x40e9
0x00000000000a7ccc : retf 0x417e
0x0000000000000321 : retf 0x4244
0x000000000008eaec : retf 0x4266
0x00000000000ca1a2 : retf 0x428b
0x0000000000009df8 : retf 0x44
0x0000000000028f25 : retf 0x4408
0x000000000009fa77 : retf 0x4466
0x0000000000132638 : retf 0x4489
0x00000000000c2264 : retf 0x44f6
0x00000000000df3a9 : retf 0x44ff
0x0000000000085915 : retf 0x45e8
0x0000000000003f18 : retf 0x46
0x00000000000ecfbe : retf 0x46b8
0x0000000000112c68 : retf 0x470f
0x000000000009de76 : retf 0x4773
0x0000000000089d63 : retf 0x47e9
0x000000000007dfc5 : retf 0x4801
0x000000000007bc71 : retf 0x4802
0x0000000000032d1c : retf 0x4805
0x0000000000032d87 : retf 0x4806
0x0000000000032c38 : retf 0x4809
0x0000000000032e78 : retf 0x480a
0x0000000000032e3c : retf 0x480d
0x00000000000737ac : retf 0x4810
0x00000000000738a9 : retf 0x4820
0x00000000000fecb7 : retf 0x4864
0x0000000000026f36 : retf 0x4880
0x00000000000454e1 : retf 0x48f8
0x00000000000f2f36 : retf 0x4901
0x00000000000ba992 : retf 0x490f
0x0000000000001c37 : retf 0x49f2
0x0000000000002eae : retf 0x4a9a
0x0000000000081db4 : retf 0x4ae9
0x00000000000e94c2 : retf 0x4b8
0x000000000002799e : retf 0x4bb
0x000000000007bc23 : retf 0x4c01
0x000000000004345b : retf 0x4c3c
0x0000000000081d01 : retf 0x4c72
0x0000000000083b52 : retf 0x4c89
0x0000000000045538 : retf 0x4de8
0x000000000004554a : retf 0x4df0
0x000000000004555c : retf 0x4df8
0x00000000000cda13 : retf 0x4e8b
0x00000000000d05bb : retf 0x4fe8
0x00000000000037b4 : retf 0x5038
0x00000000000cd8aa : retf 0x5088
0x000000000011d8fb : retf 0x5089
0x000000000012fe63 : retf 0x50b
0x00000000000b3e47 : retf 0x5180
0x000000000003a1dd : retf 0x5355
0x000000000011d993 : retf 0x5389
0x0000000000041fcd : retf 0x5489
0x0000000000002720 : retf 0x54da
0x0000000000003078 : retf 0x54f7
0x0000000000155422 : retf 0x557f
0x0000000000001e98 : retf 0x559a
0x00000000000080b8 : retf 0x57
0x00000000000cd709 : retf 0x574
0x00000000001078a2 : retf 0x577
0x0000000000027ca0 : retf 0x5bb
0x0000000000085fad : retf 0x5d5b
0x000000000009de5c : retf 0x6173
0x000000000008aa59 : retf 0x61e9
0x0000000000049bdd : retf 0x62e9
0x0000000000001f4c : retf 0x6321
0x0000000000055c05 : retf 0x6348
0x0000000000034c98 : retf 0x6411
0x00000000000ccbdc : retf 0x65e9
0x0000000000137e03 : retf 0x6601
0x0000000000137f53 : retf 0x6602
0x00000000001380a3 : retf 0x6603
0x00000000001381f3 : retf 0x6604
0x0000000000138343 : retf 0x6605
0x0000000000138493 : retf 0x6606
0x00000000001385e3 : retf 0x6607
0x0000000000138733 : retf 0x6608
0x0000000000138883 : retf 0x6609
0x00000000001389d3 : retf 0x660a
0x0000000000138b23 : retf 0x660b
0x0000000000138c73 : retf 0x660c
0x0000000000138dc3 : retf 0x660d
0x0000000000138f13 : retf 0x660e
0x0000000000139063 : retf 0x660f
0x00000000000f6712 : retf 0x66d
0x000000000008058f : retf 0x66e9
0x000000000013e631 : retf 0x676
0x0000000000176265 : retf 0x67ca
0x0000000000100a1d : retf 0x6874
0x0000000000085bf2 : retf 0x68e8
0x00000000000616ba : retf 0x6ae9
0x00000000000b8a4e : retf 0x6b48
0x00000000000e7971 : retf 0x6b8
0x00000000000036f3 : retf 0x6b85
0x0000000000027e9f : retf 0x6bb
0x00000000000ce101 : retf 0x6c7d
0x00000000000fe73d : retf 0x6de8
0x0000000000003c1c : retf 0x6e33
0x0000000000174262 : retf 0x6ee8
0x000000000004835f : retf 0x703d
0x000000000000394f : retf 0x707d
0x0000000000001cc0 : retf 0x7085
0x0000000000176126 : retf 0x7272
0x000000000008c728 : retf 0x72e9
0x0000000000002568 : retf 0x736c
0x00000000000c73b6 : retf 0x74e8
0x000000000008b91d : retf 0x7575
0x00000000001758ff : retf 0x76a5
0x0000000000073da3 : retf 0x775
0x0000000000072ab1 : retf 0x776
0x0000000000089ff3 : retf 0x77e9
0x000000000008c85d : retf 0x7875
0x0000000000115e02 : retf 0x7880
0x00000000000d1802 : retf 0x78e8
0x0000000000174782 : retf 0x79f5
0x0000000000061060 : retf 0x7ae8
0x00000000000b5093 : retf 0x7c83
0x00000000000d557c : retf 0x7ce9
0x0000000000101fc7 : retf 0x7dd
0x0000000000104493 : retf 0x7e8
0x000000000008b8f4 : retf 0x7f77
0x000000000010cb72 : retf 0x7f80
0x00000000000007c7 : retf 0x8003
0x0000000000083ba2 : retf 0x803
0x00000000000e8c7b : retf 0x8041
0x000000000013e61a : retf 0x8148
0x00000000000b6469 : retf 0x8166
0x00000000000023e7 : retf 0x81c0
0x0000000000088c29 : retf 0x81e8
0x0000000000072459 : retf 0x820f
0x0000000000073460 : retf 0x830f
0x0000000000079900 : retf 0x8310
0x00000000000216e7 : retf 0x8341
0x0000000000028871 : retf 0x8348
0x0000000000098865 : retf 0x8349
0x000000000011ba16 : retf 0x83b
0x00000000000216ea : retf 0x83ff
0x00000000000460ae : retf 0x840f
0x0000000000062cc6 : retf 0x8440
0x00000000000ff17a : retf 0x8445
0x0000000000175070 : retf 0x8481
0x000000000007b801 : retf 0x8501
0x00000000000224d8 : retf 0x8508
0x000000000002e033 : retf 0x850f
0x0000000000044b42 : retf 0x8548
0x00000000000d0e9c : retf 0x854d
0x00000000000904b9 : retf 0x860f
0x000000000008c101 : retf 0x870f
0x00000000001066b2 : retf 0x877
0x000000000000360f : retf 0x8792
0x000000000008c343 : retf 0x87e9
0x00000000000d0101 : retf 0x8810
0x00000000000d003e : retf 0x8840
0x00000000000ca5da : retf 0x8841
0x0000000000083b58 : retf 0x8902
0x00000000001323f0 : retf 0x8908
0x00000000000747e0 : retf 0x8920
0x00000000000f1ba1 : retf 0x8940
0x0000000000030402 : retf 0x8941
0x0000000000081108 : retf 0x8943
0x0000000000051b5d : retf 0x8944
0x000000000002751c : retf 0x8945
0x00000000000272e4 : retf 0x8948
0x0000000000059454 : retf 0x8949
0x0000000000034e4b : retf 0x894c
0x000000000005442b : retf 0x894d
0x00000000000286e9 : retf 0x8966
0x000000000008c1a9 : retf 0x89e9
0x00000000000e7131 : retf 0x89ff
0x00000000000024c0 : retf 0x8a3f
0x0000000000003ebb : retf 0x8aca
0x00000000000c4269 : retf 0x8b
0x00000000000fa80a : retf 0x8b40
0x00000000000f8eec : retf 0x8b41
0x00000000000cc975 : retf 0x8b44
0x0000000000055c28 : retf 0x8b45
0x000000000002480a : retf 0x8b48
0x0000000000031abc : retf 0x8b49
0x0000000000139c39 : retf 0x8b4c
0x000000000006af32 : retf 0x8b8
0x0000000000113b67 : retf 0x8d41
0x0000000000034d51 : retf 0x8d48
0x0000000000072c39 : retf 0x8d49
0x0000000000150544 : retf 0x8d4a
0x00000000000728a2 : retf 0x8d4c
0x00000000000f258c : retf 0x8d4d
0x000000000009059d : retf 0x9066
0x000000000008206e : retf 0x90e9
0x00000000000d79ec : retf 0x91eb
0x0000000000001d55 : retf 0x9226
0x0000000000084a11 : retf 0x92eb
0x0000000000162798 : retf 0x930f
0x0000000000001be8 : retf 0x9396
0x00000000001759ce : retf 0x93a2
0x00000000000a42e0 : retf 0x940f
0x000000000006f9d2 : retf 0x945
0x000000000003485e : retf 0x948
0x000000000009de61 : retf 0x94c
0x00000000000d9504 : retf 0x94e9
0x00000000000d5467 : retf 0x94eb
0x0000000000001e80 : retf 0x9582
0x000000000011451f : retf 0x9589
0x000000000003afaa : retf 0x973d
0x0000000000120172 : retf 0x99
0x0000000000175d6b : retf 0x99e0
0x00000000000df272 : retf 0x9b8
0x00000000000f1b97 : retf 0x9b9
0x00000000000e171f : retf 0x9d5
0x00000000001760da : retf 0x9d7d
0x00000000000f7922 : retf 0x9db8
0x0000000000164ead : retf 0x9de8
0x000000000005b854 : retf 0xa
0x000000000019d9b1 : retf 0xa02
0x00000000001769e5 : retf 0xa020
0x0000000000173f45 : retf 0xa1eb
0x0000000000175fcb : retf 0xa2fe
0x000000000000349d : retf 0xa3f6
0x00000000000f7862 : retf 0xa5b8
0x0000000000080c13 : retf 0xa74
0x000000000010218d : retf 0xa880
0x00000000000d0661 : retf 0xa9e8
0x00000000000c5d2f : retf 0xa9eb
0x000000000017609c : retf 0xab0d
0x00000000000e0e06 : retf 0xabf
0x00000000001765ee : retf 0xae32
0x000000000003f17d : retf 0xae9
0x00000000000039c8 : retf 0xaec4
0x00000000000f7742 : retf 0xafb8
0x000000000008204f : retf 0xafe9
0x000000000005a8f8 : retf 0xb
0x00000000000f7952 : retf 0xb2b8
0x00000000000f7982 : retf 0xb3b8
0x000000000011fbad : retf 0xb47
0x0000000000174de9 : retf 0xb51a
0x000000000012eb62 : retf 0xb5b8
0x0000000000090fb2 : retf 0xb60f
0x000000000012ebb2 : retf 0xb6b8
0x00000000000dedc9 : retf 0xb70f
0x0000000000164a82 : retf 0xb801
0x00000000001615ee : retf 0xb841
0x00000000000875eb : retf 0xb941
0x000000000016361f : retf 0xb948
0x0000000000115851 : retf 0xb9e8
0x00000000000027de : retf 0xba99
0x00000000000e9d62 : retf 0xbb8
0x00000000001760f3 : retf 0xbb9a
0x0000000000043596 : retf 0xbc41
0x00000000000f4ec2 : retf 0xbcb8
0x00000000000f4e62 : retf 0xbdb8
0x0000000000001f85 : retf 0xbe35
0x0000000000129689 : retf 0xbe75
0x00000000000d14d9 : retf 0xbe9
0x00000000000f4d42 : retf 0xbeb8
0x0000000000003b9a : retf 0xbf15
0x0000000000162915 : retf 0xbf41
0x000000000017613d : retf 0xbf4b
0x00000000000f4d72 : retf 0xbfb8
0x00000000000b628c : retf 0xc
0x000000000008b080 : retf 0xc031
0x00000000000be305 : retf 0xc04
0x00000000000aba51 : retf 0xc083
0x0000000000044a63 : retf 0xc084
0x000000000002e9cb : retf 0xc089
0x00000000000f4dd2 : retf 0xc0b8
0x0000000000175dbd : retf 0xc0fe
0x0000000000034545 : retf 0xc148
0x0000000000095f6e : retf 0xc149
0x00000000000f4cb2 : retf 0xc1b8
0x00000000000aba57 : retf 0xc283
0x00000000000ed5fb : retf 0xc2f7
0x000000000011d6e2 : retf 0xc5
0x0000000000054d5c : retf 0xc641
0x000000000011453f : retf 0xc683
0x000000000004a189 : retf 0xc689
0x00000000001628e0 : retf 0xc749
0x000000000012071e : retf 0xc80f
0x000000000004495f : retf 0xc821
0x000000000008a044 : retf 0xc889
0x00000000000d7ae9 : retf 0xc8b
0x00000000000fe7c2 : retf 0xc8e8
0x00000000000eb8e0 : retf 0xc985
0x00000000000f2621 : retf 0xc9d9
0x0000000000021686 : retf 0xca21
0x00000000000cda47 : retf 0xca83
0x000000000015c054 : retf 0xcab2
0x00000000000a78f2 : retf 0xcba
0x00000000000bc282 : retf 0xcbeb
0x000000000008a4bb : retf 0xcc74
0x0000000000172a4a : retf 0xcccb
0x00000000000af9fd : retf 0xcd9
0x000000000011fce1 : retf 0xce89
0x00000000000fe8bb : retf 0xcfe8
0x0000000000150796 : retf 0xd
0x00000000001a55aa : retf 0xd00e
0x0000000000002d66 : retf 0xd04f
0x00000000000cda3d : retf 0xd189
0x0000000000174ba6 : retf 0xd1cb
0x00000000000a05ff : retf 0xd231
0x0000000000106bd6 : retf 0xd274
0x00000000000ae56e : retf 0xd284
0x0000000000038625 : retf 0xd285
0x000000000003040c : retf 0xd289
0x00000000001762b7 : retf 0xd39
0x000000000008c1bc : retf 0xd772
0x000000000011d988 : retf 0xd789
0x0000000000082027 : retf 0xd7e9
0x000000000002c9f3 : retf 0xd88
0x00000000000f1d42 : retf 0xd8b8
0x00000000000db28a : retf 0xd975
0x000000000009f046 : retf 0xd9d
0x00000000000cf787 : retf 0xda29
0x000000000008cd83 : retf 0xda75
0x00000000000d5561 : retf 0xdb77
0x000000000008b997 : retf 0xdc72
0x00000000000d0201 : retf 0xdc75
0x00000000000f8c02 : retf 0xdcb8
0x00000000000ec792 : retf 0xddb8
0x0000000000176843 : retf 0xde4f
0x00000000000d783a : retf 0xdeb
0x0000000000174e73 : retf 0xdf7f
0x00000000001327cb : retf 0xdfe8
0x0000000000101223 : retf 0xe
0x000000000018eeac : retf 0xe0a
0x000000000017491e : retf 0xe152
0x000000000015a093 : retf 0xe175
0x00000000000d0cbb : retf 0xe183
0x0000000000028abf : retf 0xe1e9
0x0000000000126971 : retf 0xe281
0x0000000000027945 : retf 0xe283
0x0000000000059c94 : retf 0xe2c1
0x0000000000028418 : retf 0xe383
0x000000000008ce39 : retf 0xe475
0x0000000000174efc : retf 0xe496
0x000000000008c507 : retf 0xe675
0x000000000004b617 : retf 0xe677
0x0000000000174866 : retf 0xe72e
0x000000000008c4a6 : retf 0xe775
0x0000000000173ef3 : retf 0xe80
0x00000000000e6c89 : retf 0xe803
0x0000000000032db9 : retf 0xe903
0x000000000011bc84 : retf 0xe975
0x00000000000f76e2 : retf 0xe9b8
0x0000000000003644 : retf 0xe9ee
0x000000000003a9b3 : retf 0xea75
0x00000000000e9aab : retf 0xea81
0x0000000000175eac : retf 0xea91
0x00000000000cc16e : retf 0xeac0
0x000000000004496e : retf 0xeac1
0x000000000008d631 : retf 0xead3
0x00000000000f293a : retf 0xeadb
0x0000000000032d72 : retf 0xeb04
0x0000000000032dd1 : retf 0xeb07
0x0000000000032c98 : retf 0xeb08
0x0000000000032e9f : retf 0xeb0b
0x0000000000032e72 : retf 0xeb0c
0x00000000000d1fe2 : retf 0xeb7f
0x00000000000f2931 : retf 0xeb83
0x00000000001767c1 : retf 0xebbf
0x0000000000089fa9 : retf 0xec74
0x00000000000abd41 : retf 0xec75
0x00000000000dec58 : retf 0xed75
0x00000000000c227f : retf 0xee75
0x0000000000033850 : retf 0xeeb
0x00000000000cab41 : retf 0xef75
0x00000000000d876c : retf 0xefe9
0x00000000000112a1 : retf 0xf
0x000000000013d03c : retf 0xf01
0x000000000013d1bc : retf 0xf02
0x00000000000f225c : retf 0xf021
0x000000000013d33c : retf 0xf03
0x000000000013d4bc : retf 0xf04
0x000000000013d63c : retf 0xf05
0x000000000013d7bc : retf 0xf06
0x000000000013d93c : retf 0xf07
0x00000000000d669d : retf 0xf072
0x000000000013dabc : retf 0xf08
0x000000000013dc3c : retf 0xf09
0x000000000013ddbc : retf 0xf0a
0x000000000013df3c : retf 0xf0b
0x000000000013e0bc : retf 0xf0c
0x000000000013e23c : retf 0xf0d
0x000000000013e3bc : retf 0xf0e
0x000000000013e53c : retf 0xf0f
0x0000000000125eb2 : retf 0xf11a
0x00000000000cdb04 : retf 0xf175
0x000000000015609d : retf 0xf1c5
0x00000000000fe5f2 : retf 0xf22a
0x0000000000074c5b : retf 0xf275
0x00000000000b4eb5 : retf 0xf40
0x000000000008cc82 : retf 0xf41
0x00000000000b3e13 : retf 0xf42
0x0000000000131aa7 : retf 0xf44
0x00000000000dcc32 : retf 0xf444
0x000000000003a7a6 : retf 0xf48
0x00000000000883fe : retf 0xf49
0x0000000000096421 : retf 0xf4c
0x0000000000126da6 : retf 0xf4e8
0x00000000000cecfa : retf 0xf525
0x00000000000cebfa : retf 0xf526
0x00000000000ccd32 : retf 0xf542
0x00000000000c6f52 : retf 0xf5a0
0x00000000000f39f2 : retf 0xf623
0x0000000000175e08 : retf 0xf64
0x00000000000e71ca : retf 0xf641
0x000000000005545d : retf 0xf66
0x00000000000b4cfa : retf 0xf6c5
0x0000000000053ef1 : retf 0xf748
0x0000000000052676 : retf 0xf8
0x00000000000a8832 : retf 0xf851
0x0000000000115675 : retf 0xf883
0x00000000000b95ad : retf 0xf8c1
0x000000000015616f : retf 0xf9c5
0x000000000011dd28 : retf 0xfa81
0x000000000003042a : retf 0xfa83
0x0000000000050cc6 : retf 0xfac1
0x0000000000186760 : retf 0xfb90
0x0000000000186c50 : retf 0xfbb1
0x0000000000186c58 : retf 0xfbb7
0x000000000012ac32 : retf 0xfc19
0x00000000000d3312 : retf 0xfcf2
0x00000000000dc188 : retf 0xfd4f
0x0000000000159476 : retf 0xfdc5
0x0000000000033d34 : retf 0xfe0d
0x00000000001264d2 : retf 0xfe1d
0x0000000000163695 : retf 0xfe83
0x00000000000dd362 : retf 0xfe8d
0x0000000000043bf7 : retf 0xfeb
0x0000000000155ea7 : retf 0xfec5
0x00000000000f91f2 : retf 0xfeeb
0x000000000013ee61 : retf 0xff2
0x000000000002f0f2 : retf 0xff21
0x000000000013ee5c : retf 0xff3
0x00000000001131d2 : retf 0xff50
0x00000000000d027f : retf 0xff83
0x0000000000068972 : retf 0xffb2
0x0000000000061d04 : retf 0xffb7
0x0000000000072ad5 : retf 0xffb8
0x00000000000613c9 : retf 0xffbf
0x0000000000101e62 : retf 0xffca
0x0000000000081992 : retf 0xffd8
0x00000000000bc122 : retf 0xffdb
0x00000000000b9bd1 : retf 0xffdc
0x00000000000661c2 : retf 0xffe3
0x00000000000bd94a : retf 0xffe8
0x00000000001871d9 : retf 0xffe9
0x000000000005ad62 : retf 0xffea
0x0000000000022422 : retf 0xffed
0x00000000000caad1 : retf 0xffee
0x000000000004c532 : retf 0xffef
0x000000000011480e : retf 0xfff0
0x0000000000023922 : retf 0xfff1
0x0000000000035ec2 : retf 0xfff2
0x00000000000ca2d2 : retf 0xfff3
0x00000000000d47db : retf 0xfff4
0x00000000000add0c : retf 0xfff5
0x0000000000069208 : retf 0xfff6
0x00000000000f4099 : retf 0xfff7
0x00000000000a5d66 : retf 0xfff8
0x0000000000051d76 : retf 0xfff9
0x00000000000d22fb : retf 0xfffa
0x0000000000088dc2 : retf 0xfffb
0x0000000000029818 : retf 0xfffc
0x000000000002c365 : retf 0xfffd
0x000000000002e2f4 : retf 0xfffe
0x000000000002fd32 : retf 0xffff
0x00000000000062b0 : retf 1
0x000000000000ee60 : retf 2
0x0000000000001190 : retf 3
0x000000000005a600 : retf 4
0x000000000000d650 : retf 5
0x000000000009bd82 : retf 6
0x00000000000090e1 : retf 7
0x0000000000011430 : retf 8
0x000000000006b815 : retf 9
0x000000000009fa05 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000a05f3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000f092c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000009068e : rol bl, 0x83 ; ret 0x6620
0x00000000000de8dd : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x00000000000cf19d : rol bl, 0x90 ; mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x00000000000b28cb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000179c00 : rol bl, 0xf4 ; lcall [rip + 0x10fff4c2] ; ret
0x0000000000179bf8 : rol bl, 1 ; hlt ; inc dword ptr [rax] ; ret
0x00000000000729ac : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000090e1d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000a016d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000012f67c : rol byte ptr [rax + 0x28], 0 ; ret
0x00000000000380c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000008ea12 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000001556db : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000000963b2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000171900 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000ad918 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000ac62a : rol byte ptr [rax + rcx*2], 0x39 ; ret 0xef75
0x00000000000ce128 : rol byte ptr [rax + rcx*2], 0x39 ; ret 0xf175
0x00000000001ac6b0 : rol byte ptr [rax - 5], 1 ; call rax
0x00000000000a1f3d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000015b3dd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019a001 : rol byte ptr [rax], 1 ; add byte ptr [rax + rdx*4 - 0xf], cl ; call qword ptr [rcx]
0x000000000012795f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000000000105b2b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b20a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001884d5 : rol byte ptr [rax], 1 ; add byte ptr [rdx + rsi*8 - 0x12], dh ; jmp qword ptr [rax]
0x000000000019a21d : rol byte ptr [rax], cl ; add al, dl ; xchg eax, esi ; int1 ; jmp qword ptr [rax]
0x0000000000088912 : rol byte ptr [rax], cl ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000084182 : rol byte ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x0000000000058588 : rol byte ptr [rbp + 0x31], cl ; rol dh, 0x85 ; call 0x21058592
0x00000000000cd3c5 : rol byte ptr [rbp + 0x39], 0xc2 ; je 0xcd3e7 ; ret
0x00000000000908d2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000ba923 : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000000001877ec : rol byte ptr [rbp - 0x179c0000], 0xea ; call rsp
0x00000000000a238d : rol byte ptr [rbp - 0x3f6bf02e], 0xf3 ; ret
0x0000000000100a14 : rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x3945
0x00000000000f8463 : rol byte ptr [rbp - 0x74968b01], 0x35 ; ret 0x2bef
0x00000000001869ec : rol byte ptr [rbp - 0x7aaf0005], 1 ; sti ; call rax
0x00000000000dd8c5 : rol byte ptr [rbx + 0x14801ea], cl ; retf 0x8d48
0x0000000000155b02 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x00000000000ad3a1 : rol byte ptr [rbx + 0x508d01c1], 1 ; add dword ptr [rcx], edi ; retf
0x0000000000114bcf : rol byte ptr [rbx + rdi + 0x71], 1 ; or al, 0x75 ; retf 0x3944
0x00000000001869f4 : rol byte ptr [rbx + rdi*8 - 0x47baf01], 1 ; call rax
0x000000000004569b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000042b7a : rol byte ptr [rbx - 0x248adb07], 1 ; ret
0x00000000000d1a7f : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000010cb67 : rol byte ptr [rbx - 0x47ca817], 1 ; or dword ptr [rdi], ecx ; retf
0x00000000000fa33c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000072b08 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002dd01 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000b36b2 : rol byte ptr [rbx - 0x6bf0c307], cl ; ret 0x6348
0x00000000000c8cd4 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000e1f2d : rol byte ptr [rbx - 0x76b7f708], 1 ; ret 0x830f
0x00000000000b2b32 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000011d8c6 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000a80ef : rol byte ptr [rcx + 0x29], 1 ; ret 0x2948
0x00000000000cef4e : rol byte ptr [rcx + 0x3b], 0x14 ; mov byte ptr [rbx + rbx - 0xd], dh ; ret
0x00000000001048a8 : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x00000000000fc786 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x00000000000a0481 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000100a16 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3945
0x00000000000a016e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000008cd75 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000892b7 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret
0x000000000008ce2b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000162e19 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xd349
0x000000000016310d : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x0000000000053764 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000000ce810 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x00000000000a19ce : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xa19a0 ; ret
0x0000000000042c4f : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x00000000001139fa : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000c9dea : rol byte ptr [rcx + rdi - 0x3f], 0xf ; xchg eax, esi ; ret 0xd009
0x000000000004ec7a : rol byte ptr [rcx - 0x45], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004f2fa : rol byte ptr [rcx - 0x47], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000163118 : rol byte ptr [rcx - 0xa], cl ; ret 0x7407
0x0000000000186514 : rol byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00000000000b2b12 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000018b05d : rol byte ptr [rcx], 0 ; xchg eax, esp ; js 0x18b060 ; call qword ptr [rax]
0x000000000008cdb2 : rol byte ptr [rcx], 0x38 ; adc al, 7 ; je 0x8cdb8 ; ret
0x00000000000d1fdf : rol byte ptr [rcx], 0x39 ; retf 0xeb7f
0x000000000004534a : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x45349 ; xor eax, eax ; ret
0x000000000004542a : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x45429 ; xor eax, eax ; ret
0x0000000000022906 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000000444a2 : rol byte ptr [rcx], 0x5b ; ret
0x00000000000f991b : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000444b2 : rol byte ptr [rcx], 0x80 ; js 0x444c1 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000002b2ab : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000005ce1f : rol byte ptr [rcx], 0x83 ; sti ; dec dword ptr [rax - 0x77] ; retf 0x850f
0x00000000000de111 : rol byte ptr [rcx], 0x89 ; add edi, dword ptr [rcx] ; retf 0x840f
0x000000000006edbd : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000000d1a44 : rol byte ptr [rcx], 0xc0 ; ret
0x0000000000043902 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000f2637 : rol byte ptr [rcx], 0xd9 ; ret 0x3941
0x00000000000a0808 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000001a3c30 : rol byte ptr [rcx], 0xf6 ; jmp qword ptr [rbx]
0x00000000000e755c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000018a43c : rol byte ptr [rdi + 0x62b40001], 0xf6 ; call rsp
0x00000000000fa70d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001869dc : rol byte ptr [rdi - 0x78af0005], 1 ; sti ; call rax
0x000000000018d738 : rol byte ptr [rdi], 0 ; add ah, al ; jb 0x18d72f ; call qword ptr [rax]
0x00000000000b2b72 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000b2b22 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e125f : rol byte ptr [rdx], 0xe9 ; retf 0xfff5
0x00000000000b63dd : rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x00000000000fa5dd : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000001869e4 : rol byte ptr [rsi - 0x79af0005], 1 ; sti ; call rax
0x00000000000b2b62 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001462ed : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000156255 : rol ch, 1 ; jns 0x156234 ; retf 0xead3
0x00000000001563a5 : rol ch, 1 ; jns 0x156384 ; retf 0xead3
0x00000000001564f5 : rol ch, 1 ; jns 0x1564d4 ; retf 0xead3
0x0000000000156645 : rol ch, 1 ; jns 0x156624 ; retf 0xead3
0x0000000000156795 : rol ch, 1 ; jns 0x156774 ; retf 0xead3
0x00000000001568e5 : rol ch, 1 ; jns 0x1568c4 ; retf 0xead3
0x0000000000156a35 : rol ch, 1 ; jns 0x156a14 ; retf 0xead3
0x0000000000156b85 : rol ch, 1 ; jns 0x156b64 ; retf 0xead3
0x0000000000156cd5 : rol ch, 1 ; jns 0x156cb4 ; retf 0xead3
0x0000000000156e25 : rol ch, 1 ; jns 0x156e04 ; retf 0xead3
0x0000000000156f75 : rol ch, 1 ; jns 0x156f54 ; retf 0xead3
0x00000000001570c5 : rol ch, 1 ; jns 0x1570a4 ; retf 0xead3
0x0000000000157215 : rol ch, 1 ; jns 0x1571f4 ; retf 0xead3
0x0000000000157365 : rol ch, 1 ; jns 0x157344 ; retf 0xead3
0x00000000001574b5 : rol ch, 1 ; jns 0x157494 ; retf 0xead3
0x0000000000157925 : rol ch, 1 ; jns 0x157904 ; retf 0xead3
0x0000000000157aa5 : rol ch, 1 ; jns 0x157a84 ; retf 0xead3
0x0000000000157c25 : rol ch, 1 ; jns 0x157c04 ; retf 0xead3
0x0000000000157da5 : rol ch, 1 ; jns 0x157d84 ; retf 0xead3
0x0000000000157f25 : rol ch, 1 ; jns 0x157f04 ; retf 0xead3
0x00000000001580a5 : rol ch, 1 ; jns 0x158084 ; retf 0xead3
0x0000000000158225 : rol ch, 1 ; jns 0x158204 ; retf 0xead3
0x00000000001583a5 : rol ch, 1 ; jns 0x158384 ; retf 0xead3
0x0000000000158525 : rol ch, 1 ; jns 0x158504 ; retf 0xead3
0x00000000001586a5 : rol ch, 1 ; jns 0x158684 ; retf 0xead3
0x0000000000158825 : rol ch, 1 ; jns 0x158804 ; retf 0xead3
0x00000000001589a5 : rol ch, 1 ; jns 0x158984 ; retf 0xead3
0x0000000000158b25 : rol ch, 1 ; jns 0x158b04 ; retf 0xead3
0x0000000000158ca5 : rol ch, 1 ; jns 0x158c84 ; retf 0xead3
0x0000000000158e25 : rol ch, 1 ; jns 0x158e04 ; retf 0xead3
0x000000000015575f : rol ch, 1 ; std ; xlatb ; ret
0x00000000001594d6 : rol ch, cl ; std ; xlatb ; ret
0x000000000015977f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x0000000000172a40 : rol cl, 0xc2 ; ret
0x00000000000b6c87 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x000000000005858b : rol dh, 0x85 ; call 0x2105858f
0x000000000017890c : rol dh, 1 ; int1 ; jmp qword ptr [rax]
0x000000000010cec7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000b2abc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000015a08c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000000a0428 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000113842 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000141100 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000188255 : rol dword ptr [rax], 0 ; and al, 0xa0 ; out dx, al ; inc dword ptr [rax] ; ret 0
0x000000000019a0bd : rol dword ptr [rax], 1 ; add al, dh ; nop ; int1 ; call qword ptr [rcx]
0x00000000001884fd : rol dword ptr [rax], 1 ; add byte ptr [rbp + rsi*8 - 0x12], al ; call rax
0x000000000006b960 : rol dword ptr [rax], 1 ; ret
0x000000000019a345 : rol dword ptr [rax], cl ; add al, ch ; wait ; int1 ; jmp rbx
0x000000000019a299 : rol dword ptr [rax], cl ; add byte ptr [rax + rbx*4], dl ; int1 ; jmp qword ptr [rcx]
0x000000000019a2d1 : rol dword ptr [rax], cl ; add byte ptr [rcx + rbx*4 - 0xf], ch ; jmp rsi
0x00000000000a5593 : rol dword ptr [rbp + 0x29], 1 ; retf
0x00000000000906b4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000090b57 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x0000000000090b86 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x000000000008b77e : rol dword ptr [rbp + 0xf], 0xb6 ; retf
0x0000000000155753 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000159223 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000008cd80 : rol dword ptr [rbp - 0x7c], 0xca ; jne 0x8cd67 ; ret
0x000000000002923b : rol dword ptr [rbx - 0x47cf81d], cl ; add dword ptr [rax + 0x63], ecx ; retf
0x0000000000065402 : rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000161096 : rol dword ptr [rcx + 0xf], 0x93 ; ret 0x2045
0x0000000000162ac5 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000000d96df : rol dword ptr [rcx + rcx*2], 0x39 ; retf
0x00000000000d7582 : rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x840f
0x00000000000508ee : rol dword ptr [rcx + rdi - 0x39], 0x77 ; fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x00000000001180e6 : rol dword ptr [rcx + rdi], 0xbc ; ret
0x00000000000f3537 : rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000ad3a3 : rol dword ptr [rcx], 0x8d ; push rax ; add dword ptr [rcx], edi ; retf
0x00000000001aa099 : rol dword ptr [rcx], 1 ; add byte ptr [rdx + rdx*8 - 9], ah ; call rax
0x0000000000027816 : rol dword ptr [rcx], 9 ; retf 0x394c
0x000000000006efc9 : rol dword ptr [rcx], cl ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000001aa351 : rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*8 - 9], bh ; call qword ptr [rdx]
0x000000000009d499 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001a3cfa : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x00000000000358f5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000015946e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000155e05 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x000000000008395c : rol ebx, 0x66 ; nop ; lea rax, [rdx - 0x10] ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008395b : rol r11d, 0x66 ; nop ; lea rax, [rdx - 0x10] ; ret
0x00000000000358f4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000108342 : ror ax, 8 ; ret
0x0000000000075045 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x0000000000132a34 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000358f6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000164488 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000090702 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90749 ; add rax, rdi ; ret
0x00000000000b2102 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xb2149 ; add rax, rdi ; ret
0x0000000000096267 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000b27dc : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000000966ee : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000073c9e : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000000dd8d6 : ror byte ptr [rax + 0x29], cl ; retf 0xf66
0x00000000000ede6f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xedea7 ; ret
0x00000000001039c8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000e755e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000b50a7 : ror byte ptr [rax + 0x39], 1 ; ret
0x00000000000e78ad : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x00000000000d669a : ror byte ptr [rax + 0x39], 1 ; retf 0xf072
0x000000000006e903 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000007d93c : ror byte ptr [rax + 0x48417411], cl ; mov dword ptr [rsi], ecx ; ret
0x00000000001038e8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000cb704 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000005c273 : ror byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x00000000000b700f : ror byte ptr [rax + 0x63], cl ; add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000410cc : ror byte ptr [rax + 0x63], cl ; retf 0x3e7e
0x00000000000a7cc9 : ror byte ptr [rax + 0x63], cl ; retf 0x417e
0x000000000004cbcb : ror byte ptr [rax + 0xf], 0x44 ; ret 0x54e9
0x00000000000b399f : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000104932 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000001193c4 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000312c5 : ror byte ptr [rax + 0xf], 0x44 ; shr cl, 1 ; ret 0xfff0
0x00000000000b49b5 : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x000000000002c8c9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c8ba : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000907ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000090cc8 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000906d2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000155723 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000031e53 : ror byte ptr [rax + 1], 1 ; ret
0x00000000000d71b1 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000096264 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000d2df0 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000003809a : ror byte ptr [rax + 9], 0xd0 ; ret
0x000000000016dd08 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000090e15 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002d6e2 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000007f0f1 : ror byte ptr [rax - 0x39], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000161ac1 : ror byte ptr [rax - 0x3f], 0xe6 ; add ecx, dword ptr [rax + 9] ; retf
0x00000000000577d4 : ror byte ptr [rax - 0x3f], 0xf8 ; add al, byte ptr [rcx + 0x29] ; ret
0x00000000000577ad : ror byte ptr [rax - 0x3f], 0xf8 ; add cl, byte ptr [rax + 0x29] ; ret
0x0000000000100b05 : ror byte ptr [rax - 0x3f], 1 ; loop 0x100b12 ; jmp 0x100ad5
0x00000000000c5d10 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000906c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000906f2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000090bc2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000906e2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000083996 : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000012a78d : ror byte ptr [rax - 0x73], 5 ; retf
0x00000000001253bf : ror byte ptr [rax - 0x75], 0x34 ; and al, 0x48 ; mov edi, ebp ; call rbx
0x00000000000fa091 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c50f1 : ror byte ptr [rax - 0x75], 0x55 ; mov eax, 0x83485874 ; ret 0xc610
0x00000000000baa1f : ror byte ptr [rax - 0x75], 0x74 ; mov byte ptr [rax + 0x4c], 0x89 ; retf 0x8948
0x00000000000be4fb : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000000000011fd27 : ror byte ptr [rax - 0x76b701ab], 1 ; ret 0xc148
0x000000000011fcf3 : ror byte ptr [rax - 0x76b706ab], cl ; retf 0xc148
0x0000000000112f15 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000011e109 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x11e0ab ; xor eax, eax ; pop rbx ; ret
0x00000000001228e8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000089614 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000104842 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000e80fa : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000073ee0 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000016449d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000002c274 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x00000000000797b8 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000b5ed5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000021892 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000032fcd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000b918d : ror byte ptr [rax - 0x77], 1 ; retf 0xc148
0x0000000000121e59 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000011bd7e : ror byte ptr [rax - 0x77], 5 ; retf 0x29d1
0x0000000000082715 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000f29fa : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000077482 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000087bb4 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000de838 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x0000000000038d4e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000425a4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e9c63 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000004454a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000090c22 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000155b32 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000090c02 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000090be2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f0b2d : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000037b20 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000d6bc9 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x0000000000075dea : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000475c0 : ror byte ptr [rax - 0x7d], cl ; jge 0x475cd ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000af3c0 : ror byte ptr [rax - 0x7d], cl ; jge 0xaf3cd ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000b9de8 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d54f1 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016308c : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001630a8 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000009ba96 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000162d8a : ror byte ptr [rax - 0x7d], cl ; ret 0xe940
0x0000000000186568 : ror byte ptr [rax - 5], 1 ; jmp qword ptr [rax]
0x0000000000132b38 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x132b39 ; xor eax, eax ; ret
0x00000000001271ad : ror byte ptr [rax], 0x83 ; js 0x1271b3 ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x000000000009fe34 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000087efc : ror byte ptr [rbp + 0x29], 1 ; retf
0x000000000011f6d5 : ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x0000000000162e24 : ror byte ptr [rbp + 9], cl ; retf 0xf641
0x000000000009b259 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; call rsi
0x000000000009c8d3 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; pop rcx ; ret 0xd
0x000000000009b916 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0xdd0
0x000000000009c89b : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg eax, ecx ; ret 0xd
0x00000000000a269c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000001158ec : ror byte ptr [rbp - 0x77], cl ; ret
0x00000000000540da : ror byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x86e9
0x0000000000120af7 : ror byte ptr [rbx + 0x39441448], 1 ; ror dword ptr [rdi], 1 ; xchg eax, edi ; ret 0x3944
0x000000000015a221 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000001065cf : ror byte ptr [rbx - 0x367ab7ed], 0x74 ; adc al, 0xf6 ; ret 0x7420
0x0000000000186650 : ror byte ptr [rbx - 0x6dbd0005], cl ; sti ; call rdx
0x0000000000178c5c : ror byte ptr [rbx - 0xe], 0xff ; ror byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000178c60 : ror byte ptr [rbx - 0xe], 1 ; jmp rax
0x000000000008737e : ror byte ptr [rbx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000019db48 : ror byte ptr [rbx], 1 ; add dword ptr [rax], eax ; test byte ptr [rbx], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000e76dc : ror byte ptr [rbx], 2 ; add byte ptr [rax + 0x84], bh ; syscall
0x0000000000129a96 : ror byte ptr [rcx + 0x1b803], 0 ; add bl, ch ; retf 0x168b
0x0000000000117f16 : ror byte ptr [rcx + 0x39], 0xd3 ; je 0x117f27 ; ret
0x00000000000e790f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x000000000010860f : ror byte ptr [rcx + 0x39], 1 ; retf
0x00000000000de806 : ror byte ptr [rcx + 0x460f49c8], cl ; int1 ; syscall
0x000000000018c7bc : ror byte ptr [rcx + 2], 0 ; adc al, 0x7f ; cli ; jmp rax
0x0000000000161da5 : ror byte ptr [rcx + 9], 1 ; ret
0x0000000000162acc : ror byte ptr [rcx + 9], cl ; ret
0x0000000000163115 : ror byte ptr [rcx + 9], cl ; rol byte ptr [rcx - 0xa], cl ; ret 0x7407
0x00000000000fe7ba : ror byte ptr [rcx + rcx*4 + 0x4c], 0x24 ; or byte ptr [rax + 0x29], cl ; retf 0xc8e8
0x000000000011f821 : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000075046 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000000c9fcb : ror byte ptr [rcx + rdi - 0x31], 0xf ; xchg eax, esp ; ret 0xd009
0x0000000000033b84 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000087612 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011f7c8 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x00000000000b32d2 : ror byte ptr [rcx - 0x73], 1 ; add al, 0x80 ; ret
0x00000000000ca947 : ror byte ptr [rcx - 0x73], 1 ; je 0xca957 ; add dword ptr [rax - 0x77], ecx ; retf 0x894c
0x0000000000112f59 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000f0484 : ror byte ptr [rcx - 0x77], cl ; enter -0x39bf, 0x40 ; inc dword ptr [rax] ; ret
0x0000000000104bd9 : ror byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000087652 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000d3447 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4940
0x000000000009b67f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000023967 : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfae9
0x00000000000bc24f : ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c4d41 : ror byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x00000000000a1f40 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000b2170 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000f6b3c : ror byte ptr [rcx], 0xd0 ; ret
0x00000000000657ba : ror byte ptr [rdi + 9], cl ; add byte ptr [rbx - 0x7af09608], al ; retf 1
0x000000000002572c : ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x0000000000034f72 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001459ed : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f4ca0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000e711c : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000000000f215d : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000bad71 : ror byte ptr [rdi], 0x48 ; ret 0x8348
0x00000000000380f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00000000000edd77 : ror byte ptr [rdi], 0x49 ; ret 0xfc3
0x0000000000058607 : ror byte ptr [rdi], 0x82 ; ret 0xffe7
0x0000000000113577 : ror byte ptr [rdi], 0x84 ; cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f416c : ror byte ptr [rdi], 0x84 ; jge 0xf4178 ; add byte ptr [rax], al ; call rax
0x000000000006db6d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007551c : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000106219 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007626c : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006cb91 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004c014 : ror byte ptr [rdi], 0x84 ; push rdi ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000021eb1 : ror byte ptr [rdi], 0x84 ; pushfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d67d6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000001136fe : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000deab7 : ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000545cb : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000056bbe : ror byte ptr [rdi], 0x84 ; retf
0x00000000001220fe : ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000b9bce : ror byte ptr [rdi], 0x84 ; retf 0xffdc
0x000000000005ad5f : ror byte ptr [rdi], 0x84 ; retf 0xffea
0x00000000000b47ae : ror byte ptr [rdi], 0x84 ; wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000053cc1 : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; adc al, byte ptr [rax] ; add dh, dh ; ret 0xf40
0x0000000000146bba : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000009a121 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000098736 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000096a67 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000021a26 : ror byte ptr [rdi], 0x85 ; retf
0x0000000000030819 : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000014ea6f : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000014e88f : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x000000000015559d : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000004ea96 : ror byte ptr [rdi], 0x8c ; ret
0x0000000000053a63 : ror byte ptr [rdi], 0x8f ; ret 0x10
0x00000000000c594f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000085b41 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000000def3e : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e969e : ror byte ptr [rdi], 0x94 ; ret 0x33eb
0x00000000001261a5 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000b385e : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x00000000000b95de : ror byte ptr [rdi], 0x94 ; ret 0x8d4c
0x00000000001551de : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000006fe7b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000892b1 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000e9b1b : ror byte ptr [rdi], 0x95 ; ret 0x5ee9
0x000000000006d6a0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000001633ae : ror byte ptr [rdi], 0xb6 ; fisttp dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x00000000000c5d0d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000083993 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000006aeeb : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000de8bf : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000e9e4a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000a00b5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000018df48 : ror byte ptr [rdi], 1 ; add byte ptr [rax], al ; jo 0x18df53 ; jmp qword ptr [rdi]
0x0000000000032fe2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x32fcc ; ret
0x00000000000ce97d : ror byte ptr [rdi], 1 ; ret 0xf039
0x00000000000b4eb3 : ror byte ptr [rdi], 1 ; retf 0xf40
0x00000000000476f2 : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000000000d704f : ror byte ptr [rdi], cl ; lahf ; ret 0xe183
0x00000000000268f3 : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000090c6d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000def39 : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x0000000000162da6 : ror byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x00000000000ac189 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000085b4a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x0000000000034a5c : ror byte ptr [rdx], 1 ; adc eax, 0x6f0f6600 ; ret 0x87e8
0x0000000000188fa4 : ror byte ptr [rip + 0x5d140001], 0xf0 ; call rsp
0x0000000000178ce8 : ror byte ptr [rsi - 0xe], 0xff ; ror byte ptr [rsi - 0xe], 1 ; jmp rax
0x0000000000178cec : ror byte ptr [rsi - 0xe], 1 ; jmp rax
0x000000000018bd8c : ror byte ptr [rsi], 1 ; add al, byte ptr [rax] ; push rdi ; stc ; jmp qword ptr [rax]
0x00000000001787a8 : ror cl, 0xfb ; jmp rax
0x000000000018847c : ror dh, 0 ; add byte ptr [rsi], ah ; out dx, al ; jmp rsp
0x000000000013e617 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000055c34 : ror dword ptr [rax + 0x39], 1 ; ret 0x840f
0x000000000012bf79 : ror dword ptr [rax + 0x39], 1 ; ret 0xf175
0x0000000000129686 : ror dword ptr [rax + 0x39], 1 ; retf 0xbe75
0x00000000000d4048 : ror dword ptr [rax + 0x63], 1 ; add al, 0x96 ; add rax, rsi ; jmp rax
0x0000000000055c31 : ror dword ptr [rax + 0x63], 1 ; ror dword ptr [rax + 0x39], 1 ; ret 0x840f
0x00000000000b9e81 : ror dword ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000c54a1 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000d21ee : ror dword ptr [rax + 0xf], 1 ; retf 0x3948
0x00000000000d5464 : ror dword ptr [rax + 1], 0xca ; jmp 0xd5401
0x00000000000d79e9 : ror dword ptr [rax + 1], 0xca ; jmp 0xd7983
0x0000000000155301 : ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000015543e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x00000000001551e8 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x00000000001067e0 : ror dword ptr [rax + 9], cl ; retf 0x8949
0x00000000000475cb : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000096134 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000096259 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000009641a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000163f6b : ror dword ptr [rax - 0x3f], 0xe9 ; add ecx, dword ptr [rax + 0x39] ; retf 0x1f77
0x0000000000164934 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000000daaea : ror dword ptr [rax - 0x75], 4 ; ret
0x000000000006c96e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000060d9e : ror dword ptr [rax - 0x75], 5 ; ret 0x3530
0x00000000000cd702 : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; retf 0x574
0x000000000011fd0d : ror dword ptr [rax - 0x76b704ab], cl ; ret 0xc148
0x000000000011fd00 : ror dword ptr [rax - 0x76b705ab], 1 ; retf 0xc148
0x00000000000460cb : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000008cb55 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000161f44 : ror dword ptr [rax - 0x77], 1 ; ret
0x00000000000531e0 : ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x0000000000058f2c : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000001636d9 : ror dword ptr [rax - 0x77], 1 ; ret 0x8949
0x000000000011fb33 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000dd878 : ror dword ptr [rax - 0x77], 1 ; retf 0x1f0f
0x0000000000104365 : ror dword ptr [rax - 0x77], 1 ; retf 0x3674
0x00000000000cd6e2 : ror dword ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000008b7cc : ror dword ptr [rax - 0x77], cl ; ret 0x68e9
0x000000000008a24c : ror dword ptr [rax - 0x77], cl ; ret 0x75e9
0x000000000008a00c : ror dword ptr [rax - 0x77], cl ; ret 0x76e9
0x0000000000071d7d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x71d77 ; ret
0x000000000007b21d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x7b217 ; ret
0x0000000000161432 : ror dword ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000045427 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000d1fdc : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x0000000000066065 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000a4ba2 : ror dword ptr [rax - 0x7d], 1 ; ret 0x8b04
0x00000000000b9c4d : ror dword ptr [rax - 0x7d], 1 ; ret 0xf601
0x00000000000f3421 : ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x000000000004b266 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000006319a : ror dword ptr [rax], 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5fbb8
0x0000000000162795 : ror dword ptr [rbp + 0x39], cl ; retf 0x930f
0x000000000011d94e : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0xd285
0x0000000000162c3a : ror dword ptr [rcx + 0x39], 1 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x000000000011d80d : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x000000000008cf0c : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000000d6722 : ror dword ptr [rcx + 0x63], 1 ; push rsp ; xchg eax, ebp ; add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x00000000000dd8d3 : ror dword ptr [rcx + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; retf 0xf66
0x0000000000162bb4 : ror dword ptr [rcx + 9], cl ; ret 0xc148
0x0000000000052b9b : ror dword ptr [rcx - 0x77], 0x14 ; ret
0x000000000015e6c7 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000f8933 : ror dword ptr [rdi], 0x2c ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000f2bbb : ror dword ptr [rdi], 0x47 ; ret 0x3944
0x00000000000a1ac1 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x00000000000bfaa7 : ror dword ptr [rdi], 0x82 ; retf 0
0x000000000015bc48 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015c354 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015c126 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000015d250 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015c0a6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000015c3e4 : ror dword ptr [rdi], 0x85 ; je 0x15c3f4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015bedb : ror dword ptr [rdi], 0x85 ; jno 0x15bef0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015bfa3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004d816 : ror dword ptr [rdi], 0x85 ; ret
0x0000000000062668 : ror dword ptr [rdi], 0x85 ; retf
0x000000000015bc20 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000113887 : ror dword ptr [rdi], 0x87 ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000000c9ded : ror dword ptr [rdi], 0x96 ; ret 0xd009
0x00000000000a081a : ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x0000000000090af5 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000120afd : ror dword ptr [rdi], 1 ; xchg eax, edi ; ret 0x3944
0x00000000000e9e2c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000008cc4b : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000008b725 : ror dword ptr [rdi], cl ; test dword ptr [rax + rax - 0x7cb80000], ebx ; ret 0x4801
0x0000000000089cdd : ror dword ptr [rdi], cl ; test dword ptr [rax + rax - 0x7cb80000], ecx ; ret 0x4801
0x0000000000108343 : ror eax, 8 ; ret
0x0000000000071d7c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x71d78 ; ret
0x000000000007b21c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x7b218 ; ret
0x00000000000f341b : sahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x000000000005548e : sahf ; add byte ptr [rbx], dl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001ad934 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], dh ; add byte ptr [rax], al ; retf 5
0x000000000019a445 : sahf ; int1 ; call qword ptr [rdi]
0x000000000000265a : sahf ; jl 0x25ee ; loop 0x263a ; ret 0x943d
0x0000000000002659 : sahf ; jl 0x25ef ; loop 0x263b ; ret 0x943d
0x0000000000186c08 : sahf ; mov dl, 0xfb ; ljmp [rsi] ; mov dl, 0xfb ; call rsp
0x0000000000156c5e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010c27e : sahf ; ret
0x00000000000b6c4c : sahf ; ret 0x2941
0x0000000000174265 : sahf ; ret 0x38ae
0x000000000012f21e : sahf ; ret 0x8349
0x00000000000a879e : sahf ; ret 0xd
0x000000000004922e : sahf ; ret 0xffff
0x0000000000174d9c : sahf ; retf
0x00000000000024c3 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000f9fa4 : sahf ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000019a810 : sal ah, 0xf1 ; call qword ptr [rax]
0x00000000000a1abc : sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000015a20e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000000e9ea6 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aeee : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006aebb : sal bh, 0xd8 ; ret
0x000000000018e6e0 : sal bh, 0xe9 ; jmp qword ptr [rax]
0x00000000001a9f21 : sal bh, 1 ; call qword ptr [rbx]
0x00000000001a9f0d : sal bh, 1 ; call qword ptr [rcx]
0x0000000000186fa0 : sal bh, 1 ; cld ; jmp qword ptr [rax]
0x000000000008e897 : sal bh, 1 ; ret 0x8000
0x000000000008e757 : sal bh, 1 ; ret 0xc000
0x000000000008e617 : sal bh, 1 ; ret 0xe000
0x000000000008e4d7 : sal bh, 1 ; ret 0xf000
0x000000000008e397 : sal bh, 1 ; ret 0xf800
0x000000000008e257 : sal bh, 1 ; ret 0xfc00
0x000000000008e117 : sal bh, 1 ; ret 0xfe00
0x000000000008dfd7 : sal bh, 1 ; ret 0xff00
0x000000000008de97 : sal bh, 1 ; ret 0xff80
0x000000000008dd57 : sal bh, 1 ; ret 0xffc0
0x000000000008dc17 : sal bh, 1 ; ret 0xffe0
0x000000000008dad7 : sal bh, 1 ; ret 0xfff0
0x000000000008d997 : sal bh, 1 ; ret 0xfff8
0x000000000008d857 : sal bh, 1 ; ret 0xfffc
0x000000000008d717 : sal bh, 1 ; ret 0xfffe
0x00000000001aa09d : sal bh, cl ; call rax
0x0000000000113a2e : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000008ce7c : sal bl, 0xc3 ; nop ; ret
0x00000000000b28bf : sal bl, 1 ; ret
0x000000000002495d : sal byte ptr [rax + rsi + 0x48], 0x83 ; ret
0x00000000000ee04a : sal byte ptr [rbp + 0x13], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000edfaa : sal byte ptr [rbp + 0x13], 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e819a : sal byte ptr [rbp + 0x13], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e891a : sal byte ptr [rbp + 0x13], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c43ba : sal byte ptr [rbp + 0x13], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c446a : sal byte ptr [rbp + 0x13], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f1c4a : sal byte ptr [rbp + 0x13], 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f7d4a : sal byte ptr [rbp + 0x13], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f7c7a : sal byte ptr [rbp + 0x13], 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f72ea : sal byte ptr [rbp + 0x13], 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001329be : sal byte ptr [rbp + 0x13], 1 ; add rsp, 0x38 ; ret
0x00000000000f7381 : sal byte ptr [rbp + 0x14], cl ; mov eax, 0x95 ; syscall
0x00000000000c8ccd : sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x00000000000f70bd : sal byte ptr [rbp + 0x18], 0xb8 ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000e674d : sal byte ptr [rbp + 0x18], 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e669d : sal byte ptr [rbp + 0x18], 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000f721d : sal byte ptr [rbp + 0x18], 0xb8 ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000f863d : sal byte ptr [rbp + 0x18], 0xb8 ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f823d : sal byte ptr [rbp + 0x18], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f86ed : sal byte ptr [rbp + 0x18], 0xb8 ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000f879d : sal byte ptr [rbp + 0x18], 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000c572b : sal byte ptr [rbp + 0x2a], 0xb8 ; ja 0xc5739 ; add byte ptr [rax], al ; syscall
0x00000000000ee51b : sal byte ptr [rbp + 0x2a], 0xb8 ; jb 0xee529 ; add byte ptr [rax], al ; syscall
0x00000000000c0b6b : sal byte ptr [rbp + 0x2a], 0xb8 ; je 0xc0b79 ; add byte ptr [rax], al ; syscall
0x00000000000c568b : sal byte ptr [rbp + 0x2a], 0xb8 ; jne 0xc5699 ; add byte ptr [rax], al ; syscall
0x00000000000ee47b : sal byte ptr [rbp + 0x2a], 0xb8 ; jno 0xee489 ; add byte ptr [rax], al ; syscall
0x00000000000c53fb : sal byte ptr [rbp + 0x2a], 0xb8 ; push 0 ; add byte ptr [rax], al ; syscall
0x0000000000159992 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000001047c1 : sal byte ptr [rbp + 0x2c], 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x000000000018aeac : sal byte ptr [rbp + 0x37940001], 0xf7 ; call rsp
0x000000000013284e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x00000000000e7ef9 : sal byte ptr [rbp + 0x65], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000c70b3 : sal byte ptr [rbp + 0x77], 0xf6 ; ret
0x000000000003229b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007a6a2 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x000000000012aa71 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000006a7e0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000001a4548 : sal byte ptr [rbp + 1], 1 ; add byte ptr [rcx - 0xa], ah ; call qword ptr [rsi]
0x00000000001177eb : sal byte ptr [rbp + 2], 0xf3 ; ret
0x000000000007de1a : sal byte ptr [rbp + 2], 1 ; ret
0x00000000001659fa : sal byte ptr [rbp + 3], cl ; ret
0x0000000000118d99 : sal byte ptr [rbp + 4], 0xf3 ; ret
0x000000000011527a : sal byte ptr [rbp + 5], 1 ; add rsp, 0x18 ; ret
0x00000000000b30d7 : sal byte ptr [rbp + 5], 1 ; add rsp, 0x28 ; ret
0x00000000000ef1a6 : sal byte ptr [rbp + 5], 1 ; add rsp, 0x58 ; ret
0x0000000000122b97 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000012a994 : sal byte ptr [rbp + 6], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103f81 : sal byte ptr [rbp + 7], 1 ; mov eax, 0xca ; syscall
0x0000000000165da5 : sal byte ptr [rbp + 8], 0x5b ; ret
0x000000000011c148 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000011dd41 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000029696 : sal byte ptr [rbp + rcx*4 - 0x7b], 1 ; sal byte ptr [rcx + rcx*4 + 0x41], 0x89 ; ret 0x8ce9
0x00000000000f00b9 : sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000001000b7 : sal byte ptr [rbp + rdx + 0x48], 0x83 ; ret
0x00000000000260f6 : sal byte ptr [rbp + rdx*4 - 0x7b], 1 ; sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x3ce9
0x0000000000028846 : sal byte ptr [rbp + rdx*4 - 0x7b], 1 ; sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x8ce9
0x000000000008cc42 : sal byte ptr [rbp + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x000000000007bddd : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000008cce5 : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000009fb70 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000071d80 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000008cc0a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008a6f2 : sal byte ptr [rbp - 0x16], cl ; or byte ptr [rdi], sil ; ret
0x0000000000127cb6 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000a1aa6 : sal byte ptr [rbp - 0x19], 1 ; xor eax, eax ; ret
0x00000000000cd719 : sal byte ptr [rbp - 0x1c], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ebbb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000c67c8 : sal byte ptr [rbp - 0x24], cl ; xor eax, eax ; ret
0x0000000000032fe7 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e3750 : sal byte ptr [rbp - 0x28], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ef595 : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ef5f6 : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000015575d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x00000000000a1c72 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000155755 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000011ef49 : sal byte ptr [rbp - 0x47], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000015922d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000159225 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000855da : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a30db : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000103f90 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x000000000007cf1c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000f0402 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x000000000011d702 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000f0bd0 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000127062 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x00000000000ae3ba : sal byte ptr [rbx + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011cab2 : sal byte ptr [rbx + rdi + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008cd70 : sal byte ptr [rbx + rdx + 0x41], 0x39 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000011dd8e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x0000000000186ac0 : sal byte ptr [rbx - 0x4caf0005], 0xfb ; jmp rax
0x0000000000178a24 : sal byte ptr [rbx], 1 ; push rax ; xor esi, edx ; call qword ptr [rax]
0x000000000018ae4c : sal byte ptr [rcx + rax - 0x8cf1c00], 1 ; jmp rsp
0x000000000018a014 : sal byte ptr [rcx + rax], 0xd4 ; stc ; cmc ; jmp rax
0x0000000000106b9c : sal byte ptr [rcx + rbx + 0x4c], 0x89 ; retf 0x8949
0x00000000001552fc : sal byte ptr [rcx + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000002969a : sal byte ptr [rcx + rcx*4 + 0x41], 0x89 ; ret 0x8ce9
0x00000000000961ac : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000260fa : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x3ce9
0x000000000002884a : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x8ce9
0x00000000000cfdff : sal byte ptr [rcx], 0xc0 ; movaps xmmword ptr [rdi], xmm0 ; ret
0x0000000000022902 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x00000000001789e4 : sal byte ptr [rcx], 1 ; push rax ; xor edx, esi ; call qword ptr [rax]
0x00000000001039c6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000117f14 : sal byte ptr [rcx], 1 ; ror byte ptr [rcx + 0x39], 0xd3 ; je 0x117f29 ; ret
0x00000000000ed0e9 : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x00000000000e7664 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000018af44 : sal byte ptr [rdi + 0x40940001], 0xf7 ; jmp qword ptr [rax]
0x00000000000c1f30 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a1d56 : sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x00000000001310b8 : sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; ret
0x000000000011d8de : sal byte ptr [rdi + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x0000000000186c98 : sal byte ptr [rdi - 0x48af0005], 0xfb ; jmp rax
0x0000000000186344 : sal byte ptr [rdi], 1 ; sti ; call rax
0x000000000009637b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c1ff7 : sal byte ptr [rdx + rax*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000966f3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000009aef3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000cd6c3 : sal byte ptr [rdx + rdx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000090c6b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001038ec : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000178a04 : sal byte ptr [rdx], 1 ; push rax ; xor dh, dl ; call qword ptr [rax]
0x0000000000178a64 : sal byte ptr [rip + 0x35d0fff2], 0xf2 ; jmp rax
0x0000000000190538 : sal byte ptr [rip - 0x644c0000], 0xea ; call qword ptr [rdx]
0x000000000012c4a7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000012294a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x122968 ; call rax
0x0000000000127d3a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x127d58 ; call rax
0x00000000001283d3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1283f1 ; call rax
0x000000000012477e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1247f4 ; call rax
0x000000000012520e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x125274 ; call rax
0x0000000000104087 : sal byte ptr [rsi + rax + 0x48], cl ; mov edi, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000fde57 : sal byte ptr [rsi + rax*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000127010 : sal byte ptr [rsi + rbp*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000fde31 : sal byte ptr [rsi + rcx + 0x48], 0x89 ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000178ed4 : sal byte ptr [rsi - 0xe], 0xff ; fdiv dword ptr [rsi - 0xe] ; call qword ptr [rax]
0x0000000000178aa4 : sal byte ptr [rsi], 0xf2 ; call rax
0x00000000001177a9 : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x00000000000f0ba1 : sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000085f51 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000f4af0 : sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000000f8d41 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000001028b2 : sal dh, 0x43 ; sbb al, 0x20 ; je 0x1028c8 ; pop rbx ; ret
0x000000000012a444 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000a1c52 : sal dword ptr [rbx + rdx + 0x48], 0x83 ; ret 0x8b04
0x0000000000113a2c : sal dword ptr [rcx], 0xc0 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000010fec8 : sal dword ptr [rcx], cl ; fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000024841 : sal dword ptr [rdi + rdx + 0xf], 0x1f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008aa67 : sal dword ptr [rdx - 0x24], cl ; mov rdx, rax ; jmp 0x8aa02
0x0000000000178f24 : sal dword ptr [rsi - 0xe], 1 ; call rcx
0x0000000000117f19 : sal dword ptr [rsp + rax - 0xd], cl ; ret
0x0000000000089d11 : sal dword ptr [rsp + rbp*8 + 0x44], 0x89 ; retf
0x000000000008b759 : sal dword ptr [rsp + rbp*8 + 0x45], 0x89 ; retf
0x000000000008cde9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x8cde8 ; ret
0x00000000001995b5 : sal eax, cl ; call rdx
0x0000000000189f81 : sal ebp, 0xff ; xchg eax, esp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rsp ; ret
0x0000000000189919 : sal ebx, 1 ; call qword ptr [rax]
0x00000000000a0013 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ef74e : sal ebx, 1 ; ret
0x0000000000046f30 : sar bh, 0xff ; mov eax, 1 ; ret
0x00000000001a3a00 : sar bh, 1 ; cmc ; jmp qword ptr [rsi]
0x0000000000101c0b : sar bh, cl ; dec dword ptr [rcx] ; ret
0x0000000000186fac : sar bl, 0xfc ; call qword ptr [rax]
0x00000000001787c9 : sar bl, cl ; jmp rax
0x0000000000113f4f : sar byte ptr [rax + 0x14], cl ; mov rax, rdx ; movsxd rdx, esi ; ret
0x00000000000f8c92 : sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000c414f : sar byte ptr [rax + 0x3d], cl ; syscall
0x000000000012f422 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e637 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00000000000828b5 : sar byte ptr [rax + 8], 0xe9 ; ret
0x00000000000758cc : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000d1b65 : sar byte ptr [rax], 0xe ; je 0xd1b06 ; ret
0x0000000000178b18 : sar byte ptr [rax], 0xf2 ; call rax
0x0000000000189714 : sar byte ptr [rax], 1 ; add byte ptr [rax + rax*4 - 0xd], dh ; jmp rsp
0x00000000000f6d23 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x000000000017c920 : sar byte ptr [rbx - 6], 1 ; call qword ptr [rax - 0x2f000586]
0x000000000017c900 : sar byte ptr [rbx - 6], 1 ; call rax
0x000000000017c908 : sar byte ptr [rbx - 6], 1 ; jmp qword ptr [rax]
0x0000000000117eed : sar byte ptr [rcx], 0x4f ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x000000000015518e : sar byte ptr [rcx], 0xc8 ; jle 0x1551d0 ; movsxd rax, ecx ; ret
0x0000000000186348 : sar byte ptr [rcx], 1 ; sti ; call rax
0x000000000002acc6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x0000000000002c35 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x0000000000089365 : sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x000000000018622c : sar byte ptr [rip + 0x3050fffb], 0xfb ; call qword ptr [rax]
0x0000000000084767 : sar byte ptr [rsi + 0x26], 0x85 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000d2132 : sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd214d
0x0000000000104418 : sar byte ptr [rsi + 0x80], cl ; mov eax, r9d ; syscall
0x0000000000174bff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000017b810 : sar dh, 0xf9 ; call rax
0x00000000000eaa16 : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000c5bf5 : sar dword ptr [rax + 0x40], 1 ; ret
0x000000000015d583 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x15d58e ; ret
0x00000000001180d6 : sar dword ptr [rcx], 0xbc ; ret
0x0000000000159d69 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000033b58 : sar eax, 0x10 ; ret
0x0000000000034219 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000edd48 : sar eax, 0x1f ; pop rbx ; ret
0x000000000012eb34 : sar eax, 0x1f ; ret
0x0000000000033b08 : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x000000000003455a : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000033e3d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003c39 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000728ec : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000075446 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000073019 : sar eax, 2 ; ret
0x000000000010821d : sar eax, 6 ; ret
0x00000000001787c5 : sar ebx, 1 ; inc eax ; sar bl, cl ; jmp rax
0x0000000000174963 : sar ecx, 1 ; jnp 0x174924 ; ret
0x0000000000038044 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000038057 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000072992 : sar edx, 2 ; sub eax, edx ; ret
0x00000000001150dc : sar edx, 4 ; add edx, 1 ; syscall
0x0000000000090e17 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000015e1d3 : sar esi, 1 ; jg 0x15e203 ; vzeroupper ; ret
0x000000000015e36c : sar esi, 1 ; jg 0x15e39c ; vzeroupper ; ret
0x00000000000728eb : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000034559 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000033e3c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000073018 : sar rax, 2 ; ret
0x000000000010821c : sar rax, 6 ; ret
0x0000000000072991 : sar rdx, 2 ; sub eax, edx ; ret
0x00000000001150db : sar rdx, 4 ; add edx, 1 ; syscall
0x0000000000090e16 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000509d1 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000002735 : sbb ah, cl ; mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x000000000019666c : sbb al, 0 ; add byte ptr [rax], al ; clc ; xchg eax, esi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a9ae0 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001a9d28 : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0xcd ; add dword ptr [rax], eax ; push rax ; retf 0xfff7
0x00000000001a15cc : sbb al, 0 ; add byte ptr [rax], al ; pop rcx ; push rdi ; cmc ; call qword ptr [rax]
0x00000000001af40c : sbb al, 0 ; add byte ptr [rax], al ; retf 4
0x00000000000e74d8 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000015348a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001533e3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000006b9f5 : sbb al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000019e694 : sbb al, 0x17 ; add dword ptr [rax], eax ; clc ; pop rdi ; stc ; call qword ptr [rax]
0x00000000001028b5 : sbb al, 0x20 ; je 0x1028c5 ; pop rbx ; ret
0x00000000001028b4 : sbb al, 0x20 ; je 0x1028c6 ; pop rbx ; ret
0x000000000018fc94 : sbb al, 0x2d ; add byte ptr [rax], al ; call 0x2118e721
0x0000000000001f48 : sbb al, 0x3a ; jrcxz 0x1fc9 ; retf 0x6321
0x0000000000179bd8 : sbb al, 0x3b ; hlt ; call qword ptr [rdi]
0x0000000000003070 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x0000000000197e84 : sbb al, 0x4f ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001a1c34 : sbb al, 0x60 ; cmc ; call qword ptr [rsi]
0x0000000000087170 : sbb al, 0x73 ; or eax, 0x450f4800 ; ret 0xfc3
0x00000000000d3dfd : sbb al, 0x74 ; sub byte ptr [rax - 0x80], al ; call qword ptr [rsi]
0x00000000001875d4 : sbb al, 0x7e ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffea
0x0000000000055c00 : sbb al, 0x89 ; ret 0x2944
0x0000000000175c62 : sbb al, 0x8c ; retf
0x0000000000003baf : sbb al, 0xb ; push rbp ; jg 0x3c24 ; xchg eax, ebp ; retf 0x10bf
0x0000000000197f94 : sbb al, 0xb0 ; add byte ptr [rax], al ; call 0x11197c81
0x00000000000cd133 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000124814 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x0000000000044320 : sbb al, 0xcd ; std ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x0000000000002def : sbb al, 0xec ; clc ; ret
0x00000000001940a5 : sbb al, 0xee ; jmp qword ptr [rcx]
0x00000000001797c5 : sbb al, 0xf4 ; call qword ptr [rax]
0x000000000018639d : sbb al, 0xfb ; jmp qword ptr [rax]
0x0000000000197454 : sbb al, 0xfb ; out dx, al ; call qword ptr [rax]
0x0000000000187005 : sbb al, 0xfd ; jmp qword ptr [rax]
0x000000000018920d : sbb al, 1 ; add ah, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00000000001afd08 : sbb al, 9 ; add byte ptr [rax], al ; retf
0x00000000000f1c4e : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000015366a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018e9c1 : sbb al, byte ptr [rax] ; add byte ptr [rbx + rdx - 0x16], bh ; jmp rdx
0x00000000001138cf : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000019ea69 : sbb al, byte ptr [rcx] ; add ah, al ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019ea05 : sbb al, byte ptr [rcx] ; add byte ptr [rax], cl ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019ea19 : sbb al, byte ptr [rcx] ; add byte ptr [rcx + rdx*4], ah ; hlt ; jmp qword ptr [rcx]
0x000000000018ccbd : sbb al, byte ptr [rcx] ; add byte ptr [rdi + rbp], ah ; std ; jmp qword ptr [rax]
0x0000000000153669 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016509f : sbb al, ch ; and eax, edx ; jmp 0x1650a7
0x00000000000e885c : sbb al, ch ; pop rsi ; retf 0xfffd
0x0000000000080d67 : sbb al, ch ; ret
0x00000000000e50aa : sbb al, dl ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x212d1
0x000000000017a028 : sbb bh, al ; hlt ; call qword ptr [rax]
0x00000000000cd0b7 : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001794dc : sbb bl, bl ; jmp qword ptr [rcx]
0x0000000000179530 : sbb bl, bl ; jmp rax
0x00000000001794d8 : sbb bl, bl ; lcall [rax] ; fcomi st(3) ; jmp qword ptr [rcx]
0x000000000017952c : sbb bl, bl ; lcall [rax] ; fcomi st(3) ; jmp rax
0x000000000008559a : sbb bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001749f2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000001736e5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000086a18 : sbb bl, ch ; ret
0x000000000012a6ff : sbb byte ptr [r14 + 0xd], r14b ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000003320c : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000131d8f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000012a3a1 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000000c1112 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000009f654 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f676 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009f6b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000ff8c3 : sbb byte ptr [r9 - 0x75], r9b ; je 0xff8f6 ; adc byte ptr [rcx - 0x77], al ; ret
0x00000000000bef01 : sbb byte ptr [r9], dil ; or al, 0x7c ; ret 0x850f
0x00000000000e7f8c : sbb byte ptr [rax + 0x101], bh ; syscall
0x00000000000f721f : sbb byte ptr [rax + 0x113], bh ; syscall
0x00000000000f70bf : sbb byte ptr [rax + 0x114], bh ; syscall
0x00000000000ed1af : sbb byte ptr [rax + 0x115], bh ; syscall
0x00000000000f716f : sbb byte ptr [rax + 0x116], bh ; syscall
0x00000000000e669f : sbb byte ptr [rax + 0x11], bh ; syscall
0x00000000000ed25f : sbb byte ptr [rax + 0x11d], bh ; syscall
0x00000000000f863f : sbb byte ptr [rax + 0x120], bh ; syscall
0x00000000000e674f : sbb byte ptr [rax + 0x12], bh ; syscall
0x00000000000f86ef : sbb byte ptr [rax + 0x12b], bh ; syscall
0x00000000000f879f : sbb byte ptr [rax + 0x133], bh ; syscall
0x00000000000ee98f : sbb byte ptr [rax + 0x17], bh ; syscall
0x00000000000f823f : sbb byte ptr [rax + 0x2c], bh ; syscall
0x00000000000f7f6f : sbb byte ptr [rax + 0x2d], bh ; syscall
0x000000000007db41 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000004b3ae : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000fe62c : sbb byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000001185b1 : sbb byte ptr [rax + 0x39], cl ; retf
0x00000000001007bb : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000007f52d : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x00000000000f893f : sbb byte ptr [rax + 0x45], bh ; syscall
0x00000000000f89ef : sbb byte ptr [rax + 0x46], bh ; syscall
0x0000000000131d90 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000ef2d7 : sbb byte ptr [rax + 0x65], bh ; syscall
0x00000000000f700f : sbb byte ptr [rax + 0xe8], bh ; syscall
0x000000000008588c : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000012a3a2 : sbb byte ptr [rax + 1], bh ; ret
0x000000000008cf34 : sbb byte ptr [rax + 1], cl ; clc ; mov qword ptr [rdi], rdx ; ret
0x00000000000365c9 : sbb byte ptr [rax + 1], cl ; ret
0x000000000005bf2e : sbb byte ptr [rax + 1], cl ; ret 0x14c
0x00000000001027d0 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000047660 : sbb byte ptr [rax - 0x39], cl ; ret
0x0000000000056cfc : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000011daeb : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000072acf : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; retf 0xffb8
0x00000000000d0c6b : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000132857 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000000b92e8 : sbb byte ptr [rax - 0x76a7dbbc], cl ; ret
0x00000000000805a2 : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call rsi
0x00000000001069bf : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006f81a : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000025544 : sbb byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000011bf0b : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000000a2a00 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000007b461 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000826e5 : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000d2fd1 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000878dd : sbb byte ptr [rax - 0x77], cl ; ret 0x14d
0x000000000011e1d2 : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002e35f : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000100329 : sbb byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000b49e2 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000f4b15 : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc3489325
0x00000000000c1113 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2c4e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000057419 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000009a90 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x00000000000de731 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001a62bc : sbb byte ptr [rax], al ; add byte ptr [rax], al ; xchg rax, rbx ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x00000000001450ee : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000117ca0 : sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077486 : sbb byte ptr [rax], al ; setne al ; ret
0x00000000000024c4 : sbb byte ptr [rax], cl ; ret 0x5576
0x000000000009f655 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f677 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009f6b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000006a6a8 : sbb byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001a3c90 : sbb byte ptr [rbp + 1], ch ; add byte ptr [rdx + rax - 0xa], cl ; jmp qword ptr [rbx]
0x000000000011cdc7 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x000000000011f84b : sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x00000000001a50e8 : sbb byte ptr [rbp - 0xa], cl ; call rdx
0x00000000001177e9 : sbb byte ptr [rbp - 0xcfd8a40], al ; ret
0x00000000001007b8 : sbb byte ptr [rbx + 0x39481876], cl ; retf 0x840f
0x0000000000123bdc : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e7a75 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000082728 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000076af8 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004acd9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000117e82 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000038ce7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000824f8 : sbb byte ptr [rbx + rsi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cb77 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000f994a : sbb byte ptr [rbx - 0x6f3cff00], al ; ret
0x0000000000186398 : sbb byte ptr [rbx], 0xfb ; call rax
0x00000000001025ee : sbb byte ptr [rbx], ch ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000ff659 : sbb byte ptr [rbx], cl ; pop rsi ; sbb dh, dh ; ret
0x000000000016472e : sbb byte ptr [rcx + 0x21], cl ; ret
0x0000000000115dfc : sbb byte ptr [rcx + 0x21ce09d6], cl ; retf 0x7880
0x000000000011f6d2 : sbb byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x0000000000048b0e : sbb byte ptr [rcx + 0x39], cl ; ret
0x000000000007238a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000007edbe : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000001a1b90 : sbb byte ptr [rcx + rax], cl ; cmp al, 0x5f ; cmc ; jmp qword ptr [rcx]
0x0000000000074d6e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000077a97 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2c78 : sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x000000000011ff01 : sbb byte ptr [rcx - 0x3f], cl ; jmp 0xffffffffcb9b4020
0x00000000000cf226 : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000ff8c4 : sbb byte ptr [rcx - 0x75], cl ; je 0xff8f5 ; adc byte ptr [rcx - 0x77], al ; ret
0x00000000000c057e : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011fd0a : sbb byte ptr [rcx - 0x77], al ; ror dword ptr [rax - 0x76b704ab], cl ; ret 0xc148
0x0000000000048e4c : sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000000a7906 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000001247eb : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x00000000000353c1 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000ed099 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000bef02 : sbb byte ptr [rcx], bh ; or al, 0x7c ; ret 0x850f
0x00000000000cc4a3 : sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000838fa : sbb byte ptr [rcx], cl ; ret 0xfe9
0x00000000001a0090 : sbb byte ptr [rcx], dh ; add dword ptr [rax], eax ; mov edi, gs ; hlt ; jmp qword ptr [rcx]
0x00000000000f8461 : sbb byte ptr [rcx], dh ; rol byte ptr [rbp - 0x74968b01], 0x35 ; ret 0x2bef
0x0000000000082713 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000001027fb : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000b610e : sbb byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; retf 0xffff
0x0000000000144a2d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010e553 : sbb byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000006aeb8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000011d991 : sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000003043f : sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000003320d : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000120b0c : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000000209f : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000000b7de2 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a0990 : sbb byte ptr [rdx], bh ; add dword ptr [rax], eax ; jl 0x1a09b0 ; cmc ; jmp qword ptr [rcx]
0x000000000012a700 : sbb byte ptr [rsi + 0xd], dh ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000005fa8 : sbb byte ptr [rsi + 5], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f9932 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000f9931 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000186ff9 : sbb ch, bh ; jmp qword ptr [rax + 0x20fffd19]
0x0000000000084126 : sbb ch, byte ptr [rax] ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cc4a0 : sbb cl, al ; cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000b2eca : sbb cl, byte ptr [rax + 1] ; retf 0x8948
0x000000000011d8f5 : sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000b5e85 : sbb cl, byte ptr [rax - 0x77] ; retf 0x8348
0x00000000000e7adc : sbb cl, byte ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e36e5 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d5435 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000871d2 : sbb cl, byte ptr [rbp + 0xf480001] ; ret 0xfc3
0x000000000008660d : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x0000000000030394 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000002a47d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000009bedf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000015035d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001524cd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ff4d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000014fa59 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150269 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156ffa : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000015681a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000156c0a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015642a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015302d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015280d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014fcdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000151fed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000015001d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000150339 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001565c9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000150409 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152b4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015232d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000151b0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000152ced : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001501bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014f9ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000014fdad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000156aba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001562da : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001573ea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015028d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014fa7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000151e4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fb1f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fe7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000151f83 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152c83 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001527a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001569bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001572eb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001500ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000152fc3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001522c3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000151de3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152ae3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000156b0b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015632b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fb43 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001049fd : sbb cl, cl ; ret
0x000000000018ad69 : sbb dh, bh ; jmp qword ptr [rax]
0x00000000001997b1 : sbb dh, cl ; call qword ptr [rax]
0x00000000000ff65c : sbb dh, dh ; ret
0x000000000010100a : sbb dh, dh ; ret 0x7508
0x00000000000035d6 : sbb dl, 0xcd ; retf
0x00000000000343c8 : sbb dl, byte ptr [rip + 0x7e0f6600] ; ret 0xd089
0x000000000018b20c : sbb dl, cl ; add dword ptr [rax], eax ; push rsp ; retf
0x0000000000153788 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cd0f3 : sbb dword ptr [rax + 1], edi ; ret
0x0000000000083946 : sbb dword ptr [rax - 0x73], ecx ; clc ; ret
0x000000000011eb0e : sbb dword ptr [rax - 0x75], ecx ; push rbp ; add byte ptr [rdi], cl ; retf 0x1089
0x000000000012e994 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000066712 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000153711 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153789 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e608 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f7894 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000009400e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e0683 : sbb dword ptr [rbp + rbp + 0x58b4800], edx ; retf 0x2d87
0x000000000003a803 : sbb dword ptr [rbx + 0x63480013], ecx ; ret 0xc749
0x00000000000a0a2e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x00000000000dba7a : sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x0000000000175f9d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000084fe4 : sbb dword ptr [rbx], esi ; add byte ptr [rax], al ; je 0x84ff7 ; ret
0x00000000000828b1 : sbb dword ptr [rbx], esi ; add byte ptr [rbp - 0x16f78740], al ; ret
0x000000000004a45b : sbb dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x00000000001156b6 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x000000000018cca5 : sbb dword ptr [rcx], eax ; add ah, al ; std ; jmp rsp
0x000000000019e961 : sbb dword ptr [rcx], eax ; add byte ptr [rax + rdx*4 - 0xc], bl ; jmp qword ptr [rcx]
0x000000000019e975 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x70], bh ; hlt ; jmp qword ptr [rcx]
0x000000000019e89d : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x72], al ; hlt ; jmp qword ptr [rcx]
0x00000000000f6e37 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000009d60e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001ccb : sbb dword ptr [rdx + 0x55], esp ; je 0x1cfd ; ret
0x0000000000051b9e : sbb dword ptr [rdx + rdx*8 - 0x7cb6c28c], eax ; ret 0xf01
0x000000000018bf4d : sbb dword ptr [rdx], eax ; add byte ptr [rsi + rcx*4 - 7], ah ; call qword ptr [rax]
0x0000000000179b54 : sbb dword ptr [rip + 0x3329fff4], edi ; hlt ; jmp qword ptr [rbx]
0x000000000005350f : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000000f16a3 : sbb dword ptr [rsi], eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000014dfcc : sbb eax, -1 ; ret
0x0000000000179c04 : sbb eax, 0x10fff4c2 ; ret
0x0000000000179c0c : sbb eax, 0x1dfff4c2 ; ret 0xfff4
0x00000000001654f0 : sbb eax, 0x25138b ; jne 0x1654e0 ; pop rbx ; ret
0x00000000000f94d1 : sbb eax, 0x2bae8a ; pop rbx ; ret
0x000000000002d652 : sbb eax, 0x2e058b48 ; ret 0x38
0x00000000001749f3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x00000000000cd3b2 : sbb eax, 0x3945f631 ; ret 0xf40
0x00000000000ec9bb : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x000000000008622f : sbb eax, 0x48000afe ; cmovne eax, edx ; ret
0x000000000009bf69 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000179c10 : sbb eax, 0x58fff4c2 ; ret
0x000000000009d6cd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000002d51e : sbb eax, 0x5a058b48 ; ret
0x000000000002d602 : sbb eax, 0x76058b48 ; ret 0x38
0x000000000004ea4f : sbb eax, 0x89480036 ; ret 0x2948
0x0000000000144c6e : sbb eax, 0x894d0000 ; retf
0x00000000000f4091 : sbb eax, 0x8b480009 ; xor al, ch ; retf 0xfff7
0x0000000000002ec1 : sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x0000000000179c1c : sbb eax, 0x98fff4c2 ; ret
0x000000000019ece1 : sbb eax, 0x9adc0001 ; hlt ; jmp qword ptr [rcx]
0x000000000019ecf5 : sbb eax, 0x9af80001 ; hlt ; call qword ptr [rcx]
0x000000000019ed55 : sbb eax, 0x9c680001 ; hlt ; jmp qword ptr [rcx]
0x000000000019ed69 : sbb eax, 0x9c840001 ; hlt ; jmp qword ptr [rcx]
0x00000000000f2039 : sbb eax, 0x9f0f30ff ; ret 0x8545
0x0000000000070347 : sbb eax, 0xc2890000 ; jmp 0x702e1
0x000000000002d5b6 : sbb eax, 0xca058b48 ; ret 0x38
0x0000000000179be0 : sbb eax, 0xe0fff4c2 ; ret 0xfff4
0x0000000000002d5e : sbb eax, 0xe9a3d0b9 ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x0000000000179c2c : sbb eax, 0xfff4c2 ; ret
0x000000000004b244 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000153531 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001535a9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018eb0d : sbb eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; call qword ptr [rdx]
0x00000000000f1d11 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a78ec : sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x35], cl ; retf 0xcba
0x0000000000093dbe : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012c7d4 : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x16efdbac], cl ; ret
0x00000000000c414c : sbb eax, dword ptr [rbp + 0x31] ; sar byte ptr [rax + 0x3d], cl ; syscall
0x0000000000160614 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x000000000019eaf1 : sbb eax, dword ptr [rcx] ; add ah, cl ; xchg eax, ebx ; hlt ; jmp qword ptr [rsi]
0x00000000000f7a41 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001891cd : sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rbx*4 - 0xf], ah ; jmp rax
0x000000000010e1fc : sbb eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000d1a7e : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004569a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000155d87 : sbb eax, eax ; or eax, 1 ; ret
0x00000000001600d5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001650a9 : sbb eax, edx ; jmp 0x1650ad
0x0000000000188ec1 : sbb eax, esi ; call rsp
0x0000000000175b08 : sbb ebp, ebx ; retf
0x0000000000186ffd : sbb ebp, edi ; jmp qword ptr [rax]
0x0000000000187a11 : sbb ebx, ebp ; jmp qword ptr [rax]
0x0000000000186355 : sbb ebx, edi ; call qword ptr [rax]
0x00000000000ef7f5 : sbb ebx, esi ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000011cab7 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000003947 : sbb ecx, dword ptr [rdi - 0x7229c81] ; mov gs, word ptr [rbx] ; retf 0x707d
0x00000000000da318 : sbb ecx, dword ptr [rdi] ; mov dh, 0x57 ; cmp dh, dh ; ret 0x7408
0x00000000001659a9 : sbb edi, dword ptr [rcx + 0x1f0fffeb] ; add bl, dh ; ret
0x0000000000187001 : sbb edi, ebp ; jmp qword ptr [rax + 0x20fffd1c]
0x0000000000175899 : sbb edi, ebp ; retf
0x0000000000186399 : sbb edi, ebx ; call rax
0x00000000000bc8a6 : sbb edi, edi ; dec dword ptr [rcx - 0x77] ; ret
0x000000000018c419 : sbb edx, edi ; jmp rsp
0x00000000001158ea : sbb esi, dword ptr [rcx] ; ror byte ptr [rbp - 0x77], cl ; ret
0x0000000000002657 : sbb esi, dword ptr [rdx] ; sahf ; jl 0x25f1 ; loop 0x263d ; ret 0x943d
0x000000000004ec0c : sbb esi, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000cef54 : sbb esi, ebx ; ret
0x00000000001270d3 : sbb esi, ecx ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000018a261 : sbb esi, esi ; call rax
0x000000000018a269 : sbb esi, esi ; jmp rsp
0x0000000000191861 : sbb esp, ebp ; call qword ptr [rbx]
0x00000000001a3d69 : sbb esp, edi ; jmp qword ptr [rdx]
0x0000000000179721 : sbb esp, esi ; jmp qword ptr [rsi]
0x0000000000179720 : sbb r12, rsi ; jmp qword ptr [rsi]
0x000000000018ad68 : sbb r14b, dil ; jmp qword ptr [rax]
0x000000000014dfcb : sbb rax, -1 ; ret
0x0000000000157f4f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000157c4f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000158b4f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001514b2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158e4f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015704e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000018c9a9 : scasb al, byte ptr [rdi] ; cli ; call rsp
0x0000000000127012 : scasb al, byte ptr [rdi] ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000be599 : scasb al, byte ptr [rdi] ; mov rsi, r12 ; call 0xfb016
0x000000000015854f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000175f49 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000015824f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000010802e : scasb al, byte ptr [rdi] ; retf
0x0000000000001d54 : scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000001050c3 : scasb al, byte ptr [rdi] ; stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000187031 : scasb al, byte ptr [rdi] ; std ; call qword ptr [rax - 0x2f000252]
0x000000000018704d : scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000187035 : scasb al, byte ptr [rdi] ; std ; call rax
0x0000000000186cdd : scasb al, byte ptr [rdi] ; sti ; jmp rax
0x00000000000f94d3 : scasb al, byte ptr [rdi] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x000000000000306e : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000015714d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000085910 : scasd eax, dword ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; retf 0x45e8
0x0000000000197e81 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sbb al, 0x4f ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018b8f1 : scasd eax, dword ptr [rdi] ; clc ; call rsp
0x00000000000cef6e : scasd eax, dword ptr [rdi] ; nop ; lea eax, [rsi + 1] ; ret
0x000000000007a68e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000008732e : scasd eax, dword ptr [rdi] ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000198401 : scasd eax, dword ptr [rdi] ; out dx, eax ; call qword ptr [rax]
0x00000000000398db : scasd eax, dword ptr [rdi] ; ret
0x000000000003646e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000074136 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000007edb9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000160773 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x000000000003320f : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000a080b : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a081c : scasd eax, dword ptr [rdi] ; ret 0xffe9
0x000000000005500d : scasd eax, dword ptr [rdi] ; ret 0xfffc
0x00000000000a0819 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000010533d : scasd eax, dword ptr [rdi] ; stc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000085210 : scasd eax, dword ptr [rdi] ; str word ptr [rax - 0x77] ; ret 0xff31
0x0000000000002c83 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6f085 ; ret
0x0000000000174c74 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000002624 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000173eef : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000f99b5 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000e9e48 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000e6a75 : seta al ; pop rbx ; ret
0x00000000001039cc : setae al ; ret
0x00000000000bed38 : setbe al ; movzx eax, al ; pop rbx ; ret
0x00000000000fa340 : setbe al ; ret
0x00000000000b63db : sete al ; add eax, 0x16d ; ret
0x000000000011ae38 : sete al ; add rsp, 8 ; ret
0x000000000011ef32 : sete al ; movzx eax, al ; ret
0x000000000002dd05 : sete al ; ret
0x0000000000034bfa : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000117ef1 : sete dl ; and eax, edx ; ret
0x00000000000c69e6 : sete dl ; jmp 0xc69aa
0x00000000000dc906 : sete dl ; jmp 0xdc8ca
0x00000000000e969f : sete dl ; jmp 0xe96d9
0x00000000000d1a42 : setne al ; add eax, eax ; ret
0x00000000000df828 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x000000000006aee9 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000de8bd : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000f2a92 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035938 : setne al ; movzx eax, al ; ret
0x0000000000072b0c : setne al ; neg eax ; ret
0x0000000000077488 : setne al ; ret
0x000000000008ced5 : setne bh ; test r9b, dil ; jne 0x8cec1 ; ret
0x000000000008cd7e : setne cl ; test r10b, r9b ; jne 0x8cd69 ; ret
0x0000000000028412 : sgdt [rax] ; add byte ptr [rax + 0x29], cl ; retf 0xe383
0x00000000000a1902 : sgdt [rax] ; cmove rax, rdx ; ret
0x0000000000001ba0 : shl byte ptr [rax + 0x38f8d191], 1 ; pop rdx ; ret
0x0000000000155b04 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x00000000001556fb : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000001871dc : shl byte ptr [rax + rax], 0xb4 ; retf
0x0000000000186f8c : shl byte ptr [rax - 0xd6f0005], 0xfc ; jmp rax
0x00000000001556bb : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000001863a8 : shl byte ptr [rax], 0xfb ; call qword ptr [rax]
0x000000000018c05c : shl byte ptr [rax], 1 ; add al, byte ptr [rax] ; and al, 0xb8 ; stc ; jmp rsp
0x000000000018aa24 : shl byte ptr [rbx - 0x215bffff], 0xf6 ; call rsp
0x0000000000002d60 : shl byte ptr [rbx - 0x79ac2f17], 1 ; retf 0xd04f
0x00000000001863e8 : shl byte ptr [rbx - 5], 1 ; call rax
0x0000000000187d7c : shl byte ptr [rcx + 0x2d40000], 1 ; in al, dx ; jmp qword ptr [rax]
0x00000000001863e4 : shl byte ptr [rcx - 5], 1 ; call rax
0x00000000001447ed : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000199e20 : shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rbx]
0x000000000019449c : shl byte ptr [rdx], 1 ; add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; out dx, al ; jmp qword ptr [rcx]
0x0000000000117e94 : shl byte ptr [rsi + 0x3b], 0x16 ; je 0x117ea7 ; ret
0x000000000009fa8f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000033f07 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000008d50b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000015e6c3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000095ba5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000015c5db : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015c5f2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000095f46 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000095f57 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000090ab8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000015c4d1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aba4d : shl byte ptr [rsi - 0x70], 1 ; retf 0xc083
0x00000000001139e7 : shl byte ptr [rsi - 0x77], cl ; push rsp ; add esi, edi ; mov eax, r8d ; ret
0x0000000000162181 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001887b4 : shl cl, 1 ; add byte ptr [rax], al ; test byte ptr [rbx - 0x11], al ; jmp rsp
0x000000000016ef30 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000001747fd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x0000000000110f26 : shl dword ptr [rax], 0xf ; test byte ptr [rdx - 0x77000000], ah ; retf 0x8d48
0x0000000000081106 : shl dword ptr [rcx], 1 ; retf 0x8943
0x000000000012696f : shl dword ptr [rcx], 1 ; retf 0xe281
0x0000000000174ae8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000009fa72 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000008d50f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000a0c0b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x00000000000b2339 : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x0000000000095f42 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000009f8eb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000015c556 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015c60d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000015c5f6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015c5df : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015b09b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015c571 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000904ec : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000090cd8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000015c431 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f6b7b : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x00000000000358b3 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000c5c93 : shl ecx, 1 ; add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x0000000000045c0c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000045b97 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000045b66 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000038096 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000100b07 : shl edx, 2 ; jmp 0x100ad3
0x0000000000114d9c : shl esi, 3 ; call 0x21025
0x0000000000113d6c : shl esi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000045c0b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000045b96 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000045b65 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000358b2 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000038095 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000100b06 : shl rdx, 2 ; jmp 0x100ad4
0x0000000000114d9b : shl rsi, 3 ; call 0x21026
0x0000000000113d6b : shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x000000000019d680 : shr ah, 1 ; jmp qword ptr [rbx]
0x00000000001346d5 : shr al, 0x25 ; retf 0xffee
0x000000000006b859 : shr al, 0x41 ; ret 0
0x000000000011cbd1 : shr al, 0x49 ; retf 0
0x0000000000044b62 : shr al, 0x58 ; retf
0x000000000002a3b3 : shr al, 0x87 ; retf
0x00000000000f4691 : shr al, 0xc9 ; retf
0x000000000012aee4 : shr al, 0xd6 ; cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001740a4 : shr al, cl ; add al, 0x3d ; retf
0x0000000000101c08 : shr al, cl ; xchg eax, edx ; sar bh, cl ; dec dword ptr [rcx] ; ret
0x0000000000103946 : shr ax, 0xe ; and eax, 1 ; ret
0x00000000000fb865 : shr bl, 0xa1 ; call 0x1082a5
0x000000000018ac84 : shr byte ptr [rbx + 0xc840001], 0xf7 ; call rsp
0x00000000001789c0 : shr byte ptr [rbx], 0xf2 ; jmp rax
0x000000000008ebbf : shr byte ptr [rcx], 0xc8 ; ret
0x00000000001944a0 : shr byte ptr [rcx], 1 ; out dx, al ; jmp qword ptr [rcx]
0x00000000000adf9f : shr byte ptr [rcx], 1 ; ret
0x000000000002a038 : shr byte ptr [rcx], cl ; ret
0x0000000000090e1b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000e9e4d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000010533c : shr byte ptr [rdi + 0xf48fff9], 1 ; ret 0xc3f3
0x0000000000175ea7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000178994 : shr byte ptr [rdx], 0xf2 ; call rax
0x000000000018fa48 : shr byte ptr [rdx], 1 ; add byte ptr [rax], al ; hlt ; je 0x18fa40 ; call rsp
0x0000000000186388 : shr byte ptr [rdx], 1 ; sti ; jmp qword ptr [rax]
0x0000000000178858 : shr ch, 1 ; sti ; jmp rax
0x0000000000060e77 : shr cl, 0x99 ; retf
0x00000000001871f9 : shr cl, 1 ; call rsp
0x00000000000312c9 : shr cl, 1 ; ret 0xfff0
0x00000000000613c7 : shr cl, 1 ; retf 0xffbf
0x0000000000066cd5 : shr cl, cl ; lodsb al, byte ptr [rsi] ; retf
0x000000000008b803 : shr cl, cl ; ret 0xfffe
0x0000000000161a1d : shr cl, cl ; retf 0xfff3
0x000000000002c363 : shr cl, cl ; retf 0xfffd
0x00000000001883e9 : shr dh, cl ; call rsp
0x00000000001883f1 : shr dh, cl ; push rsp ; retf 0
0x0000000000121d4b : shr dword ptr [rbx - 4], 0xff ; jmp 0x121d19
0x0000000000107f69 : shr dword ptr [rbx], 0x4b ; adc byte ptr [rax + 1], cl ; retf 0x3948
0x000000000011932b : shr dword ptr [rdx - 0x7cb7ffd7], 1 ; ret
0x00000000001083d8 : shr eax, 0x18 ; ret
0x0000000000033b6b : shr eax, 0x1f ; ret
0x000000000015d49c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x15d4af ; xor eax, eax ; ret
0x0000000000160776 : shr eax, 0x38 ; ret
0x0000000000033e70 : shr eax, 0x3f ; ret
0x00000000000f6b38 : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000a050a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000103947 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000b26cb : shr eax, 2 ; ret
0x000000000015aba3 : shr eax, 2 ; vzeroupper ; ret
0x0000000000037957 : shr eax, 3 ; lea r12, [rbx + rax*8 + 8] ; nop ; call qword ptr [rbx]
0x0000000000113d3e : shr eax, 4 ; and eax, 0x7f ; ret
0x0000000000078102 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000078112 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a0555 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000132a0f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000fa0db : shr eax, cl ; and eax, 1 ; ret
0x00000000000f749d : shr eax, cl ; and eax, 3 ; ret
0x000000000008ccb2 : shr ebx, 0xde ; nop dword ptr [rax] ; ret
0x0000000000187c21 : shr ebx, 1 ; call qword ptr [rax]
0x0000000000131781 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000081790 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000035817 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000187201 : shr ecx, cl ; call qword ptr [rax]
0x0000000000045d1c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000045ca1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000045c70 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000188bd9 : shr edi, cl ; jmp rsp
0x000000000011b5ea : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000f38e9 : shr esi, cl ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187e71 : shr esp, 0xff ; mov al, 0xa7 ; add byte ptr [rax], al ; ret 0xffec
0x0000000000045d1b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000045ca0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000045c6f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000160775 : shr rax, 0x38 ; ret
0x0000000000033e6f : shr rax, 0x3f ; ret
0x00000000000f6b37 : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000b26ca : shr rax, 2 ; ret
0x000000000015aba2 : shr rax, 2 ; vzeroupper ; ret
0x0000000000113d3d : shr rax, 4 ; and eax, 0x7f ; ret
0x000000000011b5e9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000115d71 : sldt word ptr [rax] ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x000000000018df49 : sldt word ptr [rax] ; jo 0x18df52 ; jmp qword ptr [rdi]
0x000000000016e109 : sldt word ptr [rax] ; ret
0x00000000000a1eed : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000019c90d : stc ; add byte ptr [rax], al ; adc byte ptr [rdx], ch ; call rcx
0x0000000000151467 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000188c05 : stc ; add byte ptr [rax], al ; test cl, bl ; out dx, eax ; jmp rsp
0x000000000003e181 : stc ; add ch, cl ; ret
0x00000000000a1fb8 : stc ; add cl, byte ptr [rax + 0x29] ; retf 0x8548
0x000000000011453a : stc ; add cl, byte ptr [rdi + rcx + 0x44] ; retf 0xc683
0x0000000000113844 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000042b7c : stc ; and al, 0x75 ; fcomi st(3) ; ret
0x000000000018bf52 : stc ; call qword ptr [rax]
0x0000000000196416 : stc ; call qword ptr [rcx]
0x000000000017b812 : stc ; call rax
0x000000000018bb3a : stc ; call rsp
0x0000000000003e23 : stc ; clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x000000000018a019 : stc ; cmc ; jmp rax
0x00000000000b36b4 : stc ; cmp al, 0xf ; xchg eax, esp ; ret 0x6348
0x000000000011a92a : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000018bcaa : stc ; dec dword ptr [rax + 0x14000209] ; stc ; call rsp
0x0000000000088df8 : stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000008d4ac : stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000010533e : stc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000001050c4 : stc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000086f20 : stc ; dec dword ptr [rax + 1] ; ret
0x0000000000088168 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f00b5 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000880d5 : stc ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000895d7 : stc ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x000000000010507c : stc ; dec dword ptr [rbx + 0xb491] ; add bh, dh ; ret 0
0x000000000018be2a : stc ; dec dword ptr [rbx + rdx] ; add al, byte ptr [rax] ; push rsp ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000088d2d : stc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000002c9ef : stc ; dec dword ptr [rdi] ; retf 0xd88
0x000000000018be82 : stc ; dec dword ptr [rdx + 0x76240002] ; stc ; jmp qword ptr [rax]
0x000000000018c0b2 : stc ; dec dword ptr [rdx - 0x41bbfffe] ; stc ; call rsp
0x000000000018bb9a : stc ; dec esp ; inc dword ptr [rcx] ; add ah, ah ; adc edi, ecx ; jmp rax
0x000000000018be5a : stc ; inc dword ptr [rax] ; adc al, 2 ; add byte ptr [rax + rsi*2 - 7], ah ; jmp qword ptr [rax]
0x00000000000f7401 : stc ; inc dword ptr [rcx - 0x77] ; retf 0x3074
0x000000000018bf4a : stc ; inc eax ; sbb dword ptr [rdx], eax ; add byte ptr [rsi + rcx*4 - 7], ah ; call qword ptr [rax]
0x000000000018bb32 : stc ; inc eax ; std ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or edi, ecx ; call rsp
0x0000000000003787 : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000156102 : stc ; je 0x1560ce ; lea r10, [r10 + r9] ; jmp r10
0x0000000000157792 : stc ; je 0x15775e ; lea r10, [r10 + r9] ; jmp r10
0x000000000018bb52 : stc ; jmp qword ptr [rax]
0x00000000001a3b2e : stc ; jmp qword ptr [rbx]
0x000000000017b81a : stc ; jmp rax
0x000000000018c062 : stc ; jmp rsp
0x000000000008ceda : stc ; jne 0x8cebc ; ret
0x0000000000174964 : stc ; jnp 0x174923 ; ret
0x0000000000087474 : stc ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000018be4a : stc ; lcall [rbx + rdx + 0x6f740002] ; stc ; call rsp
0x000000000018c0e2 : stc ; ljmp [rbx - 0x3d4bfffe] ; stc ; call rax
0x000000000018bd82 : stc ; ljmp [rsi + rcx + 2] ; add byte ptr [rsi + rdx*2 - 7], dl ; call rax
0x000000000018bd42 : stc ; ljmp [rsp + rcx + 0x4d940002] ; stc ; jmp rax
0x0000000000139fd8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000136d97 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005628e : stc ; or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x0000000000188da9 : stc ; out dx, eax ; jmp rsp
0x000000000018bd5a : stc ; push qword ptr [rbp + rcx + 2] ; add byte ptr [rbx + rdx*2 - 7], dl ; call rsp
0x0000000000045d5d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000a1fdd : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x000000000018bd0a : stc ; push qword ptr [rbx + rcx + 0x47d40002] ; stc ; call rax
0x00000000000571cb : stc ; retf
0x0000000000108e33 : stc ; retf 0x2a
0x00000000000fa0da : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000015da84 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000155e07 : stc ; xlatb ; ret 0xff2d
0x000000000010467c : std ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x00000000000c5ae6 : std ; add byte ptr [rax], al ; jne 0xc5abc ; ret
0x000000000018bb35 : std ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or edi, ecx ; call rsp
0x000000000010fecd : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000043f9d : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x0000000000118c6d : std ; add eax, 0x89483077 ; ret
0x00000000001860fe : std ; call qword ptr [rax - 0x1e00028f]
0x0000000000187032 : std ; call qword ptr [rax - 0x2f000252]
0x000000000018704e : std ; call qword ptr [rax]
0x0000000000185ffa : std ; call qword ptr [rcx + 0x21fffd63]
0x0000000000186092 : std ; call rax
0x0000000000186016 : std ; call rsi
0x000000000018cdca : std ; call rsp
0x000000000004aaf6 : std ; dec dword ptr [rax + 0x29] ; ret
0x000000000018ce72 : std ; dec dword ptr [rax + 0x64000079] ; loop 0x18ce81 ; call qword ptr [rax]
0x000000000018701e : std ; dec dword ptr [rax - 0x53] ; std ; call rax
0x00000000000edb18 : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000044322 : std ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x00000000000c6235 : std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000076a1e : std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001861ae : std ; dec dword ptr [rbx + 0x72] ; std ; jmp rcx
0x000000000018ceaa : std ; dec dword ptr [rdi + rdi*8 - 0x1aec0000] ; std ; call rsp
0x000000000018ccba : std ; dec dword ptr [rdx + rbx] ; add dword ptr [rax], eax ; and al, 0x2f ; std ; jmp qword ptr [rax]
0x00000000001861be : std ; dec ebx ; jb 0x1861c5 ; jmp rcx
0x000000000018619e : std ; dec ebx ; jno 0x1861a5 ; jmp rcx
0x00000000000039c1 : std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000033cdd : std ; fstp st(1) ; ret
0x00000000000d1468 : std ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c642f : std ; in eax, 2 ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x00000000001860ba : std ; inc dword ptr [rax + 0x63] ; std ; call rax
0x000000000018608e : std ; inc dword ptr [rax + 0x66] ; std ; call rax
0x00000000001861ce : std ; inc dword ptr [rax + 0x73] ; std ; jmp rcx
0x000000000018612e : std ; inc dword ptr [rcx - 0x1e00028e] ; jae 0x18613d ; jmp rcx
0x000000000018613e : std ; inc dword ptr [rcx] ; jae 0x186145 ; jmp rcx
0x000000000018611e : std ; inc dword ptr [rcx] ; jb 0x186125 ; jmp rcx
0x0000000000185ff6 : std ; inc dword ptr [rcx] ; movsxd rdi, ebp ; call qword ptr [rcx + 0x21fffd63]
0x0000000000186012 : std ; inc dword ptr [rsi] ; pop rbp ; std ; call rsi
0x000000000018704a : std ; inc eax ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x000000000010f48b : std ; jbe 0x10f494 ; ret
0x0000000000155940 : std ; je 0x1559a9 ; and ch, al ; std ; xlatb ; ret
0x0000000000155a2e : std ; je 0x155a97 ; and ch, al ; std ; xlatb ; ret
0x0000000000186fd2 : std ; jmp qword ptr [rax + 0x20fffd0a]
0x0000000000186fda : std ; jmp qword ptr [rax + 0x20fffd0d]
0x0000000000186fe2 : std ; jmp qword ptr [rax + 0x20fffd10]
0x0000000000186fea : std ; jmp qword ptr [rax + 0x20fffd13]
0x0000000000186ff2 : std ; jmp qword ptr [rax + 0x20fffd16]
0x0000000000186ffa : std ; jmp qword ptr [rax + 0x20fffd19]
0x0000000000187002 : std ; jmp qword ptr [rax + 0x20fffd1c]
0x000000000018609e : std ; jmp qword ptr [rax + 0x20fffd5f]
0x00000000001860a6 : std ; jmp qword ptr [rax + 0x20fffd60]
0x00000000001860ae : std ; jmp qword ptr [rax + 0x20fffd61]
0x00000000001860a2 : std ; jmp qword ptr [rax]
0x00000000001860de : std ; jmp qword ptr [rcx - 0x1e00028f]
0x0000000000185fd2 : std ; jmp qword ptr [rcx]
0x000000000018df4e : std ; jmp qword ptr [rdi]
0x000000000018d572 : std ; jmp qword ptr [rdx]
0x000000000018cd72 : std ; jmp rax
0x00000000001860d2 : std ; jmp rcx
0x0000000000186036 : std ; jmp rsi
0x000000000018ccaa : std ; jmp rsp
0x000000000018620e : std ; lcall [rax + 0x30] ; sti ; jmp qword ptr [rax]
0x000000000018701a : std ; lcall [rbp + 0x48fffdab] ; lodsd eax, dword ptr [rsi] ; std ; call rax
0x000000000018cdc2 : std ; lcall [rbp + rbp + 1] ; add byte ptr [rsi + rdx*4 - 3], ah ; call rsp
0x00000000001860ce : std ; ljmp [rbp - 0x1e00028f] ; jae 0x1860dd ; jmp rcx
0x000000000018cdaa : std ; ljmp [rdx + rbx + 0x75a40001] ; std ; call rax
0x000000000018600e : std ; ljmp [rsi + 0x66] ; std ; inc dword ptr [rsi] ; pop rbp ; std ; call rsi
0x000000000018614e : std ; ljmp [rsi + 0x73] ; std ; jmp rcx
0x00000000001397fb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000011ed5c : std ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x00000000000a2d71 : std ; or eax, 0x358d4800 ; ret 0xdb9
0x00000000001974f5 : std ; out dx, al ; call qword ptr [rcx]
0x00000000001860b6 : std ; push qword ptr [rax + 0x40fffd62] ; movsxd rdi, ebp ; call rax
0x00000000001861fe : std ; push qword ptr [rax - 0x1e00028e] ; jae 0x18620d ; jmp rcx
0x00000000001861de : std ; push qword ptr [rax - 0x1e00028f] ; jae 0x1861ed ; jmp rcx
0x00000000001861ee : std ; push qword ptr [rax] ; jb 0x1861f5 ; jmp rcx
0x0000000000185fca : std ; push qword ptr [rax] ; pop rdi ; std ; push qword ptr [rbp + 0x5c] ; std ; jmp qword ptr [rcx]
0x0000000000185fce : std ; push qword ptr [rbp + 0x5c] ; std ; jmp qword ptr [rcx]
0x00000000001860ee : std ; push qword ptr [rsi + 0x71] ; std ; jmp rcx
0x0000000000186046 : std ; push qword ptr [rsi] ; std ; call rsi
0x000000000009ff93 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000f9eff : std ; ret
0x0000000000081acf : std ; ret 0xffff
0x000000000017589a : std ; retf
0x000000000012e22e : std ; sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000155761 : std ; xlatb ; ret
0x0000000000155759 : std ; xlatb ; ret 0xc085
0x0000000000155c43 : std ; xlatb ; ret 0xe883
0x00000000001595a1 : std ; xlatb ; retf 0xc985
0x0000000000159474 : std ; xlatb ; retf 0xfdc5
0x00000000001594d4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000086292 : sti ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000074213 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000029240 : sti ; add dword ptr [rax + 0x63], ecx ; retf
0x00000000000b6c49 : sti ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000001052d1 : sti ; add eax, 0x450f4800 ; ret 0x66c3
0x000000000018642a : sti ; call qword ptr [rax + 0x20fffb65]
0x00000000001867b2 : sti ; call qword ptr [rax + 0x20fffb8e]
0x000000000018659a : sti ; call qword ptr [rax + 0x20fffb91]
0x0000000000186caa : sti ; call qword ptr [rax + 0x20fffbb5]
0x0000000000186a92 : sti ; call qword ptr [rax + 0x20fffbb8]
0x0000000000186f8e : sti ; call qword ptr [rax - 0x1f00030e]
0x0000000000186542 : sti ; call qword ptr [rax - 0x1f0004af]
0x0000000000186556 : sti ; call qword ptr [rax - 0x1f0004bd]
0x0000000000186376 : sti ; call qword ptr [rax - 0x1f0004db]
0x000000000018650e : sti ; call qword ptr [rax - 0x2f0004c3]
0x0000000000178846 : sti ; call qword ptr [rax]
0x0000000000186876 : sti ; call qword ptr [rdx + 0x12fffb84]
0x000000000018686e : sti ; call qword ptr [rdx + 0x12fffb85]
0x0000000000186866 : sti ; call qword ptr [rdx + 0x12fffb86]
0x000000000018685e : sti ; call qword ptr [rdx + 0x12fffb87]
0x0000000000186686 : sti ; call qword ptr [rdx + 0x22fffb8c]
0x0000000000186b7e : sti ; call qword ptr [rdx + 0x22fffbb3]
0x0000000000186666 : sti ; call qword ptr [rdx]
0x00000000001865e2 : sti ; call qword ptr [rsi + 0x26fffb90]
0x0000000000186ada : sti ; call qword ptr [rsi + 0x26fffbb7]
0x0000000000186602 : sti ; call qword ptr [rsi]
0x0000000000178856 : sti ; call rax
0x000000000018664e : sti ; call rdx
0x00000000001865f2 : sti ; call rsi
0x000000000018671e : sti ; call rsp
0x0000000000186fad : sti ; cld ; call qword ptr [rax]
0x000000000005cd98 : sti ; dec dword ptr [rax - 0x77] ; retf 0x840f
0x000000000005ce22 : sti ; dec dword ptr [rax - 0x77] ; retf 0x850f
0x000000000012e160 : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012f218 : sti ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x000000000006d1bc : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000186a8e : sti ; dec dword ptr [rsi] ; mov dl, 0xfb ; call qword ptr [rax + 0x20fffbb8]
0x000000000018626a : sti ; inc dword ptr [rax + 0x10fffb3d] ; xor bl, bh ; call rax
0x0000000000186372 : sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax - 0x1f0004db]
0x000000000018629e : sti ; inc dword ptr [rax + 0x37] ; sti ; jmp qword ptr [rax]
0x000000000018648e : sti ; inc dword ptr [rax + 0x40fffb57] ; pop rcx ; sti ; jmp qword ptr [rax]
0x0000000000186552 : sti ; inc dword ptr [rax + 0x42] ; sti ; call qword ptr [rax - 0x1f0004bd]
0x000000000018653e : sti ; inc dword ptr [rax + 0x50] ; sti ; call qword ptr [rax - 0x1f0004af]
0x00000000001864ae : sti ; inc dword ptr [rax + 0x57] ; sti ; inc dword ptr [rax] ; pop rcx ; sti ; jmp rax
0x000000000018640e : sti ; inc dword ptr [rax + 0x58] ; sti ; inc dword ptr [rax] ; pop rdx ; sti ; jmp rax
0x0000000000186492 : sti ; inc dword ptr [rax + 0x59] ; sti ; jmp qword ptr [rax]
0x00000000001864f6 : sti ; inc dword ptr [rax + 0x5a] ; sti ; jmp qword ptr [rax]
0x000000000018647a : sti ; inc dword ptr [rax + 0x5d] ; sti ; jmp qword ptr [rax]
0x0000000000186c12 : sti ; inc dword ptr [rax + rdi*4 - 5] ; call rsp
0x00000000001787d6 : sti ; inc dword ptr [rax - 0x29] ; sti ; jmp rax
0x0000000000186562 : sti ; inc dword ptr [rax - 0x2f0004b9] ; sti ; jmp qword ptr [rax]
0x0000000000186382 : sti ; inc dword ptr [rax - 0x2f0004d7] ; sub bh, bl ; jmp qword ptr [rax]
0x0000000000186396 : sti ; inc dword ptr [rax - 0x2f0004e5] ; sbb al, 0xfb ; jmp qword ptr [rax]
0x000000000018634e : sti ; inc dword ptr [rax - 0x3f0004eb] ; sbb ebx, edi ; call qword ptr [rax]
0x0000000000186a9e : sti ; inc dword ptr [rax - 0x49] ; sti ; call rax
0x0000000000186cb6 : sti ; inc dword ptr [rax - 0x4c] ; sti ; call rax
0x00000000001865a6 : sti ; inc dword ptr [rax - 0x70] ; sti ; call rax
0x00000000001867be : sti ; inc dword ptr [rax - 0x73] ; sti ; call rax
0x00000000001869ce : sti ; inc dword ptr [rax - 0x7f] ; sti ; jmp rax
0x000000000017882a : sti ; inc dword ptr [rax] ; fdivp st(3) ; push qword ptr [rax - 0x21] ; sti ; jmp rax
0x0000000000186ca6 : sti ; inc dword ptr [rax] ; mov dh, 0xfb ; call qword ptr [rax + 0x20fffbb5]
0x000000000018649a : sti ; inc dword ptr [rax] ; pop rbp ; sti ; jmp rax
0x00000000001864b2 : sti ; inc dword ptr [rax] ; pop rcx ; sti ; jmp rax
0x0000000000186412 : sti ; inc dword ptr [rax] ; pop rdx ; sti ; jmp rax
0x00000000001863f6 : sti ; inc dword ptr [rax] ; pop rsp ; sti ; jmp rax
0x000000000018633e : sti ; inc dword ptr [rax] ; sti ; call rax
0x0000000000186596 : sti ; inc dword ptr [rax] ; xchg eax, edx ; sti ; call qword ptr [rax + 0x20fffb91]
0x0000000000186216 : sti ; inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x0000000000186e42 : sti ; inc dword ptr [rcx + rbp*4] ; sti ; push qword ptr [rax + rbp*4 - 5] ; jmp rsp
0x000000000018671a : sti ; inc dword ptr [rcx + rdx*4 - 5] ; call rsp
0x0000000000186652 : sti ; inc dword ptr [rdx - 0x6e] ; sti ; call rdx
0x0000000000186882 : sti ; inc dword ptr [rdx] ; cmp ebx, -1 ; jb 0x186815 ; sti ; jmp rdx
0x0000000000186b7a : sti ; inc dword ptr [rdx] ; mov ah, 0xfb ; call qword ptr [rdx + 0x22fffbb3]
0x0000000000186ae6 : sti ; inc dword ptr [rsi - 0x4a] ; sti ; call rsi
0x00000000001865ee : sti ; inc dword ptr [rsi - 0x71] ; sti ; call rsi
0x0000000000186ad6 : sti ; inc dword ptr [rsi] ; mov eax, 0xb796fffb ; sti ; jmp qword ptr [rsi]
0x00000000001865de : sti ; inc dword ptr [rsi] ; xchg eax, ecx ; sti ; call qword ptr [rsi + 0x26fffb90]
0x000000000018cb22 : sti ; inc eax ; adc dword ptr [rcx], eax ; add byte ptr [rsp + rbx*2 - 5], ah ; call rsp
0x00000000001863a6 : sti ; inc eax ; and bl, bh ; call qword ptr [rax]
0x000000000018622a : sti ; inc eax ; cmp eax, 0x3050fffb ; sti ; call qword ptr [rax]
0x0000000000186f0a : sti ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rax]
0x00000000001787a6 : sti ; inc eax ; leave ; sti ; jmp rax
0x00000000001787c6 : sti ; inc eax ; sar bl, cl ; jmp rax
0x0000000000186352 : sti ; inc eax ; sbb ebx, edi ; call qword ptr [rax]
0x000000000018651e : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000017ac98 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001017a2 : sti ; int1 ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000186806 : sti ; jmp qword ptr [rax + 0x10fffb82]
0x000000000018678e : sti ; jmp qword ptr [rax + 0x10fffb8b]
0x0000000000178842 : sti ; jmp qword ptr [rax + 0x10fffbe6]
0x0000000000186a4e : sti ; jmp qword ptr [rax - 0x1f00049c]
0x00000000001787b2 : sti ; jmp qword ptr [rax]
0x0000000000186856 : sti ; jmp qword ptr [rdx + 0x12fffb88]
0x000000000018668a : sti ; jmp qword ptr [rdx]
0x00000000001865e6 : sti ; jmp qword ptr [rsi]
0x00000000001787aa : sti ; jmp rax
0x000000000018667a : sti ; jmp rdx
0x00000000001865ce : sti ; jmp rsi
0x0000000000186742 : sti ; jmp rsp
0x0000000000186c06 : sti ; lcall [rsi + 0x2efffbb2] ; mov dl, 0xfb ; call rsp
0x0000000000186646 : sti ; lcall [rsp + rcx*4 - 0x73d30005] ; sti ; call rdx
0x00000000001863ce : sti ; ljmp [rax + 0x58] ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x0000000000186e8e : sti ; ljmp [rdx - 0x59] ; sti ; call qword ptr [rax]
0x0000000000186c0a : sti ; ljmp [rsi] ; mov dl, 0xfb ; call rsp
0x000000000018664a : sti ; ljmp [rsp + rcx*4] ; sti ; call rdx
0x0000000000058c37 : sti ; loop 0x58c3f ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000139bd8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003b44a : sti ; or dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x000000000010cb6c : sti ; or dword ptr [rdi], ecx ; retf
0x0000000000197455 : sti ; out dx, al ; call qword ptr [rax]
0x00000000001863a2 : sti ; push qword ptr [rax + 0x1f] ; sti ; inc eax ; and bl, bh ; call qword ptr [rax]
0x00000000001862ce : sti ; push qword ptr [rax + 0x2f] ; sti ; push qword ptr [rax] ; xor ebx, edi ; call qword ptr [rax]
0x00000000001865a2 : sti ; push qword ptr [rax + 0x40fffb90] ; nop ; sti ; call rax
0x0000000000186cb2 : sti ; push qword ptr [rax + 0x40fffbb4] ; mov ah, 0xfb ; call rax
0x0000000000186a9a : sti ; push qword ptr [rax + 0x40fffbb7] ; mov bh, 0xfb ; call rax
0x000000000018651a : sti ; push qword ptr [rax + 0x44] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018656e : sti ; push qword ptr [rax + 0x4b] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00000000001864f2 : sti ; push qword ptr [rax + 0x58] ; sti ; inc dword ptr [rax + 0x5a] ; sti ; jmp qword ptr [rax]
0x0000000000186e46 : sti ; push qword ptr [rax + rbp*4 - 5] ; jmp rsp
0x000000000017882e : sti ; push qword ptr [rax - 0x21] ; sti ; jmp rax
0x0000000000186efe : sti ; push qword ptr [rax - 0x57] ; sti ; jmp rax
0x0000000000186996 : sti ; push qword ptr [rax - 0x78] ; sti ; jmp rax
0x000000000017883e : sti ; push qword ptr [rax] ; in eax, 0xfb ; jmp qword ptr [rax + 0x10fffbe6]
0x00000000001863d2 : sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x0000000000186336 : sti ; push qword ptr [rax] ; xor bh, bl ; call qword ptr [rax]
0x000000000018624e : sti ; push qword ptr [rax] ; xor bl, bh ; push rax ; xor ebx, edi ; call rax
0x00000000001862ba : sti ; push qword ptr [rax] ; xor eax, 0x3710fffb ; sti ; jmp rax
0x00000000001862d2 : sti ; push qword ptr [rax] ; xor ebx, edi ; call qword ptr [rax]
0x000000000018693e : sti ; push qword ptr [rbx + rax*4 - 5] ; jmp rsp
0x0000000000186716 : sti ; push qword ptr [rcx + rdx*4 - 0x6ebb0005] ; sti ; call rsp
0x0000000000186886 : sti ; push qword ptr [rdx - 0x7e] ; sti ; jmp rdx
0x0000000000186ae2 : sti ; push qword ptr [rsi + 0x46fffbb6] ; mov dh, 0xfb ; call rsi
0x0000000000186992 : sti ; push rax ; mov bl, bh ; push qword ptr [rax - 0x78] ; sti ; jmp rax
0x00000000001863da : sti ; push rax ; pop rbp ; sti ; call rax
0x0000000000186efa : sti ; push rax ; test eax, 0xa970fffb ; sti ; jmp rax
0x00000000001862da : sti ; push rax ; xor al, 0xfb ; call rax
0x00000000001862f2 : sti ; push rax ; xor bl, bh ; call rax
0x0000000000186252 : sti ; push rax ; xor ebx, edi ; call rax
0x0000000000186236 : sti ; push rax ; xor edi, ebx ; call rax
0x000000000018693a : sti ; push rsp ; cmp ebx, -1 ; je 0x1868ce ; sti ; jmp rsp
0x000000000004d4b1 : sti ; ret
0x00000000000a8741 : sti ; ret 0xd
0x000000000003f5a8 : sti ; ret 0xffbf
0x00000000000f7d6b : sti ; sub rsp, 0x10 ; call 0x103fc7
0x000000000002c3b7 : sti ; test rax, rax ; je 0x2c3c5 ; call rax
0x000000000000236c : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x000000000011388a : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x000000000018ac35 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; or r14b, dil ; jmp rsp
0x0000000000185ed9 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x0000000000174fc4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000000e68b5 : stosb byte ptr [rdi], al ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000087062 : stosb byte ptr [rdi], al ; mov es, word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a036b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001882d1 : stosb byte ptr [rdi], al ; out dx, al ; jmp qword ptr [rax]
0x0000000000188ad1 : stosb byte ptr [rdi], al ; out dx, eax ; call rsp
0x000000000000236f : stosb byte ptr [rdi], al ; ret
0x00000000000fb422 : stosb byte ptr [rdi], al ; ret 0x2b
0x0000000000003786 : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000186cfd : stosb byte ptr [rdi], al ; sti ; jmp rax
0x00000000000c8e31 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0d606], al ; ret 0
0x0000000000090b71 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x0000000000187f0d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test ch, dh ; in al, dx ; call rsp
0x00000000000861c1 : stosd dword ptr [rdi], eax ; add byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000018ac85 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; test byte ptr [rdi + rsi*8], cl ; call rsp
0x00000000000495ac : stosd dword ptr [rdi], eax ; add eax, 0x39490000 ; ret
0x00000000000deab1 : stosd dword ptr [rdi], eax ; int1 ; clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000551ee : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000113a31 : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000165919 : stosd dword ptr [rdi], eax ; mov ecx, 0x1f0fffeb ; add bl, dh ; ret
0x0000000000188ae1 : stosd dword ptr [rdi], eax ; out dx, eax ; jmp qword ptr [rax]
0x00000000001100f1 : stosd dword ptr [rdi], eax ; pop rax ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000081795 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000000000003581c : stosd dword ptr [rdi], eax ; ret
0x0000000000101d81 : stosd dword ptr [rdi], eax ; retf
0x0000000000175fca : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000066711 : stosd dword ptr [rdi], eax ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018701d : stosd dword ptr [rdi], eax ; std ; dec dword ptr [rax - 0x53] ; std ; call rax
0x0000000000187049 : stosd dword ptr [rdi], eax ; std ; inc eax ; scasb al, byte ptr [rdi] ; std ; call qword ptr [rax]
0x0000000000186cf5 : stosd dword ptr [rdi], eax ; sti ; jmp rax
0x0000000000113a30 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000081794 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003581b : stosq qword ptr [rdi], rax ; ret
0x0000000000083d61 : str word ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000085211 : str word ptr [rax - 0x77] ; ret 0xff31
0x0000000000084a0d : str word ptr [rax - 0x77] ; retf 0x92eb
0x00000000001764b1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001abba0 : sub ah, ch ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp eax, edi ; jmp qword ptr [rcx]
0x00000000001a34e4 : sub al, 0 ; add byte ptr [rax], al ; jo 0x1a3558 ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000000f80e7 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018fc51 : sub al, 0 ; add byte ptr [rbp + rdi*2 - 0x16], cl ; call rsi
0x00000000000f2493 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000ef653 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000ef464 : sub al, 0 ; jne 0xef479 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f2b05 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000f243f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000f1eac : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ef4d8 : sub al, 0 ; pop rbx ; ret
0x00000000000f2409 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0bad : sub al, 0 ; ret
0x00000000001a0804 : sub al, 0x10 ; cmc ; call qword ptr [rax]
0x00000000001a00a4 : sub al, 0x31 ; add dword ptr [rax], eax ; test al, 0xef ; hlt ; jmp qword ptr [rcx]
0x00000000000a17a2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000001a13a4 : sub al, 0x44 ; add dword ptr [rax], eax ; cmp byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000012f4cf : sub al, 0x48 ; add esp, 0x18 ; ret
0x0000000000127c50 : sub al, 0x48 ; add esp, 0x28 ; ret
0x0000000000131f0f : sub al, 0x48 ; add esp, 0x38 ; ret
0x00000000001a1504 : sub al, 0x56 ; cmc ; call qword ptr [rax]
0x0000000000003e25 : sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001a1964 : sub al, 0x5c ; cmc ; jmp qword ptr [rcx]
0x00000000000870b0 : sub al, 0x6e ; or eax, 0x450f4800 ; ret 0xfc3
0x00000000001941a4 : sub al, 0x72 ; add byte ptr [rax], al ; test al, 0x20 ; out dx, al ; call rsp
0x000000000015a0b2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000a17a5 : sub al, 0x75 ; pop rax ; ret
0x0000000000104f45 : sub al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000de2b2 : sub al, 0x89 ; ret 0x2de9
0x00000000000d229b : sub al, 0x89 ; ret 0x8348
0x00000000000de432 : sub al, 0x89 ; ret 0xf5e9
0x00000000000d1fda : sub al, 0x89 ; ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x0000000000087308 : sub al, 0x8b ; push rdx ; js 0x87309 ; ret 0
0x0000000000087358 : sub al, 0x8b ; push rdx ; js 0x87359 ; ret 0
0x00000000000873a8 : sub al, 0x8b ; push rdx ; js 0x873a9 ; ret 0
0x00000000000873f8 : sub al, 0x8b ; push rdx ; js 0x873f9 ; ret 0
0x000000000018664c : sub al, 0x8c ; sti ; call rdx
0x0000000000196aa4 : sub al, 0x9b ; add byte ptr [rax], al ; cwde ; fucomip st(6) ; jmp qword ptr [rax]
0x000000000015bc23 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001047c3 : sub al, 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x000000000018b214 : sub al, 0xca ; add dword ptr [rax], eax ; test bl, cl ; idiv edi ; retf 1
0x00000000001147c8 : sub al, 0xe9 ; ret 0xfffc
0x00000000000d22f9 : sub al, 0xe9 ; retf 0xfffa
0x000000000011713c : sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x0000000000116d2d : sub al, 0xf ; xchg eax, ebp ; ret 0xd184
0x00000000001789c9 : sub al, 0xf2 ; jmp qword ptr [rax]
0x000000000019c7a4 : sub al, 0xf8 ; add byte ptr [rax], al ; sub byte ptr [rsi], ah ; jmp rdx
0x000000000018fdad : sub al, 0xfa ; call qword ptr [rdi]
0x00000000000a37e6 : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f7ad1 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001894dd : sub al, 1 ; add byte ptr [rbx + rbp*4 - 0xe], ah ; jmp rax
0x00000000000e4da4 : sub al, 4 ; mov rdi, rbp ; call 0x21087
0x00000000000364e5 : sub al, 7 ; mov rdi, rbp ; call r12
0x00000000001aed50 : sub al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000179d4c : sub al, bh ; hlt ; push qword ptr [rax + rcx*8] ; hlt ; jmp qword ptr [rax]
0x000000000018fa49 : sub al, byte ptr [rax] ; add ah, dh ; je 0x18fa3f ; call rsp
0x00000000001087f2 : sub al, byte ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x0000000000011218 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000003325a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000f7d4e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010bbbe : sub al, byte ptr [rax] ; add ecx, ebp ; retf 0xfffd
0x00000000001100f3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000010edd5 : sub al, byte ptr [rax] ; test byte ptr [rdi], 0x30 ; je 0x10ede9 ; xor eax, eax ; ret
0x0000000000117454 : sub al, byte ptr [rax] ; test eax, eax ; je 0x117467 ; ret
0x0000000000117dc4 : sub al, byte ptr [rax] ; test rax, rax ; je 0x117dd8 ; ret
0x0000000000118d95 : sub al, byte ptr [rax] ; test rax, rax ; jne 0x118da8 ; ret
0x000000000019fa35 : sub al, byte ptr [rcx] ; add al, bh ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000001adbe4 : sub al, byte ptr [rdx] ; add byte ptr [rax], al ; ret 8
0x000000000018c225 : sub al, byte ptr [rdx] ; add byte ptr [rcx + rsi*8 - 7], dl ; call qword ptr [rax]
0x0000000000155fa5 : sub al, ch ; std ; xlatb ; ret
0x0000000000186389 : sub bh, bl ; jmp qword ptr [rax]
0x00000000000ed097 : sub bh, byte ptr [rax + 0x118] ; syscall
0x00000000000c536d : sub bh, byte ptr [rax + 0x69] ; syscall
0x00000000000c53fd : sub bh, byte ptr [rax + 0x6a] ; syscall
0x00000000000ee47d : sub bh, byte ptr [rax + 0x71] ; syscall
0x00000000000ee51d : sub bh, byte ptr [rax + 0x72] ; syscall
0x00000000000c0b6d : sub bh, byte ptr [rax + 0x74] ; syscall
0x00000000000c568d : sub bh, byte ptr [rax + 0x75] ; syscall
0x00000000000c572d : sub bh, byte ptr [rax + 0x77] ; syscall
0x00000000000b49e5 : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000a1796 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000012a661 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012a441 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000089817 : sub byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008a0a6 : sub byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000818a1 : sub byte ptr [rax + 0x29], cl ; retf 0x8348
0x00000000000ce76f : sub byte ptr [rax + 0x39], cl ; ret 0xdb77
0x000000000012a345 : sub byte ptr [rax + 1], bh ; ret
0x0000000000087827 : sub byte ptr [rax + 1], cl ; ret
0x0000000000046565 : sub byte ptr [rax + 1], cl ; ret 0x3d74
0x000000000012a662 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000036467 : sub byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000000cea16 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000000365c4 : sub byte ptr [rax - 0x75], cl ; je 0x365f5 ; sbb byte ptr [rax + 1], cl ; ret
0x00000000001347e4 : sub byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x21237
0x00000000000834a4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000a2baa : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000000f12eb : sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000d9611 : sub byte ptr [rax - 0x77], cl ; ret 0x8945
0x00000000000ea25f : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000006d0a4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000088db3 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x0000000000075915 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000075914 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x00000000000ceba3 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x00000000000327e0 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000089b27 : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000032d19 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x0000000000032d84 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x0000000000032e39 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x0000000000032db6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x0000000000032d6f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x0000000000032dce : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x0000000000032e6f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x0000000000132350 : sub byte ptr [rax - 0x7f], cl ; ret
0x00000000000d3dff : sub byte ptr [rax - 0x80], al ; call qword ptr [rsi]
0x00000000000d67d2 : sub byte ptr [rax*2 - 0x7bf03f7b], al ; ret
0x00000000000d67d1 : sub byte ptr [rax*2 - 0x7bf03f7b], r8b ; ret
0x00000000001049f8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x104a1f ; leave ; ret
0x0000000000046bfd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x46c45 ; leave ; ret
0x00000000001a9a18 : sub byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x00000000001999cc : sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0
0x00000000000ecc54 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000127075 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012f09b : sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000012ee7a : sub byte ptr [rax], al ; mov eax, 0xca ; ret
0x000000000012f67e : sub byte ptr [rax], al ; ret
0x000000000012c4a4 : sub byte ptr [rax], al ; test eax, eax ; je 0x12c4b8 ; xor eax, eax ; ret
0x000000000012f658 : sub byte ptr [rax], al ; test eax, eax ; jne 0x12f671 ; xor eax, eax ; pop rbx ; ret
0x0000000000132b96 : sub byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a179a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a1799 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000cd162 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000021930 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005bf42 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011c8fb : sub byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x0000000000041df7 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000131cd3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000131cd2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000012a393 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000012a3c3 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000000b030d : sub byte ptr [rbx - 0x78f0fa08], al ; retf
0x00000000001ad7dc : sub byte ptr [rbx], al ; add byte ptr [rax], al ; retf 6
0x00000000000a1797 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001a3ba0 : sub byte ptr [rcx + rax], ch ; adc rcx, r15 ; jmp qword ptr [rbx]
0x000000000012a736 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000198a58 : sub byte ptr [rcx - 0x10], bh ; jmp rbx
0x0000000000034cb5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x0000000000030406 : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000056325 : sub byte ptr [rcx - 0x77], cl ; ret 0x894d
0x00000000001a1ce8 : sub byte ptr [rcx - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000186384 : sub byte ptr [rcx], 0xfb ; call rax
0x00000000000ee1a4 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000012a442 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000001938a0 : sub byte ptr [rcx], ch ; add ah, cl ; int1 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001024bf : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011e6cc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000c5114 : sub byte ptr [rdi - 0x76b7000b], bh ; ret 0x8949
0x00000000001a0ea0 : sub byte ptr [rdi], bh ; add dword ptr [rax], eax ; jl 0x1a0ed5 ; cmc ; call qword ptr [rdx]
0x000000000011db01 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000d4762 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x0000000000087242 : sub byte ptr [rip + 0x450f4800], cl ; ret 0x66c3
0x000000000019c7a8 : sub byte ptr [rsi], ah ; jmp rdx
0x0000000000002cc0 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000000ebeae : sub byte ptr [rsp + rax*2 - 0x75], ah ; and ebp, eax ; pop rax ; retf 0xffff
0x000000000012f09a : sub byte ptr fs:[rax], al ; call qword ptr [rax]
0x00000000000f193d : sub ch, byte ptr [rax + rax] ; ret
0x00000000000a244b : sub ch, byte ptr [rsi - 0x76b7fff3] ; ret
0x00000000001a0ea5 : sub ch, dh ; call qword ptr [rdx]
0x0000000000033ff2 : sub cl, al ; ret
0x00000000000881c7 : sub cl, byte ptr [rax + 0x39] ; bnd jne 0x881c7 ; ret
0x000000000002e737 : sub cl, byte ptr [rax - 0x77] ; ret
0x00000000000f4b03 : sub cl, byte ptr [rax - 0x77] ; ret 0xdeb
0x0000000000037b1d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000008baf7 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000870d2 : sub cl, byte ptr [rip + 0x450f4800] ; ret 0x66c3
0x0000000000032100 : sub cl, ch ; ret
0x000000000007d0bc : sub cl, ch ; retf 0xfffe
0x0000000000058c35 : sub cl, ch ; sti ; loop 0x58c41 ; dec dword ptr [rcx + 0x63] ; ret
0x00000000000f43d2 : sub cl, dh ; inc dword ptr [rbp - 0x164a8b40] ; retf 0xfffe
0x000000000004b721 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f3a1d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125a5e : sub dh, bh ; dec dword ptr [rax - 0x77] ; ret 0x9beb
0x0000000000086fcd : sub dh, bh ; ret 0
0x000000000019c911 : sub dh, bl ; call rcx
0x00000000001a0fd9 : sub dh, ch ; jmp rax
0x0000000000178965 : sub dh, dl ; call qword ptr [rax]
0x0000000000178995 : sub dh, dl ; call rax
0x00000000001789a1 : sub dh, dl ; inc dword ptr [rax] ; sub esi, edx ; jmp qword ptr [rax]
0x0000000000178991 : sub dh, dl ; inc eax ; sub dh, dl ; call rax
0x0000000000178969 : sub dh, dl ; jmp qword ptr [rax]
0x0000000000178999 : sub dh, dl ; jmp rax
0x000000000017898d : sub dh, dl ; push qword ptr [rax - 0x3f000dd6] ; sub dh, dl ; call rax
0x000000000017899d : sub dh, dl ; push rax ; sub dh, dl ; inc dword ptr [rax] ; sub esi, edx ; jmp qword ptr [rax]
0x00000000000e801e : sub dword ptr [rax + 0x101], edi ; syscall
0x0000000000174e6d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000089c7e : sub dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000f8361 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001218be : sub dword ptr [rax], eax ; add ecx, ebp ; retf 0xfffd
0x000000000011b867 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000126f9c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001178b5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011c454 : sub dword ptr [rax], eax ; test eax, eax ; je 0x11c467 ; ret
0x00000000001346f9 : sub dword ptr [rax], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000050a03 : sub dword ptr [rbx + 0x13], ecx ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000175b02 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x0000000000149eb3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x0000000000179b58 : sub dword ptr [rbx], esi ; hlt ; jmp qword ptr [rbx]
0x0000000000137e27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x137e3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000137f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x137f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001380c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1380dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13822d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13837d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001384b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1384cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13861d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13876d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001388a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1388bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001389f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x138a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x138b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x138cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x138dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000138f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x138f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000139087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13909d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013a7f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13a80d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013a947 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13a95d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013aa97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13aaad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013abe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13abfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ad37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13ad4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ae87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13ae9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013afd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13afed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b127 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b13d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b277 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b28d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b3c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b3dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b52d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b67d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b7b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b7cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013b907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13b91d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ba57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13ba6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000137d83 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000137d7f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000cfe03 : sub dword ptr [rdi], eax ; ret
0x00000000000c8e37 : sub dword ptr [rdi], ecx ; test dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000137e2d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015d279 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018c1f5 : sub dword ptr [rdx], eax ; add byte ptr [rdx + rbp*8], dl ; stc ; call rsp
0x0000000000150837 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000015c406 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001506f1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000001763ba : sub dword ptr [rsi], 0x76 ; retf
0x00000000000d24b0 : sub dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127096 : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000155d37 : sub eax, -1 ; jne 0x155d48 ; vzeroupper ; ret
0x000000000015a1f7 : sub eax, -1 ; jne 0x15a208 ; vzeroupper ; ret
0x00000000000839ca : sub eax, 0x10 ; ret
0x000000000012f946 : sub eax, 0x10c48348 ; pop rbx ; ret
0x00000000000dbae5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000f46a2 : sub eax, 0x3948002c ; ret
0x00000000000e0685 : sub eax, 0x58b4800 ; retf 0x2d87
0x00000000000de5a5 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034259 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000056fd7 : sub eax, 0x83000000 ; ret
0x000000000004d9c0 : sub eax, 0x89480036 ; ret 0x2948
0x000000000018cdc5 : sub eax, 0x96640001 ; std ; call rsp
0x00000000000e1783 : sub eax, 0xc0894900 ; call r12
0x00000000001559cf : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x0000000000173b06 : sub eax, 0xea4ca798 ; retf
0x0000000000002915 : sub eax, 0xeeef33a1 ; retf 0x182c
0x00000000000c2ae7 : sub eax, 0xf0658d48 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000161fca : sub eax, 0xfc08548 ; xchg eax, ebp ; ret
0x0000000000044487 : sub eax, 1 ; cmp rbx, rax ; jne 0x44489 ; pop rbx ; ret
0x0000000000117e19 : sub eax, 1 ; je 0x117e30 ; mov qword ptr [rdi], rax ; ret
0x000000000002ab94 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004569f : sub eax, 1 ; ret
0x00000000000a1fe2 : sub eax, 4 ; ret
0x00000000000a0ac6 : sub eax, dword ptr [r8 + r9*4] ; je 0xa0aaf ; ret
0x0000000000163981 : sub eax, dword ptr [rax + rax] ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000000a0ac7 : sub eax, dword ptr [rax + rcx*4] ; je 0xa0aae ; ret
0x00000000000f957b : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f95a5 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f7c7e : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001040f2 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000fc26e : sub eax, dword ptr [rax] ; add ecx, ebp ; retf 0xfffd
0x00000000000f9698 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000010429f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x104288 ; ret
0x00000000000f9fa5 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000f9945 : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010493c : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000f94d4 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x000000000002e6df : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004b6b5 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000000f86f1 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007d3ce : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000077575 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000077465 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000073015 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000077566 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000077456 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a0a7a : sub eax, dword ptr [rdx + rcx*4] ; je 0xa0a66 ; ret
0x000000000007cb53 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000015518d : sub eax, eax ; cmp eax, ecx ; jle 0x1551d1 ; movsxd rax, ecx ; ret
0x0000000000047091 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000155443 : sub eax, eax ; ret
0x00000000000e267f : sub eax, ebp ; retf
0x0000000000155d83 : sub eax, ecx ; je 0x155d99 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000007c179 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000046ef0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008e8fc : sub eax, ecx ; ret
0x0000000000096269 : sub eax, edi ; ret
0x00000000000b27de : sub eax, edi ; shr rax, 2 ; ret
0x00000000000b32d1 : sub eax, edx ; lea rax, [r8 + rax*4] ; ret
0x0000000000038049 : sub eax, edx ; ret
0x0000000000033b56 : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003423f : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000033e6d : sub eax, edx ; shr rax, 0x3f ; ret
0x000000000015aba0 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x00000000000b6d05 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000155d4c : sub eax, edx ; vzeroupper ; ret
0x0000000000113ff9 : sub eax, esi ; add eax, edi ; cmovs eax, edx ; ret
0x0000000000198609 : sub eax, esi ; jmp qword ptr [rbx]
0x00000000001551ed : sub eax, esi ; ret
0x000000000010183d : sub ebp, dword ptr [rbx] ; add al, ch ; retf
0x00000000000870d1 : sub ebp, dword ptr [rdx] ; or eax, 0x450f4800 ; ret 0x66c3
0x0000000000174d5e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000079a10 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070906 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000113a92 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000001737f5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000000306f : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000ade6c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055006 : sub ebx, ebp ; lea rdi, [rbx + 0x10] ; call 0x212c8
0x0000000000186385 : sub ebx, edi ; call rax
0x0000000000035814 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000008bb16 : sub ecx, 0x1b ; idiv edi ; inc dword ptr [rbp - 0x77] ; ret 0x8945
0x00000000000d03f7 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009bc21 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000159994 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000000fffc1 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000d5463 : sub ecx, eax ; add rdx, rcx ; jmp 0xd5402
0x00000000000d79e8 : sub ecx, eax ; add rdx, rcx ; jmp 0xd7984
0x00000000000b6d07 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000033b0b : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000199885 : sub ecx, esi ; jmp rdi
0x00000000000b22ec : sub edi, 0x10 ; add rax, rdi ; ret
0x0000000000031b47 : sub edi, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000155271 : sub edi, dword ptr [rdx + rax] ; add byte ptr [rax - 0x77], cl ; dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000018b659 : sub edi, eax ; call rax
0x0000000000003076 : sub edi, esi ; retf 0x54f7
0x00000000000b583b : sub edi, esp ; dec dword ptr [rax + 0x39] ; ret
0x00000000000a1b82 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0xa1b79 ; ret
0x000000000007cb80 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007cb75 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000090704 : sub edx, eax ; jbe 0x90747 ; add rax, rdi ; ret
0x0000000000090714 : sub edx, eax ; jbe 0x90749 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000090724 : sub edx, eax ; jbe 0x90749 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000090734 : sub edx, eax ; jbe 0x90749 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b2104 : sub edx, eax ; jbe 0xb2147 ; add rax, rdi ; ret
0x00000000000b2114 : sub edx, eax ; jbe 0xb2149 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000b2124 : sub edx, eax ; jbe 0xb2149 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000b2134 : sub edx, eax ; jbe 0xb2149 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000037b0 : sub edx, eax ; loope 0x37da ; retf 0x5038
0x00000000000edd74 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000018eb11 : sub edx, ebp ; call qword ptr [rdx]
0x000000000003ac1d : sub edx, ecx ; jmp 0x3ac5f
0x000000000003d5cd : sub edx, ecx ; jmp 0x3d60f
0x000000000003ff7d : sub edx, ecx ; jmp 0x3ffbf
0x0000000000047fdd : sub edx, ecx ; jmp 0x4801f
0x0000000000043bf3 : sub edx, edi ; add rdx, rcx ; jmp 0x43c0d
0x0000000000043ee0 : sub edx, edi ; add rdx, rcx ; jmp 0x43efd
0x0000000000178961 : sub edx, esi ; inc dword ptr [rax] ; sub dh, dl ; call qword ptr [rax]
0x00000000000791bf : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000000892e2 : sub esi, 1 ; jne 0x892e0 ; xor eax, eax ; pop rbx ; ret
0x0000000000113822 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000038fe3 : sub esi, eax ; mov eax, r10d ; syscall
0x00000000001944a1 : sub esi, ebp ; jmp qword ptr [rcx]
0x00000000000ede74 : sub esi, ebx ; ret
0x00000000001789c5 : sub esi, edx ; inc dword ptr [rax] ; sub al, 0xf2 ; jmp qword ptr [rax]
0x00000000001789bd : sub esi, edx ; inc eax ; sub esi, edx ; jmp rax
0x00000000001789a5 : sub esi, edx ; jmp qword ptr [rax]
0x00000000001789c1 : sub esi, edx ; jmp rax
0x00000000000e7a73 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7d6d : sub esp, 0x10 ; call 0x103fc5
0x0000000000037cdc : sub esp, 0x80 ; call 0x103f78
0x0000000000037d7c : sub esp, 0x80 ; call 0x103fa8
0x00000000000bfdc3 : sub esp, 8 ; syscall
0x000000000007c178 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000000b32d0 : sub r8, rdx ; lea rax, [r8 + rax*4] ; ret
0x0000000000127095 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000839c9 : sub rax, 0x10 ; ret
0x0000000000117e18 : sub rax, 1 ; je 0x117e31 ; mov qword ptr [rdi], rax ; ret
0x000000000009fcc3 : sub rax, 1 ; ret
0x00000000000a1fe1 : sub rax, 4 ; ret
0x000000000007d3cd : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000077574 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000077464 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000073014 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000077565 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000077455 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000155442 : sub rax, r8 ; ret
0x0000000000096268 : sub rax, rdi ; ret
0x00000000000b27dd : sub rax, rdi ; shr rax, 2 ; ret
0x000000000003805d : sub rax, rdx ; ret
0x0000000000033e6c : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000015966f : sub rax, rdx ; vzeroupper ; ret
0x00000000001551ec : sub rax, rsi ; ret
0x0000000000055005 : sub rbx, rbp ; lea rdi, [rbx + 0x10] ; call 0x212c9
0x00000000000d5462 : sub rcx, rax ; add rdx, rcx ; jmp 0xd5403
0x00000000000d79e7 : sub rcx, rax ; add rdx, rcx ; jmp 0xd7985
0x00000000000b22eb : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000043bf2 : sub rdx, r15 ; add rdx, rcx ; jmp 0x43c0e
0x0000000000043bf1 : sub rdx, r15 ; add rdx, rcx ; jmp 0x43c0f
0x0000000000043edf : sub rdx, r15 ; add rdx, rcx ; jmp 0x43efe
0x0000000000090703 : sub rdx, rax ; jbe 0x90748 ; add rax, rdi ; ret
0x00000000000b2103 : sub rdx, rax ; jbe 0xb2148 ; add rax, rdi ; ret
0x000000000003ac1c : sub rdx, rcx ; jmp 0x3ac60
0x000000000003d5cc : sub rdx, rcx ; jmp 0x3d610
0x000000000003ff7c : sub rdx, rcx ; jmp 0x3ffc0
0x0000000000047fdc : sub rdx, rcx ; jmp 0x48020
0x00000000000892e1 : sub rsi, 1 ; jne 0x892e1 ; xor eax, eax ; pop rbx ; ret
0x0000000000038fe2 : sub rsi, r8 ; mov eax, r10d ; syscall
0x00000000000e7a72 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7d6c : sub rsp, 0x10 ; call 0x103fc6
0x0000000000037cdb : sub rsp, 0x80 ; call 0x103f79
0x0000000000037d7b : sub rsp, 0x80 ; call 0x103fa9
0x00000000000bfdc2 : sub rsp, 8 ; syscall
0x0000000000033f68 : subps xmm0, xmm1 ; ret
0x0000000000033f67 : subsd xmm0, xmm1 ; ret
0x00000000000342d4 : subss xmm0, xmm1 ; ret
0x00000000000013c0 : syscall
0x000000000006f7fb : sysenter
0x000000000010f286 : test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000153dd8 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012afdf : test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000154cd8 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000153bf8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000154af8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x00000000001270f7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000e6db1 : test al, 0 ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000121e72 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000035c68 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cba0 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000ef051 : test al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001941a8 : test al, 0x20 ; out dx, al ; call rsp
0x000000000018c15c : test al, 0x26 ; add al, byte ptr [rax] ; in al, 0xd4 ; stc ; jmp rsp
0x0000000000003e3a : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a13f8 : test al, 0x39 ; cmc ; jmp qword ptr [rcx]
0x00000000001897ec : test al, 0x3d ; add dword ptr [rax], eax ; adc al, 0x91 ; jmp rsp
0x0000000000189a0c : test al, 0x4b ; add dword ptr [rax], eax ; in al, 0xf3 ; call rax
0x0000000000189b6c : test al, 0x52 ; add dword ptr [rax], eax ; je 0x189bdf ; hlt ; call rsp
0x00000000001a1648 : test al, 0x57 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1728 : test al, 0x58 ; cmc ; jmp qword ptr [rcx]
0x00000000001a4520 : test al, 0x75 ; add dword ptr [rax], eax ; and rsi, r14 ; call qword ptr [rbx]
0x00000000000ddbf4 : test al, 0x83 ; ret 0x4802
0x000000000019ea58 : test al, 0x91 ; hlt ; jmp qword ptr [rcx]
0x00000000001740b7 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000198388 : test al, 0x9f ; cli ; call qword ptr [rax]
0x0000000000173a9e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000019db20 : test al, 0xb ; add dword ptr [rax], eax ; or r14, rsp ; jmp qword ptr [rcx]
0x00000000000039bf : test al, 0xc6 ; std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000192ce8 : test al, 0xca ; in eax, dx ; jmp qword ptr [rdi]
0x000000000018887c : test al, 0xe5 ; add byte ptr [rax], al ; add al, 0x50 ; out dx, eax ; call rsp
0x00000000001882c1 : test al, 0xee ; dec eax ; ret
0x00000000001a00a8 : test al, 0xef ; hlt ; jmp qword ptr [rcx]
0x00000000000b2589 : test al, 0xf0 ; jne 0xb25e8 ; lea rax, [rdi - 0x10] ; ret
0x00000000000b2588 : test al, 0xf0 ; jne 0xb25e9 ; lea rax, [rdi - 0x10] ; ret
0x000000000018b8ec : test al, 0xf1 ; add dword ptr [rax], eax ; xor al, 0xaf ; clc ; call rsp
0x0000000000178899 : test al, 0xf1 ; jmp rax
0x000000000019eff5 : test al, 0xf4 ; call rsp
0x00000000000d69d6 : test al, 0xf4 ; dec dword ptr [rax + 0x63] ; ret
0x00000000001a2f2d : test al, 0xf5 ; call rsi
0x000000000012ad8f : test al, 0xf5 ; inc dword ptr [rax + rax*8 - 0x1a175d8b] ; ret 0xffff
0x0000000000186ec9 : test al, 0xfb ; call rax
0x0000000000186f09 : test al, 0xfb ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000186e49 : test al, 0xfb ; jmp rsp
0x00000000000d1b9d : test al, 1 ; je 0xd1b3f ; xor eax, eax ; pop rbx ; ret
0x00000000001ae060 : test al, 8 ; add byte ptr [rax], al ; ret
0x0000000000032c91 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000094b9c : test al, ah ; or eax, 0x894d0000 ; retf
0x00000000001447ec : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012ad92 : test al, al ; jne 0x12ad3e ; call 0x127086
0x000000000008ebba : test al, al ; jne 0x8eba8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000001450ec : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000093dbc : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000944ac : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000179df4 : test bh, al ; hlt ; push qword ptr [rdi + rax*8] ; hlt ; call qword ptr [rcx]
0x000000000003a198 : test bh, bh ; cmove eax, ecx ; ret
0x000000000003a1c0 : test bh, bh ; cmovne eax, ecx ; ret
0x0000000000161921 : test bh, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000006f05c : test bh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001769c4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000043c64 : test bh, dh ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000174e71 : test bh, dl ; retf 0xdf7f
0x00000000001882bc : test bl, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xee ; dec eax ; ret
0x0000000000186879 : test bl, bh ; call qword ptr [rdx]
0x00000000001869f9 : test bl, bh ; call rax
0x00000000001869b9 : test bl, bh ; jmp rax
0x000000000018b218 : test bl, cl ; idiv edi ; retf 1
0x0000000000189739 : test bl, dh ; jmp rsp
0x000000000003c25d : test bl, dl ; out 0xff, eax ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ab880 : test byte ptr [rax + 0x14c0000], ah ; ret 0x28b
0x000000000000075e : test byte ptr [rax + 0x2000008a], cl ; add byte ptr [rdx], dl ; retf
0x000000000002dcc6 : test byte ptr [rax + 0x200], bh ; ret
0x0000000000121d75 : test byte ptr [rax + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000c5e2a : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000000a4e70 : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x000000000006ab97 : test byte ptr [rax + 9], cl ; ret
0x00000000001983fc : test byte ptr [rax + rax - 0x1050a000], dh ; call qword ptr [rax]
0x000000000011cd57 : test byte ptr [rax + rax - 0x76b70000], dh ; ret 0x8b48
0x000000000006db6f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000104f44 : test byte ptr [rax + rax*4], ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000153848 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x00000000000a78e9 : test byte ptr [rax + rsi*2], ah ; sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x35], cl ; retf 0xcba
0x00000000000e6434 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d4bc9 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000d593c : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007d9fb : test byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x2173
0x0000000000088bda : test byte ptr [rax - 0x77], 0xd0 ; cmovne rax, rdi ; ret
0x00000000000e7666 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000e76c3 : test byte ptr [rax - 0x77], 0xdf ; mov eax, 0x135 ; syscall
0x0000000000044794 : test byte ptr [rax - 0x77], 0xef ; call 0x21226
0x0000000000036a87 : test byte ptr [rax - 0x77], 0xef ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000006da91 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x0000000000188b7d : test byte ptr [rax], 0 ; retf 0xffef
0x0000000000001dae : test byte ptr [rax], ah ; mov al, 0x72 ; retf
0x00000000001457ac : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016556a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000015e89a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000014a04a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009b34a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009c31a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000014a07a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009c33a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009c34a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000fcd3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000014a0ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009c38a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007ce0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014a05a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009c32a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a82a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000123269 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000007434a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000217fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ec9da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007cdaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b22fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e76e1 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001460ac : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000144eac : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000119c83 : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009494c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006ab92 : test byte ptr [rax], dl ; or byte ptr [rcx], spl ; test byte ptr [rax + 9], cl ; ret
0x0000000000033849 : test byte ptr [rbp + 0x48000000], ah ; add edx, ecx ; jmp 0x33868
0x00000000000671a7 : test byte ptr [rbp + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000023142 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x0000000000154378 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001865fc : test byte ptr [rbp - 0x72790005], 0xfb ; call qword ptr [rsi]
0x000000000011d9be : test byte ptr [rbp - 0x74ffffff], dl ; adc byte ptr [rdi], cl ; retf 0x5389
0x0000000000058434 : test byte ptr [rbp - 0x7c000017], ah ; ret
0x0000000000053cc3 : test byte ptr [rbp - 0x9ffffee], dl ; ret 0xf40
0x0000000000189e00 : test byte ptr [rbp - 0xb], dl ; jmp qword ptr [rax]
0x00000000000f416e : test byte ptr [rbp], bh ; add byte ptr [rax], al ; call rax
0x00000000001028b3 : test byte ptr [rbx + 0x1c], 0x20 ; je 0x1028c7 ; pop rbx ; ret
0x0000000000154558 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000683f4 : test byte ptr [rbx + rdx], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001887b8 : test byte ptr [rbx - 0x11], al ; jmp rsp
0x000000000002cfd1 : test byte ptr [rbx - 0x76b3f308], 0x34 ; ret 0xed75
0x0000000000187f0c : test byte ptr [rbx - 0xa7c0000], ch ; in al, dx ; call rsp
0x000000000007bff6 : test byte ptr [rbx], 0x80 ; jne 0x7c026 ; pop rbx ; ret
0x000000000012b510 : test byte ptr [rbx], bh ; add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000047d98 : test byte ptr [rbx], ch ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x3175
0x000000000019db4c : test byte ptr [rbx], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6d5c : test byte ptr [rbx], cl ; idiv edi ; ret 0
0x000000000003fd38 : test byte ptr [rbx], dh ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x3175
0x0000000000086ed8 : test byte ptr [rcx + 0xf480001], cl ; ret 0x66c3
0x00000000001a18fc : test byte ptr [rcx + 1], cl ; add al, al ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000021eb3 : test byte ptr [rcx + rax - 0x7cb80000], bl ; ret
0x0000000000154738 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x0000000000065c55 : test byte ptr [rcx + rcx*4 - 0x11], 0xe8 ; retf
0x00000000000d06e9 : test byte ptr [rcx + rcx*4 - 0x19], 0x89 ; ret
0x00000000000246e9 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; pop rsi ; retf
0x00000000000f3a8d : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; retf 0xfffd
0x00000000000b6110 : test byte ptr [rcx + rcx*4 - 0x1e], 0xe8 ; retf 0xffff
0x000000000018bb50 : test byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rax]
0x00000000000ff554 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x000000000018a530 : test byte ptr [rcx - 0xa], dh ; call qword ptr [rax]
0x000000000014fb46 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a546d : test byte ptr [rcx], al ; add byte ptr [rax + 0x61], dl ; idiv bh ; retf 0
0x00000000000f47aa : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000137356 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000087b82 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; xchg eax, edx ; ret
0x0000000000150926 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000136666 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000150836 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000136386 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011e1bc : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000154918 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x000000000018ac88 : test byte ptr [rdi + rsi*8], cl ; call rsp
0x0000000000187378 : test byte ptr [rdi - 0x16], ah ; jmp rax
0x000000000005854a : test byte ptr [rdi - 0x7c000018], cl ; ret
0x00000000000d004c : test byte ptr [rdi - 0xa000000], bh ; ret
0x000000000010edd7 : test byte ptr [rdi], 0x30 ; je 0x10ede7 ; xor eax, eax ; ret
0x000000000006e7e9 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000089272 : test byte ptr [rdi], 0x84 ; ret 0
0x00000000000a74ca : test byte ptr [rdi], 0x85 ; ret 0x13
0x000000000003b118 : test byte ptr [rdi], 0x85 ; retf
0x0000000000162a99 : test byte ptr [rdi], 0x92 ; ret
0x00000000000e1ade : test byte ptr [rdi], 0x94 ; ret
0x00000000000c4927 : test byte ptr [rdi], 0x94 ; ret 0x854d
0x00000000000e915f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x00000000000e8c76 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x000000000005cc91 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x00000000000774b2 : test byte ptr [rdi], 4 ; sete al ; ret
0x00000000000774c2 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000043134 : test byte ptr [rdi], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000009bcc8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000011543c : test byte ptr [rdi], dh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000002dc54 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000d3780 : test byte ptr [rdx + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000001a39fc : test byte ptr [rdx + 1], ch ; add al, dl ; push rbp ; jmp qword ptr [rsi]
0x0000000000153668 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000110f29 : test byte ptr [rdx - 0x77000000], ah ; retf 0x8d48
0x0000000000021f36 : test byte ptr [rdx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dbae4 : test byte ptr [rip + 0x28b4800], ch ; mov qword ptr [rdx], rdi ; ret
0x00000000000570c4 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000009630d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000018ca4c : test byte ptr [rsi + 1], ah ; add byte ptr [rbx + rdi*4], al ; cli ; jmp qword ptr [rax]
0x000000000003e0f6 : test byte ptr [rsi + rcx - 0x47b80000], dh ; retf 0xfffe
0x000000000010c691 : test byte ptr [rsi + rdi*8 + 0x3d80ffff], bh ; ret
0x0000000000153a18 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x00000000000f4765 : test byte ptr [rsi - 0x7d000000], dl ; ret
0x00000000001a514c : test byte ptr [rsi - 0xa], cl ; call rdi
0x000000000009614d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000157dce : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000157ace : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x0000000000158cce : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001583ce : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001586ce : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000041551 : test byte ptr [rsp + rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000153488 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000113579 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000187f10 : test ch, dh ; in al, dx ; call rsp
0x000000000019397c : test ch, dh ; in eax, dx ; call qword ptr [rsi]
0x00000000001887ac : test cl, ah ; add byte ptr [rax], al ; push rsp ; out dx, eax ; call rax
0x00000000001532eb : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000151466 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008ced9 : test cl, bh ; jne 0x8cebd ; ret
0x0000000000136d96 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000151286 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000136ab6 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000188c08 : test cl, bl ; out dx, eax ; jmp rsp
0x000000000004b242 : test cl, bl ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000008ef16 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008f216 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000090116 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000151376 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008fe16 : test cl, ch ; add eax, 0x894d0000 ; retf
0x000000000008fb16 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008f816 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001374c6 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000151196 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a918 : test cl, cl ; idiv bh ; adc al, 0x9f ; add dword ptr [rax], eax ; retf 0xfff6
0x0000000000115a4b : test cl, cl ; jne 0x115a31 ; ret
0x000000000008cd28 : test cl, cl ; jne 0x8cd1d ; ret
0x000000000008ce77 : test cl, cl ; jne 0x8ce6f ; xor eax, eax ; ret
0x000000000009f94f : test cl, cl ; jne 0x9f944 ; ret
0x000000000009f9ff : test cl, cl ; jne 0x9f9f4 ; ret
0x000000000009fcbf : test cl, cl ; jne 0x9fcb8 ; sub rax, 1 ; ret
0x00000000000fedc2 : test cl, cl ; jne 0xfedb5 ; ret
0x00000000000f2e70 : test dh, 1 ; jne 0xf2e86 ; ret
0x0000000000044877 : test dh, al ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000e4025 : test dh, al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000011120d : test dh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000188d30 : test dh, ch ; out dx, eax ; call rsp
0x000000000018b298 : test dh, cl ; idiv edi ; clc ; retf
0x000000000008cb40 : test dh, dh ; jne 0x8cb37 ; mov qword ptr [rdx], rcx ; ret
0x00000000000829ca : test dh, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000a4f74 : test dh, dl ; or eax, 0xb8480000 ; retf 0xfffe
0x000000000003a197 : test dil, dil ; cmove eax, ecx ; ret
0x000000000003a1bf : test dil, dil ; cmovne eax, ecx ; ret
0x000000000015e724 : test dl, 0x40 ; jne 0x15e6e9 ; lea rax, [rdi + 7] ; ret
0x000000000015e752 : test dl, 4 ; jne 0x15e6e9 ; lea rax, [rdi + 3] ; ret
0x0000000000163f3e : test dl, ah ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x00000000000c8e39 : test dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018c7f1 : test dl, bh ; jmp rax
0x00000000000a9463 : test dl, bh ; or eax, 0xb8480000 ; ret 0xffff
0x00000000000cc0d1 : test dl, ch ; idiv edi ; dec dword ptr [rbp - 0x77] ; ret
0x000000000008cd82 : test dl, cl ; jne 0x8cd65 ; ret
0x000000000003a1ac : test dl, dl ; cmovne eax, ecx ; ret
0x0000000000032fe6 : test dl, dl ; jne 0x32fc8 ; ret
0x000000000008cce4 : test dl, dl ; jne 0x8ccdd ; ret
0x000000000009fb6f : test dl, dl ; jne 0x9fb68 ; lea rax, [rcx - 1] ; ret
0x00000000000c67c7 : test dl, dl ; jne 0xc67ad ; xor eax, eax ; ret
0x00000000000dc6e7 : test dl, dl ; jne 0xdc6cd ; xor eax, eax ; ret
0x000000000009bffb : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009d51b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009d41b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000008b727 : test dword ptr [rax + rax - 0x7cb80000], ebx ; ret 0x4801
0x0000000000089cdf : test dword ptr [rax + rax - 0x7cb80000], ecx ; ret 0x4801
0x00000000000d9703 : test dword ptr [rax - 0x7d], 0x394904c1 ; retf
0x00000000001877ed : test dword ptr [rax], eax ; add byte ptr [rax + rbp*8 - 0x16], ah ; call rsp
0x00000000000565af : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d161a : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf
0x00000000000e78b7 : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000004bff1 : test dword ptr [rax], eax ; idiv edi ; call qword ptr [rax]
0x0000000000049918 : test dword ptr [rax], ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dad4c : test dword ptr [rax], edi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x000000000004a58c : test dword ptr [rbp + 0x29], ecx ; ret 0xc149
0x0000000000090688 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x00000000000e7cf9 : test dword ptr [rbx + 0x48000000], edi ; add esp, 0x68 ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000a16b0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000b2478 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x0000000000149f98 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000149f78 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000149e90 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009d610 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000015bf07 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015c356 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002c33 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000155f98 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000002a99b : test dword ptr [rbx - 0x7c000003], ebp ; retf
0x00000000000d0290 : test dword ptr [rbx - 0x7d000000], edx ; retf 0x8840
0x0000000000001aca : test dword ptr [rbx], ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4f ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000164177 : test dword ptr [rbx], ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000162da8 : test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x000000000006838b : test dword ptr [rbx], esi ; in eax, 0xff ; dec dword ptr [rax + 0x39] ; ret 0xd74
0x0000000000021c37 : test dword ptr [rcx + 0xc], esp ; add byte ptr [rcx], bh ; ret
0x0000000000149c9a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000015bedd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009bbe2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000015bded : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015bcfd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a16f7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000001605d7 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000a16c7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000073c28 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000014a03a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x000000000018ba45 : test dword ptr [rcx], 0xf8e1d400 ; jmp rax
0x00000000001ac6ad : test dword ptr [rcx], 0xfb40d000 ; call rax
0x000000000005878a : test dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001559da : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x00000000001329f3 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x000000000009bd47 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009bd27 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000100ea8 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000101303 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000c9a29 : test dword ptr [rdi + rdx*8 - 1], esi ; jmp qword ptr [rax]
0x0000000000035936 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000d79be : test dword ptr [rdi], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000160f4c : test dword ptr [rdi], ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009bee1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000009d2f9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000015d252 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015bc22 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b88a9 : test dword ptr [rdx - 0x76ffffee], ebx ; ret 0xe283
0x0000000000149f57 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000001d52 : test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000000899e9 : test dword ptr [rdx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000060289 : test dword ptr [rdx], esp ; ret
0x00000000001559ce : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x00000000001594a3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000117136 : test dword ptr [rsi + 0x3c000002], edi ; sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x00000000000e7f1e : test dword ptr [rsi + 0x48000000], edi ; add esp, 0x78 ; ret
0x00000000000b251d : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x000000000015ff62 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009bd05 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000009bce5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009bbfd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000d33a5 : test dword ptr [rsi + rdi*8 + 0x7501ffff], esi ; retf
0x0000000000027bce : test dword ptr [rsi + rdi*8 - 0x7cb70001], esi ; ret
0x00000000000038fe : test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x000000000006d11d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000029377 : test dword ptr [rsi], eax ; add byte ptr [rcx - 0x77], al ; ret 0x17e9
0x0000000000028165 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000015c128 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000174f4d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000038620 : test eax, 0x634c0013 ; retf 0xd285
0x0000000000175da0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000013cec6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034310 : test eax, 0x7fffff ; je 0x34309 ; ret
0x0000000000059d49 : test eax, 0x8900001c ; ret 0x349
0x000000000010f393 : test eax, 0x8b002a93 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000002ab1b : test eax, 0x90ffff67 ; ret
0x0000000000186e45 : test eax, 0xa874fffb ; sti ; jmp rsp
0x0000000000186efd : test eax, 0xa970fffb ; sti ; jmp rax
0x0000000000185ed5 : test eax, 0xaa20fffc ; cld ; call qword ptr [rax]
0x000000000017ac96 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000f1ae3 : test eax, 0xebffff6e ; in al, 0x89 ; ret
0x00000000000f4c9f : test eax, eax ; cmove eax, edx ; ret
0x00000000000edd76 : test eax, eax ; cmovns eax, edx ; ret
0x00000000000380f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000104700 : test eax, eax ; je 0x104734 ; call rax
0x000000000010676a : test eax, eax ; je 0x106780 ; add rsp, 8 ; ret
0x000000000010f4a4 : test eax, eax ; je 0x10f4b4 ; mov rdi, rbx ; call rax
0x0000000000117456 : test eax, eax ; je 0x117465 ; ret
0x0000000000117dc7 : test eax, eax ; je 0x117dd5 ; ret
0x000000000011b7f0 : test eax, eax ; je 0x11b800 ; mov rdi, rbx ; call rax
0x000000000011c147 : test eax, eax ; je 0x11c157 ; mov rdi, rbp ; call rax
0x000000000011c456 : test eax, eax ; je 0x11c465 ; ret
0x000000000011d16c : test eax, eax ; je 0x11d17c ; mov rdi, rbx ; call rax
0x000000000011d514 : test eax, eax ; je 0x11d528 ; mov rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000011d701 : test eax, eax ; je 0x11d716 ; xor eax, eax ; ret
0x0000000000122761 : test eax, eax ; je 0x122771 ; mov rdi, r12 ; call rax
0x0000000000122949 : test eax, eax ; je 0x12295b ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000123afa : test eax, eax ; je 0x123b0a ; mov rdi, rbx ; call rax
0x0000000000123bbe : test eax, eax ; je 0x123bce ; mov rdi, r12 ; call rax
0x000000000012477d : test eax, eax ; je 0x12478f ; lea rdi, [rbx + 0x68] ; call rax
0x0000000000124ea7 : test eax, eax ; je 0x124eb7 ; mov rdi, r12 ; call rax
0x000000000012520d : test eax, eax ; je 0x12521f ; lea rdi, [rbx + 0x58] ; call rax
0x000000000012700f : test eax, eax ; je 0x126fca ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000126fbd : test eax, eax ; je 0x126fcd ; pop rbx ; ret
0x0000000000127d39 : test eax, eax ; je 0x127d4b ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001283d2 : test eax, eax ; je 0x1283e4 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000012c4a6 : test eax, eax ; je 0x12c4b6 ; xor eax, eax ; ret
0x0000000000150553 : test eax, eax ; je 0x15055f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000151538 : test eax, eax ; je 0x151544 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000165151 : test eax, eax ; je 0x165160 ; call rax
0x0000000000021b20 : test eax, eax ; je 0x21b30 ; mov rdi, r12 ; call rax
0x000000000002b39b : test eax, eax ; je 0x2b3a5 ; call rax
0x000000000002c3b9 : test eax, eax ; je 0x2c3c3 ; call rax
0x0000000000042c93 : test eax, eax ; je 0x42ca5 ; pop rbx ; ret
0x00000000000787bd : test eax, eax ; je 0x787cd ; pop rbx ; ret
0x000000000007e5c1 : test eax, eax ; je 0x7e5cb ; call rax
0x0000000000085f50 : test eax, eax ; je 0x85f68 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bed0e : test eax, eax ; je 0xbed30 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000c4597 : test eax, eax ; je 0xc45a1 ; call rax
0x00000000000c4721 : test eax, eax ; je 0xc472e ; call rax
0x00000000000cd6c2 : test eax, eax ; je 0xcd6a0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee74c : test eax, eax ; je 0xee757 ; ret
0x00000000000f0401 : test eax, eax ; je 0xf0410 ; mov qword ptr [rax], rdx ; ret
0x00000000000f416b : test eax, eax ; je 0xf41f8 ; call rax
0x00000000000f4302 : test eax, eax ; je 0xf43e8 ; call rax
0x00000000000f6d22 : test eax, eax ; jl 0xf6d3f ; je 0xf6d2f ; ret
0x0000000000103f8f : test eax, eax ; jne 0x103f8b ; pop rdx ; pop r10 ; ret
0x00000000001047c0 : test eax, eax ; jne 0x1047f9 ; mov eax, 0xe6 ; syscall
0x00000000001177ea : test eax, eax ; jne 0x1177f5 ; ret
0x0000000000118d98 : test eax, eax ; jne 0x118da5 ; ret
0x000000000011eee8 : test eax, eax ; jne 0x11eeac ; xor eax, eax ; pop rbx ; ret
0x0000000000122b96 : test eax, eax ; jne 0x122ba5 ; ret
0x0000000000127cb5 : test eax, eax ; jne 0x127ca5 ; pop rbx ; ret
0x0000000000127f56 : test eax, eax ; jne 0x127f65 ; ret
0x000000000012f65a : test eax, eax ; jne 0x12f66f ; xor eax, eax ; pop rbx ; ret
0x0000000000134d8d : test eax, eax ; jne 0x134daf ; mov eax, 0x27 ; syscall
0x0000000000155691 : test eax, eax ; jne 0x1556b9 ; xor eax, eax ; vzeroupper ; ret
0x000000000015a641 : test eax, eax ; jne 0x15a669 ; xor eax, eax ; vzeroupper ; ret
0x0000000000165da4 : test eax, eax ; jne 0x165db5 ; pop rbx ; ret
0x0000000000038f19 : test eax, eax ; jne 0x38f39 ; mov eax, 0x13e ; syscall
0x000000000006a7df : test eax, eax ; jne 0x6a7f8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007bddc : test eax, eax ; jne 0x7bdd5 ; ret
0x000000000007cb34 : test eax, eax ; jne 0x7cb2d ; ret
0x000000000008551f : test eax, eax ; jne 0x85516 ; xor eax, eax ; ret
0x00000000000906b5 : test eax, eax ; jne 0x90716 ; xor eax, eax ; ret
0x0000000000090b58 : test eax, eax ; jne 0x90bd6 ; xor eax, eax ; ret
0x0000000000090b87 : test eax, eax ; jne 0x90c06 ; xor eax, eax ; ret
0x00000000000a1c71 : test eax, eax ; jne 0xa1c45 ; ret
0x00000000000b20b5 : test eax, eax ; jne 0xb2116 ; xor eax, eax ; ret
0x00000000000c0b6a : test eax, eax ; jne 0xc0ba1 ; mov eax, 0x74 ; syscall
0x00000000000c43b9 : test eax, eax ; jne 0xc43d9 ; mov eax, 0x22 ; syscall
0x00000000000c4469 : test eax, eax ; jne 0xc4489 ; mov eax, 0x23 ; syscall
0x00000000000c536a : test eax, eax ; jne 0xc53a1 ; mov eax, 0x69 ; syscall
0x00000000000c53fa : test eax, eax ; jne 0xc5431 ; mov eax, 0x6a ; syscall
0x00000000000c568a : test eax, eax ; jne 0xc56c1 ; mov eax, 0x75 ; syscall
0x00000000000c572a : test eax, eax ; jne 0xc5761 ; mov eax, 0x77 ; syscall
0x00000000000e669c : test eax, eax ; jne 0xe66c1 ; mov eax, 0x11 ; syscall
0x00000000000e674c : test eax, eax ; jne 0xe6771 ; mov eax, 0x12 ; syscall
0x00000000000e7ef8 : test eax, eax ; jne 0xe7f6a ; mov eax, 0x101 ; syscall
0x00000000000e80c9 : test eax, eax ; jne 0xe80e6 ; xor eax, eax ; syscall
0x00000000000e8199 : test eax, eax ; jne 0xe81b9 ; mov eax, 1 ; syscall
0x00000000000e86b3 : test eax, eax ; jne 0xe86f9 ; mov eax, 0x48 ; syscall
0x00000000000e8919 : test eax, eax ; jne 0xe8939 ; mov eax, 3 ; syscall
0x00000000000e8ab9 : test eax, eax ; jne 0xe8ad9 ; mov eax, 0x55 ; syscall
0x00000000000ec609 : test eax, eax ; jne 0xec629 ; mov eax, 7 ; syscall
0x00000000000ed1ac : test eax, eax ; jne 0xed1d1 ; mov eax, 0x115 ; syscall
0x00000000000ed25c : test eax, eax ; jne 0xed281 ; mov eax, 0x11d ; syscall
0x00000000000edfa9 : test eax, eax ; jne 0xedfc9 ; mov eax, 0x13 ; syscall
0x00000000000ee049 : test eax, eax ; jne 0xee069 ; mov eax, 0x14 ; syscall
0x00000000000ee47a : test eax, eax ; jne 0xee4b1 ; mov eax, 0x71 ; syscall
0x00000000000ee51a : test eax, eax ; jne 0xee551 ; mov eax, 0x72 ; syscall
0x00000000000ee98c : test eax, eax ; jne 0xee9b1 ; mov eax, 0x17 ; syscall
0x00000000000eeba9 : test eax, eax ; jne 0xeebc9 ; mov eax, 0x4a ; syscall
0x00000000000eec59 : test eax, eax ; jne 0xeec79 ; mov eax, 0x4b ; syscall
0x00000000000f1c49 : test eax, eax ; jne 0xf1c69 ; mov eax, 0x1a ; syscall
0x00000000000f700c : test eax, eax ; jne 0xf7031 ; mov eax, 0xe8 ; syscall
0x00000000000f70bc : test eax, eax ; jne 0xf70e1 ; mov eax, 0x114 ; syscall
0x00000000000f716c : test eax, eax ; jne 0xf7191 ; mov eax, 0x116 ; syscall
0x00000000000f721c : test eax, eax ; jne 0xf7241 ; mov eax, 0x113 ; syscall
0x00000000000f72e9 : test eax, eax ; jne 0xf7309 ; mov eax, 0x130 ; syscall
0x00000000000f7c79 : test eax, eax ; jne 0xf7c99 ; mov eax, 0x2b ; syscall
0x00000000000f7d49 : test eax, eax ; jne 0xf7d69 ; mov eax, 0x2a ; syscall
0x00000000000f7f6c : test eax, eax ; jne 0xf7f91 ; mov eax, 0x2d ; syscall
0x00000000000f8039 : test eax, eax ; jne 0xf8059 ; mov eax, 0x2f ; syscall
0x00000000000f8199 : test eax, eax ; jne 0xf81b9 ; mov eax, 0x2e ; syscall
0x00000000000f823c : test eax, eax ; jne 0xf8261 ; mov eax, 0x2c ; syscall
0x00000000000f863c : test eax, eax ; jne 0xf8661 ; mov eax, 0x120 ; syscall
0x00000000000f86ec : test eax, eax ; jne 0xf8711 ; mov eax, 0x12b ; syscall
0x00000000000f879c : test eax, eax ; jne 0xf87c1 ; mov eax, 0x133 ; syscall
0x00000000000f893c : test eax, eax ; jne 0xf8961 ; mov eax, 0x45 ; syscall
0x00000000000f89ec : test eax, eax ; jne 0xf8a11 ; mov eax, 0x46 ; syscall
0x00000000000758cb : test eax, eax ; js 0x758dd ; ret
0x000000000007e636 : test eax, eax ; js 0x7e645 ; ret
0x00000000000a19cd : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xa19a1 ; ret
0x000000000011ae36 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000000e969d : test eax, eax ; sete dl ; jmp 0xe96db
0x00000000000576c1 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000006eeec : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000179e10 : test eax, ecx ; hlt ; call qword ptr [rsi]
0x00000000000f9010 : test eax, edx ; idiv edi ; inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000001651db : test ebp, ebp ; jne 0x1651c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000905f0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d2418 : test ebx, ebx ; je 0xd23d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117d6a : test ebx, ebx ; mov rdi, rbx ; jne 0x117d68 ; pop rbx ; ret
0x0000000000165447 : test ebx, ebx ; mov rdi, rbx ; jne 0x165440 ; pop rbx ; ret
0x0000000000165784 : test ebx, ebx ; mov rdx, rbx ; jne 0x165780 ; pop rbx ; ret
0x0000000000186875 : test ebx, edi ; call qword ptr [rdx + 0x12fffb84]
0x0000000000186871 : test ebx, edi ; call qword ptr [rdx]
0x00000000001869f1 : test ebx, edi ; call rax
0x00000000001869b1 : test ebx, edi ; jmp rax
0x0000000000090ac8 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000010bbbc : test ecx, 0xe901002a ; retf 0xfffd
0x00000000000ab69a : test ecx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015e712 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000165051 : test ecx, ecx ; je 0x16505b ; call rcx
0x000000000002b536 : test ecx, ecx ; je 0x2b540 ; call rcx
0x0000000000035a7b : test ecx, ecx ; je 0x35a75 ; ret
0x000000000007532f : test ecx, ecx ; je 0x75368 ; mov eax, edx ; pop rbx ; ret
0x00000000000a1c5b : test ecx, ecx ; jne 0xa1c55 ; ret
0x00000000000a1d2e : test ecx, ecx ; jne 0xa1d29 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000b28b9 : test ecx, ecx ; jne 0xb2878 ; mov rax, rdx ; ret
0x00000000000a0b13 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xa0b0f ; ret
0x00000000000adbc1 : test ecx, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000164ba5 : test edi, edi ; jne 0x164c1c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001083d2 : test edi, edi ; js 0x1083e9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000004a6ed : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x0000000000190001 : test edx, ebp ; jmp rsp
0x000000000018c821 : test edx, edi ; call rax
0x0000000000087f5b : test edx, edx ; add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; retf
0x0000000000104086 : test edx, edx ; je 0x104098 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000011dd40 : test edx, edx ; je 0x11dd50 ; mov rdi, rbp ; call rdx
0x00000000000778da : test edx, edx ; je 0x778f1 ; mov eax, 0xffffffff ; ret
0x0000000000077cba : test edx, edx ; je 0x77cd1 ; mov eax, 0xffffffff ; ret
0x0000000000096102 : test edx, edx ; je 0x96111 ; bsf eax, edx ; ret
0x00000000000961ab : test edx, edx ; je 0x961c8 ; bsf rax, rdx ; ret
0x000000000009637a : test edx, edx ; je 0x963a8 ; bsf rax, rdx ; ret
0x00000000000c4698 : test edx, edx ; je 0xc46a5 ; call rdx
0x000000000012aa70 : test edx, edx ; jne 0x12aa89 ; mov eax, 1 ; ret
0x000000000012aab0 : test edx, edx ; jne 0x12aac9 ; mov eax, 1 ; ret
0x00000000001659f9 : test edx, edx ; jne 0x165a05 ; ret
0x0000000000071d7f : test edx, edx ; jne 0x71d75 ; ret
0x000000000007a6a1 : test edx, edx ; jne 0x7a6b6 ; xor eax, eax ; ret
0x000000000007b21f : test edx, edx ; jne 0x7b215 ; ret
0x00000000000855d9 : test edx, edx ; jne 0x855d5 ; ret
0x000000000008a6f1 : test edx, edx ; jne 0x8a6e6 ; or byte ptr [rdi], sil ; ret
0x00000000000a30da : test edx, edx ; jne 0xa30d5 ; ret
0x00000000000cd718 : test edx, edx ; jne 0xcd708 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7380 : test edx, edx ; jne 0xf73a1 ; mov eax, 0x95 ; syscall
0x00000000000a1f3f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xa1f3f ; ret
0x00000000000b216f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb2170 ; ret
0x00000000000a238e : test edx, edx ; sete al ; ret
0x000000000015e705 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000000f02c1 : test esi, esi ; je 0xf0301 ; mov eax, 0x105 ; syscall
0x000000000018a691 : test esi, esi ; jmp qword ptr [rax]
0x0000000000096271 : test esi, esi ; jne 0x96280 ; xor rax, rax ; ret
0x00000000000b2621 : test esi, esi ; jne 0xb2630 ; xor rax, rax ; ret
0x0000000000088bd9 : test esi, esi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x000000000015e71f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000019e645 : test esp, esi ; call qword ptr [rax]
0x000000000019e609 : test esp, esi ; call qword ptr [rbx]
0x0000000000189c61 : test esp, esi ; jmp rax
0x00000000000e0f9e : test esp, esp ; idiv bh ; dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d89
0x0000000000085597 : test esp, esp ; jne 0x855bd ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035935 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000008cd81 : test r10b, r9b ; jne 0x8cd66 ; ret
0x0000000000085596 : test r12, r12 ; jne 0x855be ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000150552 : test r8d, r8d ; je 0x150560 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000151537 : test r8d, r8d ; je 0x151545 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000a1c70 : test r8d, r8d ; jne 0xa1c46 ; ret
0x000000000008ced8 : test r9b, dil ; jne 0x8cebe ; ret
0x00000000000b28b8 : test r9d, r9d ; jne 0xb2879 ; mov rax, rdx ; ret
0x00000000001046ff : test rax, rax ; je 0x104735 ; call rax
0x0000000000106769 : test rax, rax ; je 0x106781 ; add rsp, 8 ; ret
0x000000000010f4a3 : test rax, rax ; je 0x10f4b5 ; mov rdi, rbx ; call rax
0x0000000000117dc6 : test rax, rax ; je 0x117dd6 ; ret
0x000000000011b7ef : test rax, rax ; je 0x11b801 ; mov rdi, rbx ; call rax
0x000000000011c146 : test rax, rax ; je 0x11c158 ; mov rdi, rbp ; call rax
0x000000000011d16b : test rax, rax ; je 0x11d17d ; mov rdi, rbx ; call rax
0x0000000000122760 : test rax, rax ; je 0x122772 ; mov rdi, r12 ; call rax
0x0000000000122948 : test rax, rax ; je 0x12295c ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000123af9 : test rax, rax ; je 0x123b0b ; mov rdi, rbx ; call rax
0x0000000000123bbd : test rax, rax ; je 0x123bcf ; mov rdi, r12 ; call rax
0x000000000012477c : test rax, rax ; je 0x124790 ; lea rdi, [rbx + 0x68] ; call rax
0x0000000000124ea6 : test rax, rax ; je 0x124eb8 ; mov rdi, r12 ; call rax
0x000000000012520c : test rax, rax ; je 0x125220 ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000126fbc : test rax, rax ; je 0x126fce ; pop rbx ; ret
0x0000000000127d38 : test rax, rax ; je 0x127d4c ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001283d1 : test rax, rax ; je 0x1283e5 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000165150 : test rax, rax ; je 0x165161 ; call rax
0x0000000000021b1f : test rax, rax ; je 0x21b31 ; mov rdi, r12 ; call rax
0x000000000002b39a : test rax, rax ; je 0x2b3a6 ; call rax
0x000000000002c3b8 : test rax, rax ; je 0x2c3c4 ; call rax
0x00000000000787bc : test rax, rax ; je 0x787ce ; pop rbx ; ret
0x000000000007e5c0 : test rax, rax ; je 0x7e5cc ; call rax
0x0000000000085f4f : test rax, rax ; je 0x85f69 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c4596 : test rax, rax ; je 0xc45a2 ; call rax
0x00000000000c4720 : test rax, rax ; je 0xc472f ; call rax
0x00000000000ee74b : test rax, rax ; je 0xee758 ; ret
0x00000000000f0400 : test rax, rax ; je 0xf0411 ; mov qword ptr [rax], rdx ; ret
0x00000000000f416a : test rax, rax ; je 0xf41f9 ; call rax
0x00000000000f4301 : test rax, rax ; je 0xf43e9 ; call rax
0x00000000000f6d21 : test rax, rax ; jl 0xf6d40 ; je 0xf6d30 ; ret
0x0000000000118d97 : test rax, rax ; jne 0x118da6 ; ret
0x0000000000127cb4 : test rax, rax ; jne 0x127ca6 ; pop rbx ; ret
0x000000000007bddb : test rax, rax ; jne 0x7bdd6 ; ret
0x000000000007cb33 : test rax, rax ; jne 0x7cb2e ; ret
0x000000000008551e : test rax, rax ; jne 0x85517 ; xor eax, eax ; ret
0x00000000000e969c : test rax, rax ; sete dl ; jmp 0xe96dc
0x00000000001651da : test rbp, rbp ; jne 0x1651c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117d69 : test rbx, rbx ; mov rdi, rbx ; jne 0x117d69 ; pop rbx ; ret
0x0000000000165446 : test rbx, rbx ; mov rdi, rbx ; jne 0x165441 ; pop rbx ; ret
0x0000000000165783 : test rbx, rbx ; mov rdx, rbx ; jne 0x165781 ; pop rbx ; ret
0x0000000000165050 : test rcx, rcx ; je 0x16505c ; call rcx
0x000000000002b535 : test rcx, rcx ; je 0x2b541 ; call rcx
0x000000000011dd3f : test rdx, rdx ; je 0x11dd51 ; mov rdi, rbp ; call rdx
0x00000000000961aa : test rdx, rdx ; je 0x961c9 ; bsf rax, rdx ; ret
0x0000000000096379 : test rdx, rdx ; je 0x963a9 ; bsf rax, rdx ; ret
0x00000000000c4697 : test rdx, rdx ; je 0xc46a6 ; call rdx
0x00000000001659f8 : test rdx, rdx ; jne 0x165a06 ; ret
0x0000000000071d7e : test rdx, rdx ; jne 0x71d76 ; ret
0x000000000007a6a0 : test rdx, rdx ; jne 0x7a6b7 ; xor eax, eax ; ret
0x000000000007b21e : test rdx, rdx ; jne 0x7b216 ; ret
0x00000000000855d8 : test rdx, rdx ; jne 0x855d6 ; ret
0x00000000000cd717 : test rdx, rdx ; jne 0xcd709 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096270 : test rsi, rsi ; jne 0x96281 ; xor rax, rax ; ret
0x00000000000b2620 : test rsi, rsi ; jne 0xb2631 ; xor rax, rax ; ret
0x00000000000f2e6f : test sil, 1 ; jne 0xf2e87 ; ret
0x000000000008cb3f : test sil, sil ; jne 0x8cb38 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002c32 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007aa13 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000015d61a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000159bdc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015dcf5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000015a0c1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000015dcf9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000159d68 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x0000000000159e0f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000015d606 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000015d5ed : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000159b25 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000015a02b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000159cb3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000159c85 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000159fa2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000015dceb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015dcef : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015e1d2 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000015e298 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000015e4c1 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000015dd04 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000015dd08 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000015d923 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000015d7bc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000015d5be : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000015d582 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000015da85 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000015dea8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000015de0b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000015dcaa : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000156101 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000410ca : vpsrld ymm1, ymm15, xmmword ptr [rax + 0x63] ; retf 0x3e7e
0x0000000000155538 : vzeroupper ; ret
0x0000000000155710 : vzeroupper ; xor eax, eax ; ret
0x00000000000b47b1 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000196aa5 : wait ; add byte ptr [rax], al ; cwde ; fucomip st(6) ; jmp qword ptr [rax]
0x000000000019a349 : wait ; int1 ; jmp rbx
0x0000000000106cd2 : wait ; mov rax, rdi ; ret
0x000000000007bcc1 : wait ; ret
0x0000000000087241 : wait ; sub byte ptr [rip + 0x450f4800], cl ; ret 0x66c3
0x00000000000d1b9c : wait ; test al, 1 ; je 0xd1b40 ; xor eax, eax ; pop rbx ; ret
0x000000000017a430 : wait ; xchg eax, esp ; cmc ; call qword ptr [rax]
0x000000000017a3c4 : wait ; xchg eax, esp ; cmc ; call rax
0x000000000009f58d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009f60f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009f711 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002c88 : xabort -0xd ; ret
0x0000000000002c84 : xbegin 0xfffffffff8c6f084 ; ret
0x000000000015035f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000150b83 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001524cf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ff4f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000150c73 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000150a93 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014fa5b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015026b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000156ffc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000015681c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000156c0c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015642c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158f2d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018686d : xchg bl, bh ; call qword ptr [rdx + 0x12fffb85]
0x0000000000186869 : xchg bl, bh ; call qword ptr [rdx]
0x00000000001869e9 : xchg bl, bh ; call rax
0x00000000001869a9 : xchg bl, bh ; jmp rax
0x0000000000157a31 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000158c31 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000158331 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000158631 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157d29 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000a04e2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000001514db : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000015302f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015280f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014fcdf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000151fef : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000112163 : xchg byte ptr [rax - 0x77000000], bl ; ret
0x000000000015001f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000151033 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000015033b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f7a11 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001565cb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015040b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152b4f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001507c3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000015232f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000151b0f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000152cef : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001501bf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000151213 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001509a3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014f9af : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001513f3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014fdaf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000174c75 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000156abc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001562dc : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001573ec : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000024b42 : xchg byte ptr [rdi], cl ; retf 0x1489
0x0000000000087f59 : xchg byte ptr [rdi], cl ; test edx, edx ; add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; retf
0x000000000015028f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000151303 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014fa7f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000151e4f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000196f47 : xchg byte ptr [rdx], al ; add cl, byte ptr [rsi + rcx + 8] ; ret
0x000000000014fb21 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150c45 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004d7f5 : xchg byte ptr [rdx], ch ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000150d35 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150b55 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000024975 : xchg byte ptr [rip + 0x3d8d4800], dl ; ret 0x15
0x000000000014fe7f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000157fd6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151f85 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152c85 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000158ed6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001585d6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001582d6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001527a5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001569bd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000157cce : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001572ed : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001500ef : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001508b3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000000edb17 : xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000001547df : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001545ff : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000154fd7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000153ef7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000154df7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001410ff : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000004ea60 : xchg cl, dh ; or eax, 0x894c0000 ; ret 0x894c
0x0000000000152fc5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001522c5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000151de5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152ae5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000156b0d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002629 : xchg dh, ch ; ret 0x88ad
0x000000000015632d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fb45 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000150a65 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150885 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150975 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150795 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000002d65 : xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000000b9e85 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000045114 : xchg dword ptr [rax + rax - 0x76bc0000], esp ; retf 0x8341
0x000000000005bb02 : xchg dword ptr [rax - 0x77000000], ebp ; ret 0x349
0x000000000007dc37 : xchg dword ptr [rax - 0xcfffff8], eax ; ret
0x00000000000f6fd1 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000005d65f : xchg dword ptr [rax], ebp ; add byte ptr [rax], al ; call 0x3a116
0x0000000000174c78 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000001747ff : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000000633ac : xchg dword ptr [rbp - 0x77000000], edx ; ret 0x348
0x00000000000a1c6f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000067490 : xchg dword ptr [rbx - 0x76ffffd8], ecx ; retf 0x348
0x000000000006a0ac : xchg dword ptr [rbx - 0x77000000], eax ; ret 0x348
0x000000000005b9b6 : xchg dword ptr [rbx - 0x77000000], edx ; ret 0x349
0x0000000000067bf1 : xchg dword ptr [rbx - 0x7cffffe8], edx ; ret 0xbf08
0x000000000008707e : xchg dword ptr [rbx], ecx ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000179b44 : xchg dword ptr [rbx], edi ; hlt ; call rsp
0x0000000000173a6c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000e7411 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000066b06 : xchg dword ptr [rcx - 0x76ffffdc], ebx ; retf 0x348
0x0000000000059d48 : xchg dword ptr [rcx - 0x76ffffe4], ebp ; ret 0x349
0x000000000006329b : xchg dword ptr [rcx - 0x77000000], esi ; ret 0x348
0x00000000000a94d8 : xchg dword ptr [rdi + rax + 0x39480000], ebp ; ret 0xd67d
0x00000000000a46a8 : xchg dword ptr [rdi + rax + 0x39480000], edi ; ret 0xd67d
0x0000000000056b4c : xchg dword ptr [rdi + rbx - 0x7cb80000], esi ; ret 0x481e
0x000000000008520f : xchg dword ptr [rdi - 0x76b7fff1], ebp ; ret 0xff31
0x00000000000609c8 : xchg dword ptr [rdi - 0x76ffffeb], edx ; retf 0x348
0x000000000004f28c : xchg dword ptr [rdi - 0x76fffff2], edx ; ret 0x349
0x0000000000067669 : xchg dword ptr [rdi - 0x7cffffe6], esi ; ret 0xbf08
0x0000000000103f8d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x103f8d ; pop rdx ; pop r10 ; ret
0x0000000000060642 : xchg dword ptr [rdx - 0x7cffffe7], edx ; ret 0xbf08
0x0000000000065e21 : xchg dword ptr [rip - 0x76ffffbf], edi ; retf 0x348
0x000000000005a892 : xchg dword ptr [rip - 0x76ffffed], eax ; ret 0x349
0x00000000000e8456 : xchg dword ptr [rip - 0x76ffffff], ecx ; ret
0x0000000000061a72 : xchg dword ptr [rip - 0x7cffffe5], edx ; ret 0xbf08
0x000000000004db68 : xchg dword ptr [rsi - 0x76ffffdc], ebp ; ret 0x349
0x000000000011f375 : xchg dword ptr [rsi - 0x77000000], esp ; retf 0x894c
0x000000000006045d : xchg dword ptr [rsi - 0x7cffffe6], ebp ; ret 0xbf08
0x0000000000067ba1 : xchg dword ptr [rsi - 0x7cffffee], esi ; ret 0xbf08
0x000000000008ad97 : xchg dword ptr [rsi], ebp ; add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; retf
0x0000000000173c0b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000053cc4 : xchg eax, ebp ; adc al, byte ptr [rax] ; add dh, dh ; ret 0xf40
0x0000000000153b38 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000ca5d6 : xchg eax, ebp ; add byte ptr [rax + 0x39], cl ; retf 0x8841
0x00000000000c0582 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d6726 : xchg eax, ebp ; add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x000000000018b889 : xchg eax, ebp ; clc ; jmp qword ptr [rax]
0x000000000017a58d : xchg eax, ebp ; cmc ; inc dword ptr [rbp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x000000000017a575 : xchg eax, ebp ; cmc ; jmp qword ptr [rax + 0x20fff595]
0x000000000017a539 : xchg eax, ebp ; cmc ; jmp qword ptr [rax]
0x00000000000d318a : xchg eax, ebp ; cmp dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000178875 : xchg eax, ebp ; int1 ; inc eax ; xchg eax, edi ; int1 ; call rax
0x0000000000173f49 : xchg eax, ebp ; jge 0x173f2c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000008ced6 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xf3db75f9 ; ret
0x0000000000001edb : xchg eax, ebp ; mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000105576 : xchg eax, ebp ; mov rax, rdi ; ret
0x000000000002e9c5 : xchg eax, ebp ; push 0xfffffff ; retf 0xc089
0x000000000000211b : xchg eax, ebp ; ret
0x00000000001647d0 : xchg eax, ebp ; ret 0x145
0x000000000011713e : xchg eax, ebp ; ret 0x233c
0x0000000000117153 : xchg eax, ebp ; ret 0x2c3c
0x000000000008cd78 : xchg eax, ebp ; ret 0x3941
0x0000000000100a19 : xchg eax, ebp ; ret 0x3945
0x00000000000e8d6c : xchg eax, ebp ; ret 0x3948
0x00000000000e9b1d : xchg eax, ebp ; ret 0x5ee9
0x000000000011a92d : xchg eax, ebp ; ret 0x8041
0x000000000008196a : xchg eax, ebp ; ret 0x8348
0x00000000000f0b0c : xchg eax, ebp ; ret 0x8440
0x00000000000b366a : xchg eax, ebp ; ret 0x8545
0x0000000000044ab7 : xchg eax, ebp ; ret 0x854d
0x00000000000475c7 : xchg eax, ebp ; ret 0x941
0x000000000004757e : xchg eax, ebp ; ret 0xb60f
0x00000000000f0b1b : xchg eax, ebp ; ret 0xc084
0x000000000003b46c : xchg eax, ebp ; ret 0xc148
0x0000000000162aed : xchg eax, ebp ; ret 0xc149
0x0000000000082d51 : xchg eax, ebp ; ret 0xd020
0x0000000000036929 : xchg eax, ebp ; ret 0xd021
0x0000000000116d2f : xchg eax, ebp ; ret 0xd184
0x0000000000162e1c : xchg eax, ebp ; ret 0xd349
0x0000000000035c3f : xchg eax, ebp ; ret 0xd521
0x000000000006d6a2 : xchg eax, ebp ; ret 0xdaf7
0x0000000000163110 : xchg eax, ebp ; ret 0xf45
0x0000000000003bb5 : xchg eax, ebp ; retf 0x10bf
0x0000000000174802 : xchg eax, ebp ; retf 0x33e6
0x00000000000d1a43 : xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000008cd7f : xchg eax, ebp ; rol dword ptr [rbp - 0x7c], 0xca ; jne 0x8cd68 ; ret
0x00000000000ef502 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006aeea : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000de8be : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000072b0d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000002c31 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000175c5c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000120f05 : xchg eax, ebx ; adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x0000000000073d82 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000001962cd : xchg eax, ebx ; add byte ptr [rax], al ; mov al, 0xb9 ; out dx, al ; call qword ptr [rdx]
0x00000000001a62c1 : xchg eax, ebx ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x000000000015b070 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003a8d : xchg eax, ebx ; and cl, ah ; ret
0x00000000001a2b29 : xchg eax, ebx ; cmc ; call rsi
0x000000000019eaf5 : xchg eax, ebx ; hlt ; jmp qword ptr [rsi]
0x00000000001765ec : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000009b20c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000137932 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000175b03 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x175add
0x0000000000030fb9 : xchg eax, ebx ; ret
0x0000000000161099 : xchg eax, ebx ; ret 0x2045
0x0000000000001ee2 : xchg eax, ebx ; retf
0x0000000000003bae : xchg eax, ebx ; sbb al, 0xb ; push rbp ; jg 0x3c25 ; xchg eax, ebp ; retf 0x10bf
0x000000000011e10e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000162b8b : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x000000000008713d : xchg eax, ecx ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000018a68d : xchg eax, ecx ; add dword ptr [rax], eax ; push rsp ; test esi, esi ; jmp qword ptr [rax]
0x0000000000105371 : xchg eax, ecx ; add eax, 0x450f4800 ; ret 0xfc3
0x00000000000c64d3 : xchg eax, ecx ; fldcw word ptr [rsi] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000019ea09 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001897f1 : xchg eax, ecx ; jmp rsp
0x00000000001530d1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000185ffc : xchg eax, ecx ; movsxd rdi, ebp ; jmp qword ptr [rcx]
0x000000000019608d : xchg eax, ecx ; out dx, al ; call rsi
0x00000000000f7bd3 : xchg eax, ecx ; ret 0x2b
0x000000000009c89f : xchg eax, ecx ; ret 0xd
0x000000000008102b : xchg eax, ecx ; retf
0x00000000000f73d3 : xchg eax, ecx ; retf 0x2b
0x00000000001983b1 : xchg eax, ecx ; sti ; call qword ptr [rax]
0x00000000001865e1 : xchg eax, ecx ; sti ; call qword ptr [rsi + 0x26fffb90]
0x000000000018671d : xchg eax, ecx ; sti ; call rsp
0x0000000000186719 : xchg eax, ecx ; sti ; inc dword ptr [rcx + rdx*4 - 5] ; call rsp
0x000000000018659d : xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x00000000001517ff : xchg eax, ecx ; sub eax, edx ; ret
0x000000000006db1f : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000004d659 : xchg eax, edi ; adc al, byte ptr [rax] ; jmp rax
0x000000000007e745 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e73f8 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x0000000000032761 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000173fb5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x173f83 ; mov ecx, 0x5b92ac50 ; retf
0x000000000019ec55 : xchg eax, edi ; hlt ; call rdi
0x00000000000ca355 : xchg eax, edi ; idiv bh ; dec dword ptr [rbx - 0x7cb7ebbd] ; ret
0x0000000000178879 : xchg eax, edi ; int1 ; call rax
0x0000000000105935 : xchg eax, edi ; jns 0x105932 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000003b44e : xchg eax, edi ; ret
0x00000000000fb435 : xchg eax, edi ; ret 0x2b
0x0000000000082671 : xchg eax, edi ; ret 0x36e9
0x0000000000120aff : xchg eax, edi ; ret 0x3944
0x000000000011858b : xchg eax, edi ; ret 0x8440
0x000000000010d4cb : xchg eax, edi ; ret 0x920f
0x0000000000120b0e : xchg eax, edi ; ret 0xd284
0x0000000000001ed1 : xchg eax, edi ; retf 0x20f4
0x000000000017491d : xchg eax, edi ; retf 0xe152
0x00000000000c594e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000f99b6 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000e9e49 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000010e1fb : xchg eax, edi ; sbb eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012f217 : xchg eax, edi ; sti ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x0000000000175c5b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001740b8 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000000d1ba0 : xchg eax, edi ; xor eax, eax ; pop rbx ; ret
0x000000000018a6c5 : xchg eax, edx ; add dword ptr [rax], eax ; push rsp ; mov dh, dh ; call qword ptr [rax]
0x00000000000d6f51 : xchg eax, edx ; add rdx, r10 ; jmp rdx
0x0000000000113e1a : xchg eax, edx ; fdivr st(7) ; inc dword ptr [rbp - 0x14728b40] ; ret 0x1f0f
0x00000000001922c5 : xchg eax, edx ; in eax, dx ; jmp qword ptr [rcx]
0x000000000017597d : xchg eax, edx ; jae 0x17595a ; push rsi ; pop rdx ; je 0x17594f ; ret 0xacfc
0x0000000000086fea : xchg eax, edx ; jns 0x87001 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000086fea : xchg eax, edx ; jns 0x87003 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000186b80 : xchg eax, edx ; mov bl, 0xfb ; jmp qword ptr [rdx]
0x0000000000173fbc : xchg eax, edx ; pop rbx ; retf
0x0000000000087b8a : xchg eax, edx ; ret
0x00000000000c519d : xchg eax, edx ; ret 0x148
0x00000000000a57a6 : xchg eax, edx ; ret 0x2948
0x000000000003bf96 : xchg eax, edx ; ret 0x294c
0x0000000000045eb7 : xchg eax, edx ; ret 0x8949
0x00000000000e9e2e : xchg eax, edx ; ret 0x970f
0x0000000000162ab2 : xchg eax, edx ; ret 0xc031
0x00000000000c5951 : xchg eax, edx ; ret 0xd029
0x0000000000085b43 : xchg eax, edx ; ret 0xf083
0x00000000001552f5 : xchg eax, edx ; ret 0xf40
0x0000000000173a6f : xchg eax, edx ; ret 0xf869
0x0000000000062b77 : xchg eax, edx ; retf 0xffff
0x00000000001551dd : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000101c0a : xchg eax, edx ; sar bh, cl ; dec dword ptr [rcx] ; ret
0x0000000000186599 : xchg eax, edx ; sti ; call qword ptr [rax + 0x20fffb91]
0x0000000000186655 : xchg eax, edx ; sti ; call rdx
0x00000000001865d5 : xchg eax, edx ; sti ; jmp rsi
0x0000000000150557 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000186878 : xchg eax, edx ; test bl, bh ; call qword ptr [rdx]
0x0000000000186870 : xchg eax, edx ; test ebx, edi ; call qword ptr [rdx]
0x0000000000186868 : xchg eax, edx ; xchg bl, bh ; call qword ptr [rdx]
0x0000000000186860 : xchg eax, edx ; xchg ebx, edi ; call qword ptr [rdx]
0x000000000007d716 : xchg eax, edx ; xor eax, dword ptr [rax] ; ret
0x000000000015b370 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013e6c3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000196629 : xchg eax, esi ; add byte ptr [rax], al ; hlt ; retf 0xffee
0x0000000000196671 : xchg eax, esi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000002626 : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a6659 : xchg eax, esi ; add dword ptr [rax], eax ; and al, 0xd7 ; idiv bh ; ret 0
0x00000000000a0574 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000000450ba : xchg eax, esi ; add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x000000000005c277 : xchg eax, esi ; add rdx, rsi ; jmp rdx
0x000000000018c8a9 : xchg eax, esi ; cli ; jmp rax
0x000000000017a5dd : xchg eax, esi ; cmc ; dec dword ptr [rcx] ; xchg eax, ebp ; cmc ; jmp qword ptr [rax]
0x000000000017a611 : xchg eax, esi ; cmc ; dec esi ; xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x000000000017a545 : xchg eax, esi ; cmc ; jmp qword ptr [rax]
0x000000000017a599 : xchg eax, esi ; cmc ; jmp qword ptr [rbx]
0x000000000017a66d : xchg eax, esi ; cmc ; lcall [rsp + rdx*4 - 0xb] ; jmp qword ptr [rax]
0x000000000017a65d : xchg eax, esi ; cmc ; push qword ptr [rsi - 0x6c] ; cmc ; jmp qword ptr [rax]
0x000000000019a221 : xchg eax, esi ; int1 ; jmp qword ptr [rax]
0x0000000000175d68 : xchg eax, esi ; jnp 0x175db7 ; retf 0x99e0
0x000000000015b42d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000186adc : xchg eax, esi ; mov bh, 0xfb ; jmp qword ptr [rsi]
0x00000000001246fc : xchg eax, esi ; mov dh, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000015b38b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001865e4 : xchg eax, esi ; nop ; sti ; jmp qword ptr [rsi]
0x00000000000a86a6 : xchg eax, esi ; ret
0x0000000000085e0b : xchg eax, esi ; ret 0x3145
0x0000000000113847 : xchg eax, esi ; ret 0x8341
0x00000000000ae566 : xchg eax, esi ; ret 0xc085
0x000000000017630c : xchg eax, esi ; ret 0xcd11
0x00000000000c9def : xchg eax, esi ; ret 0xd009
0x00000000000ae5c7 : xchg eax, esi ; ret 0xd284
0x0000000000085db3 : xchg eax, esi ; ret 0xf631
0x000000000004722e : xchg eax, esi ; retf
0x000000000015b3dc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000002ec0 : xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000018cdc9 : xchg eax, esi ; std ; call rsp
0x0000000000186044 : xchg eax, esi ; std ; push qword ptr [rsi] ; std ; call rsi
0x000000000018b618 : xchg eax, esp ; adc edi, eax ; jmp rax
0x0000000000188da4 : xchg eax, esp ; add al, byte ptr [rcx] ; add byte ptr [rcx + rdi*8 - 0x11], dh ; jmp rsp
0x00000000000abe97 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000ce4e8 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], al ; call 0xfa7f9
0x0000000000086fa2 : xchg eax, esp ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000196411 : xchg eax, esp ; add byte ptr [rax], al ; jl 0x1963e2 ; stc ; call qword ptr [rcx]
0x0000000000126638 : xchg eax, esp ; add byte ptr cs:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001a3a8c : xchg eax, esp ; add dh, dh ; jmp qword ptr [rbx]
0x00000000001a6381 : xchg eax, esp ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; retf
0x000000000003ba1b : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d5516 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3145
0x00000000000abff0 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000007190b : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000017a431 : xchg eax, esp ; cmc ; call qword ptr [rax]
0x000000000017a3c5 : xchg eax, esp ; cmc ; call rax
0x000000000017a5f1 : xchg eax, esp ; cmc ; jmp qword ptr [rax]
0x000000000019a80c : xchg eax, esp ; fadd dword ptr [rax] ; add al, al ; hlt ; int1 ; call qword ptr [rax]
0x000000000018cac8 : xchg eax, esp ; fdiv st(2), st(0) ; push qword ptr [rax] ; retf
0x0000000000177ad8 : xchg eax, esp ; fsub st(6), st(0) ; call rbx
0x00000000001a9145 : xchg eax, esp ; idiv edi ; ret 2
0x0000000000189a18 : xchg eax, esp ; in al, 0xf3 ; jmp rsp
0x0000000000188cbc : xchg eax, esp ; inc byte ptr [rax] ; add byte ptr [rdx + rbp*8 - 0x11], ah ; call rax
0x00000000001884d0 : xchg eax, esp ; int1 ; out dx, al ; jmp rsp
0x000000000018a600 : xchg eax, esp ; jg 0x18a5fc ; jmp rsp
0x0000000000188a70 : xchg eax, esp ; jne 0x188a65 ; jmp qword ptr [rax]
0x0000000000002661 : xchg eax, esp ; jnp 0x2687 ; retf
0x000000000018b060 : xchg eax, esp ; js 0x18b05d ; call qword ptr [rax]
0x000000000018c8d8 : xchg eax, esp ; lahf ; cli ; jmp qword ptr [rax]
0x00000000001883d4 : xchg eax, esp ; leave ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000189510 : xchg eax, esp ; mov al, 0xf2 ; call rsp
0x0000000000189888 : xchg eax, esp ; mov bh, 0xf3 ; jmp rsp
0x00000000001927dc : xchg eax, esp ; mov ch, 0xed ; call qword ptr [rax]
0x000000000018c9e8 : xchg eax, esp ; mov dh, 0xfa ; jmp qword ptr [rax]
0x000000000010140a : xchg eax, esp ; mov dword ptr [rcx + 8], 0xf6df75f8 ; ret 0x7508
0x0000000000188298 : xchg eax, esp ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; inc dword ptr [rax] ; ret
0x00000000000c680b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000002dea : xchg eax, esp ; or cl, byte ptr [rcx - 0x13e347e0] ; clc ; ret
0x0000000000154739 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000188790 : xchg eax, esp ; out dx, eax ; call qword ptr [rax]
0x000000000018cd70 : xchg eax, esp ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000189f84 : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rsp ; ret
0x00000000001a1b1c : xchg eax, esp ; pop rsi ; cmc ; jmp qword ptr [rcx]
0x00000000001ac50c : xchg eax, esp ; pop rsp ; clc ; call rsp
0x000000000018cb40 : xchg eax, esp ; pop rsp ; sti ; call qword ptr [rax]
0x000000000017651f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1764b0 ; ret 0x48f
0x000000000008476d : xchg eax, esp ; ret
0x00000000000def40 : xchg eax, esp ; ret 0x1589
0x00000000000e8e3b : xchg eax, esp ; ret 0x2044
0x00000000000a458e : xchg eax, esp ; ret 0x2948
0x00000000000afb52 : xchg eax, esp ; ret 0x3145
0x00000000000e96a0 : xchg eax, esp ; ret 0x33eb
0x000000000008ce2e : xchg eax, esp ; ret 0x3941
0x0000000000114c18 : xchg eax, esp ; ret 0x3b44
0x00000000001261a7 : xchg eax, esp ; ret 0x3d83
0x00000000000df3d1 : xchg eax, esp ; ret 0x5408
0x0000000000043fa0 : xchg eax, esp ; ret 0x540a
0x00000000000fef87 : xchg eax, esp ; ret 0x5422
0x00000000000b3860 : xchg eax, esp ; ret 0x5438
0x00000000000efbaa : xchg eax, esp ; ret 0x5c3c
0x00000000000b36b7 : xchg eax, esp ; ret 0x6348
0x0000000000080583 : xchg eax, esp ; ret 0x7de9
0x00000000000efb75 : xchg eax, esp ; ret 0x8040
0x00000000000cd885 : xchg eax, esp ; ret 0x8341
0x0000000000118070 : xchg eax, esp ; ret 0x8349
0x000000000011636f : xchg eax, esp ; ret 0x841
0x00000000000d4b51 : xchg eax, esp ; ret 0x8548
0x00000000000c4929 : xchg eax, esp ; ret 0x854d
0x00000000000540e0 : xchg eax, esp ; ret 0x86e9
0x000000000006a8d1 : xchg eax, esp ; ret 0x8b48
0x00000000000b95e0 : xchg eax, esp ; ret 0x8d4c
0x000000000002ee91 : xchg eax, esp ; ret 0xb60f
0x00000000000c69e7 : xchg eax, esp ; ret 0xbdeb
0x00000000000d8319 : xchg eax, esp ; ret 0xc083
0x00000000001551e0 : xchg eax, esp ; ret 0xc085
0x00000000000e9161 : xchg eax, esp ; ret 0xc221
0x0000000000053e51 : xchg eax, esp ; ret 0xc931
0x00000000000e8c78 : xchg eax, esp ; ret 0xca21
0x00000000000c9fdd : xchg eax, esp ; ret 0xd008
0x00000000000c9fd0 : xchg eax, esp ; ret 0xd009
0x0000000000117ef2 : xchg eax, esp ; ret 0xd021
0x0000000000043fae : xchg eax, esp ; ret 0xd084
0x00000000001643f3 : xchg eax, esp ; ret 0xd231
0x0000000000021abc : xchg eax, esp ; ret 0xd284
0x000000000008cc53 : xchg eax, esp ; ret 0xd308
0x00000000000e186e : xchg eax, esp ; ret 0xd320
0x000000000006fe7d : xchg eax, esp ; ret 0xdaf7
0x0000000000053767 : xchg eax, esp ; ret 0xf45
0x000000000002396e : xchg eax, esp ; ret 0xfae9
0x0000000000163d68 : xchg eax, esp ; ret 0xff31
0x0000000000102038 : xchg eax, esp ; ret 0xffff
0x000000000018b274 : xchg eax, esp ; retf
0x000000000018b1f0 : xchg eax, esp ; retf 0xfff7
0x00000000000c9de9 : xchg eax, esp ; rol byte ptr [rcx + rdi - 0x3f], 0xf ; xchg eax, esi ; ret 0xd009
0x00000000000b63dc : xchg eax, esp ; rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x0000000000087bb3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000425a3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000c9fca : xchg eax, esp ; ror byte ptr [rcx + rdi - 0x31], 0xf ; xchg eax, esp ; ret 0xd009
0x0000000000083992 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000117eec : xchg eax, esp ; sar byte ptr [rcx], 0x4f ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x000000000018eb0c : xchg eax, esp ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; call qword ptr [rdx]
0x00000000001891cc : xchg eax, esp ; sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rbx*4 - 0xf], ah ; jmp rax
0x000000000018a260 : xchg eax, esp ; sbb esi, esi ; call rax
0x000000000018c9a8 : xchg eax, esp ; scasb al, byte ptr [rdi] ; cli ; call rsp
0x000000000019c90c : xchg eax, esp ; stc ; add byte ptr [rax], al ; adc byte ptr [rdx], ch ; call rcx
0x000000000018bcb8 : xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000018bd48 : xchg eax, esp ; stc ; jmp rax
0x00000000000a2d70 : xchg eax, esp ; std ; or eax, 0x358d4800 ; ret 0xdb9
0x000000000018fdac : xchg eax, esp ; sub al, 0xfa ; call qword ptr [rdi]
0x00000000000e0684 : xchg eax, esp ; sub eax, 0x58b4800 ; retf 0x2d87
0x00000000001a2f2c : xchg eax, esp ; test al, 0xf5 ; call rsi
0x000000000018c8a8 : xchg eax, esp ; xchg eax, esi ; cli ; jmp rax
0x0000000000173f43 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x000000000018ae68 : xchg eax, esp ; xor dh, bh ; jmp qword ptr [rax]
0x0000000000001ee1 : xchg eax, r11d ; retf
0x0000000000102da4 : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000450d1 : xchg ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf 0x8341
0x0000000000186865 : xchg ebx, edi ; call qword ptr [rdx + 0x12fffb86]
0x0000000000186861 : xchg ebx, edi ; call qword ptr [rdx]
0x00000000001869e1 : xchg ebx, edi ; call rax
0x00000000001869a1 : xchg ebx, edi ; jmp rax
0x0000000000077011 : xchg edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000018c831 : xchg edx, edi ; jmp qword ptr [rax]
0x000000000008bf11 : xchg edx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000019b835 : xchg edx, esi ; jmp qword ptr [rcx]
0x0000000000082171 : xchg edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000f2585 : xchg esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x0000000000195ee5 : xchg esi, ebp ; jmp rax
0x0000000000057417 : xchg esi, edx ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ac866 : xchg esp, ebp ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; retf 0x8941
0x0000000000120f04 : xchg rax, rbx ; adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x00000000001a62c0 : xchg rax, rbx ; add dword ptr [rax], eax ; pushfq ; retf 0xfff6
0x000000000018861d : xlatb ; add byte ptr [rax], al ; adc dil, r13b ; call qword ptr [rax]
0x0000000000170f59 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000018b4f5 : xlatb ; add dword ptr [rax], eax ; in al, 3 ; clc ; call qword ptr [rax]
0x00000000001377f9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000002dff : xlatb ; cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x0000000000086565 : xlatb ; cwde ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000002733 : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x00000000001a665d : xlatb ; idiv bh ; ret 0
0x00000000000ede72 : xlatb ; ja 0xedea4 ; ret
0x000000000009ff83 : xlatb ; jb 0x9ff8e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000895d5 : xlatb ; jl 0x895d9 ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x0000000000032a4d : xlatb ; jmp rdi
0x00000000000f4f26 : xlatb ; jne 0xf4f1f ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000174ae3 : xlatb ; jo 0x174b5f ; mov ebp, 0xfb67d10d ; ret
0x000000000004a772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x00000000000c4891 : xlatb ; mov eax, esi ; syscall
0x00000000000c48a0 : xlatb ; mov eax, r8d ; syscall
0x000000000000239c : xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000034367 : xlatb ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x000000000008c73d : xlatb ; movzx r8d, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8c6d1
0x0000000000173ef0 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000018ba8 : xlatb ; pop rbp ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000ef5f8 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000090504 : xlatb ; ret
0x0000000000175f86 : xlatb ; ret 0x4e27
0x0000000000003368 : xlatb ; ret 0x5a51
0x0000000000095fa7 : xlatb ; ret 0x94c
0x00000000000904ef : xlatb ; ret 0xc085
0x000000000008e9b0 : xlatb ; ret 0xc148
0x0000000000155c44 : xlatb ; ret 0xe883
0x0000000000090cdb : xlatb ; ret 0xf188
0x0000000000096124 : xlatb ; ret 0xf66
0x0000000000155e08 : xlatb ; ret 0xff2d
0x0000000000095b8d : xlatb ; retf
0x0000000000108e55 : xlatb ; retf 0x2a
0x00000000000b2492 : xlatb ; retf 0x8548
0x0000000000173f44 : xlatb ; retf 0xa1eb
0x0000000000096084 : xlatb ; retf 0xc148
0x00000000001595a2 : xlatb ; retf 0xc985
0x0000000000174e72 : xlatb ; retf 0xdf7f
0x000000000008d630 : xlatb ; retf 0xead3
0x00000000000b233c : xlatb ; retf 0xf66
0x0000000000159475 : xlatb ; retf 0xfdc5
0x000000000005fad5 : xlatb ; retf 0xffff
0x00000000000908d1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000001594d5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000906b3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000090b56 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x0000000000090b85 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x0000000000155752 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000159222 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000009b67e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000015e6c6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000090af4 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008e896 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008e756 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008e616 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008e4d6 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008e396 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008e256 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008e116 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008dfd6 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008de96 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008dd56 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008dc16 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008dad6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008d996 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008d856 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000008d716 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000015e6c2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000095f45 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000095f56 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000f6b36 : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000001787d9 : xlatb ; sti ; jmp rax
0x00000000000e713b : xlatb ; syscall
0x0000000000132a38 : xlatb ; xor eax, eax ; ret
0x000000000009acb8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009ac4e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000185f60 : xor ah, bl ; cld ; call qword ptr [rax]
0x0000000000002658 : xor ah, byte ptr [rsi] ; sahf ; jl 0x25f0 ; loop 0x263c ; ret 0x943d
0x0000000000179bdd : xor ah, dh ; lcall [rip - 0x1f000b3e] ; ret 0xfff4
0x000000000000df48 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a92c0 : xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f7de1 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000190411 : xor al, 0 ; add byte ptr [rbx + rdx*4 - 0x16], cl ; call qword ptr [rdx]
0x0000000000190439 : xor al, 0 ; add byte ptr [rbx + rdx*4 - 0x16], dl ; call qword ptr [rdx]
0x000000000005fc0e : xor al, 0 ; add byte ptr [rbx - 0x78f0d006], al ; ret
0x00000000001a3b2c : xor al, 0x11 ; stc ; jmp qword ptr [rbx]
0x0000000000173a6a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000010fa52 : xor al, 0x24 ; mov rdi, r13 ; call r12
0x00000000001253c2 : xor al, 0x24 ; mov rdi, rbp ; call rbx
0x00000000000f2408 : xor al, 0x2c ; add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00000000000cd792 : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002099 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000d2130 : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd214f
0x00000000000d212f : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd2150
0x00000000000d212e : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd2151
0x00000000001a145c : xor al, 0x3a ; cmc ; jmp qword ptr [rcx]
0x0000000000194ccc : xor al, 0x42 ; out dx, al ; jmp rdx
0x0000000000090c0b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x0000000000175b06 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000018c6f0 : xor al, 0x5d ; cli ; jmp rax
0x00000000001a1f2c : xor al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x000000000010bb26 : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x10baf6
0x00000000001108a6 : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x110876
0x0000000000121826 : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x1217f6
0x00000000000fc1d6 : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0xfc1a6
0x00000000000fdab6 : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0xfda86
0x0000000000195b8c : xor al, 0x78 ; out dx, al ; call qword ptr [rdx]
0x000000000008be53 : xor al, 0x83 ; ret 0x4101
0x000000000002bf22 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x0000000000114d99 : xor al, 0xa4 ; shl rsi, 3 ; call 0x21028
0x000000000018b8f0 : xor al, 0xaf ; clc ; call rsp
0x000000000006c333 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000001a8eac : xor al, 0xbf ; add dword ptr [rax], eax ; mov al, 0x85 ; idiv edi ; retf 0
0x000000000019dbac : xor al, 0xc ; add dword ptr [rax], eax ; adc byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rcx]
0x0000000000179df8 : xor al, 0xc7 ; hlt ; call qword ptr [rcx]
0x0000000000179ce4 : xor al, 0xc7 ; hlt ; call qword ptr [rsi]
0x00000000001997ac : xor al, 0xc8 ; add byte ptr [rax], al ; mov al, 0x1a ; int1 ; call qword ptr [rax]
0x0000000000179d50 : xor al, 0xc8 ; hlt ; jmp qword ptr [rax]
0x000000000018b1e0 : xor al, 0xca ; idiv edi ; mov ah, 0xc9 ; add dword ptr [rax], eax ; retf 0xfff7
0x000000000018b260 : xor al, 0xcd ; idiv edi ; insb byte ptr [rdi], dx ; retf
0x0000000000174c4a : xor al, 0xd8 ; ret
0x000000000018cab8 : xor al, 0xdc ; cli ; jmp rax
0x00000000001899d8 : xor al, 0xe2 ; jmp qword ptr [rax]
0x00000000000b3668 : xor al, 0xf ; xchg eax, ebp ; ret 0x8545
0x0000000000178a45 : xor al, 0xf2 ; call qword ptr [rax]
0x00000000001938cc : xor al, 0xf2 ; in eax, dx ; jmp rsp
0x0000000000178a41 : xor al, 0xf2 ; jmp rax
0x0000000000178a3d : xor al, 0xf2 ; push qword ptr [rax - 0x1f000dcc] ; xor al, 0xf2 ; call qword ptr [rax]
0x00000000000c43cb : xor al, 0xf3 ; ret
0x00000000001ac6ac : xor al, 0xf7 ; add dword ptr [rax], eax ; rol byte ptr [rax - 5], 1 ; call rax
0x00000000001862dd : xor al, 0xfb ; call rax
0x000000000018633d : xor al, 0xfb ; inc dword ptr [rax] ; sti ; call rax
0x0000000000186219 : xor al, 0xfb ; jmp rax
0x00000000000a16c8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f7b31 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000f6b3b : xor al, al ; or eax, edx ; ret
0x000000000000075d : xor al, byte ptr [rax + rcx*4 + 0x2000008a] ; add byte ptr [rdx], dl ; retf
0x0000000000010018 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000f7e71 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001901ed : xor al, byte ptr [rax] ; add byte ptr [rax], dl ; mov ebp, edx ; call qword ptr [rsi]
0x000000000008527e : xor al, byte ptr [rax] ; call qword ptr [rax]
0x00000000000eecd1 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000ea378 : xor al, ch ; ret 0xfd5a
0x00000000000f4096 : xor al, ch ; retf 0xfff7
0x000000000019861d : xor al, dh ; call rsp
0x00000000000ec498 : xor ax, ax ; ret
0x000000000018e640 : xor bh, 0xe9 ; call qword ptr [rbx]
0x0000000000186339 : xor bh, bl ; call qword ptr [rax]
0x0000000000186215 : xor bh, bl ; inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x0000000000186235 : xor bh, bl ; push rax ; xor edi, ebx ; call rax
0x000000000018ae49 : xor bh, dh ; call rax
0x000000000018ae51 : xor bh, dh ; jmp rsp
0x000000000009073c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000000239f : xor bl, al ; retf 0x23c4
0x0000000000186231 : xor bl, bh ; call qword ptr [rax]
0x0000000000186271 : xor bl, bh ; call rax
0x0000000000186211 : xor bl, bh ; jmp qword ptr [rax]
0x0000000000186335 : xor bl, bh ; push qword ptr [rax] ; xor bh, bl ; call qword ptr [rax]
0x0000000000186251 : xor bl, bh ; push rax ; xor ebx, edi ; call rax
0x0000000000185f80 : xor bl, ch ; cld ; call qword ptr [rax]
0x000000000007d856 : xor bl, dh ; ret
0x00000000001193c0 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000a17bc : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000009060d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000000e6853 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000073fe2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000044fb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x4502d ; xor eax, eax ; ret
0x00000000000a0424 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000d2197 : xor byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x774
0x00000000000d64eb : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000000b4fcc : xor byte ptr [r8], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x212d1
0x00000000000ed479 : xor byte ptr [rax + 0x10], bh ; syscall
0x00000000000f7407 : xor byte ptr [rax + 0x149], bh ; syscall
0x000000000003485b : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000076c90 : xor byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000084626 : xor byte ptr [rax + 0x31], cl ; ret 0x3949
0x00000000000ffed9 : xor byte ptr [rax + 0x39], cl ; ret 0xf375
0x00000000000b8a4b : xor byte ptr [rax + 0x63], cl ; retf 0x6b48
0x00000000000b70d0 : xor byte ptr [rax + 0x63], cl ; retf 0x8d48
0x000000000011139b : xor byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000095a01 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000001590b2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000001250e4 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000090be6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000073fe3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000000eb930 : xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000051d6d : xor byte ptr [rax + rax], dl ; add byte ptr [rbx - 0x71f0cb08], al ; retf 0xfff9
0x0000000000194c30 : xor byte ptr [rax - 0x12], al ; call rdi
0x0000000000185eac : xor byte ptr [rax - 0x5eff0004], ah ; cld ; call rax
0x000000000009dd67 : xor byte ptr [rax - 0x73], cl ; ret
0x00000000000452e8 : xor byte ptr [rax - 0x75], cl ; jbe 0x45364 ; xor eax, eax ; ret
0x0000000000044fb8 : xor byte ptr [rax - 0x75], cl ; jg 0x4502c ; xor eax, eax ; ret
0x00000000000c4d23 : xor byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x00000000000452e7 : xor byte ptr [rax - 0x75], r9b ; jbe 0x45365 ; xor eax, eax ; ret
0x000000000009aebf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000012a820 : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x0000000000121ff9 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x28 ; call rcx
0x00000000000a28af : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000118c70 : xor byte ptr [rax - 0x77], cl ; ret
0x0000000000164938 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000000fed7e : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d1a1e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000045745 : xor byte ptr [rax - 0x77], cl ; retf
0x00000000001193c1 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000002495f : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000008b6bf : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a0425 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000178798 : xor byte ptr [rax - 0xf], ah ; call qword ptr [rax]
0x000000000007433b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000017b82c : xor byte ptr [rax], ah ; cli ; jmp qword ptr [rax]
0x000000000018fffd : xor byte ptr [rax], al ; add al, al ; test edx, ebp ; jmp rsp
0x00000000000d2198 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x774
0x0000000000072c32 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x00000000000d64ec : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000000b47f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x212d0
0x0000000000021d19 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008634b : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000066c58 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call 0x636a6
0x0000000000021a9e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000377c3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000002e1f5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000044bc6 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000038004 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000037897 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000002ea2e : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000006f0db : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000a05c3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f8331 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001046fb : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x104739 ; call rax
0x00000000000b4fcd : xor byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x212d0
0x00000000000722aa : xor byte ptr [rax], al ; je 0x722b5 ; ret
0x000000000019ffa8 : xor byte ptr [rax], dh ; add dword ptr [rax], eax ; je 0x19ffa1 ; hlt ; jmp qword ptr [rcx]
0x000000000009f7a7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000186250 : xor byte ptr [rax], dh ; sti ; push rax ; xor ebx, edi ; call rax
0x000000000007bff8 : xor byte ptr [rbp + 0x25], 0x5b ; ret
0x00000000000a17c0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000a17bf : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000a01f5 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000001a5680 : xor byte ptr [rbp - 0xa], ch ; jmp rbx
0x0000000000077b87 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000236cf : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005628c : xor byte ptr [rbx - 0x2e89f607], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000a4abd : xor byte ptr [rbx - 0x78f0fa08], al ; retf
0x00000000000488c9 : xor byte ptr [rbx - 0x79f0f606], al ; retf 1
0x0000000000186804 : xor byte ptr [rbx - 0x7d5f0005], al ; sti ; call qword ptr [rax]
0x0000000000190aa8 : xor byte ptr [rbx], bh ; add byte ptr [rax], al ; mov ah, 0x1f ; cli ; jmp qword ptr [rcx]
0x00000000000a17bd : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000019daa8 : xor byte ptr [rbx], cl ; add dword ptr [rax], eax ; or r14d, esp ; call qword ptr [rbx]
0x00000000000062a8 : xor byte ptr [rcx + 0x10], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000164485 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x0000000000085e11 : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x0000000000009a40 : xor byte ptr [rcx + 8], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000162d01 : xor byte ptr [rcx + 9], cl ; retf 0x2149
0x000000000011fb30 : xor byte ptr [rcx + 9], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000198a30 : xor byte ptr [rcx - 0x10], bh ; call qword ptr [rax]
0x0000000000185ed4 : xor byte ptr [rcx - 0x55df0004], ch ; cld ; call qword ptr [rax]
0x0000000000086996 : xor byte ptr [rcx - 0x73], cl ; je 0x869a8 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000030415 : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000003b447 : xor byte ptr [rcx - 0x7d], al ; sti ; or dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x0000000000173f4e : xor byte ptr [rcx], ah ; retf
0x00000000001895ad : xor byte ptr [rcx], al ; add ah, dl ; ret 0xfff2
0x000000000019ffe5 : xor byte ptr [rcx], al ; add al, ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000007433c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000787e7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006db20 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f72ee : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000019ffa9 : xor byte ptr [rcx], al ; add byte ptr [rsp + rbp*8 - 0xc], dh ; jmp qword ptr [rcx]
0x00000000000ceabf : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fa33a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000001862d4 : xor byte ptr [rcx], dh ; sti ; call qword ptr [rax]
0x00000000000cd152 : xor byte ptr [rcx], dl ; je 0xcd166 ; xor eax, eax ; ret
0x0000000000185fcc : xor byte ptr [rdi - 3], bl ; push qword ptr [rbp + 0x5c] ; std ; jmp qword ptr [rcx]
0x00000000001862f0 : xor byte ptr [rdi], ch ; sti ; push rax ; xor bl, bh ; call rax
0x00000000000e6854 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x00000000000f203b : xor byte ptr [rdi], cl ; lahf ; ret 0x8545
0x0000000000071e40 : xor byte ptr [rdi], cl ; ret 0x4389
0x000000000011db09 : xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000049916 : xor byte ptr [rdi], cl ; test dword ptr [rax], ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a41a8 : xor byte ptr [rdx + 1], dh ; add byte ptr [rbp + rdx - 0xa], dl ; call rdx
0x00000000001861f0 : xor byte ptr [rdx - 3], dh ; jmp rcx
0x00000000001863d4 : xor byte ptr [rdx - 5], bl ; call qword ptr [rax]
0x000000000018c325 : xor byte ptr [rdx], al ; add byte ptr [rbp + rax - 6], dl ; call rax
0x0000000000195efe : xor byte ptr [rdx], al ; ret
0x0000000000186338 : xor byte ptr [rdx], dh ; sti ; call qword ptr [rax]
0x000000000018c414 : xor byte ptr [rip + 0x19040002], 0xfa ; jmp rsp
0x00000000001862bc : xor byte ptr [rip + 0x3710fffb], dh ; sti ; jmp rax
0x000000000015b11f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000095f0c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000009060e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000178894 : xor byte ptr [rsi - 0x57bf000f], ah ; int1 ; jmp rax
0x0000000000175c5e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000018fda8 : xor byte ptr [rsi], ch ; add byte ptr [rax], al ; xchg eax, esp ; sub al, 0xfa ; call qword ptr [rdi]
0x0000000000173f3f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x173eef
0x0000000000178840 : xor ch, ah ; sti ; jmp qword ptr [rax + 0x10fffbe6]
0x00000000000b583a : xor ch, byte ptr [rbx] ; cld ; dec dword ptr [rax + 0x39] ; ret
0x0000000000186d7c : xor ch, byte ptr [rdx - 0x564d0005] ; sti ; jmp qword ptr [rdx]
0x000000000009f538 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009f54e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f570 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f58e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009f5ae : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f5d4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009f5f0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f610 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009f630 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009f656 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f678 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009f696 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009f6b6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009f6d2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009f6f2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009f712 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009f732 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009f758 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009f7a8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009f47e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009f49c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009f4bc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009f4de : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f4fe : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f51e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009f3b4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009f3c6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009f3dc : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009f3f4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009f40a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009f41c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009f43a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009f446 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009f45c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009f3a0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001946d5 : xor ch, dh ; jmp rdi
0x00000000001a1145 : xor ch, dh ; jmp rsp
0x0000000000188acc : xor cl, 0 ; add ah, al ; stosb byte ptr [rdi], al ; out dx, eax ; call rsp
0x0000000000186fcc : xor cl, 0xfc ; jmp qword ptr [rax]
0x00000000000ba6a8 : xor cl, byte ptr [rax - 0x75] ; je 0xba6d9 ; adc byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000395f7 : xor cl, byte ptr [rax - 0x77] ; ret 0x10e8
0x000000000003939a : xor cl, byte ptr [rax - 0x77] ; ret 0x6de8
0x0000000000039142 : xor cl, byte ptr [rax - 0x77] ; ret 0xc5e8
0x0000000000047235 : xor cl, byte ptr [rax - 0x77] ; ret 0xd2e8
0x00000000000c2261 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000d4e23 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000001209bc : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000cd167 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000057f0a : xor cl, byte ptr [rsi + 0x39480001] ; ret
0x000000000009ab30 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000186f9c : xor dh, 0xfc ; call rax
0x000000000018ae69 : xor dh, bh ; jmp qword ptr [rax]
0x0000000000187f69 : xor dh, ch ; jmp rax
0x000000000002c2b5 : xor dh, dh ; ret 0x4002
0x00000000000ea08a : xor dh, dh ; ret 0xf01
0x0000000000178a09 : xor dh, dl ; call qword ptr [rax]
0x0000000000178a01 : xor dh, dl ; call rax
0x0000000000178a05 : xor dh, dl ; push rax ; xor dh, dl ; call qword ptr [rax]
0x000000000018ae48 : xor dil, r14b ; call rax
0x000000000018c541 : xor dl, bh ; call qword ptr [rax]
0x000000000002d6df : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000f4416 : xor dword ptr [rax + 0x88], edi ; syscall
0x0000000000007ec9 : xor dword ptr [rax + rax], ecx ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001176f2 : xor dword ptr [rax - 0x75], ecx ; jl 0x117722 ; and al, ch ; retf
0x00000000000531dd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x000000000008cb3e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000174ef6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000010fbd6 : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000f7d11 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000007fb91 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x00000000000eea7e : xor dword ptr [rcx - 0x77], ecx ; fdivr dword ptr [rax + 0x10e] ; syscall
0x00000000001a007d : xor dword ptr [rcx], eax ; add byte ptr [rax - 0x11], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000f75f1 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000008cd06 : xor dword ptr [rcx], edi ; ret 0x2d74
0x0000000000186130 : xor dword ptr [rdx - 3], 0xfd73e1ff ; jmp rcx
0x000000000018c415 : xor eax, 0x19040002 ; cli ; jmp rsp
0x000000000006efc8 : xor eax, 0x1d3 ; mov rdi, rbp ; call rax
0x00000000000ed197 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000132b93 : xor eax, 0x283d98 ; xor eax, eax ; ret
0x0000000000042165 : xor eax, 0x336 ; call rax
0x000000000006380b : xor eax, 0x350750 ; call rax
0x000000000005c08e : xor eax, 0x357ecd ; call rax
0x000000000005bcea : xor eax, 0x358271 ; call rax
0x0000000000058ead : xor eax, 0x35b0ae ; call rax
0x0000000000050315 : xor eax, 0x363c46 ; call rax
0x000000000004d3cb : xor eax, 0x366b90 ; call rax
0x00000000001862bd : xor eax, 0x3710fffb ; sti ; jmp rax
0x000000000018629d : xor eax, 0x3740fffb ; sti ; jmp qword ptr [rax]
0x00000000000fecca : xor eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015dfa3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001019f1 : xor eax, 0x7e3b5 ; call 0x2e487
0x00000000000c61f1 : xor eax, 0x8948fff7 ; ret 0x8b48
0x00000000000e78b2 : xor eax, 0xb8c7894c ; test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000024e5 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000007c839 : xor eax, 0xffffe382 ; call rax
0x000000000007c4d6 : xor eax, 0xffffe6e5 ; call rax
0x000000000004f2d5 : xor eax, 0xffffe9e6 ; add rax, rsi ; jmp rax
0x000000000007c1d0 : xor eax, 0xffffe9eb ; call rax
0x000000000004e840 : xor eax, 0xfffff47b ; add rax, rsi ; jmp rax
0x000000000004e6af : xor eax, 0xfffff60c ; add rax, rsi ; jmp rax
0x000000000007afc0 : xor eax, 0xfffffbfb ; call rax
0x000000000004deae : xor eax, 0xfffffe0d ; add rax, rsi ; jmp rax
0x000000000006f333 : xor eax, 0xfffffe68 ; call rax
0x000000000007acb2 : xor eax, 0xffffff09 ; call rax
0x0000000000118eed : xor eax, 0xffffffff ; xor eax, eax ; ret
0x0000000000021a9b : xor eax, dword ptr [0x30] ; call rax
0x000000000002e1f2 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000082573 : xor eax, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012b3e2 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007cee0 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f7e11 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000084fe5 : xor eax, dword ptr [rax] ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x000000000008409d : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000084128 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007d6c6 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007ce76 : xor eax, dword ptr [rax] ; add dword ptr [rip + 0x339a25], 1 ; ret
0x0000000000086302 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000083943 : xor eax, dword ptr [rax] ; jae 0x83968 ; lea rax, [rdx - 8] ; ret
0x0000000000082563 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000007ec79 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000086315 : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x3306ca], rax ; ret
0x0000000000080523 : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rcx ; xor edi, edi ; call qword ptr [rax]
0x000000000007cde5 : xor eax, dword ptr [rax] ; ret
0x000000000007e634 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x7e647 ; ret
0x0000000000080443 : xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000001a0371 : xor eax, dword ptr [rcx] ; add ah, bl ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000000f87a1 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000bf028 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000044549 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000083256 : xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000038d4d : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cebad : xor eax, eax ; add rsp, 8 ; ret
0x000000000002dd00 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000011cbd0 : xor eax, eax ; call 0x129624
0x00000000001346d4 : xor eax, eax ; call 0x21104
0x000000000006b858 : xor eax, eax ; call 0x77aa4
0x000000000012a826 : xor eax, eax ; call rdx
0x00000000000380c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x380d8 ; pop rbx ; ret
0x00000000000d1b64 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1b07 ; ret
0x0000000000117e93 : xor eax, eax ; cmp dx, word ptr [rsi] ; je 0x117ea8 ; ret
0x00000000000fa33b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c8cd3 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000cef4d : xor eax, eax ; cmp edx, dword ptr [r8 + rcx*4] ; je 0xcef79 ; ret
0x00000000000ceec3 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xceed8 ; ret
0x00000000000f29f9 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xf2a11 ; ret
0x00000000000cd3c4 : xor eax, eax ; cmp r10d, r8d ; je 0xcd3e8 ; ret
0x0000000000117f15 : xor eax, eax ; cmp r11, rdx ; je 0x117f28 ; ret
0x00000000000ede6e : xor eax, eax ; cmp rdi, rdx ; ja 0xedea8 ; ret
0x00000000001039c7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000012f970 : xor eax, eax ; jmp 0x12f93a
0x000000000012f9f0 : xor eax, eax ; jmp 0x12f9ba
0x000000000007a0a0 : xor eax, eax ; jmp 0x7a06a
0x0000000000059231 : xor eax, eax ; jmp rax
0x000000000011dfa0 : xor eax, eax ; jmp rcx
0x0000000000112f58 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000ed350 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000ee0f1 : xor eax, eax ; mov eax, 0x127 ; syscall
0x00000000000ee1a1 : xor eax, eax ; mov eax, 0x128 ; syscall
0x00000000000ee270 : xor eax, eax ; mov eax, 0x147 ; syscall
0x00000000000ee380 : xor eax, eax ; mov eax, 0x148 ; syscall
0x00000000000f80e4 : xor eax, eax ; mov eax, 0x2c ; syscall
0x00000000000f7eb4 : xor eax, eax ; mov eax, 0x2d ; syscall
0x00000000000c4271 : xor eax, eax ; mov eax, 0xf7 ; syscall
0x000000000015a220 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x15a214 ; ret
0x0000000000038707 : xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x0000000000112f14 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000104841 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001253be : xor eax, eax ; mov rsi, qword ptr [rsp] ; mov rdi, rbp ; call rbx
0x00000000001228e7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000038ed0 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000cfe00 : xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000cfce4 : xor eax, eax ; movups xmmword ptr [rdi], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001048a7 : xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000088b72 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003229f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011be32 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000011d66f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000023b5e : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b2e75 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000037a3e : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023cb7 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033296 : xor eax, eax ; pop rbx ; ret
0x0000000000113a2d : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000358b8 : xor eax, eax ; ret
0x000000000008ebbe : xor eax, eax ; sub eax, ecx ; ret
0x00000000000e80cd : xor eax, eax ; syscall
0x00000000001028b1 : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x1028c9 ; pop rbx ; ret
0x00000000000774b0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x00000000000774c0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a238c : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000015565c : xor eax, eax ; vzeroupper ; ret
0x0000000000038a48 : xor eax, ecx ; ret
0x0000000000038047 : xor eax, edx ; sub eax, edx ; ret
0x000000000003805b : xor eax, edx ; sub rax, rdx ; ret
0x000000000002e580 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6d29 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000002917 : xor ebp, edi ; out dx, al ; retf 0x182c
0x000000000006de33 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000124fc3 : xor ebx, ebx ; call 0x212cc
0x0000000000062b74 : xor ebx, ebx ; jmp 0x5f611
0x000000000002ad56 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a7f0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000001862d5 : xor ebx, edi ; call qword ptr [rax]
0x0000000000186255 : xor ebx, edi ; call rax
0x0000000000036c83 : xor ecx, dword ptr [rax + 0x39] ; ret
0x000000000005df18 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000025749 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011247f : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000085322 : xor ecx, dword ptr [rcx + rcx*4 - 0x31] ; call rcx
0x0000000000111724 : xor ecx, dword ptr [rcx - 0x76b80000] ; ret 0xdf89
0x0000000000034130 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000002a0b9 : xor ecx, ecx ; call r15
0x00000000000a2699 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000011954c : xor edi, dword ptr [0x30] ; call rax
0x00000000000f02c4 : xor edi, dword ptr [rax + 0x105] ; syscall
0x00000000001178b3 : xor edi, eax ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000186239 : xor edi, ebx ; call rax
0x00000000001862d9 : xor edi, ebx ; push rax ; xor al, 0xfb ; call rax
0x0000000000080445 : xor edi, edi ; call qword ptr [rax]
0x00000000000bed15 : xor edi, edi ; call rax
0x00000000000a3001 : xor edi, edi ; jmp 0xa2fd3
0x00000000000bed2a : xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000021ad0 : xor edi, edi ; mov eax, edx ; syscall
0x00000000000a1d32 : xor edi, edi ; mov rax, rdi ; ret
0x00000000000f1b9d : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000000ed9bc : xor edi, edi ; syscall
0x00000000000377c0 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000022903 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000059fd0 : xor edx, edx ; jmp rax
0x00000000000a269b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000f8c91 : xor edx, edx ; mov eax, 0x1d ; syscall
0x00000000000c414e : xor edx, edx ; mov eax, 0x3d ; syscall
0x000000000008cca0 : xor edx, edx ; mov qword ptr [rdi], rdx ; pop rbx ; ret
0x000000000008cc0d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000004ec79 : xor edx, edx ; mov r11d, 1 ; jmp rax
0x000000000004f2f9 : xor edx, edx ; mov r9d, 1 ; jmp rax
0x0000000000082714 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000009fe33 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000082a20 : xor edx, edx ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000006fa56 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ed0e8 : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x00000000000e7663 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001789e9 : xor edx, esi ; call qword ptr [rax]
0x00000000001789e1 : xor edx, esi ; call rax
0x00000000001789e5 : xor edx, esi ; push rax ; xor edx, esi ; call qword ptr [rax]
0x00000000000835d5 : xor esi, dword ptr [rbx] ; add dh, dh ; ret 0xf02
0x000000000019cb89 : xor esi, ebx ; jmp rax
0x0000000000178a29 : xor esi, edx ; call qword ptr [rax]
0x0000000000178a21 : xor esi, edx ; call rax
0x0000000000178a25 : xor esi, edx ; push rax ; xor esi, edx ; call qword ptr [rax]
0x00000000000ed0ea : xor esi, esi ; mov eax, 0x118 ; syscall
0x0000000000104681 : xor esi, esi ; mov edi, edx ; syscall
0x000000000006da90 : xor esi, esi ; mov rax, rsi ; ret
0x0000000000037d8e : xor esi, esi ; mov rdi, r9 ; call rdx
0x00000000000e7665 : xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000b610f : xor esi, esi ; mov rdx, r12 ; call 0xb2b87
0x00000000000ec9c2 : xor esi, esi ; syscall
0x0000000000179b59 : xor esi, esp ; jmp qword ptr [rbx]
0x0000000000132849 : xor esp, dword ptr [rbx] ; lock inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000000e75c9 : xor esp, esp ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a01 : xor esp, esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8c90 : xor r10d, r10d ; mov eax, 0x1d ; syscall
0x00000000000c414d : xor r10d, r10d ; mov eax, 0x3d ; syscall
0x000000000004ec78 : xor r10d, r10d ; mov r11d, 1 ; jmp rax
0x00000000000fef6a : xor r15d, r15d ; call rax
0x00000000000a3000 : xor r15d, r15d ; jmp 0xa2fd4
0x00000000000824f9 : xor r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000112fb2 : xor r8d, r8d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000059230 : xor r8d, r8d ; jmp rax
0x00000000000ee0f0 : xor r8d, r8d ; mov eax, 0x127 ; syscall
0x00000000000ee1a0 : xor r8d, r8d ; mov eax, 0x128 ; syscall
0x00000000000ee26f : xor r8d, r8d ; mov eax, 0x147 ; syscall
0x00000000000ee37f : xor r8d, r8d ; mov eax, 0x148 ; syscall
0x00000000000f80e3 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x00000000000f7eb3 : xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000000c4270 : xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x00000000000cd166 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x000000000002a0b8 : xor r9d, r9d ; call r15
0x00000000000ed196 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000021a9a : xor rax, qword ptr [0x30] ; call rax
0x000000000002e1f1 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021a99 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002e1f0 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000096275 : xor rax, rax ; ret
0x000000000003805a : xor rax, rdx ; sub rax, rdx ; ret
0x000000000011954b : xor rdi, qword ptr [0x30] ; call rax
0x000000000011954a : xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000377bf : xor rdx, qword ptr [0x30] ; call rdx
0x00000000000377be : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 26141
