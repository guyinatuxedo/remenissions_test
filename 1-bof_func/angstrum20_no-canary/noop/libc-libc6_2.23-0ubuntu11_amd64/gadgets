Gadgets information
============================================================
0x0000000000194fb4 : adc ah, byte ptr [rcx - 0x5e1d0003] ; std ; jmp rdx
0x000000000005ee2e : adc ah, byte ptr [rsi - 0x77] ; add ch, cl ; retf 0xffd9
0x0000000000187e1c : adc ah, ch ; int1 ; jmp qword ptr [rax]
0x00000000001af230 : adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000019cfc5 : adc al, 0 ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x000000000014712f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147199 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000004cba : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001a8630 : adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x00000000001a86d8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a8690 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x00000000001a7d80 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a8678 : adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000000fcd2e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000fcfda : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001a7dc8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001b86c8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; retf
0x000000000008beb8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004b515 : adc al, 0 ; call 0x777f4
0x0000000000047065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000033295 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000012afb5 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001510f5 : adc al, 0x13 ; jmp rdx
0x000000000009f5b5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000019d54c : adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x000000000019b0f8 : adc al, 0x22 ; cli ; call rsp
0x000000000019ae7c : adc al, 0x23 ; add al, byte ptr [rax] ; retf 0xfff9
0x00000000000fd42a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000039fc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000023cc : adc al, 0x2d ; retf
0x00000000000a9de3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000c23ab : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000001af44c : adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x0000000000121c38 : adc al, 0x39 ; or al, 0x75 ; retf 0x8b41
0x00000000001afa4c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x000000000007ef0a : adc al, 0x41 ; pop rsp ; ret
0x00000000000a7520 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000000a8373 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x000000000009f16b : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001b094c : adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c4c : adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x000000000019ab10 : adc al, 0x52 ; stc ; call rsp
0x00000000001b114c : adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b114f ; jmp qword ptr [rcx]
0x000000000019b310 : adc al, 0x56 ; cli ; jmp rsp
0x0000000000198c18 : adc al, 0x6d ; call rsp
0x00000000001b2a4c : adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x0000000000003502 : adc al, 0x75 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000008635a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000001b364c : adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000002ec97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000f7716 : adc al, 0x89 ; ret 0xdaf7
0x0000000000072eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000012dc6b : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000ee79b : adc al, 0x8b ; sbb al, 0x39 ; retf 0x850f
0x000000000005bf54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e47 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000e1294 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000198e80 : adc al, 0x91 ; hlt ; jmp rsp
0x00000000001485c0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000146cee : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001510f1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000852ea : adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000197668 : adc al, 0x9c ; in eax, dx ; call rsp
0x0000000000089d97 : adc al, 0xa ; jmp r10
0x000000000009f723 : adc al, 0xa ; sub eax, edx ; ret
0x000000000005c14a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000d9b47 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x0000000000109624 : adc al, 0xac ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000cdcdd : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x000000000009c252 : adc al, 0xb0 ; jmp 0x98ceb
0x000000000010ab84 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000127641 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001a794c : adc al, 0xbe ; add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x0000000000048031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000019b660 : adc al, 0xc3 ; cli ; jmp rsp
0x0000000000048035 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x0000000000035f44 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000197840 : adc al, 0xcc ; in eax, dx ; jmp rsp
0x00000000000bcd3e : adc al, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000001a994c : adc al, 0xde ; add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000000bb252 : adc al, 0xe ; jne 0xbb24d ; ret
0x0000000000144e01 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000002b87 : adc al, 0xe7 ; ret
0x00000000000c1555 : adc al, 0xe9 ; ret 0xffef
0x00000000000c260c : adc al, 0xe9 ; ret 0xfff9
0x0000000000173e61 : adc al, 0xea ; test rdx, rdx ; je 0x173e71 ; call rdx
0x00000000001971b1 : adc al, 0xeb ; call rsp
0x000000000012db1d : adc al, 0xf ; retf 0xd189
0x00000000000a7ee9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001978f8 : adc al, 0xf0 ; in eax, dx ; call rsp
0x00000000001aac71 : adc al, 0xf2 ; call qword ptr [rdx]
0x0000000000198ed9 : adc al, 0xf5 ; call rsp
0x0000000000199309 : adc al, 0xf6 ; call rsp
0x00000000001956dd : adc al, 0xfc ; call qword ptr [rax - 0x1f0003eb]
0x0000000000172818 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000107d7d : adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000007d9bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x00000000000b9f3f : adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x0000000000026b73 : adc al, 6 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000009ebb6 : adc al, 7 ; cmp edx, esi ; je 0x9ebb7 ; ret
0x000000000009eae2 : adc al, 7 ; test dl, dl ; jne 0x9eadf ; ret
0x000000000019c34c : adc al, 8 ; add byte ptr [rax], al ; js 0x19c342 ; jmp qword ptr [rcx]
0x0000000000044e0f : adc al, 9 ; ret 0x9f74
0x0000000000003cc3 : adc al, bh ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x0000000000195230 : adc al, bl ; sti ; call rax
0x00000000001472d7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147341 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000057e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000f5acd : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000930ee : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000222bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000063882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005bf50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000001ab5ea : adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001acdd5 : adc al, byte ptr [rcx] ; add al, ch ; fpatan ; jmp qword ptr [rcx]
0x00000000001acdbd : adc al, byte ptr [rcx] ; add al, dl ; fpatan ; jmp qword ptr [rcx]
0x00000000001ace35 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x00000000000a2a14 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000014c73f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f351e : adc al, ch ; cmp al, 0xb3 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x0000000000046eef : adc al, ch ; imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000013f917 : adc al, ch ; ret
0x00000000000f2ce0 : adc al, ch ; retf 0xf579
0x00000000001bab21 : adc bh, al ; jmp qword ptr [rbx]
0x0000000000132e30 : adc bh, bh ; ror byte ptr [rax - 0x77], 1 ; out dx, eax ; call 0x1f8b0
0x0000000000141c6a : adc bh, byte ptr [rax + 3] ; syscall
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000195f20 : adc bh, byte ptr [rbp - 4] ; call qword ptr [rdx + 0x12fffc7c]
0x0000000000195f30 : adc bh, byte ptr [rbx - 4] ; call qword ptr [rdx + 0x12fffc7a]
0x00000000000ac820 : adc bh, byte ptr [rbx] ; ja 0xac834 ; cmove rax, rcx ; ret
0x0000000000195f38 : adc bh, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x12fffc79]
0x0000000000195f28 : adc bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x195f32 ; call qword ptr [rdx]
0x0000000000187ed0 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x00000000000e2009 : adc bh, dh ; ret 0x30f
0x000000000011e1b4 : adc bh, dh ; ret 0x8080
0x0000000000195288 : adc bl, ah ; sti ; call qword ptr [rax]
0x00000000001ae810 : adc bl, bl ; hlt ; call qword ptr [rbx]
0x0000000000034f38 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001952b8 : adc bl, bl ; sti ; push rax ; fdiv st(3), st(0) ; call rax
0x0000000000196448 : adc bl, byte ptr [rsi - 0x627d0004] ; cld ; call qword ptr [rdx]
0x000000000008f965 : adc bl, ch ; call 0xffffffffc3d982ba
0x0000000000089a75 : adc bl, ch ; call 0xffffffffc40123ca
0x000000000008b275 : adc bl, ch ; call 0xffffffffc4013bca
0x0000000000048982 : adc bl, ch ; jno 0x489d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008f284 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000a6b06 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e76 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5ee7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5e47 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002da6a : adc bl, dh ; ret
0x00000000000a6b05 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e75 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000079616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000115191 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000089382 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000003737d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037eca : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000037376 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000000dabbb : adc byte ptr [r8 + 0x39], r9b ; retf
0x00000000001435f7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000c84b9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848d
0x000000000007cd7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000168e3a : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000007e42e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000000cf485 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a9d5c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000074083 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000107f88 : adc byte ptr [rax + 0x130], bh ; syscall
0x00000000000fcf78 : adc byte ptr [rax + 0x13], bh ; syscall
0x00000000000fcfd8 : adc byte ptr [rax + 0x14], bh ; syscall
0x00000000001017a8 : adc byte ptr [rax + 0x1a], bh ; syscall
0x00000000000cc288 : adc byte ptr [rax + 0x22], bh ; syscall
0x00000000000cc2e8 : adc byte ptr [rax + 0x23], bh ; syscall
0x000000000004857c : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000052b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000000a647a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000a5c9a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000108128 : adc byte ptr [rax + 0x2a], bh ; syscall
0x0000000000108098 : adc byte ptr [rax + 0x2b], bh ; syscall
0x0000000000108488 : adc byte ptr [rax + 0x2e], bh ; syscall
0x0000000000108368 : adc byte ptr [rax + 0x2f], bh ; syscall
0x0000000000037377 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000136082 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x0000000000108a9f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000e2441 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2466 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000007eaab : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x00000000000dabbc : adc byte ptr [rax + 0x39], cl ; retf
0x00000000000839ed : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x000000000007f457 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x0000000000083ca6 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000007f05d : adc byte ptr [rax + 0x39], cl ; retf 0x2373
0x00000000000cf090 : adc byte ptr [rax + 0x39], cl ; retf 0xea72
0x0000000000136081 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x0000000000108a9e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000000fd768 : adc byte ptr [rax + 0x4a], bh ; syscall
0x00000000000fd7f8 : adc byte ptr [rax + 0x4b], bh ; syscall
0x00000000000f7a38 : adc byte ptr [rax + 0x55], bh ; syscall
0x00000000001435f8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000128a3e : adc byte ptr [rax + 0x63], cl ; cmc ; mov eax, 0x81 ; syscall
0x00000000000e558a : adc byte ptr [rax + 0x63], cl ; retf 0xd289
0x0000000000078b3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001096fa : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012eb7a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000132316 : adc byte ptr [rax + 1], bh ; ret
0x00000000000f72b8 : adc byte ptr [rax + 1], bh ; syscall
0x00000000000aaf8e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004906e : adc byte ptr [rax + 1], cl ; ret
0x000000000009f166 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000010a228 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000000c8488 : adc byte ptr [rax + 1], cl ; retf 0x8348
0x00000000001359dd : adc byte ptr [rax + 1], dil ; ret
0x00000000000c8487 : adc byte ptr [rax + 1], r9b ; retf 0x8348
0x00000000000d8e3f : adc byte ptr [rax + 2], bh ; ret
0x00000000000f7038 : adc byte ptr [rax + 2], bh ; syscall
0x00000000000f78e8 : adc byte ptr [rax + 3], bh ; syscall
0x00000000000fb728 : adc byte ptr [rax + 7], bh ; syscall
0x00000000000a9f64 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9e62 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9de0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000fda53 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010ab81 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002da63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000944e4 : adc byte ptr [rax - 0x73], cl ; jg 0x94501 ; jne 0x944d8 ; ret
0x000000000010ada5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010ada4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000005bcd4 : adc byte ptr [rax - 0x75], cl ; cmp al, ch ; retf
0x00000000000e7036 : adc byte ptr [rax - 0x75], cl ; jl 0xe7066 ; sub al, ch ; retf 0xf38b
0x000000000012dc62 : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000009490a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a585c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000c84ba : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848c
0x000000000012c02b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000071c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000023654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00000000000891d2 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000392b3 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007cd7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000115cd6 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000061d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000003d6d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x0000000000082c39 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000012fb24 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00000000000e5734 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000043ed2 : adc byte ptr [rax - 0x77], cl ; retf
0x00000000000d0a19 : adc byte ptr [rax - 0x77], cl ; retf 0x3949
0x0000000000168e3b : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000000445c7 : adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000014dc6f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001657f7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000165833 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1604 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000123480 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000005bce1 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000087293 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002656a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048d91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000495a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fe857 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007e42f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000000031e : adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x00000000000ea99b : adc byte ptr [rax - 1], bh ; ret
0x0000000000195c30 : adc byte ptr [rax - 4], al ; call qword ptr [rax + 0x10fffc41]
0x000000000010627a : adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000fc32b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006abcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000146d82 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000144e50 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000144ff0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000014abf8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000149551 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001474e1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000005ef0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x18
0x000000000003b19c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012d8da : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012bf75 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aacc3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008bb5c : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018abcd : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000018abed : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000000fc49c : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000006b454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x000000000008c338 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000115731 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdd82 : adc byte ptr [rax], al ; add cl, ch ; retf
0x00000000001613e8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000003fde0 : adc byte ptr [rax], al ; jne 0x3fdb1 ; jmp 0x3fdb9
0x0000000000044f71 : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x0000000000080fda : adc byte ptr [rax], al ; mov edx, 0x234 ; call 0x7d289
0x000000000008105b : adc byte ptr [rax], al ; mov edx, 0x237 ; call 0x7d289
0x0000000000088855 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88822
0x0000000000088854 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88823
0x00000000000852e6 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000045afb : adc byte ptr [rax], al ; ret
0x0000000000195bdc : adc byte ptr [rax], bh ; cld ; call qword ptr [rax + 0x10fffc39]
0x00000000000d8eb5 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d8dd8 : adc byte ptr [rax], bh ; ret 0x870f
0x00000000000f7258 : adc byte ptr [rax], bh ; syscall
0x00000000001955d0 : adc byte ptr [rax], ch ; cld ; call rax
0x0000000000194e38 : adc byte ptr [rax], cl ; sti ; jmp rax
0x00000000000a9d5d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9f41 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001a9500 : adc byte ptr [rax], dh ; int1 ; jmp qword ptr [rcx]
0x00000000000e7e21 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x000000000007ee9a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000037bbc : adc byte ptr [rbp + 0x39], cl ; retf
0x00000000000a6ecd : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; retf
0x0000000000048525 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x000000000008f428 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00000000000944e8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000194f80 : adc byte ptr [rbp - 0x796f0005], al ; sti ; call qword ptr [rax]
0x00000000000c49f3 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000102ca7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000115192 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000ac952 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000195b70 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x0000000000082d70 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000850bb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003adb0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5e93 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001a1dad : adc byte ptr [rbx + 0xa], ch ; ret
0x00000000001a02fc : adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000079617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000194f68 : adc byte ptr [rbx + rdi*8 - 1], bh ; nop ; jge 0x194f71 ; call qword ptr [rax]
0x000000000007c892 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000075ad7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75af1 ; ret
0x00000000000aa960 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000123d0b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000ac99f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x0000000000115326 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x11533f ; pop rbp ; pop r12 ; ret
0x00000000001b05c0 : adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195c38 : adc byte ptr [rbx - 4], al ; call qword ptr [rax + 0x10fffc44]
0x0000000000194f50 : adc byte ptr [rbx - 5], dh ; call qword ptr [rax + 0x10fffb74]
0x0000000000195be4 : adc byte ptr [rbx], bh ; cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000112f25 : adc byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000f60e2 : adc byte ptr [rcx + 0x1c538bc8], cl ; syscall
0x00000000000375cf : adc byte ptr [rcx + 0x29], cl ; retf
0x0000000000074084 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000012fe11 : adc byte ptr [rcx + 0x31], cl ; retf 0x8949
0x00000000000495ad : adc byte ptr [rcx + 0x39], cl ; retf
0x0000000000130b4d : adc byte ptr [rcx + 0xf], al ; retf 0x850f
0x0000000000095127 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x0000000000115470 : adc byte ptr [rcx + rcx*4 + 0x40], cl ; or byte ptr [rax - 0x77], cl ; retf 0x8949
0x00000000000f35bd : adc byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 8 ; call 0x1f8b0
0x00000000000edc90 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000074fe7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008605b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006c478 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105ec2 : adc byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; syscall
0x00000000000a9ec2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ea2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000172b78 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fe822 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000331b0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000fe8a2 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000000e3d0c : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b8cf8 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00000000000b8c7c : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x000000000007ee47 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000012fae1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3cb7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00000000000b973b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x0000000000144e83 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000012fd0f : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x0000000000148a27 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000195bf4 : adc byte ptr [rcx - 4], al ; call qword ptr [rax + 0x10fffc42]
0x0000000000194f60 : adc byte ptr [rcx - 5], bh ; call qword ptr [rax + 0x10fffb7a]
0x00000000001acc2d : adc byte ptr [rcx], al ; add al, ah ; ret
0x000000000010627b : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000107dd1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000ba324 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ed7d : adc byte ptr [rcx], bh ; ret
0x0000000000195654 : adc byte ptr [rcx], ch ; cld ; push rax ; sub bh, ah ; call rax
0x000000000003ad3e : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c895 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000086a79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000124137 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000fce2d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce69 ; ret
0x000000000010eee3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000000c7886 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001b0a40 : adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000195c04 : adc byte ptr [rdi - 4], al ; call qword ptr [rax + 0x10fffc48]
0x0000000000195e90 : adc byte ptr [rdi - 4], dh ; call rax
0x0000000000195b60 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x0000000000194f70 : adc byte ptr [rdi - 5], bh ; call qword ptr [rax + 0x10fffb80]
0x0000000000195670 : adc byte ptr [rdi], ah ; cld ; call rax
0x000000000011e2be : adc byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000002de55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000011940a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000089383 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000035d72 : adc byte ptr [rdi], cl ; ret 0x8b48
0x000000000012dc3c : adc byte ptr [rdi], cl ; retf 0x5089
0x000000000012db99 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000012dad9 : adc byte ptr [rdi], cl ; retf 0xd189
0x000000000012de1c : adc byte ptr [rdi], cl ; retf 0xd689
0x00000000001688d8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000170943 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000146071 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146161 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f81 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d89b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c39f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014d59f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cc9f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cf9f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c697 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001469c9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000146521 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000145cb1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000146701 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e91 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001468e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001467f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146133 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146223 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146043 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c944 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d544 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d844 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014c63c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145da1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149ccd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aed : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4c5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145f53 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d73 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e63 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c83 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000035de3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x000000000009a6f8 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000003737e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037ecb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000edc99 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x0000000000195c18 : adc byte ptr [rdi], dh ; cld ; call qword ptr [rax + 0x10fffc38]
0x00000000000378ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000003955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x000000000019ffb0 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x00000000001515e9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000062031 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x000000000005e8d6 : adc byte ptr [rdx - 0x6b], dh ; mov rdi, r12 ; call 0x7b3a8
0x0000000000194f78 : adc byte ptr [rdx - 0x7c6f0005], al ; sti ; call qword ptr [rax]
0x00000000001b0c80 : adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000930ed : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000012839f : adc byte ptr [rdx], al ; je 0x1283ac ; ret
0x0000000000195c20 : adc byte ptr [rdx], bh ; cld ; call qword ptr [rax + 0x10fffc3b]
0x00000000001956b8 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; jmp rax
0x000000000016f02b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000004cb8 : adc byte ptr [rdx], dl ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000195bd4 : adc byte ptr [rip + 0x3690fffc], dh ; cld ; call qword ptr [rax]
0x0000000000195c28 : adc byte ptr [rip + 0x3e90fffc], bh ; cld ; call qword ptr [rax]
0x000000000014081d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000016eeda : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016e4d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e8d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x16e8a9
0x000000000016e953 : adc byte ptr [rsi + 0xf], ah ; jmp 0x16e927
0x000000000016ede5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x16edb9
0x000000000016ee63 : adc byte ptr [rsi + 0xf], ah ; jmp 0x16ee37
0x000000000016ff05 : adc byte ptr [rsi + 0xf], ah ; jmp 0x16fed9
0x000000000016ff83 : adc byte ptr [rsi + 0xf], ah ; jmp 0x16ff57
0x0000000000170415 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1703e9
0x0000000000170493 : adc byte ptr [rsi + 0xf], ah ; jmp 0x170467
0x000000000016e8d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16e8ae
0x000000000016e94e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16e92c
0x000000000016ede0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16edbe
0x000000000016ee5e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16ee3c
0x000000000016ff00 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16fede
0x000000000016ff7e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16ff5c
0x0000000000170410 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1703ee
0x000000000017048e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x17046c
0x0000000000089ee5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a605b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a605a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000195c40 : adc byte ptr [rsi - 4], al ; call qword ptr [rax + 0x10fffc47]
0x0000000000195b68 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x0000000000194f58 : adc byte ptr [rsi - 5], dh ; call qword ptr [rax + 0x10fffb77]
0x0000000000163f6d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000195bec : adc byte ptr [rsi], bh ; cld ; call qword ptr [rax + 0x10fffc3f]
0x000000000003afea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000195bfc : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x0000000000195b78 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000000bb8fa : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a18f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a1d5 : adc byte ptr [rsp - 8], al ; ret
0x000000000014c947 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000195284 : adc cl, ah ; sti ; call qword ptr [rax]
0x000000000009f545 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bc5ee : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000bc65f : adc cl, byte ptr [rax + 0x29] ; retf 0x8948
0x00000000001277a3 : adc cl, byte ptr [rax + 0x63] ; clc ; mov eax, r14d ; syscall
0x00000000000aa833 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f358f
0x000000000004acef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000009f85d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fe5f8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000004709d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00000000000ff9ce : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e3a9c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000009b6f4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000089a65 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001be49c : adc cl, byte ptr [rax] ; add byte ptr [rax], al ; retf
0x000000000004acf2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000b8a74 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00000000000495a1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000072854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000000459ec : adc cl, byte ptr [rcx] ; retf 0xbe0f
0x00000000000fe052 : adc cl, byte ptr [rdi - 0x76b7ffd4] ; ret 0xb6e9
0x0000000000188748 : adc cl, byte ptr [rdx - 0x7c0b000d] ; jmp rsi
0x00000000000548df : adc cl, ch ; ret
0x000000000008f310 : adc dh, bh ; ret
0x0000000000195320 : adc dh, bl ; sti ; jmp rax
0x000000000012c73e : adc dh, dh ; ret 0x7401
0x000000000008156e : adc dh, dh ; ret 0xf0f
0x00000000000022e3 : adc dh, dl ; ret
0x00000000000026b6 : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x0000000000004cb9 : adc dl, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000025946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000404dd : adc dword ptr [rax + 0x39], ecx ; retf 0x840f
0x0000000000048f13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000074075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000495ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000017439b : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a51e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000007dfd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007c83c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000671b3 : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000d8692 : adc dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000000b8c7f : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d9006 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000089387 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014aeeb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000044f6f : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x000000000019cc7d : adc dword ptr [rax], eax ; add al, ah ; fld1 ; call qword ptr [rdx]
0x000000000013f009 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000111449 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147477 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001493e9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019cccd : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19ccd6 ; jmp qword ptr [rdi]
0x000000000017433b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000f5a6d : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000008c1b8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006589c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000cc40f : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000077572 : adc dword ptr [rax], eax ; mov eax, 2 ; syscall
0x000000000008103c : adc dword ptr [rax], eax ; mov edx, 0x23a ; call 0x7d289
0x0000000000029c44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006bc82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006cbb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006ca9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000019cc7c : adc dword ptr [rax], r8d ; add al, ah ; fld1 ; call qword ptr [rdx]
0x000000000015e4db : adc dword ptr [rbp + 0x26], ebx ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000009731a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000003b172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8fe8 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x00000000000e0f65 : adc dword ptr [rcx + 0x518d9034], ecx ; add cl, byte ptr [rax + 0x63] ; retf 0x3949
0x000000000009fe87 : adc dword ptr [rcx + 7], edi ; ret
0x00000000000fb0ae : adc dword ptr [rcx - 0x75], eax ; jge 0xfb0e2 ; call 0xf7ac7
0x000000000009fb22 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fae6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000013c1de : adc dword ptr [rcx], eax ; ja 0x13c212 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000010c9d6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009ffe9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000348c4 : adc dword ptr [rdi], ecx ; ret
0x000000000003488d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034c22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000000aa5bc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000006bd9a : adc dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000000233d : adc dword ptr [rsi + 0x3c5d2fd0], esp ; jp 0x2325 ; retf 0x23c4
0x00000000000aa6ef : adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa78c : adc dword ptr [rsi + 7], edx ; ret
0x00000000000e0ff2 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f94
0x00000000000c9953 : adc dword ptr [rsi - 0x76b7ffd1], edi ; ret 0x8d48
0x00000000000aa58e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000147476 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aaf8a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000194e71 : adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000000dec77 : adc eax, 0x1fffffe ; ret 0x8b49
0x000000000017435b : adc eax, 0x252518 ; je 0x17436a ; ret
0x0000000000140d77 : adc eax, 0x284694 ; add rsp, 8 ; ret
0x0000000000138219 : adc eax, 0x290d82 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012ddb2 : adc eax, 0x295dc9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001095af : adc eax, 0x2bac8c ; je 0x1095c0 ; pop rbp ; ret
0x00000000000ffa5e : adc eax, 0x2c768d ; add rsp, 8 ; ret
0x0000000000184124 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000008958a : adc eax, 0x33a9c9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000886a1 : adc eax, 0x33e172 ; add rsp, 0x18 ; ret
0x0000000000137382 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000368ad : adc eax, 0x38d7d6 ; ret
0x000000000002e196 : adc eax, 0x395d95 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cae9 : adc eax, 0x398faf ; ret
0x000000000001f929 : adc eax, 0x3a99da ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000abc1a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001162ec : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x0000000000001ea4 : adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000f5f87 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00000000001341cd : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x0000000000034ab6 : adc eax, 0x540f6600 ; ret 0xf66
0x0000000000034cdc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00000000000a6808 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000a7f1c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000019b9a5 : adc eax, 0x77340001 ; std ; call rsp
0x0000000000147001 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000234fd : adc eax, 0x83489066 ; ret
0x00000000001400ad : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000de2ed : adc eax, 0x8949fff4 ; ret 0x8949
0x000000000014c440 : adc eax, 0x894d0000 ; retf
0x000000000003d249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000008f197 : adc eax, 0xc71a4 ; cmove rax, rdx ; ret
0x00000000001ad04d : adc eax, 0xd300001 ; hlt ; jmp rcx
0x00000000000abf1a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006e511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c18ff : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014ac4e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149209 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000091ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fcf7a : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008c038 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004b600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x000000000009824a : adc eax, dword ptr [rbp + 0x38] ; retf 0x8844
0x00000000000fba5c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000001ace4d : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x26], ah ; jmp qword ptr [rcx]
0x0000000000107ced : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000011e2e3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a2a18 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014c63f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000482f9 : adc eax, eax ; ret
0x0000000000048436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000183dc5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001186a0 : adc ebp, ebx ; ret 0x1f0f
0x00000000000f193b : adc ebp, ecx ; retf 0xfffc
0x00000000000896d4 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010adac : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000008994c : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x000000000013d6be : adc ecx, dword ptr [rax + 0x39] ; ret
0x00000000001751f1 : adc ecx, dword ptr [rax + 0x63] ; clc ; mov eax, r14d ; syscall
0x00000000000f6904 : adc ecx, dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x1c], cl ; syscall
0x000000000002cb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000013d929 : adc ecx, dword ptr [rax - 0x77] ; retf 0x894c
0x000000000007ba4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000024301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000099a6d : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ac604 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e3f55 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x0000000000127ad4 : adc ecx, dword ptr [rbx + rcx*4 + 0x25] ; ret
0x00000000000adcd9 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x00000000000f5a68 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x11b8
0x00000000000f5ac8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x12b8
0x0000000000107ce8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x13b8
0x0000000000107d78 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x14b8
0x00000000000fc208 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x15b8
0x0000000000107e38 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x16b8
0x00000000000fd5a8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x17b8
0x00000000001084e8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x2cb8
0x0000000000108308 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x2db8
0x0000000000108b28 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x45b8
0x0000000000108b88 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x46b8
0x00000000001079e8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0xe8b8
0x000000000012de80 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000012dc22 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000a2be4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2c04 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2c24 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a2a6e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000019a3f1 : adc edi, eax ; call rsp
0x0000000000199af9 : adc edi, esi ; jmp rsp
0x0000000000199af8 : adc edi, r14d ; jmp rsp
0x000000000006bc5e : adc edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001852de : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000199b49 : adc esi, edi ; call rsp
0x00000000001aabe1 : adc esi, edx ; jmp qword ptr [rcx]
0x000000000006ee5a : adc esi, esi ; ret 0xf20
0x0000000000102c93 : adc esp, ecx ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000014c822 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009fe86 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000009fb21 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000009fae5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000009ffe8 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000aa6ee : adc qword ptr [rsi + 3], rdx ; ret
0x00000000000aa78b : adc qword ptr [rsi + 7], rdx ; ret
0x00000000000aa58d : adc qword ptr [rsi - 1], rdx ; ret
0x000000000008f283 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000006e510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000149370 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008f30f : adc sil, r15b ; ret
0x000000000019e21b : add ah, ah ; add byte ptr es:[rax], al ; jne 0x19e214 ; jmp qword ptr [rcx]
0x00000000001bc11b : add ah, ah ; add eax, 0x73f00002 ; clc ; call qword ptr [rdi]
0x0000000000198f2f : add ah, ah ; and ch, dh ; jmp rsp
0x0000000000197947 : add ah, ah ; cli ; in eax, dx ; push rsp ; retf
0x000000000019b19f : add ah, ah ; cli ; jmp rsp
0x00000000001982c7 : add ah, ah ; cli ; out dx, eax ; call rsp
0x000000000019aa3f : add ah, ah ; cmp edi, ecx ; jmp rsp
0x00000000001969cf : add ah, ah ; ja 0x1969c0 ; call rsp
0x00000000001a761b : add ah, ah ; mov edx, 0x75800000 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001bab1b : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b0f1b : add ah, ah ; push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f20 ; jmp qword ptr [rcx]
0x000000000019b34f : add ah, ah ; push rdi ; cli ; jmp rsp
0x000000000019b9d7 : add ah, ah ; ret 0xfffd
0x00000000001a861b : add ah, ah ; retf 0
0x00000000001ae51b : add ah, ah ; sub dword ptr [rcx], eax ; add byte ptr [rax], al ; retf 0xfff4
0x0000000000198217 : add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001a531b : add ah, ah ; xchg eax, edi ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a931b : add ah, ah ; xlatb ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000196ddf : add ah, al ; add ebp, edx ; jmp rsp
0x00000000001b0afb : add ah, al ; add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001adbfb : add ah, al ; and byte ptr [rcx], al ; add al, dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019f6fb : add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; sub dl, ch ; jmp rax
0x00000000001a94fb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax], dl ; xor cl, dh ; jmp qword ptr [rcx]
0x000000000019a117 : add ah, al ; in al, 0xf7 ; jmp qword ptr [rbx + rax*8]
0x000000000019b4a7 : add ah, al ; jg 0x19b4a9 ; call rsp
0x00000000001b2bfb : add ah, al ; jo 0x1b2c08 ; add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019ace7 : add ah, al ; mov bh, cl ; call rsp
0x000000000019985f : add ah, al ; mov bl, 0xf6 ; jmp rsp
0x000000000019928f : add ah, al ; or al, 0xf6 ; call rsp
0x000000000019b3ff : add ah, al ; pop rbp ; cli ; call rsp
0x0000000000197e8f : add ah, al ; retf 0xffee
0x00000000001a63fb : add ah, al ; test al, 0 ; add byte ptr [rax + 0x4d], dl ; out dx, al ; call qword ptr [rax]
0x00000000001983cf : add ah, al ; test eax, esi ; jmp rsp
0x00000000001aeefb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ace33 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x00000000001a11ab : add ah, bh ; add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000000aac1e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001b0933 : add ah, bh ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0833 : add ah, bh ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b0633 : add ah, bh ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000e1156 : add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001aa033 : add ah, bh ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001954f5 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000aacd6 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabfd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001953f1 : add ah, bh ; jmp rax
0x00000000001b0c33 : add ah, bh ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c38 ; jmp qword ptr [rcx]
0x00000000001953d1 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00000000001b2660 : add ah, bh ; ret
0x00000000001b8733 : add ah, bh ; retf
0x00000000001a8633 : add ah, bh ; retf 0
0x00000000001afd13 : add ah, bl ; add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001b0b13 : add ah, bl ; add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001adc13 : add ah, bl ; and byte ptr [rcx], al ; add al, ch ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001af513 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001af913 : add ah, bl ; cmp eax, 0x1e280001 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2c13 : add ah, bl ; jo 0x1b2c20 ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6c13 : add ah, bl ; mov al, 0 ; add byte ptr [rax], bh ; mov cl, 0xee ; call qword ptr [rax]
0x00000000001a4613 : add ah, bl ; mov al, byte ptr [rax] ; add al, ch ; jae 0x1a4610 ; call qword ptr [rcx]
0x000000000019d413 : add ah, bl ; sbb byte ptr [rax], al ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rdx]
0x0000000000185307 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000001a3fe7 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a41b8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00000000000aa6ea : add ah, byte ptr [rdx - 0xf] ; jl 0xaa73f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a2a6b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001b0a23 : add ah, ch ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adf23 : add ah, ch ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000187e18 : add ah, ch ; int1 ; call qword ptr [rax]
0x0000000000187e08 : add ah, ch ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x00000000001a6e23 : add ah, ch ; mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x00000000001b2b23 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244d
0x00000000001a6b23 : add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6723 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a6721 ; jmp qword ptr [rdx]
0x00000000001b3c03 : add ah, cl ; add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0103 : add ah, cl ; add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b0803 : add ah, cl ; add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0603 : add ah, cl ; add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001aa003 : add ah, cl ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; jmp qword ptr [rdi]
0x00000000001a6d03 : add ah, cl ; mov cl, 0 ; add byte ptr [rax], bl ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001b2a03 : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0c03 : add ah, cl ; push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a8603 : add ah, cl ; retf 0
0x000000000019e403 : add ah, cl ; sub byte ptr [rax], al ; add byte ptr [rax], bl ; jp 0x19e3fc ; jmp qword ptr [rcx]
0x00000000001ab203 : add ah, cl ; test byte ptr [rax], 0 ; call 0x281aa43d
0x00000000001ab203 : add ah, cl ; test byte ptr [rax], 0 ; call 0x281aa43e
0x00000000001aec03 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aec07 ; jmp qword ptr [rcx]
0x00000000001acc2b : add ah, dh ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001b032b : add ah, dh ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001aea2b : add ah, dh ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af22b : add ah, dh ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0b2b : add ah, dh ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ade2b : add ah, dh ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001af92b : add ah, dh ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x00000000001a622b : add ah, dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000001b2c2b : add ah, dh ; jo 0x1b2c38 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0f7 : add ah, dh ; jrcxz 0x19a0f8 ; inc esp ; ret 1
0x00000000001a682b : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000001aa22b : add ah, dh ; out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x000000000019b9df : add ah, dh ; ret 0xfffd
0x00000000001998ef : add ah, dh ; retf 0xfff6
0x000000000019aea7 : add ah, dh ; sar cl, 1 ; call rsp
0x00000000001ad82b : add ah, dh ; sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x0000000000199c47 : add ah, dh ; sbb edi, esi ; call rsp
0x00000000001bd357 : add ah, dl ; add eax, 0x2a60000 ; add byte ptr [rax], al ; retf 2
0x00000000001a1483 : add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x3c], bl ; in al, dx ; jmp rbx
0x00000000001b0a0b : add ah, dl ; add qword ptr [rax], r8 ; loopne 0x1b0a88 ; cmc ; jmp qword ptr [rcx]
0x000000000019e00b : add ah, dl ; and al, 0 ; add byte ptr [rax], al ; jb 0x19e004 ; jmp qword ptr [rsi]
0x00000000001970ff : add ah, dl ; in eax, 0xea ; jmp rsp
0x00000000001abb0b : add ah, dl ; inc dword ptr [rax] ; add al, ah ; ret
0x0000000000197e17 : add ah, dl ; jo 0x197e0d ; jmp rsp
0x0000000000197cc7 : add ah, dl ; pop rax ; out dx, al ; call rsp
0x00000000001b1b0b : add ah, dl ; pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0d0b : add ah, dl ; push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b120b : add ah, dl ; push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b1210 ; jmp qword ptr [rcx]
0x0000000000197837 : add ah, dl ; retf
0x00000000001ad80b : add ah, dl ; sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x000000000019796f : add ah, dl ; std ; in eax, dx ; call rsp
0x00000000001ae80b : add ah, dl ; sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001ae60b : add ah, dl ; sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000010b9cd : add al, 0 ; add al, ch ; retf
0x00000000000534ee : add al, 0 ; add al, ch ; retf 0xfe39
0x0000000000041c6e : add al, 0 ; add al, ch ; retf 0xfebf
0x000000000004b2d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f12f3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001270d1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122530 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001455bd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a109 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000143a2f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000000b320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000000f8b0 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000032dfe : add al, 0 ; add byte ptr [rax], al ; call 0x1f8a6
0x0000000000103692 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000000abfa3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d963d : add al, 0 ; add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd95e5
0x00000000000f6bdf : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000042ba1 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000008cf38 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d87bc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000134abb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006a96f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bd099 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x000000000002acb9 : add al, 0 ; add byte ptr [rbx - 0x7af0f905], al ; retf
0x00000000000e5397 : add al, 0 ; add byte ptr [rcx + 0x39], al ; retf
0x0000000000026e51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000662b5 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000007e54d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080941 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010eee5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000040f83 : add al, 0 ; add cl, ch ; ret 0xffec
0x000000000007f0c6 : add al, 0 ; add dh, dh ; ret
0x0000000000122983 : add al, 0 ; add dh, dh ; ret 0xf04
0x00000000001162ef : add al, 0 ; cmove rax, rdx ; ret
0x000000000009ea94 : add al, 0 ; lea rax, [rdi + 4] ; ret
0x00000000001419db : add al, 0 ; mov edx, 0x159 ; call 0x2dc49
0x000000000009ea04 : add al, 0 ; mov rax, rdi ; ret
0x0000000000140a0b : add al, 0 ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000045afa : add al, 0x10 ; add bl, dh ; ret
0x0000000000130340 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x000000000002da69 : add al, 0x10 ; ret
0x000000000010acd5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000010adab : add al, 0x11 ; ret
0x00000000000aac6d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000004e619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000019b9dc : add al, 0x17 ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000009f5b1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008b12a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000013a97a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000001177bd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000c9d0f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000096ce0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000cc271 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f693d : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000010a3a4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a405 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000004698a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000010e817 : add al, 0x24 ; call 0x7b224
0x0000000000089591 : add al, 0x24 ; call qword ptr [rdx]
0x0000000000198a20 : add al, 0x24 ; jmp rsp
0x00000000000f7274 : add al, 0x24 ; mov eax, 0 ; syscall
0x00000000000fcf94 : add al, 0x24 ; mov eax, 0x13 ; syscall
0x0000000000107fa4 : add al, 0x24 ; mov eax, 0x130 ; syscall
0x00000000000fcff4 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x00000000001017c4 : add al, 0x24 ; mov eax, 0x1a ; syscall
0x00000000000cc2a4 : add al, 0x24 ; mov eax, 0x22 ; syscall
0x00000000000cc304 : add al, 0x24 ; mov eax, 0x23 ; syscall
0x0000000000108144 : add al, 0x24 ; mov eax, 0x2a ; syscall
0x00000000001080b4 : add al, 0x24 ; mov eax, 0x2b ; syscall
0x00000000001084a4 : add al, 0x24 ; mov eax, 0x2e ; syscall
0x0000000000108384 : add al, 0x24 ; mov eax, 0x2f ; syscall
0x00000000000fd784 : add al, 0x24 ; mov eax, 0x4a ; syscall
0x00000000000fd814 : add al, 0x24 ; mov eax, 0x4b ; syscall
0x00000000000f7a54 : add al, 0x24 ; mov eax, 0x55 ; syscall
0x00000000000f72d4 : add al, 0x24 ; mov eax, 1 ; syscall
0x00000000000f7054 : add al, 0x24 ; mov eax, 2 ; syscall
0x00000000000f7904 : add al, 0x24 ; mov eax, 3 ; syscall
0x00000000000fb744 : add al, 0x24 ; mov eax, 7 ; syscall
0x0000000000027ac2 : add al, 0x24 ; mov r12, rsi ; jmp 0x27a9a
0x00000000000ac673 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010584c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x0000000000020bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000107413 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd225 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002084c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f6d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004d397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000001ae23c : add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019b158 : add al, 0x29 ; cli ; jmp rsp
0x000000000002a21d : add al, 0x29 ; ret 0x8941
0x00000000000a9c19 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008d5ee : add al, 0x31 ; ret
0x0000000000122214 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000198050 : add al, 0x32 ; out dx, eax ; call rsp
0x000000000019f23c : add al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x000000000008d4ea : add al, 0x37 ; ret
0x00000000000f5c1d : add al, 0x39 ; ret
0x00000000000d79cf : add al, 0x39 ; ret 0xec7f
0x0000000000072d5f : add al, 0x3a ; ret
0x0000000000097354 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00000000001833e6 : add al, 0x3d ; retf
0x00000000000ac916 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000006a139 : add al, 0x44 ; mov ebp, dword ptr [rdx] ; mov qword ptr [rax], rcx ; jmp 0x66b80
0x00000000000208f2 : add al, 0x48 ; add edi, ebp ; call rax
0x000000000012516c : add al, 0x48 ; add edx, 1 ; syscall
0x00000000000f5c53 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009eaa5 : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000009eab5 : add al, 0x48 ; lea eax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a81bb : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000009ea55 : add al, 0x48 ; lea eax, [rdi + 7] ; ret
0x000000000012418e : add al, 0x48 ; lea eax, [rdi + rsi + 8] ; ret
0x000000000016b049 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000016b05b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000072163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000720a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015b4aa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000710cc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071272 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000071f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009ea15 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e9a5 : add al, 0x48 ; mov eax, edi ; ret
0x000000000008b8c4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000ad120 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x00000000001b0a3c : add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000114a24 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000001fc05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016b057 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000a2afc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000003512d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x0000000000197da8 : add al, 0x66 ; out dx, al ; call rsp
0x00000000001bad57 : add al, 0x66 ; ret
0x0000000000197520 : add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197df8 : add al, 0x6c ; out dx, al ; call rsp
0x00000000001a72b7 : add al, 0x71 ; ret
0x0000000000029ae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x000000000002da7d : add al, 0x72 ; or bl, dh ; ret
0x00000000001a8da7 : add al, 0x72 ; ret
0x00000000000821f4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000fb0ac : add al, 0x75 ; adc dword ptr [rcx - 0x75], eax ; jge 0xfb0e4 ; call 0xf7ac9
0x00000000000ac914 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000e513a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000ac052 : add al, 0x75 ; ret
0x00000000000eb012 : add al, 0x75 ; retf
0x00000000000e2fdb : add al, 0x75 ; retf 0x8b48
0x000000000013e4e0 : add al, 0x75 ; sbb ebp, ecx ; retf
0x0000000000086537 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000fb5a2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002de30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ded0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002dd50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ddf0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001a4177 : add al, 0x79 ; ret
0x00000000001a71df : add al, 0x7b ; ret
0x0000000000063886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000aadc3 : add al, 0x81 ; je 0xaada5 ; ret
0x0000000000146ceb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000aadbf : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaada9 ; ret
0x00000000001485c3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009e8c9 : add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000c325a : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000aad78 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad68 ; ret
0x0000000000091c77 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000026483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000759b2 : add al, 0x83 ; loop 0x759bd ; mov eax, edx ; ret
0x0000000000077f04 : add al, 0x83 ; loopne 0x77f0d ; ret
0x00000000000ae46b : add al, 0x83 ; ret 0x4101
0x00000000000dbfc2 : add al, 0x83 ; ret 0x4801
0x0000000000035d5b : add al, 0x83 ; ret 0xf701
0x0000000000063bbb : add al, 0x83 ; retf
0x00000000000deab8 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000aae12 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaae10 ; ret
0x00000000000ac94e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000adac9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000117a5a : add al, 0x85 ; test byte ptr [rcx + 0x480f7430], 0x39 ; retf 0xea75
0x000000000002ebb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006c1d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000d3fe3 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000ac61e : add al, 0x87 ; test r8d, r8d ; jne 0xac5f8 ; ret
0x000000000016b046 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000a2adb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000003918a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009e947 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000001390bc : add al, 0x89 ; pop rbp ; add al, ch ; retf
0x00000000000556a1 : add al, 0x89 ; ret 0x2944
0x00000000001311ff : add al, 0x89 ; retf 0x3944
0x00000000001433d9 : add al, 0x89 ; retf 0xeac0
0x000000000009e992 : add al, 0x8a ; add r10, rax ; jmp r10
0x00000000000aad7b : add al, 0x8a ; je 0xaad65 ; ret
0x00000000000a2ac4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f6ae7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000ac608 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000054d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000dea72 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000081bd4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000003d39d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000af48a : add al, 0x8d ; rol byte ptr [r11 - 0x79f0f608], 1 ; retf
0x00000000001a7eb0 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6fb6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb61b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000002e8ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000001998ec : add al, 0x98 ; add dword ptr [rax], eax ; hlt ; retf 0xfff6
0x000000000010ab87 : add al, 0xa ; ret
0x00000000001986a0 : add al, 0xa7 ; int1 ; jmp rsp
0x0000000000002315 : add al, 0xaa ; ret
0x000000000002da66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000013c193 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012cae2 : add al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000002e0b8 : add al, 0xb8 ; ret
0x00000000000aabc9 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012ddb9 : add al, 0xc2 ; jmp rax
0x00000000000ac83b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, [rdi + 8] ; ret
0x0000000000035f24 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000c7983 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035f67 : add al, 0xd7 ; xor eax, eax ; ret
0x00000000000daed7 : add al, 0xe8 ; retf
0x000000000019f180 : add al, 0xe9 ; call qword ptr [rsi]
0x000000000002dd35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x0000000000144dfd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000012eb6a : add al, 0xf ; retf 0x1689
0x000000000013be19 : add al, 0xf ; retf 0x5089
0x000000000012ebe5 : add al, 0xf ; retf 0x6348
0x000000000014a66b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d7c79 : add al, 0xf ; test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000663b6 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00000000000f0caa : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00000000000d7797 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000abb25 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a65db : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45e3 : add al, 0xf ; test edx, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000fdb19 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000e3f59 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00000000000481c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002b020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x00000000000481cc : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x000000000018806d : add al, 0xf2 ; call rax
0x000000000018808d : add al, 0xf2 ; inc eax ; add al, 0xf2 ; call rax
0x0000000000188095 : add al, 0xf2 ; jmp rax
0x0000000000188089 : add al, 0xf2 ; push qword ptr [rax - 0x3f000dfc] ; add al, 0xf2 ; call rax
0x000000000015b813 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006b45b : add al, 0xf3 ; ret
0x000000000008f3e9 : add al, 0xf6 ; ret 0x7408
0x00000000001bb33c : add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb2de ; sti ; jmp qword ptr [rdx]
0x0000000000194e25 : add al, 0xfb ; call rax
0x00000000001954dd : add al, 0xfc ; jmp qword ptr [rax]
0x000000000002f33d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000198215 : add al, 1 ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001238cb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000abb58 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f8394 : add al, 1 ; add byte ptr [rax], al ; syscall
0x000000000005cb58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d5c23 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b419 : add al, 1 ; ret
0x000000000006b47a : add al, 1 ; xor eax, eax ; ret
0x00000000001a404f : add al, 2 ; hlt ; ret
0x00000000001ac9ff : add al, 2 ; jle 0x1aca11 ; ret
0x000000000009f49c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000016f737 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000000d89b2 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000000a6728 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000089afd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d5191 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51c0
0x00000000000967a8 : add al, 7 ; ret
0x000000000009eb7f : add al, 7 ; test r8b, r8b ; jne 0x9eb68 ; ret
0x0000000000077403 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000009f71f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001ab12f : add al, ah ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b29ef : add al, ah ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019cc7f : add al, ah ; fld1 ; call qword ptr [rdx]
0x00000000001b0dcf : add al, ah ; jae 0x1b0dcc ; jmp qword ptr [rcx]
0x000000000019df6f : add al, ah ; jo 0x19df60 ; call qword ptr [rcx]
0x00000000001bc6c9 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc721 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001aa9df : add al, ah ; or edx, esi ; call rsi
0x00000000001b0a0f : add al, ah ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abb0f : add al, ah ; ret
0x0000000000018807 : add al, ah ; ret 0x17
0x0000000000005fd7 : add al, ah ; ret 0xc
0x000000000000c3af : add al, ah ; retf
0x000000000001c5cf : add al, ah ; retf 7
0x00000000001af3bf : add al, ah ; std ; hlt ; jmp qword ptr [rcx]
0x000000000019f6ff : add al, ah ; sub dl, ch ; jmp rax
0x00000000001ae1af : add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001b07bf : add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000019e5bf : add al, al ; jg 0x19e5b0 ; jmp rsp
0x00000000001b117f : add al, al ; jp 0x1b117c ; jmp qword ptr [rcx]
0x00000000001ad9bf : add al, al ; nop ; hlt ; call qword ptr [rcx]
0x0000000000006637 : add al, al ; ret 0x12
0x0000000000006c07 : add al, al ; retf
0x000000000001c617 : add al, al ; retf 7
0x0000000000010aef : add al, al ; ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017d407 : add al, al ; sldt word ptr [rax] ; ret
0x00000000001ab147 : add al, bh ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2a07 : add al, bh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019e597 : add al, bh ; jl 0x19e588 ; jmp rsp
0x00000000001860f7 : add al, bh ; loope 0x1860fe ; jmp qword ptr [rdi]
0x0000000000186177 : add al, bh ; loope 0x18617e ; jmp qword ptr [rdi]
0x00000000001861f7 : add al, bh ; loope 0x1861fe ; jmp qword ptr [rdi]
0x00000000001b64a7 : add al, bh ; loope 0x1b64aa ; call rsi
0x000000000019ecb7 : add al, bh ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001a9a47 : add al, bh ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001a6387 : add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0a27 : add al, bh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019a311 : add al, bh ; push rsp ; retf
0x00000000001b90c7 : add al, bh ; ret
0x00000000001ab287 : add al, bh ; sub esi, edx ; jmp rcx
0x00000000001a7b77 : add al, bh ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001adae7 : add al, bh ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001b95d7 : add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001a7787 : add al, bl ; frndint ; call qword ptr [rax]
0x00000000001b07d7 : add al, bl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a4447 : add al, bl ; insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001b1197 : add al, bl ; jp 0x1b1194 ; jmp qword ptr [rcx]
0x00000000000a6a2b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001aa2f7 : add al, bl ; out dx, al ; int1 ; jmp rcx
0x00000000001afd17 : add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001a7d57 : add al, bl ; sub edx, edi ; jmp qword ptr [rdi]
0x00000000000f8d06 : add al, bpl ; ret
0x000000000019b30d : add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000014d722 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019b455 : add al, byte ptr [r8] ; and al, 0x66 ; cli ; call rsp
0x0000000000089a61 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019b0f6 : add al, byte ptr [rax] ; adc al, 0x22 ; cli ; call rsp
0x000000000019ab0e : add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019b30e : add al, byte ptr [rax] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b65e : add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b156 : add al, byte ptr [rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000002de87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007f52d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000cc6da : add al, byte ptr [rax] ; add byte ptr [rax + 0x3a], bh ; syscall
0x0000000000107416 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008e8f3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000074155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000013e00d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000088102 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000842e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000000d779b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008e5e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000109f9e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009563b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000e7564 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000010e55b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d6f
0x0000000000085e55 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b4fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014575d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148381 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7785 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000145781 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001041a : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000132def : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013586f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134fcf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005f80d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x0000000000067494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x0000000000102882 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000ccdd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001094d5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000138269 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000103b02 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103875 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103741 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001036b9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a97c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000109635 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000abf83 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000001fa72 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c80da : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000030a05 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x00000000001157ed : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000d9569 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf 0xb60f
0x000000000008d0b8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b2baa : add al, byte ptr [rax] ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 2
0x0000000000071910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036de9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e5cfa : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000b9a99 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000e7603 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000171f44 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d823e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000046076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000005e78e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f38f3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007eb53 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000083527 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000809e2 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001256ce : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000024c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000002426c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000e0d0d : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b456 : add al, byte ptr [rax] ; and al, 0x66 ; cli ; call rsp
0x000000000019aea6 : add al, byte ptr [rax] ; hlt ; sar cl, 1 ; call rsp
0x000000000019b19e : add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x000000000019aa3e : add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x000000000019b34e : add al, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b1fe : add al, byte ptr [rax] ; je 0x19b245 ; cli ; jmp rsp
0x000000000019b6de : add al, byte ptr [rax] ; je 0x19b6b0 ; cli ; jmp rsp
0x0000000000123de2 : add al, byte ptr [rax] ; jne 0x123e36 ; mov eax, r8d ; ret
0x000000000009ea75 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; ret
0x00000000001bbf46 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc066 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9e5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000019ae26 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x000000000016e44b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000142069 : add al, byte ptr [rax] ; or byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000001bc1b6 : add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x000000000011d0d9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105e32 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019b6e6 : add al, byte ptr [rax] ; push rsp ; retf
0x000000000019b666 : add al, byte ptr [rax] ; ret
0x00000000001bc4a7 : add al, byte ptr [rax] ; ret 0x503
0x000000000019ae7e : add al, byte ptr [rax] ; retf 0xfff9
0x000000000019b076 : add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019ab9e : add al, byte ptr [rax] ; stc ; call rsp
0x000000000019afc6 : add al, byte ptr [rax] ; sti ; stc ; jmp rsp
0x00000000001bbf76 : add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000019ab36 : add al, byte ptr [rax] ; test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b43e : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019ae66 : add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019b2de : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019acce : add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000019add6 : add al, byte ptr [rax] ; xor al, 0xb7 ; stc ; call rsp
0x000000000019afde : add al, byte ptr [rax] ; xor al, 3 ; cli ; call rsp
0x000000000009a2f9 : add al, byte ptr [rbp + 0x38] ; ret
0x00000000001ae789 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000001150de : add al, byte ptr [rcx + 0x39] ; ret
0x000000000019d110 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000035d6c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000ebcdf : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000004c19e : add al, byte ptr [rcx - 0x77] ; fld dword ptr [rcx] ; retf
0x000000000005a6d9 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000004c19a : add al, byte ptr [rcx - 0x7d] ; in al, dx ; add al, byte ptr [rcx - 0x77] ; fld dword ptr [rcx] ; retf
0x00000000000dc34d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000001116a5 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001abdbd : add al, byte ptr [rcx] ; add byte ptr [rax], ah ; in eax, 0xf2 ; call qword ptr [rsi]
0x0000000000123908 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000123927 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000000f7001 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001a2010 : add al, byte ptr [rdi + 0xa] ; ret
0x000000000019fe1e : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a288d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000001a2665 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000001a7705 : add al, byte ptr [rdx] ; ret
0x00000000001b5bed : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x000000000006e575 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000001a7eb4 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000195d24 : add al, byte ptr [rsi - 0x7a6d0004] ; cld ; jmp qword ptr [rdx]
0x000000000004cfc7 : add al, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a682a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019b155 : add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x00000000001b2c17 : add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000134d81 : add al, ch ; cdq ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000032e01 : add al, ch ; cdq ; retf 0xfffe
0x0000000000128485 : add al, ch ; cmc ; retf
0x00000000001acdd7 : add al, ch ; fpatan ; jmp qword ptr [rcx]
0x000000000013cd0e : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000187d94 : add al, ch ; int1 ; jmp qword ptr [rax]
0x00000000000b1949 : add al, ch ; int1 ; ret 0xfff7
0x00000000001a4617 : add al, ch ; jae 0x1a460c ; call qword ptr [rcx]
0x000000000004104f : add al, ch ; jmp 0x41021
0x000000000010f93b : add al, ch ; jmp rdx
0x00000000000bf80e : add al, ch ; mov esp, 0x89000373 ; ret 0x3b8
0x00000000001b0ae7 : add al, ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000033542 : add al, ch ; pop rax ; ret
0x0000000000088e1d : add al, ch ; pop rbp ; ret 8
0x00000000001419e1 : add al, ch ; pop rcx ; ret 0xffee
0x00000000001123ca : add al, ch ; push rax ; ret 0xfff1
0x00000000001ba1a7 : add al, ch ; push rdi ; call qword ptr [rdx]
0x000000000005c487 : add al, ch ; ret
0x000000000006f648 : add al, ch ; ret 0xa1
0x000000000006d3b8 : add al, ch ; ret 0xa7c
0x000000000012c048 : add al, ch ; ret 0xcd
0x000000000002aca8 : add al, ch ; ret 0xea
0x0000000000120678 : add al, ch ; ret 0xf0d5
0x00000000000e14e0 : add al, ch ; ret 0xf3e3
0x00000000000f1138 : add al, ch ; ret 0xf48b
0x00000000000e3378 : add al, ch ; ret 0xf4a8
0x00000000000bd0a8 : add al, ch ; ret 0xf7c6
0x0000000000141d48 : add al, ch ; ret 0xfb58
0x0000000000044b78 : add al, ch ; ret 0xfe90
0x00000000001242e8 : add al, ch ; ret 0xff0d
0x000000000002225f : add al, ch ; retf
0x000000000007c1e0 : add al, ch ; retf 0x98e
0x00000000000738b0 : add al, ch ; retf 0xa17
0x0000000000067ba0 : add al, ch ; retf 0xa31
0x000000000012c850 : add al, ch ; retf 0xf01d
0x00000000000d5870 : add al, ch ; retf 0xf583
0x00000000000851e0 : add al, ch ; retf 0xfc54
0x00000000000534f0 : add al, ch ; retf 0xfe39
0x0000000000044870 : add al, ch ; retf 0xfe93
0x0000000000041c70 : add al, ch ; retf 0xfebf
0x000000000010e7d4 : add al, ch ; retf 0xfff6
0x000000000012eb40 : add al, ch ; retf 0xfffd
0x00000000001b2ac7 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000007676d : add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00000000001ab207 : add al, ch ; sub edx, esi ; jmp qword ptr [rdi]
0x00000000001adc17 : add al, ch ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000000f3fdc : add al, ch ; xchg eax, edi ; ret 0xfff2
0x00000000001ab117 : add al, cl ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b29d7 : add al, cl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0db7 : add al, cl ; jae 0x1b0db4 ; jmp qword ptr [rcx]
0x00000000001a6887 : add al, cl ; jg 0x1a687d ; call qword ptr [rax]
0x00000000001aed47 : add al, cl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001b09f7 : add al, cl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0577 : add al, cl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001a9967 : add al, cl ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001b56f7 : add al, cl ; ret
0x00000000001abb57 : add al, cl ; retf
0x00000000001af3a7 : add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1df : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a11af : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001b07ef : add al, dh ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001bc11f : add al, dh ; jae 0x1bc11f ; call qword ptr [rdi]
0x00000000001bc36f : add al, dh ; jns 0x1bc36f ; call qword ptr [rcx]
0x000000000000f13f : add al, dh ; ret
0x000000000000b50f : add al, dh ; retf 2
0x000000000001c95f : add al, dh ; retf 7
0x00000000001a7d6f : add al, dh ; sub bh, dl ; call qword ptr [rdi]
0x00000000001b2bff : add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b93bf : add al, dl ; fdiv st(7) ; jmp rdi
0x00000000001acdbf : add al, dl ; fpatan ; jmp qword ptr [rcx]
0x00000000001b0d0f : add al, dl ; jb 0x1b0d0c ; jmp qword ptr [rcx]
0x00000000001a49af : add al, dl ; jg 0x1a49a4 ; jmp qword ptr [rbx]
0x00000000001a794f : add al, dl ; jle 0x1a7946 ; call qword ptr [rdi]
0x00000000001a647f : add al, dl ; out dx, al ; call qword ptr [rdx]
0x00000000001b0acf : add al, dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b032f : add al, dl ; push rbx ; cmc ; call qword ptr [rdx]
0x0000000000010f3f : add al, dl ; ret 0xa
0x00000000000081f7 : add al, dl ; retf
0x000000000001c5b7 : add al, dl ; retf 7
0x00000000001ad80f : add al, dl ; stc ; call qword ptr [rax]
0x00000000001add3f : add al, dl ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001adbff : add al, dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001954f9 : add bh, ah ; jmp rax
0x00000000001954d9 : add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000019227 : add bh, ah ; retf 0x18
0x000000000012afb2 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000218ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000fde23 : add bh, al ; and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000edbcd : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017513f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012ff70 : add bh, bh ; add byte ptr [rax + 0x31], cl ; retf 0xc148
0x0000000000140ec9 : add bh, bh ; and eax, 0x281a70 ; ret
0x00000000001af450 : add bh, bh ; hlt ; call rsi
0x00000000001bc5e4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc3f8 : add bh, bh ; inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x000000000013225c : add bh, bh ; loope 0x1321f5 ; ret
0x000000000007a3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000bb1ea : add bh, bh ; ret
0x000000000004510a : add bh, bh ; shr cl, 1 ; retf
0x00000000001952a0 : add bh, bl ; sti ; jmp rax
0x00000000000f68d2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf68e9 ; ret
0x000000000004a080 : add bh, byte ptr [rax + 1] ; ret
0x0000000000078962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003545b : add bh, byte ptr [rax - 1] ; ret
0x00000000001a2b0c : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x0000000000172312 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000109e9f : add bh, byte ptr [rcx] ; ret
0x00000000001313eb : add bh, byte ptr [rcx] ; retf 0x420f
0x00000000001aca00 : add bh, byte ptr [rsi + 0xa] ; ret
0x0000000000187ecc : add bh, ch ; int1 ; call qword ptr [rax]
0x00000000001a4d81 : add bh, ch ; jmp rsp
0x00000000001bd097 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000d4825 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000d729d : add bh, dh ; ret
0x000000000009d4f1 : add bh, dh ; ret 0
0x0000000000036882 : add bl, al ; cmp byte ptr [rax], al ; ret
0x00000000000abc99 : add bl, al ; lea rax, [rip + 0xc210e] ; ret
0x00000000000ac87d : add bl, al ; lea rax, [rip + 0xc5aaa] ; ret
0x000000000008ebdd : add bl, al ; lea rax, [rip + 0xe1fda] ; ret
0x000000000012391e : add bl, al ; mov eax, 0x100 ; ret
0x0000000000123924 : add bl, al ; mov eax, 0x102 ; ret
0x00000000000cea3c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000adaa1 : add bl, al ; mov eax, 2 ; ret
0x00000000000d95bd : add bl, al ; mov eax, 3 ; ret
0x00000000000d95b7 : add bl, al ; mov eax, 4 ; ret
0x00000000000877a4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000758bc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000cda0c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000fc32d : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000132461 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001434fa : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000895dc : add bl, al ; ret
0x00000000000191c7 : add bl, al ; retf 0x18
0x000000000013514e : add bl, al ; xor eax, eax ; ret
0x0000000000194e11 : add bl, bh ; call rax
0x000000000018a4f7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a9e07 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000019db9d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001b2855 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000735aa : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a2637 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001b5958 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x00000000001a9ec5 : add bl, byte ptr [rdx + 0xa] ; ret
0x0000000000195838 : add bl, byte ptr [rsi - 4] ; call qword ptr [rdx + 0x22fffc5d]
0x00000000001bcd67 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x000000000007b5dd : add bl, ch ; fucomp st(0) ; ret
0x00000000000bf1ea : add bl, ch ; ret 0x1f0f
0x0000000000126a7b : add bl, ch ; ret 0xb8
0x0000000000045b24 : add bl, ch ; retf
0x000000000012e673 : add bl, ch ; retf 0x2e66
0x0000000000069268 : add bl, ch ; retf 0x85c7
0x0000000000132ab2 : add bl, ch ; retf 0x8b48
0x00000000000ec0e8 : add bl, ch ; retf 0x8b4c
0x00000000000c8c2d : add bl, ch ; retf 0xdb31
0x000000000011f3b6 : add bl, ch ; sar byte ptr [rax + 5], cl ; jmp 0x11f394
0x00000000000a6ddf : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6def : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000034cdd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000020582 : add bl, dh ; ret
0x00000000000330be : add bl, sil ; ret
0x00000000000ec9ee : add bpl, cl ; retf
0x00000000001aa04b : add byte ptr [0xffffffffe8600000], dl ; int1 ; call qword ptr [rbx]
0x00000000000cdb77 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000023de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000036e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x000000000011143e : add byte ptr [r9], r15b ; retf 0xc475
0x00000000001101bf : add byte ptr [r9], r15b ; retf 0xcb75
0x00000000000f6fff : add byte ptr [rax + 0x102], bh ; syscall
0x00000000000f8abf : add byte ptr [rax + 0x107], bh ; syscall
0x00000000000fcf3f : add byte ptr [rax + 0x10], bh ; syscall
0x00000000000f89ff : add byte ptr [rax + 0x10a], bh ; syscall
0x00000000000fb7b5 : add byte ptr [rax + 0x10f], bh ; syscall
0x000000000010766a : add byte ptr [rax + 0x121], bh ; syscall
0x000000000010797f : add byte ptr [rax + 0x123], bh ; syscall
0x00000000000f799f : add byte ptr [rax + 0x124], bh ; syscall
0x00000000000f79ff : add byte ptr [rax + 0x125], bh ; syscall
0x0000000000107aff : add byte ptr [rax + 0x126], bh ; syscall
0x0000000000107f1f : add byte ptr [rax + 0x12c], bh ; syscall
0x00000000001078bf : add byte ptr [rax + 0x131], bh ; syscall
0x00000000000fd84f : add byte ptr [rax + 0x132], bh ; syscall
0x0000000000107fdf : add byte ptr [rax + 0x134], bh ; syscall
0x00000000000f730f : add byte ptr [rax + 0x15], bh ; syscall
0x000000000008779f : add byte ptr [rax + 0x16], bh ; ret
0x00000000000f79cf : add byte ptr [rax + 0x16], bh ; syscall
0x00000000001baeb7 : add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x00000000001bc71c : add byte ptr [rax + 0x1809], dh ; loopne 0x1bc736 ; ret 0xa
0x00000000001bc6c4 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bc6df ; ret 0xb
0x00000000000ea81f : add byte ptr [rax + 0x18], bh ; syscall
0x00000000001a6bb7 : add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x000000000010182f : add byte ptr [rax + 0x1b], bh ; syscall
0x00000000001017ff : add byte ptr [rax + 0x1c], bh ; syscall
0x0000000000108d5f : add byte ptr [rax + 0x1d], bh ; syscall
0x00000000001af92f : add byte ptr [rax + 0x1e], al ; cmc ; jmp qword ptr [rcx]
0x0000000000108d8f : add byte ptr [rax + 0x1f], bh ; syscall
0x00000000001a91f7 : add byte ptr [rax + 0x1f], ch ; int1 ; call qword ptr [rsi]
0x0000000000034bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000f793f : add byte ptr [rax + 0x20], bh ; syscall
0x00000000000f796f : add byte ptr [rax + 0x21], bh ; syscall
0x00000000000bf5ff : add byte ptr [rax + 0x24], bh ; syscall
0x00000000000cc1ff : add byte ptr [rax + 0x25], bh ; syscall
0x00000000000bf62f : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000172a7f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x000000000010859f : add byte ptr [rax + 0x29], bh ; syscall
0x0000000000032857 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a32 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1504 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002944a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000007f085 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000028552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000045524 : add byte ptr [rax + 0x29], cl ; retf
0x000000000008459d : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000083bff : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000000d9640 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd95e2
0x00000000001a5f0f : add byte ptr [rax + 0x29], dh ; out dx, al ; jmp qword ptr [rdi]
0x00000000001080ef : add byte ptr [rax + 0x31], bh ; syscall
0x000000000012ff72 : add byte ptr [rax + 0x31], cl ; retf 0xc148
0x000000000012fd7d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00000000001081af : add byte ptr [rax + 0x33], bh ; syscall
0x000000000010817f : add byte ptr [rax + 0x34], bh ; syscall
0x00000000001a964f : add byte ptr [rax + 0x35], al ; int1 ; jmp rdi
0x0000000000044f72 : add byte ptr [rax + 0x38], bh ; syscall
0x0000000000045b6c : add byte ptr [rax + 0x39], cl ; ret
0x00000000000f149c : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x000000000007d9d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bdc83 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002bdbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007d997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001152e1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000001153a0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000024240 : add byte ptr [rax + 0x39], cl ; retf
0x00000000000cda76 : add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x00000000000cda95 : add byte ptr [rax + 0x39], cl ; retf 0x2475
0x00000000001514d6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000011758f : add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x000000000015a77f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000011870f : add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000b06bf : add byte ptr [rax + 0x39], cl ; retf 0x777
0x0000000000158f33 : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000aa618 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000150ff6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000008873b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000000cc6dc : add byte ptr [rax + 0x3a], bh ; syscall
0x00000000000cc76f : add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000452b8 : add byte ptr [rax + 0x3e], bh ; mov rbx, rdi ; syscall
0x000000000003575f : add byte ptr [rax + 0x3e], bh ; syscall
0x00000000001a6b27 : add byte ptr [rax + 0x3e], bl ; cli ; call qword ptr [rax]
0x000000000003575e : add byte ptr [rax + 0x3e], dil ; syscall
0x00000000000cbf2f : add byte ptr [rax + 0x3f], bh ; syscall
0x0000000000108c6f : add byte ptr [rax + 0x40], bh ; syscall
0x0000000000108c3f : add byte ptr [rax + 0x41], bh ; syscall
0x0000000000108d2f : add byte ptr [rax + 0x43], bh ; syscall
0x00000000001946b5 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002c9bd : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x0000000000075f86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000108c0f : add byte ptr [rax + 0x47], bh ; syscall
0x00000000001bb58f : add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000000f779f : add byte ptr [rax + 0x49], bh ; syscall
0x000000000019d9d7 : add byte ptr [rax + 0x4a], bh ; jmp 0x1b9ce3
0x00000000001b0107 : add byte ptr [rax + 0x4b], cl ; cmc ; jmp rax
0x000000000019bbef : add byte ptr [rax + 0x4b], dl ; call 0x1b86fb
0x00000000000ff19f : add byte ptr [rax + 0x4d], bh ; syscall
0x00000000001a3df7 : add byte ptr [rax + 0x4d], ch ; in eax, dx ; call qword ptr [rax]
0x00000000001a63ff : add byte ptr [rax + 0x4d], dl ; out dx, al ; call qword ptr [rax]
0x00000000000f7a8f : add byte ptr [rax + 0x50], bh ; syscall
0x00000000000f7abf : add byte ptr [rax + 0x51], bh ; syscall
0x000000000006b35f : add byte ptr [rax + 0x52], bh ; syscall
0x00000000000f6fcf : add byte ptr [rax + 0x53], bh ; syscall
0x00000000000f6fce : add byte ptr [rax + 0x53], dil ; syscall
0x00000000000f8aef : add byte ptr [rax + 0x54], bh ; syscall
0x00000000000f896f : add byte ptr [rax + 0x56], bh ; syscall
0x0000000000070675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000000f8a2f : add byte ptr [rax + 0x59], bh ; syscall
0x00000000000f6edf : add byte ptr [rax + 0x5a], bh ; syscall
0x00000000001b05ef : add byte ptr [rax + 0x5b], al ; cmc ; jmp qword ptr [rcx]
0x00000000000f6f0f : add byte ptr [rax + 0x5b], bh ; syscall
0x00000000001b0607 : add byte ptr [rax + 0x5b], bl ; cmc ; jmp qword ptr [rcx]
0x000000000001f92d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000006e0d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f832f : add byte ptr [rax + 0x5d], bh ; syscall
0x00000000000f835f : add byte ptr [rax + 0x5e], bh ; syscall
0x0000000000107418 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000000bc42f : add byte ptr [rax + 0x60], bh ; syscall
0x00000000000fc95f : add byte ptr [rax + 0x61], bh ; syscall
0x00000000000fc9bf : add byte ptr [rax + 0x62], bh ; syscall
0x000000000002ec94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005bf51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000852e7 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000063883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000006bc83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c94b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000002e8ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000aabc6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000005b327 : add byte ptr [rax + 0x63], cl ; add cl, ch ; retf
0x00000000001444ec : add byte ptr [rax + 0x63], cl ; clc ; mov eax, 0x3e ; syscall
0x0000000000078948 : add byte ptr [rax + 0x63], cl ; jnp 0x789c2 ; syscall
0x00000000000f2e5b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000033296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000004b2da : add byte ptr [rax + 0x63], cl ; ret
0x000000000006bd6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000113075 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000b2e2f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000072d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000c3a02 : add byte ptr [rax + 0x63], cl ; retf
0x000000000011142c : add byte ptr [rax + 0x63], cl ; retf 0x4864
0x00000000000e7fcf : add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000d757a : add byte ptr [rax + 0x63], cl ; retf 0x7eb
0x000000000003e467 : add byte ptr [rax + 0x63], cl ; retf 0x8348
0x0000000000054e15 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000003babc : add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000000d6b58 : add byte ptr [rax + 0x63], cl ; retf 0x8b4c
0x00000000000df58f : add byte ptr [rax + 0x63], cl ; retf 0xc148
0x000000000004617d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004b64c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000035422 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000010164f : add byte ptr [rax + 0x63], cl ; std ; mov eax, 3 ; syscall
0x00000000000fc7e0 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x10 ; syscall
0x00000000000f7760 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x0000000000029d4c : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x000000000006ca9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00000000000cbf5f : add byte ptr [rax + 0x64], bh ; syscall
0x00000000000cd23f : add byte ptr [rax + 0x66], bh ; syscall
0x0000000000107b5f : add byte ptr [rax + 0x67], bh ; syscall
0x00000000000cd25f : add byte ptr [rax + 0x68], bh ; syscall
0x00000000000cd24f : add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000cd26f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000cd44f : add byte ptr [rax + 0x6d], bh ; syscall
0x00000000001b094f : add byte ptr [rax + 0x6e], al ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22f : add byte ptr [rax + 0x6e], bh ; syscall
0x00000000001b0967 : add byte ptr [rax + 0x6e], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22e : add byte ptr [rax + 0x6e], dil ; syscall
0x00000000001bc063 : add byte ptr [rax + 0x6f880002], ch ; clc ; call rcx
0x00000000000cd47f : add byte ptr [rax + 0x6f], bh ; syscall
0x000000000019cfc7 : add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001b0b77 : add byte ptr [rax + 0x70], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a6677 : add byte ptr [rax + 0x70], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000000cd4df : add byte ptr [rax + 0x70], bh ; syscall
0x00000000001a45a7 : add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001b0caf : add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0cc7 : add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd27f : add byte ptr [rax + 0x73], bh ; syscall
0x00000000001a6727 : add byte ptr [rax + 0x73], bl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0d87 : add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000089a5f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000cd50f : add byte ptr [rax + 0x76], bh ; syscall
0x00000000001b0f37 : add byte ptr [rax + 0x76], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f1f : add byte ptr [rax + 0x76], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000071323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000704f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000000cd53f : add byte ptr [rax + 0x78], bh ; syscall
0x00000000001b0fe7 : add byte ptr [rax + 0x78], cl ; cmc ; jmp qword ptr [rbx]
0x00000000000a732f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001074df : add byte ptr [rax + 0x7a], bh ; syscall
0x000000000019c1ff : add byte ptr [rax + 0x7b], al ; std ; jmp qword ptr [rdx]
0x000000000010750f : add byte ptr [rax + 0x7b], bh ; syscall
0x00000000001b1227 : add byte ptr [rax + 0x7b], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b120f : add byte ptr [rax + 0x7b], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd4af : add byte ptr [rax + 0x7c], bh ; syscall
0x000000000010785f : add byte ptr [rax + 0x7d], bh ; syscall
0x00000000000cda07 : add byte ptr [rax + 0x7e], bh ; ret
0x000000000010788f : add byte ptr [rax + 0x7e], bh ; syscall
0x00000000000cd95a : add byte ptr [rax + 0x7f], bh ; ret
0x0000000000035794 : add byte ptr [rax + 0x7f], bh ; syscall
0x00000000000357de : add byte ptr [rax + 0x82], bh ; syscall
0x0000000000035e1f : add byte ptr [rax + 0x83], bh ; syscall
0x0000000000035e1e : add byte ptr [rax + 0x83], dil ; syscall
0x00000000000f6b3f : add byte ptr [rax + 0x84], bh ; syscall
0x00000000000f6b3e : add byte ptr [rax + 0x84], dil ; syscall
0x0000000000107dff : add byte ptr [rax + 0x86], bh ; syscall
0x000000000006d82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000760aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000000f6e0f : add byte ptr [rax + 0x8a], bh ; syscall
0x00000000000fcd5f : add byte ptr [rax + 0x8d], bh ; syscall
0x00000000000fcd5e : add byte ptr [rax + 0x8d], dil ; syscall
0x00000000000ea75f : add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000ea78f : add byte ptr [rax + 0x8f], bh ; syscall
0x00000000000ea7bf : add byte ptr [rax + 0x90], bh ; syscall
0x00000000000ea7ef : add byte ptr [rax + 0x91], bh ; syscall
0x00000000000ea84f : add byte ptr [rax + 0x92], bh ; syscall
0x00000000000ea87f : add byte ptr [rax + 0x93], bh ; syscall
0x00000000000ea8af : add byte ptr [rax + 0x94], bh ; syscall
0x00000000001018bf : add byte ptr [rax + 0x96], bh ; syscall
0x0000000000075b81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001018ef : add byte ptr [rax + 0x97], bh ; syscall
0x000000000010191f : add byte ptr [rax + 0x98], bh ; syscall
0x00000000001077bf : add byte ptr [rax + 0x9a], bh ; syscall
0x0000000000107c1f : add byte ptr [rax + 0x9b], bh ; syscall
0x000000000010778f : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000000fc98f : add byte ptr [rax + 0xa0], bh ; syscall
0x00000000000fd72f : add byte ptr [rax + 0xa1], bh ; syscall
0x00000000000fd7bf : add byte ptr [rax + 0xa2], bh ; syscall
0x00000000000fd6ff : add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000bc50f : add byte ptr [rax + 0xa4], bh ; syscall
0x000000000010747f : add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000fdbef : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000000fdc1f : add byte ptr [rax + 0xa8], bh ; syscall
0x000000000010176f : add byte ptr [rax + 0xa], bh ; syscall
0x00000000000fd4cf : add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000fd56f : add byte ptr [rax + 0xab], bh ; syscall
0x000000000010730f : add byte ptr [rax + 0xac], bh ; syscall
0x00000000001072df : add byte ptr [rax + 0xad], bh ; syscall
0x00000000001078ef : add byte ptr [rax + 0xae], bh ; syscall
0x000000000010791f : add byte ptr [rax + 0xb0], bh ; syscall
0x00000000001074af : add byte ptr [rax + 0xbb], bh ; syscall
0x000000000010615f : add byte ptr [rax + 0xc6], bh ; syscall
0x000000000010603f : add byte ptr [rax + 0xc7], bh ; syscall
0x00000000000bc36f : add byte ptr [rax + 0xc9], bh ; syscall
0x00000000001150c1 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000010794f : add byte ptr [rax + 0xd5], bh ; syscall
0x00000000001077ef : add byte ptr [rax + 0xe4], bh ; syscall
0x00000000000ce07e : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000007118c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000761ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000047b19 : add byte ptr [rax + 0xe], bh ; syscall
0x00000000000fefaf : add byte ptr [rax + 0xeb], bh ; syscall
0x000000000002ddd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008d455 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000ed503 : add byte ptr [rax + 0xf], cl ; mov esi, 0x894d0251 ; retf 0x4864
0x00000000000c959c : add byte ptr [rax + 0xf], cl ; ret
0x0000000000078cdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000008e64b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000140854 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010f00b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000517bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9706 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000be066 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008f19b : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f967c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001266cc : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000082ed7 : add byte ptr [rax + 0xf], cl ; retf 0x8348
0x00000000000be724 : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000000cda1f : add byte ptr [rax + 0xfc17], bh ; ret
0x0000000000107acf : add byte ptr [rax + 0xfd], bh ; syscall
0x0000000000107b2f : add byte ptr [rax + 0xff], bh ; syscall
0x00000000001adb9b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a58bf : add byte ptr [rax + 1], al ; out dx, al ; call qword ptr [rsi]
0x00000000001adbb3 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], bl ; hlt ; jmp qword ptr [rcx]
0x000000000012b04f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b5 : add byte ptr [rax + 1], bh ; ret
0x00000000001094d8 : add byte ptr [rax + 1], bh ; syscall
0x000000000008e8f5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000c00b2 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000003c036 : add byte ptr [rax + 1], cl ; ret
0x000000000003bf0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000bb5fc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000015a83d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000008e8ff : add byte ptr [rax + 1], cl ; retf 0x8348
0x000000000002fa70 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000023a93 : add byte ptr [rax + 1], cl ; retf 0xc748
0x0000000000049510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000773ee : add byte ptr [rax + 1], dil ; ret
0x000000000012e08f : add byte ptr [rax + 2], bh ; ret
0x000000000001fa70 : add byte ptr [rax + 2], bh ; syscall
0x000000000002c0af : add byte ptr [rax + 3], bh ; syscall
0x0000000000010417 : add byte ptr [rax + 7], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000cdbf6 : add byte ptr [rax + 7], bh ; ret
0x000000000010743f : add byte ptr [rax + 8], bh ; syscall
0x00000000000ec9b2 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebb18 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000019bbeb : add byte ptr [rax + rax + 0x4b500000], dh ; call 0x1b86ff
0x000000000017c3ab : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000019a30f : add byte ptr [rax + rax - 8], dl ; push rsp ; retf
0x00000000001975c7 : add byte ptr [rax + rax*4 - 0x13], ah ; jmp rsp
0x00000000001a7b73 : add byte ptr [rax + rax*8], bh ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a7ba3 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000000a69ac : add byte ptr [rax + rax], 0 ; ret
0x00000000001a8707 : add byte ptr [rax + rax], ah ; add ah, dl ; retf
0x000000000010b9cc : add byte ptr [rax + rax], al ; add al, ch ; retf
0x00000000000f12f2 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000000f8af : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000006a96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001162ee : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x00000000001b8697 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; retf
0x000000000008241c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000082d89 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000d7af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000001b872f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; retf
0x00000000001a862f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0
0x00000000001a86d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a868f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf
0x00000000001a7d7f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a8677 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf
0x00000000001a7dc7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001b86c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; retf
0x00000000000ac565 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x00000000001a6383 : add byte ptr [rax + rbp*4], cl ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b13ab : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x000000000019d383 : add byte ptr [rax + rbx], cl ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x0000000000070a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ffe1d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000045ce6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000019780f : add byte ptr [rax + rcx*8], ah ; in eax, dx ; jmp rsp
0x000000000019c34b : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; js 0x19c343 ; jmp qword ptr [rcx]
0x00000000001af3a3 : add byte ptr [rax + rdi + 1], ch ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af3bb : add byte ptr [rax + rdi - 0x21fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a73cb : add byte ptr [rax + rdi*4 + 0x1900000], dl ; out dx, eax ; jmp rsi
0x00000000001bb33b : add byte ptr [rax + rdi*8], al ; add dword ptr [rax], eax ; jo 0x1bb2df ; sti ; jmp qword ptr [rdx]
0x000000000017d557 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001acbd3 : add byte ptr [rax + rdx - 0x4327ffff], bl ; jmp qword ptr [rdi]
0x00000000001b0b73 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; js 0x1b0bf2 ; cmc ; jmp qword ptr [rcx]
0x00000000001aebeb : add byte ptr [rax + rsi - 0x1ccfffff], dh ; hlt ; call qword ptr [rsi]
0x00000000001b2bb3 : add byte ptr [rax + rsi*2 + 1], bh ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b83 : add byte ptr [rax + rsi*2 + 1], cl ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b53 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; call 0x271b247d
0x00000000001a6be3 : add byte ptr [rax + rsi*4 + 0x54080000], ch ; cli ; call qword ptr [rax]
0x00000000001a6bb3 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001978f7 : add byte ptr [rax + rsi*8], dl ; in eax, dx ; call rsp
0x00000000001a565f : add byte ptr [rax - 0x10], ah ; in eax, dx ; call rsi
0x00000000001aefaf : add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc7 : add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x000000000006c98f : add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x00000000001aa22f : add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x00000000001aef67 : add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x0000000000133bcd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001aeeff : add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000302f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f1464 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001aa04f : add byte ptr [rax - 0x18], ah ; int1 ; call qword ptr [rbx]
0x00000000001aee87 : add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aa037 : add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001aa007 : add byte ptr [rax - 0x18], bl ; int1 ; jmp qword ptr [rdi]
0x00000000001aedf7 : add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6e27 : add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x00000000001aea5f : add byte ptr [rax - 0x21], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001aea77 : add byte ptr [rax - 0x21], bh ; hlt ; call qword ptr [rbx]
0x00000000001aea47 : add byte ptr [rax - 0x21], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7c67 : add byte ptr [rax - 0x23], ch ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001ace4f : add byte ptr [rax - 0x26], ah ; jmp qword ptr [rcx]
0x00000000001ace37 : add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x0000000000036081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001ae60f : add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x00000000001a1637 : add byte ptr [rax - 0x38], cl ; in al, dx ; call qword ptr [rax]
0x0000000000033dc7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000008767e : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000005c4f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000073edc : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000abf8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfcf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfbf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000354af : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001a1487 : add byte ptr [rax - 0x3c], bl ; in al, dx ; jmp rbx
0x00000000000091b7 : add byte ptr [rax - 0x3e], dl ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x0000000000187f6f : add byte ptr [rax - 0x3f000e04], ah ; cld ; int1 ; jmp rax
0x00000000000519d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000125168 : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x48 ; add edx, 1 ; syscall
0x000000000001f91b : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ef : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000352c5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000001b1f9f : add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x000000000003c932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000040b37 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000001b1e57 : add byte ptr [rax - 0x4b], bl ; cmc ; call rdi
0x00000000001ae257 : add byte ptr [rax - 0x58], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae23f : add byte ptr [rax - 0x58], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b1b0f : add byte ptr [rax - 0x59], dl ; cmc ; call rsi
0x00000000001adf27 : add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ade2f : add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa7 : add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x00000000000ff9bf : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000001a9adf : add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x00000000001a9ac7 : add byte ptr [rax - 0x6b], ch ; int1 ; call qword ptr [rax]
0x00000000001bb33f : add byte ptr [rax - 0x6b], dh ; sti ; jmp qword ptr [rdx]
0x00000000001adb9f : add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001adbb7 : add byte ptr [rax - 0x6d], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ada27 : add byte ptr [rax - 0x6f], cl ; hlt ; jmp qword ptr [rsi]
0x0000000000037373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000007f059 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x2373
0x0000000000026b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002cb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15ffe6 ; ret
0x000000000002092f : add byte ptr [rax - 0x73], cl ; add eax, 0x16bd34 ; ret
0x000000000002093f : add byte ptr [rax - 0x73], cl ; add eax, 0x16dc63 ; ret
0x00000000000fe32c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8c64 ; ret
0x00000000000fe16c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8e24 ; ret
0x000000000012b0ef : add byte ptr [rax - 0x73], cl ; add eax, 0x61a2e ; ret
0x0000000000026b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ac5af : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bf : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000012070f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7fe5 ; call rax
0x00000000000ac59f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000008156a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000349bc : add byte ptr [rax - 0x73], cl ; retf 0x2de9
0x00000000000450dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006f218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x000000000007c2f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x000000000007bf08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x000000000007aea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007ac38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x000000000006f511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x0000000000106277 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000012ddb6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000eff37 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000003a721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000140f22 : add byte ptr [rax - 0x75], cl ; add eax, 0x2844e6 ; call qword ptr [rax]
0x000000000014090f : add byte ptr [rax - 0x75], cl ; add eax, 0x284af9 ; call qword ptr [rax]
0x000000000007cb0f : add byte ptr [rax - 0x75], cl ; add eax, 0x348a09 ; ret
0x0000000000029c8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39bc59 ; ret
0x0000000000021a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78b9 ; ret
0x0000000000021a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78d9 ; ret
0x000000000007ff33 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde4e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000073d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000012e8d5 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000845df : add byte ptr [rax - 0x75], cl ; je 0x8460e ; call rax
0x00000000000845de : add byte ptr [rax - 0x75], cl ; je 0x8460f ; call rax
0x000000000005337d : add byte ptr [rax - 0x75], cl ; jl 0x533ae ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000007b706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00000000000cf303 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00000000000ec325 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x0000000000074f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d724f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x000000000013bb47 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000002342f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010626f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000012990e : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000152a1f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000848e7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x000000000004882f : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x0000000000087ad7 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x77], cl ; retf 0x348
0x0000000000087ec7 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x77], r9b ; retf 0x348
0x00000000000c9b8f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001099ce : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000105365 : add byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xf6b7
0x000000000005be57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368111 ; call rax
0x000000000005b801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368767 ; call rax
0x0000000000050049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x373f1f ; call rax
0x000000000004d3cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x376b9b ; call rax
0x00000000001895ac : add byte ptr [rax - 0x761d000c], cl ; hlt ; jmp rdx
0x0000000000123c2f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000ff454 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ffb32 : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000001177bf : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000001435f4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000896d1 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008958e : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x000000000014381f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000033630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000100ee8 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0xcd1f8
0x000000000008921e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000077b22 : add byte ptr [rax - 0x77], cl ; and r11b, bpl ; retf 0x1f0f
0x000000000011646f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007cb3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000013cb3f : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; retf 0x8944
0x000000000007a361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006abce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000142205 : add byte ptr [rax - 0x77], cl ; fidivr word ptr [rax + 1] ; syscall
0x000000000001fa0f : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x000000000003408b : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 3] ; syscall
0x000000000007221c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000033c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00000000001430d9 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009f49e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00000000000518ad : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x000000000004d725 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x0000000000088104 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000bea26 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000100ce5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xf775
0x0000000000103f55 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e55 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000103a4d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000010c054 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000006d1cc : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000006fe5d : add byte ptr [rax - 0x77], cl ; imul eax ; retf 0xfb0c
0x000000000006dcb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000784b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000109253 : add byte ptr [rax - 0x77], cl ; out 0xb8, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008588c : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x81b89
0x00000000000bda26 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89d19
0x0000000000088b75 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001158a4 : add byte ptr [rax - 0x77], cl ; out dx, al ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x000000000012e34c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103b11 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012cac3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x0000000000172dc7 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov rbp, r12 ; call 0x1f8b1
0x0000000000076ca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x0000000000114701 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000084ba5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002ad35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000012804f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008408c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc58 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000047465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000662e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003413a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000046ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000bf2bf : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x00000000001177c2 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000d779d : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002fa5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010d393 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007fe1f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000522b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000002c03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bcd40 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000970b0 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f0c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c97e6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fe4fa : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c8f3e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000fe055 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x0000000000105ed5 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000007db9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x000000000008e5eb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000044dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000528df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x0000000000045cea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000061cd7 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000e0bff : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000951f5 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000089162 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007a3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000b076a : add byte ptr [rax - 0x77], cl ; retf
0x0000000000146d84 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000082ee7 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000073b59 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x0000000000144e52 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x00000000000e7566 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000003205a : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x0000000000144ff2 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000000d50eb : add byte ptr [rax - 0x77], cl ; retf 0x8944
0x000000000004ab03 : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000003e9d1 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000110b67 : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000aadef : add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000144db0 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000012ffd3 : add byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000088856 : add byte ptr [rax - 0x77], cl ; retf 0xc2eb
0x000000000006b00d : add byte ptr [rax - 0x77], cl ; retf 0xd148
0x0000000000146c06 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000014aadc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000011acd4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], 0x85 ; ret 0xfffe
0x00000000001435ac : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000452bd : add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000cc72f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000f6440 : add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x000000000013232c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x132344 ; ret
0x000000000013509c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1350b4 ; ret
0x00000000001350b4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1350cc ; ret
0x00000000001358ec : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x135904 ; ret
0x0000000000135904 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13591c ; ret
0x0000000000135934 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13594c ; ret
0x000000000011935f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000fba4e : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000001ad82f : add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x00000000001bc1b7 : add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000000c9d11 : add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001b13af : add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x000000000008b8bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000072b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000acd86 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000063690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000053c4b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000075d84 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000056867 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x1c
0x00000000000a32d3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001003e1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000138f23 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x0000000000031e54 : add byte ptr [rax - 0x7bf08707], al ; retf
0x0000000000166deb : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000016cc07 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000010e55d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d6d
0x0000000000084abb : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000061cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000006ad90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000878cd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d6d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000003495f : add byte ptr [rax - 0x7d], cl ; clc ; retf
0x000000000006bcff : add byte ptr [rax - 0x7d], cl ; fiadd dword ptr [rbx] ; sub rdx, r12 ; syscall
0x00000000000762ee : add byte ptr [rax - 0x7d], cl ; imul ebp, dword ptr [rax], 1 ; jmp 0x762c8
0x00000000000f71ef : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000001745b6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1745c7 ; ret
0x000000000003caeb : add byte ptr [rax - 0x7d], cl ; jl 0x3cb1c ; or byte ptr [rax], al ; jne 0x3cac6 ; jmp 0x3cace
0x000000000003fddb : add byte ptr [rax - 0x7d], cl ; jl 0x3fe0c ; adc byte ptr [rax], al ; jne 0x3fdb6 ; jmp 0x3fdbe
0x0000000000084be2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000020c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1dea : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000126bcf : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122e44 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000aa14f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feaaf : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000122532 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000082bd9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000bee1f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000001226ba : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58df : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749ef : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f7a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000009f02f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000023de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000144e7f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d7c3f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaef : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000343b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000afc8f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d8d47 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000242b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c9f : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c95f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000609ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e657 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011f735 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008de80 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000146e63 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7787 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144ea3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000008041f : add byte ptr [rax - 0x7d], cl ; retf
0x000000000009f65f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008b9ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000297fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006ee54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000046067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000aff17 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000bc589 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000802b0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000001242e1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000011bda8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000001413a8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; js 0x1413b7 ; add byte ptr [rax], al ; syscall
0x000000000007186c : add byte ptr [rax - 0x7f], cl ; ret
0x000000000015903b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f1bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000e0a52 : add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000001b0b00 : add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000011958b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548d : add byte ptr [rax - 1], bh ; ret
0x00000000001a6af7 : add byte ptr [rax - 1], bh ; stc ; call qword ptr [rax]
0x00000000000368c6 : add byte ptr [rax - 1], dil ; ret
0x0000000000195964 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x000000000019b52f : add byte ptr [rax - 6], ah ; call rsp
0x0000000000128482 : add byte ptr [rax], 0 ; add al, ch ; cmc ; retf
0x0000000000088e1a : add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret 8
0x00000000000704b4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000006d3b5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xa7c
0x00000000001242e5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000011bdac : add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000007c1dd : add byte ptr [rax], 0 ; add al, ch ; retf 0x98e
0x00000000000738ad : add byte ptr [rax], 0 ; add al, ch ; retf 0xa17
0x000000000006b4bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000000df58c : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x000000000015a83a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000073ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000006fe5a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf 0xfb0c
0x000000000003ea8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000b5bb6 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000d50e8 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8944
0x000000000017513b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013c15b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015b81b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000963cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000082f33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000aad83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000046bd8 : add byte ptr [rax], 0 ; add byte ptr [rbp + 0x148ff50], cl ; retf 0xf66
0x000000000006fe0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b01fd : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x29], al ; retf 0xca89
0x00000000000362c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x0000000000071033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000b5c13 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016e751 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000002b0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000065892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000000000006d82b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x0000000000070676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x0000000000070fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x0000000000071324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00000000000761ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x0000000000078083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x0000000000126a79 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00000000000cc410 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000001a248f : add byte ptr [rax], ah ; cmc ; in al, dx ; call qword ptr [rsi]
0x00000000001abdbf : add byte ptr [rax], ah ; in eax, 0xf2 ; call qword ptr [rsi]
0x00000000001a758f : add byte ptr [rax], ah ; jae 0x1a7586 ; call rax
0x000000000010e74e : add byte ptr [rax], ah ; jmp 0x10e718
0x00000000001b11df : add byte ptr [rax], ah ; jnp 0x1b11dc ; jmp qword ptr [rcx]
0x000000000002de14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000000f367 : add byte ptr [rax], ah ; ret
0x0000000000009c67 : add byte ptr [rax], ah ; retf
0x0000000000018ef7 : add byte ptr [rax], ah ; retf 0x18
0x00000000000049b7 : add byte ptr [rax], ah ; retf 0xc
0x00000000001ae20f : add byte ptr [rax], ah ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a862e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x00000000001a86d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a868e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x00000000001a7d7e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a8676 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000001a7dc6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001b86c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; retf
0x000000000019d54a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001af44a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa4a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001b094a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c4a : add byte ptr [rax], al ; adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b114a : add byte ptr [rax], al ; adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b1151 ; jmp qword ptr [rcx]
0x00000000001b2a4a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b364a : add byte ptr [rax], al ; adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x0000000000197666 : add byte ptr [rax], al ; adc al, 0x9c ; in eax, dx ; call rsp
0x00000000001a794a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x000000000019783e : add byte ptr [rax], al ; adc al, 0xcc ; in eax, dx ; jmp rsp
0x00000000001a994a : add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000001978f6 : add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x000000000019c34a : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; js 0x19c344 ; jmp qword ptr [rcx]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001a94fe : add byte ptr [rax], al ; adc byte ptr [rax], dh ; int1 ; jmp qword ptr [rcx]
0x0000000000035d70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001be49a : add byte ptr [rax], al ; adc cl, byte ptr [rax] ; add byte ptr [rax], al ; retf
0x000000000019cc7a : add byte ptr [rax], al ; adc dword ptr [rax], r8d ; add al, ah ; fld1 ; call qword ptr [rdx]
0x00000000001a8619 : add byte ptr [rax], al ; add ah, ah ; retf 0
0x00000000001ae519 : add byte ptr [rax], al ; add ah, ah ; sub dword ptr [rcx], eax ; add byte ptr [rax], al ; retf 0xfff4
0x00000000001b8731 : add byte ptr [rax], al ; add ah, bh ; retf
0x00000000001a8631 : add byte ptr [rax], al ; add ah, bh ; retf 0
0x00000000001a8601 : add byte ptr [rax], al ; add ah, cl ; retf 0
0x00000000001ab201 : add byte ptr [rax], al ; add ah, cl ; test byte ptr [rax], 0 ; call 0x281aa43f
0x00000000001acc29 : add byte ptr [rax], al ; add ah, dh ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001abb09 : add byte ptr [rax], al ; add ah, dl ; inc dword ptr [rax] ; add al, ah ; ret
0x00000000001a8709 : add byte ptr [rax], al ; add ah, dl ; retf
0x000000000010b9cb : add byte ptr [rax], al ; add al, 0 ; add al, ch ; retf
0x00000000001ae23a : add byte ptr [rax], al ; add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019804e : add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x000000000019f23a : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000001b0a3a : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000197da6 : add byte ptr [rax], al ; add al, 0x66 ; out dx, al ; call rsp
0x000000000019751e : add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197df6 : add byte ptr [rax], al ; add al, 0x6c ; out dx, al ; call rsp
0x000000000019f17e : add byte ptr [rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x00000000001bb33a : add byte ptr [rax], al ; add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb2e0 ; sti ; jmp qword ptr [rdx]
0x0000000000018805 : add byte ptr [rax], al ; add al, ah ; ret 0x17
0x000000000001c5cd : add byte ptr [rax], al ; add al, ah ; retf 7
0x000000000001b235 : add byte ptr [rax], al ; add al, al ; retf
0x000000000001c615 : add byte ptr [rax], al ; add al, al ; retf 7
0x00000000001860f5 : add byte ptr [rax], al ; add al, bh ; loope 0x186100 ; jmp qword ptr [rdi]
0x0000000000186175 : add byte ptr [rax], al ; add al, bh ; loope 0x186180 ; jmp qword ptr [rdi]
0x00000000001861f5 : add byte ptr [rax], al ; add al, bh ; loope 0x186200 ; jmp qword ptr [rdi]
0x00000000001ae787 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000001116a3 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000032dff : add byte ptr [rax], al ; add al, ch ; cdq ; retf 0xfffe
0x0000000000128483 : add byte ptr [rax], al ; add al, ch ; cmc ; retf
0x00000000000bf80c : add byte ptr [rax], al ; add al, ch ; mov esp, 0x89000373 ; ret 0x3b8
0x0000000000033540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x0000000000088e1b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret 8
0x00000000001123c8 : add byte ptr [rax], al ; add al, ch ; push rax ; ret 0xfff1
0x000000000005c485 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000006f646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x000000000006d3b6 : add byte ptr [rax], al ; add al, ch ; ret 0xa7c
0x000000000012c046 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x000000000002aca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00000000000e14de : add byte ptr [rax], al ; add al, ch ; ret 0xf3e3
0x00000000000bd0a6 : add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x0000000000141d46 : add byte ptr [rax], al ; add al, ch ; ret 0xfb58
0x00000000001242e6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x000000000002225d : add byte ptr [rax], al ; add al, ch ; retf
0x000000000007c1de : add byte ptr [rax], al ; add al, ch ; retf 0x98e
0x00000000000738ae : add byte ptr [rax], al ; add al, ch ; retf 0xa17
0x0000000000067b9e : add byte ptr [rax], al ; add al, ch ; retf 0xa31
0x000000000012c84e : add byte ptr [rax], al ; add al, ch ; retf 0xf01d
0x000000000010e7d2 : add byte ptr [rax], al ; add al, ch ; retf 0xfff6
0x000000000012eb3e : add byte ptr [rax], al ; add al, ch ; retf 0xfffd
0x00000000001a11ad : add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x000000000001bd45 : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001c95d : add byte ptr [rax], al ; add al, dh ; retf 7
0x000000000001c5b5 : add byte ptr [rax], al ; add al, dl ; retf 7
0x0000000000019225 : add byte ptr [rax], al ; add bh, ah ; retf 0x18
0x000000000017513d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013225a : add byte ptr [rax], al ; add bh, bh ; loope 0x1321f7 ; ret
0x0000000000045108 : add byte ptr [rax], al ; add bh, bh ; shr cl, 1 ; retf
0x00000000000d729b : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000cea3a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ada9f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000000d95bb : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d95b5 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00000000001359fb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000895da : add byte ptr [rax], al ; add bl, al ; ret
0x00000000000191c5 : add byte ptr [rax], al ; add bl, al ; retf 0x18
0x000000000013514c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000194e0f : add byte ptr [rax], al ; add bl, bh ; call rax
0x000000000007b5db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00000000000bf1e8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000045b22 : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000069266 : add byte ptr [rax], al ; add bl, ch ; retf 0x85c7
0x0000000000132ab0 : add byte ptr [rax], al ; add bl, ch ; retf 0x8b48
0x00000000000ec0e6 : add byte ptr [rax], al ; add bl, ch ; retf 0x8b4c
0x00000000000c8c2b : add byte ptr [rax], al ; add bl, ch ; retf 0xdb31
0x00000000000a6ddd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6ded : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002bd55 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000fcf3d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x00000000000fb7b3 : add byte ptr [rax], al ; add byte ptr [rax + 0x10f], bh ; syscall
0x0000000000107668 : add byte ptr [rax], al ; add byte ptr [rax + 0x121], bh ; syscall
0x0000000000142cab : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00000000000cc1fd : add byte ptr [rax], al ; add byte ptr [rax + 0x25], bh ; syscall
0x0000000000055b8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a30 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1502 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000d963e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd95e4
0x000000000002bdbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000cda74 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x00000000001514d4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000011758d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x000000000015fd41 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000011870d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000cc76d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000cbf2d : add byte ptr [rax], al ; add byte ptr [rax + 0x3f], bh ; syscall
0x00000000001946b3 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002c9bb : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000019bbed : add byte ptr [rax], al ; add byte ptr [rax + 0x4b], dl ; call 0x1b86fd
0x00000000000f896d : add byte ptr [rax], al ; add byte ptr [rax + 0x56], bh ; syscall
0x00000000000f6edd : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000bc42d : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x00000000000fc95d : add byte ptr [rax], al ; add byte ptr [rax + 0x61], bh ; syscall
0x0000000000078946 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x789c4 ; syscall
0x00000000000b0629 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000072d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000c3a00 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000e7fcd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000d6b56 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8b4c
0x00000000000df58d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x000000000004b64a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000035420 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x00000000000cd23d : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000cd25d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000cd24d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000cd26d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000cd27d : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x00000000000a732d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000cd4ad : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000cd958 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000035792 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x00000000000357dc : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000000ea75d : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000fd6fd : add byte ptr [rax], al ; add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000bc50d : add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x000000000010747d : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000fd4cd : add byte ptr [rax], al ; add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000fd56d : add byte ptr [rax], al ; add byte ptr [rax + 0xab], bh ; syscall
0x00000000001150bf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000ce07c : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000047b17 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000000c959a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000140852 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010f009 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000ff56f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9704 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000f967a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000082ed5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8348
0x00000000000cda1d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000012b04d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001094d6 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x00000000000aaec0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003bf0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000015a83b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000023a91 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xc748
0x000000000012e09d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000002c0ad : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x00000000000cdbf4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x000000000010743d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x00000000001a8705 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add ah, dl ; retf
0x00000000001b8695 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; retf
0x00000000001b872d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; retf
0x00000000001a862d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0
0x00000000001a86d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a868d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf
0x00000000001a7d7d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a8675 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf
0x00000000001a7dc5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001b86c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; retf
0x00000000000ac563 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x000000000006c98d : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000003c2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000073eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000034c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000352c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000ff9bd : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000ac5ad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007ff31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde4c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000012e8d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x000000000007b704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x000000000002342d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012990c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000c9b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007cb3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000518ab : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x000000000004d723 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000000bea24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103f53 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e53 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000103a4b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000010c052 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000006fe5b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf 0xfb0c
0x0000000000088b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e34a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103b0f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000076ca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x000000000003ea20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008408a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000f006d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002c03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cdff1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f0c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000105ed3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000570dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000951f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007a3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000b0768 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000008305d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000073b57 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000000d50e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8944
0x000000000004ab01 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000003e9cf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000aaded : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000144dae : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000012ffd1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000146c04 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000014aada : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000000452bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000cc72d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000f643e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x000000000006368e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000053c49 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000056865 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x1c
0x0000000000138f21 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x0000000000031e52 : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf08707], al ; retf
0x000000000003495d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; retf
0x00000000000f71ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000320dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126bcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000aa14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f78 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000029014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000001469a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d7c3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000609ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e655 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000148521 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001469cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc73d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000029abe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000015a834 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000e0a50 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x0000000000033f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000001bdd5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000197f5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x0000000000018ef5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x18
0x00000000001a862c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x00000000001a86d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a868c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x00000000001a7d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a8674 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000001a7dc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001b86c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; retf
0x00000000001be498 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc cl, byte ptr [rax] ; add byte ptr [rax], al ; retf
0x0000000000018803 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x17
0x000000000001c5cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 7
0x000000000001b233 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x000000000001c613 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 7
0x00000000001860f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186102 ; jmp qword ptr [rdi]
0x0000000000186173 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186182 ; jmp qword ptr [rdi]
0x00000000001861f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186202 ; jmp qword ptr [rdi]
0x000000000002225b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000001bd43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001c95b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 7
0x000000000001c5b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 7
0x0000000000019223 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ah ; retf 0x18
0x00000000000191c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; retf 0x18
0x0000000000194e0d : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000a6deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000758cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000011758b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x0000000000072d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000023a8f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xc748
0x00000000000ac5ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007cb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000084088 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000bff4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000570db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x000000000012f9cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000008305b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000000aadeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x00000000000320db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000001749eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d7c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006167b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000c004b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001bdd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000197f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x0000000000018ef3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x18
0x0000000000018801 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x17
0x000000000001c5c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 7
0x000000000001b231 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x000000000001c611 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 7
0x000000000001bd41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001c959 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 7
0x000000000001c5b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 7
0x0000000000019221 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ah ; retf 0x18
0x00000000000191c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; retf 0x18
0x0000000000194e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000ea97d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000001bdd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000197f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x0000000000018ef1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x18
0x00000000001beeb0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000001018 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001beab4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000185d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x18
0x0000000000194368 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x0000000000194e0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x0000000000018ec1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x18
0x0000000000019881 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf
0x0000000000018f21 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf 0x18
0x00000000000189c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x18
0x000000000001be19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000018249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000018e91 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x18
0x0000000000019281 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; retf
0x0000000000018f51 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x18
0x000000000017585a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi - 0x15], ah ; jmp rax
0x0000000000019809 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; retf
0x0000000000019269 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; retf
0x00000000000189b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; retf 0x18
0x0000000000018f69 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; retf 0x18
0x0000000000019839 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; retf
0x0000000000018ae9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; retf 0x18
0x0000000000019251 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ch ; retf 0x18
0x00000000000191d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; retf 0x18
0x00000000000191f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; retf 0x18
0x0000000000019209 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; retf 0x18
0x0000000000019239 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; retf 0x18
0x00000000000093a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001860f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186103 ; jmp qword ptr [rdi]
0x0000000000186172 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186183 ; jmp qword ptr [rdi]
0x00000000001861f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186203 ; jmp qword ptr [rdi]
0x0000000000019132 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x18
0x0000000000019252 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in eax, dx ; retf 0x18
0x0000000000019012 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf 0x18
0x0000000000019c72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf
0x000000000001914a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 0x18
0x0000000000019ca2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; retf
0x000000000019432a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000019be2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; retf
0x0000000000018fca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; retf 0x18
0x000000000001911a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; retf 0x18
0x0000000000018fb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; retf 0x18
0x000000000000404a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcbaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001c05a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001a07a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18f8
0x0000000000003fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e722 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf392 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001bf012 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd786 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd636 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000000101a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001beab6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000007fda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000000c02a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x11
0x0000000000005ef2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x18
0x000000000017e272 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000000091c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c
0x000000000017e762 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x0000000000009a62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3f
0x000000000000b0fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x000000000019436a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x0000000000009c8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x55
0x000000000000c83a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x000000000017d8da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000908a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x000000000000eeaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x00000000001bda26 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x0000000000194e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000052c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000019102 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; retf 0x18
0x0000000000019c5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000000190ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; retf 0x18
0x0000000000018ec3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x18
0x0000000000019883 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf
0x0000000000018f23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf 0x18
0x00000000000189cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x18
0x00000000000a9bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001be1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001824b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000018e93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x18
0x00000000000bd90b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf
0x000000000012c55b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x18], dl ; retf 0xbc
0x000000000003a899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000101a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000019283 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; retf
0x0000000000018f53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x18
0x00000000000aa38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001077fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000011012b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000019432b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000017585c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi - 0x15], ah ; jmp rax
0x000000000007a61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000001980b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; retf
0x000000000001926b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; retf
0x00000000000189b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; retf 0x18
0x0000000000018f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; retf 0x18
0x00000000000ac44b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000001983b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; retf
0x0000000000018aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; retf 0x18
0x00000000001a8704 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add ah, dl ; retf
0x0000000000019253 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ch ; retf 0x18
0x00000000000191db : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; retf 0x18
0x00000000000191f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; retf 0x18
0x000000000001920b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; retf 0x18
0x000000000011740b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000001923b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, ch ; retf 0x18
0x00000000000abf4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004db0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000fe43c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077eec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000062d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f7f6
0x000000000002cce1 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x39776
0x000000000017513c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001439ec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000018025c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f40c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001860f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186101 ; jmp qword ptr [rdi]
0x0000000000186174 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186181 ; jmp qword ptr [rdi]
0x00000000001861f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186201 ; jmp qword ptr [rdi]
0x00000000000fb887 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108ab7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000d6c3d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc95 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000097486 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x0000000000019134 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x18
0x0000000000019254 : add byte ptr [rax], al ; add byte ptr [rax], al ; in eax, dx ; retf 0x18
0x0000000000019014 : add byte ptr [rax], al ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf 0x18
0x00000000001a7ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a7deb ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001b85cc : add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1b85db ; add byte ptr [rax], al ; pushfq ; retf 1
0x000000000006084e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00000000000bf711 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbb947
0x0000000000058e19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000019c74 : add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf
0x0000000000170b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000170b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000170b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000170b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000170bac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000170aec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000170afc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000170b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000170b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000170b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000170b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000170b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000170b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000ac59c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000ac5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000ac5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x0000000000170adc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000001914c : add byte ptr [rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 0x18
0x0000000000019ca4 : add byte ptr [rax], al ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; retf
0x0000000000168c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a732c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000a5d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000168ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000fcf3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000cc1fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x25 ; syscall
0x00000000000cc76c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000cbf2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000000f896c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000f6edc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000bc42c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000fc95c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x00000000000cd23c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000cd25c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000cd24c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000cd26c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000cd27c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000cd4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000ea75c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000fd6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000bc50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x000000000010747c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000fd4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000fd56c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000cda1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007222c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e09c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000010743c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000013c15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d723c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000015b81c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000168cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013c518 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012d9ba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c884c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007cb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007cb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bff3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x00000000000fecfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x8b729
0x00000000000654fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x71fd9
0x00000000000cc72c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x0000000000168c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a6ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b96c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002058b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000133768 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c319 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096ce2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000109628 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b9b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019432c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000019be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; retf
0x0000000000018fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; retf 0x18
0x000000000001911c : add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; retf 0x18
0x00000000001946b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000018fb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; retf 0x18
0x000000000000404c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcbac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001c05c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001a07c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18f8
0x000000000017f22c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f9c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e724 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf394 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001bf014 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd788 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd638 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000000101c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001beab8 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000007fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000000c02c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x11
0x0000000000005ef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x18
0x000000000017f264 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x000000000017fa04 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000017e274 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000000091c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c
0x000000000017e764 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000001826a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000009a64 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3f
0x000000000000b0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x000000000019436c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x0000000000009c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x55
0x000000000000c83c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x000000000001041c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000908c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x000000000000eeac : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x00000000001bda28 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x0000000000194e0e : add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000001b8694 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; retf
0x00000000000052c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000019104 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; retf 0x18
0x0000000000019c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000000190ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; retf 0x18
0x00000000000a9bac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000002089c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000009674c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000018ec5 : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x18
0x0000000000019885 : add byte ptr [rax], al ; add byte ptr [rax], ch ; retf
0x0000000000018f25 : add byte ptr [rax], al ; add byte ptr [rax], ch ; retf 0x18
0x0000000000094422 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94433 ; ret
0x00000000000189cd : add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x18
0x00000000000a9bad : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001be1d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001824d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000018e95 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x18
0x0000000000046bd9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x148ff50], cl ; retf 0xf66
0x0000000000029a6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f31 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000bd46d : add byte ptr [rax], al ; add byte ptr [rbp + 0x39440753], cl ; retf 0x8d0f
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000dde03 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf
0x00000000000586b5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x000000000012cf67 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000000aa8e1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000000bd90d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf
0x0000000000146958 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000860f2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; retf
0x00000000000cfdcd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 0x12
0x0000000000024aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000000db233 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5d2d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000aac39 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000943e3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cd416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015b0fd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029da9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035a94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000006e7fc : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000003a9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000170888 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000000c8124 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x000000000005a37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000012c55d : add byte ptr [rax], al ; add byte ptr [rbx - 0x18], dl ; retf 0xbc
0x000000000005721c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000003a89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e13fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000013c60d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000e17ed : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000e97bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000101a3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000072fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000019285 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; retf
0x0000000000018f55 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x18
0x00000000000b5776 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000b01fe : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0xca89
0x00000000000a603f : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x0000000000168ced : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012fb49 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000116a0e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168ccd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000075510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000d7036 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; retf
0x00000000000c4990 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000056802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000362c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa900 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000010e872 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 1] ; retf
0x00000000000aa38d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001bcd31 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000000e4781 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000002f6d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103751 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000fecfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x8b728
0x0000000000103885 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000105edc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, r12d ; syscall
0x00000000000d9808 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd981f
0x0000000000071034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000654fd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x71fd8
0x00000000001036ba : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001036c9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001aac69 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000000f5f6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000045f92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000047d67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddda7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000123c7a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000000b576b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x8948
0x000000000008e1e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005aef4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000001077fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000010772d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x0000000000094f0a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x00000000000b5c14 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005133c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f7ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094f9f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000e1a84 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d5380 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000011012d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000bd86d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000085107 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x00000000001215b7 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835df : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000019432d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000019ccce : add byte ptr [rax], al ; add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec10 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec36 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000e79de : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000d5b95 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5b26
0x00000000000b9df5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000db242 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e07c5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0db : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000eeb8a : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x8c0f
0x000000000008d9f4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c286f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c5fe1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41fd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2832 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a82b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x000000000005401a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c245e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f51 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fcd2f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000e072d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ae505 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000001157ee : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax + 0x63], 0xfa ; syscall
0x00000000000abc62 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172932 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001ab281 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], cl ; add al, bh ; sub esi, edx ; jmp rcx
0x000000000017585e : add byte ptr [rax], al ; add byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000000e8228 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x00000000001159b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000aab95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b96d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d191d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007a61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008eb2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c52e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c55fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013d44b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df15a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000fb888 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf38 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d789e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c354f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000e071b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000014a775 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8eac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x0000000000045b1d : add byte ptr [rax], al ; add byte ptr [rdx + 3], bh ; jmp 0x45afb
0x00000000001a839e : add byte ptr [rax], al ; add byte ptr [rdx - 0x10], cl ; call qword ptr [rdx]
0x000000000019e00e : add byte ptr [rax], al ; add byte ptr [rdx - 0x17], dh ; jmp qword ptr [rsi]
0x000000000001980d : add byte ptr [rax], al ; add byte ptr [rdx], ah ; retf
0x000000000001926d : add byte ptr [rax], al ; add byte ptr [rdx], al ; retf
0x00000000000189b5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; retf 0x18
0x0000000000018f6d : add byte ptr [rax], al ; add byte ptr [rdx], bh ; retf 0x18
0x0000000000000762 : add byte ptr [rax], al ; add byte ptr [rdx], dl ; retf
0x000000000016e752 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008ea42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000ac44d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x0000000000103693 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f68d5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001bad26 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001ab141 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001a682e : add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x000000000001983d : add byte ptr [rax], al ; add byte ptr [rsi], ah ; retf
0x0000000000018aed : add byte ptr [rax], al ; add byte ptr [rsi], cl ; retf 0x18
0x00000000000f5f47 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001a8706 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add ah, dl ; retf
0x000000000019f17a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x0000000000019255 : add byte ptr [rax], al ; add ch, ch ; retf 0x18
0x00000000000191dd : add byte ptr [rax], al ; add ch, cl ; retf 0x18
0x00000000000191f5 : add byte ptr [rax], al ; add ch, dl ; retf 0x18
0x000000000019f23e : add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x0000000000067495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000060226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x0000000000067732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x000000000009e7e5 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000000000009e6b1 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x000000000002b0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000f0c31 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000006084f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000000000026720 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000f52fc : add byte ptr [rax], al ; add cl, ch ; retf 0
0x000000000004e4d2 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff7
0x0000000000027ebd : add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x00000000000851d9 : add byte ptr [rax], al ; add dh, al ; and al, 0x10 ; add al, ch ; retf 0xfc54
0x000000000001920d : add byte ptr [rax], al ; add dh, bl ; retf 0x18
0x0000000000065893 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e45e7 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000e45f6 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000171da1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000061ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000000a12b0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a12b9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000000000001923d : add byte ptr [rax], al ; add dl, ch ; retf 0x18
0x00000000000e46a9 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d5b96 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001af19a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x0000000000133960 : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000001a58be : add byte ptr [rax], al ; add esi, ebp ; call qword ptr [rsi]
0x00000000000abf4e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000008e8f4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004da4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000132df1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00000000000cc5a7 : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000001154f8 : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r9d ; syscall
0x0000000000135871 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134fd1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000132254 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000032dce : add byte ptr [rax], al ; add rdi, 4 ; call 0x1f8a8
0x000000000012eb55 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014433e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013af21 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5f89 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f81d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d85a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a5eae : add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x000000000019d45a : add byte ptr [rax], al ; and al, 0x19 ; add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001b055a : add byte ptr [rax], al ; and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x0000000000197d1e : add byte ptr [rax], al ; and al, 0x62 ; out dx, al ; call rsp
0x00000000001b295a : add byte ptr [rax], al ; and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019780e : add byte ptr [rax], al ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001a7c7e : add byte ptr [rax], al ; and bl, 0xef ; call rsp
0x00000000001a758e : add byte ptr [rax], al ; and byte ptr [rbx - 0x11], dh ; call rax
0x00000000001adb9a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a248e : add byte ptr [rax], al ; and ch, dh ; in al, dx ; call qword ptr [rsi]
0x0000000000077eee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002e0eb : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000001b2c2f : add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb2e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008b7a0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008d454 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000112295 : add byte ptr [rax], al ; call 0x10ed24
0x000000000019bc66 : add byte ptr [rax], al ; call 0x1119a4be
0x0000000000088e1c : add byte ptr [rax], al ; call 0x115084
0x00000000000c8681 : add byte ptr [rax], al ; call 0x1150b4
0x00000000001a4616 : add byte ptr [rax], al ; call 0x121a3395
0x000000000019d986 : add byte ptr [rax], al ; call 0x1319c2d7
0x000000000019ed96 : add byte ptr [rax], al ; call 0x1319d75a
0x000000000019da36 : add byte ptr [rax], al ; call 0x1819c38d
0x0000000000062d7e : add byte ptr [rax], al ; call 0x1f7f4
0x0000000000032e00 : add byte ptr [rax], al ; call 0x1f8a4
0x00000000000f3fdb : add byte ptr [rax], al ; call 0x2027d
0x00000000001a8246 : add byte ptr [rax], al ; call 0x281a7298
0x00000000001ab206 : add byte ptr [rax], al ; call 0x281aa43a
0x00000000001ab206 : add byte ptr [rax], al ; call 0x281aa43b
0x0000000000021956 : add byte ptr [rax], al ; call 0x2dc44
0x00000000001123c9 : add byte ptr [rax], al ; call 0x2e624
0x000000000002cce3 : add byte ptr [rax], al ; call 0x39774
0x000000000010e7d3 : add byte ptr [rax], al ; call 0x7b224
0x0000000000080fdf : add byte ptr [rax], al ; call 0x7d284
0x0000000000083349 : add byte ptr [rax], al ; call 0x7fd54
0x00000000001ab4b6 : add byte ptr [rax], al ; call 0xffffffffcc1aa724
0x000000000017513e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000000bc20d : add byte ptr [rax], al ; call r12
0x0000000000020850 : add byte ptr [rax], al ; call rax
0x0000000000103699 : add byte ptr [rax], al ; call rbx
0x00000000001439ee : add byte ptr [rax], al ; call rcx
0x000000000018025e : add byte ptr [rax], al ; call rdi
0x0000000000039fcc : add byte ptr [rax], al ; call rdx
0x000000000017f40e : add byte ptr [rax], al ; call rsp
0x00000000001ab146 : add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x000000000019e596 : add byte ptr [rax], al ; clc ; jl 0x19e589 ; jmp rsp
0x00000000001860f6 : add byte ptr [rax], al ; clc ; loope 0x1860ff ; jmp qword ptr [rdi]
0x0000000000186176 : add byte ptr [rax], al ; clc ; loope 0x18617f ; jmp qword ptr [rdi]
0x00000000001861f6 : add byte ptr [rax], al ; clc ; loope 0x1861ff ; jmp qword ptr [rdi]
0x000000000019ecb6 : add byte ptr [rax], al ; clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001a9a46 : add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001a6386 : add byte ptr [rax], al ; clc ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab286 : add byte ptr [rax], al ; clc ; sub esi, edx ; jmp rcx
0x00000000001a7b76 : add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001ace32 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x00000000001a11aa : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001b0932 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0832 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b0632 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001aa032 : add byte ptr [rax], al ; cld ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001b0c32 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c39 ; jmp qword ptr [rcx]
0x00000000001b8732 : add byte ptr [rax], al ; cld ; retf
0x00000000001a8632 : add byte ptr [rax], al ; cld ; retf 0
0x00000000001ab082 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000000fb889 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108ab9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000b64ed : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d6c3f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc97 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000115809 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000097488 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000cd9ad : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010ed0f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019d472 : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001aea72 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea62 ; hlt ; call qword ptr [rbx]
0x00000000001b0772 : add byte ptr [rax], al ; cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b72 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bf3 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2c72 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b5472 : add byte ptr [rax], al ; cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a6672 : add byte ptr [rax], al ; cmp al, 0xab ; add byte ptr [rax], al ; js 0x1a66f3 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a7b72 : add byte ptr [rax], al ; cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a8036 : add byte ptr [rax], al ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001bbf72 : add byte ptr [rax], al ; cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000016cc06 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001a6446 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x0000000000074697 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x746a8 ; pop rbx ; ret
0x00000000000cc6f0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcc703 ; ret
0x00000000001972a6 : add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000000acc17 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacc31 ; mov eax, edi ; ret
0x0000000000072aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x000000000003fdda : add byte ptr [rax], al ; cmp qword ptr [rsp + 0x10], 0 ; jne 0x3fdb7 ; jmp 0x3fdbf
0x000000000003caea : add byte ptr [rax], al ; cmp qword ptr [rsp + 8], 0 ; jne 0x3cac7 ; jmp 0x3cacf
0x0000000000083f87 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x83f58 ; ret
0x00000000000cda94 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcdac7 ; ret
0x0000000000019136 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x18
0x00000000001ab086 : add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x000000000019d596 : add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rcx]
0x000000000017c3ba : add byte ptr [rax], al ; enter 0, 0 ; retf
0x000000000018040e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000017d566 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x000000000017cd66 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000017d166 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x000000000018060e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x000000000018080e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x0000000000180a0e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x0000000000180c0e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x0000000000180e0e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x000000000000171e : add byte ptr [rax], al ; enter 6, 0 ; retf
0x000000000018100e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x000000000018120e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x000000000018140e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x000000000018160e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000001afd12 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001acf12 : add byte ptr [rax], al ; fcom qword ptr [rbx] ; add dword ptr [rax], eax ; fcomp st(2) ; call qword ptr [rdx]
0x00000000001a7786 : add byte ptr [rax], al ; fcomp st(1) ; cld ; call qword ptr [rax]
0x00000000001b2c12 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6c12 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4ec80000] ; out dx, al ; call qword ptr [rax]
0x00000000001af512 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af912 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b12 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0b19 ; jmp qword ptr [rcx]
0x00000000001a4612 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x73e80000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000350d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001adc12 : add byte ptr [rax], al ; fsub qword ptr [rax] ; add dword ptr [rax], eax ; call 0x221ad0b9
0x00000000001a4446 : add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000001a7d56 : add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001aa2f6 : add byte ptr [rax], al ; fsubr st(6) ; int1 ; jmp rcx
0x00000000001acc2a : add byte ptr [rax], al ; hlt ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001b032a : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001aea2a : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af22a : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0b2a : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ade2a : add byte ptr [rax], al ; hlt ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001af92a : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x00000000001a622a : add byte ptr [rax], al ; hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000001b2c2a : add byte ptr [rax], al ; hlt ; jo 0x1b2c39 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a682a : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000001aa22a : add byte ptr [rax], al ; hlt ; out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x00000000001ad82a : add byte ptr [rax], al ; hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x00000000001ace1a : add byte ptr [rax], al ; in al, 0x12 ; add dword ptr [rax], eax ; xor dl, bl ; jmp qword ptr [rcx]
0x000000000019e21a : add byte ptr [rax], al ; in al, 0x26 ; add byte ptr [rax], al ; jne 0x19e215 ; jmp qword ptr [rcx]
0x00000000001b0f1a : add byte ptr [rax], al ; in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f21 ; jmp qword ptr [rcx]
0x00000000001a531a : add byte ptr [rax], al ; in al, 0x97 ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a931a : add byte ptr [rax], al ; in al, 0xd7 ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x00000000001bab1a : add byte ptr [rax], al ; in al, 0xef ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x0000000000197946 : add byte ptr [rax], al ; in al, 0xfa ; in eax, dx ; push rsp ; retf
0x00000000001b0a22 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adf22 : add byte ptr [rax], al ; in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6e22 : add byte ptr [rax], al ; in al, dx ; mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x00000000001b2b22 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244e
0x00000000001a6b22 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6722 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a6722 ; jmp qword ptr [rdx]
0x0000000000196be6 : add byte ptr [rax], al ; in eax, 0xe9 ; call rsp
0x00000000001974b6 : add byte ptr [rax], al ; in eax, dx ; jmp rsp
0x0000000000019256 : add byte ptr [rax], al ; in eax, dx ; retf 0x18
0x00000000001af9a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aeed4
0x00000000001bb0a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001af3a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf4b ; sti ; jmp qword ptr [rdx]
0x00000000001a45a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001ba1a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x00000000001b29a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b59a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001b64a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aeda2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x0000000000019016 : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf 0x18
0x00000000001bc57e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x000000000019e00f : add byte ptr [rax], al ; jb 0x19e000 ; jmp qword ptr [rsi]
0x00000000001bc8a6 : add byte ptr [rax], al ; jb 0x1bc8b0 ; add byte ptr [rax], al ; retf
0x00000000000f68d6 : add byte ptr [rax], al ; jbe 0xf68e5 ; ret
0x00000000001974de : add byte ptr [rax], al ; je 0x197538 ; in eax, dx ; jmp rsp
0x00000000001a49aa : add byte ptr [rax], al ; je 0x1a4945 ; add byte ptr [rax], al ; sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000001a5eaa : add byte ptr [rax], al ; je 0x1a5e5a ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a69aa : add byte ptr [rax], al ; je 0x1a6965 ; add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x00000000001a7dde : add byte ptr [rax], al ; je 0x1a7de9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aefaa : add byte ptr [rax], al ; je 0x1aefeb ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0caa : add byte ptr [rax], al ; je 0x1b0d08 ; add dword ptr [rax], eax ; jb 0x1b0cb1 ; jmp qword ptr [rcx]
0x000000000006d82c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x0000000000070677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x0000000000070feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00000000000761ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x0000000000078084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x0000000000087607 : add byte ptr [rax], al ; je 0x87614 ; ret
0x0000000000088f26 : add byte ptr [rax], al ; je 0x88f34 ; ret
0x0000000000094426 : add byte ptr [rax], al ; je 0x9442f ; ret
0x00000000000ac564 : add byte ptr [rax], al ; je 0xac5d8 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdabb : add byte ptr [rax], al ; je 0xcdb0e ; mov eax, 0x20 ; ret
0x00000000000e8496 : add byte ptr [rax], al ; je 0xe84d6 ; xor eax, eax ; ret
0x00000000000f5f48 : add byte ptr [rax], al ; je 0xf5f55 ; ret
0x0000000000172933 : add byte ptr [rax], al ; jg 0x172946 ; neg eax ; ret
0x00000000000abc63 : add byte ptr [rax], al ; jg 0xabc6f ; neg eax ; ret
0x0000000000170889 : add byte ptr [rax], al ; jl 0x170896 ; neg eax ; ret
0x000000000019dbb2 : add byte ptr [rax], al ; jl 0x19dbdf ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x000000000019ecb2 : add byte ptr [rax], al ; jl 0x19ecf0 ; add byte ptr [rax], al ; clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001adbb2 : add byte ptr [rax], al ; jl 0x1adbdf ; add dword ptr [rax], eax ; pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b2bb2 : add byte ptr [rax], al ; jl 0x1b2c2f ; add dword ptr [rax], eax ; call 0x271b24de
0x00000000001b85ce : add byte ptr [rax], al ; jl 0x1b85d9 ; add byte ptr [rax], al ; pushfq ; retf 1
0x00000000001bc1b2 : add byte ptr [rax], al ; jl 0x1bc1c5 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x00000000001a682f : add byte ptr [rax], al ; jle 0x1a6825 ; jmp qword ptr [rcx]
0x000000000011f3bc : add byte ptr [rax], al ; jmp 0x11f38e
0x0000000000045b23 : add byte ptr [rax], al ; jmp 0x45af5
0x000000000005f80f : add byte ptr [rax], al ; jmp 0x5baf4
0x0000000000060850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x0000000000062577 : add byte ptr [rax], al ; jmp 0x62549
0x0000000000067496 : add byte ptr [rax], al ; jmp 0x63700
0x000000000006499d : add byte ptr [rax], al ; jmp 0x6496f
0x00000000000bf713 : add byte ptr [rax], al ; jmp 0xbb945
0x0000000000035325 : add byte ptr [rax], al ; jmp rax
0x000000000013225b : add byte ptr [rax], al ; jmp rcx
0x00000000001017a5 : add byte ptr [rax], al ; jne 0x1017c2 ; mov eax, 0x1a ; syscall
0x0000000000107f85 : add byte ptr [rax], al ; jne 0x107fa2 ; mov eax, 0x130 ; syscall
0x0000000000108095 : add byte ptr [rax], al ; jne 0x1080b2 ; mov eax, 0x2b ; syscall
0x0000000000108125 : add byte ptr [rax], al ; jne 0x108142 ; mov eax, 0x2a ; syscall
0x0000000000108365 : add byte ptr [rax], al ; jne 0x108382 ; mov eax, 0x2f ; syscall
0x0000000000108485 : add byte ptr [rax], al ; jne 0x1084a2 ; mov eax, 0x2e ; syscall
0x000000000019e21e : add byte ptr [rax], al ; jne 0x19e211 ; jmp qword ptr [rcx]
0x00000000000cc285 : add byte ptr [rax], al ; jne 0xcc2a2 ; mov eax, 0x22 ; syscall
0x00000000000cc2e5 : add byte ptr [rax], al ; jne 0xcc302 ; mov eax, 0x23 ; syscall
0x00000000000cd98f : add byte ptr [rax], al ; jne 0xcd960 ; ret
0x00000000000cdb9e : add byte ptr [rax], al ; jne 0xcdb81 ; xor eax, eax ; ret
0x00000000000f7035 : add byte ptr [rax], al ; jne 0xf7052 ; mov eax, 2 ; syscall
0x00000000000f7255 : add byte ptr [rax], al ; jne 0xf7272 ; mov eax, 0 ; syscall
0x00000000000f72b5 : add byte ptr [rax], al ; jne 0xf72d2 ; mov eax, 1 ; syscall
0x00000000000f78e5 : add byte ptr [rax], al ; jne 0xf7902 ; mov eax, 3 ; syscall
0x00000000000f7a35 : add byte ptr [rax], al ; jne 0xf7a52 ; mov eax, 0x55 ; syscall
0x00000000000fb725 : add byte ptr [rax], al ; jne 0xfb742 ; mov eax, 7 ; syscall
0x00000000000fcf75 : add byte ptr [rax], al ; jne 0xfcf92 ; mov eax, 0x13 ; syscall
0x00000000000fcfd5 : add byte ptr [rax], al ; jne 0xfcff2 ; mov eax, 0x14 ; syscall
0x00000000000fd765 : add byte ptr [rax], al ; jne 0xfd782 ; mov eax, 0x4a ; syscall
0x00000000000fd7f5 : add byte ptr [rax], al ; jne 0xfd812 ; mov eax, 0x4b ; syscall
0x000000000019cccf : add byte ptr [rax], al ; jno 0x19ccd4 ; jmp qword ptr [rdi]
0x000000000019c1fe : add byte ptr [rax], al ; jnp 0x19c205 ; jmp qword ptr [rdx]
0x00000000001bcb0e : add byte ptr [rax], al ; jnp 0x1bcb1b ; add byte ptr [rax], al ; retf
0x00000000001a5f0e : add byte ptr [rax], al ; jo 0x1a5f40 ; out dx, al ; jmp qword ptr [rdi]
0x00000000001b0aff : add byte ptr [rax], al ; jo 0x1b0afc ; jmp qword ptr [rcx]
0x00000000001b2b82 : add byte ptr [rax], al ; jo 0x1b2b91 ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000019c336 : add byte ptr [rax], al ; js 0x19c328 ; call qword ptr [rax]
0x000000000019c34e : add byte ptr [rax], al ; js 0x19c340 ; jmp qword ptr [rcx]
0x000000000019d9d6 : add byte ptr [rax], al ; js 0x19da2a ; jmp 0x1b9ce4
0x00000000001a6676 : add byte ptr [rax], al ; js 0x1a66ef ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6af6 : add byte ptr [rax], al ; js 0x1a6afe ; stc ; call qword ptr [rax]
0x00000000000cdbf5 : add byte ptr [rax], al ; js 0xcdc05 ; ret
0x0000000000019c76 : add byte ptr [rax], al ; lahf ; retf
0x00000000001bc714 : add byte ptr [rax], al ; lea eax, [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc6bc : add byte ptr [rax], al ; lea ecx, [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x000000000012cb81 : add byte ptr [rax], al ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf68 : add byte ptr [rax], al ; lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x0000000000170b6e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000170b7e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000170b8e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000170b9e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000170bae : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000170acd : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000170aee : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000170afe : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000170b0e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000170b1e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000170b2e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000170b3e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000170a7a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000170b4e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000170b5e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000ac43b : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000ac59e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000ac5be : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000ac5ae : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x0000000000170ade : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000002092e : add byte ptr [rax], al ; lea rax, [rip + 0x16bd34] ; ret
0x000000000002093e : add byte ptr [rax], al ; lea rax, [rip + 0x16dc63] ; ret
0x000000000012b0ee : add byte ptr [rax], al ; lea rax, [rip + 0x61a2e] ; ret
0x000000000012070e : add byte ptr [rax], al ; lea rdi, [rip + 0x2a7fe5] ; call rax
0x00000000000450dc : add byte ptr [rax], al ; lea rsi, [rip + 0x1cb] ; call rax
0x000000000006f217 : add byte ptr [rax], al ; lea rsi, [rip + 0x30] ; call rax
0x000000000007bf07 : add byte ptr [rax], al ; lea rsi, [rip - 0x15e0] ; call rax
0x000000000007c2f7 : add byte ptr [rax], al ; lea rsi, [rip - 0x19d0] ; call rax
0x000000000007c747 : add byte ptr [rax], al ; lea rsi, [rip - 0x1e20] ; call rax
0x000000000006f510 : add byte ptr [rax], al ; lea rsi, [rip - 0x2c9] ; call rax
0x000000000007ac37 : add byte ptr [rax], al ; lea rsi, [rip - 0x310] ; call rax
0x000000000007aea7 : add byte ptr [rax], al ; lea rsi, [rip - 0x580] ; call rax
0x00000000001b0ae2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0065
0x00000000001a6be2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b0fe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fe9 ; jmp qword ptr [rbx]
0x00000000001a7de2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001b86e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x000000000001914e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 0x18
0x0000000000019ca6 : add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; retf
0x00000000001bc6c8 : add byte ptr [rax], al ; loopne 0x1bc6db ; ret 0xb
0x00000000001bc720 : add byte ptr [rax], al ; loopne 0x1bc732 ; ret 0xa
0x00000000001acdea : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; add dl, bl ; jmp qword ptr [rcx]
0x000000000019d4ea : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001ad7ea : add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; nop ; xchg esp, esi ; call qword ptr [rax]
0x00000000001aebea : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001af9ea : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ea : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b3bea : add byte ptr [rax], al ; mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000019762e : add byte ptr [rax], al ; mov ah, 0x94 ; in eax, dx ; jmp rsp
0x00000000001977ce : add byte ptr [rax], al ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000001a994e : add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000001a531e : add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a4d7e : add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000016afee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000166cbe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000108f32 : add byte ptr [rax], al ; mov byte ptr [rbp - 0x689], 0x73 ; syscall
0x0000000000168c8e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d590e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9be : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a732e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000a5d2e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfe : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000072b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168cce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168cde : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168cbe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f6e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009e9ee : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a6d3e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d4e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d2e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000055765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012d97e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012d96e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000012d99e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012d98e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f67f4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c9dd0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a5d3e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fcf3e : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000f6ffe : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x00000000000f8abe : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x00000000000f89fe : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x00000000000fb7b4 : add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x0000000000107669 : add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x000000000010797e : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x00000000000f799e : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x00000000000f79fe : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x0000000000107afe : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x0000000000107f1e : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x00000000001078be : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x00000000000fd84e : add byte ptr [rax], al ; mov eax, 0x132 ; syscall
0x0000000000107fde : add byte ptr [rax], al ; mov eax, 0x134 ; syscall
0x00000000000f730e : add byte ptr [rax], al ; mov eax, 0x15 ; syscall
0x000000000008779e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000f79ce : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x00000000000ea81e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000010182e : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x00000000001017fe : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x0000000000108d5e : add byte ptr [rax], al ; mov eax, 0x1d ; syscall
0x0000000000108d8e : add byte ptr [rax], al ; mov eax, 0x1f ; syscall
0x00000000000f793e : add byte ptr [rax], al ; mov eax, 0x20 ; syscall
0x00000000000f796e : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000000cc1fe : add byte ptr [rax], al ; mov eax, 0x25 ; syscall
0x00000000000bf62e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000010859e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000001080ee : add byte ptr [rax], al ; mov eax, 0x31 ; syscall
0x00000000001081ae : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x000000000010817e : add byte ptr [rax], al ; mov eax, 0x34 ; syscall
0x00000000000cc6db : add byte ptr [rax], al ; mov eax, 0x3a ; syscall
0x00000000000cc76e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000cbf2e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x0000000000108c6e : add byte ptr [rax], al ; mov eax, 0x40 ; syscall
0x0000000000108c3e : add byte ptr [rax], al ; mov eax, 0x41 ; syscall
0x0000000000108d2e : add byte ptr [rax], al ; mov eax, 0x43 ; syscall
0x0000000000108c0e : add byte ptr [rax], al ; mov eax, 0x47 ; syscall
0x00000000000f779e : add byte ptr [rax], al ; mov eax, 0x49 ; syscall
0x00000000000ff19e : add byte ptr [rax], al ; mov eax, 0x4d ; syscall
0x00000000000f7a8e : add byte ptr [rax], al ; mov eax, 0x50 ; syscall
0x00000000000f7abe : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x00000000000f8aee : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x00000000000f896e : add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000f8a2e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x00000000000f6ede : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000f6f0e : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x00000000000f832e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x00000000000f835e : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000bc42e : add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000fc95e : add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x00000000000fc9be : add byte ptr [rax], al ; mov eax, 0x62 ; syscall
0x00000000000cbf5e : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000cd23e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x0000000000107b5e : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000cd25e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000cd24e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000cd26e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000cd44e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000cd47e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000cd4de : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000cd27e : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000cd50e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000cd53e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x00000000001074de : add byte ptr [rax], al ; mov eax, 0x7a ; syscall
0x000000000010750e : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000cd4ae : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x000000000010785e : add byte ptr [rax], al ; mov eax, 0x7d ; syscall
0x000000000010788e : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x00000000000cd959 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x0000000000035793 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x00000000000357dd : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x0000000000107dfe : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x00000000000f6e0e : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x00000000000ea75e : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000ea78e : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x00000000000ea7be : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x00000000000ea7ee : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x00000000000ea84e : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x00000000000ea87e : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x00000000000ea8ae : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x00000000001018be : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x00000000001018ee : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x000000000010191e : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x00000000001077be : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x0000000000107c1e : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x000000000010778e : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000010176e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000000fc98e : add byte ptr [rax], al ; mov eax, 0xa0 ; syscall
0x00000000000fd72e : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000fd7be : add byte ptr [rax], al ; mov eax, 0xa2 ; syscall
0x00000000000fd6fe : add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000bc50e : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x000000000010747e : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000fdbee : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000000fdc1e : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x00000000000fd4ce : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000fd56e : add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x000000000010730e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x00000000001078ee : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x000000000010791e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x00000000001074ae : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x000000000010615e : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x000000000010603e : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x00000000000bc36e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall
0x00000000001150c0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000010794e : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x0000000000047b18 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000001077ee : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000ce07d : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000cda1e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000107ace : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x0000000000107b2e : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x000000000011958a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003548c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012b04e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001094d7 : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000012e09e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000002c0ae : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000010743e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000016e3de : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012d8cc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013c15e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d723e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f5f5e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007742e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000773fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000007302e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003687e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38d802] ; ret
0x000000000006f7d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000cd219 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000002122c : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010cfbb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000054e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000218a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000116a0f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116be8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000071035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000013302a : add byte ptr [rax], al ; mov ebp, eax ; call 0x12f306
0x00000000001b90c2 : add byte ptr [rax], al ; mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x00000000000a5d6e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000045b1e : add byte ptr [rax], al ; mov edx, 3 ; jmp 0x45afa
0x000000000015b0fe : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a5d5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00000000000711f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x0000000000071386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x0000000000075be1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x0000000000076531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x0000000000075511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000115176 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000142066 : add byte ptr [rax], al ; mov esi, 0x80002 ; mov eax, ecx ; syscall
0x0000000000103694 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000000c8125 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000000fcd13 : add byte ptr [rax], al ; mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000001b11f2 : add byte ptr [rax], al ; mov esp, 0x38000156 ; jnp 0x1b11f9 ; jmp qword ptr [rcx]
0x00000000001a3df2 : add byte ptr [rax], al ; mov esp, 0x68000082 ; in eax, dx ; call qword ptr [rax]
0x00000000001aedf2 : add byte ptr [rax], al ; mov esp, 0x78000132 ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001adef2 : add byte ptr [rax], al ; mov esp, 0x8000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1f2 : add byte ptr [rax], al ; mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001b09f2 : add byte ptr [rax], al ; mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56f2 : add byte ptr [rax], al ; mov esp, 0xc800019b ; ret
0x00000000001aa2f2 : add byte ptr [rax], al ; mov esp, 0xd80000e7 ; out dx, al ; int1 ; jmp rcx
0x00000000001b2af2 : add byte ptr [rax], al ; mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000004d64b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000114700 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001435f3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001435ab : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014381e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000896d0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168d0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168d2e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d3e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d4e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d5e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d6e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d7e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168d1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168cfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000094cce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013c51a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6d9e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6dae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dbe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d8e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a6d6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000762dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000013232b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012d90c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f5e8c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d8dc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011935e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x000000000010e813 : add byte ptr [rax], al ; mov qword ptr [rsp], r8 ; call 0x7b228
0x000000000003a5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013826b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001335b1 : add byte ptr [rax], al ; mov r13d, esi ; call 0x1f8a7
0x00000000000353e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000354ae : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000000abf6e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000abf7e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000abf8e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000abf9e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000abfae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000abfbe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000abfce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000746b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000001149d6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000106266 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000003a720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c884e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140f21 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2844e6] ; call qword ptr [rax]
0x000000000014090e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284af9] ; call qword ptr [rax]
0x000000000007cb0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000021a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x00000000000fde4d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007df34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006dc05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103156 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006abcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007cb3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014109a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000084ba4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000001335be : add byte ptr [rax], al ; mov rbx, rax ; call 0x1f8a7
0x00000000000452bc : add byte ptr [rax], al ; mov rbx, rdi ; syscall
0x00000000000ec324 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x000000000002bff5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000072fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x0000000000143696 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8b1
0x00000000000fecfe : add byte ptr [rax], al ; mov rdi, r12 ; call 0x8b727
0x0000000000103886 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f6d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000103752 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001036ca : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000654fe : add byte ptr [rax], al ; mov rdi, r15 ; call 0x71fd7
0x00000000001036bb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105edd : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, r12d ; syscall
0x00000000000230ae : add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b7
0x000000000012e34b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000103b10 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000137385 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006cb46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000088103 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x00000000000cc72e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000f643f : add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x000000000013a97e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a5d9e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000087bf0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000d9809 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd981e
0x000000000006847e : add byte ptr [rax], al ; mov rdx, r9 ; jmp 0x6842d
0x000000000007d9c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x00000000000fba4d : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000005be56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368767] ; call rax
0x0000000000050048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000088cfe : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087e60 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000879d2 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000141eab : add byte ptr [rax], al ; mov rsi, r15 ; mov eax, r10d ; syscall
0x0000000000141d9a : add byte ptr [rax], al ; mov rsi, r15 ; mov eax, r13d ; syscall
0x0000000000088b74 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000003691e : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000019cfc2 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001ac6c2 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add dword ptr [rax], eax ; cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001acec2 : add byte ptr [rax], al ; mov word ptr [rbx], ss ; add dword ptr [rax], eax ; call 0x181ac2b0
0x00000000001b0cc2 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000168cae : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c9e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001b2ac2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000a6d0e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009ea5e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, [rdi + 1] ; ret
0x000000000009e9ce : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003b2dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000e0d0e : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0cf8
0x00000000000a6dde : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001b09da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001a9ada : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rax] ; add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x0000000000197eae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x000000000019697e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196971 ; jmp rsp
0x0000000000196aae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa1 ; jmp rsp
0x00000000001aabda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001979e6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x00000000001b11da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001a86da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001016fd : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000006c94a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000047c8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x00000000000d7579 : add byte ptr [rax], al ; movsxd rcx, edx ; jmp 0xd758b
0x0000000000078947 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000035421 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x00000000000355a5 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000007a61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b28e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b96e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b8fe : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001aac6e : add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001a73ce : add byte ptr [rax], al ; nop ; add edi, ebp ; jmp rsi
0x00000000001a697e : add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a69ae : add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x0000000000107eec : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x0000000000108cfc : add byte ptr [rax], al ; nop ; mov eax, 0x1e ; syscall
0x000000000010856c : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x000000000010820c : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x00000000000f8a8c : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x00000000000f89cc : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x000000000010775c : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x00000000000f6ddc : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x000000000010188c : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x00000000000fdbbc : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x000000000010782c : add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x0000000000107bec : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x00000000001060cc : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x000000000010612c : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x000000000010600c : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x00000000001061bc : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x0000000000107a9c : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000011939d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019d57e : add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rcx]
0x000000000002058d : add byte ptr [rax], al ; nop ; ret
0x000000000013bd69 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000013376a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c31b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000019d442 : add byte ptr [rax], al ; or al, 0x19 ; add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x00000000001aea42 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000001a4442 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000001a6442 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00000000001a8242 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; call 0x281a729c
0x00000000001a9a42 : add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001ab142 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001bbf42 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000000bc335 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4c ; shr cl, 1 ; retf 0xfffb
0x00000000001416ae : add byte ptr [rax], al ; or byte ptr [rax], al ; mov eax, 2 ; syscall
0x000000000019d4ee : add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d54e : add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000035d62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000000fc5f8 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000001aa106 : add byte ptr [rax], al ; or cl, ch ; int1 ; jmp qword ptr [rdi]
0x0000000000107554 : add byte ptr [rax], al ; or eax, edi ; ret
0x000000000019d42e : add byte ptr [rax], al ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d446 : add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x00000000001bd206 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x0000000000034e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001a6b26 : add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6726 : add byte ptr [rax], al ; pop rax ; jae 0x1a671e ; jmp qword ptr [rdx]
0x000000000019e566 : add byte ptr [rax], al ; pop rax ; jl 0x19e559 ; jmp qword ptr [rsi]
0x000000000019d476 : add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6e26 : add byte ptr [rax], al ; pop rax ; out 0xee, al ; call qword ptr [rax]
0x000000000019cfc6 : add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000107417 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001a1446 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000054ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010962a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a167a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x00000000000aac3a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047a0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d95 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000052c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006fc80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000cd417 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029daa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000943e4 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000019432e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000019be6 : add byte ptr [rax], al ; pop rcx ; retf
0x0000000000197cee : add byte ptr [rax], al ; pop rsi ; out dx, al ; jmp rsp
0x00000000001a3c92 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000001b9592 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001b1192 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a8692 : add byte ptr [rax], al ; pop rsp ; retf
0x0000000000018fce : add byte ptr [rax], al ; pop rsp ; retf 0x18
0x000000000019e592 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58d ; jmp rsp
0x00000000001aef92 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000001911e : add byte ptr [rax], al ; popfq ; retf 0x18
0x00000000001aabde : add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000019bbee : add byte ptr [rax], al ; push rax ; call 0x1b86fc
0x000000000019d45e : add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a63fe : add byte ptr [rax], al ; push rax ; out dx, al ; call qword ptr [rax]
0x00000000001946b4 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000018fb6 : add byte ptr [rax], al ; push rbp ; retf 0x18
0x00000000001159ce : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b0c7a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b078a : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000019684e : add byte ptr [rax], al ; push rsp ; and ecx, ebp ; call rsp
0x00000000001af44f : add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001bb8ef : add byte ptr [rax], al ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bb58a : add byte ptr [rax], al ; push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a248a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x00000000001a2c8a : add byte ptr [rax], al ; push rsp ; jno 0x1a2c98 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x0000000000196b96 : add byte ptr [rax], al ; push rsp ; loope 0x196b89 ; call rsp
0x00000000001a758a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001b298a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b8a : add byte ptr [rax], al ; push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b91 ; jmp qword ptr [rcx]
0x0000000000196b4e : add byte ptr [rax], al ; push rsp ; retf 0xffe9
0x00000000001acdd2 : add byte ptr [rax], al ; pushfq ; adc al, byte ptr [rcx] ; add al, ch ; fpatan ; jmp qword ptr [rcx]
0x00000000001b3bd2 : add byte ptr [rax], al ; pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001af9d2 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b95d2 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b5fd2 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001a7ed2 : add byte ptr [rax], al ; pushfq ; ret
0x00000000001b85d2 : add byte ptr [rax], al ; pushfq ; retf 1
0x0000000000000977 : add byte ptr [rax], al ; ret
0x00000000001765e6 : add byte ptr [rax], al ; ret 0
0x000000000017d55e : add byte ptr [rax], al ; ret 0x10
0x000000000000bac7 : add byte ptr [rax], al ; ret 0x11
0x000000000000e45e : add byte ptr [rax], al ; ret 0x16
0x000000000001c05e : add byte ptr [rax], al ; ret 0x18c7
0x000000000001a07e : add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b6 : add byte ptr [rax], al ; ret 0x18f8
0x000000000017f22e : add byte ptr [rax], al ; ret 0x1d4
0x000000000017f9c6 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fee : add byte ptr [rax], al ; ret 0x23
0x000000000017e236 : add byte ptr [rax], al ; ret 0x24
0x0000000000005ec6 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8e : add byte ptr [rax], al ; ret 0x30
0x000000000000d7b6 : add byte ptr [rax], al ; ret 0x31
0x000000000017e726 : add byte ptr [rax], al ; ret 0x33
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000b326 : add byte ptr [rax], al ; ret 0x4f
0x0000000000008656 : add byte ptr [rax], al ; ret 0x53
0x000000000000b536 : add byte ptr [rax], al ; ret 0x56
0x000000000017cd5e : add byte ptr [rax], al ; ret 0xa
0x000000000000bbcf : add byte ptr [rax], al ; ret 0xc
0x000000000017d15e : add byte ptr [rax], al ; ret 0xd
0x0000000000005917 : add byte ptr [rax], al ; ret 0xf
0x000000000001f6ba : add byte ptr [rax], al ; ret 1
0x0000000000180802 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000007606 : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x000000000000dd9e : add byte ptr [rax], al ; ret 6
0x0000000000181202 : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x0000000000181602 : add byte ptr [rax], al ; ret 9
0x000000000000101e : add byte ptr [rax], al ; retf
0x0000000000176606 : add byte ptr [rax], al ; retf 0
0x0000000000007fde : add byte ptr [rax], al ; retf 0x10
0x000000000000c02e : add byte ptr [rax], al ; retf 0x11
0x0000000000005ef6 : add byte ptr [rax], al ; retf 0x18
0x000000000017f266 : add byte ptr [rax], al ; retf 0x1d4
0x000000000017fa06 : add byte ptr [rax], al ; retf 0x1d5
0x000000000017e276 : add byte ptr [rax], al ; retf 0x24
0x00000000000091c6 : add byte ptr [rax], al ; retf 0x2c
0x000000000017e766 : add byte ptr [rax], al ; retf 0x33
0x00000000001826a7 : add byte ptr [rax], al ; retf 0x3b9a
0x0000000000009a66 : add byte ptr [rax], al ; retf 0x3f
0x000000000000b0fe : add byte ptr [rax], al ; retf 0x44
0x000000000019436e : add byte ptr [rax], al ; retf 0x49f2
0x00000000001bc709 : add byte ptr [rax], al ; retf 0x503
0x0000000000009c8e : add byte ptr [rax], al ; retf 0x55
0x000000000017cebe : add byte ptr [rax], al ; retf 0xb
0x000000000000c83e : add byte ptr [rax], al ; retf 0xc
0x000000000017d2be : add byte ptr [rax], al ; retf 0xe
0x00000000001ae51f : add byte ptr [rax], al ; retf 0xfff4
0x000000000001041e : add byte ptr [rax], al ; retf 1
0x0000000000180812 : add byte ptr [rax], al ; retf 2
0x00000000000011da : add byte ptr [rax], al ; retf 3
0x000000000017c766 : add byte ptr [rax], al ; retf 4
0x0000000000180e12 : add byte ptr [rax], al ; retf 5
0x000000000000eeae : add byte ptr [rax], al ; retf 6
0x0000000000181212 : add byte ptr [rax], al ; retf 7
0x0000000000181412 : add byte ptr [rax], al ; retf 8
0x0000000000181612 : add byte ptr [rax], al ; retf 9
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x0000000000180bfe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a7c7a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x00000000001a167e : add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x000000000017d006 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000001a647e : add byte ptr [rax], al ; ror byte ptr [rsi - 0x12], 1 ; call qword ptr [rdx]
0x00000000001a49ae : add byte ptr [rax], al ; sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000001a794e : add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x00000000001b0a52 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d52 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e52 : add byte ptr [rax], al ; sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b52 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b247e
0x00000000001b6652 : add byte ptr [rax], al ; sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d95
0x00000000001a7d52 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x000000000019d382 : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x000000000019dbb6 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x000000000019e406 : add byte ptr [rax], al ; sbb byte ptr [rdx - 0x17], bh ; jmp qword ptr [rcx]
0x00000000001a6d06 : add byte ptr [rax], al ; sbb ch, bl ; out dx, al ; jmp qword ptr [rsi]
0x000000000006bcfe : add byte ptr [rax], al ; sbb rdx, 3 ; sub rdx, r12 ; syscall
0x00000000001a697a : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a946e : add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x00000000000f5df6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000194e10 : add byte ptr [rax], al ; sti ; call rax
0x00000000001b8696 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; retf
0x000000000019e562 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; jl 0x19e55d ; jmp qword ptr [rsi]
0x00000000001b0962 : add byte ptr [rax], al ; sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1162 : add byte ptr [rax], al ; sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a62 : add byte ptr [rax], al ; sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019bc62 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; call 0x1119a4c2
0x00000000001bc062 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x00000000001aa586 : add byte ptr [rax], al ; sub cl, bh ; int1 ; call rsi
0x000000000016f19c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000fcd30 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000034efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000762ed : add byte ptr [rax], al ; sub qword ptr [rbx + 0x28], 1 ; jmp 0x762c9
0x000000000007c016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000008b341 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000d963f : add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd95e3
0x00000000001413a7 : add byte ptr [rax], al ; sub rsp, 0x178 ; syscall
0x00000000000fc68f : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000000052c6 : add byte ptr [rax], al ; syscall
0x0000000000197926 : add byte ptr [rax], al ; test ah, dh ; in eax, dx ; dec esp ; retf 0
0x00000000001a6382 : add byte ptr [rax], al ; test al, 0 ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a3726 : add byte ptr [rax], al ; test al, 0x3c ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3c96 : add byte ptr [rax], al ; test al, 0x46 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001bcc0e : add byte ptr [rax], al ; test al, 3 ; add byte ptr [rax], al ; retf
0x00000000001bdf52 : add byte ptr [rax], al ; test al, 8 ; add byte ptr [rax], al ; retf
0x00000000001af3ba : add byte ptr [rax], al ; test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af3c8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a58ba : add byte ptr [rax], al ; test byte ptr [rbp + 0x1400000], bl ; out dx, al ; call qword ptr [rsi]
0x00000000001b05ba : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001acdba : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add dword ptr [rax], eax ; rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000001af9ba : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a4caf : add byte ptr [rax], al ; test ch, ch ; call qword ptr [rdx]
0x00000000001a647a : add byte ptr [rax], al ; test eax, 0x4ed00000 ; out dx, al ; call qword ptr [rdx]
0x000000000012d82f : add byte ptr [rax], al ; test eax, eax ; je 0x12d848 ; xor eax, eax ; ret
0x00000000000aebd3 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebf1
0x00000000000b14f4 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb1511
0x00000000000b3cab : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3cd1
0x000000000006b456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00000000001ab282 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd40800 ; jmp rcx
0x000000000011586d : add byte ptr [rax], al ; test rax, rax ; je 0x1158a7 ; call rax
0x0000000000138f22 : add byte ptr [rax], al ; test rax, rax ; jne 0x138f18 ; pop rbx ; ret
0x0000000000019106 : add byte ptr [rax], al ; xchg eax, ebp ; retf 0x18
0x0000000000019c5e : add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000000190ee : add byte ptr [rax], al ; xchg eax, ecx ; retf 0x18
0x00000000001bb17f : add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001a4d7a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x0000000000196682 : add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x000000000019ccca : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19ccd9 ; jmp qword ptr [rdi]
0x00000000001b0aca : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000019693e : add byte ptr [rax], al ; xchg eax, esp ; jae 0x196931 ; jmp rsp
0x00000000001a73ca : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1900000 ; out dx, eax ; jmp rsi
0x00000000001b0dca : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e4e ; cmc ; jmp qword ptr [rcx]
0x00000000001a7dca : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001b86ca : add byte ptr [rax], al ; xchg eax, esp ; retf
0x0000000000197726 : add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001b872e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; retf
0x000000000019f26a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000001b716a : add byte ptr [rax], al ; xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001a946a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x00000000001aac6a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001a931e : add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x00000000000fc3ca : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001a2c8e : add byte ptr [rax], al ; xor byte ptr [rdx], bl ; in eax, dx ; call rdx
0x00000000001a622e : add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000000a9bae : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000011eae6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143e06 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bb80c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012e13e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0f6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003a26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c80c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039ee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039f06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x000000000003afbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000002089e : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000036a7e : add byte ptr [rax], al ; xor edx, edx ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000004d39b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000cdfac : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000030a07 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000103606 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000010362b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010364f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010366f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001157ef : add byte ptr [rax], al ; xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000001aee82 : add byte ptr [rax], al ; xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000029a70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008eadd : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001b0c07 : add byte ptr [rax], bh ; jno 0x1b0c04 ; jmp qword ptr [rcx]
0x00000000001b11f7 : add byte ptr [rax], bh ; jnp 0x1b11f4 ; jmp qword ptr [rcx]
0x00000000001aec07 : add byte ptr [rax], bh ; jrcxz 0x1aec03 ; jmp qword ptr [rcx]
0x00000000001a6c17 : add byte ptr [rax], bh ; mov cl, 0xee ; call qword ptr [rax]
0x00000000001ae147 : add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x000000000019d417 : add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rdx]
0x000000000019d387 : add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x00000000001a6447 : add byte ptr [rax], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001bb927 : add byte ptr [rax], bh ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001af867 : add byte ptr [rax], bh ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001b2c47 : add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a6d07 : add byte ptr [rax], bl ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001b0d57 : add byte ptr [rax], bl ; jae 0x1b0d54 ; call qword ptr [rsi]
0x00000000001b0b17 : add byte ptr [rax], bl ; jo 0x1b0b14 ; jmp qword ptr [rcx]
0x000000000019e407 : add byte ptr [rax], bl ; jp 0x19e3f8 ; jmp qword ptr [rcx]
0x00000000001a7ba7 : add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x0000000000018ec7 : add byte ptr [rax], bl ; retf 0x18
0x0000000000194e7c : add byte ptr [rax], bl ; sti ; push rax ; sbb bl, bh ; jmp rax
0x00000000001b1447 : add byte ptr [rax], bl ; xchg ebp, esi ; jmp rax
0x00000000001b2a37 : add byte ptr [rax], ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b9597 : add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001aef97 : add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0837 : add byte ptr [rax], ch ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001aeb37 : add byte ptr [rax], ch ; loop 0x1aeb33 ; jmp qword ptr [rcx]
0x00000000001a7cc7 : add byte ptr [rax], ch ; or esi, eax ; jmp rbx
0x00000000001aeda7 : add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001b0937 : add byte ptr [rax], ch ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a57 : add byte ptr [rax], ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000019887 : add byte ptr [rax], ch ; retf
0x0000000000018f27 : add byte ptr [rax], ch ; retf 0x18
0x00000000001aa587 : add byte ptr [rax], ch ; stc ; int1 ; call rsi
0x00000000001416af : add byte ptr [rax], cl ; add byte ptr [rax + 2], bh ; syscall
0x0000000000094424 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94431 ; ret
0x000000000007a0e2 : add byte ptr [rax], cl ; add byte ptr [rbx - 0x16bf8bb1], al ; retf 0xfffb
0x000000000002c1ea : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 9], cl ; mov eax, r15d ; syscall
0x00000000001af517 : add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001b0807 : add byte ptr [rax], cl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000002dd74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001a6be7 : add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b21d7 : add byte ptr [rax], cl ; ret 0xfff5
0x00000000000189cf : add byte ptr [rax], cl ; retf 0x18
0x00000000001ae1f7 : add byte ptr [rax], cl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adef7 : add byte ptr [rax], cl ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001a9227 : add byte ptr [rax], cl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001a931f : add byte ptr [rax], dh ; and al, 0xf1 ; jmp rcx
0x00000000001b2c5f : add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019f9ef : add byte ptr [rax], dh ; cli ; jmp qword ptr [rcx]
0x00000000001aea2f : add byte ptr [rax], dh ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000000a9baf : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b0b2f : add byte ptr [rax], dh ; jo 0x1b0b2c ; jmp qword ptr [rcx]
0x00000000001aebef : add byte ptr [rax], dh ; jrcxz 0x1aebeb ; call qword ptr [rsi]
0x000000000001be1f : add byte ptr [rax], dh ; ret
0x000000000000ea7f : add byte ptr [rax], dh ; ret 0xc
0x000000000000f49f : add byte ptr [rax], dh ; retf
0x00000000001a2c8f : add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x00000000001ada0f : add byte ptr [rax], dh ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001a622f : add byte ptr [rax], dh ; xor al, 0xee ; jmp qword ptr [rcx]
0x0000000000004cb7 : add byte ptr [rax], dl ; adc dl, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000006c05 : add byte ptr [rax], dl ; add al, al ; retf
0x0000000000044f70 : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x0000000000115730 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ad25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ad33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001b2a1f : add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ae80f : add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001af22f : add byte ptr [rax], dl ; hlt ; hlt ; jmp qword ptr [rsi]
0x000000000000f6af : add byte ptr [rax], dl ; imul ecx, dword ptr [rcx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001b06ff : add byte ptr [rax], dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c7f : add byte ptr [rax], dl ; jb 0x1b0c7c ; jmp qword ptr [rcx]
0x00000000001b0dff : add byte ptr [rax], dl ; je 0x1b0dfc ; jmp qword ptr [rcx]
0x000000000002de54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001b0a3f : add byte ptr [rax], dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b05bf : add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000008d37 : add byte ptr [rax], dl ; ret
0x000000000000523f : add byte ptr [rax], dl ; retf
0x0000000000018e97 : add byte ptr [rax], dl ; retf 0x18
0x00000000001adaff : add byte ptr [rax], dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a94ff : add byte ptr [rax], dl ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001ae518 : add byte ptr [rax], r8b ; add ah, ah ; sub dword ptr [rcx], eax ; add byte ptr [rax], al ; retf 0xfff4
0x00000000001acc28 : add byte ptr [rax], r8b ; add ah, dh ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001abb08 : add byte ptr [rax], r8b ; add ah, dl ; inc dword ptr [rax] ; add al, ah ; ret
0x0000000000032dcd : add byte ptr [rax], r8b ; add rdi, 4 ; call 0x1f8a9
0x0000000000074696 : add byte ptr [rax], r8b ; cmp eax, -1 ; jne 0x746a9 ; pop rbx ; ret
0x00000000000350d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000d590d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9bd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009e9ed : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000f6ffd : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x00000000000f8abd : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x00000000000f89fd : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x000000000010797d : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x00000000000f799d : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x00000000000f79fd : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x0000000000107afd : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x0000000000107f1d : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x00000000001078bd : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x00000000000fd84d : add byte ptr [rax], r8b ; mov eax, 0x132 ; syscall
0x0000000000107fdd : add byte ptr [rax], r8b ; mov eax, 0x134 ; syscall
0x00000000000f730d : add byte ptr [rax], r8b ; mov eax, 0x15 ; syscall
0x000000000008779d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000f79cd : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x00000000000ea81d : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x000000000010182d : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x00000000001017fd : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x0000000000108d5d : add byte ptr [rax], r8b ; mov eax, 0x1d ; syscall
0x0000000000108d8d : add byte ptr [rax], r8b ; mov eax, 0x1f ; syscall
0x00000000000f793d : add byte ptr [rax], r8b ; mov eax, 0x20 ; syscall
0x00000000000f796d : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000bf62d : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x000000000010859d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x00000000001080ed : add byte ptr [rax], r8b ; mov eax, 0x31 ; syscall
0x00000000001081ad : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x000000000010817d : add byte ptr [rax], r8b ; mov eax, 0x34 ; syscall
0x0000000000108c6d : add byte ptr [rax], r8b ; mov eax, 0x40 ; syscall
0x0000000000108c3d : add byte ptr [rax], r8b ; mov eax, 0x41 ; syscall
0x0000000000108d2d : add byte ptr [rax], r8b ; mov eax, 0x43 ; syscall
0x0000000000108c0d : add byte ptr [rax], r8b ; mov eax, 0x47 ; syscall
0x00000000000f779d : add byte ptr [rax], r8b ; mov eax, 0x49 ; syscall
0x00000000000ff19d : add byte ptr [rax], r8b ; mov eax, 0x4d ; syscall
0x00000000000f7a8d : add byte ptr [rax], r8b ; mov eax, 0x50 ; syscall
0x00000000000f7abd : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x00000000000f8aed : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x00000000000f8a2d : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x00000000000f6f0d : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x00000000000f832d : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x00000000000f835d : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000fc9bd : add byte ptr [rax], r8b ; mov eax, 0x62 ; syscall
0x00000000000cbf5d : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x0000000000107b5d : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000cd44d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000cd47d : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000cd4dd : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000cd50d : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000cd53d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x00000000001074dd : add byte ptr [rax], r8b ; mov eax, 0x7a ; syscall
0x000000000010750d : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x000000000010785d : add byte ptr [rax], r8b ; mov eax, 0x7d ; syscall
0x000000000010788d : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x0000000000107dfd : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x00000000000f6e0d : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x00000000000ea78d : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x00000000000ea7bd : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x00000000000ea7ed : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x00000000000ea84d : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x00000000000ea87d : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x00000000000ea8ad : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x00000000001018bd : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x00000000001018ed : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x000000000010191d : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x00000000001077bd : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x0000000000107c1d : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x000000000010778d : add byte ptr [rax], r8b ; mov eax, 0x9e ; syscall
0x000000000010176d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000000fc98d : add byte ptr [rax], r8b ; mov eax, 0xa0 ; syscall
0x00000000000fd72d : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x00000000000fd7bd : add byte ptr [rax], r8b ; mov eax, 0xa2 ; syscall
0x00000000000fdbed : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000000fdc1d : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x000000000010730d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x00000000001078ed : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x000000000010791d : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x00000000001074ad : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x000000000010615d : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x000000000010603d : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x00000000000bc36d : add byte ptr [rax], r8b ; mov eax, 0xc9 ; syscall
0x000000000010794d : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x00000000001077ed : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x0000000000107acd : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x0000000000107b2d : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x00000000000886ad : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cea35 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000138f2d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007302d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000070155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000a5d5d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x0000000000094ccd : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000011935d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001149d5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106265 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a6fcd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a5d9d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000006847d : add byte ptr [rax], r8b ; mov rdx, r9 ; jmp 0x6842e
0x000000000012c58d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000045a35 : add byte ptr [rax], r8b ; ret
0x0000000000143e05 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003a7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039f05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000abc6d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000f7256 : add byte ptr [rbp + 0x10], dh ; mov eax, 0 ; syscall
0x00000000000fcf76 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x13 ; syscall
0x0000000000107f86 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x130 ; syscall
0x00000000000fcfd6 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x14 ; syscall
0x00000000001017a6 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x1a ; syscall
0x00000000000cc286 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x22 ; syscall
0x00000000000cc2e6 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x23 ; syscall
0x0000000000108126 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x2a ; syscall
0x0000000000108096 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x2b ; syscall
0x0000000000108486 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x2e ; syscall
0x0000000000108366 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x2f ; syscall
0x00000000000fd766 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x4a ; syscall
0x00000000000fd7f6 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x4b ; syscall
0x00000000000f7a36 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x55 ; syscall
0x00000000000f72b6 : add byte ptr [rbp + 0x10], dh ; mov eax, 1 ; syscall
0x00000000000f7036 : add byte ptr [rbp + 0x10], dh ; mov eax, 2 ; syscall
0x00000000000f78e6 : add byte ptr [rbp + 0x10], dh ; mov eax, 3 ; syscall
0x00000000000fb726 : add byte ptr [rbp + 0x10], dh ; mov eax, 7 ; syscall
0x0000000000046bdb : add byte ptr [rbp + 0x148ff50], cl ; retf 0xf66
0x00000000001437a7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000004a59f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x000000000014366c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000b9e17 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x0000000000112d2d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000053993 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x000000000010d8b9 : add byte ptr [rbp + 0x31], al ; leave ; call 0x12a396
0x0000000000029a71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f33 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000001159cf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000b9e6b : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000bd46f : add byte ptr [rbp + 0x39440753], cl ; retf 0x8d0f
0x000000000010267a : add byte ptr [rbp + 0x395374c0], al ; ret
0x000000000008167e : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x00000000000817f6 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000003c9c3 : add byte ptr [rbp + 0x39], cl ; retf
0x00000000000ee7fd : add byte ptr [rbp + 0x39ee74f0], al ; retf 0x8e0f
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008d82e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006acbe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000123de3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x00000000000368b7 : add byte ptr [rbp + 0x5890142], cl ; retf
0x00000000000b8600 : add byte ptr [rbp + 0x63], cl ; retf
0x00000000000d956b : add byte ptr [rbp + 0x63], cl ; retf 0xb60f
0x0000000000048aef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000489df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000108fd9 : add byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf 0x34c
0x000000000003a6ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000143734 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001991bf : add byte ptr [rbp + rax - 0xa], dl ; call rsp
0x00000000001a6883 : add byte ptr [rbp + rbp*4], cl ; add al, cl ; jg 0x1a6881 ; call qword ptr [rax]
0x0000000000199487 : add byte ptr [rbp + rbx*2 - 0xa], dh ; call rsp
0x00000000001a58bb : add byte ptr [rbp + rbx*4 + 0x1400000], al ; out dx, al ; call qword ptr [rsi]
0x000000000017d157 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000001974b7 : add byte ptr [rbp + rcx*2 - 0x13], al ; jmp rsp
0x000000000019703f : add byte ptr [rbp + rcx*2 - 0x16], ah ; call rsp
0x00000000000acd2e : add byte ptr [rbp + rcx*4 + 0x25], cl ; retf 0x3154
0x0000000000043e35 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x00000000000751a1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012cb82 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000750be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012cf69 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000004a6b6 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x13b7
0x000000000006d716 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000001bb8eb : add byte ptr [rbp + rdi*8 + 0x54000001], dh ; clc ; call qword ptr [rax]
0x000000000019a2cf : add byte ptr [rbp + rdi*8 - 9], al ; jmp rsp
0x0000000000199f2f : add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000196be7 : add byte ptr [rbp - 0x17], al ; call rsp
0x0000000000174324 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000aebd4 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xaebf0
0x00000000000b14f5 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb1510
0x00000000000b3cac : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3cd0
0x00000000000cdb9f : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x000000000003caf1 : add byte ptr [rbp - 0x36], dh ; jmp 0x3cac8
0x000000000003fde1 : add byte ptr [rbp - 0x36], dh ; jmp 0x3fdb8
0x00000000000cd990 : add byte ptr [rbp - 0x38], dh ; ret
0x000000000017d403 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000cdb02 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00000000000aa8e3 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x0000000000035437 : add byte ptr [rbp - 0x76208037], al ; retf 0xdaf7
0x000000000006c36f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000000bd90f : add byte ptr [rbp - 0x77], al ; retf
0x000000000008bc5d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e396c : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000860f4 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x88 ; retf
0x00000000000c4392 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000039957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cfdcf : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 0x12
0x00000000000b2bac : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 2
0x0000000000024ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x000000000009ee0b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000005beff : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000db235 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5d2f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000012298e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x0000000000047057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000085815 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000035305 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000006b457 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000019ab9f : add byte ptr [rbp - 7], ah ; call rsp
0x000000000019a687 : add byte ptr [rbp - 8], dl ; jmp rsp
0x000000000000c837 : add byte ptr [rbp], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x0000000000146ce9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000130cb9 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x000000000007742f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000aac3b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000074698 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000fd0df : add byte ptr [rbx + 0x2cc65a05], cl ; add byte ptr [rcx - 0x77], cl ; retf 0xc085
0x00000000000fd02f : add byte ptr [rbx + 0x2cc70a05], cl ; add byte ptr [rcx - 0x77], cl ; retf 0xc085
0x00000000000943e5 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000817e7 : add byte ptr [rbx + 0x34333615], cl ; add dh, dh ; ret 0xf02
0x000000000007cba7 : add byte ptr [rbx + 0x349bb505], al ; add byte ptr [rcx], al ; ret
0x0000000000121c34 : add byte ptr [rbx + 0x39142444], cl ; or al, 0x75 ; retf 0x8b41
0x00000000000cd418 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000052c8d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a5d6f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000016b02f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000016e3df : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a818f : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x000000000009ee6c : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000006fc81 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000086837 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000015b0ff : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000d5c20 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x0000000000084ca7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000202e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029dab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077f0f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000a6459 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001ad84b : add byte ptr [rbx + 0x66a00001], dl ; stc ; call qword ptr [rax]
0x00000000000f5f5f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000006e7fe : add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x00000000000773ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000acc18 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000001a5e90 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000000e5cfc : add byte ptr [rbx + 0xf4801e1], al ; ret
0x000000000003a9ff : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001bd09b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001bcb0f : add byte ptr [rbx + 3], bh ; add byte ptr [rax], al ; retf
0x000000000017088a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019b65f : add byte ptr [rbx + rax*8], dl ; cli ; jmp rsp
0x00000000001bd1eb : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; retf
0x000000000019afdf : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019751f : add byte ptr [rbx + rbp*2], al ; in eax, dx ; jmp rsp
0x00000000001a6673 : add byte ptr [rbx + rbp*4], bh ; add byte ptr [rax], al ; js 0x1a66f2 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b6653 : add byte ptr [rbx + rbp*4], bl ; add dword ptr [rax], eax ; call 0xffffffffd21b5d94
0x000000000019a907 : add byte ptr [rbx + rbx*8], ah ; clc ; call rsp
0x000000000010c99a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006fdc2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001ac6c3 : add byte ptr [rbx + rcx - 0x7867ffff], cl ; call qword ptr [rsi]
0x0000000000114a4a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x00000000001b06e3 : add byte ptr [rbx + rcx*2 + 0x6bf80001], ch ; cmc ; jmp qword ptr [rcx]
0x000000000010b8fe : add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x2bbc
0x00000000000c8126 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x000000000003aed7 : add byte ptr [rbx + rcx*4 + 0x49], cl ; or byte ptr [rax - 0x77], cl ; retf
0x000000000004a007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000048427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001972a7 : add byte ptr [rbx + rdi - 0x15], ah ; jmp rsp
0x00000000001b364b : add byte ptr [rbx + rdi*2], dl ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001977af : add byte ptr [rbx + rdi*4 - 0x13], al ; call rsp
0x0000000000196d9f : add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x000000000019afc7 : add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000194e24 : add byte ptr [rbx + rdi*8], al ; call rax
0x00000000001acec3 : add byte ptr [rbx + rdx - 0x2517ffff], cl ; call qword ptr [rdi]
0x000000000019b2df : add byte ptr [rbx + rdx*2], dh ; cli ; call rsp
0x00000000001aee83 : add byte ptr [rbx + rsi + 1], cl ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aeecb : add byte ptr [rbx + rsi - 0x170fffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019b8c7 : add byte ptr [rbx + rsi*2], ah ; sti ; call rsp
0x00000000001baeb3 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x000000000019847f : add byte ptr [rbx + rsi*8 - 0x10], dl ; jmp rsp
0x000000000005a37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000007a0e4 : add byte ptr [rbx - 0x16bf8bb1], al ; retf 0xfffb
0x000000000012c55f : add byte ptr [rbx - 0x18], dl ; retf 0xbc
0x00000000000cd1f7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcd211 ; ret
0x000000000007462f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aacbf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000aacb8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000aacb1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000aacaa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000aaca3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000aac9c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000012ebdf : add byte ptr [rbx - 0x3e7cb7ef], cl ; add al, 0xf ; retf 0x6348
0x0000000000105fcb : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000128776 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x128788 ; ret
0x000000000011518f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1151a9 ; ret
0x00000000001192e7 : add byte ptr [rbx - 0x48], bl ; retf 0
0x000000000005721e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00000000000aa9f9 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000000aa9e4 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000196170 : add byte ptr [rbx - 0x556f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000001adef3 : add byte ptr [rbx - 0x64f7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001adedb : add byte ptr [rbx - 0x650fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001adec3 : add byte ptr [rbx - 0x6527ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000003a724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010f6ad : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000080217 : add byte ptr [rbx - 0x76b3fe1a], al ; retf
0x00000000000b9a9b : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000b9671 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x000000000008355e : add byte ptr [rbx - 0x76b7f81f], al ; retf 0x3948
0x000000000002b769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000000e7605 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000047a10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002076f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000057d38 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00000000000e13ff : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000002acbb : add byte ptr [rbx - 0x7af0f905], al ; retf
0x0000000000073e94 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x00000000001011dc : add byte ptr [rbx - 0x7bf00001], al ; retf 0
0x0000000000056c82 : add byte ptr [rbx - 0x7bf00008], al ; retf
0x0000000000171f46 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000006ce34 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000013c60f : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000d1817 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00000000000d6d67 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x0000000000138daf : add byte ptr [rbx - 0x7cb7fe3e], al ; ror byte ptr [rax], 0x39 ; retf 0x8d0f
0x00000000000e17ef : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000d8240 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000000e97bf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000101a3f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000115b6f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000072fd6 : add byte ptr [rbx - 0xd], bl ; ret
0x0000000000195bc0 : add byte ptr [rbx - 4], dl ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000194ef4 : add byte ptr [rbx - 5], cl ; jmp rax
0x0000000000199f67 : add byte ptr [rbx - 9], dh ; jmp rsp
0x00000000001255c4 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x000000000019a0d7 : add byte ptr [rbx], ah ; idiv edi ; ret 1
0x00000000001bd203 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001b1e53 : add byte ptr [rbx], bl ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x0000000000005c07 : add byte ptr [rbx], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000019287 : add byte ptr [rbx], cl ; retf
0x0000000000018f57 : add byte ptr [rbx], dh ; retf 0x18
0x0000000000085def : add byte ptr [rcx + 0x158d48ef], cl ; retf 0x107f
0x0000000000055766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000ae28e : add byte ptr [rcx + 0x245489d7], cl ; sbb al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x00000000000b5778 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000b0200 : add byte ptr [rcx + 0x29], al ; retf 0xca89
0x0000000000145be5 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000a6041 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000002c2bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000bd758 : add byte ptr [rcx + 0x3093590d], cl ; add byte ptr [rcx + 1], cl ; ret
0x000000000012fce2 : add byte ptr [rcx + 0x31], cl ; ror dword ptr [rbp - 0x77], 1 ; retf
0x0000000000168cef : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000e5399 : add byte ptr [rcx + 0x39], al ; retf
0x000000000008ba2f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000012fb4b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000003ce6a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046078 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000008f526 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005b773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f749e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f7d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000701e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116a10 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168ccf : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007ba06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000ea696 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000101f3a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000075512 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x0000000000072b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000001510ee : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000009e8c6 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000030b03 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x0000000000047c90 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000016e44c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5be8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000d701a : add byte ptr [rcx + 0x63], cl ; retf
0x000000000002df1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000034c57 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c52 ; ret
0x00000000000ffb2f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000132aac : add byte ptr [rcx + 0x9895], cl ; add bl, ch ; retf 0x8b48
0x000000000012d93b : add byte ptr [rcx + 0xc6348c1], cl ; mov cl, byte ptr [rax + 1] ; retf 0xe2ff
0x00000000000c4992 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000102ea5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000e3a97 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000099c69 : add byte ptr [rcx + 0xf], al ; mov dh, 0x54 ; syscall
0x00000000000d45f8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000056804 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056787 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005e59b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000812c4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000362c9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa902 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc20 : add byte ptr [rcx + 0xf], cl ; ret
0x00000000000e4c07 : add byte ptr [rcx + 1], al ; ret
0x000000000010e874 : add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 1] ; retf
0x00000000000aa38f : add byte ptr [rcx + 1], cl ; ret
0x00000000000f9027 : add byte ptr [rcx + 3], cl ; jbe 0xf904b ; mov eax, ecx ; syscall
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001bcd33 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000085548 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000019bc63 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; call 0x1119a4c1
0x000000000019a6af : add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x00000000001a248b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; cmc ; in al, dx ; call qword ptr [rsi]
0x00000000001b64a3 : add byte ptr [rcx + rbp*4 + 1], ch ; add al, bh ; loope 0x1b64ae ; call rsi
0x00000000001a647b : add byte ptr [rcx + rbp*4], al ; add al, dl ; out dx, al ; call qword ptr [rdx]
0x00000000001a6443 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x000000000019b157 : add byte ptr [rcx + rbp], al ; cli ; jmp rsp
0x000000000019b077 : add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x00000000001b5473 : add byte ptr [rcx + rbx*4], bh ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a946b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x000000000019a8cf : add byte ptr [rcx + rbx*8], dh ; clc ; call rsp
0x000000000019d45b : add byte ptr [rcx + rbx], ah ; add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d473 : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d443 : add byte ptr [rcx + rbx], cl ; add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x0000000000070fec : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x000000000019a5e7 : add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000001383d1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000c9dd1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c9e9b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000e4783 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000008194f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000094ccf : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002f6d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103753 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000fecff : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x8b726
0x0000000000103887 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000108e5c : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 1 ; syscall
0x0000000000088cff : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000087e61 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bf1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000080fac : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x000000000006847f : add byte ptr [rcx + rcx*4 - 0x36], cl ; jmp 0x6842c
0x00000000000fd91a : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x0000000000105ede : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, r12d ; syscall
0x00000000000d980a : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd981d
0x000000000009ed32 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x0000000000071036 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df35 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000879d3 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000654ff : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x71fd6
0x00000000001036bc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000013809d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000141eac : add byte ptr [rcx + rcx*4 - 2], cl ; mov eax, r10d ; syscall
0x0000000000141d9b : add byte ptr [rcx + rcx*4 - 2], cl ; mov eax, r13d ; syscall
0x0000000000141892 : add byte ptr [rcx + rcx*4 - 8], al ; syscall
0x0000000000081865 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x00000000001036cb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000012c9d1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000002c1ec : add byte ptr [rcx + rcx*4 - 9], cl ; mov eax, r15d ; syscall
0x000000000012d518 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001a4443 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x000000000019b6df : add byte ptr [rcx + rcx*8 - 6], dh ; jmp rsp
0x0000000000083f88 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f57 ; ret
0x00000000001af44b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000019cccb : add byte ptr [rcx + rdx + 0x71000000], dl ; std ; jmp qword ptr [rdi]
0x0000000000199af7 : add byte ptr [rcx + rdx - 9], al ; jmp rsp
0x00000000001b0cc3 : add byte ptr [rcx + rdx*2 + 0x72580001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c7b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], dl ; jb 0x1b0c80 ; jmp qword ptr [rcx]
0x00000000001b0cab : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001974df : add byte ptr [rcx + rdx*2 - 0x13], dh ; jmp rsp
0x00000000001b0c4b : add byte ptr [rcx + rdx*2], dl ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x0000000000196687 : add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x00000000001a4cab : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; test ch, ch ; call qword ptr [rdx]
0x0000000000198e7f : add byte ptr [rcx + rdx*4], dl ; hlt ; jmp rsp
0x000000000019cc7b : add byte ptr [rcx + rdx], al ; add al, ah ; fld1 ; call qword ptr [rdx]
0x00000000001b2c73 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001a2c8b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x00000000001aac6b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x000000000019ecb3 : add byte ptr [rcx + rsi], bh ; add al, bh ; mov bh, 0xe9 ; call qword ptr [rdx]
0x000000000019684f : add byte ptr [rcx - 0x17], dl ; call rsp
0x000000000000247b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000004242b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000003f4d3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x000000000003c213 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00000000000ad5c9 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000ff338 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000f5f6f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000040f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b2c4a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000032964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x000000000005da53 : add byte ptr [rcx - 0x60763], cl ; dec dword ptr [rax - 0x77] ; retf
0x0000000000026e53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000026e70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000801b0 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000005e790 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000006e8cf : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x0000000000063bb7 : add byte ptr [rcx - 0x75], al ; push rsi ; add al, 0x83 ; retf
0x00000000001031bf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000f247a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045f94 : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000025d7d : add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x0000000000118ce7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000009e9ef : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x0000000000027abf : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x27a9d
0x00000000001335b2 : add byte ptr [rcx - 0x77], al ; cmc ; call 0x1f8a6
0x00000000000d2203 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddf4 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000047d69 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddda9 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000123c7c : add byte ptr [rcx - 0x77], al ; retf
0x00000000000b576d : add byte ptr [rcx - 0x77], al ; retf 0x8948
0x000000000002c4da : add byte ptr [rcx - 0x77], al ; retf 0x894c
0x00000000000cf508 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xcf52b ; call 0x8b728
0x0000000000059781 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000662b7 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000005aef6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000012fc4f : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000107ebf : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x00000000001077ff : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000010772f : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x0000000000107f4f : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x00000000001085cf : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x000000000010800f : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x00000000001081df : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000cc11f : add byte ptr [rcx - 0x77], cl ; retf 0x3db8
0x0000000000108c9f : add byte ptr [rcx - 0x77], cl ; retf 0x42b8
0x00000000000f838f : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x000000000006b38f : add byte ptr [rcx - 0x77], cl ; retf 0x8b8
0x00000000000f899f : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x0000000000107c4f : add byte ptr [rcx - 0x77], cl ; retf 0x9db8
0x0000000000107b8f : add byte ptr [rcx - 0x77], cl ; retf 0xa5b8
0x0000000000107a6f : add byte ptr [rcx - 0x77], cl ; retf 0xafb8
0x0000000000094f0c : add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x00000000000f8a5f : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x00000000001061ef : add byte ptr [rcx - 0x77], cl ; retf 0xbcb8
0x000000000010618f : add byte ptr [rcx - 0x77], cl ; retf 0xbdb8
0x000000000010606f : add byte ptr [rcx - 0x77], cl ; retf 0xbeb8
0x00000000000fc265 : add byte ptr [rcx - 0x77], cl ; retf 0xc085
0x00000000001060ff : add byte ptr [rcx - 0x77], cl ; retf 0xc0b8
0x000000000010185f : add byte ptr [rcx - 0x77], cl ; retf 0xd8b8
0x00000000001079af : add byte ptr [rcx - 0x77], cl ; retf 0xe9b8
0x000000000011989b : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000006f777 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000074f13 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000000e2fd7 : add byte ptr [rcx - 0x7d], 0xf8 ; add al, 0x75 ; retf 0x8b48
0x00000000000e32e6 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x0000000000064326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000b5c16 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000d1af7 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000005133e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000022d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094fa1 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000ee1d5 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000000000006657b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00000000000e1a86 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000022cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d5382 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000011012f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e5f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000086390 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000089e9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000822ce : add byte ptr [rcx - 0x7d], cl ; sub rax, 0x39480108 ; ret
0x000000000003af9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000bd86f : add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000085109 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x00000000000f4890 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f480f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000012abff : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000fcd14 : add byte ptr [rcx - 0x9cb70a], cl ; mov eax, ecx ; syscall
0x0000000000026556 : add byte ptr [rcx - 0xa], al ; ret
0x00000000001216c7 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x0000000000080509 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080513 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110343 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000000cd1fa : add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000019432f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000142d8e : add byte ptr [rcx - 0xfff1e], al ; dec dword ptr [rcx] ; retf 0xfa83
0x000000000019ccd0 : add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec12 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec38 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001b3bd5 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3c05 : add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3bed : add byte ptr [rcx], 0 ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000018abcb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001abb55 : add byte ptr [rcx], al ; add al, cl ; retf
0x00000000000bd0a4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x0000000000088483 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000e79e0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000002e0e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000137671 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e741 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008b33f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000195494 : add byte ptr [rcx], al ; cld ; jmp rax
0x000000000002de34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000013c14f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007cbad : add byte ptr [rcx], al ; ret
0x00000000000daa57 : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000dc1ea : add byte ptr [rcx], al ; ret 0xc083
0x00000000000de8ee : add byte ptr [rcx], al ; ret 0xda39
0x00000000000d5b97 : add byte ptr [rcx], al ; setg dl ; jmp 0xd5b24
0x00000000000b9df7 : add byte ptr [rcx], bh ; ret
0x00000000000368a0 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000d45fd : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000db244 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e07c7 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0dd : add byte ptr [rcx], bh ; ret 0x947c
0x00000000000d5ed7 : add byte ptr [rcx], bh ; retf 0x337e
0x00000000000e4438 : add byte ptr [rcx], bh ; retf 0x8c0f
0x000000000011143f : add byte ptr [rcx], bh ; retf 0xc475
0x00000000001101c0 : add byte ptr [rcx], bh ; retf 0xcb75
0x00000000001ad15f : add byte ptr [rcx], bh ; xor edi, esp ; jmp qword ptr [rax]
0x00000000001bcd6b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000110c07 : add byte ptr [rcx], ch ; clc ; ret
0x000000000008d9f6 : add byte ptr [rcx], ch ; ret
0x00000000000c2871 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bd6d6 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000c5fe3 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41ff : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2834 : add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a82d : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000034efe : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672f : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c2460 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f53 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fcd31 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000181e3f : add byte ptr [rcx], ch ; sbb ebx, ebp ; ljmp [rcx] ; sbb ebx, ebp ; jmp qword ptr [rdi]
0x00000000001ad12f : add byte ptr [rcx], ch ; xor edi, esp ; jmp qword ptr [rax]
0x0000000000119421 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000107555 : add byte ptr [rcx], cl ; clc ; ret
0x0000000000079d2a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000000e072f : add byte ptr [rcx], cl ; ret 0xb60f
0x000000000019a4a7 : add byte ptr [rcx], dh ; clc ; jmp rsp
0x0000000000064122 : add byte ptr [rcx], dh ; div dh ; ret
0x00000000000cdfad : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x0000000000034a6f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x0000000000137ac8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb567 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002df2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000003bf27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000007a38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x000000000003a08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d7b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000024c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x000000000002426e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000facc3 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x61 ; ret
0x000000000014479f : add byte ptr [rcx], dh ; shr cl, cl ; retf 0xfffd
0x00000000001157f0 : add byte ptr [rcx], dh ; test byte ptr [rax + 0x63], 0xfa ; syscall
0x00000000001ad147 : add byte ptr [rcx], dh ; xor edi, esp ; jmp qword ptr [rax]
0x0000000000006c03 : add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add al, al ; retf
0x000000000014479e : add byte ptr [rcx], sil ; shr cl, cl ; retf 0xfffd
0x00000000001af863 : add byte ptr [rdi + 0x1c380001], ch ; cmc ; call qword ptr [rdx]
0x0000000000158f4a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000abc64 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001bec53 : add byte ptr [rdi + 2], cl ; add byte ptr [rax], al ; retf 6
0x0000000000172934 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000019accf : add byte ptr [rdi + rax*4], dh ; stc ; call rsp
0x00000000001a8243 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; call 0x281a729b
0x00000000001b2af3 : add byte ptr [rdi + rbp*2 + 0x18e80001], bh ; stc ; jmp qword ptr [rsi]
0x00000000001b2ac3 : add byte ptr [rdi + rbp*2 + 0x18e80001], cl ; stc ; jmp qword ptr [rsi]
0x00000000001b2a63 : add byte ptr [rdi + rbp*2], ch ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a4b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001a6af3 : add byte ptr [rdi + rbp*4 - 0x880000], bh ; stc ; call qword ptr [rax]
0x00000000001aea73 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; js 0x1aea61 ; hlt ; call qword ptr [rbx]
0x00000000001aea43 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; fcomip st(4) ; jmp qword ptr [rcx]
0x0000000000197faf : add byte ptr [rdi + rbx - 0x11], al ; jmp rsp
0x00000000001adae3 : add byte ptr [rdi + rbx - 0x6d07ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a9ac3 : add byte ptr [rdi + rbx*8 - 0x6a980000], cl ; int1 ; call qword ptr [rax]
0x00000000001a9adb : add byte ptr [rdi + rbx*8 - 0x6aa00000], ah ; int1 ; call qword ptr [rax]
0x00000000001a9a43 : add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x000000000019baaf : add byte ptr [rdi + rbx*8], dh ; std ; call rsp
0x0000000000053f6a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000052ef3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000119597 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x000000000019a37f : add byte ptr [rdi + rcx - 8], ah ; jmp rsp
0x00000000001b0acb : add byte ptr [rdi + rcx*2 + 0x6fd00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0ae3 : add byte ptr [rdi + rcx*2 + 0x6fe80001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a3b : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0a53 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000002dd34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000000534e9 : add byte ptr [rdi + rcx], cl ; test byte ptr [rdi], dl ; add al, 0 ; add al, ch ; retf 0xfe39
0x000000000019b63f : add byte ptr [rdi + rdi*4 - 6], al ; jmp rsp
0x00000000001afa4b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x000000000019b9a7 : add byte ptr [rdi + rsi*2], dh ; std ; call rsp
0x000000000019add7 : add byte ptr [rdi + rsi*4], dh ; stc ; call rsp
0x00000000001999af : add byte ptr [rdi + rsi*8 - 0xa], al ; call rsp
0x00000000001ab283 : add byte ptr [rdi + rsi*8], cl ; add al, bh ; sub esi, edx ; jmp rcx
0x000000000019f23b : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x000000000019f26b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000001aa2f3 : add byte ptr [rdi - 0x11280000], bh ; int1 ; jmp rcx
0x0000000000175860 : add byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000000cdb78 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000196580 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00000000000e822a : add byte ptr [rdi - 0xa], dh ; ret
0x00000000001a385b : add byte ptr [rdi*2 + 0x3f900000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bd634 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001ae23b : add byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019869f : add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000034dd0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001bc8a3 : add byte ptr [rdi], bh ; or byte ptr [rax], al ; add byte ptr [rdx], dh ; add byte ptr [rax], al ; retf
0x00000000001af9c0 : add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000000678f : add byte ptr [rdi], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001159b7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000015a8c6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000aab97 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8ff : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000108a71 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a5c4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10a555 ; loopne 0x10a5d5 ; ret
0x000000000002decd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x000000000015b96f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ceb87 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000128e0f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d191f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce27 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000002505a : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000008b13f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000acb00 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000007a61f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000016e45f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009f0ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f0ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0df : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009ec3f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009eaff : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009670f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008eb2f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000034bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000c52e6 : add byte ptr [rdi], cl ; ret
0x00000000000c5600 : add byte ptr [rdi], cl ; ret 0x144
0x000000000013d44d : add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a850 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df15c : add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ae : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b5e : add byte ptr [rdi], cl ; ret 0x8941
0x0000000000133be1 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fb88a : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf3a : add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ee : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d78a0 : add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c3551 : add byte ptr [rdi], cl ; ret 0xd801
0x000000000012390b : add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001238b0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238eb : add byte ptr [rdi], cl ; ret 0xff83
0x0000000000034e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000145bdf : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x0000000000026550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005744b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e071d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000bcea1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000bce0d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000136e5b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136ec8 ; ret
0x000000000014a777 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3f : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8eae : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00000000001419dc : add byte ptr [rdx + 0x159], bh ; call 0x2dc48
0x000000000012c4ab : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x0000000000080fdb : add byte ptr [rdx + 0x234], bh ; call 0x7d288
0x000000000008105c : add byte ptr [rdx + 0x237], bh ; call 0x7d288
0x000000000008103d : add byte ptr [rdx + 0x23a], bh ; call 0x7d288
0x0000000000021971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x00000000000b1944 : add byte ptr [rdx + 0x3e1], bh ; call 0x2dc48
0x000000000016afef : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x0000000000166cbf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a814f : add byte ptr [rdx + 0x48178816], cl ; lea eax, [rdi + 1] ; ret
0x0000000000021952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00000000000211ac : add byte ptr [rdx + 0x5b], bh ; call 0x2dc48
0x00000000000d1bdd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000001ad04b : add byte ptr [rdx + 0xd300001], dl ; hlt ; jmp rcx
0x0000000000009207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009c87 : add byte ptr [rdx + 1], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x55
0x0000000000045b1f : add byte ptr [rdx + 3], bh ; jmp 0x45af9
0x00000000001bd92f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000111b9f : add byte ptr [rdx + 5], bh ; call 0x2e628
0x000000000002189f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000001095b3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001bf723 : add byte ptr [rdx + rax + 0x7c90000], al ; add byte ptr [rax], al ; retf
0x0000000000198fd7 : add byte ptr [rdx + rax*2 - 0xb], ah ; jmp rsp
0x00000000001a3df3 : add byte ptr [rdx + rax*4 + 0x4d680000], bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a7d53 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x0000000000034c5c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00000000001aa583 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax], ch ; stc ; int1 ; call rsi
0x000000000019e593 : add byte ptr [rdx + rbp], bl ; add al, bh ; jl 0x19e58c ; jmp rsp
0x000000000019e563 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; pop rax ; jl 0x19e55c ; jmp qword ptr [rsi]
0x00000000001b9593 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x000000000019d54b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000116d4b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000096c73 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017cd57 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000199257 : add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x00000000001b05bb : add byte ptr [rdx + rcx*2 + 0x5b100001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b05eb : add byte ptr [rdx + rcx*2 + 0x5b400001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b055b : add byte ptr [rdx + rcx*2], ah ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a45a3 : add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x0000000000196a7f : add byte ptr [rdx + rdi*2 - 0x17], dh ; jmp rsp
0x00000000001a758b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax], ah ; jae 0x1a758a ; call rax
0x00000000001bb58b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000001acdeb : add byte ptr [rdx + rdx - 0x25ffffff], dh ; jmp qword ptr [rcx]
0x00000000001acdd3 : add byte ptr [rdx + rdx - 0x2617ffff], bl ; jmp qword ptr [rcx]
0x00000000001acdbb : add byte ptr [rdx + rdx - 0x262fffff], al ; jmp qword ptr [rcx]
0x00000000001b0dcb : add byte ptr [rdx + rdx*2 + 0x73e00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0db3 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, cl ; jae 0x1b0db8 ; jmp qword ptr [rcx]
0x00000000001b0d83 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d53 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000019ab0f : add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x00000000001aeda3 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001aedf3 : add byte ptr [rdx + rsi - 0x1887ffff], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000198a6f : add byte ptr [rdx + rsi - 0xd], ah ; jmp rsp
0x000000000019804f : add byte ptr [rdx + rsi], al ; out dx, eax ; call rsp
0x00000000001a83a0 : add byte ptr [rdx - 0x10], cl ; call qword ptr [rdx]
0x000000000019e010 : add byte ptr [rdx - 0x17], dh ; jmp qword ptr [rsi]
0x00000000000beb62 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb77
0x00000000001989f7 : add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000010cfc7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010cfc6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x000000000003c2c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000197d1f : add byte ptr [rdx], ah ; out dx, al ; call rsp
0x000000000001980f : add byte ptr [rdx], ah ; retf
0x000000000019aa3d : add byte ptr [rdx], al ; add ah, ah ; cmp edi, ecx ; jmp rsp
0x000000000002de86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000128356 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010eee7 : add byte ptr [rdx], al ; call rax
0x00000000001954f8 : add byte ptr [rdx], al ; cld ; jmp rax
0x000000000002dd94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001ae788 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x000000000001926f : add byte ptr [rdx], al ; retf
0x00000000000189b7 : add byte ptr [rdx], al ; retf 0x18
0x00000000000025af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001bcd2f : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000018f6f : add byte ptr [rdx], bh ; retf 0x18
0x0000000000009087 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x0000000000195594 : add byte ptr [rdx], ch ; cld ; jmp rax
0x0000000000104c2f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001bc8a7 : add byte ptr [rdx], dh ; add byte ptr [rax], al ; retf
0x000000000019b0f7 : add byte ptr [rdx], dl ; cli ; call rsp
0x0000000000000764 : add byte ptr [rdx], dl ; retf
0x000000000018abeb : add byte ptr [rip + 0x10], al ; retf 8
0x0000000000194e8c : add byte ptr [rip + 0x1e70fffb], cl ; sti ; call qword ptr [rax]
0x0000000000194ecc : add byte ptr [rip + 0x3a30fffb], bl ; sti ; call qword ptr [rax]
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x000000000012faea : add byte ptr [rip - 0x76b40000], al ; ret
0x00000000000cc6f1 : add byte ptr [rip - 0xfff], bh ; jae 0xcc702 ; ret
0x0000000000142067 : add byte ptr [rsi + 0x80002], bh ; mov eax, ecx ; syscall
0x0000000000115177 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000137cc7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014a635 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016e754 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e0d0f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000115686 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000000e0cf2 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000034ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000101d7c : add byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x0000000000034b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000009effc : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ea44 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000ac44f : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x0000000000008fc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000103695 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103882 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000010374e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000001036c6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000001ba1a3 : add byte ptr [rsi + 1], ch ; add al, ch ; push rdi ; call qword ptr [rdx]
0x000000000000699f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ae1ab : add byte ptr [rsi + 1], dh ; add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000103b00 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000103873 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000010373f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000001036b7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f68d7 : add byte ptr [rsi + 6], dh ; ret
0x00000000001024ef : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000001bc1b3 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000000cdabc : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b295b : add byte ptr [rsi + rbp*2], ah ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019d9d3 : add byte ptr [rsi + rbx + 0x4a780000], bl ; jmp 0x1b9ce7
0x00000000001ad9bb : add byte ptr [rsi + rbx - 0x6f3fffff], al ; hlt ; call qword ptr [rcx]
0x0000000000197cef : add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x00000000001b19db : add byte ptr [rsi + rbx*2 - 0x5fdfffff], ah ; cmc ; call rdi
0x00000000001a994b : add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000001bad28 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001b09c3 : add byte ptr [rsi + rcx*2 + 0x6e980001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b09db : add byte ptr [rsi + rcx*2 + 0x6eb00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b09f3 : add byte ptr [rsi + rcx*2 + 0x6ec80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0963 : add byte ptr [rsi + rcx*2], ch ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b094b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a49ab : add byte ptr [rsi + rcx*4], dh ; add al, dl ; jg 0x1a49a8 ; jmp qword ptr [rbx]
0x00000000001af9bb : add byte ptr [rsi + rdi + 0x1f000001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001af9d3 : add byte ptr [rsi + rdi + 0x1f180001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9eb : add byte ptr [rsi + rdi + 0x1f300001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019f9eb : add byte ptr [rsi + rdi + 0x44300000], dh ; cli ; jmp qword ptr [rcx]
0x000000000019b1ff : add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001a794b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x00000000001b11db : add byte ptr [rsi + rdx*2 + 0x7b200001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b11f3 : add byte ptr [rsi + rdx*2 + 0x7b380001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b117b : add byte ptr [rsi + rdx*2 + 1], al ; add al, al ; jp 0x1b1180 ; jmp qword ptr [rcx]
0x00000000001b1193 : add byte ptr [rsi + rdx*2 + 1], bl ; add al, bl ; jp 0x1b1198 ; jmp qword ptr [rcx]
0x00000000001b1163 : add byte ptr [rsi + rdx*2], ch ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b114b : add byte ptr [rsi + rdx*2], dl ; add dword ptr [rax], eax ; nop ; jp 0x1b1150 ; jmp qword ptr [rcx]
0x000000000019b30f : add byte ptr [rsi + rdx*2], dl ; cli ; jmp rsp
0x00000000001a91f3 : add byte ptr [rsi + rdx*8 + 0x1f680000], bh ; int1 ; call qword ptr [rsi]
0x0000000000199657 : add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000001b716b : add byte ptr [rsi + rsi*4], dh ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001bb17b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001ab143 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001a6830 : add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000001ae1f3 : add byte ptr [rsi - 0x57f7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1db : add byte ptr [rsi - 0x580fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001950b4 : add byte ptr [rsi - 0x596f0003], ah ; std ; jmp qword ptr [rax]
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000107eed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x0000000000108cfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1e ; syscall
0x000000000010856d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x000000000010820d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x00000000000f8a8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x00000000000f89cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x000000000010775d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x00000000000f6ddd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x000000000010188d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x00000000000fdbbd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x000000000010782d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x0000000000107bed : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x00000000001060cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x000000000010612d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x000000000010600d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x00000000001061bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x0000000000107a9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x000000000003686d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x00000000001390b8 : add byte ptr [rsi - 0x77], ah ; add al, 0x89 ; pop rbp ; add al, ch ; retf
0x00000000000f645c : add byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000019a157 : add byte ptr [rsi - 9], al ; jmp rsp
0x000000000019b457 : add byte ptr [rsi], ah ; cli ; call rsp
0x000000000001983f : add byte ptr [rsi], ah ; retf
0x000000000001fb0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197da7 : add byte ptr [rsi], al ; out dx, al ; call rsp
0x0000000000018aef : add byte ptr [rsi], cl ; retf 0x18
0x00000000000fca32 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001b1f9b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x00000000000f5f49 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000199007 : add byte ptr [rsp + rax*2 - 0xb], dh ; jmp rsp
0x00000000001bf00f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bbf73 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001bbf43 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x0000000000197df7 : add byte ptr [rsp + rbp*2], al ; out dx, al ; call rsp
0x00000000001ad7eb : add byte ptr [rsp + rbx - 0x786fffff], dh ; hlt ; call qword ptr [rax]
0x000000000019854f : add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000197667 : add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x00000000001011c3 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001b07bb : add byte ptr [rsp + rcx*2 + 0x6cc00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b07d3 : add byte ptr [rsp + rcx*2 + 0x6cd80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b07eb : add byte ptr [rsp + rcx*2 + 0x6cf00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0773 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x000000000019783f : add byte ptr [rsp + rcx*8], dl ; in eax, dx ; jmp rsp
0x00000000001a7783 : add byte ptr [rsp + rdi*4], cl ; add al, bl ; frndint ; call qword ptr [rax]
0x0000000000195c78 : add byte ptr [rsp + rdi*8 - 0x37c6f01], al ; jmp qword ptr [rax]
0x000000000019a2b7 : add byte ptr [rsp + rdi*8], ah ; idiv edi ; pushfq ; retf 1
0x000000000019570c : add byte ptr [rsp + rdi*8], ah ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019cfc3 : add byte ptr [rsp + rdx + 0x6f580000], cl ; std ; call qword ptr [rcx]
0x0000000000199307 : add byte ptr [rsp + rdx - 0xa], dh ; call rsp
0x0000000000198ed7 : add byte ptr [rsp + rdx - 0xb], dh ; call rsp
0x00000000001b0fe3 : add byte ptr [rsp + rdx*2 + 0x78480001], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001aef93 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aefab : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc3 : add byte ptr [rsp + rsi - 0x13a7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa3 : add byte ptr [rsp + rsi*8 + 1], ch ; add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x000000000019938f : add byte ptr [rsp - 0xa], al ; call rsp
0x00000000001b5fd3 : add byte ptr [rsp - 0xe67ffff], bl ; sti ; call rcx
0x000000000019a107 : add byte ptr [rsp - 9], ah ; push rsp ; ret 1
0x0000000000198a1f : add byte ptr [rsp], al ; jmp rsp
0x0000000000055ce8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000452ba : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000001024ee : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x000000000015a77e : add byte ptr es:[rax + 0x39], cl ; retf 0x377
0x0000000000158f32 : add byte ptr es:[rax + 0x39], cl ; retf 0x830f
0x00000000001563a0 : add byte ptr es:[rax + 0x39], cl ; retf 0x8949
0x000000000003613a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019e21d : add byte ptr es:[rax], al ; jne 0x19e212 ; jmp qword ptr [rcx]
0x00000000001a8708 : add byte ptr fs:[rax], al ; add ah, dl ; retf
0x000000000007a360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070983 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000054e14 : add byte ptr ss:[rax + 0x63], cl ; retf 0x8948
0x000000000005c4f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x000000000019f17d : add byte ptr ss:[rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x0000000000137384 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000de2ea : add ch, al ; mov al, 0x15 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000017d163 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000000dadd0 : add ch, al ; retf 0xf44a
0x00000000000e7a04 : add ch, al ; retf 0xfffa
0x0000000000187f7c : add ch, bh ; int1 ; jmp qword ptr [rax]
0x00000000001bda23 : add ch, bl ; add eax, 0 ; add byte ptr [rax], al ; retf 7
0x00000000000350d7 : add ch, bl ; fpatan ; ret
0x0000000000185e1c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000185e1d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000019621c : add ch, byte ptr [rbp - 0x536d0004] ; cld ; jmp qword ptr [rdx]
0x00000000000bd40c : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000051530 : add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000072e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000005b48b : add ch, byte ptr [rip - 0x17000000] ; retf
0x0000000000056840 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000187e58 : add ch, ch ; int1 ; jmp qword ptr [rax]
0x0000000000019257 : add ch, ch ; retf 0x18
0x00000000000d7b6a : add ch, cl ; retf
0x00000000000191df : add ch, cl ; retf 0x18
0x000000000005ee31 : add ch, cl ; retf 0xffd9
0x00000000001179d8 : add ch, cl ; xchg eax, edx ; retf 0xfff7
0x00000000000191f7 : add ch, dl ; retf 0x18
0x0000000000035f96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000019f240 : add cl, 0xe9 ; call qword ptr [rdx]
0x0000000000195354 : add cl, 0xfb ; call rax
0x0000000000052fc1 : add cl, bl ; in eax, 0xdf ; loopne 0x52f56 ; ret 0xe680
0x0000000000054f3a : add cl, bl ; in eax, 0xdf ; loopne 0x54ecf ; ret 0xe680
0x000000000010214f : add cl, bl ; retf 0xc9d9
0x00000000001851ea : add cl, bl ; retf 0xea91
0x0000000000105e25 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000a2aac : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000005715e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c9 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000026b13 : add cl, byte ptr [rax + 0x39] ; ret
0x00000000001234c6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x00000000001234d4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000105e26 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x00000000001234a0 : add cl, byte ptr [rax + 0x39] ; retf 0x3a72
0x0000000000158b6a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000054d5d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000000e0f6b : add cl, byte ptr [rax + 0x63] ; retf 0x3949
0x0000000000083bce : add cl, byte ptr [rax + 0xf] ; retf 0x8348
0x0000000000074079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002a293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000105fab : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000c0240 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000a2aad : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009e927 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000070caf : add cl, byte ptr [rax - 0x77] ; ret
0x000000000012fbf3 : add cl, byte ptr [rax - 0x77] ; retf 0x314d
0x000000000007c842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ffa52 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000bb440 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcb94fc50
0x000000000004945c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000000899f0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000025654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000cf267 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000089a53 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013bea5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000724b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000001a4258 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000012471f : add cl, byte ptr [rbp + 0xf] ; ret
0x000000000003d35d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000e7e4e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x00000000000894c5 : add cl, byte ptr [rbp - 0x77] ; ret
0x00000000000ed508 : add cl, byte ptr [rbp - 0x77] ; retf 0x4864
0x000000000015b742 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000d64e6 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x0000000000089452 : add cl, byte ptr [rcx + 0x39] ; ror dword ptr [rdi + rcx + 0x47], 1 ; retf 0x854d
0x000000000006bcf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x0000000000082498 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000012ed77 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x0000000000030eff : add cl, byte ptr [rcx + 0x75] ; retf
0x00000000000c9f7e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000009b653 : add cl, byte ptr [rcx - 0x77] ; retf 0xf43
0x00000000000e0cfe : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00000000000b853b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x000000000002dd54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000f771f : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f7677 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000317cb : add cl, byte ptr [rdi] ; retf 0x8b48
0x0000000000111445 : add cl, byte ptr [rdi] ; test bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000817f0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000006d005 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000014a63b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000aa963 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001b6a00 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x0000000000187db4 : add cl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000067497 : add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c7 : add cl, ch ; ret
0x0000000000060228 : add cl, ch ; ret 0xffb8
0x0000000000067734 : add cl, ch ; ret 0xffbf
0x000000000009e7e7 : add cl, ch ; ret 0xffd3
0x0000000000040f85 : add cl, ch ; ret 0xffec
0x0000000000031d06 : add cl, ch ; ret 0xfff1
0x000000000009e6b3 : add cl, ch ; ret 0xfff5
0x000000000002b0b1 : add cl, ch ; ret 0xfffb
0x00000000000f0c33 : add cl, ch ; ret 0xfffd
0x00000000001157bf : add cl, ch ; ret 0xfffe
0x0000000000060851 : add cl, ch ; ret 0xffff
0x0000000000026722 : add cl, ch ; retf
0x00000000000f52fe : add cl, ch ; retf 0
0x000000000004e4d4 : add cl, ch ; retf 0xfff7
0x0000000000027ebf : add cl, ch ; retf 0xfffa
0x00000000000808ae : add cl, ch ; retf 0xfffe
0x0000000000115b66 : add cl, cl ; ret
0x00000000001850a3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000001bc57f : add cl, dh ; or byte ptr [rbx], al ; ret
0x00000000001a946f : add cl, dl ; int1 ; jmp qword ptr [rax]
0x00000000001850a2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000001a4050 : add dh, ah ; ret
0x0000000000045af8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000011a78a : add dh, al ; add eax, 0x2adac6 ; add ecx, ebp ; retf
0x0000000000180e0b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000851db : add dh, al ; and al, 0x10 ; add al, ch ; retf 0xfc54
0x00000000000d590f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000018a4fb : add dh, bh ; jmp rdi
0x0000000000183ede : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x0000000000180257 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015b8f3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fbb2d : add dh, bl ; ret
0x000000000001920f : add dh, bl ; retf 0x18
0x00000000000a9beb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a3ff6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x0000000000099b7d : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00000000000d7ca8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7c74
0x0000000000134212 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a0ee5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001b69c5 : add dh, byte ptr [rdx + 0xa] ; ret
0x0000000000099563 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x00000000000791a3 : add dh, byte ptr [rdx + rsi + 0x48] ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000009dac4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009bb80 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac3 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x0000000000134211 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000187e7c : add dh, ch ; int1 ; jmp qword ptr [rax]
0x0000000000064136 : add dh, dh ; ret
0x00000000000ec113 : add dh, dh ; ret 0x4002
0x0000000000023ff6 : add dh, dh ; ret 0x4801
0x000000000008f3d8 : add dh, dh ; ret 0x7404
0x00000000000e45e9 : add dh, dh ; ret 0x7408
0x000000000006db9f : add dh, dh ; ret 0x7420
0x0000000000170977 : add dh, dh ; ret 0x7501
0x0000000000170984 : add dh, dh ; ret 0x7502
0x0000000000061ba4 : add dh, dh ; ret 0x7504
0x0000000000170949 : add dh, dh ; ret 0x7510
0x0000000000170956 : add dh, dh ; ret 0x7520
0x0000000000170963 : add dh, dh ; ret 0x7540
0x00000000000f8d17 : add dh, dh ; ret 0xf01
0x00000000000817ed : add dh, dh ; ret 0xf02
0x0000000000122985 : add dh, dh ; ret 0xf04
0x000000000005421f : add dh, dh ; ret 0xf08
0x00000000000a12b2 : add dh, dh ; ret 0xf20
0x00000000000a12bb : add dh, dh ; ret 0xf40
0x0000000000188035 : add dh, dl ; call qword ptr [rax]
0x00000000001aa7b9 : add dh, dl ; call rdi
0x0000000000188029 : add dh, dl ; inc eax ; add dh, dl ; jmp rax
0x0000000000188015 : add dh, dl ; jmp qword ptr [rax]
0x000000000018802d : add dh, dl ; jmp rax
0x0000000000188031 : add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000109e9e : add dil, byte ptr [rcx] ; ret
0x00000000000bb1e9 : add dil, r15b ; ret
0x00000000001bcb0b : add dl, bh ; add eax, 0x37b0000 ; add byte ptr [rax], al ; retf
0x00000000001acdf0 : add dl, bl ; jmp qword ptr [rcx]
0x0000000000187dd4 : add dl, ch ; int1 ; jmp qword ptr [rax]
0x00000000001a5ee5 : add dl, ch ; ret
0x000000000001923f : add dl, ch ; retf 0x18
0x0000000000187fdd : add dl, dh ; call qword ptr [rax]
0x0000000000187fd1 : add dl, dh ; inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x0000000000187fd9 : add dl, dh ; jmp rax
0x000000000003494f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000187fd5 : add dl, dh ; push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x00000000001bc4b0 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x0000000000198fd5 : add dword ptr [eax], eax ; cmc ; jmp rsp
0x00000000001a6cc4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001bc32a : add dword ptr [r15], 2 ; retf
0x0000000000026e56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000c01fc : add dword ptr [r8 - 0x73], ecx ; jl 0xc025b ; ror byte ptr [rax - 0x46], 1 ; ret
0x000000000012406d : add dword ptr [r8 - 0x77], ecx ; retf 0xc148
0x0000000000046274 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000006c70e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce92 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000001afd15 : add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x0000000000198ac5 : add dword ptr [r8], eax ; xchg eax, esp ; jmp rsp
0x00000000001b0105 : add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b032d : add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x0000000000026486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000077ccc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d59b8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016aff1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000d95cf : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x000000000003e042 : add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x00000000000cc412 : add dword ptr [rax + 0x38], edi ; syscall
0x0000000000026af7 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d8fe3 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000b7957 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000f9613 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000e16b6 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00000000000495f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000051fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000f9607 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d90b3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000d3675 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00000000000b8dd2 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x000000000009f9c0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000082edf : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000117af1 : add dword ptr [rax + 0x39], ecx ; retf 0xe975
0x00000000000b9d62 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000009df51 : add dword ptr [rax + 0x39], ecx ; retf 0xef75
0x000000000010f488 : add dword ptr [rax + 0x39], ecx ; retf 0xf275
0x0000000000048083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000010de75 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010de4f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00000000000c59d5 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000101ce1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000df9ae : add dword ptr [rax + 0x63], ecx ; retf 0x8941
0x00000000000d868f : add dword ptr [rax + 0x74], eax ; adc dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000000ff963 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000000e5cff : add dword ptr [rax + 0xf], ecx ; ret
0x000000000006432a : add dword ptr [rax + 1], ecx ; ret
0x0000000000020622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d5933 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000123f2c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00000000001a273e : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000099555 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x0000000000184c9b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x184d07 ; retf
0x00000000001ac0f6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000011b466 : add dword ptr [rax - 0x18], edx ; ret
0x00000000000d39e7 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00000000000d39e6 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x000000000002f453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000105e22 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000c01fd : add dword ptr [rax - 0x73], ecx ; jl 0xc025a ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000f0035 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf007b
0x00000000000a2a86 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166c52 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009e916 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000af761 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000082d2d : add dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax + 9] ; retf 0x8948
0x000000000007eac9 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008b4d1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000f0d4c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000cf890 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00000000000e1ce2 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00000000000793ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000d0440 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x00000000000bb444 : add dword ptr [rax - 0x77], ecx ; retf
0x00000000000d3156 : add dword ptr [rax - 0x77], ecx ; retf 0x894c
0x000000000012406e : add dword ptr [rax - 0x77], ecx ; retf 0xc148
0x000000000010e748 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e71e
0x0000000000123c10 : add dword ptr [rax - 0x78], eax ; ja 0x123c1b ; ret
0x00000000001072b6 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x75], 5 ; retf
0x000000000016cc0a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000097428 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000221f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000122648 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000d8243 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00000000000463dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000de32f : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e97c2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00000000000e17f2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000006c70f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000037e49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d3803 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000002146c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000000c7856 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000023c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000003d24e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000122978 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000ceb8b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000b710c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x000000000006ce93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000fb171 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000005cb5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000e757a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d9274 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d7a6e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000138db2 : add dword ptr [rax - 0x7d], ecx ; ror byte ptr [rax], 0x39 ; retf 0x8d0f
0x000000000007b5da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x000000000003c47c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000000b06a3 : add dword ptr [rax], 0x89480000 ; retf 0x894c
0x00000000001a3c95 : add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000001099d4 : add dword ptr [rax], 1 ; ret
0x00000000001af22e : add dword ptr [rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x0000000000198c16 : add dword ptr [rax], eax ; adc al, 0x6d ; call rsp
0x0000000000198e7e : add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x00000000001ae80e : add dword ptr [rax], eax ; adc bl, bl ; hlt ; call qword ptr [rbx]
0x00000000001b05be : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b0a3e : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0c7e : add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000199af6 : add dword ptr [rax], eax ; adc edi, r14d ; jmp rsp
0x0000000000198a1e : add dword ptr [rax], eax ; add al, 0x24 ; jmp rsp
0x000000000019869e : add dword ptr [rax], eax ; add al, 0xa7 ; int1 ; jmp rsp
0x00000000001419df : add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret 0xffee
0x0000000000120676 : add dword ptr [rax], eax ; add al, ch ; ret 0xf0d5
0x00000000000d586e : add dword ptr [rax], eax ; add al, ch ; retf 0xf583
0x00000000000f3fda : add dword ptr [rax], eax ; add al, ch ; xchg eax, edi ; ret 0xfff2
0x00000000001af44e : add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000009e40a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000012391c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x0000000000123922 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x0000000000123914 : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006dcba : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000028550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006f0bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002423e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000cda93 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x2475
0x000000000006bd68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013c996 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000008767c : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000081568 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000014381d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000066504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3638 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000970ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000011733f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000fba4c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x0000000000072b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000084ab9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000084be0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002b95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e42 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000082bd7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b69ca : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001458fd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000343b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002691d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000008de7e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014bdaf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145851 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000297fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000007186a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001b0afe : add dword ptr [rax], eax ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000072090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000021901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018025a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f40a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017f232 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f22a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f9c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000017f26a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000017f262 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x000000000017fa02 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000005981e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004da4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000012eb53 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fdea0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000112293 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x10ed26
0x0000000000083347 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x7fd56
0x0000000000103697 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000172931 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x172948 ; neg eax ; ret
0x00000000000abc61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xabc71 ; neg eax ; ret
0x0000000000170887 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x170898 ; neg eax ; ret
0x0000000000062575 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x6254b
0x0000000000066c65 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x63702
0x00000000000cdbf3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcdc07 ; ret
0x00000000001150be : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000ce07b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000001323d3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002c0ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x0000000000133028 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12f308
0x000000000004a09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012d90a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000103884 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103750 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001036c8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103b0e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006cb44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d9807 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd9820
0x0000000000054d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007ba63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000008870a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000048064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000001fa14 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000006b46e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000817f4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000008d238 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e396a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000f85a6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010f6ab : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000073e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000006ce32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000087e5f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bef : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000879d1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000141eaa : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 2], cl ; mov eax, r10d ; syscall
0x0000000000141d99 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 2], cl ; mov eax, r13d ; syscall
0x00000000001335b0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; cmc ; call 0x1f8a8
0x000000000002c4d8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000066558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000022d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ee1d3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000066579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000000000008638e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000012abfd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000835d5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080511 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110341 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000110cef : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000c2233 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000079d28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000023dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00000000001af9be : add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000ceb85 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000025058 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000123909 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001238ae : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238e9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x0000000000115684 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000009effa : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000dc5cc : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000170975 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000170982 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000017098f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170947 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000170954 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000170961 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000012de71 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001acdee : add dword ptr [rax], eax ; add dl, bl ; jmp qword ptr [rcx]
0x00000000000f9026 : add dword ptr [rax], eax ; add rsi, qword ptr [r14 + 0x18] ; mov eax, ecx ; syscall
0x00000000000ffded : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019a6ae : add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019b8c6 : add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019a906 : add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000019a0d6 : add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a126 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019938e : add dword ptr [rax], eax ; and al, 0xf6 ; call rsp
0x000000000019a2b6 : add dword ptr [rax], eax ; and al, 0xfc ; idiv edi ; pushfq ; retf 1
0x00000000001b11de : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b298e : add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2c76 : add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a4e : add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001ba1a6 : add dword ptr [rax], eax ; call 0x131b99b1
0x00000000001acec6 : add dword ptr [rax], eax ; call 0x181ac2ac
0x00000000001acdd6 : add dword ptr [rax], eax ; call 0x221ac1bb
0x00000000001adc16 : add dword ptr [rax], eax ; call 0x221ad0b5
0x00000000001af9a6 : add dword ptr [rax], eax ; call 0x221aeed0
0x00000000001b0ae6 : add dword ptr [rax], eax ; call 0x221b0061
0x00000000001b2c16 : add dword ptr [rax], eax ; call 0x271b2244
0x00000000001b2ac6 : add dword ptr [rax], eax ; call 0x271b23ea
0x00000000001b2af6 : add dword ptr [rax], eax ; call 0x271b241a
0x00000000001b2b26 : add dword ptr [rax], eax ; call 0x271b244a
0x00000000001b2b56 : add dword ptr [rax], eax ; call 0x271b247a
0x00000000001b2b86 : add dword ptr [rax], eax ; call 0x271b24aa
0x00000000001b2bb6 : add dword ptr [rax], eax ; call 0x271b24da
0x00000000001b6656 : add dword ptr [rax], eax ; call 0xffffffffd21b5d91
0x00000000001b2a06 : add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a5e6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00000000001b64a6 : add dword ptr [rax], eax ; clc ; loope 0x1b64ab ; call rsi
0x00000000001b0a26 : add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b90c6 : add dword ptr [rax], eax ; clc ; ret
0x00000000001adae6 : add dword ptr [rax], eax ; clc ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0106 : add dword ptr [rax], eax ; cmc ; jmp rax
0x0000000000198fd6 : add dword ptr [rax], eax ; cmc ; jmp rsp
0x000000000008e64a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001b350e : add dword ptr [rax], eax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001aec06 : add dword ptr [rax], eax ; cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b3bd6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11f6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0c06 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b364e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001b29a6 : add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5fd6 : add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b0c36 : add dword ptr [rax], eax ; cwde ; jno 0x1b0c35 ; jmp qword ptr [rcx]
0x00000000001b5476 : add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001b09c6 : add dword ptr [rax], eax ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ac6c6 : add dword ptr [rax], eax ; cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001ad7a6 : add dword ptr [rax], eax ; cwde ; xchg esp, esi ; call qword ptr [rsi]
0x00000000001999ae : add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001aea46 : add dword ptr [rax], eax ; fcomip st(4) ; jmp qword ptr [rcx]
0x00000000001acf16 : add dword ptr [rax], eax ; fcomp st(2) ; call qword ptr [rdx]
0x00000000001b1196 : add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001afd16 : add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x000000000019a0f6 : add dword ptr [rax], eax ; hlt ; jrcxz 0x19a0f9 ; inc esp ; ret 1
0x000000000019b9de : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001998ee : add dword ptr [rax], eax ; hlt ; retf 0xfff6
0x0000000000199c46 : add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x0000000000198f2e : add dword ptr [rax], eax ; in al, 0x20 ; cmc ; jmp rsp
0x000000000019815e : add dword ptr [rax], eax ; in al, 0x80 ; out dx, eax ; jmp rsp
0x0000000000198216 : add dword ptr [rax], eax ; in al, 0x93 ; out dx, eax ; call rsp
0x000000000019a106 : add dword ptr [rax], eax ; in al, 0xf7 ; push rsp ; ret 1
0x00000000001982c6 : add dword ptr [rax], eax ; in al, 0xfa ; out dx, eax ; call rsp
0x0000000000198d86 : add dword ptr [rax], eax ; in al, 7 ; hlt ; call rsp
0x00000000001aefae : add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0cae : add dword ptr [rax], eax ; jb 0x1b0cad ; jmp qword ptr [rcx]
0x0000000000199656 : add dword ptr [rax], eax ; jbe 0x199656 ; jmp rsp
0x0000000000198ed6 : add dword ptr [rax], eax ; je 0x198ef3 ; cmc ; call rsp
0x0000000000199006 : add dword ptr [rax], eax ; je 0x199053 ; cmc ; jmp rsp
0x000000000019a15e : add dword ptr [rax], eax ; je 0x19a14f ; idiv edi ; cld ; ret
0x0000000000047056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00000000001ade2e : add dword ptr [rax], eax ; jo 0x1addd0 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae60e : add dword ptr [rax], eax ; jo 0x1ae5e8 ; hlt ; jmp rcx
0x00000000001bb33e : add dword ptr [rax], eax ; jo 0x1bb2dc ; sti ; jmp qword ptr [rdx]
0x00000000001aea76 : add dword ptr [rax], eax ; js 0x1aea5e ; hlt ; call qword ptr [rbx]
0x00000000001aedf6 : add dword ptr [rax], eax ; js 0x1aede6 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee86 : add dword ptr [rax], eax ; js 0x1aee77 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b76 : add dword ptr [rax], eax ; js 0x1b0bef ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fe6 : add dword ptr [rax], eax ; js 0x1b0fe5 ; jmp qword ptr [rbx]
0x00000000001bafa6 : add dword ptr [rax], eax ; js 0x1baf47 ; sti ; jmp qword ptr [rdx]
0x00000000001b0776 : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001af3be : add dword ptr [rax], eax ; loopne 0x1af3c4 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0a0e : add dword ptr [rax], eax ; loopne 0x1b0a85 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0dce : add dword ptr [rax], eax ; loopne 0x1b0e4a ; cmc ; jmp qword ptr [rcx]
0x000000000019b896 : add dword ptr [rax], eax ; mov ah, 0x40 ; sti ; call rsp
0x00000000001981e6 : add dword ptr [rax], eax ; mov ah, 0x91 ; out dx, eax ; jmp rsp
0x000000000019a13e : add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000001bab1e : add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b055e : add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b078e : add dword ptr [rax], eax ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09de : add dword ptr [rax], eax ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c4e : add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0636 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000009edec : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed31 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000198dbe : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000198f86 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x00000000001984de : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x00000000001b2cbe : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b9fce : add dword ptr [rax], eax ; nop ; div bh ; call qword ptr [rdx]
0x00000000001b0b8e : add dword ptr [rax], eax ; nop ; jo 0x1b0b8d ; jmp qword ptr [rcx]
0x00000000001b114e : add dword ptr [rax], eax ; nop ; jp 0x1b114d ; jmp qword ptr [rcx]
0x00000000001ad7ee : add dword ptr [rax], eax ; nop ; xchg esp, esi ; call qword ptr [rax]
0x00000000001b0806 : add dword ptr [rax], eax ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af516 : add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001b2d86 : add dword ptr [rax], eax ; or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x0000000000199256 : add dword ptr [rax], eax ; or r14b, sil ; jmp rsp
0x000000000019a156 : add dword ptr [rax], eax ; out 0xf7, al ; jmp rsp
0x00000000001b094e : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a66 : add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b59a6 : add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001aefc6 : add dword ptr [rax], eax ; pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0cc6 : add dword ptr [rax], eax ; pop rax ; jb 0x1b0cc5 ; jmp qword ptr [rcx]
0x00000000001b1e56 : add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b0966 : add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0606 : add dword ptr [rax], eax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001adbb6 : add dword ptr [rax], eax ; pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b05ee : add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000009ee6b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001b295e : add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb58e : add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001b1b0e : add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0f1e : add dword ptr [rax], eax ; push rax ; jbe 0x1b0f1d ; jmp qword ptr [rcx]
0x00000000001b120e : add dword ptr [rax], eax ; push rax ; jnp 0x1b120d ; jmp qword ptr [rcx]
0x00000000001ae23e : add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019a30e : add dword ptr [rax], eax ; push rsp ; add al, bh ; push rsp ; retf
0x00000000001989f6 : add dword ptr [rax], eax ; push rsp ; and dh, bl ; jmp rsp
0x000000000019a686 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x000000000019854e : add dword ptr [rax], eax ; push rsp ; pop rsp ; int1 ; call rsp
0x000000000019b97e : add dword ptr [rax], eax ; push rsp ; retf 0xfffc
0x00000000001bad8e : add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b032e : add dword ptr [rax], eax ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001afa4e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001acdbe : add dword ptr [rax], eax ; rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000000898b2 : add dword ptr [rax], eax ; ret
0x000000000019b976 : add dword ptr [rax], eax ; retf 0xfffc
0x00000000001b0d0e : add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0b16 : add dword ptr [rax], eax ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0d56 : add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001af9d6 : add dword ptr [rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ace06 : add dword ptr [rax], eax ; sbb dl, bl ; jmp qword ptr [rcx]
0x00000000001ad80e : add dword ptr [rax], eax ; shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x00000000001b0ace : add dword ptr [rax], eax ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001aef96 : add dword ptr [rax], eax ; sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001aeda6 : add dword ptr [rax], eax ; sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b0836 : add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b3c06 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0a56 : add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0936 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af916 : add dword ptr [rax], eax ; sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af436 : add dword ptr [rax], eax ; sub dh, bh ; hlt ; jmp rdi
0x00000000001aeb36 : add dword ptr [rax], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b1166 : add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001ad9a6 : add dword ptr [rax], eax ; test al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x00000000001bb0a6 : add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001ade96 : add dword ptr [rax], eax ; test al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x000000000019b796 : add dword ptr [rax], eax ; test al, bl ; cli ; jmp rsp
0x000000000019a0e6 : add dword ptr [rax], eax ; test bl, ah ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019a29e : add dword ptr [rax], eax ; test bl, bh ; idiv edi ; push rsp ; retf 1
0x000000000019a4de : add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001adb9e : add dword ptr [rax], eax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019a3ee : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; call rsp
0x0000000000198626 : add dword ptr [rax], eax ; xchg eax, esp ; je 0x198621 ; jmp rsp
0x0000000000198ac6 : add dword ptr [rax], eax ; xchg eax, esp ; jmp rsp
0x00000000001998e6 : add dword ptr [rax], eax ; xchg eax, esp ; retf 0xfff6
0x000000000019a2a6 : add dword ptr [rax], eax ; xchg eax, esp ; sti ; idiv edi ; insb byte ptr [rdi], dx ; retf 1
0x00000000001ada26 : add dword ptr [rax], eax ; xchg rax, rcx ; hlt ; jmp qword ptr [rsi]
0x000000000019a4a6 : add dword ptr [rax], eax ; xor al, 0x21 ; clc ; jmp rsp
0x000000000019b9a6 : add dword ptr [rax], eax ; xor al, 0x77 ; std ; call rsp
0x000000000019a8ce : add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x000000000019baae : add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x00000000001aea2e : add dword ptr [rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aebee : add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001b0b2e : add dword ptr [rax], eax ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b3bee : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b716e : add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001af9ee : add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b409e : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x0000000000198a6e : add dword ptr [rax], eax ; xor dh, bl ; jmp rsp
0x00000000001af19e : add dword ptr [rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001ace1e : add dword ptr [rax], eax ; xor dl, bl ; jmp qword ptr [rcx]
0x000000000008e4a1 : add dword ptr [rax], edi ; ret
0x0000000000020ccc : add dword ptr [rax], edi ; ret 0xaf72
0x000000000008e0a6 : add dword ptr [rax], edi ; retf 0xf41
0x000000000011ce5d : add dword ptr [rax], esp ; jne 0x11ce2e ; jmp 0x11cdfb
0x0000000000099aa7 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000984c2 : add dword ptr [rbp + 0x29], eax ; retf
0x0000000000097ced : add dword ptr [rbp + 0x29], eax ; retf 0x634d
0x0000000000097c9a : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x000000000009826a : add dword ptr [rbp + 0x38], eax ; retf 0x6f75
0x00000000000aa99c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000001851e4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000117bef : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00000000000c40bb : add dword ptr [rbp + 1], ecx ; ret
0x0000000000048060 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x000000000003d33d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000008b369 : add dword ptr [rbp - 0x76be2fbf], ecx ; retf 0xf883
0x00000000000de1c6 : add dword ptr [rbp - 0x77], eax ; shr ecx, 1 ; retf
0x0000000000095c20 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x000000000003ad28 : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000008510d : add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000004c5b1 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000001179a4 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rsi + rdx + 0x48], 0x39 ; retf 0xe975
0x00000000000e46ab : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000105d39 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000009751c : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x0000000000097384 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009742c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000001855ca : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x000000000015b7b2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000001841aa : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x00000000000d53a2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000000271e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000011cfe8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000000d5c24 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000d7008 : add dword ptr [rbx + 0x634901e8], eax ; retf 0x144
0x000000000012fa98 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00000000000d5c21 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001145e9 : add dword ptr [rbx + rcx*4 + 0x2c], ecx ; retf 0x894c
0x000000000009dab5 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x000000000009bb71 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00000000000d72ea : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000123c32 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000033391 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000b7109 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000d6d9f : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d89b4 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000001bc484 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001a52da : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x000000000019c913 : add dword ptr [rbx], eax ; ret 0xe01
0x00000000001bc481 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001bc621 : add dword ptr [rbx], ecx ; retf
0x00000000001323c1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000099d44 : add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000054e0f : add dword ptr [rcx + 0x36f30a0d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000d64da : add dword ptr [rcx + 0x39488204], ecx ; retf
0x00000000000ac72f : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000094f80 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000bf2f9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000023dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000024298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000007c36b : add dword ptr [rcx + 0x58b4803], ecx ; retf
0x00000000000e3ea0 : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000d700b : add dword ptr [rcx + 0x63], ecx ; retf 0x144
0x00000000000df589 : add dword ptr [rcx + 0x808b], ecx ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x00000000000b1e71 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x000000000002d712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000013ab3c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000046987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000194fd4 : add dword ptr [rcx - 0x5e2e0003], esp ; std ; call rcx
0x0000000000081e62 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00000000000a2ac6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006c208 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000000dbfe2 : add dword ptr [rcx - 0x77], eax ; retf
0x000000000004bccc : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c30f5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000022d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x0000000000123eff : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009b314 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x000000000009a977 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x0000000000031491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000123d04 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000010de65 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00000000000c2719 : add dword ptr [rcx - 0x7f], eax ; ret
0x000000000008de97 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000012ab7b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x0000000000199485 : add dword ptr [rcx], 0xf65d7400 ; call rsp
0x00000000000ac49b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000012391b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000000000f7124 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000020129 : add dword ptr [rcx], eax ; retf 0xc985
0x0000000000082179 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x0000000000105a1e : add dword ptr [rcx], ebp ; retf
0x00000000000d71e5 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d722f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000109d13 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e812b : add dword ptr [rcx], edi ; ret
0x00000000000d9599 : add dword ptr [rcx], edi ; ret 0xe875
0x0000000000047d78 : add dword ptr [rcx], edi ; retf 0x894c
0x00000000000e5e23 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000e92c3 : add dword ptr [rcx], edi ; sar dword ptr [rdi - 0x18], 1 ; retf 0x91e9
0x0000000000080f5a : add dword ptr [rcx], edx ; add byte ptr [rax + 2], bh ; syscall
0x00000000001850f5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000013c190 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013c150 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013c1df : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001745ba : add dword ptr [rdi + 3], esi ; ret
0x0000000000098246 : add dword ptr [rdi + rcx - 0x4a], eax ; adc eax, dword ptr [rbp + 0x38] ; retf 0x8844
0x00000000000959b7 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000001b0093 : add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001aaf53 : add dword ptr [rdi], 2 ; ret
0x00000000001bc32b : add dword ptr [rdi], 2 ; retf
0x00000000001bb863 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ae37b : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000125170 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d5b98 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002de35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000025942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000001338d8 : add dword ptr [rdi], ecx ; retf 0xc80f
0x00000000000c23b1 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aa9fc : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000aa9e7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000343b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000168ace : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45f2 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000007e5fe : add dword ptr [rdi], ecx ; test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000005d530 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000f56b6 : add dword ptr [rdi], ecx ; test dword ptr [rsi - 0x1600000d], ebx ; retf
0x00000000000835db : add dword ptr [rdi], ecx ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000002423a : add dword ptr [rdi], ecx ; test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000ebee9 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000011fa03 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000046dbc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000ec6fb : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00000000000aa8c5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000aadc0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000a2a84 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000030ef9 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000019c90f : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000000aa60c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006b417 : add dword ptr [rdx + 4], 1 ; ret
0x000000000006b478 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009fbbd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000010971b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001a404e : add dword ptr [rdx + rax], -0xc ; ret
0x00000000000ed1e6 : add dword ptr [rdx + rdx*8 - 0x76b21a8b], eax ; retf 0x894d
0x0000000000184dcf : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000001a53ad : add dword ptr [rdx], 0x43 ; ret
0x00000000001a770e : add dword ptr [rdx], 0x4b ; ret
0x00000000001bad2c : add dword ptr [rdx], 0x51 ; ret
0x00000000001afd04 : add dword ptr [rdx], 0x53 ; ret
0x00000000001ae78d : add dword ptr [rdx], 0x54 ; ret
0x00000000001b2ddb : add dword ptr [rdx], 0x5b ; ret
0x000000000019fbb4 : add dword ptr [rdx], 0x63 ; ret
0x00000000001a02f4 : add dword ptr [rdx], 0x6f ; ret
0x00000000001a3014 : add dword ptr [rdx], 0x77 ; ret
0x000000000019fe1d : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a288c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000001a2664 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000001a7704 : add dword ptr [rdx], 2 ; ret
0x00000000001b5bec : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x0000000000123d0f : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000001bc3fb : add dword ptr [rdx], ecx ; jne 0x1bc408 ; retf
0x00000000001bc671 : add dword ptr [rdx], ecx ; jne 0x1bc67e ; retf
0x000000000019e5a9 : add dword ptr [rdx], ecx ; ret
0x0000000000123d0e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007cba8 : add dword ptr [rip + 0x349bb5], 1 ; ret
0x00000000000334bd : add dword ptr [rsi + 0x39], esp ; retf 0x840f
0x00000000000a2a15 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014a92e : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; retf 0xf66
0x00000000001a71ef : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a145e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a1474 ; ret
0x00000000001a146c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000a2a97 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a8e60 : add dword ptr [rsi], 0x77 ; ret
0x00000000001a44fe : add dword ptr [rsi], 0xa ; ret
0x00000000001ac300 : add dword ptr [rsi], 2 ; ret
0x00000000001abde0 : add dword ptr [rsi], 2 ; retf
0x00000000001a4570 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000001a6cc5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001afe9e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000099b6e : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d732c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd7343 ; je 0xd72d3 ; pop rbx ; ret
0x00000000001aea2d : add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x000000000009dab4 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00000000000343b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af9bd : add dword ptr ds:[rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9a5 : add dword ptr ds:[rax], eax ; call 0x221aeed1
0x00000000001af9d5 : add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9ed : add dword ptr ds:[rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000014d847 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000198f2d : add dword ptr fs:[rax], eax ; in al, 0x20 ; cmc ; jmp rsp
0x00000000000d722e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000001af22d : add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001af19d : add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001bda25 : add eax, 0 ; add byte ptr [rax], al ; retf 7
0x000000000008bb5b : add eax, 0x10 ; ret
0x000000000018abec : add eax, 0x10 ; retf 8
0x000000000008f351 : add eax, 0x10e4a ; ret
0x0000000000134a42 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x000000000002cb3a : add eax, 0x15ffe6 ; ret
0x0000000000020932 : add eax, 0x16bd34 ; ret
0x0000000000020942 : add eax, 0x16dc63 ; ret
0x00000000000bf6f0 : add eax, 0x16e ; ret
0x000000000008bb0f : add eax, 0x1713c ; ret
0x00000000000898af : add eax, 0x1777c ; ret
0x000000000008f1eb : add eax, 0x1b330 ; ret
0x000000000008e647 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00000000001bd205 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001a9cf4 : add eax, 0x2300e44 ; ret 0xe0a
0x00000000001a5c54 : add eax, 0x2300e4a ; ret
0x00000000001a7e04 : add eax, 0x2300e55 ; ret
0x00000000000e15b8 : add eax, 0x24448b49 ; cmp byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000008ebc5 : add eax, 0x26 ; ret
0x0000000000140f25 : add eax, 0x2844e6 ; call qword ptr [rax]
0x0000000000140912 : add eax, 0x284af9 ; call qword ptr [rax]
0x0000000000138382 : add eax, 0x28bb11 ; add rsp, 8 ; ret
0x0000000000138352 : add eax, 0x28bba9 ; add rsp, 8 ; ret
0x00000000001382f2 : add eax, 0x28bc91 ; add rsp, 8 ; ret
0x0000000000138322 : add eax, 0x28bcb9 ; add rsp, 8 ; ret
0x000000000008d9f3 : add eax, 0x29000000 ; ret
0x00000000000c276a : add eax, 0x2907fec1 ; ret 0x8944
0x00000000000c28aa : add eax, 0x2941c229 ; ret 0x6b45
0x00000000001289f2 : add eax, 0x29b5f1 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012c5ba : add eax, 0x29c7fd ; add rsp, 8 ; ret
0x000000000012c5a1 : add eax, 0x29c816 ; test eax, eax ; je 0x12c5b9 ; ret
0x000000000012b9ba : add eax, 0x29d381 ; pop rbx ; ret
0x000000000012b982 : add eax, 0x29d3b9 ; pop rbx ; ret
0x000000000012b8c3 : add eax, 0x29d478 ; pop rbx ; ret
0x000000000012833b : add eax, 0x2a0724 ; test eax, eax ; je 0x128351 ; ret
0x0000000000120fd2 : add eax, 0x2a48a1 ; ret
0x0000000000120690 : add eax, 0x2a51cb ; add rsp, 8 ; ret
0x00000000001bd359 : add eax, 0x2a60000 ; add byte ptr [rax], al ; retf 2
0x000000000011a78c : add eax, 0x2adac6 ; add ecx, ebp ; retf
0x0000000000115ae9 : add eax, 0x2b2632 ; pop rbp ; ret
0x000000000010a342 : add eax, 0x2b9b29 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000101fc0 : add eax, 0x2c525b ; add rsp, 0x18 ; ret
0x0000000000101f6c : add eax, 0x2c52ef ; pop rbp ; pop r12 ; ret
0x0000000000101a28 : add eax, 0x2c57a3 ; add rsp, 8 ; ret
0x00000000001019c9 : add eax, 0x2c5822 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168b54 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fe4f6 : add eax, 0x2c72a5 ; mov rdx, rax ; jmp 0xfe496
0x00000000000fe460 : add eax, 0x2c733b ; add rsp, 8 ; ret
0x00000000000ffaeb : add eax, 0x2c7600 ; add rsp, 8 ; ret
0x00000000000ff5b9 : add eax, 0x2c7a62 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe32f : add eax, 0x2c8c64 ; ret
0x00000000000fe16f : add eax, 0x2c8e24 ; ret
0x00000000000fdf9c : add eax, 0x2c8ff7 ; add rsp, 8 ; ret
0x00000000001a6cc3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000bb7de : add eax, 0x30b1dd ; add rsp, 8 ; ret
0x000000000008d7d7 : add eax, 0x3390ac ; add rsp, 8 ; ret
0x0000000000084110 : add eax, 0x33fdcb ; mov qword ptr [rax], rdi ; ret
0x0000000000081a86 : add eax, 0x342345 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081861 : add eax, 0x34256a ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000084121 : add eax, 0x34269e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cb12 : add eax, 0x348a09 ; ret
0x000000000007cc16 : add eax, 0x349b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000013365d : add eax, 0x358d4800 ; ret
0x000000000006ac85 : add eax, 0x35ba76 ; pop rbx ; pop rbp ; ret
0x00000000001bcb0d : add eax, 0x37b0000 ; add byte ptr [rax], al ; retf
0x0000000000116272 : add eax, 0x37c19 ; ret
0x0000000000116362 : add eax, 0x37ec9 ; ret
0x00000000001b2659 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00000000000368bc : add eax, 0x38d7cb ; mov eax, edx ; ret
0x0000000000036881 : add eax, 0x38d802 ; ret
0x0000000000036871 : add eax, 0x38d816 ; ret
0x000000000003b0e2 : add eax, 0x38e36f ; add rsp, 8 ; ret
0x000000000003c9c1 : add eax, 0x394d0000 ; retf
0x000000000002d9cd : add eax, 0x39641e ; mov qword ptr [rax], rdx ; ret
0x000000000002c7ca : add eax, 0x399259 ; mov eax, ecx ; syscall
0x0000000000029c92 : add eax, 0x39bc59 ; ret
0x0000000000021a52 : add eax, 0x3a78b9 ; ret
0x0000000000021a42 : add eax, 0x3a78d9 ; ret
0x00000000001390f4 : add eax, 0x3d8d4800 ; ret
0x0000000000134ef5 : add eax, 0x3d8d4800 ; ret 0x57c
0x00000000000f5f97 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000016b088 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000166d38 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000a5df6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000125172 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009e95a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x00000000001899bd : add eax, 0x518fff5 ; cmc ; call rax
0x00000000001899c9 : add eax, 0x518fff5 ; cmc ; jmp rax
0x000000000016b109 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000166d79 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000189a41 : add eax, 0x580fff5 ; cmc ; call rax
0x00000000001063e0 : add eax, 0x5b000000 ; pop rbp ; ret
0x000000000006e576 : add eax, 0x5b000000 ; ret
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x0000000000180dfd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000007eed8 : add eax, 0x5c415d5b ; ret
0x0000000000180e0d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000efcbd : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000012b0f2 : add eax, 0x61a2e ; ret
0x0000000000189a4d : add eax, 0x628fff5 ; cmc ; call qword ptr [rcx]
0x00000000001bcd69 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000001bc065 : add eax, 0x6f880002 ; clc ; call rcx
0x000000000019b8c5 : add eax, 0x73240001 ; sti ; call rsp
0x00000000001bc11d : add eax, 0x73f00002 ; clc ; call qword ptr [rdi]
0x00000000000d3257 : add eax, 0x740e3941 ; ret
0x000000000019543d : add eax, 0x740fffc ; cld ; jmp qword ptr [rax]
0x00000000000b9e6a : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000b9e16 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000002e50f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008f9eb : add eax, 0x80 ; ret
0x000000000003d3bd : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000a65fe : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000d9593 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000aa8bf : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000e32e4 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000f846b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001454ed : add eax, 0x83480000 ; ret 0x4910
0x0000000000148041 : add eax, 0x83480000 ; ret 0xe910
0x0000000000145441 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000d543d : add eax, 0x83480f75 ; ret
0x000000000016b08b : add eax, 0x8428d48 ; ret
0x000000000012faeb : add eax, 0x894c0000 ; ret
0x000000000008cdb8 : add eax, 0x894d0000 ; retf
0x000000000006f34e : add eax, 0x89c08500 ; ret 0x8389
0x00000000001159b9 : add eax, 0x89c78944 ; ret
0x0000000000026b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026e6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000a7ca2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000138346 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000138376 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000094440 : add eax, 0xb3db ; ret
0x0000000000094411 : add eax, 0xb63a ; ret
0x0000000000094454 : add eax, 0xbcb47 ; ret
0x000000000008da9c : add eax, 0xbcdbf ; ret
0x000000000008d70c : add eax, 0xbd01f ; ret
0x000000000008f392 : add eax, 0xbeea9 ; ret
0x000000000008b29c : add eax, 0xbf34f ; ret
0x0000000000089cff : add eax, 0xc ; ret
0x000000000014081e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000016f48a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000abc9d : add eax, 0xc210e ; ret
0x00000000000ac879 : add eax, 0xc31f2 ; ret
0x000000000016b10d : add eax, 0xc428d48 ; ret
0x00000000000a743d : add eax, 0xc478d48 ; ret
0x00000000000ac881 : add eax, 0xc5aaa ; ret
0x00000000000310d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000008fa4e : add eax, 0xd ; ret
0x00000000000a827d : add eax, 0xd478d48 ; ret
0x000000000008d3ef : add eax, 0xd99dc ; ret
0x000000000008f87f : add eax, 0xda0cc ; ret
0x000000000008b18f : add eax, 0xda48c ; ret
0x000000000008f99f : add eax, 0xdb7bc ; ret
0x000000000008ebd9 : add eax, 0xdf852 ; ret
0x000000000008ebe1 : add eax, 0xe1fda ; ret
0x0000000000089a9c : add eax, 0xe6dff ; ret
0x00000000001123c7 : add eax, 0xe8000000 ; push rax ; ret 0xfff1
0x000000000012c84d : add eax, 0xe8000000 ; retf 0xf01d
0x000000000009e3ae : add eax, 0xe9000000 ; ret
0x00000000000ac865 : add eax, 0xe916 ; ret
0x000000000011f3ba : add eax, 0xeb000000 ; retf
0x000000000004104d : add eax, 0xebe80000 ; retf
0x00000000000d45f6 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000abc95 : add eax, 0xf596 ; ret
0x0000000000103b32 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000103b57 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000103ca0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103d39 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000080507 : add eax, 0xf6410000 ; ret 0xf01
0x000000000015b7a3 : add eax, 0xf7f0ff3 ; ret
0x000000000004d6d0 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000116231 : add eax, 0xfff8980a ; ret
0x0000000000116321 : add eax, 0xfff89e6a ; ret
0x00000000001163ab : add eax, 0xfff94160 ; ret
0x00000000001bc61c : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; retf
0x00000000001bc3f6 : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1bc40d ; retf
0x00000000001bc66c : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1bc683 ; retf
0x0000000000136dfe : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00000000000569f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00000000000f6a67 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x0000000000109c0b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000001099bc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000aa99a : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f82b : add eax, 1 ; ret
0x00000000000218e5 : add eax, 2 ; push rax ; call rbx
0x00000000000abf38 : add eax, 2 ; ret
0x00000000000abf51 : add eax, 3 ; ret
0x00000000000d71eb : add eax, 8 ; ret
0x0000000000020be9 : add eax, dword ptr [0] ; ret
0x0000000000040f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b1947 : add eax, dword ptr [rax] ; add al, ch ; int1 ; ret 0xfff7
0x000000000010f939 : add eax, dword ptr [rax] ; add al, ch ; jmp rdx
0x00000000000b6075 : add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000041e6d : add eax, dword ptr [rax] ; add al, ch ; retf
0x000000000004486e : add eax, dword ptr [rax] ; add al, ch ; retf 0xfe93
0x000000000007f083 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000045522 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x000000000007dabb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000001a1485 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3c], bl ; in al, dx ; jmp rbx
0x000000000007f057 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x2373
0x0000000000100ce3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xf775
0x00000000000e0bfd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000020c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1de8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001226b8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000014568d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001481e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001456b1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013309e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f81b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000109316 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000115807 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000045b21 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x45af7
0x000000000010289c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000c8123 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000010407d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000001040d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104154 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104254 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000078945 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000abf93 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000001fad0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ee7fb : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x39ee74f0], al ; retf 0x8e0f
0x0000000000146688 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aa9f7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000001383cf : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x0000000000025d7b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x00000000001150d5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddf2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000003af9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x000000000007e602 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080a39 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001255c5 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000115175 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000054f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, 0xdf ; loopne 0x54ed1 ; ret 0xe680
0x00000000000fdc67 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000aac20 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac40 : add eax, dword ptr [rax] ; ret
0x00000000001aa843 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00000000001a4252 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x0000000000123c0d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x123c1e ; ret
0x0000000000168b19 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000074d14 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000019d10a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a200a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000010adaa : add eax, dword ptr [rcx + rdx] ; ret
0x00000000001266fd : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x00000000000f6d3b : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000033e90 : add eax, dword ptr [rdi + 0x20] ; ret
0x00000000001afc62 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; retf
0x00000000000663b5 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x0000000000143dfa : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014371e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000010ab86 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000168c19 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001ab9f0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00000000001a2c52 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001ba6fa : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a0772 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a404a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000001afe9a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000014d63f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aacf1 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000504c8 : add eax, eax ; ret
0x000000000013f006 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008554a : add eax, ebp ; jmp rax
0x0000000000095750 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x0000000000032d64 : add eax, ebp ; retf
0x00000000001163f7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059823 : add eax, ecx ; jmp rax
0x000000000008e8fa : add eax, ecx ; ret
0x000000000009f215 : add eax, edi ; add rax, r8 ; ret
0x000000000008e8f7 : add eax, edi ; add rax, rcx ; ret
0x000000000004b607 : add eax, edi ; jmp rax
0x000000000008d45b : add eax, edi ; ret
0x000000000014a64b : add eax, edi ; sub rax, r8 ; ret
0x000000000014a8a0 : add eax, edi ; sub rax, rdx ; ret
0x00000000000f6a3d : add eax, edx ; cmp rdi, rsi ; ja 0xf6a38 ; ret
0x000000000002ec9a : add eax, edx ; jmp rax
0x000000000012e87e : add eax, edx ; ret
0x000000000008b8b6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000fdc65 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002ebbc : add eax, esi ; jmp rax
0x00000000000bc6c7 : add eax, esi ; ret
0x00000000000504c7 : add eax, r8d ; ret
0x0000000000050198 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001bb865 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00000000000bbabb : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000012bc04 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000001bc4b3 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000183d37 : add ebp, ebp ; retf
0x0000000000196de1 : add ebp, edx ; jmp rsp
0x00000000001bc4b5 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bc4a5 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000003182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000d043e : add ebx, 1 ; mov rdx, rax ; jmp 0xd03e5
0x0000000000143822 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000012413d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001a4268 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000114a2c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000048471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000fea4b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x0000000000003792 : add ebx, ebp ; in al, 0xee ; jne 0x3778 ; ret 0x975
0x0000000000101e61 : add ebx, ebp ; ret
0x000000000006045d : add ebx, ebp ; ret 0x894c
0x00000000000762f3 : add ebx, ebp ; retf
0x000000000018c5f1 : add ebx, edi ; jmp rax
0x000000000015b963 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000010a47f : add ebx, esi ; ret
0x000000000013a78e : add ebx, esp ; call r14
0x000000000008f2e4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8f2d9 ; ret
0x00000000000f5b7f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000123f9d : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000062571 : add ecx, 8 ; mov esi, 1 ; jmp 0x6254f
0x00000000000a2b1a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011e188 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e469 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d53a5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000111914 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000011f709 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000096e31 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x000000000011ee69 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000096c5f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000026b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000724b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000014dc6a : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x000000000010935d : add ecx, dword ptr [rax - 0x42] ; ret
0x000000000012415c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000ff254 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009e93a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000008392e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef98 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000111e07 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x000000000009b121 : add ecx, dword ptr [rax - 0x77] ; retf 0xf43
0x000000000015a784 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000024205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000038f4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000003d37d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000143ae1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000015b6d2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000133962 : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000000a5d94 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000b9896 : add ecx, dword ptr [rcx + 0x39] ; ror dword ptr [rdi + rcx + 0x47], 1 ; retf 0x854d
0x00000000000fa3d9 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x000000000006bd03 : add ecx, dword ptr [rcx + rbp - 0x1e] ; syscall
0x0000000000113294 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000a2b1b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000b9269 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000b7f28 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00000000000539a3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00000000001a7eb2 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6fb8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb61d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000a65c0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001ae37f : add ecx, dword ptr [rdx] ; ret
0x00000000001a52db : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x000000000002be48 : add ecx, eax ; jmp rcx
0x000000000011a791 : add ecx, ebp ; retf
0x0000000000150fbb : add ecx, ebx ; jmp r9
0x0000000000047c96 : add ecx, ebx ; jmp rcx
0x0000000000102454 : add ecx, ebx ; ret
0x0000000000102168 : add ecx, ebx ; ret 0x3944
0x000000000003329c : add ecx, edi ; jmp rcx
0x0000000000063e4a : add ecx, edx ; jmp rcx
0x00000000000aac94 : add ecx, esi ; jmp rcx
0x0000000000132dcd : add edi, 0x10 ; jmp rcx
0x000000000012bf5f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000143be7 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000012e13a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000cc5aa : add edi, 0x28 ; mov eax, r12d ; syscall
0x00000000001154fb : add edi, 0x28 ; mov eax, r9d ; syscall
0x0000000000135874 : add edi, 0x58 ; jmp rcx
0x0000000000134fd4 : add edi, 0x68 ; jmp rcx
0x0000000000132257 : add edi, 0xc8 ; jmp rcx
0x000000000009e914 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000d15fb : add edi, 1 ; test dl, dl ; jne 0xd15e9 ; ret
0x000000000009e925 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009e938 : add edi, 3 ; mov rax, rdi ; ret
0x0000000000032dd1 : add edi, 4 ; call 0x1f8a5
0x000000000009e945 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e958 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009e8e2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000172b6f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000000727c7 : add edi, dword ptr [rcx] ; retf 0xf48
0x00000000000208f4 : add edi, ebp ; call rax
0x00000000001a73d1 : add edi, ebp ; jmp rsi
0x0000000000194e21 : add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000000e1a7d : add edi, ebx ; jmp rdi
0x0000000000150fb8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000019afe1 : add edi, edx ; call rsp
0x0000000000123f75 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa2 : add edi, esi ; jmp rdi
0x00000000001954fd : add edi, esp ; call rax
0x000000000012516e : add edx, 1 ; syscall
0x0000000000123f01 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000009f118 : add edx, eax ; jl 0x9f187 ; add rax, rdi ; ret
0x000000000009f128 : add edx, eax ; jl 0x9f189 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000009f148 : add edx, eax ; jl 0x9f189 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000009f168 : add edx, eax ; jl 0x9f189 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000009e8cc : add edx, eax ; jmp r10
0x00000000000210b8 : add edx, eax ; jmp rdx
0x00000000000490b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000071e9b : add edx, ebx ; cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000000d9645 : add edx, ecx ; jmp 0xd95dd
0x00000000000e1297 : add edx, ecx ; jmp rdx
0x00000000000f65b4 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000188011 : add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000188005 : add edx, esi ; inc eax ; add edx, esi ; jmp rax
0x0000000000188009 : add edx, esi ; jmp rax
0x00000000000c5265 : add edx, esi ; jmp rdx
0x00000000000bb885 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000188001 : add edx, esi ; push qword ptr [rax - 0x3f000dff] ; add edx, esi ; jmp rax
0x000000000018800d : add edx, esi ; push rax ; add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000134025 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a9c49 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001a2dc2 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000000779b8 : add esi, dword ptr [rbx] ; mov rdx, rbp ; call 0x94477
0x00000000001370d4 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137586 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f9029 : add esi, dword ptr [rsi + 0x18] ; mov eax, ecx ; syscall
0x00000000001aff92 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000012dda2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000002a697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x000000000009edea : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee69 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004606b : add esi, eax ; jmp qword ptr [rax]
0x000000000002e8f2 : add esi, eax ; jmp rsi
0x000000000013bde3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001bc485 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001af519 : add esi, ebp ; call qword ptr [rdi]
0x00000000001a58c1 : add esi, ebp ; call qword ptr [rsi]
0x000000000003466c : add esi, ebp ; mov eax, r8d ; syscall
0x000000000015b883 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142fe3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f6bec : add esi, ebx ; ret
0x0000000000035f99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000017088c : add esi, edi ; fadd st(3) ; ret
0x00000000000aacd9 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000033413 : add esi, edi ; jmp rsi
0x0000000000150fb5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000188055 : add esi, edx ; call qword ptr [rax]
0x000000000018804d : add esi, edx ; call rax
0x0000000000188051 : add esi, edx ; push rax ; add esi, edx ; call qword ptr [rax]
0x00000000000d72bb : add esi, esi ; ret
0x000000000006e948 : add esi, esi ; ret 0x7420
0x000000000012eb78 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000088504 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3e6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003adae : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583e : add esp, 0x10 ; pop rbx ; ret
0x0000000000086a77 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9ff1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73f : add esp, 0x100 ; ret
0x000000000008b33d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006ad23 : add esp, 0x1000 ; pop rbx ; ret
0x000000000006ad31 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00000000000359dd : add esp, 0x108 ; ret
0x00000000000f82ae : add esp, 0x120 ; pop rbx ; ret
0x0000000000035d8b : add esp, 0x140 ; pop rbx ; ret
0x00000000000353ab : add esp, 0x148 ; ret
0x00000000001201b0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd42d : add esp, 0x18 ; mov eax, edx ; ret
0x000000000006b316 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab86 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c35c : add esp, 0x18 ; movzx eax, al ; ret
0x000000000009f44b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012cb02 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003b175 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab50 : add esp, 0x18 ; ret
0x00000000000cc262 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7897 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000004a803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc8 : add esp, 0x20 ; pop rbx ; ret
0x0000000000133b69 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7844 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8e : add esp, 0x28 ; jmp rax
0x00000000000206bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044c95 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad3 : add esp, 0x28 ; ret
0x000000000006ac51 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc705 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000121a3a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b88b : add esp, 0x30 ; pop rbx ; ret
0x0000000000121a69 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce098 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a7 : add esp, 0x38 ; ret
0x0000000000035e0c : add esp, 0x40 ; pop rbx ; ret
0x000000000010a408 : add esp, 0x40 ; ret
0x00000000001338f5 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105168 : add esp, 0x408 ; ret
0x000000000004a67c : add esp, 0x440 ; pop rbx ; ret
0x00000000000f8962 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000012f707 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000125174 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f82 : add esp, 0x48 ; ret
0x00000000000acb0c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014081b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000fca3f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7137 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76f0 : add esp, 0x60 ; pop rbx ; ret
0x00000000000e8a71 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013876c : add esp, 0x68 ; ret
0x0000000000136e60 : add esp, 0x70 ; pop rbx ; ret
0x0000000000105d3d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000054e4e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000759a0 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006ba61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007df30 : add esp, 0x80 ; mov rax, r8 ; ret
0x0000000000045383 : add esp, 0x80 ; pop rbx ; ret
0x000000000006b4b9 : add esp, 0x80 ; ret
0x0000000000039edf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000358d3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b99 : add esp, 0x90 ; pop rbx ; ret
0x0000000000036951 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209af : add esp, 0x98 ; ret
0x0000000000136b64 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfd : add esp, 0xa8 ; ret
0x00000000000bc606 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006b62d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000c7f3e : add esp, 0xd0 ; pop rbx ; ret
0x000000000003569a : add esp, 0xd0 ; ret
0x0000000000104f6e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf4 : add esp, 0xd8 ; ret
0x0000000000133063 : add esp, 8 ; add eax, 2 ; ret
0x000000000008d85d : add esp, 8 ; jmp rax
0x0000000000123e8d : add esp, 8 ; lea eax, [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000500df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c44 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7d : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe34 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003a1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859bf : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a90c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5e7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b6 : add esp, 8 ; movzx eax, al ; ret
0x00000000001275da : add esp, 8 ; movzx eax, ax ; ret
0x000000000012e879 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000032dc1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035133 : add esp, 8 ; ret
0x0000000000140661 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000013c454 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d51 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea92b : add esp, 8 ; xor eax, eax ; ret
0x00000000001b2eac : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x000000000018542b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000001953d5 : add esp, edi ; call rax
0x0000000000195475 : add esp, edi ; jmp qword ptr [rax]
0x0000000000195495 : add esp, edi ; jmp rax
0x00000000000ed1e5 : add qword ptr [r10 + rdx*8 - 0x76b21a8b], rax ; retf 0x894d
0x000000000011cfe7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00000000001ae37a : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b0a3d : add qword ptr [r8], r8 ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0afd : add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0ae5 : add qword ptr [r8], r8 ; call 0x221b0062
0x00000000001b0b15 : add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0acd : add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0a55 : add qword ptr [r8], r8 ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0935 : add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0b2d : add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000198c15 : add qword ptr [r8], rax ; adc al, 0x6d ; call rsp
0x000000000010de64 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x00000000000d868e : add qword ptr [rax + 0x74], rax ; adc dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000023c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000011733e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001b0a25 : add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b09c5 : add qword ptr [rax], r8 ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0775 : add qword ptr [rax], r8 ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0a0d : add qword ptr [rax], r8 ; loopne 0x1b0a86 ; cmc ; jmp qword ptr [rcx]
0x00000000001b078d : add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09dd : add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0805 : add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b094d : add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0965 : add qword ptr [rax], r8 ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0835 : add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05bd : add qword ptr [rax], rax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000011f20c : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b055d : add qword ptr [rax], rax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b0635 : add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b0605 : add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ed : add qword ptr [rax], rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000000d64d9 : add qword ptr [rcx + 0x39488204], rcx ; retf
0x0000000000082178 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000001b0092 : add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000168acd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009e8cb : add r10, rax ; jmp r10
0x000000000015b962 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b8f2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b882 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000014a270 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146704 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d823d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000123de1 : add r8b, byte ptr [r8] ; jne 0x123e37 ; mov eax, r8d ; ret
0x000000000009ea74 : add r8b, byte ptr [r8] ; lea rax, [rdi + 2] ; ret
0x000000000009e9e4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019b34d : add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x0000000000054f37 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, 0xdf ; loopne 0x54ed2 ; ret 0xe680
0x0000000000143ae0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000150fba : add r9, r11 ; jmp r9
0x00000000001851e9 : add r9b, bl ; retf 0xea91
0x0000000000026e73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000001234c5 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000ed5b9 : add r9b, r13b ; ret
0x0000000000026e90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000014d422 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000168b53 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000aa999 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abf40 : add rax, 1 ; ret
0x00000000000abf37 : add rax, 2 ; ret
0x00000000000abf50 : add rax, 3 ; ret
0x0000000000020be8 : add rax, qword ptr [0] ; ret
0x0000000000033e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143df9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014371d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000020be7 : add rax, qword ptr fs:[0] ; ret
0x0000000000085549 : add rax, r13 ; jmp rax
0x000000000002ebbb : add rax, r14 ; jmp rax
0x000000000009f217 : add rax, r8 ; ret
0x000000000009ea34 : add rax, r9 ; jmp rax
0x00000000001163f6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059822 : add rax, rcx ; jmp rax
0x000000000008e8f9 : add rax, rcx ; ret
0x000000000009f214 : add rax, rdi ; add rax, r8 ; ret
0x000000000008e8f6 : add rax, rdi ; add rax, rcx ; ret
0x000000000004b606 : add rax, rdi ; jmp rax
0x000000000008d45a : add rax, rdi ; ret
0x000000000014a64a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014a89f : add rax, rdi ; sub rax, rdx ; ret
0x000000000002ec99 : add rax, rdx ; jmp rax
0x000000000008b8b5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004da50 : add rax, rsi ; jmp rax
0x00000000000d043d : add rbx, 1 ; mov rdx, rax ; jmp 0xd03e6
0x000000000013a78d : add rbx, r12 ; call r14
0x00000000000d1922 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x0000000000047c95 : add rcx, r11 ; jmp rcx
0x000000000002be47 : add rcx, r8 ; jmp rcx
0x0000000000063888 : add rcx, rax ; jmp rcx
0x000000000003329b : add rcx, rdi ; jmp rcx
0x0000000000063e49 : add rcx, rdx ; jmp rcx
0x00000000000aac93 : add rcx, rsi ; jmp rcx
0x0000000000132dcc : add rdi, 0x10 ; jmp rcx
0x000000000012bf5e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000143be6 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000012e139 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000cc5a9 : add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000001154fa : add rdi, 0x28 ; mov eax, r9d ; syscall
0x0000000000135873 : add rdi, 0x58 ; jmp rcx
0x0000000000134fd3 : add rdi, 0x68 ; jmp rcx
0x0000000000132256 : add rdi, 0xc8 ; jmp rcx
0x000000000009e913 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000d15fa : add rdi, 1 ; test dl, dl ; jne 0xd15ea ; ret
0x000000000009e924 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009e937 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000032dd0 : add rdi, 4 ; call 0x1f8a6
0x0000000000172b6e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e1a7c : add rdi, r11 ; jmp rdi
0x00000000000208f3 : add rdi, rbp ; call rax
0x0000000000150fb7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000123f74 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa1 : add rdi, rsi ; jmp rdi
0x000000000012516d : add rdx, 1 ; syscall
0x00000000000c325c : add rdx, r8 ; jmp rdx
0x00000000000490b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009f117 : add rdx, rax ; jl 0x9f188 ; add rax, rdi ; ret
0x000000000009f116 : add rdx, rax ; jl 0x9f189 ; add rax, rdi ; ret
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x00000000000d9644 : add rdx, rcx ; jmp 0xd95de
0x00000000000e1296 : add rdx, rcx ; jmp rdx
0x00000000000c5264 : add rdx, rsi ; jmp rdx
0x0000000000134024 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000f9028 : add rsi, qword ptr [r14 + 0x18] ; mov eax, ecx ; syscall
0x00000000000779b7 : add rsi, qword ptr [rbx] ; mov rdx, rbp ; call 0x94478
0x000000000002e8f1 : add rsi, rax ; jmp rsi
0x000000000013bde2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000003466b : add rsi, rbp ; mov eax, r8d ; syscall
0x0000000000033412 : add rsi, rdi ; jmp rsi
0x0000000000088503 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3e5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003adad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b9ff0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73e : add rsp, 0x100 ; ret
0x000000000006ad22 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359dc : add rsp, 0x108 ; ret
0x00000000000f82ad : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d8a : add rsp, 0x140 ; pop rbx ; ret
0x00000000000353aa : add rsp, 0x148 ; ret
0x00000000001201af : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd42c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab85 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c35b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4f : add rsp, 0x18 ; ret
0x00000000000cc261 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc7 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7843 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad2 : add rsp, 0x28 ; ret
0x000000000006ac50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc704 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000121a39 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b88a : add rsp, 0x30 ; pop rbx ; ret
0x00000000000ce097 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a6 : add rsp, 0x38 ; ret
0x0000000000035e0b : add rsp, 0x40 ; pop rbx ; ret
0x000000000010a407 : add rsp, 0x40 ; ret
0x0000000000105167 : add rsp, 0x408 ; ret
0x000000000004a67b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f8961 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000125173 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f81 : add rsp, 0x48 ; ret
0x00000000000acb0b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fca3e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7136 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76ef : add rsp, 0x60 ; pop rbx ; ret
0x000000000013876b : add rsp, 0x68 ; ret
0x0000000000136e5f : add rsp, 0x70 ; pop rbx ; ret
0x0000000000105d3c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000007599f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045382 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b4b8 : add rsp, 0x80 ; ret
0x00000000000358d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b98 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000136b63 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfc : add rsp, 0xa8 ; ret
0x00000000000c7f3d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035699 : add rsp, 0xd0 ; ret
0x0000000000104f6d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf3 : add rsp, 0xd8 ; ret
0x0000000000133062 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008d85c : add rsp, 8 ; jmp rax
0x00000000000500de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859be : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a90b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5e6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001275d9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e878 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035132 : add rsp, 8 ; ret
0x0000000000140660 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013c453 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea92a : add rsp, 8 ; xor eax, eax ; ret
0x000000000009449e : add sil, sil ; ret 0x7404
0x00000000001099d3 : add word ptr [rax], 1 ; ret
0x0000000000198f85 : add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x000000000010971a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000001a5eb0 : and ah, 0xfc ; call qword ptr [rdx]
0x000000000004f418 : and ah, 0xff ; dec dword ptr [rcx + 0x63] ; retf 0x20be
0x0000000000186e24 : and ah, al ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000195741 : and ah, bh ; call rax
0x000000000019531c : and ah, bl ; sti ; call qword ptr [rax]
0x0000000000198dc1 : and ah, dh ; call rsp
0x000000000019df6d : and al, 0 ; add al, ah ; jo 0x19df62 ; call qword ptr [rcx]
0x00000000000a32d1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000096ce1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019e00d : and al, 0 ; add byte ptr [rax], al ; jb 0x19e002 ; jmp qword ptr [rsi]
0x00000000000bf601 : and al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000091f15 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000096c72 : and al, 0 ; je 0x96c89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000851de : and al, 0x10 ; add al, ch ; retf 0xfc54
0x000000000003fddf : and al, 0x10 ; add byte ptr [rbp - 0x36], dh ; jmp 0x3fdba
0x00000000000f771d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f2700 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000136efb : and al, 0x10 ; call qword ptr [r10]
0x00000000000c8b10 : and al, 0x10 ; call rax
0x0000000000135bbf : and al, 0x10 ; call rcx
0x0000000000081a6a : and al, 0x10 ; call rdi
0x0000000000034f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000005e8d5 : and al, 0x10 ; jb 0x5e877 ; mov rdi, r12 ; call 0x7b3a9
0x000000000010eee2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000f35bc : and al, 0x10 ; mov qword ptr [rsp + 8], r13 ; call 0x1f8b1
0x0000000000102e31 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000074fe6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000105ec1 : and al, 0x10 ; mov rdi, r8 ; xor eax, eax ; syscall
0x000000000012c02a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000010edde : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000081953 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x000000000007ef09 : and al, 0x14 ; pop r12 ; ret
0x000000000019b97c : and al, 0x15 ; add dword ptr [rax], eax ; push rsp ; retf 0xfffc
0x000000000004305c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046dba : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x000000000008429b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000014369b : and al, 0x18 ; call 0x1f8ac
0x000000000012caca : and al, 0x18 ; call qword ptr [rax]
0x0000000000024073 : and al, 0x18 ; call r12
0x000000000002082c : and al, 0x18 ; call rax
0x0000000000132787 : and al, 0x18 ; call rcx
0x000000000012c7f9 : and al, 0x18 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137e60 : and al, 0x18 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009e8fd : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000f2db0 : and al, 0x18 ; mov qword ptr [rax], rbx ; call 0x1f8af
0x0000000000081a65 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000021858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000c92b1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000ad667 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000f2dbd : and al, 0x18 ; mov rdi, r10 ; call 0x1f8af
0x0000000000038381 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00000000000750c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000ad917 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000ad3af : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000f0039 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0077
0x00000000000f0038 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0078
0x000000000019d45c : and al, 0x19 ; add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000136d0c : and al, 0x1c ; call qword ptr [r10]
0x000000000012c9d8 : and al, 0x1c ; call qword ptr [rax]
0x00000000001437a5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000e5cb7 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e3636 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f3610 : and al, 0x20 ; call 0x1f8ac
0x0000000000081631 : and al, 0x20 ; call qword ptr [rax]
0x0000000000028abc : and al, 0x20 ; call r14
0x0000000000023e53 : and al, 0x20 ; call r15
0x00000000000819ad : and al, 0x20 ; call rax
0x00000000000ad07b : and al, 0x20 ; call rbx
0x000000000013258f : and al, 0x20 ; call rcx
0x00000000000accdb : and al, 0x20 ; lea rcx, [rax + 4] ; call rbx
0x000000000012bfaa : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x138239
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000ba6ef : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000174322 : and al, 0x25 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000183f64 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000003ce68 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012bfaf : and al, 0x28 ; call 0x138234
0x000000000012bfae : and al, 0x28 ; call 0x138235
0x00000000000335db : and al, 0x28 ; call 0x1f8a4
0x00000000000335da : and al, 0x28 ; call 0x1f8a5
0x0000000000100eec : and al, 0x28 ; call 0xcd1f4
0x0000000000100eeb : and al, 0x28 ; call 0xcd1f5
0x000000000002436c : and al, 0x28 ; call rax
0x00000000000acbb0 : and al, 0x28 ; lea rcx, [rax + 1] ; call rbx
0x00000000000819a8 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000084fb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000001380a4 : and al, 0x2a ; call qword ptr [rax]
0x000000000012c7fe : and al, 0x2c ; call qword ptr [rax]
0x000000000004015f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012cf6d : and al, 0x30 ; call qword ptr [rax]
0x0000000000024807 : and al, 0x30 ; call r12
0x0000000000025592 : and al, 0x30 ; call r14
0x0000000000025352 : and al, 0x30 ; call r15
0x0000000000024d07 : and al, 0x30 ; call rax
0x00000000000248bb : and al, 0x30 ; call rbx
0x0000000000038fe9 : and al, 0x30 ; lea r15, [rbx + r14] ; call rax
0x000000000013c2e9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000bb01e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000005d9df : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000d52a1 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282b1 : and al, 0x38 ; call r14
0x0000000000025b5a : and al, 0x38 ; call r15
0x000000000002804a : and al, 0x38 ; call rbx
0x0000000000112b97 : and al, 0x38 ; jmp 0x112b61
0x0000000000112b96 : and al, 0x38 ; jmp 0x112b62
0x0000000000143689 : and al, 0x38 ; jne 0x143670 ; add rsp, 0x48 ; ret
0x0000000000143688 : and al, 0x38 ; jne 0x143671 ; add rsp, 0x48 ; ret
0x00000000000fdd55 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000001026c4 : and al, 0x39 ; ret
0x000000000009ec46 : and al, 0x39 ; ret 0x2574
0x0000000000137e65 : and al, 0x3a ; call qword ptr [rax]
0x00000000000e1c9a : and al, 0x40 ; add rax, rdx ; jmp rax
0x000000000002686a : and al, 0x40 ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000127ab1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000080f7f : and al, 0x40 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000012a515 : and al, 0x41 ; call rsp
0x00000000000fd42b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cc272 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f693e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000006f1b2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a3a5 : and al, 0x48 ; add esp, 0x38 ; ret
0x000000000010a406 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000000845e3 : and al, 0x48 ; call rax
0x000000000014351d : and al, 0x48 ; mov eax, dword ptr [rax + 0x130] ; jmp rax
0x00000000000ac674 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010584d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bbdad : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000f5a88 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x11 ; syscall
0x0000000000107d08 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x113 ; syscall
0x0000000000107d98 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x114 ; syscall
0x00000000000fc228 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x115 ; syscall
0x0000000000107e58 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x116 ; syscall
0x00000000000f5ae8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000fd5c8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x17 ; syscall
0x0000000000108508 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x2c ; syscall
0x0000000000108328 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x2d ; syscall
0x0000000000108b48 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x45 ; syscall
0x0000000000108ba8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x46 ; syscall
0x0000000000107a08 : and al, 0x49 ; mov edx, ecx ; mov eax, 0xe8 ; syscall
0x0000000000027ac3 : and al, 0x49 ; mov esp, esi ; jmp 0x27a99
0x00000000001b055c : and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000000819e5 : and al, 0x50 ; add al, ch ; ret
0x000000000007ef04 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000012d53b : and al, 0x60 ; call rax
0x0000000000043e31 : and al, 0x60 ; sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x0000000000197d20 : and al, 0x62 ; out dx, al ; call rsp
0x0000000000189de4 : and al, 0x63 ; cmc ; call qword ptr [rbx]
0x0000000000189eb8 : and al, 0x63 ; cmc ; call rsi
0x0000000000189ec8 : and al, 0x63 ; cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x000000000019b458 : and al, 0x66 ; cli ; call rsp
0x00000000000fa3d7 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000000bbdb2 : and al, 0x68 ; call r12
0x00000000000848eb : and al, 0x68 ; call rax
0x0000000000085c7b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000019a6b0 : and al, 0x69 ; clc ; call rsp
0x00000000000e3560 : and al, 0x6c ; shl rsi, 2 ; call 0x1f7f8
0x00000000000e355f : and al, 0x6c ; shl rsi, 2 ; call 0x1f7f9
0x00000000001b295c : and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000143a2d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000ad81d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000ad293 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x000000000019b8c8 : and al, 0x73 ; sti ; call rsp
0x00000000000f5ced : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000003ea8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5bb5 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000d50e7 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8944
0x00000000000b5c12 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000df14f : and al, 0x83 ; ret 0x4801
0x00000000000b67c3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b6f6b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000de975 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000821f6 : and al, 0x89 ; ret 0xb48b
0x00000000000f1f5f : and al, 0x89 ; ret 0xe883
0x000000000012406b : and al, 0x8d ; add dword ptr [r8 - 0x77], ecx ; retf 0xc148
0x0000000000082176 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000000fe170 : and al, 0x8e ; sub al, 0 ; ret
0x0000000000023ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e07c3 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000f4cdb : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000029a6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b5774 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0d9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000002671e : and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000de51e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000db240 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e072b : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000db39c : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000f7675 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000fc54a : and al, 0xa8 ; mov eax, ebx ; syscall
0x00000000000fde52 : and al, 0xb0 ; ret
0x0000000000104580 : and al, 0xb3 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000fcff5 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000fcf95 : and al, 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f7055 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f7275 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000012fb47 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00000000000f72d5 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000f7905 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000cc2a5 : and al, 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000cc305 : and al, 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001017c5 : and al, 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000fde26 : and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000108145 : and al, 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001080b5 : and al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000107fa5 : and al, 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000008e648 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000003583b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab4d : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000001437d0 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000f6ad7 : and al, 0xc ; call rax
0x00000000000f6b1f : and al, 0xc ; mov eax, 0x135 ; syscall
0x00000000000021d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00000000000e0719 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000197810 : and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000000fc499 : and al, 0xc8 ; mov eax, 0x10 ; syscall
0x0000000000107375 : and al, 0xc8 ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x000000000013c84b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010737a : and al, 0xd0 ; syscall
0x0000000000002d42 : and al, 0xd7 ; cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x000000000019a908 : and al, 0xdb ; clc ; call rsp
0x0000000000071868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019a0d8 : and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a128 : and al, 0xe5 ; idiv edi ; push rsp ; ret
0x0000000000034f9c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000119022 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x0000000000035009 : and al, 0xe8 ; ret
0x0000000000112e64 : and al, 0xe8 ; retf 0xfff0
0x000000000004a218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000012e8b0 : and al, 0xf ; retf 0x1089
0x0000000000035027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bb8f6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000bb8fc : and al, 0xf0 ; ret
0x00000000001a9321 : and al, 0xf1 ; jmp rcx
0x0000000000198a21 : and al, 0xf3 ; jmp rsp
0x00000000000cda9a : and al, 0xf3 ; ret
0x0000000000199391 : and al, 0xf6 ; call rsp
0x000000000019a4e1 : and al, 0xf8 ; jmp rsp
0x00000000000945a6 : and al, 0xf8 ; jne 0x94482 ; ret
0x000000000004a1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a1d7 : and al, 0xf8 ; ret
0x000000000019a2b8 : and al, 0xfc ; idiv edi ; pushfq ; retf 1
0x000000000019570d : and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000004a18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000004a191 : and al, 0xfc ; ret
0x00000000000351a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00000000000351ab : and al, 0xfe ; ret
0x00000000000bf1e6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000f79a1 : and al, 1 ; add byte ptr [rax], al ; syscall
0x000000000019aea5 : and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x00000000001bf010 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000012cae1 : and al, 4 ; mov eax, 3 ; syscall
0x0000000000037304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a6708 : and al, 7 ; add byte ptr [rax], al ; ret
0x000000000012833c : and al, 7 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x128350 ; ret
0x000000000003caef : and al, 8 ; add byte ptr [rbp - 0x36], dh ; jmp 0x3caca
0x00000000000ba006 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afec : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f35c1 : and al, 8 ; call 0x1f8ac
0x00000000000554a5 : and al, 8 ; call 0x71f94
0x000000000012e6a7 : and al, 8 ; call qword ptr [rax]
0x0000000000089222 : and al, 8 ; call qword ptr [rdx]
0x000000000010ede3 : and al, 8 ; call rax
0x0000000000102d48 : and al, 8 ; call rbx
0x000000000012d51f : and al, 8 ; call rcx
0x000000000003505a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000013b4af : and al, 8 ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000f7e7a : and al, 8 ; mov eax, 0x101 ; syscall
0x00000000001073d8 : and al, 8 ; mov eax, 0x38 ; syscall
0x00000000001159b1 : and al, 8 ; mov eax, 0xe6 ; syscall
0x000000000003401d : and al, 8 ; mov eax, 2 ; syscall
0x00000000000f7efd : and al, 8 ; mov eax, 3 ; syscall
0x000000000001fc01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036b20 : and al, 8 ; mov eax, ecx ; syscall
0x00000000000f4773 : and al, 8 ; mov rcx, rbp ; call 0xf11c7
0x000000000006de25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013b5ec : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000011ff5b : and al, 8 ; mov rdi, r13 ; call r12
0x00000000001228cb : and al, 8 ; mov rdi, rax ; call 0x8f3b7
0x00000000001228ca : and al, 8 ; mov rdi, rax ; call 0x8f3b8
0x000000000013abaf : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000037d66 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000391a6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000034f3b : and al, 8 ; ret
0x00000000001014d5 : and al, 8 ; syscall
0x00000000000cc39c : and al, 8 ; test rax, rax ; je 0xcc3ac ; call rax
0x00000000000cc39b : and al, 8 ; test rax, rax ; je 0xcc3ad ; call rax
0x000000000013c2ee : and al, 8 ; xor eax, eax ; call rdx
0x0000000000105892 : and al, 8 ; xor eax, eax ; syscall
0x0000000000195304 : and al, ah ; sti ; jmp qword ptr [rax]
0x0000000000195334 : and al, bl ; sti ; push rax ; fsincos ; call rax
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000cc28a : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000920be : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000daf5d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000001add3d : and al, byte ptr [rcx] ; add al, dl ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001ade2d : and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001076a6 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019869d : and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000089a6a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000e35a8 : and al, ch ; cli ; ret 0xfff3
0x000000000010f057 : and al, ch ; ret
0x00000000000f3611 : and al, ch ; xchg eax, ecx ; ret 0xfff2
0x000000000002de32 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd92 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd32 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd72 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000005b489 : and bh, al ; add ch, byte ptr [rip - 0x17000000] ; retf
0x000000000005683e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018a914 : and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x18a918 ; jmp qword ptr [rdx]
0x000000000018a90c : and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000018a8ac : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a8b0 ; jmp qword ptr [rdx]
0x000000000018a948 : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a94c ; jmp qword ptr [rdx]
0x0000000000195f18 : and bh, byte ptr [rsi - 4] ; call qword ptr [rdx + 0x12fffc7d]
0x000000000019b0f9 : and bh, dl ; call rsp
0x00000000001a7c80 : and bl, 0xef ; call rsp
0x00000000000a6ce7 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000001019ca : and bl, byte ptr [rax + 0x2c] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010e74f : and bl, ch ; ret
0x0000000000077b26 : and bl, ch ; retf 0x1f0f
0x000000000006c993 : and bl, ch ; retf 0x2e66
0x000000000003542f : and bl, dh ; ret
0x0000000000110900 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000076b8a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000801b3 : and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000000a9f66 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000f9e52 : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000007b1a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000110a7d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000087a3b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000010f46d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f48d
0x0000000000110901 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000080249 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000073e67 : and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000004ae2c : and byte ptr [rax + 1], cl ; ret
0x000000000009f146 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008b788 : and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000008b8ad : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000008ba6e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000042ba0 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000039fc0 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000194fc0 : and byte ptr [rax - 0x5ecf0003], 0xfd ; jmp qword ptr [rax]
0x0000000000108a9b : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000025111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000bbe72 : and byte ptr [rax - 0x75], cl ; je 0xbbea3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000081f03 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000076b8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000005676c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000f3276 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006dfe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008964b : and byte ptr [rax - 0x77], cl ; jae 0x89661 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e95e3 : and byte ptr [rax - 0x77], cl ; pop rbp ; test al, 0xe9 ; retf 0xfffd
0x000000000003b463 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000c0601 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000141062 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000beb66 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x000000000004698c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000119645 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000022d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00000000000c07e0 : and byte ptr [rax - 0x77], cl ; retf 0x1a74
0x000000000012bd7e : and byte ptr [rax - 0x77], cl ; retf 0x2374
0x000000000004a8b6 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000053382 : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x00000000000c061f : and byte ptr [rax - 0x77], cl ; retf 0xe675
0x000000000012bda1 : and byte ptr [rax - 0x77], cl ; retf 0xe975
0x000000000002350d : and byte ptr [rax - 0x77], cl ; retf 0xed75
0x00000000000ca8ec : and byte ptr [rax - 0x77], cl ; retf 0xee75
0x000000000002c374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x000000000008935f : and byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000022b96 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000801b4 : and byte ptr [rax - 0x7d], cl ; retf
0x00000000000789d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000195b58 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x0000000000195740 : and byte ptr [rax], 0xfc ; call rax
0x00000000000ec9b0 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebb16 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000006d1ca : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000000f9e53 : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000f7fb5 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010e7d1 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x7b226
0x00000000000cdadb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000230ac : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b9
0x00000000000aacbc : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cdac0 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f7941 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000009230e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001953f0 : and byte ptr [rax], al ; cld ; jmp rax
0x00000000000a7e1c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a9f67 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001386ee : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x000000000011ce5e : and byte ptr [rbp - 0x36], dh ; jmp 0x11cdfa
0x00000000000d6d9c : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5ddc : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000185d08 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000032fc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1b6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019d10d : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a200d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a4255 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000001ac9fd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x000000000005a2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000001a7590 : and byte ptr [rbx - 0x11], dh ; call rax
0x000000000004dc5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x000000000006e0d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001b11e0 : and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000195448 : and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x0000000000112749 : and byte ptr [rcx + 0x2b], cl ; je 0x112779 ; xor cl, ch ; retf
0x000000000002981c : and byte ptr [rcx + 0x39], cl ; ret
0x000000000007b1a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000001d90 : and byte ptr [rcx + 0x72b02084], bh ; retf
0x000000000019fce6 : and byte ptr [rcx + 0xa], al ; ret
0x000000000012bfab : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x138238
0x000000000004a805 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000ba6f0 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x000000000004a215 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000021bf : and byte ptr [rcx - 0x4273d1ae], ah ; out dx, al ; nop ; retf 0x3844
0x000000000013cfc8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000022c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x0000000000195e50 : and byte ptr [rcx - 0x786f0004], al ; cld ; jmp qword ptr [rax]
0x0000000000194ef0 : and byte ptr [rcx - 5], cl ; inc dword ptr [rax] ; sti ; jmp rax
0x00000000001b2990 : and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001adc15 : and byte ptr [rcx], al ; add al, ch ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adbfd : and byte ptr [rcx], al ; add al, dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adb9d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001adbb5 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000f82b0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000108871 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000cc411 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000118d0b : and byte ptr [rcx], ch ; retf 0x3ae9
0x0000000000118f23 : and byte ptr [rcx], ch ; retf 0x45e9
0x0000000000076ceb : and byte ptr [rcx], ch ; retf 0x55e9
0x0000000000195444 : and byte ptr [rcx], cl ; cld ; jmp qword ptr [rax]
0x0000000000133b6b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c76e8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001960cc : and byte ptr [rdi - 4], dh ; inc eax ; pop rcx ; cld ; jmp rax
0x000000000002de15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000012dc54 : and byte ptr [rdi], cl ; retf 0x5089
0x0000000000022c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a69d9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000022d78 : and byte ptr [rdi], cl ; test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170950 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000126d40 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00000000000fea8d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000fea2c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001afc65 : and byte ptr [rdx], al ; retf
0x000000000000031b : and byte ptr [rdx], bl ; adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x000000000016e4ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ba6fd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a0775 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000000d7d09 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x0000000000002c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000194e74 : and byte ptr [rsi], dl ; sti ; call qword ptr [rax]
0x00000000000ff321 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001adb9c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000000abf32 : and ch, 0xf ; je 0xabf59 ; add rax, 2 ; ret
0x000000000019522c : and ch, 0xfb ; call qword ptr [rax]
0x0000000000003d50 : and ch, byte ptr [rcx] ; in eax, 0x3a ; retf 0xd08a
0x00000000001a2490 : and ch, dh ; in al, dx ; call qword ptr [rsi]
0x0000000000198f31 : and ch, dh ; jmp rsp
0x00000000000abf1d : and cl, 0xf ; je 0xabf45 ; ret
0x000000000000395a : and cl, ah ; ret
0x0000000000094e5d : and cl, byte ptr [rax - 0x77] ; fucomip st(0) ; retf 0xf8a9
0x0000000000047254 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000094f88 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008eccd : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000119605 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x000000000007fc79 : and cl, ch ; imul esi, ebp, 0x3d8bffff ; retf
0x0000000000051158 : and cl, ch ; ret 0xfffa
0x0000000000053ef0 : and cl, ch ; retf 0xfff1
0x00000000001989f9 : and dh, bl ; jmp rsp
0x0000000000101556 : and dh, byte ptr [rcx - 0x3776fff8] ; syscall
0x00000000001b2a21 : and dh, dh ; jmp qword ptr [rsi]
0x00000000000dc5df : and dh, dh ; ret
0x000000000008f2f7 : and dh, dh ; ret 0x7504
0x00000000001ab011 : and dh, dl ; jmp qword ptr [rcx]
0x000000000005b488 : and dil, al ; add ch, byte ptr [rip - 0x17000000] ; retf
0x000000000005683d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000195308 : and dl, ah ; sti ; jmp qword ptr [rax]
0x0000000000195a48 : and dl, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc51]
0x00000000000abc9f : and dword ptr [rax + rax], ecx ; ret
0x00000000000d2f67 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x0000000000166de9 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000000d9a8 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000c028 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x11
0x00000000000f7971 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000016342e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004fff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000185a82 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000072cbf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006f779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x0000000000189fec : and dword ptr [rcx - 0x6982000b], ebx ; cmc ; jmp qword ptr [rbx]
0x0000000000124116 : and dword ptr [rcx - 0xa], eax ; ret
0x000000000010766c : and dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000042203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000b0f2b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000035f66 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000077ef0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000360c8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000186b50 : and dword ptr [rdx - 0x13], 0xedb99cff ; call qword ptr [rsi]
0x00000000001266ca : and dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000008167b : and dword ptr [rip + 0x394d0034], edi ; ret 0x8948
0x0000000000182b39 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a680b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000185a81 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000166de8 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x00000000001745a6 : and eax, 0 ; add bl, dh ; ret
0x0000000000020beb : and eax, 0 ; ret
0x00000000000fc313 : and eax, 0x100f ; ret
0x000000000017435d : and eax, 0x1740025 ; ret
0x000000000003518a : and eax, 0x200 ; ret
0x0000000000140ecb : and eax, 0x281a70 ; ret
0x0000000000107414 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000cd226 : and eax, 0x2d0 ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d857 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002084d : and eax, 0x30 ; call rax
0x0000000000039fc9 : and eax, 0x30 ; call rdx
0x0000000000035322 : and eax, 0x30 ; jmp rax
0x000000000002f6d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004d398 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000aac1d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000aac3d : and eax, 0x3fc00 ; ret
0x00000000000aabfc : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000001a362c : and eax, 0x4000001 ; ret 0x18f
0x0000000000174323 : and eax, 0x5be17500 ; ret
0x000000000002df22 : and eax, 0x7f ; ret
0x00000000000aac70 : and eax, 0x7ff80000 ; ret
0x0000000000034b44 : and eax, 0x80 ; ret
0x0000000000034c07 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000077402 : and eax, 0x804 ; ret
0x00000000000fea4d : and eax, 0x83489066 ; ret 0x3c01
0x00000000000d9609 : and eax, 0x8348d231 ; ret 0x4801
0x00000000000f0eff : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000812c3 : and eax, 0x950f4100 ; ret
0x0000000000115157 : and eax, 0xc ; cmp eax, 4 ; je 0x115168 ; ret
0x0000000000115328 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000006d360 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001745b5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000107551 : and eax, 0xfff ; or eax, edi ; ret
0x000000000011941d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000001193b8 : and eax, 0xffffff ; ret
0x0000000000123023 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000101e5f : and eax, 1 ; jmp 0x101e2b
0x00000000000d72e8 : and eax, 1 ; pop rbx ; ret
0x000000000002ded2 : and eax, 1 ; ret
0x00000000000d71e8 : and eax, 2 ; add eax, 8 ; ret
0x000000000002dd52 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d7234 : and eax, 2 ; ret
0x000000000004846c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ddf2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd12 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034e74 : and eax, 8 ; ret
0x000000000013de92 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cc2ea : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000163285 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d99fa : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00000000001adf25 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000107981 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001adef5 : and eax, dword ptr [rcx] ; add byte ptr [rax], cl ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000168bf9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000036558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000002d17 : and eax, ebp ; clc ; ret
0x0000000000188f10 : and eax, ebx ; jmp qword ptr [rdx]
0x000000000019a4a9 : and eax, edi ; jmp rsp
0x0000000000034852 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034792 : and eax, edx ; ret
0x00000000000347e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002e0ed : and eax, esi ; ret
0x00000000000fb511 : and ebp, eax ; leave ; ret
0x0000000000072cc0 : and ebp, edi ; pop rbx ; ret
0x00000000001150f2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x115105 ; ret
0x00000000000d732f : and ebx, 8 ; je 0xd72d0 ; pop rbx ; ret
0x0000000000184234 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x00000000001890c4 : and ebx, ebx ; call qword ptr [rcx]
0x0000000000186d98 : and ebx, esp ; in eax, dx ; dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dac : and ebx, esp ; in eax, dx ; inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186df0 : and ebx, esp ; in eax, dx ; inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186ce8 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e20 : and ebx, esp ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000186db8 : and ebx, esp ; in eax, dx ; lcall [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e18 : and ebx, esp ; in eax, dx ; push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d58 : and ebx, esp ; in eax, dx ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000003afb8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x000000000016fa65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016f198 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000758c0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000802cb : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f081b : and ecx, dword ptr [rax - 0x75] ; je 0xf084c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012cc8e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008635c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000007ef55 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000007cc4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000127846 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000ff969 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00000000000ff9c2 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000012786d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x0000000000196851 : and ecx, ebp ; call rsp
0x000000000002df32 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000759b3 : and edx, 1 ; mov eax, edx ; ret
0x00000000000cda70 : and edx, dword ptr [rcx + 0xffb8] ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x0000000000002bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004a1ee : and esi, 0xe0837fff ; jg 0x4a207 ; ret 0x5488
0x0000000000081a88 : and esi, dword ptr [rax + rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000001ab089 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2961 : and esi, esi ; jmp qword ptr [rsi]
0x0000000000195745 : and esp, edi ; jmp qword ptr [rax]
0x00000000000cc73e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000035f65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000360c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077b25 : and r11b, bpl ; retf 0x1f0f
0x0000000000081a87 : and r14d, dword ptr [r8 + rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000036557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034851 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000001b2c78 : and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a50 : and sil, sil ; jmp qword ptr [rsi]
0x0000000000034bcb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034bc8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000071382 : bnd call 0x7b227 ; mov edx, eax ; jmp 0x71328
0x00000000000f41cd : bnd call qword ptr [rax + 0x1b8] ; add cl, ch ; ret
0x0000000000188066 : bnd call qword ptr [rax - 0x4f000dfc] ; add al, 0xf2 ; call rax
0x0000000000188046 : bnd call qword ptr [rax - 0x4f000dfd] ; add esi, edx ; call rax
0x00000000001882ca : bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x0000000000188092 : bnd call rax ; add al, 0xf2 ; jmp rax
0x000000000018804e : bnd call rax ; add esi, edx ; push rax ; add esi, edx ; call qword ptr [rax]
0x000000000018830a : bnd call rdi ; sub edx, esi ; call rax
0x0000000000123ec7 : bnd jb 0x123ebc ; mov eax, 0xffffffff ; ret
0x000000000009ebb9 : bnd je 0x9ebb4 ; ret
0x00000000000adac7 : bnd je 0xadad6 ; test edx, edx ; jne 0xadac8 ; ret
0x0000000000188026 : bnd jmp qword ptr [rax - 0x3f000dfe] ; add dh, dl ; jmp rax
0x000000000018802e : bnd jmp rax ; add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000187fda : bnd jmp rax ; add dl, dh ; call qword ptr [rax]
0x00000000000965aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008eb30 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008eb40 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000008eb50 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000008eb20 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000008ea6f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000967a3 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000008f825 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008b756 : bsf eax, edx ; ret
0x000000000008b8b2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000968c0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x000000000008b7a2 : bsf rax, rdx ; ret
0x000000000009f211 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008d457 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0e0 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000009f0f0 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000009f100 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x000000000008d6db : bsr eax, esi ; add rax, rdi ; ret
0x000000000008d5e9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x000000000008d4e5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x000000000008d456 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008d6da : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008d5e8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000008d4e4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000013599d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000119392 : bswap eax ; ret
0x0000000000002bfb : bswap ebx ; clc ; ret
0x0000000000102995 : bswap edi ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1029a5 ; call rbx
0x0000000000111f7c : call 0x10ea72
0x0000000000112297 : call 0x10ed22
0x0000000000064055 : call 0x11064057
0x0000000000064582 : call 0x11064584
0x0000000000064d3c : call 0x11064d3e
0x0000000000065126 : call 0x11065128
0x0000000000066b8b : call 0x11066b8d
0x000000000006903b : call 0x1106903d
0x000000000006a04f : call 0x1106a051
0x000000000019bc68 : call 0x1119a4bc
0x0000000000057fc9 : call 0x114a72
0x0000000000088e1e : call 0x115082
0x00000000000c8683 : call 0x1150b2
0x00000000000fd9ed : call 0x11a422
0x00000000001a4618 : call 0x121a3393
0x000000000010d8bd : call 0x12a392
0x000000000013302e : call 0x12f302
0x000000000019d988 : call 0x1319c2d5
0x000000000019ed98 : call 0x1319d758
0x00000000001ba1a8 : call 0x131b99af
0x000000000012bf3c : call 0x138232
0x000000000019da38 : call 0x1819c38b
0x00000000001acec8 : call 0x181ac2aa
0x000000000019bbf2 : call 0x1b86f8
0x000000000019bbf1 : call 0x1b86f9
0x000000000004acc8 : call 0x1f1477ba
0x00000000000e3566 : call 0x1f7f2
0x0000000000023659 : call 0x1f8a2
0x00000000000e35a9 : call 0x1f8aa
0x00000000000f3fdd : call 0x2027b
0x000000000004d5bc : call 0x2104d5be
0x000000000004dbeb : call 0x2104dbed
0x000000000004dc99 : call 0x2104dc9b
0x000000000004e0e1 : call 0x2104e0e3
0x000000000004e0f0 : call 0x2104e0f2
0x000000000004f9b4 : call 0x2104f9b6
0x000000000004fb2c : call 0x2104fb2e
0x00000000001acdd8 : call 0x221ac1b9
0x00000000001adc18 : call 0x221ad0b3
0x00000000001af9a8 : call 0x221aeece
0x00000000001b0ae8 : call 0x221b005f
0x00000000001b2c18 : call 0x271b2242
0x00000000001b2ac8 : call 0x271b23e8
0x00000000001b2af8 : call 0x271b2418
0x00000000001b2b28 : call 0x271b2448
0x00000000001b2b58 : call 0x271b2478
0x00000000001b2b88 : call 0x271b24a8
0x00000000001b2bb8 : call 0x271b24d8
0x00000000001a8248 : call 0x281a7296
0x00000000001ab208 : call 0x281aa438
0x00000000001ab208 : call 0x281aa439
0x0000000000021958 : call 0x2dc42
0x00000000001123cb : call 0x2e622
0x00000000000ed472 : call 0x39762
0x000000000002cce5 : call 0x39772
0x000000000005fabe : call 0x3bd42
0x0000000000088d37 : call 0x55772
0x00000000000554a7 : call 0x71f92
0x0000000000065d5f : call 0x71fd2
0x000000000004b517 : call 0x777f2
0x000000000004e7d8 : call 0x7b222
0x000000000005f111 : call 0x7b3a2
0x0000000000080fe1 : call 0x7d282
0x000000000008334b : call 0x7fd52
0x0000000000085893 : call 0x81b82
0x00000000000869a4 : call 0x82bd2
0x00000000000bda2d : call 0x89d12
0x000000000004f2b0 : call 0x8b5a2
0x000000000009f483 : call 0x8b722
0x00000000000230b3 : call 0x8f3b2
0x00000000000779bd : call 0x94472
0x0000000000100eee : call 0xcd1f2
0x00000000000d4e19 : call 0xd1872
0x00000000000f4037 : call 0xf0332
0x00000000000f4778 : call 0xf11c2
0x00000000000fa5d9 : call 0xf7032
0x00000000000faedb : call 0xf78e2
0x00000000000fb0b3 : call 0xf7ac2
0x0000000000100dba : call 0xfcfd2
0x000000000003508d : call 0xffffffff816a131d
0x000000000007f92e : call 0xffffffff830cc3b8
0x00000000001230e7 : call 0xffffffff895bf377
0x00000000000e92c7 : call 0xffffffff91f85ccf
0x00000000001853da : call 0xffffffffab261ed0
0x00000000000a6644 : call 0xffffffffc30a6654
0x00000000000aa836 : call 0xffffffffc30f358c
0x00000000000aa84f : call 0xffffffffc30f35a5
0x00000000000470a0 : call 0xffffffffc33db8aa
0x000000000010e560 : call 0xffffffffc34a2d6a
0x000000000010e7fc : call 0xffffffffc34a3006
0x00000000000ad15c : call 0xffffffffc36712c2
0x0000000000110178 : call 0xffffffffc39a4d82
0x000000000016b9b5 : call 0xffffffffc39cc8ce
0x000000000016ca35 : call 0xffffffffc39cd94e
0x00000000000372fd : call 0xffffffffc3b2824e
0x000000000008f967 : call 0xffffffffc3d982b8
0x0000000000089a77 : call 0xffffffffc40123c8
0x000000000008b277 : call 0xffffffffc4013bc8
0x00000000001ab4b8 : call 0xffffffffcc1aa722
0x00000000001b6658 : call 0xffffffffd21b5d8f
0x0000000000034f57 : call 0xffffffffe28511e7
0x0000000000136d0e : call qword ptr [r10]
0x000000000007d8af : call qword ptr [r15]
0x0000000000194f53 : call qword ptr [rax + 0x10fffb74]
0x0000000000194f5b : call qword ptr [rax + 0x10fffb77]
0x0000000000194f63 : call qword ptr [rax + 0x10fffb7a]
0x0000000000194f6b : call qword ptr [rax + 0x10fffb7d]
0x0000000000194f73 : call qword ptr [rax + 0x10fffb80]
0x0000000000194f7b : call qword ptr [rax + 0x10fffb83]
0x0000000000194f83 : call qword ptr [rax + 0x10fffb86]
0x0000000000195c13 : call qword ptr [rax + 0x10fffc35]
0x0000000000195bd7 : call qword ptr [rax + 0x10fffc36]
0x0000000000195c1b : call qword ptr [rax + 0x10fffc38]
0x0000000000195bdf : call qword ptr [rax + 0x10fffc39]
0x0000000000195c23 : call qword ptr [rax + 0x10fffc3b]
0x0000000000195be7 : call qword ptr [rax + 0x10fffc3c]
0x0000000000195c2b : call qword ptr [rax + 0x10fffc3e]
0x0000000000195bef : call qword ptr [rax + 0x10fffc3f]
0x0000000000195c33 : call qword ptr [rax + 0x10fffc41]
0x0000000000195bf7 : call qword ptr [rax + 0x10fffc42]
0x0000000000195c3b : call qword ptr [rax + 0x10fffc44]
0x0000000000195bff : call qword ptr [rax + 0x10fffc45]
0x0000000000195c43 : call qword ptr [rax + 0x10fffc47]
0x0000000000195c07 : call qword ptr [rax + 0x10fffc48]
0x0000000000195b7b : call qword ptr [rax + 0x10fffc53]
0x0000000000195b73 : call qword ptr [rax + 0x10fffc54]
0x0000000000195b6b : call qword ptr [rax + 0x10fffc55]
0x0000000000195b63 : call qword ptr [rax + 0x10fffc56]
0x0000000000195b5b : call qword ptr [rax + 0x10fffc57]
0x0000000000195b93 : call qword ptr [rax + 0x10fffc58]
0x0000000000196553 : call qword ptr [rax + 0x10fffca4]
0x00000000001953eb : call qword ptr [rax + 0x20fffc0d]
0x0000000000195967 : call qword ptr [rax + 0x20fffc5f]
0x0000000000195c7b : call qword ptr [rax + 0x20fffc83]
0x0000000000195e53 : call qword ptr [rax + 0x20fffc87]
0x0000000000196173 : call qword ptr [rax + 0x20fffcaa]
0x00000000001950b7 : call qword ptr [rax + 0x20fffda6]
0x0000000000195733 : call qword ptr [rax - 0x1f0003e4]
0x00000000001956df : call qword ptr [rax - 0x1f0003eb]
0x0000000000195567 : call qword ptr [rax - 0x1f000410]
0x0000000000195513 : call qword ptr [rax - 0x1f000417]
0x0000000000195387 : call qword ptr [rax - 0x1f00042e]
0x000000000019539b : call qword ptr [rax - 0x1f00043c]
0x0000000000194f43 : call qword ptr [rax - 0x1f000493]
0x00000000000348fc : call qword ptr [rax - 0x3d]
0x000000000000305f : call qword ptr [rax]
0x000000000000358e : call qword ptr [rbx]
0x0000000000189077 : call qword ptr [rcx - 0x34000c23]
0x00000000000515ce : call qword ptr [rcx]
0x0000000000181e23 : call qword ptr [rdi - 0x34001531]
0x000000000007d8b0 : call qword ptr [rdi]
0x0000000000195f3b : call qword ptr [rdx + 0x12fffc79]
0x0000000000195f33 : call qword ptr [rdx + 0x12fffc7a]
0x0000000000195f2b : call qword ptr [rdx + 0x12fffc7b]
0x0000000000195f23 : call qword ptr [rdx + 0x12fffc7c]
0x0000000000195f1b : call qword ptr [rdx + 0x12fffc7d]
0x0000000000195a4b : call qword ptr [rdx + 0x22fffc51]
0x000000000019583b : call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d27 : call qword ptr [rdx + 0x22fffc85]
0x000000000019621f : call qword ptr [rdx + 0x22fffcac]
0x00000000001888c3 : call qword ptr [rdx - 0x1b000c89]
0x0000000000089224 : call qword ptr [rdx]
0x0000000000195797 : call qword ptr [rsi + 0x26fffc61]
0x0000000000195cc3 : call qword ptr [rsi + 0x26fffc82]
0x00000000001961bb : call qword ptr [rsi + 0x26fffca9]
0x00000000000093a8 : call qword ptr [rsi]
0x0000000000024075 : call r12
0x0000000000021be2 : call r14
0x0000000000023e55 : call r15
0x000000000006cb4b : call r8
0x000000000011495f : call r9
0x000000000002082e : call rax
0x000000000002185d : call rbx
0x000000000002b398 : call rcx
0x0000000000023e56 : call rdi
0x0000000000039fce : call rdx
0x0000000000021be3 : call rsi
0x0000000000024076 : call rsp
0x000000000014fcd7 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012fae9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x000000000002c534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001b5475 : cdq ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x000000000001f92b : cdq ; cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000134d83 : cdq ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013366f : cdq ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffee
0x0000000000188ea8 : cdq ; fcomip st(3) ; jmp rcx
0x00000000001ade31 : cdq ; hlt ; jmp qword ptr [rcx]
0x000000000003a6a4 : cdq ; idiv rsi ; ret
0x00000000001852e0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000b33f3 : cdq ; or eax, 0x3d8d4800 ; ret
0x00000000000711f3 : cdq ; or eax, 0xc2890000 ; jmp 0x7118f
0x0000000000032e03 : cdq ; retf 0xfffe
0x00000000000fc1ee : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000012415d : cdqe ; shr rax, 4 ; ret
0x0000000000061d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000000821f3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000e2fda : clc ; add al, 0x75 ; retf 0x8b48
0x00000000000fdb18 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000517ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000002b0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x000000000005715d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c8 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000070cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000959e3 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001bb33d : clc ; add dword ptr [rax], eax ; jo 0x1bb2dd ; sti ; jmp qword ptr [rdx]
0x0000000000099aa6 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x000000000008510c : clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x0000000000033390 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000c23b0 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aa8c4 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000123025 : clc ; add eax, 0x10 ; ret
0x00000000000c2769 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x000000000004d6cf : clc ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000009b120 : clc ; add ecx, dword ptr [rax - 0x77] ; retf 0xf43
0x000000000012dda1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009f216 : clc ; add rax, r8 ; ret
0x000000000008e8f8 : clc ; add rax, rcx ; ret
0x0000000000116472 : clc ; add rsp, 8 ; ret
0x000000000002df21 : clc ; and eax, 0x7f ; ret
0x00000000001193b7 : clc ; and eax, 0xffffff ; ret
0x00000000001ab148 : clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2a08 : clc ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000119391 : clc ; bswap eax ; ret
0x00000000001bb8f2 : clc ; call qword ptr [rax]
0x00000000001bb592 : clc ; call qword ptr [rbx]
0x00000000001bc372 : clc ; call qword ptr [rcx]
0x00000000001bbf4a : clc ; call qword ptr [rdi]
0x00000000001bae72 : clc ; call qword ptr [rdx]
0x00000000001bc06a : clc ; call rcx
0x000000000019a3f2 : clc ; call rsp
0x0000000000123001 : clc ; cmc ; je 0x122ffd ; pop rbx ; ret
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016fa09 : clc ; cmp rcx, rax ; jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016fa08 : clc ; cmp rcx, rax ; jne 0x16fa3c ; xor eax, eax ; ret
0x0000000000170849 : clc ; cmp rcx, rax ; jne 0x17087b ; xor eax, eax ; ret
0x0000000000170848 : clc ; cmp rcx, rax ; jne 0x17087c ; xor eax, eax ; ret
0x000000000003a6a2 : clc ; cqo ; idiv rsi ; ret
0x00000000000878d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000078b0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fe5f3 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002db97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001400b2 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000096e85 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fef6f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000105dd5 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000004d6d4 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed90 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000138409 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000004cdba : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000012], edx ; retf
0x0000000000075f7d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000019a6aa : clc ; inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x00000000000ffd99 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000002b76b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000026cfe : clc ; jg 0x26c8d ; ret 0x5c77
0x000000000019e598 : clc ; jl 0x19e587 ; jmp rsp
0x00000000001bab22 : clc ; jmp qword ptr [rbx]
0x00000000001baeba : clc ; jmp qword ptr [rcx]
0x000000000004b608 : clc ; jmp rax
0x000000000019a382 : clc ; jmp rsp
0x000000000017282a : clc ; jne 0x172937 ; ret
0x0000000000172829 : clc ; jne 0x172938 ; ret
0x00000000000945a7 : clc ; jne 0x94481 ; ret
0x00000000001153e4 : clc ; leave ; ret
0x00000000001860f8 : clc ; loope 0x1860fd ; jmp qword ptr [rdi]
0x0000000000186178 : clc ; loope 0x18617d ; jmp qword ptr [rdi]
0x00000000001861f8 : clc ; loope 0x1861fd ; jmp qword ptr [rdi]
0x0000000000186278 : clc ; loope 0x18627d ; jmp qword ptr [rdi]
0x00000000001862f8 : clc ; loope 0x1862fd ; jmp qword ptr [rdi]
0x0000000000186378 : clc ; loope 0x18637d ; jmp qword ptr [rdi]
0x00000000001b64a8 : clc ; loope 0x1b64a9 ; call rsi
0x000000000019ecb8 : clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000000ff2c8 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009ea18 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000183f42 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001444ef : clc ; mov eax, 0x3e ; syscall
0x000000000013c911 : clc ; mov eax, 3 ; syscall
0x00000000001277a6 : clc ; mov eax, r14d ; syscall
0x0000000000003824 : clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000152a07 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153377 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac77 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000153577 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abe7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000153777 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab57 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152a23 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009fb8c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000f6c29 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000004a1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000001a9a48 : clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x000000000002121c : clc ; neg eax ; ret
0x000000000008b3c7 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000008b371 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00000000001a6388 : clc ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0a28 : clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000009f516 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009735b : clc ; pop rbx ; ret
0x000000000007469a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000014299f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c89ad : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000484c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000115b71 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000072cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007b595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000019a682 : clc ; push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000019a312 : clc ; push rsp ; retf
0x0000000000002bd1 : clc ; ret
0x0000000000194332 : clc ; ret 0x6e1f
0x00000000000230b4 : clc ; ret 6
0x0000000000034962 : clc ; retf
0x000000000011b8c8 : clc ; retf 0x2a
0x000000000014abc4 : clc ; rol ch, 1 ; jns 0x14aba5 ; retf 0xead3
0x000000000014ad14 : clc ; rol ch, 1 ; jns 0x14acf5 ; retf 0xead3
0x000000000014ae64 : clc ; rol ch, 1 ; jns 0x14ae45 ; retf 0xead3
0x000000000014afb4 : clc ; rol ch, 1 ; jns 0x14af95 ; retf 0xead3
0x000000000014b104 : clc ; rol ch, 1 ; jns 0x14b0e5 ; retf 0xead3
0x000000000014b254 : clc ; rol ch, 1 ; jns 0x14b235 ; retf 0xead3
0x000000000014b3a4 : clc ; rol ch, 1 ; jns 0x14b385 ; retf 0xead3
0x000000000014b4f4 : clc ; rol ch, 1 ; jns 0x14b4d5 ; retf 0xead3
0x000000000014b644 : clc ; rol ch, 1 ; jns 0x14b625 ; retf 0xead3
0x000000000014b794 : clc ; rol ch, 1 ; jns 0x14b775 ; retf 0xead3
0x000000000014b8e4 : clc ; rol ch, 1 ; jns 0x14b8c5 ; retf 0xead3
0x000000000014ba34 : clc ; rol ch, 1 ; jns 0x14ba15 ; retf 0xead3
0x000000000014bb84 : clc ; rol ch, 1 ; jns 0x14bb65 ; retf 0xead3
0x000000000014bcd4 : clc ; rol ch, 1 ; jns 0x14bcb5 ; retf 0xead3
0x000000000014be24 : clc ; rol ch, 1 ; jns 0x14be05 ; retf 0xead3
0x000000000014c294 : clc ; rol ch, 1 ; jns 0x14c275 ; retf 0xead3
0x000000000014c414 : clc ; rol ch, 1 ; jns 0x14c3f5 ; retf 0xead3
0x000000000014c594 : clc ; rol ch, 1 ; jns 0x14c575 ; retf 0xead3
0x000000000014c714 : clc ; rol ch, 1 ; jns 0x14c6f5 ; retf 0xead3
0x000000000014c894 : clc ; rol ch, 1 ; jns 0x14c875 ; retf 0xead3
0x000000000014ca14 : clc ; rol ch, 1 ; jns 0x14c9f5 ; retf 0xead3
0x000000000014cb94 : clc ; rol ch, 1 ; jns 0x14cb75 ; retf 0xead3
0x000000000014cd14 : clc ; rol ch, 1 ; jns 0x14ccf5 ; retf 0xead3
0x000000000014ce94 : clc ; rol ch, 1 ; jns 0x14ce75 ; retf 0xead3
0x000000000014d014 : clc ; rol ch, 1 ; jns 0x14cff5 ; retf 0xead3
0x000000000014d194 : clc ; rol ch, 1 ; jns 0x14d175 ; retf 0xead3
0x000000000014d314 : clc ; rol ch, 1 ; jns 0x14d2f5 ; retf 0xead3
0x000000000014d494 : clc ; rol ch, 1 ; jns 0x14d475 ; retf 0xead3
0x000000000014d614 : clc ; rol ch, 1 ; jns 0x14d5f5 ; retf 0xead3
0x000000000014d794 : clc ; rol ch, 1 ; jns 0x14d775 ; retf 0xead3
0x00000000001193a1 : clc ; ror ax, 8 ; ret
0x000000000003a633 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000011909b : clc ; sar rax, 6 ; ret
0x00000000000d4f61 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000048a2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000119437 : clc ; shr eax, 0x18 ; ret
0x0000000000195581 : clc ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000003cc4 : clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001ab288 : clc ; sub esi, edx ; jmp rcx
0x000000000014a64c : clc ; sub rax, r8 ; ret
0x000000000014a8a1 : clc ; sub rax, rdx ; ret
0x000000000002c1f2 : clc ; syscall
0x000000000002b392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00000000001a7b78 : clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001adae8 : clc ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001ace34 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x0000000000034ab5 : cld ; adc eax, 0x540f6600 ; ret 0xf66
0x000000000019804d : cld ; add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x00000000001a11ac : cld ; add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000000cda22 : cld ; add byte ptr [rax], al ; ret
0x00000000000f56b5 : cld ; add dword ptr [rdi], ecx ; test dword ptr [rsi - 0x1600000d], ebx ; retf
0x00000000000aac1f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3f : cld ; add eax, dword ptr [rax] ; ret
0x00000000001b0934 : cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0834 : cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b0634 : cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195c12 : cld ; call qword ptr [rax + 0x10fffc35]
0x0000000000195bd6 : cld ; call qword ptr [rax + 0x10fffc36]
0x0000000000195c1a : cld ; call qword ptr [rax + 0x10fffc38]
0x0000000000195bde : cld ; call qword ptr [rax + 0x10fffc39]
0x0000000000195c22 : cld ; call qword ptr [rax + 0x10fffc3b]
0x0000000000195be6 : cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195c2a : cld ; call qword ptr [rax + 0x10fffc3e]
0x0000000000195bee : cld ; call qword ptr [rax + 0x10fffc3f]
0x0000000000195c32 : cld ; call qword ptr [rax + 0x10fffc41]
0x0000000000195bf6 : cld ; call qword ptr [rax + 0x10fffc42]
0x0000000000195c3a : cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000195bfe : cld ; call qword ptr [rax + 0x10fffc45]
0x0000000000195c42 : cld ; call qword ptr [rax + 0x10fffc47]
0x0000000000195c06 : cld ; call qword ptr [rax + 0x10fffc48]
0x0000000000195b7a : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b72 : cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b6a : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b62 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b5a : cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b92 : cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000196552 : cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001953ea : cld ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195966 : cld ; call qword ptr [rax + 0x20fffc5f]
0x0000000000195c7a : cld ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e52 : cld ; call qword ptr [rax + 0x20fffc87]
0x0000000000196172 : cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195732 : cld ; call qword ptr [rax - 0x1f0003e4]
0x00000000001956de : cld ; call qword ptr [rax - 0x1f0003eb]
0x000000000019545e : cld ; call qword ptr [rax]
0x0000000000195f3a : cld ; call qword ptr [rdx + 0x12fffc79]
0x0000000000195f32 : cld ; call qword ptr [rdx + 0x12fffc7a]
0x0000000000195f2a : cld ; call qword ptr [rdx + 0x12fffc7b]
0x0000000000195f22 : cld ; call qword ptr [rdx + 0x12fffc7c]
0x0000000000195f1a : cld ; call qword ptr [rdx + 0x12fffc7d]
0x0000000000195a4a : cld ; call qword ptr [rdx + 0x22fffc51]
0x000000000019583a : cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d26 : cld ; call qword ptr [rdx + 0x22fffc85]
0x000000000019621e : cld ; call qword ptr [rdx + 0x22fffcac]
0x000000000019581a : cld ; call qword ptr [rdx]
0x0000000000195796 : cld ; call qword ptr [rsi + 0x26fffc61]
0x0000000000195cc2 : cld ; call qword ptr [rsi + 0x26fffc82]
0x00000000001961ba : cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001957b6 : cld ; call qword ptr [rsi]
0x00000000001953d6 : cld ; call rax
0x000000000019584a : cld ; call rdx
0x00000000001957a6 : cld ; call rsi
0x00000000001958d2 : cld ; call rsp
0x0000000000172922 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172938 ; xor eax, eax ; ret
0x0000000000172921 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172939 ; xor eax, eax ; ret
0x0000000000001dba : cld ; cmpsd dword ptr [rsi], dword ptr [rdi] ; fld dword ptr [rdx + 0x6b865524] ; retf
0x00000000001400ae : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000e1157 : cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000e32e9 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e3ecc : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x000000000019620a : cld ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x0000000000035057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000019a2b9 : cld ; idiv edi ; pushfq ; retf 1
0x00000000001aa034 : cld ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001955ca : cld ; inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x00000000001956da : cld ; inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x000000000019572e : cld ; inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x00000000001956b2 : cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000019561a : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195686 : cld ; inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019568a : cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019546e : cld ; inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000195972 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019575a : cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x000000000019570e : cld ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019543e : cld ; inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x000000000019573e : cld ; inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956ea : cld ; inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000196356 : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019617e : cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000195e5e : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c86 : cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195666 : cld ; inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x000000000019548e : cld ; inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x00000000001954f6 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x000000000019570a : cld ; inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019657e : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195bbe : cld ; inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019616e : cld ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195592 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c76 : cld ; inc dword ptr [rax] ; test ah, bh ; call qword ptr [rax + 0x20fffc83]
0x0000000000195dfa : cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000000aacd7 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabfe : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000e3fb9 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], 0x94 ; ret 0x3ae9
0x0000000000122b09 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000019600a : cld ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x0000000000195846 : cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001962f2 : cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019622a : cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000195d32 : cld ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x000000000019621a : cld ; inc dword ptr [rdx] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000195836 : cld ; inc dword ptr [rdx] ; pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d22 : cld ; inc dword ptr [rdx] ; xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x00000000001957a2 : cld ; inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x00000000001961c6 : cld ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x00000000001961b6 : cld ; inc dword ptr [rsi] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001960ce : cld ; inc eax ; pop rcx ; cld ; jmp rax
0x0000000000196376 : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000187f79 : cld ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187f71 : cld ; int1 ; inc eax ; cld ; int1 ; jmp rax
0x0000000000187f75 : cld ; int1 ; jmp rax
0x0000000000195f10 : cld ; jbe 0x195f16 ; jmp qword ptr [rdx + 0x22fffc7e]
0x00000000000cf50b : cld ; je 0xcf528 ; call 0x8b725
0x0000000000195b52 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x00000000001953ee : cld ; jmp qword ptr [rax]
0x00000000001a922a : cld ; jmp qword ptr [rbx]
0x0000000000196442 : cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195f12 : cld ; jmp qword ptr [rdx + 0x22fffc7e]
0x000000000019583e : cld ; jmp qword ptr [rdx]
0x000000000019579a : cld ; jmp qword ptr [rsi]
0x00000000001953f2 : cld ; jmp rax
0x000000000019582e : cld ; jmp rdx
0x00000000001957ca : cld ; jmp rsi
0x00000000001958f6 : cld ; jmp rsp
0x0000000000170656 : cld ; jne 0x17088f ; xor eax, eax ; ret
0x0000000000172925 : cld ; jne 0x172935 ; xor eax, eax ; ret
0x0000000000172924 : cld ; jne 0x172936 ; xor eax, eax ; ret
0x0000000000172845 : cld ; jne 0x172937 ; ret
0x0000000000172844 : cld ; jne 0x172938 ; ret
0x0000000000195a0a : cld ; lcall [rcx + rdx*2 + 0x512cfffc] ; cld ; call rdx
0x0000000000195a0e : cld ; ljmp [rcx + rdx*2] ; cld ; call rdx
0x0000000000184cc5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x184c94 ; retf
0x00000000001046a8 : cld ; mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000153192 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153395 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153595 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153795 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009fb9e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000036bdc : cld ; mov eax, 0x81 ; syscall
0x0000000000030b06 : cld ; mov eax, 3 ; syscall
0x000000000005f80b : cld ; mov ebx, 2 ; jmp 0x5baf8
0x000000000014db58 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152dc6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae06 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fa6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad86 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153186 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad06 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152be6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae86 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e901 : cld ; mov rax, rdi ; ret
0x00000000000fdb01 : cld ; mov rdi, r8 ; mov eax, 1 ; syscall
0x000000000004a18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000b9fa8 : cld ; pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000ac9ea : cld ; pop rbx ; ret
0x000000000019596e : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e5a : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196352 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000195bc2 : cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000001959be : cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000196396 : cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196582 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195e8a : cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x00000000001954da : cld ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x00000000001955ae : cld ; push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000195636 : cld ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195df6 : cld ; push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000195842 : cld ; push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x0000000000195d2e : cld ; push qword ptr [rdx + 0x42fffc84] ; test ah, bh ; call rdx
0x0000000000196226 : cld ; push qword ptr [rdx + 0x42fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001962ee : cld ; push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019620e : cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x000000000019643e : cld ; push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001961c2 : cld ; push qword ptr [rsi + 0x46fffca8] ; test al, 0xfc ; call rsi
0x00000000001b0c34 : cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c37 ; jmp qword ptr [rcx]
0x00000000001953d2 : cld ; push rax ; add esp, edi ; call rax
0x0000000000196392 : cld ; push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000195b8e : cld ; push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x00000000001959ba : cld ; push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195656 : cld ; push rax ; sub bh, ah ; call rax
0x00000000001956ba : cld ; push rax ; sub edi, esp ; jmp rax
0x00000000001955b2 : cld ; push rax ; sub esp, edi ; call rax
0x0000000000195bce : cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000196236 : cld ; push rdx ; test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x000000000004a192 : cld ; ret
0x00000000001b8734 : cld ; retf
0x00000000001a8634 : cld ; retf 0
0x00000000001833e3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000001833f6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000bb24e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb251 ; ret
0x00000000000d5195 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51bc
0x0000000000086359 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000003ad3d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000bc5ed : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000bc65e : cli ; adc cl, byte ptr [rax + 0x29] ; retf 0x8948
0x000000000012516b : cli ; add al, 0x48 ; add edx, 1 ; syscall
0x0000000000086536 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000cd1f9 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000bd40b : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000005152f : cli ; add ch, byte ptr [rcx] ; retf 0xd189
0x00000000000c391a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000054d5c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000074078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000012471e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00000000000aa962 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000026485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000001bb58d : cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000000aa60b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000009fbbc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c28a9 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00000000001bcb0c : cli ; add eax, 0x37b0000 ; add byte ptr [rax], al ; retf
0x00000000000bbaba : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003791 : cli ; add ebx, ebp ; in al, 0xee ; jne 0x3779 ; ret 0x975
0x00000000000ff320 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000ff9c1 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000001853d9 : cli ; call 0xffffffffab261ed1
0x000000000018b0a2 : cli ; call qword ptr [rax]
0x00000000001a7d72 : cli ; call qword ptr [rdi]
0x000000000008810a : cli ; call rax
0x00000000000e5013 : cli ; call rcx
0x000000000019afe2 : cli ; call rsp
0x00000000000f65b5 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003aa01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x0000000000071e9d : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000019b1fa : cli ; dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000019b452 : cli ; dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x00000000000e3e6c : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000019b152 : cli ; dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b34a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b6da : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b6b4 ; cli ; jmp rsp
0x0000000000197949 : cli ; in eax, dx ; push rsp ; retf
0x000000000019b19a : cli ; inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000018c192 : cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000019afda : cli ; inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000018b096 : cli ; inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x000000000014db1b : cli ; jg 0x14db2e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e00b : cli ; jg 0x14e01e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e3ab : cli ; jg 0x14e3be ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000172a41 : cli ; jg 0x172a53 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009fb77 : cli ; jg 0x9fb8a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a02ca : cli ; jg 0xa02dd ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0a17 : cli ; jg 0xa0a2a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000aa5d6 : cli ; jg 0xaa5e8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000019f9f2 : cli ; jmp qword ptr [rcx]
0x000000000019b65a : cli ; jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x00000000001a7d5a : cli ; jmp qword ptr [rdi]
0x000000000018b09e : cli ; jmp rax
0x000000000019b07a : cli ; jmp rsp
0x000000000019b2da : cli ; lcall [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019b63a : cli ; lcall [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x000000000018c19a : cli ; ljmp [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x000000000019b30a : cli ; ljmp [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x000000000019b4a2 : cli ; ljmp [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b4ae ; call rsp
0x0000000000153598 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013c532 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000009e8e7 : cli ; mov rax, rdi ; ret
0x0000000000063b65 : cli ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011cef0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008ece8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000145f56 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bb512 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000027612 : cli ; or byte ptr [rdi], 0x85 ; retf
0x00000000000bb2c6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003d322 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001982c9 : cli ; out dx, eax ; call rsp
0x0000000000185861 : cli ; push 0x6e ; ja 0x1857ee ; ret 0x48f
0x000000000019b072 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000195b50 : cli ; push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000018b09a : cli ; push rax ; sub dl, bh ; jmp rax
0x000000000002cb2f : cli ; ret
0x00000000000bc58c : cli ; ret 0x10
0x0000000000184305 : cli ; ret 0xac65
0x00000000000e35aa : cli ; ret 0xfff3
0x0000000000085fd2 : cli ; retf
0x0000000000121317 : cli ; retf 0
0x00000000000d4f5e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000114aab : cli ; setae al ; ret
0x00000000001157f5 : cli ; syscall
0x00000000001841b0 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000182f4a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000c18fe : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001bc486 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bc4a6 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x000000000014a4c8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ab085 : cmc ; add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000000abc97 : cmc ; add byte ptr [rax], al ; ret
0x000000000019a905 : cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x00000000001bb0a5 : cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x000000000017514a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001335b5 : cmc ; call 0x1f8a3
0x0000000000173655 : cmc ; call 0x1f8ab
0x0000000000189afe : cmc ; call qword ptr [rax]
0x0000000000189de6 : cmc ; call qword ptr [rbx]
0x0000000000189a52 : cmc ; call qword ptr [rcx]
0x0000000000189dda : cmc ; call qword ptr [rdi]
0x00000000001af86a : cmc ; call qword ptr [rdx]
0x00000000001b0d5a : cmc ; call qword ptr [rsi]
0x00000000001899c2 : cmc ; call rax
0x00000000001b19e2 : cmc ; call rdi
0x000000000018a002 : cmc ; call rdx
0x0000000000189eba : cmc ; call rsi
0x0000000000189c12 : cmc ; call rsp
0x0000000000112e5f : cmc ; dec dword ptr [rax - 0x75] ; cmp al, 0x24 ; call 0x1f8b0
0x00000000000f4291 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c95b1 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000189afa : cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189af6 : cmc ; dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189c26 : cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000198f2a : cmc ; dec dword ptr [rsp + 0x20e40001] ; cmc ; jmp rsp
0x0000000000198fd2 : cmc ; dec esp ; add dword ptr [eax], eax ; cmc ; jmp rsp
0x00000000001a2491 : cmc ; in al, dx ; call qword ptr [rsi]
0x0000000000198f82 : cmc ; inc esp ; add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000123002 : cmc ; je 0x122ffc ; pop rbx ; ret
0x0000000000189ff2 : cmc ; jmp qword ptr [rbx]
0x0000000000189fea : cmc ; jmp qword ptr [rcx]
0x00000000001afa52 : cmc ; jmp qword ptr [rdx]
0x00000000001899ce : cmc ; jmp rax
0x00000000001b1362 : cmc ; jmp rdi
0x0000000000198f32 : cmc ; jmp rsp
0x0000000000101ff6 : cmc ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001899ba : cmc ; lcall [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00000000001899c6 : cmc ; lcall [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x0000000000189a3e : cmc ; lcall [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x0000000000199002 : cmc ; ljmp [rax + rbp*2 + 0x44740001] ; cmc ; jmp rsp
0x00000000000028e7 : cmc ; mov al, 0x1f ; retf
0x0000000000185c89 : cmc ; mov ch, 0xab ; ret
0x000000000015ad8a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152e1e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000128a41 : cmc ; mov eax, 0x81 ; syscall
0x00000000000fc2c4 : cmc ; movsxd rdi, ebx ; mov eax, 0x11d ; syscall
0x0000000000036bd9 : cmc ; movsxd rdi, r12d ; mov eax, 0x81 ; syscall
0x0000000000171e33 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006e291 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000182b37 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000007818d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198ed2 : cmc ; push qword ptr [rcx + 0x14740001] ; cmc ; call rsp
0x0000000000189eca : cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x0000000000189c2a : cmc ; push rsp ; cmc ; call rsp
0x0000000000128487 : cmc ; retf
0x0000000000195579 : cmc ; sti ; jmp qword ptr [rax]
0x0000000000171e37 : cmc ; sub eax, edx ; ret
0x00000000001852c5 : cmc ; xlatb ; ret 0x4e27
0x00000000000ea9e1 : cmova eax, edx ; ret
0x00000000000bc6c1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007d0b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008b457 : cmovae eax, ecx ; ret
0x000000000004a5c1 : cmovae eax, edi ; ret
0x0000000000108abc : cmovae eax, esi ; ret
0x000000000007d0b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a5c0 : cmovae rax, rdi ; ret
0x0000000000108abb : cmovae rax, rsi ; ret
0x000000000003ac7f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ea8fb : cmovbe esi, ecx ; mov eax, ecx ; syscall
0x00000000000ea8fa : cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x000000000006b2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f693b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097969 : cmove eax, ebx ; pop rbx ; ret
0x0000000000074f51 : cmove eax, ecx ; ret
0x000000000013c30a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f828 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000bc402 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f7720 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000878d3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002d90b : cmove eax, edx ; ret
0x00000000000d6c41 : cmove eax, esi ; ret
0x000000000009e9b1 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x0000000000074f50 : cmove r8, rcx ; ret
0x00000000000f693a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097968 : cmove rax, rbx ; pop rbx ; ret
0x00000000000ac824 : cmove rax, rcx ; ret
0x000000000013c309 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f839 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bc401 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000878d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002d90a : cmove rax, rdx ; ret
0x0000000000071bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x71bf9 ; ret
0x000000000007af3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x000000000009a9f1 : cmovl ebp, dword ptr [rcx] ; ror dword ptr [rcx - 0x77], cl ; retf 0x8349
0x00000000000cae04 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079943 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aa04 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000110c01 : cmovne eax, ecx ; ret
0x000000000009748b : cmovne eax, edi ; ret
0x0000000000140856 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000089b03 : cmovne eax, edx ; ret
0x0000000000110b94 : cmovne eax, esi ; ret
0x0000000000100db7 : cmovne ebx, eax ; call 0xfcfd5
0x000000000003aa03 : cmovne rax, rbx ; pop rbx ; ret
0x000000000009748a : cmovne rax, rdi ; ret
0x0000000000140855 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089b02 : cmovne rax, rdx ; ret
0x0000000000100db6 : cmovne rbx, rax ; call 0xfcfd6
0x000000000010ed12 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000010ed11 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000f187c : cmovs eax, dword ptr [rbx + 0x148f0e1] ; retf 0x3948
0x00000000000f135d : cmovs eax, dword ptr [rbx + 0x148f0e1] ; retf 0x3949
0x000000000008e8ad : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000128a50 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x000000000004ed5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000059434 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x000000000009e923 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000003a6f6 : cmovs eax, edx ; pop rbx ; ret
0x0000000000023b8c : cmovs eax, edx ; ret
0x000000000009b084 : cmovs ebp, dword ptr [rcx] ; ret
0x00000000000800df : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000009a920 : cmovs ebp, dword ptr [rcx] ; retf
0x000000000012fa48 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x0000000000099bf3 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x0000000000117a60 : cmovs edi, dword ptr [rcx] ; retf 0xea75
0x000000000003cf9a : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x00000000000aac56 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x0000000000195bdd : cmp ah, bh ; call qword ptr [rax + 0x10fffc39]
0x0000000000195c1d : cmp ah, bh ; call qword ptr [rax]
0x000000000014a7c3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a638 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a69f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000019d474 : cmp al, 0x19 ; add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000112e63 : cmp al, 0x24 ; call 0x1f8ac
0x0000000000102d91 : cmp al, 0x24 ; call rbx
0x00000000000f7b6b : cmp al, 0x24 ; mov eax, 0x4f ; syscall
0x00000000000369c6 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x000000000014351c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x130] ; jmp rax
0x00000000001752d2 : cmp al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000129095 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001aea74 : cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea60 ; hlt ; call qword ptr [rbx]
0x00000000000acd2c : cmp al, 0x31 ; add byte ptr [rbp + rcx*4 + 0x25], cl ; retf 0x3154
0x0000000000038fed : cmp al, 0x33 ; call rax
0x0000000000097355 : cmp al, 0x3d ; jne 0x9738f ; mov rax, rdi ; pop rbx ; ret
0x00000000000d170c : cmp al, 0x3f ; jne 0xd16d1 ; mov eax, 1 ; ret
0x00000000000d1724 : cmp al, 0x3f ; jne 0xd16ee ; mov eax, 1 ; ret
0x0000000000183f40 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001b0774 : cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b74 : cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bf1 ; cmc ; jmp qword ptr [rcx]
0x000000000019684c : cmp al, 0x62 ; add byte ptr [rax], al ; push rsp ; and ecx, ebp ; call rsp
0x0000000000182e43 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000001b2c74 : cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x000000000008bb10 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x000000000018592b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000001b5474 : cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a6674 : cmp al, 0xab ; add byte ptr [rax], al ; js 0x1a66f1 ; out dx, al ; jmp qword ptr [rdx]
0x00000000000f3520 : cmp al, 0xb3 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000e1a7a : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000001a7b74 : cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000019a124 : cmp al, 0xc3 ; add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019bb59 : cmp al, 0xe8 ; jmp rax
0x00000000001a3729 : cmp al, 0xed ; jmp qword ptr [rdi]
0x0000000000099b70 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00000000001a8039 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001b3511 : cmp al, 0xf6 ; call qword ptr [rax]
0x00000000000b4c42 : cmp al, 0xf9 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000019804c : cmp al, 0xfc ; add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x0000000000195be9 : cmp al, 0xfc ; call qword ptr [rax]
0x00000000000ae376 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000170633 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf74 : cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000000a68f0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x000000000003dce3 : cmp al, 9 ; ja 0x3c8d0 ; jmp 0x3dcc1
0x0000000000040fd3 : cmp al, 9 ; ja 0x3fbb0 ; jmp 0x40fb1
0x00000000000447a3 : cmp al, 9 ; ja 0x42ab0 ; jmp 0x44781
0x00000000000713fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000005ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cc6de : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000001f92c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000203de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a45 : cmp al, byte ptr [rax] ; ret
0x00000000000de32c : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x0000000000198a1d : cmp al, byte ptr [rcx] ; add byte ptr [rsp], al ; jmp rsp
0x00000000000f0ca9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x000000000008103f : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; call 0x7d286
0x00000000001722f6 : cmp al, byte ptr [rsi - 1] ; jne 0x17231c ; xor eax, eax ; ret
0x000000000005bcd7 : cmp al, ch ; retf
0x0000000000033504 : cmp al, ch ; xchg eax, esi ; ret
0x000000000008eb26 : cmp al, dh ; ret
0x000000000008eb25 : cmp al, r14b ; ret
0x0000000000195470 : cmp bh, 0xfb ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000034f16 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000195c21 : cmp bh, ah ; call qword ptr [rax + 0x10fffc3b]
0x0000000000110b5a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000194ed1 : cmp bh, bl ; call qword ptr [rax]
0x0000000000110b92 : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000001aec08 : cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000002cad : cmp bl, byte ptr [rip - 0x165c2f47] ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x0000000000112b98 : cmp bl, ch ; ret
0x0000000000062808 : cmp bl, ch ; ret 0x8148
0x000000000005fb89 : cmp bl, ch ; ret 0x858b
0x0000000000094cd3 : cmp bl, dh ; ret
0x00000000000abc46 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000073d1b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000e7bb9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f779 : cmp byte ptr [r8], r9b ; je 0x10f7a3 ; mov rdx, r8 ; jmp 0x10f793
0x000000000004b82a : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000f27ae : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008f75f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000024ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000001358d6 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008eb67 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000bbe77 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000101f38 : cmp byte ptr [rax + rax], ch ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da297 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000025f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d9931 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d9930 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000335d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000102d44 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000012fa8b : cmp byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x77] ; retf
0x000000000007c7be : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000000e971b : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000073d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000011243f : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f4216 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f0820 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000e15bd : cmp byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000005224a : cmp byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000012c220 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de3e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000134101 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000005e8b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000007aee0 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000738a9 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xa17
0x00000000000ff202 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016cc08 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008eb56 : cmp byte ptr [rax], ah ; ret
0x0000000000141d44 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb58
0x00000000000df11a : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000044f74 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007b563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x0000000000045af7 : cmp byte ptr [rax], al ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000368bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036874 : cmp byte ptr [rax], al ; ret
0x000000000014a814 : cmp byte ptr [rax], al ; retf 0xf66
0x000000000010f46f : cmp byte ptr [rax], bh ; je 0x10f49e ; mov rdx, rax ; jmp 0x10f48b
0x0000000000138ec9 : cmp byte ptr [rax], bl ; je 0x138ed4 ; ret
0x0000000000195590 : cmp byte ptr [rax], ch ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x000000000010f77a : cmp byte ptr [rax], cl ; je 0x10f7a2 ; mov rdx, r8 ; jmp 0x10f792
0x00000000000e7bba : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089b00 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009f106 : cmp byte ptr [rax], dh ; ret
0x000000000010f46e : cmp byte ptr [rax], dil ; je 0x10f49f ; mov rdx, rax ; jmp 0x10f48c
0x000000000008eb46 : cmp byte ptr [rax], dl ; ret
0x000000000008eb45 : cmp byte ptr [rax], r10b ; ret
0x000000000008eb55 : cmp byte ptr [rax], r12b ; ret
0x000000000009f105 : cmp byte ptr [rax], r14b ; ret
0x0000000000089aff : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000abc4a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000abc49 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000010f470 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f48a
0x0000000000186bd4 : cmp byte ptr [rbp - 0x13], bl ; call qword ptr [rsi]
0x000000000014368a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x0000000000105fce : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000d8908 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000002cb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000ce09a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001ab5e4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00000000000494a9 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x00000000001b3bd8 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11f8 : cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000000abc47 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000072ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000be449 : cmp byte ptr [rcx + 1], cl ; ret
0x00000000000d7ca5 : cmp byte ptr [rcx + 8], 2 ; jne 0xd7c87 ; jmp 0xd7c77
0x00000000000fdd56 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000dac9e : cmp byte ptr [rcx - 0x73], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x1274
0x00000000000eb92c : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000040195 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x000000000004176f : cmp byte ptr [rcx - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; retf
0x0000000000115957 : cmp byte ptr [rcx - 0x77], cl ; retf 0x6348
0x00000000001b0c08 : cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000002bf8 : cmp byte ptr [rcx], ah ; loop 0x2c0f ; retf
0x00000000001af3bd : cmp byte ptr [rcx], al ; add al, ah ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af3a5 : cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x000000000016cc09 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a7d04 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000003a6c8 : cmp byte ptr [rdi], 0 ; jne 0x3a6d6 ; pop rbx ; ret
0x00000000001b3650 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x0000000000172db5 : cmp byte ptr [rdi], ch ; jne 0x172da9 ; mov rdi, r14 ; call 0x1f8b1
0x00000000001735ed : cmp byte ptr [rdi], ch ; jne 0x1735e1 ; mov rdi, r14 ; call 0x1f8b1
0x0000000000099557 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x000000000007b528 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000dc5c8 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000016eedd : cmp byte ptr [rdi], dl ; ret
0x000000000016f9f0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f9d9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f9c2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e47e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019b19d : cmp byte ptr [rdx], al ; add ah, ah ; cli ; jmp rsp
0x00000000001a6448 : cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x000000000014a6a2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000102b6c : cmp ch, cl ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000e0ff0 : cmp cl, 0x11 ; je 0xe1032 ; mov rdx, rax ; jmp 0xe0f96
0x0000000000080bfe : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000dabaf : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000133c97 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000704b0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000006d3b1 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa7c
0x000000000007c1d9 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x98e
0x000000000010de52 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x00000000001515c1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000151711 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000151861 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x00000000001519b1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000151b01 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000151c51 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000151da1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000151ef1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000152041 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000152191 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x00000000001522e1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000152431 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000152581 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000001526d1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000152821 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000001591aa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000015932a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000001594aa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000015962a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000001597aa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000015992a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000159aaa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000159c2a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000159daa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000159f2a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000015a0aa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000015a22a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000015a3aa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000015a52a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000015a6aa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000012ac03 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000004727c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000002db92 : cmp cl, byte ptr [rip - 0x77cb800] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000185d06 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000d72fe : cmp cl, byte ptr [rsi] ; je 0xd729b ; pop rbx ; ret
0x000000000003ca26 : cmp cl, ch ; ret
0x00000000000dfee8 : cmp cl, ch ; ret 0xfffe
0x000000000013365b : cmp dh, al ; add eax, 0x358d4800 ; ret
0x0000000000110bd3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000003a6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a1295 : cmp dh, dh ; ret 0x7501
0x0000000000110bff : cmp dh, dl ; cmovne eax, ecx ; ret
0x0000000000110b59 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110b91 : cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000077898 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x0000000000172a80 : cmp dl, 1 ; jb 0x172a8e ; mov byte ptr [rdi], cl ; ret
0x000000000009fbbb : cmp dl, 1 ; jb 0x9fbcd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a030e : cmp dl, 1 ; jb 0xa0320 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5b : cmp dl, 1 ; jb 0xa0a6d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000aa60a : cmp dl, 1 ; jb 0xaa618 ; mov byte ptr [rdi], cl ; ret
0x000000000008b412 : cmp dl, 3 ; je 0x8b440 ; movsx eax, dl ; ret
0x000000000008b411 : cmp dl, 3 ; je 0x8b441 ; movsx eax, dl ; ret
0x0000000000188e40 : cmp dl, bl ; jmp rcx
0x0000000000002b86 : cmp dl, byte ptr [rdi] ; ret
0x0000000000072aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x0000000000150b37 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000145e17 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009d0a3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000138ec8 : cmp dword ptr [rax], 0x18 ; je 0x138ed5 ; ret
0x000000000002cae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x398faf], dl ; ret
0x000000000002c7cd : cmp dword ptr [rax], eax ; mov eax, ecx ; syscall
0x000000000002d9d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000029c95 : cmp dword ptr [rax], eax ; ret
0x0000000000035304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x0000000000035303 : cmp dword ptr [rax], r8d ; test eax, eax ; jne 0x35318 ; ret
0x000000000008921b : cmp dword ptr [rbp - 0x76b7ffcd], ebp ; and al, 8 ; call qword ptr [rdx]
0x00000000000d5b92 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd5b29
0x0000000000134f8c : cmp dword ptr [rbx - 0x76b7fffb], esp ; ret 0xff31
0x000000000015a8c8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009541e : cmp dword ptr [rcx + 0x39], ecx ; ret
0x000000000009ee29 : cmp dword ptr [rcx - 0x77], eax ; retf 0x8941
0x00000000000381ec : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00000000001af44d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001af515 : cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001989f5 : cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000012839d : cmp dword ptr [rdi + 0x10], 2 ; je 0x1283ae ; ret
0x00000000000773e4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b576 ; ret
0x00000000000bb220 : cmp dword ptr [rdi + 8], edx ; jne 0xbb203 ; ret
0x0000000000114a48 : cmp dword ptr [rdi], 0 ; je 0x114a5e ; ret
0x0000000000115b5f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000088f21 : cmp dword ptr [rip + 0x33d940], 0 ; je 0x88f39 ; ret
0x00000000000e0d0b : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00000000001337c0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x1337d8 ; xor eax, eax ; ret
0x0000000000020a3f : cmp dword ptr [rsi + rdx + 0x2b800], edi ; add byte ptr [rax], al ; syscall
0x00000000001024ed : cmp dword ptr [rsi], 0 ; je 0x1024fe ; pop rbx ; ret
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x000000000003fddd : cmp dword ptr [rsp + 0x10], 0 ; jne 0x3fdb4 ; jmp 0x3fdbc
0x000000000003caed : cmp dword ptr [rsp + 8], 0 ; jne 0x3cac4 ; jmp 0x3cacc
0x00000000000f7673 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000138ec7 : cmp dword ptr fs:[rax], 0x18 ; je 0x138ed6 ; ret
0x000000000002d9cf : cmp dword ptr fs:[rax], eax ; mov qword ptr [rax], rdx ; ret
0x00000000000fba5d : cmp eax, -0x5f ; je 0xfba80 ; neg eax ; pop rbx ; ret
0x0000000000123000 : cmp eax, -0xb ; je 0x122ffe ; pop rbx ; ret
0x000000000014299e : cmp eax, -1 ; je 0x1429b9 ; add rsp, 8 ; ret
0x0000000000072cba : cmp eax, -1 ; je 0x72ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072cfe : cmp eax, -1 ; je 0x72d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b594 : cmp eax, -1 ; je 0x7b5a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf77 : cmp eax, -1 ; je 0x7bf88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000115b70 : cmp eax, -1 ; jne 0x115b6f ; xor eax, eax ; leave ; ret
0x00000000000484c4 : cmp eax, -1 ; jne 0x484b9 ; mov rax, rdx ; ret
0x0000000000074699 : cmp eax, -1 ; jne 0x746a6 ; pop rbx ; ret
0x000000000007bfcf : cmp eax, -1 ; jne 0x7bfc0 ; pop rbx ; ret
0x0000000000003ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000004b512 : cmp eax, 0x1451e9 ; call 0x777f7
0x0000000000029cd4 : cmp eax, 0x166467 ; mov eax, ecx ; syscall
0x00000000001af865 : cmp eax, 0x1c380001 ; cmc ; call qword ptr [rdx]
0x00000000001af915 : cmp eax, 0x1e280001 ; cmc ; jmp qword ptr [rcx]
0x00000000001af92d : cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x0000000000120712 : cmp eax, 0x2a7fe5 ; call rax
0x000000000011feb3 : cmp eax, 0x2a87e8 ; call rax
0x00000000001014ab : cmp eax, 0x2c2d60 ; ret
0x0000000000198a6d : cmp eax, 0x32640001 ; jmp rsp
0x000000000008167c : cmp eax, 0x394d0034 ; ret 0x8948
0x0000000000195c29 : cmp eax, 0x3e90fffc ; cld ; call qword ptr [rax]
0x00000000000e0d0c : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe0cfa
0x00000000000cdb9b : cmp eax, 0x7275 ; jne 0xcdb84 ; xor eax, eax ; ret
0x000000000005946e : cmp eax, 0x83480005 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000075d82 : cmp eax, 0x85480000 ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000105e97 : cmp eax, 0x88ade ; sub rsp, 0x60 ; syscall
0x0000000000105ace : cmp eax, 0x88e77 ; mov eax, ebx ; syscall
0x0000000000105a9d : cmp eax, 0x88e9d ; mov eax, ebx ; syscall
0x0000000000075bdf : cmp eax, 0x89000056 ; ret 0x98eb
0x0000000000077b20 : cmp eax, 0x89480001 ; and r11b, bpl ; retf 0x1f0f
0x0000000000097356 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x0000000000133b12 : cmp eax, 0x894cf631 ; out 0xe8, eax ; ret
0x00000000000c89ba : cmp eax, 0x89e18948 ; ret 0xf631
0x0000000000101555 : cmp eax, 0x8b122 ; mov eax, ecx ; syscall
0x000000000018322b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000c00ae : cmp eax, 0xc85a1 ; add rax, rdi ; jmp rax
0x00000000000b64ea : cmp eax, 0xff ; cmove eax, edx ; ret
0x00000000001056bf : cmp eax, 0xfffff000 ; ja 0x1056d8 ; ret
0x000000000010737f : cmp eax, 0xfffff000 ; ja 0x107398 ; ret
0x00000000001075c1 : cmp eax, 0xfffff000 ; ja 0x1075d7 ; ret
0x0000000000107673 : cmp eax, 0xfffff000 ; ja 0x107688 ; ret
0x00000000001076ad : cmp eax, 0xfffff000 ; ja 0x1076c8 ; ret
0x000000000010825e : cmp eax, 0xfffff000 ; ja 0x108277 ; ret
0x00000000001083de : cmp eax, 0xfffff000 ; ja 0x1083f7 ; ret
0x0000000000108878 : cmp eax, 0xfffff000 ; ja 0x108887 ; ret
0x000000000010891a : cmp eax, 0xfffff000 ; ja 0x10892f ; ret
0x00000000001089ca : cmp eax, 0xfffff000 ; ja 0x1089df ; ret
0x000000000011582b : cmp eax, 0xfffff000 ; ja 0x115840 ; ret
0x00000000001158d8 : cmp eax, 0xfffff000 ; ja 0x115902 ; ret
0x000000000011759d : cmp eax, 0xfffff000 ; ja 0x1175b8 ; ret
0x000000000011764d : cmp eax, 0xfffff000 ; ja 0x117668 ; ret
0x0000000000035429 : cmp eax, 0xfffff000 ; ja 0x35458 ; ret
0x0000000000035731 : cmp eax, 0xfffff000 ; ja 0x35748 ; ret
0x000000000003579d : cmp eax, 0xfffff000 ; ja 0x357b8 ; ret
0x00000000000357e7 : cmp eax, 0xfffff000 ; ja 0x357f7 ; ret
0x00000000000bc438 : cmp eax, 0xfffff000 ; ja 0xbc450 ; ret
0x00000000000c83d8 : cmp eax, 0xfffff000 ; ja 0xc83f0 ; pop rbx ; ret
0x00000000000c9652 : cmp eax, 0xfffff000 ; ja 0xc9667 ; ret
0x00000000000cbfe1 : cmp eax, 0xfffff000 ; ja 0xcbff7 ; ret
0x00000000000cc07b : cmp eax, 0xfffff000 ; ja 0xcc08f ; ret
0x00000000000cc16c : cmp eax, 0xfffff000 ; ja 0xcc17f ; ret
0x00000000000cd2c4 : cmp eax, 0xfffff000 ; ja 0xcd2d7 ; ret
0x00000000000cd334 : cmp eax, 0xfffff000 ; ja 0xcd347 ; ret
0x00000000000cd588 : cmp eax, 0xfffff000 ; ja 0xcd597 ; ret
0x00000000000cd608 : cmp eax, 0xfffff000 ; ja 0xcd617 ; ret
0x00000000000f6be6 : cmp eax, 0xfffff000 ; ja 0xf6bf8 ; ret
0x00000000000f6c35 : cmp eax, 0xfffff000 ; ja 0xf6c48 ; ret
0x00000000000f6c86 : cmp eax, 0xfffff000 ; ja 0xf6c98 ; ret
0x00000000000f6cde : cmp eax, 0xfffff000 ; ja 0xf6cf8 ; ret
0x00000000000f6d42 : cmp eax, 0xfffff000 ; ja 0xf6d58 ; ret
0x00000000000f6d9b : cmp eax, 0xfffff000 ; ja 0xf6db0 ; ret
0x00000000000f6f7a : cmp eax, 0xfffff000 ; ja 0xf6f90 ; ret
0x00000000000f7644 : cmp eax, 0xfffff000 ; ja 0xf7688 ; ret
0x00000000000fbad3 : cmp eax, 0xfffff000 ; ja 0xfbae8 ; ret
0x00000000000fbb27 : cmp eax, 0xfffff000 ; ja 0xfbb38 ; ret
0x00000000000fc27b : cmp eax, 0xfffff000 ; ja 0xfc28f ; ret
0x00000000000fc79f : cmp eax, 0xfffff000 ; ja 0xfc7b7 ; ret
0x00000000000fd04b : cmp eax, 0xfffff000 ; ja 0xfd05f ; ret
0x00000000000fd0fb : cmp eax, 0xfffff000 ; ja 0xfd10f ; ret
0x00000000000fd1a6 : cmp eax, 0xfffff000 ; ja 0xfd1b7 ; ret
0x00000000000fd216 : cmp eax, 0xfffff000 ; ja 0xfd227 ; ret
0x00000000000fd297 : cmp eax, 0xfffff000 ; ja 0xfd2a7 ; ret
0x00000000000fd347 : cmp eax, 0xfffff000 ; ja 0xfd357 ; ret
0x00000000000fd897 : cmp eax, 0xfffff000 ; ja 0xfd8a8 ; ret
0x00000000000fefb8 : cmp eax, 0xfffff000 ; ja 0xfefd0 ; ret
0x00000000000ff04c : cmp eax, 0xfffff000 ; ja 0xff060 ; ret
0x00000000000ff0ec : cmp eax, 0xfffff000 ; ja 0xff100 ; ret
0x00000000000ff140 : cmp eax, 0xfffff000 ; ja 0xff158 ; ret
0x00000000001014da : cmp eax, 0xfffff001 ; jae 0x1014e9 ; ret
0x0000000000101748 : cmp eax, 0xfffff001 ; jae 0x101757 ; ret
0x0000000000101778 : cmp eax, 0xfffff001 ; jae 0x101787 ; ret
0x00000000001017b1 : cmp eax, 0xfffff001 ; jae 0x1017f0 ; ret
0x0000000000101808 : cmp eax, 0xfffff001 ; jae 0x101817 ; ret
0x0000000000101838 : cmp eax, 0xfffff001 ; jae 0x101847 ; ret
0x000000000010186b : cmp eax, 0xfffff001 ; jae 0x10187a ; ret
0x0000000000101898 : cmp eax, 0xfffff001 ; jae 0x1018a7 ; ret
0x00000000001018c8 : cmp eax, 0xfffff001 ; jae 0x1018d7 ; ret
0x00000000001018f8 : cmp eax, 0xfffff001 ; jae 0x101907 ; ret
0x0000000000101928 : cmp eax, 0xfffff001 ; jae 0x101937 ; ret
0x0000000000105feb : cmp eax, 0xfffff001 ; jae 0x105ffa ; ret
0x0000000000106018 : cmp eax, 0xfffff001 ; jae 0x106027 ; ret
0x0000000000106048 : cmp eax, 0xfffff001 ; jae 0x106057 ; ret
0x000000000010607b : cmp eax, 0xfffff001 ; jae 0x10608a ; ret
0x00000000001060ab : cmp eax, 0xfffff001 ; jae 0x1060ba ; ret
0x00000000001060d8 : cmp eax, 0xfffff001 ; jae 0x1060e7 ; ret
0x000000000010610b : cmp eax, 0xfffff001 ; jae 0x10611a ; ret
0x0000000000106138 : cmp eax, 0xfffff001 ; jae 0x106147 ; ret
0x0000000000106168 : cmp eax, 0xfffff001 ; jae 0x106177 ; ret
0x000000000010619b : cmp eax, 0xfffff001 ; jae 0x1061aa ; ret
0x00000000001061c8 : cmp eax, 0xfffff001 ; jae 0x1061d7 ; ret
0x00000000001061fb : cmp eax, 0xfffff001 ; jae 0x10620a ; ret
0x00000000001072e8 : cmp eax, 0xfffff001 ; jae 0x1072f7 ; ret
0x0000000000107318 : cmp eax, 0xfffff001 ; jae 0x107327 ; ret
0x0000000000107448 : cmp eax, 0xfffff001 ; jae 0x107457 ; ret
0x0000000000107488 : cmp eax, 0xfffff001 ; jae 0x107497 ; ret
0x00000000001074b8 : cmp eax, 0xfffff001 ; jae 0x1074c7 ; ret
0x00000000001074e8 : cmp eax, 0xfffff001 ; jae 0x1074f7 ; ret
0x0000000000107518 : cmp eax, 0xfffff001 ; jae 0x107527 ; ret
0x000000000010773b : cmp eax, 0xfffff001 ; jae 0x10774a ; ret
0x0000000000107768 : cmp eax, 0xfffff001 ; jae 0x107777 ; ret
0x0000000000107798 : cmp eax, 0xfffff001 ; jae 0x1077a7 ; ret
0x00000000001077c8 : cmp eax, 0xfffff001 ; jae 0x1077d7 ; ret
0x000000000010780b : cmp eax, 0xfffff001 ; jae 0x10781a ; ret
0x0000000000107838 : cmp eax, 0xfffff001 ; jae 0x107847 ; ret
0x0000000000107868 : cmp eax, 0xfffff001 ; jae 0x107877 ; ret
0x0000000000107898 : cmp eax, 0xfffff001 ; jae 0x1078a7 ; ret
0x00000000001078c8 : cmp eax, 0xfffff001 ; jae 0x1078d7 ; ret
0x00000000001078f8 : cmp eax, 0xfffff001 ; jae 0x107907 ; ret
0x0000000000107928 : cmp eax, 0xfffff001 ; jae 0x107937 ; ret
0x0000000000107958 : cmp eax, 0xfffff001 ; jae 0x107967 ; ret
0x0000000000107988 : cmp eax, 0xfffff001 ; jae 0x107997 ; ret
0x00000000001079bb : cmp eax, 0xfffff001 ; jae 0x1079ca ; ret
0x00000000001079f4 : cmp eax, 0xfffff001 ; jae 0x107a36 ; ret
0x0000000000107a48 : cmp eax, 0xfffff001 ; jae 0x107a57 ; ret
0x0000000000107a7b : cmp eax, 0xfffff001 ; jae 0x107a8a ; ret
0x0000000000107aa8 : cmp eax, 0xfffff001 ; jae 0x107ab7 ; ret
0x0000000000107ad8 : cmp eax, 0xfffff001 ; jae 0x107ae7 ; ret
0x0000000000107b08 : cmp eax, 0xfffff001 ; jae 0x107b17 ; ret
0x0000000000107b38 : cmp eax, 0xfffff001 ; jae 0x107b47 ; ret
0x0000000000107b68 : cmp eax, 0xfffff001 ; jae 0x107b77 ; ret
0x0000000000107b9b : cmp eax, 0xfffff001 ; jae 0x107baa ; ret
0x0000000000107bcb : cmp eax, 0xfffff001 ; jae 0x107bda ; ret
0x0000000000107bf8 : cmp eax, 0xfffff001 ; jae 0x107c07 ; ret
0x0000000000107c28 : cmp eax, 0xfffff001 ; jae 0x107c37 ; ret
0x0000000000107c5b : cmp eax, 0xfffff001 ; jae 0x107c6a ; ret
0x0000000000107c8b : cmp eax, 0xfffff001 ; jae 0x107c9a ; ret
0x0000000000107cbb : cmp eax, 0xfffff001 ; jae 0x107cca ; ret
0x0000000000107cf4 : cmp eax, 0xfffff001 ; jae 0x107d36 ; ret
0x0000000000107d48 : cmp eax, 0xfffff001 ; jae 0x107d57 ; ret
0x0000000000107d84 : cmp eax, 0xfffff001 ; jae 0x107dc6 ; ret
0x0000000000107dd8 : cmp eax, 0xfffff001 ; jae 0x107de7 ; ret
0x0000000000107e08 : cmp eax, 0xfffff001 ; jae 0x107e17 ; ret
0x0000000000107e44 : cmp eax, 0xfffff001 ; jae 0x107e86 ; ret
0x0000000000107e98 : cmp eax, 0xfffff001 ; jae 0x107ea7 ; ret
0x0000000000107ecb : cmp eax, 0xfffff001 ; jae 0x107eda ; ret
0x0000000000107ef8 : cmp eax, 0xfffff001 ; jae 0x107f07 ; ret
0x0000000000107f28 : cmp eax, 0xfffff001 ; jae 0x107f37 ; ret
0x0000000000107f5b : cmp eax, 0xfffff001 ; jae 0x107f6a ; ret
0x0000000000107f91 : cmp eax, 0xfffff001 ; jae 0x107fd0 ; ret
0x0000000000107fe8 : cmp eax, 0xfffff001 ; jae 0x107ff7 ; ret
0x000000000010801b : cmp eax, 0xfffff001 ; jae 0x10802a ; ret
0x000000000010804b : cmp eax, 0xfffff001 ; jae 0x10805a ; ret
0x00000000001080a1 : cmp eax, 0xfffff001 ; jae 0x1080e0 ; ret
0x00000000001080f8 : cmp eax, 0xfffff001 ; jae 0x108107 ; ret
0x0000000000108131 : cmp eax, 0xfffff001 ; jae 0x108170 ; ret
0x0000000000108188 : cmp eax, 0xfffff001 ; jae 0x108197 ; ret
0x00000000001081b8 : cmp eax, 0xfffff001 ; jae 0x1081c7 ; ret
0x00000000001081eb : cmp eax, 0xfffff001 ; jae 0x1081fa ; ret
0x0000000000108218 : cmp eax, 0xfffff001 ; jae 0x108227 ; ret
0x0000000000108314 : cmp eax, 0xfffff001 ; jae 0x108356 ; ret
0x0000000000108371 : cmp eax, 0xfffff001 ; jae 0x1083b0 ; ret
0x0000000000108491 : cmp eax, 0xfffff001 ; jae 0x1084d0 ; ret
0x00000000001084f4 : cmp eax, 0xfffff001 ; jae 0x108536 ; ret
0x000000000010854b : cmp eax, 0xfffff001 ; jae 0x10855a ; ret
0x0000000000108578 : cmp eax, 0xfffff001 ; jae 0x108587 ; ret
0x00000000001085a8 : cmp eax, 0xfffff001 ; jae 0x1085b7 ; ret
0x00000000001085db : cmp eax, 0xfffff001 ; jae 0x1085ea ; ret
0x0000000000108b34 : cmp eax, 0xfffff001 ; jae 0x108b76 ; ret
0x0000000000108b94 : cmp eax, 0xfffff001 ; jae 0x108bd6 ; ret
0x0000000000108be8 : cmp eax, 0xfffff001 ; jae 0x108bf7 ; ret
0x0000000000108c18 : cmp eax, 0xfffff001 ; jae 0x108c27 ; ret
0x0000000000108c48 : cmp eax, 0xfffff001 ; jae 0x108c57 ; ret
0x0000000000108c78 : cmp eax, 0xfffff001 ; jae 0x108c87 ; ret
0x0000000000108cab : cmp eax, 0xfffff001 ; jae 0x108cba ; ret
0x0000000000108cdb : cmp eax, 0xfffff001 ; jae 0x108cea ; ret
0x0000000000108d08 : cmp eax, 0xfffff001 ; jae 0x108d17 ; ret
0x0000000000108d38 : cmp eax, 0xfffff001 ; jae 0x108d47 ; ret
0x0000000000108d68 : cmp eax, 0xfffff001 ; jae 0x108d77 ; ret
0x0000000000108d98 : cmp eax, 0xfffff001 ; jae 0x108da7 ; ret
0x000000000014069b : cmp eax, 0xfffff001 ; jae 0x1406aa ; ret
0x00000000001406eb : cmp eax, 0xfffff001 ; jae 0x1406fa ; ret
0x0000000000035768 : cmp eax, 0xfffff001 ; jae 0x35777 ; ret
0x0000000000035e28 : cmp eax, 0xfffff001 ; jae 0x35e37 ; ret
0x0000000000047b22 : cmp eax, 0xfffff001 ; jae 0x47b35 ; xor eax, eax ; ret
0x000000000006b368 : cmp eax, 0xfffff001 ; jae 0x6b377 ; ret
0x000000000006b39b : cmp eax, 0xfffff001 ; jae 0x6b3aa ; ret
0x00000000000bc518 : cmp eax, 0xfffff001 ; jae 0xbc527 ; ret
0x00000000000bf608 : cmp eax, 0xfffff001 ; jae 0xbf617 ; ret
0x00000000000bf638 : cmp eax, 0xfffff001 ; jae 0xbf647 ; ret
0x00000000000cbf38 : cmp eax, 0xfffff001 ; jae 0xcbf47 ; ret
0x00000000000cc12b : cmp eax, 0xfffff001 ; jae 0xcc13a ; ret
0x00000000000cc208 : cmp eax, 0xfffff001 ; jae 0xcc217 ; ret
0x00000000000cc291 : cmp eax, 0xfffff001 ; jae 0xcc2d0 ; ret
0x00000000000cc2f1 : cmp eax, 0xfffff001 ; jae 0xcc330 ; ret
0x00000000000cc6f2 : cmp eax, 0xfffff001 ; jae 0xcc701 ; ret
0x00000000000cc778 : cmp eax, 0xfffff001 ; jae 0xcc787 ; ret
0x00000000000cd288 : cmp eax, 0xfffff001 ; jae 0xcd297 ; ret
0x00000000000cd428 : cmp eax, 0xfffff001 ; jae 0xcd437 ; ret
0x00000000000cd458 : cmp eax, 0xfffff001 ; jae 0xcd467 ; ret
0x00000000000cd4b8 : cmp eax, 0xfffff001 ; jae 0xcd4c7 ; ret
0x00000000000cd4e8 : cmp eax, 0xfffff001 ; jae 0xcd4f7 ; ret
0x00000000000cd518 : cmp eax, 0xfffff001 ; jae 0xcd527 ; ret
0x00000000000cd548 : cmp eax, 0xfffff001 ; jae 0xcd557 ; ret
0x00000000000ea768 : cmp eax, 0xfffff001 ; jae 0xea777 ; ret
0x00000000000ea798 : cmp eax, 0xfffff001 ; jae 0xea7a7 ; ret
0x00000000000ea7c8 : cmp eax, 0xfffff001 ; jae 0xea7d7 ; ret
0x00000000000ea7f8 : cmp eax, 0xfffff001 ; jae 0xea807 ; ret
0x00000000000ea828 : cmp eax, 0xfffff001 ; jae 0xea837 ; ret
0x00000000000ea858 : cmp eax, 0xfffff001 ; jae 0xea867 ; ret
0x00000000000ea888 : cmp eax, 0xfffff001 ; jae 0xea897 ; ret
0x00000000000ea8b8 : cmp eax, 0xfffff001 ; jae 0xea8c7 ; ret
0x00000000000f5a74 : cmp eax, 0xfffff001 ; jae 0xf5ab6 ; ret
0x00000000000f5ad4 : cmp eax, 0xfffff001 ; jae 0xf5b16 ; ret
0x00000000000f6b48 : cmp eax, 0xfffff001 ; jae 0xf6b57 ; ret
0x00000000000f6de8 : cmp eax, 0xfffff001 ; jae 0xf6df7 ; ret
0x00000000000f6e18 : cmp eax, 0xfffff001 ; jae 0xf6e27 ; ret
0x00000000000f6ee8 : cmp eax, 0xfffff001 ; jae 0xf6ef7 ; ret
0x00000000000f6f18 : cmp eax, 0xfffff001 ; jae 0xf6f27 ; ret
0x00000000000f6fd8 : cmp eax, 0xfffff001 ; jae 0xf6fe7 ; ret
0x00000000000f7008 : cmp eax, 0xfffff001 ; jae 0xf7017 ; ret
0x00000000000f7041 : cmp eax, 0xfffff001 ; jae 0xf7080 ; ret
0x00000000000f7261 : cmp eax, 0xfffff001 ; jae 0xf72a0 ; ret
0x00000000000f72c1 : cmp eax, 0xfffff001 ; jae 0xf7300 ; ret
0x00000000000f7318 : cmp eax, 0xfffff001 ; jae 0xf7327 ; ret
0x00000000000f77a8 : cmp eax, 0xfffff001 ; jae 0xf77b7 ; ret
0x00000000000f78f1 : cmp eax, 0xfffff001 ; jae 0xf7930 ; ret
0x00000000000f7948 : cmp eax, 0xfffff001 ; jae 0xf7957 ; ret
0x00000000000f7978 : cmp eax, 0xfffff001 ; jae 0xf7987 ; ret
0x00000000000f79a8 : cmp eax, 0xfffff001 ; jae 0xf79b7 ; ret
0x00000000000f79d8 : cmp eax, 0xfffff001 ; jae 0xf79e7 ; ret
0x00000000000f7a08 : cmp eax, 0xfffff001 ; jae 0xf7a17 ; ret
0x00000000000f7a41 : cmp eax, 0xfffff001 ; jae 0xf7a80 ; ret
0x00000000000f7a98 : cmp eax, 0xfffff001 ; jae 0xf7aa7 ; ret
0x00000000000f7ac8 : cmp eax, 0xfffff001 ; jae 0xf7ad7 ; ret
0x00000000000f8308 : cmp eax, 0xfffff001 ; jae 0xf8317 ; ret
0x00000000000f8338 : cmp eax, 0xfffff001 ; jae 0xf8347 ; ret
0x00000000000f8368 : cmp eax, 0xfffff001 ; jae 0xf8377 ; ret
0x00000000000f839b : cmp eax, 0xfffff001 ; jae 0xf83aa ; ret
0x00000000000f8978 : cmp eax, 0xfffff001 ; jae 0xf8987 ; ret
0x00000000000f89ab : cmp eax, 0xfffff001 ; jae 0xf89ba ; ret
0x00000000000f89d8 : cmp eax, 0xfffff001 ; jae 0xf89e7 ; ret
0x00000000000f8a08 : cmp eax, 0xfffff001 ; jae 0xf8a17 ; ret
0x00000000000f8a38 : cmp eax, 0xfffff001 ; jae 0xf8a47 ; ret
0x00000000000f8a6b : cmp eax, 0xfffff001 ; jae 0xf8a7a ; ret
0x00000000000f8a98 : cmp eax, 0xfffff001 ; jae 0xf8aa7 ; ret
0x00000000000f8ac8 : cmp eax, 0xfffff001 ; jae 0xf8ad7 ; ret
0x00000000000f8af8 : cmp eax, 0xfffff001 ; jae 0xf8b07 ; ret
0x00000000000fb731 : cmp eax, 0xfffff001 ; jae 0xfb770 ; ret
0x00000000000fba9b : cmp eax, 0xfffff001 ; jae 0xfbaaa ; ret
0x00000000000fc214 : cmp eax, 0xfffff001 ; jae 0xfc256 ; ret
0x00000000000fc968 : cmp eax, 0xfffff001 ; jae 0xfc977 ; ret
0x00000000000fc998 : cmp eax, 0xfffff001 ; jae 0xfc9a7 ; ret
0x00000000000fc9c8 : cmp eax, 0xfffff001 ; jae 0xfc9d7 ; ret
0x00000000000fcd68 : cmp eax, 0xfffff001 ; jae 0xfcd77 ; ret
0x00000000000fcf48 : cmp eax, 0xfffff001 ; jae 0xfcf57 ; ret
0x00000000000fcf81 : cmp eax, 0xfffff001 ; jae 0xfcfc0 ; ret
0x00000000000fcfe1 : cmp eax, 0xfffff001 ; jae 0xfd020 ; ret
0x00000000000fd4d8 : cmp eax, 0xfffff001 ; jae 0xfd4e7 ; ret
0x00000000000fd578 : cmp eax, 0xfffff001 ; jae 0xfd587 ; ret
0x00000000000fd5b4 : cmp eax, 0xfffff001 ; jae 0xfd5f6 ; ret
0x00000000000fd708 : cmp eax, 0xfffff001 ; jae 0xfd717 ; ret
0x00000000000fd738 : cmp eax, 0xfffff001 ; jae 0xfd747 ; ret
0x00000000000fd771 : cmp eax, 0xfffff001 ; jae 0xfd7b0 ; ret
0x00000000000fd7c8 : cmp eax, 0xfffff001 ; jae 0xfd7d7 ; ret
0x00000000000fd801 : cmp eax, 0xfffff001 ; jae 0xfd840 ; ret
0x00000000000fd858 : cmp eax, 0xfffff001 ; jae 0xfd867 ; ret
0x00000000000fdbc8 : cmp eax, 0xfffff001 ; jae 0xfdbd7 ; ret
0x00000000000fdbf8 : cmp eax, 0xfffff001 ; jae 0xfdc07 ; ret
0x00000000000fdc28 : cmp eax, 0xfffff001 ; jae 0xfdc37 ; ret
0x00000000000ff178 : cmp eax, 0xfffff001 ; jae 0xff187 ; ret
0x00000000000ff1a8 : cmp eax, 0xfffff001 ; jae 0xff1b7 ; ret
0x0000000000115b48 : cmp eax, 0xfffffe93 ; call rax
0x00000000000aad2f : cmp eax, 2 ; je 0xaad47 ; xor eax, eax ; ret
0x000000000013aa91 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000daf5e : cmp eax, 3 ; je 0xdaf78 ; xor eax, eax ; pop rbx ; ret
0x000000000011515a : cmp eax, 4 ; je 0x115165 ; ret
0x000000000019f6fd : cmp eax, dword ptr [rax] ; add al, ah ; sub dl, ch ; jmp rax
0x00000000000cc771 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000079615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x000000000019b1fd : cmp eax, dword ptr [rdx] ; add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001bd204 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x0000000000103b31 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000000abb6e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xabc69 ; ret
0x00000000000abb83 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xabc69 ; ret
0x00000000000abb98 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xabc69 ; ret
0x00000000000abbb3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabc69 ; ret
0x00000000000abbce : cmp eax, dword ptr [rsi + 0x20] ; jne 0xabc69 ; ret
0x00000000000abbe3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xabc65 ; ret
0x00000000000abbf8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xabc65 ; ret
0x00000000000abc03 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc65 ; ret
0x00000000000abc1e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xabc65 ; ret
0x00000000000abc33 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xabc65 ; ret
0x00000000000abc48 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xabc65 ; ret
0x00000000000abc53 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc65 ; ret
0x00000000000abb53 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xabc69 ; ret
0x00000000000abb23 : cmp eax, dword ptr [rsi + 4] ; jne 0xabc69 ; ret
0x00000000000abb38 : cmp eax, dword ptr [rsi + 8] ; jne 0xabc69 ; ret
0x00000000001727fa : cmp eax, dword ptr [rsi - 0x10] ; jne 0x172939 ; ret
0x0000000000172813 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x172939 ; ret
0x0000000000172923 : cmp eax, dword ptr [rsi - 4] ; jne 0x172937 ; xor eax, eax ; ret
0x0000000000172843 : cmp eax, dword ptr [rsi - 4] ; jne 0x172939 ; ret
0x0000000000172828 : cmp eax, dword ptr [rsi - 8] ; jne 0x172939 ; ret
0x00000000000abb0d : cmp eax, dword ptr [rsi] ; jne 0xabc68 ; ret
0x00000000001850f7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000100db4 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfcfd8
0x000000000007cc49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x000000000009ec2d : cmp eax, ecx ; je 0x9ec15 ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000172313 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001149cb : cmp eax, edx ; jb 0x1149c6 ; xor eax, eax ; ret
0x00000000001382e1 : cmp eax, edx ; je 0x1382f8 ; add rsp, 8 ; ret
0x00000000001235ba : cmp eax, edx ; jne 0x123599 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000048085 : cmp eax, edx ; jne 0x4807e ; xor eax, eax ; ret
0x000000000008873d : cmp eax, edx ; jne 0x886f7 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000010e9c9 : cmp eax, esi ; jb 0x10e9e1 ; mov eax, 1 ; ret
0x00000000000d7678 : cmp eax, esi ; jge 0xd7655 ; mov edx, eax ; jmp 0xd765e
0x0000000000135031 : cmp ebp, eax ; test eax, 0xebfffc28 ; retf
0x00000000001972a9 : cmp ebp, ebx ; jmp rsp
0x000000000006f58a : cmp ebp, edi ; je 0x6f5a0 ; mov eax, esi ; syscall
0x0000000000101ff5 : cmp ebp, esi ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000c038f : cmp ebx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001150f6 : cmp ebx, 0xa ; je 0x115101 ; ret
0x000000000007eed5 : cmp ebx, eax ; je 0x7eee6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017437a : cmp ebx, ebp ; jae 0x17438d ; call qword ptr [rbx]
0x00000000001743a9 : cmp ebx, ebp ; jb 0x1743a3 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000048b7c : cmp ecx, -1 ; jne 0x48b79 ; mov rax, rdx ; ret
0x000000000012e8d8 : cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f0e65 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012c4a5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f4189 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000024ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bc6c0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000009dab7 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x000000000009bb73 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x0000000000074f4e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000002d44 : cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x000000000001fb03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x000000000016fa0b : cmp ecx, eax ; jne 0x16fa39 ; xor eax, eax ; ret
0x000000000017084b : cmp ecx, eax ; jne 0x170879 ; xor eax, eax ; ret
0x000000000017087f : cmp ecx, eax ; jne 0x17088c ; xor eax, eax ; ret
0x000000000013bec3 : cmp ecx, edx ; jae 0x13bed6 ; xor eax, eax ; ret
0x000000000013bf03 : cmp ecx, edx ; jae 0x13bf16 ; xor eax, eax ; ret
0x000000000009ebd8 : cmp ecx, edx ; je 0x9ebd9 ; cmp ecx, esi ; je 0x9ebd9 ; ret
0x000000000009ebdc : cmp ecx, esi ; je 0x9ebd5 ; ret
0x00000000001276f5 : cmp edi, -1 ; je 0x12770f ; mov eax, r14d ; syscall
0x00000000000acc19 : cmp edi, 0x7f ; ja 0xacc2f ; mov eax, edi ; ret
0x0000000000095cf7 : cmp edi, 0xd ; je 0x95d11 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001745b8 : cmp edi, 1 ; ja 0x1745c5 ; ret
0x000000000010a6dd : cmp edi, 9 ; setbe al ; ret
0x000000000004a49a : cmp edi, eax ; jbe 0x4a498 ; nop ; pop rbx ; ret
0x00000000001056b3 : cmp edi, eax ; jne 0x1056f1 ; mov eax, 0x88 ; syscall
0x00000000000504b5 : cmp edi, ecx ; ja 0x504a0 ; mov eax, r8d ; ret
0x000000000019aa41 : cmp edi, ecx ; jmp rsp
0x00000000000fce31 : cmp edi, edx ; ja 0xfce65 ; ret
0x00000000000f6a40 : cmp edi, esi ; ja 0xf6a35 ; ret
0x000000000004a5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000195be5 : cmp edi, esp ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195c25 : cmp edi, esp ; call qword ptr [rax]
0x000000000003aa00 : cmp edx, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000cd1f8 : cmp edx, 0 ; mov eax, edx ; jle 0xcd210 ; ret
0x0000000000130ff8 : cmp edx, 0x6348ffff ; retf 0x1489
0x00000000001193cf : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000b957d : cmp edx, 0x8944ffff ; ret 0x894d
0x00000000000d16d6 : cmp edx, 1 ; sete al ; ret
0x000000000002da7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x00000000001153a2 : cmp edx, eax ; jne 0x115385 ; ret
0x0000000000083f8a : cmp edx, eax ; jne 0x83f55 ; ret
0x00000000000ac167 : cmp edx, eax ; jne 0xac157 ; xor eax, eax ; ret
0x00000000001234d6 : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000196ea1 : cmp edx, ebp ; jmp rsp
0x0000000000117591 : cmp edx, ecx ; ja 0x1175cd ; movsxd rdi, edi ; xor eax, eax ; syscall
0x0000000000117641 : cmp edx, ecx ; ja 0x11767d ; mov eax, 0x59 ; syscall
0x000000000013bdaf : cmp edx, ecx ; je 0x13bdc5 ; ret
0x000000000008f2e8 : cmp edx, ecx ; jne 0x8f2d5 ; ret
0x00000000000cda97 : cmp edx, ecx ; jne 0xcdac4 ; ret
0x0000000000114aaa : cmp edx, edi ; setae al ; ret
0x0000000000123ec6 : cmp edx, esi ; jb 0x123ebd ; mov eax, 0xffffffff ; ret
0x000000000009ebb8 : cmp edx, esi ; je 0x9ebb5 ; ret
0x00000000000adac6 : cmp edx, esi ; je 0xadad7 ; test edx, edx ; jne 0xadac9 ; ret
0x0000000000073059 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000000774f8 : cmp esi, 2 ; je 0x77510 ; mov dword ptr [rdi], edx ; ret
0x000000000002a695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x0000000000174869 : cmp esi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000000ac821 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000012e7ea : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12e7e1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001852c4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000072d5a : cmp esi, ecx ; jb 0x72d57 ; lea eax, [rdx + rdi] ; ret
0x000000000014a958 : cmp esi, ecx ; jle 0x14a89d ; ret
0x000000000007c00a : cmp esi, ecx ; jne 0x7c007 ; lea eax, [rdx + rdi] ; ret
0x0000000000123f3e : cmp esi, edx ; ja 0x123f2d ; mov eax, 0xffffffff ; ret
0x000000000004821d : cmp esi, edx ; jne 0x48216 ; xor eax, eax ; ret
0x0000000000195e3d : cmp esp, -1 ; retf 0xfc82
0x0000000000195e8d : cmp esp, 0xfc7710ff ; call rax
0x0000000000195c8d : cmp esp, 0xfc8166ff ; call rsi
0x0000000000195e89 : cmp esp, 0xfc8170ff ; call qword ptr [rax]
0x0000000000195e49 : cmp esp, 0xfc817aff ; jmp qword ptr [rax]
0x0000000000195e51 : cmp esp, 0xfc8790ff ; jmp qword ptr [rax]
0x00000000000796a1 : cmp esp, dword ptr [rax + 0xf480034] ; ret 0x8948
0x00000000001745b4 : cmp esp, dword ptr [rip - 0x7cb800] ; add dword ptr [rdi + 3], esi ; ret
0x00000000001745a5 : cmp esp, dword ptr [rip] ; add bl, dh ; ret
0x0000000000195be1 : cmp esp, edi ; call qword ptr [rax]
0x00000000000f6a0c : cmp esp, esi ; ja 0xf69a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x00000000000773e3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b577 ; ret
0x0000000000114a47 : cmp qword ptr [rdi], 0 ; je 0x114a5f ; ret
0x00000000001024ec : cmp qword ptr [rsi], 0 ; je 0x1024ff ; pop rbx ; ret
0x000000000003fddc : cmp qword ptr [rsp + 0x10], 0 ; jne 0x3fdb5 ; jmp 0x3fdbd
0x000000000003caec : cmp qword ptr [rsp + 8], 0 ; jne 0x3cac5 ; jmp 0x3cacd
0x0000000000094cd2 : cmp r11b, r14b ; ret
0x00000000001150f5 : cmp r11d, 0xa ; je 0x115102 ; ret
0x00000000000f6a0b : cmp r12, rsi ; ja 0xf69a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ec2c : cmp r8d, ecx ; je 0x9ec16 ; ret
0x00000000000d7677 : cmp r8d, esi ; jge 0xd7656 ; mov edx, eax ; jmp 0xd765f
0x000000000001fb02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00000000000e0fef : cmp r9b, 0x11 ; je 0xe1033 ; mov rdx, rax ; jmp 0xe0f97
0x000000000010f1c1 : cmp r9b, r13b ; ret
0x00000000001056be : cmp rax, -0x1000 ; ja 0x1056d9 ; ret
0x000000000010737e : cmp rax, -0x1000 ; ja 0x107399 ; ret
0x00000000001075c0 : cmp rax, -0x1000 ; ja 0x1075d8 ; ret
0x0000000000107672 : cmp rax, -0x1000 ; ja 0x107689 ; ret
0x00000000001076ac : cmp rax, -0x1000 ; ja 0x1076c9 ; ret
0x000000000010825d : cmp rax, -0x1000 ; ja 0x108278 ; ret
0x00000000001083dd : cmp rax, -0x1000 ; ja 0x1083f8 ; ret
0x0000000000108877 : cmp rax, -0x1000 ; ja 0x108888 ; ret
0x0000000000108919 : cmp rax, -0x1000 ; ja 0x108930 ; ret
0x00000000001089c9 : cmp rax, -0x1000 ; ja 0x1089e0 ; ret
0x000000000011582a : cmp rax, -0x1000 ; ja 0x115841 ; ret
0x00000000001158d7 : cmp rax, -0x1000 ; ja 0x115903 ; ret
0x000000000011759c : cmp rax, -0x1000 ; ja 0x1175b9 ; ret
0x000000000011764c : cmp rax, -0x1000 ; ja 0x117669 ; ret
0x0000000000035428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x0000000000035730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x000000000003579c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00000000000357e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00000000000bc437 : cmp rax, -0x1000 ; ja 0xbc451 ; ret
0x00000000000c83d7 : cmp rax, -0x1000 ; ja 0xc83f1 ; pop rbx ; ret
0x00000000000c9651 : cmp rax, -0x1000 ; ja 0xc9668 ; ret
0x00000000000cbfe0 : cmp rax, -0x1000 ; ja 0xcbff8 ; ret
0x00000000000cc07a : cmp rax, -0x1000 ; ja 0xcc090 ; ret
0x00000000000cc16b : cmp rax, -0x1000 ; ja 0xcc180 ; ret
0x00000000000cd2c3 : cmp rax, -0x1000 ; ja 0xcd2d8 ; ret
0x00000000000cd333 : cmp rax, -0x1000 ; ja 0xcd348 ; ret
0x00000000000cd587 : cmp rax, -0x1000 ; ja 0xcd598 ; ret
0x00000000000cd607 : cmp rax, -0x1000 ; ja 0xcd618 ; ret
0x00000000000f6be5 : cmp rax, -0x1000 ; ja 0xf6bf9 ; ret
0x00000000000f6c34 : cmp rax, -0x1000 ; ja 0xf6c49 ; ret
0x00000000000f6c85 : cmp rax, -0x1000 ; ja 0xf6c99 ; ret
0x00000000000f6cdd : cmp rax, -0x1000 ; ja 0xf6cf9 ; ret
0x00000000000f6d41 : cmp rax, -0x1000 ; ja 0xf6d59 ; ret
0x00000000000f6d9a : cmp rax, -0x1000 ; ja 0xf6db1 ; ret
0x00000000000f6f79 : cmp rax, -0x1000 ; ja 0xf6f91 ; ret
0x00000000000f7643 : cmp rax, -0x1000 ; ja 0xf7689 ; ret
0x00000000000fbad2 : cmp rax, -0x1000 ; ja 0xfbae9 ; ret
0x00000000000fbb26 : cmp rax, -0x1000 ; ja 0xfbb39 ; ret
0x00000000000fc27a : cmp rax, -0x1000 ; ja 0xfc290 ; ret
0x00000000000fc79e : cmp rax, -0x1000 ; ja 0xfc7b8 ; ret
0x00000000000fd04a : cmp rax, -0x1000 ; ja 0xfd060 ; ret
0x00000000000fd0fa : cmp rax, -0x1000 ; ja 0xfd110 ; ret
0x00000000000fd1a5 : cmp rax, -0x1000 ; ja 0xfd1b8 ; ret
0x00000000000fd215 : cmp rax, -0x1000 ; ja 0xfd228 ; ret
0x00000000000fd296 : cmp rax, -0x1000 ; ja 0xfd2a8 ; ret
0x00000000000fd346 : cmp rax, -0x1000 ; ja 0xfd358 ; ret
0x00000000000fd896 : cmp rax, -0x1000 ; ja 0xfd8a9 ; ret
0x00000000000fefb7 : cmp rax, -0x1000 ; ja 0xfefd1 ; ret
0x00000000000ff04b : cmp rax, -0x1000 ; ja 0xff061 ; ret
0x00000000000ff0eb : cmp rax, -0x1000 ; ja 0xff101 ; ret
0x00000000000ff13f : cmp rax, -0x1000 ; ja 0xff159 ; ret
0x00000000001014d9 : cmp rax, -0xfff ; jae 0x1014ea ; ret
0x0000000000101747 : cmp rax, -0xfff ; jae 0x101758 ; ret
0x0000000000101777 : cmp rax, -0xfff ; jae 0x101788 ; ret
0x00000000001017b0 : cmp rax, -0xfff ; jae 0x1017f1 ; ret
0x0000000000101807 : cmp rax, -0xfff ; jae 0x101818 ; ret
0x0000000000101837 : cmp rax, -0xfff ; jae 0x101848 ; ret
0x000000000010186a : cmp rax, -0xfff ; jae 0x10187b ; ret
0x0000000000101897 : cmp rax, -0xfff ; jae 0x1018a8 ; ret
0x00000000001018c7 : cmp rax, -0xfff ; jae 0x1018d8 ; ret
0x00000000001018f7 : cmp rax, -0xfff ; jae 0x101908 ; ret
0x0000000000101927 : cmp rax, -0xfff ; jae 0x101938 ; ret
0x0000000000105fea : cmp rax, -0xfff ; jae 0x105ffb ; ret
0x0000000000106017 : cmp rax, -0xfff ; jae 0x106028 ; ret
0x0000000000106047 : cmp rax, -0xfff ; jae 0x106058 ; ret
0x000000000010607a : cmp rax, -0xfff ; jae 0x10608b ; ret
0x00000000001060aa : cmp rax, -0xfff ; jae 0x1060bb ; ret
0x00000000001060d7 : cmp rax, -0xfff ; jae 0x1060e8 ; ret
0x000000000010610a : cmp rax, -0xfff ; jae 0x10611b ; ret
0x0000000000106137 : cmp rax, -0xfff ; jae 0x106148 ; ret
0x0000000000106167 : cmp rax, -0xfff ; jae 0x106178 ; ret
0x000000000010619a : cmp rax, -0xfff ; jae 0x1061ab ; ret
0x00000000001061c7 : cmp rax, -0xfff ; jae 0x1061d8 ; ret
0x00000000001061fa : cmp rax, -0xfff ; jae 0x10620b ; ret
0x00000000001072e7 : cmp rax, -0xfff ; jae 0x1072f8 ; ret
0x0000000000107317 : cmp rax, -0xfff ; jae 0x107328 ; ret
0x0000000000107447 : cmp rax, -0xfff ; jae 0x107458 ; ret
0x0000000000107487 : cmp rax, -0xfff ; jae 0x107498 ; ret
0x00000000001074b7 : cmp rax, -0xfff ; jae 0x1074c8 ; ret
0x00000000001074e7 : cmp rax, -0xfff ; jae 0x1074f8 ; ret
0x0000000000107517 : cmp rax, -0xfff ; jae 0x107528 ; ret
0x000000000010773a : cmp rax, -0xfff ; jae 0x10774b ; ret
0x0000000000107767 : cmp rax, -0xfff ; jae 0x107778 ; ret
0x0000000000107797 : cmp rax, -0xfff ; jae 0x1077a8 ; ret
0x00000000001077c7 : cmp rax, -0xfff ; jae 0x1077d8 ; ret
0x000000000010780a : cmp rax, -0xfff ; jae 0x10781b ; ret
0x0000000000107837 : cmp rax, -0xfff ; jae 0x107848 ; ret
0x0000000000107867 : cmp rax, -0xfff ; jae 0x107878 ; ret
0x0000000000107897 : cmp rax, -0xfff ; jae 0x1078a8 ; ret
0x00000000001078c7 : cmp rax, -0xfff ; jae 0x1078d8 ; ret
0x00000000001078f7 : cmp rax, -0xfff ; jae 0x107908 ; ret
0x0000000000107927 : cmp rax, -0xfff ; jae 0x107938 ; ret
0x0000000000107957 : cmp rax, -0xfff ; jae 0x107968 ; ret
0x0000000000107987 : cmp rax, -0xfff ; jae 0x107998 ; ret
0x00000000001079ba : cmp rax, -0xfff ; jae 0x1079cb ; ret
0x00000000001079f3 : cmp rax, -0xfff ; jae 0x107a37 ; ret
0x0000000000107a47 : cmp rax, -0xfff ; jae 0x107a58 ; ret
0x0000000000107a7a : cmp rax, -0xfff ; jae 0x107a8b ; ret
0x0000000000107aa7 : cmp rax, -0xfff ; jae 0x107ab8 ; ret
0x0000000000107ad7 : cmp rax, -0xfff ; jae 0x107ae8 ; ret
0x0000000000107b07 : cmp rax, -0xfff ; jae 0x107b18 ; ret
0x0000000000107b37 : cmp rax, -0xfff ; jae 0x107b48 ; ret
0x0000000000107b67 : cmp rax, -0xfff ; jae 0x107b78 ; ret
0x0000000000107b9a : cmp rax, -0xfff ; jae 0x107bab ; ret
0x0000000000107bca : cmp rax, -0xfff ; jae 0x107bdb ; ret
0x0000000000107bf7 : cmp rax, -0xfff ; jae 0x107c08 ; ret
0x0000000000107c27 : cmp rax, -0xfff ; jae 0x107c38 ; ret
0x0000000000107c5a : cmp rax, -0xfff ; jae 0x107c6b ; ret
0x0000000000107c8a : cmp rax, -0xfff ; jae 0x107c9b ; ret
0x0000000000107cba : cmp rax, -0xfff ; jae 0x107ccb ; ret
0x0000000000107cf3 : cmp rax, -0xfff ; jae 0x107d37 ; ret
0x0000000000107d47 : cmp rax, -0xfff ; jae 0x107d58 ; ret
0x0000000000107d83 : cmp rax, -0xfff ; jae 0x107dc7 ; ret
0x0000000000107dd7 : cmp rax, -0xfff ; jae 0x107de8 ; ret
0x0000000000107e07 : cmp rax, -0xfff ; jae 0x107e18 ; ret
0x0000000000107e43 : cmp rax, -0xfff ; jae 0x107e87 ; ret
0x0000000000107e97 : cmp rax, -0xfff ; jae 0x107ea8 ; ret
0x0000000000107eca : cmp rax, -0xfff ; jae 0x107edb ; ret
0x0000000000107ef7 : cmp rax, -0xfff ; jae 0x107f08 ; ret
0x0000000000107f27 : cmp rax, -0xfff ; jae 0x107f38 ; ret
0x0000000000107f5a : cmp rax, -0xfff ; jae 0x107f6b ; ret
0x0000000000107f90 : cmp rax, -0xfff ; jae 0x107fd1 ; ret
0x0000000000107fe7 : cmp rax, -0xfff ; jae 0x107ff8 ; ret
0x000000000010801a : cmp rax, -0xfff ; jae 0x10802b ; ret
0x000000000010804a : cmp rax, -0xfff ; jae 0x10805b ; ret
0x00000000001080a0 : cmp rax, -0xfff ; jae 0x1080e1 ; ret
0x00000000001080f7 : cmp rax, -0xfff ; jae 0x108108 ; ret
0x0000000000108130 : cmp rax, -0xfff ; jae 0x108171 ; ret
0x0000000000108187 : cmp rax, -0xfff ; jae 0x108198 ; ret
0x00000000001081b7 : cmp rax, -0xfff ; jae 0x1081c8 ; ret
0x00000000001081ea : cmp rax, -0xfff ; jae 0x1081fb ; ret
0x0000000000108217 : cmp rax, -0xfff ; jae 0x108228 ; ret
0x0000000000108313 : cmp rax, -0xfff ; jae 0x108357 ; ret
0x0000000000108370 : cmp rax, -0xfff ; jae 0x1083b1 ; ret
0x0000000000108490 : cmp rax, -0xfff ; jae 0x1084d1 ; ret
0x00000000001084f3 : cmp rax, -0xfff ; jae 0x108537 ; ret
0x000000000010854a : cmp rax, -0xfff ; jae 0x10855b ; ret
0x0000000000108577 : cmp rax, -0xfff ; jae 0x108588 ; ret
0x00000000001085a7 : cmp rax, -0xfff ; jae 0x1085b8 ; ret
0x00000000001085da : cmp rax, -0xfff ; jae 0x1085eb ; ret
0x0000000000108b33 : cmp rax, -0xfff ; jae 0x108b77 ; ret
0x0000000000108b93 : cmp rax, -0xfff ; jae 0x108bd7 ; ret
0x0000000000108be7 : cmp rax, -0xfff ; jae 0x108bf8 ; ret
0x0000000000108c17 : cmp rax, -0xfff ; jae 0x108c28 ; ret
0x0000000000108c47 : cmp rax, -0xfff ; jae 0x108c58 ; ret
0x0000000000108c77 : cmp rax, -0xfff ; jae 0x108c88 ; ret
0x0000000000108caa : cmp rax, -0xfff ; jae 0x108cbb ; ret
0x0000000000108cda : cmp rax, -0xfff ; jae 0x108ceb ; ret
0x0000000000108d07 : cmp rax, -0xfff ; jae 0x108d18 ; ret
0x0000000000108d37 : cmp rax, -0xfff ; jae 0x108d48 ; ret
0x0000000000108d67 : cmp rax, -0xfff ; jae 0x108d78 ; ret
0x0000000000108d97 : cmp rax, -0xfff ; jae 0x108da8 ; ret
0x000000000014069a : cmp rax, -0xfff ; jae 0x1406ab ; ret
0x00000000001406ea : cmp rax, -0xfff ; jae 0x1406fb ; ret
0x0000000000035767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x0000000000035e27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x000000000006b367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x000000000006b39a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00000000000bc517 : cmp rax, -0xfff ; jae 0xbc528 ; ret
0x00000000000bf607 : cmp rax, -0xfff ; jae 0xbf618 ; ret
0x00000000000bf637 : cmp rax, -0xfff ; jae 0xbf648 ; ret
0x00000000000cbf37 : cmp rax, -0xfff ; jae 0xcbf48 ; ret
0x00000000000cc12a : cmp rax, -0xfff ; jae 0xcc13b ; ret
0x00000000000cc207 : cmp rax, -0xfff ; jae 0xcc218 ; ret
0x00000000000cc290 : cmp rax, -0xfff ; jae 0xcc2d1 ; ret
0x00000000000cc2f0 : cmp rax, -0xfff ; jae 0xcc331 ; ret
0x00000000000cc777 : cmp rax, -0xfff ; jae 0xcc788 ; ret
0x00000000000cd287 : cmp rax, -0xfff ; jae 0xcd298 ; ret
0x00000000000cd427 : cmp rax, -0xfff ; jae 0xcd438 ; ret
0x00000000000cd457 : cmp rax, -0xfff ; jae 0xcd468 ; ret
0x00000000000cd4b7 : cmp rax, -0xfff ; jae 0xcd4c8 ; ret
0x00000000000cd4e7 : cmp rax, -0xfff ; jae 0xcd4f8 ; ret
0x00000000000cd517 : cmp rax, -0xfff ; jae 0xcd528 ; ret
0x00000000000cd547 : cmp rax, -0xfff ; jae 0xcd558 ; ret
0x00000000000ea767 : cmp rax, -0xfff ; jae 0xea778 ; ret
0x00000000000ea797 : cmp rax, -0xfff ; jae 0xea7a8 ; ret
0x00000000000ea7c7 : cmp rax, -0xfff ; jae 0xea7d8 ; ret
0x00000000000ea7f7 : cmp rax, -0xfff ; jae 0xea808 ; ret
0x00000000000ea827 : cmp rax, -0xfff ; jae 0xea838 ; ret
0x00000000000ea857 : cmp rax, -0xfff ; jae 0xea868 ; ret
0x00000000000ea887 : cmp rax, -0xfff ; jae 0xea898 ; ret
0x00000000000ea8b7 : cmp rax, -0xfff ; jae 0xea8c8 ; ret
0x00000000000f5a73 : cmp rax, -0xfff ; jae 0xf5ab7 ; ret
0x00000000000f5ad3 : cmp rax, -0xfff ; jae 0xf5b17 ; ret
0x00000000000f6b47 : cmp rax, -0xfff ; jae 0xf6b58 ; ret
0x00000000000f6de7 : cmp rax, -0xfff ; jae 0xf6df8 ; ret
0x00000000000f6e17 : cmp rax, -0xfff ; jae 0xf6e28 ; ret
0x00000000000f6ee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00000000000f6f17 : cmp rax, -0xfff ; jae 0xf6f28 ; ret
0x00000000000f6fd7 : cmp rax, -0xfff ; jae 0xf6fe8 ; ret
0x00000000000f7007 : cmp rax, -0xfff ; jae 0xf7018 ; ret
0x00000000000f7040 : cmp rax, -0xfff ; jae 0xf7081 ; ret
0x00000000000f7260 : cmp rax, -0xfff ; jae 0xf72a1 ; ret
0x00000000000f72c0 : cmp rax, -0xfff ; jae 0xf7301 ; ret
0x00000000000f7317 : cmp rax, -0xfff ; jae 0xf7328 ; ret
0x00000000000f77a7 : cmp rax, -0xfff ; jae 0xf77b8 ; ret
0x00000000000f78f0 : cmp rax, -0xfff ; jae 0xf7931 ; ret
0x00000000000f7947 : cmp rax, -0xfff ; jae 0xf7958 ; ret
0x00000000000f7977 : cmp rax, -0xfff ; jae 0xf7988 ; ret
0x00000000000f79a7 : cmp rax, -0xfff ; jae 0xf79b8 ; ret
0x00000000000f79d7 : cmp rax, -0xfff ; jae 0xf79e8 ; ret
0x00000000000f7a07 : cmp rax, -0xfff ; jae 0xf7a18 ; ret
0x00000000000f7a40 : cmp rax, -0xfff ; jae 0xf7a81 ; ret
0x00000000000f7a97 : cmp rax, -0xfff ; jae 0xf7aa8 ; ret
0x00000000000f7ac7 : cmp rax, -0xfff ; jae 0xf7ad8 ; ret
0x00000000000f8307 : cmp rax, -0xfff ; jae 0xf8318 ; ret
0x00000000000f8337 : cmp rax, -0xfff ; jae 0xf8348 ; ret
0x00000000000f8367 : cmp rax, -0xfff ; jae 0xf8378 ; ret
0x00000000000f839a : cmp rax, -0xfff ; jae 0xf83ab ; ret
0x00000000000f8977 : cmp rax, -0xfff ; jae 0xf8988 ; ret
0x00000000000f89aa : cmp rax, -0xfff ; jae 0xf89bb ; ret
0x00000000000f89d7 : cmp rax, -0xfff ; jae 0xf89e8 ; ret
0x00000000000f8a07 : cmp rax, -0xfff ; jae 0xf8a18 ; ret
0x00000000000f8a37 : cmp rax, -0xfff ; jae 0xf8a48 ; ret
0x00000000000f8a6a : cmp rax, -0xfff ; jae 0xf8a7b ; ret
0x00000000000f8a97 : cmp rax, -0xfff ; jae 0xf8aa8 ; ret
0x00000000000f8ac7 : cmp rax, -0xfff ; jae 0xf8ad8 ; ret
0x00000000000f8af7 : cmp rax, -0xfff ; jae 0xf8b08 ; ret
0x00000000000fb730 : cmp rax, -0xfff ; jae 0xfb771 ; ret
0x00000000000fba9a : cmp rax, -0xfff ; jae 0xfbaab ; ret
0x00000000000fc213 : cmp rax, -0xfff ; jae 0xfc257 ; ret
0x00000000000fc967 : cmp rax, -0xfff ; jae 0xfc978 ; ret
0x00000000000fc997 : cmp rax, -0xfff ; jae 0xfc9a8 ; ret
0x00000000000fc9c7 : cmp rax, -0xfff ; jae 0xfc9d8 ; ret
0x00000000000fcd67 : cmp rax, -0xfff ; jae 0xfcd78 ; ret
0x00000000000fcf47 : cmp rax, -0xfff ; jae 0xfcf58 ; ret
0x00000000000fcf80 : cmp rax, -0xfff ; jae 0xfcfc1 ; ret
0x00000000000fcfe0 : cmp rax, -0xfff ; jae 0xfd021 ; ret
0x00000000000fd4d7 : cmp rax, -0xfff ; jae 0xfd4e8 ; ret
0x00000000000fd577 : cmp rax, -0xfff ; jae 0xfd588 ; ret
0x00000000000fd5b3 : cmp rax, -0xfff ; jae 0xfd5f7 ; ret
0x00000000000fd707 : cmp rax, -0xfff ; jae 0xfd718 ; ret
0x00000000000fd737 : cmp rax, -0xfff ; jae 0xfd748 ; ret
0x00000000000fd770 : cmp rax, -0xfff ; jae 0xfd7b1 ; ret
0x00000000000fd7c7 : cmp rax, -0xfff ; jae 0xfd7d8 ; ret
0x00000000000fd800 : cmp rax, -0xfff ; jae 0xfd841 ; ret
0x00000000000fd857 : cmp rax, -0xfff ; jae 0xfd868 ; ret
0x00000000000fdbc7 : cmp rax, -0xfff ; jae 0xfdbd8 ; ret
0x00000000000fdbf7 : cmp rax, -0xfff ; jae 0xfdc08 ; ret
0x00000000000fdc27 : cmp rax, -0xfff ; jae 0xfdc38 ; ret
0x00000000000ff177 : cmp rax, -0xfff ; jae 0xff188 ; ret
0x00000000000ff1a7 : cmp rax, -0xfff ; jae 0xff1b8 ; ret
0x0000000000079614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x0000000000100db3 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfcfd9
0x000000000007cc48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x00000000001149ca : cmp rax, rdx ; jb 0x1149c7 ; xor eax, eax ; ret
0x00000000001149c9 : cmp rax, rdx ; jb 0x1149c8 ; xor eax, eax ; ret
0x00000000001382e0 : cmp rax, rdx ; je 0x1382f9 ; add rsp, 8 ; ret
0x0000000000048084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x000000000008873c : cmp rax, rdx ; jne 0x886f8 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007eed4 : cmp rbx, rax ; je 0x7eee7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174379 : cmp rbx, rbp ; jae 0x17438e ; call qword ptr [rbx]
0x00000000001743a8 : cmp rbx, rbp ; jb 0x1743a4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000074f4d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016fa0a : cmp rcx, rax ; jne 0x16fa3a ; xor eax, eax ; ret
0x000000000017084a : cmp rcx, rax ; jne 0x17087a ; xor eax, eax ; ret
0x00000000001745b7 : cmp rdi, 1 ; ja 0x1745c6 ; ret
0x000000000004a499 : cmp rdi, r8 ; jbe 0x4a499 ; nop ; pop rbx ; ret
0x00000000000fce30 : cmp rdi, rdx ; ja 0xfce66 ; ret
0x00000000000f6a3f : cmp rdi, rsi ; ja 0xf6a36 ; ret
0x0000000000083f89 : cmp rdx, r8 ; jne 0x83f56 ; ret
0x00000000001153a1 : cmp rdx, rax ; jne 0x115386 ; ret
0x00000000000ac166 : cmp rdx, rax ; jne 0xac158 ; xor eax, eax ; ret
0x00000000001234d5 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000013bdae : cmp rdx, rcx ; je 0x13bdc6 ; ret
0x000000000008f2e7 : cmp rdx, rcx ; jne 0x8f2d6 ; ret
0x000000000008f2e6 : cmp rdx, rcx ; jne 0x8f2d7 ; ret
0x00000000000cda96 : cmp rdx, rcx ; jne 0xcdac5 ; ret
0x0000000000114aa9 : cmp rdx, rdi ; setae al ; ret
0x0000000000072d59 : cmp rsi, rcx ; jb 0x72d58 ; lea eax, [rdx + rdi] ; ret
0x000000000007c009 : cmp rsi, rcx ; jne 0x7c008 ; lea eax, [rdx + rdi] ; ret
0x000000000004821c : cmp rsi, rdx ; jne 0x48217 ; xor eax, eax ; ret
0x0000000000110bd2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110bfe : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014c4c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c7c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d6c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a622d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x0000000000082bd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000008e3f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000199c45 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x000000000014d3c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016f489 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000310d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000002b766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000001832f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1832c2 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000147af6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cdc7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185411 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000000e34fe : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000000ae296 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x0000000000019138 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x18
0x00000000001950b5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x00000000001950b9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000194ff5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x00000000000a32d0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000188cc1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000196151 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000196211 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdx
0x000000000019620d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001b1b11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x0000000000001dbb : cmpsd dword ptr [rsi], dword ptr [rdi] ; fld dword ptr [rdx + 0x6b865524] ; retf
0x00000000001ae1b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a11b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001986a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000182ddf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000000038f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000ed735 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x00000000001950c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000019503d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000195041 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x00000000000038f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000174359 : cmpxchg dword ptr [rip + 0x252518], edx ; je 0x17436c ; ret
0x000000000003a6a3 : cqo ; idiv rsi ; ret
0x00000000000b33f2 : cqo ; or eax, 0x3d8d4800 ; ret
0x0000000000029c43 : cwde ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00000000000f4cdc : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000132aaf : cwde ; add byte ptr [rax], al ; add bl, ch ; retf 0x8b48
0x00000000000bea23 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001355ef : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000029a6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000036953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b5775 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000d537f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000db0da : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000002671f : cwde ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000015a913 : cwde ; add byte ptr es:[rax + 0x39], cl ; retf 0x377
0x00000000001998ed : cwde ; add dword ptr [rax], eax ; hlt ; retf 0xfff6
0x00000000000852eb : cwde ; add rax, rdx ; jmp rax
0x00000000001ab088 : cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b29a8 : cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5fd8 : cwde ; int1 ; sti ; call rcx
0x00000000001b0c38 : cwde ; jno 0x1b0c33 ; jmp qword ptr [rcx]
0x00000000001b5478 : cwde ; mov ah, 0xf6 ; call rsi
0x0000000000105b46 : cwde ; mov eax, 3 ; syscall
0x0000000000187cd4 : cwde ; mov ebp, 0xbfd8fffd ; std ; lcall [rax] ; ret 0xfffd
0x00000000000fc1ef : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000019d598 : cwde ; or ebp, ecx ; call qword ptr [rcx]
0x000000000012b094 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134d84 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134dc3 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000001b09c8 : cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000003afd : cwde ; ret
0x000000000003998c : cwde ; ret 0x38
0x000000000009f484 : cwde ; ret 0xfffe
0x0000000000003c05 : cwde ; retf
0x000000000000238a : cwde ; retf 0x81c0
0x0000000000142914 : cwde ; retf 0xfff4
0x00000000000fec84 : cwde ; retf 0xfff8
0x00000000000633d6 : cwde ; retf 0xffff
0x0000000000071384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x000000000012415e : cwde ; shr rax, 4 ; ret
0x00000000001bafa9 : cwde ; sti ; jmp qword ptr [rdx]
0x00000000000ea694 : cwde ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00000000001ac6c8 : cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001ad7a8 : cwde ; xchg esp, esi ; call qword ptr [rsi]
0x00000000000a4819 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000a2801 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000081bd6 : dec byte ptr [r8 - 0x75] ; ret
0x00000000000a481a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a2802 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000049ab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x00000000000886e5 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x0000000000081c54 : dec byte ptr [rax - 0x73] ; ret
0x0000000000081bd7 : dec byte ptr [rax - 0x75] ; ret
0x0000000000087a37 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000059058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x00000000000ff945 : dec byte ptr [rax - 0x77] ; fucomip st(0) ; ret 0xf788
0x000000000008b6e9 : dec byte ptr [rax - 0x77] ; ret
0x000000000013cb42 : dec byte ptr [rax - 0x77] ; retf 0x8944
0x000000000003e054 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000d4827 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000391aa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000010904f : dec byte ptr [rcx + rcx*4 - 0x19] ; mov eax, 0x14 ; syscall
0x000000000005e793 : dec dword ptr [r8 + 0x39] ; ret
0x00000000000813fc : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x000000000009e977 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x0000000000074039 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a499a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a2942 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003e1ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000b0818 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d523c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000007f47d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000469c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x0000000000083ccd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000099718 : dec dword ptr [rax + 0x29] ; retf
0x00000000000d950b : dec dword ptr [rax + 0x29] ; retf 0xd285
0x00000000000cfcd0 : dec dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0xe283
0x000000000005e794 : dec dword ptr [rax + 0x39] ; ret
0x000000000005c58f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000061b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000000bf37e : dec dword ptr [rax + 0x39] ; retf
0x00000000000658c3 : dec dword ptr [rax + 0x39] ; retf 0x840f
0x000000000012138c : dec dword ptr [rax + 0x39] ; retf 0x870f
0x00000000001175ef : dec dword ptr [rax + 0x39] ; retf 0x877
0x0000000000063d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c613f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000005c337 : dec dword ptr [rax + 0x63] ; ret
0x00000000000edcd9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000057c5e : dec dword ptr [rax + 0x63] ; retf
0x0000000000130ffb : dec dword ptr [rax + 0x63] ; retf 0x1489
0x00000000000c5c02 : dec dword ptr [rax + 0x63] ; retf 0x8944
0x000000000003b5d1 : dec dword ptr [rax + 0x63] ; retf 0x894c
0x000000000010901f : dec dword ptr [rax + 0x63] ; retf 0x8b48
0x0000000000130fd7 : dec dword ptr [rax + 0x63] ; retf 0xfe83
0x00000000000c83cc : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x000000000006c70b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000008d6d9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000128be4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x000000000008f834 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003aa02 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f6a6b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000000878d1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000051d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000142b96 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005ebf5 : dec dword ptr [rax + 1] ; ret
0x0000000000046bde : dec dword ptr [rax + 1] ; retf 0xf66
0x00000000001178bc : dec dword ptr [rax + 9] ; retf 0x8348
0x00000000000360c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004b686 : dec dword ptr [rax - 0x39] ; ret
0x00000000000ce0fc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000c023c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000fc1ed : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007f453 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x0000000000083ca2 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x00000000000fe5f4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000ac9e6 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x000000000004872d : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x000000000005ee2b : dec dword ptr [rax - 0x75] ; adc ah, byte ptr [rsi - 0x77] ; add ch, cl ; retf 0xffd9
0x00000000000671b0 : dec dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000012dc1f : dec dword ptr [rax - 0x75] ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x0000000000112e60 : dec dword ptr [rax - 0x75] ; cmp al, 0x24 ; call 0x1f8af
0x0000000000111ead : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000010f1be : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000102acd : dec dword ptr [rax - 0x75] ; jge 0x102ad7 ; call rbx
0x0000000000102d80 : dec dword ptr [rax - 0x75] ; jge 0x102d8a ; call rbx
0x0000000000104918 : dec dword ptr [rax - 0x75] ; jge 0x104922 ; call rbx
0x00000000000f360c : dec dword ptr [rax - 0x75] ; jl 0xf363d ; and al, ch ; xchg eax, ecx ; ret 0xfff2
0x00000000000ebc4e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x000000000013ed49 : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x75], cl ; xor al, ch ; retf 0xa
0x0000000000048da7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000081eef : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e243d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x000000000012dc38 : dec dword ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x000000000007a8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x000000000008f4d8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000fceca : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013bf8c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000013a869 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000b7fb3 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000133569 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x0000000000057fd5 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xfc78
0x0000000000033edd : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xfeb9
0x0000000000020fd5 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffe8
0x0000000000133671 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffee
0x00000000000be861 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; retf
0x00000000000ad41e : dec dword ptr [rax - 0x77] ; fucomip st(0) ; stc ; retf
0x0000000000172b6a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000133679 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8ae
0x00000000000d4e15 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0xd1876
0x00000000001341d0 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000002233e : dec dword ptr [rax - 0x77] ; ret
0x00000000000fcd23 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fce1e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000ea961 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000f3523 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000005ebeb : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000076f93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000005ed1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00000000000e0a7e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x0000000000036b2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00000000000369d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x0000000000069a42 : dec dword ptr [rax - 0x77] ; ret 0x65e8
0x00000000000ce18c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000002facb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x000000000011da7a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000001400b3 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f33f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000355b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000057af2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000096e86 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000134d86 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000d0238 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000006af20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x0000000000142e9f : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000593ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c9a4c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000005dffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x0000000000134dc5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000095755 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dd040 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000008783e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009d24c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x000000000002fb34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000002100a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x00000000001013ae : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000012e83a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000021002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00000000000519c8 : dec dword ptr [rax - 0x77] ; retf
0x000000000006578f : dec dword ptr [rax - 0x77] ; retf 0x18e8
0x0000000000068780 : dec dword ptr [rax - 0x77] ; retf 0x27e8
0x000000000002505e : dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000004d83c : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000112146 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000002372f : dec dword ptr [rax - 0x77] ; retf 0x8b41
0x00000000000689e7 : dec dword ptr [rax - 0x77] ; retf 0xc0e8
0x00000000000813fd : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000bc3fd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115adf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c634d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b64 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000b4c44 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000071e9e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000016d4cc : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000000e0b25 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x000000000010fbd0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000896c0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x000000000012b03f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000fef70 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006dcdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x0000000000105dd6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000108ddf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000959e0 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001402a6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001400af : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000312f1 : dec dword ptr [rax - 0x7d] ; ret
0x000000000007f42f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000025c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d93f1 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000004f7b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000d6555 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000bf356 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000060ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000d02f1 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000076a48 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a8cc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000b9916 : dec dword ptr [rbp + 1] ; retf
0x0000000000189afb : dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189af7 : dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00000000000f8f23 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001380a0 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x000000000009bd53 : dec dword ptr [rbp + rcx*4 + 0x58] ; dec dword ptr [rcx + 0x29] ; retf
0x000000000004882c : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x0000000000102f8e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000b07d5 : dec dword ptr [rbp - 0x76b7caae] ; retf
0x00000000000b5c9c : dec dword ptr [rbp - 0x76b7e7ae] ; retf
0x00000000000d46e0 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000000ee3ce : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x0000000000099d3d : dec dword ptr [rbp - 0x77] ; retf
0x000000000009d27f : dec dword ptr [rbp - 0x77] ; retf 0x894c
0x00000000000989bf : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013d6f9 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00000000000f5bd2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dea6f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001437cd : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000d5818 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x000000000019b1fb : dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x00000000000db8b9 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00000000000adfc5 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000004dc0e : dec dword ptr [rcx + 0x29] ; ret
0x00000000000d3119 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x000000000009bd57 : dec dword ptr [rcx + 0x29] ; retf
0x000000000004d7dc : dec dword ptr [rcx + 0x39] ; ret
0x000000000004df52 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000010ce9b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000002ebb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000004f41b : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000000711ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x00000000000533f9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x00000000000ea8f9 : dec dword ptr [rcx + 0xf] ; int1 ; mov eax, ecx ; syscall
0x000000000019b453 : dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x000000000008162d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00000000000e35b6 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x1f8ae
0x00000000000e35b5 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x1f8af
0x00000000001091f7 : dec dword ptr [rcx + rcx*4 - 0x19] ; mov eax, 3 ; syscall
0x00000000000fd904 : dec dword ptr [rcx + rcx*4 - 0x39] ; xor eax, eax ; syscall
0x000000000004b389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000013c0b6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00000000000f365c : dec dword ptr [rcx + rcx*4 - 1] ; call 0x1f8ae
0x000000000006550f : dec dword ptr [rcx + rcx*4 - 1] ; call 0x71fd6
0x000000000005f10d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a6
0x000000000005a6d5 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x0000000000188b27 : dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x0000000000188ae7 : dec dword ptr [rcx - 0x56] ; call rsp
0x000000000005c60a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000f9603 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000dabb8 : dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x0000000000102905 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d8e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102998 : dec dword ptr [rcx - 0x75] ; jge 0x1029a2 ; call rbx
0x0000000000102abf : dec dword ptr [rcx - 0x75] ; jge 0x102ac9 ; call rbx
0x0000000000102c02 : dec dword ptr [rcx - 0x75] ; jge 0x102c0c ; call rbx
0x0000000000102d72 : dec dword ptr [rcx - 0x75] ; jge 0x102d7c ; call rbx
0x0000000000104590 : dec dword ptr [rcx - 0x75] ; jge 0x10459a ; call rbx
0x00000000001046b8 : dec dword ptr [rcx - 0x75] ; jge 0x1046c2 ; call rbx
0x00000000001047fb : dec dword ptr [rcx - 0x75] ; jge 0x104805 ; call rbx
0x00000000001048fc : dec dword ptr [rcx - 0x75] ; jge 0x104906 ; call rbx
0x00000000000e35a4 : dec dword ptr [rcx - 0x75] ; jge 0xe35d0 ; call 0x1f8af
0x00000000000e35a3 : dec dword ptr [rcx - 0x75] ; jge 0xe35d1 ; call 0x1f8b0
0x00000000000e35ad : dec dword ptr [rcx - 0x75] ; jge 0xe35e1 ; call 0x1f8af
0x00000000000e35ac : dec dword ptr [rcx - 0x75] ; jge 0xe35e2 ; call 0x1f8b0
0x00000000000f3cb5 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f573 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000eef8c : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000142d74 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000009e978 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00000000000488c5 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000e3e6d : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000002bc47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000000de2ef : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000004ea8e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000022f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x000000000012fd89 : dec dword ptr [rcx - 0x77] ; retf 0xc148
0x0000000000061e70 : dec dword ptr [rcx - 0x7d] ; jmp 0xffffffffcb3f6a80
0x00000000000662ef : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000662d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00000000000d8888 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000001892db : dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x000000000004504c : dec dword ptr [rcx] ; ret
0x00000000000e1158 : dec dword ptr [rcx] ; retf 0x5089
0x0000000000142d94 : dec dword ptr [rcx] ; retf 0xfa83
0x000000000010a6de : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000186d9b : dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000182633 : dec dword ptr [rdi - 0x510013aa] ; push rsi ; in al, dx ; call rax
0x0000000000107552 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000011d7ad : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x000000000010af2d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10aebe ; loopne 0x10af3e ; ret
0x000000000002df46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x0000000000046271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009e505 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x000000000009e4f2 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x0000000000023b8b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000115975 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b58ea : dec dword ptr [rdi] ; ret 0xd0f7
0x0000000000121325 : dec dword ptr [rdi] ; ret 0xfe9
0x0000000000031915 : dec dword ptr [rdi] ; retf
0x000000000002c9c0 : dec dword ptr [rdi] ; retf 0xd88
0x000000000013d70d : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; retf
0x0000000000074151 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000b5841 : dec dword ptr [rdi] ; test bh, ah ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x0000000000068467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000013e009 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002646a : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x00000000000b5805 : dec dword ptr [rdi] ; test byte ptr [rbx], ah ; or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000ecf09 : dec dword ptr [rdi] ; test byte ptr [rcx + 0x3dffffe4], ah ; retf 0
0x00000000000d9b90 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x0000000000122e3e : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000013840a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009d9d8 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009d4eb : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000009d4f7 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x000000000012252c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000000b585f : dec dword ptr [rdi] ; test cl, cl ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000af930 : dec dword ptr [rdi] ; test dh, dh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000004551e : dec dword ptr [rdi] ; test dword ptr [rcx], edi ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x00000000001721a0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004cdbb : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000012], edx ; retf
0x00000000000d7781 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000000ea9da : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000007305b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000e2af3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x00000000000e32ea : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000bbf60 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00000000000e0bb0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x0000000000075f7e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000e3ecd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000523bd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x0000000000105ecf : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000cdfed : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005c147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x0000000000188aa3 : dec dword ptr [rdx - 0x45] ; call rsp
0x000000000018a857 : dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000019500f : dec dword ptr [rsi - 0x56] ; std ; jmp rsi
0x0000000000189c27 : dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000198f2b : dec dword ptr [rsp + 0x20e40001] ; cmc ; jmp rsp
0x0000000000198dbb : dec dword ptr [rsp + rdx*2 + 0x20a40001] ; hlt ; call rsp
0x000000000018919f : dec ebp ; push rax ; hlt ; call rdi
0x00000000001892c3 : dec ebp ; push rbx ; hlt ; call rdi
0x000000000018907b : dec ebx ; retf
0x0000000000049e3d : dec ecx ; ret
0x0000000000188a9f : dec edi ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000188c83 : dec edi ; test eax, 0xbbfdfff3 ; jmp rax
0x00000000001891ff : dec edx ; push rcx ; hlt ; call rsp
0x000000000018879b : dec esi ; xchg ebx, esi ; lcall [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000019b9a3 : dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000019b153 : dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x0000000000198fd3 : dec esp ; add dword ptr [eax], eax ; cmc ; jmp rsp
0x000000000019b34b : dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019869b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x00000000001989f3 : dec esp ; cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000019620b : dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x000000000019697b : dec esp ; imul eax, dword ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196974 ; jmp rsp
0x0000000000196913 : dec esp ; imul eax, dword ptr [rax], 0xe9650400 ; jmp rsp
0x0000000000199653 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x000000000019b6db : dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b6b3 ; cli ; jmp rsp
0x000000000019a153 : dec esp ; ret
0x000000000019792b : dec esp ; retf 0
0x000000000019a2cb : dec esp ; retf 1
0x000000000019780b : dec esp ; rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001974b3 : dec esp ; test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x00000000001972a3 : dec esp ; wait ; add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000000a4999 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000a2941 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000006c896 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000025c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8887 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000001b9fd1 : div bh ; call qword ptr [rdx]
0x00000000000dc5dd : div byte ptr [rax - 0xa] ; ret
0x0000000000035404 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x000000000008b8c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000009ed21 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000fa5d6 : div byte ptr [rcx] ; shr al, 0x52 ; retf 0xffff
0x00000000000facc7 : div byte ptr [rcx] ; shr al, 0x61 ; ret
0x0000000000064124 : div dh ; ret
0x0000000000053999 : div dh ; ret 0x4050
0x0000000000112703 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00000000000f6a41 : div dword ptr [rdi - 0x14] ; ret
0x000000000006e290 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011781f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781cf : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011791c : div ebx ; pop rbx ; pop rbp ; ret
0x00000000000504c5 : div ecx ; add eax, r8d ; ret
0x00000000000aacda : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000001999b1 : div esi ; call rsp
0x000000000006e796 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e28f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011781e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781ce : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011791b : div rbx ; pop rbx ; pop rbp ; ret
0x00000000001a3628 : enter -0x12c9, -1 ; and eax, 0x4000001 ; ret 0x18f
0x000000000001f977 : enter -0x1401, -0x3b ; ret
0x00000000000d1681 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x0000000000104ac8 : enter -0x1d18, -0x7a ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000eeb40 : enter -0x1d2d, -0x7b ; ret 0x850f
0x00000000000026b8 : enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x0000000000045a23 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x000000000009ec2e : enter -0x208c, -0xd ; ret
0x00000000000a1291 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000e7e24 : enter -0x2e89, 0x39 ; ret
0x000000000001f967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x0000000000107dcd : enter -0x3c01, -0x48 ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000107a3d : enter -0x3c01, -0x48 ; mov cl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000107d3d : enter -0x3c01, -0x48 ; movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000107e8d : enter -0x3c01, -0x48 ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000012f951 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00000000000c71f6 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000172314 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018c5ec : enter -0x4ff, -1 ; fadd dword ptr [rcx] ; sti ; jmp rax
0x0000000000002bf0 : enter -0x7042, -0x15 ; retf
0x00000000000a4816 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a27fe : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a4996 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a293e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000034b68 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00000000001014d1 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x0000000000048dab : enter -0x74b8, 0x14 ; ret
0x0000000000107376 : enter -0x76b4, 0x4c ; and al, 0xd0 ; syscall
0x000000000009c122 : enter -0x7bf1, -0x42 ; retf
0x0000000000115b5d : enter -0x7cb8, 0x7c ; retf 0x1f8
0x0000000000123c76 : enter -0x7df1, -0x2d ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000001890e1 : enter -0xd, 0x40 ; retf
0x00000000001029e4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000187ce9 : enter -3, 0x18 ; retf
0x00000000001953a9 : enter -5, -0x30 ; leave ; sti ; jmp qword ptr [rax]
0x0000000000132297 : enter 0, 0 ; call rax
0x0000000000132259 : enter 0, 0 ; jmp rcx
0x000000000012cf66 : enter 0, 0 ; lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x000000000017c3bc : enter 0, 0 ; retf
0x0000000000180410 : enter 0, 0 ; retf 0
0x000000000017d568 : enter 0x10, 0 ; retf
0x00000000000fc49a : enter 0x10b8, 0 ; add byte ptr [rax], al ; syscall
0x0000000000025d7f : enter 0x1388, -0x77 ; retf 0xe083
0x000000000007cc4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000124069 : enter 0x2474, -0x73 ; add dword ptr [r8 - 0x77], ecx ; retf 0xc148
0x0000000000034cbc : enter 0x280f, -0x3f ; ret
0x000000000004a13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008b12d : enter 0x31c3, -0x40 ; ret
0x0000000000087a5e : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000135107 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000135064 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000135134 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000019c90e : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001359db : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00000000001358bb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007eac8 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000000f60e4 : enter 0x538b, 0x1c ; syscall
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000087acb : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000185a7c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003a68d : enter 0x948, -0x30 ; ret
0x000000000017cd68 : enter 0xa, 0 ; retf
0x000000000017d168 : enter 0xd, 0 ; retf
0x00000000000e91b9 : enter 0xf41, -0x62 ; ret 0x844
0x000000000016f536 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089b51 : enter 0xf66, -0x15 ; ret
0x000000000014a69c : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000034cb8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x000000000008e8fb : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000180610 : enter 1, 0 ; retf 1
0x000000000017d920 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000180810 : enter 2, 0 ; retf 2
0x00000000000e2e23 : enter 3, 0 ; call 0x1f8a6
0x0000000000180a10 : enter 3, 0 ; retf 3
0x0000000000180c10 : enter 4, 0 ; retf 4
0x00000000000a8074 : enter 5, 0 ; ret
0x0000000000180e10 : enter 5, 0 ; retf 5
0x0000000000001720 : enter 6, 0 ; retf
0x0000000000181010 : enter 6, 0 ; retf 6
0x0000000000181210 : enter 7, 0 ; retf 7
0x0000000000181410 : enter 8, 0 ; retf 8
0x0000000000181610 : enter 9, 0 ; retf 9
0x0000000000116be6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000104f70 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000101864 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000115b65 : fadd dword ptr [rax] ; leave ; ret
0x0000000000082f0f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000013d46d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x0000000000070980 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b93bd : fadd dword ptr [rcx] ; add al, dl ; fdiv st(7) ; jmp rdi
0x00000000001bc483 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000018c5f0 : fadd dword ptr [rcx] ; sti ; jmp rax
0x0000000000074d17 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00000000000c612e : fadd qword ptr [r9] ; ret
0x0000000000108cd4 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001afd14 : fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000000c612f : fadd qword ptr [rcx] ; ret
0x000000000019a104 : fadd st(2), st(0) ; add dword ptr [rax], eax ; in al, 0xf7 ; push rsp ; ret 1
0x0000000000172938 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000017088e : fadd st(3) ; ret
0x0000000000105e30 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016f081 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001740ec : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2767 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00000000000bd6bd : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001850b8 : fcmovb st(0), st(3) ; ret
0x000000000018909c : fcmovbe st(0), st(4) ; jmp rdi
0x0000000000102aca : fcmove st(0), st(5) ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102ada ; call rbx
0x00000000000034cf : fcmove st(0), st(5) ; retf
0x000000000002c4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000001acf14 : fcom qword ptr [rbx] ; add dword ptr [rax], eax ; fcomp st(2) ; call qword ptr [rdx]
0x00000000001890c5 : fcomi st(3) ; call qword ptr [rcx]
0x00000000001890c1 : fcomi st(3) ; jmp qword ptr [rbx]
0x00000000001ae811 : fcomi st(4) ; call qword ptr [rbx]
0x00000000001b59a9 : fcomi st(6) ; jmp rsi
0x0000000000188ea9 : fcomip st(3) ; jmp rcx
0x000000000009ec30 : fcomip st(3) ; ret
0x00000000001aea79 : fcomip st(4) ; call qword ptr [rbx]
0x00000000001aea31 : fcomip st(4) ; jmp qword ptr [rcx]
0x0000000000033c3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006dfeb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000326ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000185e39 : fcomp dword ptr [rdx + 0x21] ; ret
0x0000000000101ffb : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001840a0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001a7788 : fcomp st(1) ; cld ; call qword ptr [rax]
0x00000000001acf18 : fcomp st(2) ; call qword ptr [rdx]
0x000000000006ac45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001b2c14 : fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6c14 : fdiv qword ptr [rax - 0x4ec80000] ; out dx, al ; call qword ptr [rax]
0x0000000000188f11 : fdiv st(3) ; jmp qword ptr [rdx]
0x00000000000bb224 : fdiv st(3) ; ret
0x000000000019531d : fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000001952bd : fdiv st(3), st(0) ; call rax
0x000000000011010f : fdiv st(6) ; ret 0xf02
0x00000000001b93c1 : fdiv st(7) ; jmp rdi
0x0000000000195301 : fdivp st(3) ; jmp qword ptr [rax]
0x0000000000195321 : fdivp st(3) ; jmp rax
0x00000000001b1198 : fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001af514 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af914 : fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x000000000019b799 : fdivr st(2) ; jmp rsp
0x0000000000195231 : fdivr st(3) ; call rax
0x00000000000cdebf : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000195315 : fdivr st(3) ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195211 : fdivr st(3) ; jmp rax
0x0000000000195335 : fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000188f0d : fdivr st(3), st(0) ; jmp qword ptr [rcx]
0x0000000000189069 : fdivr st(3), st(0) ; jmp rcx
0x0000000000189021 : fdivr st(3), st(0) ; push rsp ; ret
0x00000000001833f5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000008427f : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000016cc0d : fdivr st(7) ; ret
0x00000000000a56ce : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001b9599 : fdivrp st(7) ; jmp rdi
0x00000000000f7672 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000000724b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000003cf97 : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x000000000006bd02 : fiadd dword ptr [rbx] ; sub rdx, r12 ; syscall
0x000000000009c98c : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000001016f3 : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x000000000011596f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000012ed79 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001b95d5 : fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b9595 : fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000000c343e : fiadd word ptr [r9] ; ret
0x00000000001a9965 : fiadd word ptr [rax] ; add al, cl ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x000000000012cb80 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000019a5e5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000000c343f : fiadd word ptr [rcx] ; ret
0x000000000001f92a : ficomp dword ptr [rcx + 0x5b58003a] ; pop rbp ; ret
0x0000000000103149 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000185c86 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000174578 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000001ad0 : fidiv word ptr [rbx] ; retf
0x00000000001434f5 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e7e7f : fidivr dword ptr [rcx] ; ret 0x3673
0x0000000000142208 : fidivr word ptr [rax + 1] ; syscall
0x00000000001003de : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000002de4 : fild dword ptr [rax + 0x2d37b741] ; retf 0x4a9a
0x0000000000047278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x0000000000110ea4 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00000000001a964d : fild dword ptr [rax] ; add byte ptr [rax + 0x35], al ; int1 ; jmp rdi
0x00000000000ec6d5 : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x000000000014a6df : fild dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000bd3ed : fild dword ptr [rcx + 1] ; ret
0x00000000001a9a45 : fild word ptr [rax] ; add al, bh ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001a9add : fild word ptr [rax] ; add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x00000000001a9ac5 : fild word ptr [rax] ; add byte ptr [rax - 0x6b], ch ; int1 ; call qword ptr [rax]
0x00000000000d2af7 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00000000000fc3c6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000504b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d34ae : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003d935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000887f2 : fimul dword ptr [rax + 0x39] ; retf
0x000000000014dda0 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x00000000000f69c6 : fimul dword ptr [rax + 1] ; retf 0x8949
0x0000000000145d76 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000054d59 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000078ba5 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x00000000000bb516 : fimul dword ptr [rax - 0x77] ; retf
0x0000000000074140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000320c0 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000137972 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011e18b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000af9f7 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008f502 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x0000000000040606 : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000012f406 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000fdb1e : fimul dword ptr [rcx + rcx*4 - 0x39] ; mov eax, 3 ; syscall
0x000000000012fdfc : fimul dword ptr [rcx - 0x77] ; retf
0x000000000016b9b2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cc8d1
0x000000000016ca32 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cd951
0x000000000003e03e : fimul dword ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x00000000000e90b3 : fimul dword ptr [rdi] ; popfq ; ret
0x00000000000369c3 : fimul word ptr [rax - 0x75] ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000000869a0 : fimul word ptr [rax - 0x77] ; out dx, eax ; call 0x82bd6
0x000000000013bf8f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000775ee : fimul word ptr [rax - 0x77] ; ret
0x00000000000afd64 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000005262b : fimul word ptr [rax - 0x77] ; retf
0x00000000000843a1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00000000000483cc : fimul word ptr [rbp + 0x11] ; retf
0x000000000011f81e : fimul word ptr [rbp - 0x7cb7ffd6] ; ret 0xe801
0x000000000003e057 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x0000000000037360 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00000000001091c3 : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r10d ; syscall
0x0000000000140a57 : fimul word ptr [rcx + rcx*4 - 0x39] ; mov eax, r12d ; syscall
0x00000000001389de : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a86c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000003e051 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000b9191 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000fb809 : fistp qword ptr [rax + 0x10f] ; syscall
0x000000000003581e : fistp qword ptr [rax + 0x82] ; syscall
0x00000000000cc1b8 : fistp qword ptr [rax + 0xf7] ; syscall
0x000000000001fa12 : fistp qword ptr [rax + 1] ; syscall
0x000000000003408e : fistp qword ptr [rax + 3] ; syscall
0x000000000007221f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000132e41 : fistp word ptr [rbx + 0x5d] ; jmp 0x1f8ad
0x000000000013a911 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000010fbcd : fistp word ptr [rsi - 0x7ab70009] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000007d882 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c59d8 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000f7f76 : fisttp dword ptr [rax + 0xf] ; ret
0x0000000000174575 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000049011 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000010955e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bacda ; pop rbx ; ret
0x00000000000deaba : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000b9b35 : fisttp dword ptr [rcx + 1] ; retf
0x000000000004902b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000061f70 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000000f3fd6 : fisttp dword ptr [rdi] ; test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20282
0x00000000000f0f04 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000047654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000003693f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000009ce24 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000103629 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000003e147 : fisttp qword ptr [rax + 0x29] ; ret
0x000000000008491e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x000000000014a782 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], 0xf8 ; ret
0x0000000000024ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000af764 : fisttp qword ptr [rax - 0x77] ; ret
0x0000000000041772 : fisttp qword ptr [rax - 0x77] ; retf
0x00000000000b7e25 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008e71a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000010e632 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000010e635 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000003466a : fisttp word ptr [rax + 1] ; out dx, al ; mov eax, r8d ; syscall
0x0000000000082d30 : fisttp word ptr [rax + 9] ; retf 0x8948
0x0000000000033c4a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000c8b0c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012a511 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000010e6c8 : fisttp word ptr [rax - 0x77] ; ret
0x000000000005905b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009f4a1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000004d233 : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x000000000004d728 : fisttp word ptr [rax - 0x77] ; retf 0x894c
0x0000000000174279 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000005e690 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000490af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000138c92 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000088107 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000012a613 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000014b18d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000ea998 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000016f451 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011568e : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000000e515c : fisub dword ptr [rsi - 0x7f] ; loop 0xe5167 ; add esi, esi ; ret
0x000000000016f151 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015639f : fisub word ptr [rsi] ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000015639e : fisub word ptr ss:[rsi] ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000116892 : fisubr dword ptr [rax - 0xd] ; dec dword ptr [rax - 0x7f] ; ret
0x000000000014dbec : fisubr word ptr [rcx] ; ret 0xfec5
0x00000000001a94fd : fld dword ptr [rax] ; add byte ptr [rax], dl ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001a946d : fld dword ptr [rax] ; add cl, dl ; int1 ; jmp qword ptr [rax]
0x00000000000991c7 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x000000000008f01d : fld dword ptr [rbx + 0x294807e1] ; retf 0x8548
0x000000000004c1a1 : fld dword ptr [rcx] ; retf
0x0000000000001dbc : fld dword ptr [rdx + 0x6b865524] ; retf
0x00000000000fb877 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001bda24 : fld qword ptr [rip] ; add byte ptr [rax], al ; retf 7
0x00000000001840e1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034f9e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000001748c9 : fld xword ptr [rdi + 0x1f0fffea] ; add bl, dh ; ret
0x0000000000003896 : fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000035058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f39 : fld xword ptr [rsp + 8] ; ret
0x0000000000035029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035007 : fld xword ptr [rsp - 0x18] ; ret
0x000000000019cc81 : fld1 ; call qword ptr [rdx]
0x00000000000c924b : fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000351a9 : fldcw word ptr [rsp - 2] ; ret
0x000000000014a7c0 : fldenv [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008ea59 : fldenv [rsi + 0xf] ; je 0x8eab6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000966e7 : fldenv [rsi + 0xf] ; je 0x96744 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016f4d1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e951 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000ac3bc : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000197eb1 : fldz ; call rsp
0x0000000000048434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000087bbe : fmul dword ptr [rax + 0x21] ; ret
0x000000000007f0bf : fmul dword ptr [rax + 0x39] ; ret
0x00000000000886db : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x0000000000099bf6 : fmul dword ptr [rax + 0xf] ; ret
0x000000000010e877 : fmul dword ptr [rax + 1] ; retf
0x00000000000cf482 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000aa327 : fmul dword ptr [rax + 9] ; retf 0x4466
0x00000000000424d7 : fmul dword ptr [rax - 0x39] ; ret
0x00000000000f4392 : fmul dword ptr [rax - 0x75] ; jl 0xf43c3 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000074e11 : fmul dword ptr [rax - 0x77] ; ret
0x000000000012fa8e : fmul dword ptr [rax - 0x77] ; retf
0x00000000000bea29 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7fb6 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775e : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000053620 : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000065df4 : fmul dword ptr [rdi + rcx + 0x4d] ; retf
0x0000000000056341 : fmul dword ptr [rdi] ; ret
0x00000000000b965c : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000047d63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000eb4d0 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000c8a5b : fmul qword ptr [rax - 0x7d] ; ret
0x000000000010e6c5 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000003d6dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000089ee9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001b0b14 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0b17 ; jmp qword ptr [rcx]
0x00000000001a4614 : fmul qword ptr [rdx + 0x73e80000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000423d2 : fmul st(0) ; ret
0x0000000000187ce8 : fmul st(0) ; std ; lcall [rax] ; retf
0x0000000000188ef0 : fmul st(1) ; inc dword ptr [rcx] ; retf 0xfff3
0x000000000019a30c : fmul st(3), st(0) ; add dword ptr [rax], eax ; push rsp ; add al, bh ; push rsp ; retf
0x0000000000042350 : fmulp st(1) ; ret
0x00000000000d16d3 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000088f24 : fnstenv [rbx] ; add byte ptr [rax], al ; je 0x88f36 ; ret
0x0000000000088f23 : fnstenv [rbx] ; add byte ptr [rax], al ; je 0x88f37 ; ret
0x0000000000002532 : fnstenv [rdx + rdx - 0x38975393] ; ret
0x0000000000035186 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000048062 : fnstsw dword ptr [rax + 1] ; ret
0x000000000018592a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x00000000001acd29 : fpatan ; call qword ptr [rbx]
0x00000000001acd69 : fpatan ; call qword ptr [rsi]
0x00000000001acda9 : fpatan ; jmp qword ptr [rcx]
0x0000000000033bd5 : fpatan ; ret
0x000000000019a8d1 : fprem ; call rsp
0x00000000001a7789 : frndint ; call qword ptr [rax]
0x000000000016f251 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001563f5 : frstor dword ptr [rsi] ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000003505c : fscale ; fstp st(1) ; ret
0x00000000001952b5 : fsincos ; call qword ptr [rax]
0x0000000000195339 : fsincos ; call rax
0x0000000000195295 : fsincos ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000003a71 : fst dword ptr [rbx + 0x55f20b1c] ; jg 0x3aea ; xchg eax, ebp ; retf 0x10bf
0x0000000000189264 : fst dword ptr [rdx - 0xc] ; jmp rbx
0x0000000000183dc7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000096e3e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000035188 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000184140 : fstp st(0) ; ret 0xde5d
0x0000000000035130 : fstp st(1) ; add rsp, 8 ; ret
0x000000000003505e : fstp st(1) ; ret
0x000000000018330b : fstp st(3), st(0) ; retf 0xeb83
0x0000000000034fa0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502d : fstp xword ptr [rdi] ; ret
0x00000000000fc574 : fsub dword ptr [rbp + rax*2 - 0x75] ; sub al, 0x24 ; syscall
0x0000000000035778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035458 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035189 : fsub dword ptr [rip + 0x200] ; ret
0x000000000016f551 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a1674 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001adc14 : fsub qword ptr [rax] ; add dword ptr [rax], eax ; call 0x221ad0b7
0x00000000001856f8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x00000000000cd222 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000000aa46b : fsub qword ptr [rsi + 0xf] ; jmp 0xaa437
0x000000000016f351 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089c6c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001747eb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001029e2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001044eb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000001048ea : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000100ce8 : fsubp st(0) ; ret 0xf775
0x0000000000103f58 : fsubp st(0) ; ret 0xffe8
0x0000000000103e58 : fsubp st(0) ; ret 0xffe9
0x0000000000103a50 : fsubp st(0) ; retf 0xffed
0x0000000000034fa2 : fsubp st(1) ; ret
0x00000000000c7331 : fsubp st(1) ; ret 0xffec
0x00000000001afd18 : fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001a4448 : fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000001a7d58 : fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001096db : fsubr qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b9e1b : fsubr qword ptr [rcx] ; ret
0x0000000000186ce4 : fsubr st(2), st(0) ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001a5321 : fsubr st(5) ; call qword ptr [rsi]
0x00000000001aa2f8 : fsubr st(6) ; int1 ; jmp rcx
0x0000000000185e18 : fucom st(5) ; loop 0x185e71 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000006e50e : fucomip st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000075bdd : fucomip st(0) ; cmp eax, 0x89000056 ; ret 0x98eb
0x000000000007652d : fucomip st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x0000000000088372 : fucomip st(0) ; js 0x883f2 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c911d : fucomip st(0) ; or eax, 0x480007a4 ; mov eax, ebx ; call rax
0x00000000000bf4ac : fucomip st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x000000000010c057 : fucomip st(0) ; ret
0x00000000000aeef8 : fucomip st(0) ; ret 0x5c4
0x0000000000100aa8 : fucomip st(0) ; ret 0xf4c6
0x00000000000ff948 : fucomip st(0) ; ret 0xf788
0x0000000000057fd8 : fucomip st(0) ; ret 0xfc78
0x0000000000033ee0 : fucomip st(0) ; ret 0xfeb9
0x0000000000020fd8 : fucomip st(0) ; ret 0xffe8
0x0000000000133674 : fucomip st(0) ; ret 0xffee
0x0000000000119d58 : fucomip st(0) ; ret 6
0x000000000006d1cf : fucomip st(0) ; retf
0x000000000006e230 : fucomip st(0) ; retf 0xd4
0x0000000000094e60 : fucomip st(0) ; retf 0xf8a9
0x00000000000fd9ec : fucomip st(0) ; retf 1
0x00000000000ad421 : fucomip st(0) ; stc ; retf
0x000000000007b5df : fucomp st(0) ; ret
0x00000000001a6d09 : fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001a7c69 : fucomp st(7) ; jmp qword ptr [rbx]
0x000000000018545e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001492c9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001acc2c : hlt ; adc byte ptr [rcx], al ; add al, ah ; ret
0x000000000013f008 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cdff0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b032c : hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001bafa5 : hlt ; add dword ptr [rax], eax ; js 0x1baf48 ; sti ; jmp qword ptr [rdx]
0x000000000019a8cd : hlt ; add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x00000000001aea2c : hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af22c : hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000014a1c9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001b0b2c : hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000105d3b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001ade2c : hlt ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x000000000018910a : hlt ; call qword ptr [rax]
0x00000000001892de : hlt ; call qword ptr [rbx]
0x00000000001ad9c2 : hlt ; call qword ptr [rcx]
0x00000000001ad7aa : hlt ; call qword ptr [rsi]
0x00000000001ae14a : hlt ; call rax
0x00000000001891a2 : hlt ; call rdi
0x00000000001af452 : hlt ; call rsi
0x0000000000189202 : hlt ; call rsp
0x0000000000189c2c : hlt ; cmc ; call rsp
0x00000000001af92c : hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x000000000009ebdb : hlt ; cmp ecx, esi ; je 0x9ebd6 ; ret
0x00000000001a622c : hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000000dabb7 : hlt ; dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x00000000000de2ee : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000001892da : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x0000000000198dba : hlt ; dec dword ptr [rsp + rdx*2 + 0x20a40001] ; hlt ; call rsp
0x000000000018919e : hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001892c2 : hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000001891fe : hlt ; dec edx ; push rcx ; hlt ; call rsp
0x00000000001af231 : hlt ; hlt ; jmp qword ptr [rsi]
0x0000000000197929 : hlt ; in eax, dx ; dec esp ; retf 0
0x00000000001895aa : hlt ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000198d82 : hlt ; inc dword ptr [rdx + rdx*2 + 0x7e40001] ; hlt ; call rsp
0x0000000000189362 : hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001891fa : hlt ; inc eax ; push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x000000000018935e : hlt ; inc ebp ; push rdx ; hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x000000000018919a : hlt ; inc ebx ; push rax ; hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001892be : hlt ; inc ebx ; push rbx ; hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000000f6a0d : hlt ; ja 0xf69a7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000027ac6 : hlt ; jmp 0x27a96
0x00000000001aed4a : hlt ; jmp qword ptr [rbx]
0x00000000001ad9aa : hlt ; jmp qword ptr [rcx]
0x00000000001892e6 : hlt ; jmp qword ptr [rdi]
0x0000000000189582 : hlt ; jmp qword ptr [rsi]
0x0000000000189266 : hlt ; jmp rbx
0x00000000001891a6 : hlt ; jmp rcx
0x00000000001af43a : hlt ; jmp rdi
0x0000000000189586 : hlt ; jmp rdx
0x0000000000198e82 : hlt ; jmp rsp
0x0000000000172815 : hlt ; jne 0x172937 ; ret
0x0000000000172814 : hlt ; jne 0x172938 ; ret
0x00000000001b2c2c : hlt ; jo 0x1b2c37 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0f8 : hlt ; jrcxz 0x19a0f7 ; inc esp ; ret 1
0x000000000019a29c : hlt ; leave ; add dword ptr [rax], eax ; test bl, bh ; idiv edi ; push rsp ; retf 1
0x00000000001a682c : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x000000000015ad0a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015300e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001886c4 : hlt ; mov esi, ebx ; call qword ptr [rdx]
0x00000000000e1c96 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000cc73f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000171e23 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001aa22c : hlt ; out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x00000000000026bc : hlt ; out 0xdf, eax ; syscall
0x000000000018957e : hlt ; push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x000000000018957a : hlt ; push qword ptr [rax + 0x70fff452] ; push rdx ; hlt ; jmp qword ptr [rsi]
0x00000000001891b2 : hlt ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001892d6 : hlt ; push rdx ; hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x00000000001891ae : hlt ; push rdx ; hlt ; push rdx ; hlt ; call qword ptr [rax]
0x000000000009ebbb : hlt ; ret
0x000000000019b9e0 : hlt ; ret 0xfffd
0x00000000000f4038 : hlt ; ret 0xffff
0x000000000019a10c : hlt ; ret 1
0x000000000019794c : hlt ; retf
0x00000000001998f0 : hlt ; retf 0xfff6
0x000000000006176a : hlt ; retf 0xffff
0x000000000019aea8 : hlt ; sar cl, 1 ; call rsp
0x00000000001ad82c : hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x0000000000199c48 : hlt ; sbb edi, esi ; call rsp
0x0000000000195575 : hlt ; sti ; call rax
0x0000000000184303 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000171e27 : hlt ; sub eax, edx ; ret
0x000000000009f47e : hlt ; sub rsp, 8 ; call 0x8b727
0x0000000000003cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d72fb : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd729e ; pop rbx ; ret
0x000000000018874c : hlt ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x000000000007d8a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000001998ea : idiv bh ; add al, 0x98 ; add dword ptr [rax], eax ; hlt ; retf 0xfff6
0x00000000000b9fee : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000105165 : idiv bh ; add rsp, 0x408 ; ret
0x000000000018a912 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x18a91a ; jmp qword ptr [rdx]
0x000000000018a90a : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000018a8aa : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a8b2 ; jmp qword ptr [rdx]
0x000000000018a946 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a94e ; jmp qword ptr [rdx]
0x000000000018a8a2 : idiv bh ; imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x18a8aa ; jmp qword ptr [rdx]
0x000000000018a856 : idiv bh ; jle 0x18a856 ; jmp rdx
0x000000000018a916 : idiv bh ; jns 0x18a916 ; jmp qword ptr [rdx]
0x000000000018a84a : idiv bh ; loop 0x18a8d3 ; idiv bh ; pop rsp ; jle 0x18a852 ; jmp rdx
0x000000000018a852 : idiv bh ; loop 0x18a8db ; idiv bh ; jle 0x18a85a ; jmp rdx
0x000000000018a90e : idiv bh ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000019938a : idiv bh ; mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x0000000000199302 : idiv bh ; mov esp, 0x74000178 ; adc al, 0xf6 ; call rsp
0x000000000019928a : idiv bh ; mov esp, 0xc4000176 ; or al, 0xf6 ; call rsp
0x00000000001999aa : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000000b9faa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018a84e : idiv bh ; pop rsp ; jle 0x18a84e ; jmp rdx
0x000000000018a986 : idiv bh ; ret 0xf678
0x00000000001b352a : idiv bh ; retf
0x000000000018a8a6 : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a8a6 ; jmp qword ptr [rdx]
0x000000000018a8ae : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a8ae ; jmp qword ptr [rdx]
0x000000000018a94a : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a94a ; jmp qword ptr [rdx]
0x000000000018a4f4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000128a8e : idiv bh ; xor eax, eax ; ret
0x000000000011595d : idiv byte ptr [rax + 0xe6] ; syscall
0x00000000000cdfaf : idiv byte ptr [rax + 2] ; syscall
0x0000000000023b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000019a162 : idiv edi ; cld ; ret
0x00000000001274a8 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000006550d : idiv edi ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x71fd8
0x000000000019a10a : idiv edi ; hlt ; ret 1
0x000000000019a132 : idiv edi ; insb byte ptr [rdi], dx ; ret
0x000000000019a2ea : idiv edi ; insb byte ptr [rdi], dx ; retf
0x000000000019a2aa : idiv edi ; insb byte ptr [rdi], dx ; retf 1
0x0000000000199f62 : idiv edi ; lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000019a0f2 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000199b42 : idiv edi ; mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000199c42 : idiv edi ; mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x000000000019a2fa : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x0000000000199f2a : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000019a12a : idiv edi ; push rsp ; ret
0x000000000019a2a2 : idiv edi ; push rsp ; retf 1
0x000000000019a142 : idiv edi ; pushfq ; ret
0x000000000019a2ba : idiv edi ; pushfq ; retf 1
0x000000000019a0da : idiv edi ; ret 1
0x000000000019a0ea : idiv edi ; xchg eax, esp ; ret 1
0x000000000003a6a6 : idiv esi ; ret
0x000000000003a6a5 : idiv rsi ; ret
0x000000000002a23f : imul al ; retf
0x00000000000c8920 : imul al ; retf 0xfc66
0x0000000000034720 : imul al ; retf 0xfeb0
0x0000000000196194 : imul byte ptr [rbp - 0x52790004] ; cld ; call qword ptr [rsi]
0x00000000000668fc : imul cl ; ret
0x00000000000a4ec8 : imul cl ; ret 8
0x00000000001279bb : imul cl ; retf
0x0000000000188b18 : imul dword ptr [rsi - 0x50e2000d] ; jmp rcx
0x0000000000132caa : imul eax ; clc ; retf
0x00000000000e34fc : imul eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000127d6f : imul eax ; retf
0x000000000006fe60 : imul eax ; retf 0xfb0c
0x00000000001735f3 : imul eax ; scasd eax, dword ptr [rdi] ; ret 0xffea
0x000000000019697d : imul eax, dword ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196972 ; jmp rsp
0x00000000000eaf37 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x00000000000762ec : imul eax, dword ptr [rax], 0x6b834800 ; sub byte ptr [rcx], al ; jmp 0x762ca
0x0000000000196915 : imul eax, dword ptr [rax], 0xe9650400 ; jmp rsp
0x00000000001a248d : imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x0000000000170981 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000055f36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x000000000008d237 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000080510 : imul eax, dword ptr [rcx], 0xf6410000 ; ret 0xf02
0x00000000000bd336 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000bd5ef : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000008cc37 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000000762f1 : imul ebp, dword ptr [rax], 1 ; jmp 0x762c5
0x000000000010ece5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000779c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084c61 : imul ebx, edi, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000079a54 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x00000000000839e9 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x000000000013a51d : imul ecx, dword ptr [rax - 0x75], 5 ; ret
0x000000000010ec85 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000896fa : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000150407 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000000f498 : imul ecx, dword ptr [rbx], 0xd001200 ; add byte ptr [rax], dh ; retf
0x00000000000f6114 : imul ecx, dword ptr [rcx + 0x63], -4 ; mov eax, 3 ; syscall
0x000000000000f6b1 : imul ecx, dword ptr [rcx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001460e7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000b3eac : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001a043d : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x000000000008c937 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000010ebbf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000189f2c : imul edi, dword ptr [rbx - 0xb], -1 ; jnp 0x189f2f ; call rsi
0x00000000000aeef3 : imul edi, dword ptr [rcx + rsi], 0xe8df8900 ; ret 0x5c4
0x000000000018a8a4 : imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x18a8a8 ; jmp qword ptr [rdx]
0x0000000000046ef1 : imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000076770 : imul edi, ebp, 0x89c085ff ; ret
0x00000000000ca683 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000121691 : imul edi, esi, 0x8348ffff ; ret
0x00000000001960fd : imul edi, esp, 0xfc6b60ff ; jmp rax
0x000000000010ecb5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008c337 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x000000000008c037 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000144029 : imul edx, dword ptr [rdi], 0x28 ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000008bd37 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000186c78 : imul edx, edx, -0x13 ; jmp qword ptr [rax]
0x0000000000186c74 : imul edx, edx, -0x13 ; ljmp [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000002b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000174839 : imul esi, dword ptr [rax + 0x1f0fffea], 0 ; ret
0x000000000004d3d2 : imul esi, dword ptr [rdi], 0 ; call rax
0x000000000007fc7b : imul esi, ebp, 0x3d8bffff ; retf
0x00000000000bc6c4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000013de91 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000163284 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000003a733 : imul esp, dword ptr [rdx + 0x38], 0x58d4800 ; ret 0x387a
0x00000000000ba333 : imul esp, dword ptr [rsi + 0x30], 0x58d4800 ; ret 0x307e
0x00000000000a5c0c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001aa035 : in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001aa005 : in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; jmp qword ptr [rdi]
0x0000000000172848 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000c75ad : in al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000197da5 : in al, 0 ; add byte ptr [rsi], al ; out dx, al ; call rsp
0x00000000001ace1c : in al, 0x12 ; add dword ptr [rax], eax ; xor dl, bl ; jmp qword ptr [rcx]
0x0000000000198f30 : in al, 0x20 ; cmc ; jmp rsp
0x000000000019e21c : in al, 0x26 ; add byte ptr [rax], al ; jne 0x19e213 ; jmp qword ptr [rcx]
0x000000000019b1a0 : in al, 0x2e ; cli ; jmp rsp
0x000000000019aa40 : in al, 0x3b ; stc ; jmp rsp
0x000000000009ec2b : in al, 0x41 ; cmp eax, ecx ; je 0x9ec17 ; ret
0x000000000005c1ec : in al, 0x4a ; movsxd rcx, dword ptr [rax] ; add rax, rcx ; jmp rax
0x000000000005c419 : in al, 0x4a ; movsxd rdx, dword ptr [rax] ; add rax, rdx ; jmp rax
0x0000000000030ab6 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x0000000000185741 : in al, 0x4c ; pop rax ; retf
0x00000000001b0f1c : in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f1f ; jmp qword ptr [rcx]
0x000000000019b664 : in al, 0x57 ; add al, byte ptr [rax] ; ret
0x000000000019b350 : in al, 0x57 ; cli ; jmp rsp
0x000000000019b6e4 : in al, 0x59 ; add al, byte ptr [rax] ; push rsp ; retf
0x0000000000089a6c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000aa95e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000000cc3c2 : in al, 0x75 ; retf
0x0000000000198160 : in al, 0x80 ; out dx, eax ; jmp rsp
0x000000000009a91d : in al, 0x83 ; ret 0x480f
0x00000000001888c8 : in al, 0x92 ; jmp rsp
0x0000000000198218 : in al, 0x93 ; out dx, eax ; call rsp
0x00000000001a531c : in al, 0x97 ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x000000000019b9d8 : in al, 0xc2 ; std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000019a15c : in al, 0xc3 ; add dword ptr [rax], eax ; je 0x19a151 ; idiv edi ; cld ; ret
0x00000000001a931c : in al, 0xd7 ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000142912 : in al, 0xe8 ; cwde ; retf 0xfff4
0x0000000000186d55 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000003794 : in al, 0xee ; jne 0x3776 ; ret 0x975
0x00000000001bab1c : in al, 0xef ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x000000000004c5b4 : in al, 0xf ; lahf ; ret
0x00000000001256ca : in al, 0xf ; test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000050300 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000015acea : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008f2eb : in al, 0xf3 ; ret
0x000000000019a119 : in al, 0xf7 ; jmp qword ptr [rbx + rax*8]
0x000000000019a109 : in al, 0xf7 ; push rsp ; ret 1
0x0000000000197948 : in al, 0xfa ; in eax, dx ; push rsp ; retf
0x00000000001982c8 : in al, 0xfa ; out dx, eax ; call rsp
0x00000000001a5eb1 : in al, 0xfc ; call qword ptr [rdx]
0x000000000004f419 : in al, 0xff ; dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000000f365a : in al, 0xff ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x1f8b0
0x000000000019a685 : in al, 1 ; add byte ptr [rbp - 8], dl ; jmp rsp
0x000000000004ed8b : in al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000a6748 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000198d88 : in al, 7 ; hlt ; call rsp
0x000000000004c19d : in al, dx ; add al, byte ptr [rcx - 0x77] ; fld dword ptr [rcx] ; retf
0x00000000000f12f1 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000128481 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cmc ; retf
0x0000000000088e19 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret 8
0x00000000000704b3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000006d3b4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa7c
0x00000000001242e4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000011bdab : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000007c1dc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x98e
0x00000000000738ac : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xa17
0x000000000003e041 : in al, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000064329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000bd9f0 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084ab8 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000004c5b0 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000145440 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001b0a24 : in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adf24 : in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a163a : in al, dx ; call qword ptr [rax]
0x00000000001a2492 : in al, dx ; call qword ptr [rsi]
0x000000000018263a : in al, dx ; call rax
0x00000000001a1682 : in al, dx ; call rsp
0x0000000000182632 : in al, dx ; dec dword ptr [rdi - 0x510013aa] ; push rsi ; in al, dx ; call rax
0x000000000004a219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001aef99 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000187e19 : in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187e49 : in al, dx ; int1 ; call rax
0x0000000000187e55 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e45 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e1d : in al, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e0d : in al, dx ; int1 ; jmp rax
0x0000000000187e09 : in al, dx ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x00000000001a103a : in al, dx ; jmp qword ptr [rcx]
0x00000000001a136a : in al, dx ; jmp rax
0x00000000001a148a : in al, dx ; jmp rbx
0x00000000001413ab : in al, dx ; js 0x1413b4 ; add byte ptr [rax], al ; syscall
0x00000000000ff323 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001a6e24 : in al, dx ; mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x0000000000105996 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000015300a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009ed23 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000013aaa4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000015b0ea : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000012b091 : in al, dx ; or al, ch ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f481 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x0000000000045b5c : in al, dx ; or al, ch ; lea ebp, [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012bf3a : in al, dx ; or al, ch ; out dx, eax ; ret 0
0x000000000006dcd6 : in al, dx ; or al, ch ; ret
0x00000000001079fe : in al, dx ; or al, ch ; retf
0x000000000012864f : in al, dx ; or al, ch ; retf 0xf630
0x00000000000f5c9f : in al, dx ; or al, ch ; retf 0xfd82
0x000000000006ddd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000082f47 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000146164 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013dcdd : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000f71f2 : in al, dx ; or dh, dh ; ret 0x7540
0x00000000001b2b24 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244c
0x000000000009eb2b : in al, dx ; ret
0x000000000018592d : in al, dx ; retf 0xae32
0x00000000000f6e71 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001a6b24 : in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000000025ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a6724 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a6720 ; jmp qword ptr [rdx]
0x0000000000188308 : in al, dx ; sub dl, dh ; call rdi
0x00000000000fd8df : in al, dx ; test al, 0 ; add byte ptr [rax], al ; syscall
0x000000000015ba00 : in al, dx ; xchg dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000018585e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857f1 ; ret 0x48f
0x000000000018585d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857f2 ; ret 0x48f
0x000000000013cd10 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f803 : in al, dx ; xor dh, dh ; ret 0xc707
0x00000000001aa04d : in eax, 0 ; add byte ptr [rax - 0x18], ah ; int1 ; call qword ptr [rbx]
0x00000000000ce080 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x0000000000183f63 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000002239 : in eax, 0x2d ; pmuludq mm4, mm7 ; retf
0x0000000000003d52 : in eax, 0x3a ; retf 0xd08a
0x000000000012a616 : in eax, 0x41 ; call rdi
0x000000000008f42a : in eax, 0x48 ; mov eax, edi ; ret
0x000000000004a6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000001159d5 : in eax, 0x5d ; ret
0x00000000001831f9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000001336e2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out 0x89, eax ; ret
0x0000000000003aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000120713 : in eax, 0x7f ; sub al, byte ptr [rax] ; call rax
0x00000000000d91d3 : in eax, 0x89 ; ret
0x0000000000052fc3 : in eax, 0xdf ; loopne 0x52f54 ; ret 0xe680
0x0000000000054f3c : in eax, 0xdf ; loopne 0x54ecd ; ret 0xe680
0x0000000000185e19 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000183fba : in eax, 0xe5 ; retf 0x2a91
0x0000000000196be9 : in eax, 0xe9 ; call rsp
0x0000000000197101 : in eax, 0xea ; jmp rsp
0x00000000000abf33 : in eax, 0xf ; je 0xabf58 ; add rax, 2 ; ret
0x00000000001abdc1 : in eax, 0xf2 ; call qword ptr [rsi]
0x000000000015ad6a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000944ea : in eax, 0xf3 ; ret
0x0000000000195511 : in eax, 0xfb ; call qword ptr [rax - 0x1f000417]
0x000000000019522d : in eax, 0xfb ; call qword ptr [rax]
0x000000000019526d : in eax, 0xfb ; call rax
0x000000000009e5cd : in eax, 0xff ; dec dword ptr [rbp - 0x77] ; retf 0x894c
0x00000000001852e1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000019a6ad : in eax, 1 ; add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x000000000012fd0e : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000007652f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00000000000af760 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b1e70 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00000000001a3dfa : in eax, dx ; call qword ptr [rax]
0x00000000001a461a : in eax, dx ; call qword ptr [rcx]
0x000000000018689a : in eax, dx ; call qword ptr [rdi]
0x00000000001a4c7a : in eax, dx ; call qword ptr [rdx]
0x0000000000186b46 : in eax, dx ; call qword ptr [rsi]
0x00000000001a2c92 : in eax, dx ; call rdx
0x00000000001a28ba : in eax, dx ; call rsi
0x0000000000186892 : in eax, dx ; call rsp
0x0000000000186d9a : in eax, dx ; dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019792a : in eax, dx ; dec esp ; retf 0
0x000000000019780a : in eax, dx ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001974b2 : in eax, dx ; dec esp ; test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x0000000000186dae : in eax, dx ; inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019762a : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x6b4c0000] ; in eax, dx ; jmp rsp
0x0000000000186df2 : in eax, dx ; inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019783a : in eax, dx ; inc esp ; ret 0
0x0000000000187e79 : in eax, dx ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e71 : in eax, dx ; int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e59 : in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e75 : in eax, dx ; int1 ; jmp rax
0x0000000000186c7a : in eax, dx ; jmp qword ptr [rax]
0x00000000001a49b2 : in eax, dx ; jmp qword ptr [rbx]
0x0000000000186ce6 : in eax, dx ; jmp qword ptr [rcx]
0x00000000001a372a : in eax, dx ; jmp qword ptr [rdi]
0x0000000000186e22 : in eax, dx ; jmp qword ptr [rdx]
0x00000000001a3c9a : in eax, dx ; jmp qword ptr [rsi]
0x0000000000186a2e : in eax, dx ; jmp rdi
0x00000000001a38b2 : in eax, dx ; jmp rsi
0x00000000001974ba : in eax, dx ; jmp rsp
0x00000000001178e9 : in eax, dx ; jne 0x117901 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017413f : in eax, dx ; jne 0x174121 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186dba : in eax, dx ; lcall [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186b52 : in eax, dx ; lcall [rcx + rdi*4 + 0x6e16ffed] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b3e : in eax, dx ; lcall [rcx + rdi*4 - 0x46630013] ; in eax, dx ; call qword ptr [rsi]
0x00000000001977aa : in eax, dx ; lcall [rdi + rdi*4 - 0x44bc0000] ; in eax, dx ; call rsp
0x00000000001974da : in eax, dx ; lcall [rdx + rbp*4 + 0x51740000] ; in eax, dx ; jmp rsp
0x00000000000aa382 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x0000000000186c76 : in eax, dx ; ljmp [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186c72 : in eax, dx ; ljmp [rbx - 0x2e] ; in eax, dx ; ljmp [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186a26 : in eax, dx ; ljmp [rdx] ; movsxd rbp, ebp ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x00000000000a9d49 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9d5f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d81 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9d9f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dbf : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9de5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e01 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e21 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e41 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9e67 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e89 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f03 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f23 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f43 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9f69 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fb9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c8f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cad : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9ccd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cef : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d0f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d2f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9bd7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9bed : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c05 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c1b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9c4b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9c57 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9c6d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9bb1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000152e1a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000aebd6 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xaebee
0x00000000000b14f7 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb150e
0x00000000000b3cae : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb3cce
0x000000000015b16a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d9b44 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000149cd0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004876b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000017457a : in eax, dx ; pop rbx ; ret
0x00000000001978f2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0xfec0000] ; in eax, dx ; call rsp
0x00000000001975c2 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x7f9c0000] ; in eax, dx ; jmp rsp
0x0000000000186e1a : in eax, dx ; push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186a2a : in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000186a96 : in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x000000000019751a : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x6b040000] ; in eax, dx ; jmp rsp
0x0000000000197722 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x506c0000] ; in eax, dx ; call rsp
0x0000000000186d5a : in eax, dx ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019794a : in eax, dx ; push rsp ; retf
0x0000000000071c02 : in eax, dx ; ret
0x0000000000183d38 : in eax, dx ; retf
0x0000000000019258 : in eax, dx ; retf 0x18
0x0000000000195521 : in eax, dx ; sti ; call rax
0x00000000000aa4d2 : in eax, dx ; sub rax, 1 ; ret
0x000000000009ec6a : in eax, dx ; xor eax, eax ; ret
0x00000000000aa608 : inc bl ; cmp dl, 1 ; jb 0xaa61a ; mov byte ptr [rdi], cl ; ret
0x000000000014db76 : inc bl ; jb 0x14db86 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e066 : inc bl ; jb 0x14e076 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e406 : inc bl ; jb 0x14e416 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008f311 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000046da3 : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x0000000000107aa1 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000007b522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000046da4 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x000000000002a696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x0000000000141d9e : inc byte ptr [rcx + rcx*4 - 0x18] ; syscall
0x0000000000141eaf : inc byte ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000000774f9 : inc byte ptr [rdx] ; je 0x7750f ; mov dword ptr [rdi], edx ; ret
0x000000000019522b : inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x00000000001955cb : inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x00000000001956db : inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x000000000019572f : inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x00000000001956b3 : inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000019561b : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195687 : inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019568b : inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019546f : inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000194eeb : inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000195973 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019575b : inc dword ptr [rax + 0x61] ; cld ; call rax
0x0000000000194f3f : inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000187baf : inc dword ptr [rax + 0x6d] ; int1 ; call rax
0x000000000019570f : inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x0000000000195473 : inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x000000000019543f : inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x0000000000194e33 : inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x00000000001998eb : inc dword ptr [rax + rbx*4] ; add dword ptr [rax], eax ; hlt ; retf 0xfff6
0x00000000001982c3 : inc dword ptr [rax + rcx - 0x51bffff] ; out dx, eax ; call rsp
0x000000000019b19b : inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x0000000000195563 : inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000019526b : inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000186daf : inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000195267 : inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195297 : inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000195317 : inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x000000000019573f : inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956eb : inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000195573 : inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x000000000019551f : inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x00000000001953a7 : inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195353 : inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194f0f : inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195383 : inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195397 : inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x000000000004b9d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x0000000000187fd3 : inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x000000000004dc96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x0000000000196357 : inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019617f : inc dword ptr [rax - 0x57] ; cld ; call rax
0x00000000001950c3 : inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000018c193 : inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d1958 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000195e5f : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c87 : inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195667 : inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x0000000000195227 : inc dword ptr [rax - 0x7f00041d] ; in eax, 0xfb ; call qword ptr [rax]
0x000000000019548f : inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194e23 : inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000001abb0d : inc dword ptr [rax] ; add al, ah ; ret
0x00000000001954f7 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000f9678 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004c985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000ee30 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000005aef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000061a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000006084d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000000000004e4d0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff7
0x00000000000b64eb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000017282d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016fa67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000107b31 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000034efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000188013 : inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000195493 : inc dword ptr [rax] ; add esp, edi ; jmp rax
0x000000000019570b : inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x00000000000e1155 : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001950b3 : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000187e17 : inc dword ptr [rax] ; in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187e07 : inc dword ptr [rax] ; in al, dx ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x0000000000187e57 : inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x000000000019657f : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001895ab : inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000194e8b : inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x0000000000119420 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000187e7b : inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187ecb : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000195bbf : inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000000ff2cc : inc dword ptr [rax] ; ret
0x0000000000194e7b : inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194ecb : inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000187f7b : inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000194ef3 : inc dword ptr [rax] ; sti ; jmp rax
0x000000000019616f : inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195593 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c77 : inc dword ptr [rax] ; test ah, bh ; call qword ptr [rax + 0x20fffc83]
0x000000000004d87d : inc dword ptr [rbp + 0x29] ; retf 0x3944
0x000000000004e065 : inc dword ptr [rbp + 0x29] ; retf 0x3b44
0x000000000011d754 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d93a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00000000000982de : inc dword ptr [rbp + 0x38] ; retf 0x9b73
0x000000000019a6ab : inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x000000000019762b : inc dword ptr [rbp + rsi*4 - 0x6b4c0000] ; in eax, dx ; jmp rsp
0x0000000000186df3 : inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000003a6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x0000000000063df9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x00000000000684e8 : inc dword ptr [rbp - 0x76818b40] ; ret
0x00000000001219ff : inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000121dd1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000063ad1 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x0000000000068ac4 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x000000000005d377 : inc dword ptr [rbp - 0x76fd8125] ; retf
0x000000000011d7aa : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00000000000600b8 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000ffd4f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ffd9a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000050eb6 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f3b ; ret 0x8945
0x0000000000053b28 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53bad ; ret
0x00000000000c59d2 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000195dfb : inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000000d7ac5 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x000000000005a2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x000000000003338e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005bc4b : inc dword ptr [rbx - 0x7bf00008] ; retf
0x0000000000122fff : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003afba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000d7ca3 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd7c89 ; jmp 0xd7c79
0x00000000000aacd8 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabff : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000b6543 : inc dword ptr [rcx + 0x39] ; retf
0x000000000006588f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00000000001433d4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x00000000000576c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000124d84 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x0000000000109155 : inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000067491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x00000000001154bb : inc dword ptr [rcx - 0x47] ; retf 0
0x00000000000ec9eb : inc dword ptr [rcx - 0x73] ; add bpl, cl ; retf
0x00000000000edcd5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000b7e22 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000002b76c : inc dword ptr [rcx - 0x77] ; ret
0x00000000000dbc3d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00000000000e3fba : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], 0x94 ; ret 0x3ae9
0x0000000000079fed : inc dword ptr [rcx - 0x7f] ; retf 0
0x000000000007a14a : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x000000000007a195 : inc dword ptr [rcx - 0x80] ; retf 0xe980
0x0000000000122b0a : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001745b9 : inc dword ptr [rcx] ; ja 0x1745c4 ; ret
0x00000000001bc5e6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc3fa : inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x00000000001bc480 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000000df074 : inc dword ptr [rcx] ; ret
0x00000000000d6f28 : inc dword ptr [rcx] ; ret 0x5589
0x00000000000dec7a : inc dword ptr [rcx] ; ret 0x8b49
0x00000000000b9106 : inc dword ptr [rcx] ; retf 0x8348
0x00000000000b9c38 : inc dword ptr [rcx] ; retf 0x8349
0x00000000000b958b : inc dword ptr [rcx] ; retf 0x894d
0x0000000000188ef3 : inc dword ptr [rcx] ; retf 0xfff3
0x00000000001bc702 : inc dword ptr [rcx] ; sub byte ptr [rcx + rax + 0x1c6], bl ; retf 0x503
0x000000000003e58c : inc dword ptr [rdi + rcx + 0x44] ; retf 0xf741
0x00000000000c6580 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x0000000000098f93 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e0fa7 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000019b9db : inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000019600b : inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000000dc0e6 : inc dword ptr [rdi] ; jbe 0xdc0f9 ; mov eax, 0xc ; ret
0x0000000000195847 : inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001962f3 : inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000198d83 : inc dword ptr [rdx + rdx*2 + 0x7e40001] ; hlt ; call rsp
0x0000000000189067 : inc dword ptr [rdx - 0x24] ; jmp rcx
0x000000000019ae63 : inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019622b : inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000195d33 : inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x000000000019621b : inc dword ptr [rdx] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000195837 : inc dword ptr [rdx] ; pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d23 : inc dword ptr [rdx] ; xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x000000000014b96d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000188f0b : inc dword ptr [rsi + 0x21fff3dc] ; fdiv st(3) ; jmp qword ptr [rdx]
0x00000000001957a3 : inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x0000000000187bcf : inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x000000000019accb : inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x00000000001961c7 : inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000189363 : inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001961b7 : inc dword ptr [rsi] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x000000000018a807 : inc dword ptr [rsi] ; xor esi, 0xf67ce2ff ; jmp rax
0x000000000019afdb : inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000018808f : inc eax ; add al, 0xf2 ; call rax
0x000000000018802b : inc eax ; add dh, dl ; jmp rax
0x0000000000188007 : inc eax ; add edx, esi ; jmp rax
0x0000000000187f73 : inc eax ; cld ; int1 ; jmp rax
0x0000000000187e47 : inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e73 : inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187ebb : inc eax ; out dx, al ; int1 ; call rax
0x0000000000187bf7 : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001960cf : inc eax ; pop rcx ; cld ; jmp rax
0x00000000001891fb : inc eax ; push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x0000000000187fc3 : inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000034f19 : inc eax ; shr eax, 0x1f ; ret
0x0000000000195583 : inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000187f93 : inc eax ; std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000019552f : inc eax ; sti ; call qword ptr [rax]
0x000000000018b097 : inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x0000000000196377 : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x000000000018935f : inc ebp ; push rdx ; hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x000000000018a4f9 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000107dce : inc ebx ; mov eax, 0x110 ; syscall
0x0000000000107e8e : inc ebx ; mov eax, 0x11b ; syscall
0x0000000000108bde : inc ebx ; mov eax, 0x44 ; syscall
0x0000000000107d3e : inc ebx ; mov eax, 0x63 ; syscall
0x0000000000107a3e : inc ebx ; mov eax, 0xb1 ; syscall
0x0000000000140c7a : inc ebx ; mov eax, 0xffffffff ; ret
0x00000000000368cc : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000074f5c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000172319 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000791c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x000000000018919b : inc ebx ; push rax ; hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001892bf : inc ebx ; push rbx ; hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000001951eb : inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951e7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951c7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x0000000000195117 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951cb : inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019511b : inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019520b : inc ecx ; mov bh, 0xfd ; lcall [rax] ; fdivr st(3) ; jmp rax
0x000000000005cb56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000fe5b9 : inc esi ; jmp qword ptr [r8]
0x0000000000198f83 : inc esp ; add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000196d9b : inc esp ; jle 0x196da7 ; add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x0000000000199253 : inc esp ; jne 0x199260 ; add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x000000000019783b : inc esp ; ret 0
0x000000000019a0fb : inc esp ; ret 1
0x00000000000d6f27 : inc qword ptr [rcx] ; ret 0x5589
0x00000000001468e4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012de70 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001bb866 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001af9a4 : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aeed2
0x0000000000034f9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035008 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000351aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000000f35c0 : insb byte ptr [rdi], dx ; and al, 8 ; call 0x1f8ad
0x0000000000035059 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034f3a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001bb0a4 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001b0779 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0701 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001af3a4 : insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001745a4 : insb byte ptr [rdi], dx ; cmp esp, dword ptr [rip] ; add bl, dh ; ret
0x00000000001bafa4 : insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf49 ; sti ; jmp qword ptr [rdx]
0x0000000000185e1e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001a45a4 : insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001323b2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001ba1a4 : insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x0000000000197df9 : insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x00000000001b29a4 : insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a134 : insb byte ptr [rdi], dx ; ret
0x0000000000065d60 : insb byte ptr [rdi], dx ; ret 0
0x00000000000caaa8 : insb byte ptr [rdi], dx ; ret 0x2f
0x0000000000077900 : insb byte ptr [rdi], dx ; retf
0x0000000000048730 : insb byte ptr [rdi], dx ; retf 0x4df0
0x000000000019a2ac : insb byte ptr [rdi], dx ; retf 1
0x00000000001b59a4 : insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000000e3561 : insb byte ptr [rdi], dx ; shl rsi, 2 ; call 0x1f7f7
0x00000000001851e6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000194f41 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax - 0x1f000493]
0x00000000001b64a4 : insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aeda4 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x0000000000149550 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009791f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015d3e3 : insd dword ptr [rdi], dx ; add byte ptr es:[rax + 0x39], cl ; retf 0x377
0x000000000014a450 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006ce31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000198c19 : insd dword ptr [rdi], dx ; call rsp
0x0000000000196145 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x00000000001b0839 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001b0809 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x0000000000104ac7 : insd dword ptr [rdi], dx ; enter -0x1d18, -0x7a ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a4449 : insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000187bb1 : insd dword ptr [rdi], dx ; int1 ; call rax
0x0000000000187bad : insd dword ptr [rdi], dx ; int1 ; inc dword ptr [rax + 0x6d] ; int1 ; call rax
0x00000000001a6661 : insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x0000000000185e1f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00000000001841cd : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000019018 : insd dword ptr [rdi], dx ; retf 0x18
0x0000000000132e37 : insd dword ptr [rdi], dx ; retf 0xffee
0x0000000000194f45 : insd dword ptr [rdi], dx ; sti ; jmp rax
0x00000000001850df : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000002c33 : int 0x80
0x000000000010650f : int 0xc3
0x00000000000034d0 : int 0xcb
0x00000000001aac6d : int1 ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000000504c6 : int1 ; add eax, r8d ; ret
0x0000000000187df2 : int1 ; call qword ptr [rax]
0x00000000001aa03a : int1 ; call qword ptr [rbx]
0x00000000001a940a : int1 ; call qword ptr [rcx]
0x00000000001a9a4a : int1 ; call qword ptr [rdx]
0x00000000001a91fa : int1 ; call qword ptr [rsi]
0x0000000000187bb2 : int1 ; call rax
0x000000000002185c : int1 ; call rbx
0x00000000001aa232 : int1 ; call rdi
0x00000000001aa58a : int1 ; call rsi
0x00000000001984e2 : int1 ; call rsp
0x0000000000110b58 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000102acc : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102ad8 ; call rbx
0x0000000000102d7f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d8b ; call rbx
0x0000000000104917 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x104923 ; call rbx
0x000000000010298a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d8d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102997 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1029a3 ; call rbx
0x0000000000102abe : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102aca ; call rbx
0x0000000000102c01 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102c0d ; call rbx
0x0000000000102d71 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102d7d ; call rbx
0x000000000010458f : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10459b ; call rbx
0x00000000001046b7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1046c3 ; call rbx
0x00000000001047fa : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104806 ; call rbx
0x00000000001048fb : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104907 ; call rbx
0x000000000019869a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000003a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187bae : int1 ; inc dword ptr [rax + 0x6d] ; int1 ; call rax
0x0000000000187e16 : int1 ; inc dword ptr [rax] ; in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187e06 : int1 ; inc dword ptr [rax] ; in al, dx ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x0000000000187e56 : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e7a : int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187eca : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187f7a : int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187bce : int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187f72 : int1 ; inc eax ; cld ; int1 ; jmp rax
0x0000000000187e46 : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e72 : int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187eba : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187bf6 : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187fc2 : int1 ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000187f92 : int1 ; inc eax ; std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000009ebdd : int1 ; je 0x9ebd4 ; ret
0x00000000000aa58b : int1 ; jl 0xaa5dc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5ac : int1 ; jl 0xaa5fd ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5bf : int1 ; jl 0xaa610 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa694 : int1 ; jl 0xaa6e5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa6ec : int1 ; jl 0xaa73d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa789 : int1 ; jl 0xaa7da ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000187dfe : int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187d96 : int1 ; jmp qword ptr [rax]
0x00000000001a90ea : int1 ; jmp qword ptr [rcx]
0x00000000001aa00a : int1 ; jmp qword ptr [rdi]
0x0000000000187dae : int1 ; jmp rax
0x00000000000aac95 : int1 ; jmp rcx
0x00000000001a9652 : int1 ; jmp rdi
0x0000000000187bd2 : int1 ; jmp rsp
0x00000000001850a4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000ea8fd : int1 ; mov eax, ecx ; syscall
0x000000000015ab5b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001535df : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012e7ca : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012a2ae : int1 ; mov rdi, r13 ; call r12
0x0000000000171df3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001bc580 : int1 ; or byte ptr [rbx], al ; ret
0x00000000000aacdb : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000009751e : int1 ; pop rbx ; pop rbp ; ret
0x0000000000187dfa : int1 ; push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187eb6 : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187e42 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187bf2 : int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187e0a : int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x0000000000187bca : int1 ; push qword ptr [rsi + rbp*2] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187e52 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187ec6 : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187fc6 : int1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000187f96 : int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000000260b : int1 ; ret
0x00000000001857f6 : int1 ; ret 0x5803
0x00000000000e35b3 : int1 ; ret 0xfff3
0x00000000000b194b : int1 ; ret 0xfff7
0x00000000001b5fd9 : int1 ; sti ; call rcx
0x000000000019552d : int1 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000171df7 : int1 ; sub eax, edx ; ret
0x00000000000481cd : int1 ; xor eax, eax ; pop rbx ; ret
0x000000000009742e : int1 ; xor eax, eax ; ret
0x00000000001979e5 : iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x0000000000102989 : iretd ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102996 : iretd ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1029a4 ; call rbx
0x0000000000188aa0 : iretd ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x00000000001414ae : iretd ; mov eax, 1 ; syscall
0x0000000000080faf : iretd ; mov eax, 3 ; syscall
0x0000000000080f83 : iretd ; mov eax, r8d ; syscall
0x0000000000089269 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000188c84 : iretd ; test eax, 0xbbfdfff3 ; jmp rax
0x00000000001056c4 : ja 0x1056d3 ; ret
0x0000000000105acf : ja 0x105a65 ; or byte ptr [rax], al ; mov eax, ebx ; syscall
0x0000000000107384 : ja 0x107393 ; ret
0x00000000001075c6 : ja 0x1075d2 ; ret
0x0000000000107678 : ja 0x107683 ; ret
0x00000000001076b2 : ja 0x1076c3 ; ret
0x0000000000108263 : ja 0x108272 ; ret
0x00000000001083e3 : ja 0x1083f2 ; ret
0x000000000010887d : ja 0x108882 ; ret
0x000000000010891f : ja 0x10892a ; ret
0x00000000001089cf : ja 0x1089da ; ret
0x0000000000115830 : ja 0x11583b ; ret
0x00000000001158b5 : ja 0x11588c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001158dd : ja 0x1158fd ; ret
0x00000000001175a2 : ja 0x1175b3 ; ret
0x0000000000117593 : ja 0x1175cb ; movsxd rdi, edi ; xor eax, eax ; syscall
0x0000000000117652 : ja 0x117663 ; ret
0x0000000000117643 : ja 0x11767b ; mov eax, 0x59 ; syscall
0x0000000000119097 : ja 0x1190aa ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000123c13 : ja 0x123c18 ; ret
0x0000000000123f40 : ja 0x123f2b ; mov eax, 0xffffffff ; ret
0x0000000000123fe9 : ja 0x124000 ; shl esi, 4 ; lea eax, [rsi + 8] ; ret
0x000000000012b791 : ja 0x12b7e4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012e7ed : ja 0x12e7de ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013bde7 : ja 0x13be03 ; ret
0x000000000013bf5f : ja 0x13bf82 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013c1e0 : ja 0x13c210 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001745bb : ja 0x1745c2 ; ret
0x0000000000185864 : ja 0x1857eb ; ret 0x48f
0x00000000001888c1 : ja 0x1888bc ; call qword ptr [rdx - 0x1b000c89]
0x00000000001888c5 : ja 0x1888bc ; jmp rsp
0x0000000000194f5d : ja 0x194f5c ; call qword ptr [rax]
0x0000000000195e91 : ja 0x195e91 ; call rax
0x000000000019600d : ja 0x19600d ; call rsp
0x0000000000196009 : ja 0x19600d ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x000000000019600c : ja 0x19600e ; call rsp
0x00000000001960c9 : ja 0x1960c9 ; jmp qword ptr [rax]
0x00000000001960cd : ja 0x1960d1 ; inc eax ; pop rcx ; cld ; jmp rax
0x00000000001969d1 : ja 0x1969be ; call rsp
0x0000000000196be5 : ja 0x196bed ; add byte ptr [rbp - 0x17], al ; call rsp
0x000000000019b9a9 : ja 0x19b9aa ; call rsp
0x000000000002daad : ja 0x2dac8 ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000003542e : ja 0x35453 ; ret
0x0000000000035736 : ja 0x35743 ; ret
0x00000000000357a2 : ja 0x357b3 ; ret
0x00000000000357ec : ja 0x357f2 ; ret
0x000000000003dce5 : ja 0x3c8ce ; jmp 0x3dcbf
0x0000000000040fd5 : ja 0x3fbae ; jmp 0x40faf
0x00000000000447a5 : ja 0x42aae ; jmp 0x4477f
0x0000000000048a8e : ja 0x48ae0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000504b7 : ja 0x5049e ; mov eax, r8d ; ret
0x000000000006182c : ja 0x617b9 ; ret 0x348
0x0000000000062b53 : ja 0x62ae0 ; ret 0x348
0x0000000000069c78 : ja 0x69c05 ; ret 0x348
0x0000000000073026 : ja 0x73033 ; ret
0x0000000000077c88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f272 : ja 0x8f283 ; ret
0x0000000000094478 : ja 0x94472 ; ret 0x7401
0x0000000000096e3d : ja 0x96e1f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f85c : ja 0x9f875 ; mov rax, rdi ; ret
0x000000000009ffe3 : ja 0x9ffe7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0736 : ja 0xa073a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0e83 : ja 0xa0e87 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a5d57 : ja 0xa5d5d ; ret
0x00000000000a5d73 : ja 0xa5d7d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5db4 : ja 0xa5dc3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e39 : ja 0xa5e4d ; ret
0x00000000000a5e8f : ja 0xa5ea7 ; ret
0x00000000000a5f11 : ja 0xa5f2d ; ret
0x00000000000a7357 : ja 0xa7361 ; lea rax, [rdi + 2] ; ret
0x00000000000a7373 : ja 0xa7381 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000a73c4 : ja 0xa73d7 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000a74a9 : ja 0xa74c1 ; lea rax, [rdi + 0x10] ; ret
0x00000000000a751f : ja 0xa753b ; lea rax, [rdi + 0x14] ; ret
0x00000000000a75a1 : ja 0xa75c1 ; lea rax, [rdi + 0x18] ; ret
0x00000000000a8e37 : ja 0xa8e3d ; ret
0x00000000000a8e53 : ja 0xa8e5d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e94 : ja 0xa8ea3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8f19 : ja 0xa8f2d ; ret
0x00000000000a8f6f : ja 0xa8f87 ; ret
0x00000000000a8ff1 : ja 0xa900d ; ret
0x00000000000a9907 : ja 0xa990d ; ret
0x00000000000a9923 : ja 0xa992d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9964 : ja 0xa9973 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a99e9 : ja 0xa99fd ; ret
0x00000000000a9a3f : ja 0xa9a57 ; ret
0x00000000000a9ac1 : ja 0xa9add ; ret
0x00000000000aaf89 : ja 0xaafa9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000ac822 : ja 0xac832 ; cmove rax, rcx ; ret
0x00000000000acc1c : ja 0xacc2c ; mov eax, edi ; ret
0x00000000000bc43d : ja 0xbc44b ; ret
0x00000000000c83dd : ja 0xc83eb ; pop rbx ; ret
0x00000000000c9657 : ja 0xc9662 ; ret
0x00000000000cbfe6 : ja 0xcbff2 ; ret
0x00000000000cc080 : ja 0xcc08a ; ret
0x00000000000cc171 : ja 0xcc17a ; ret
0x00000000000cc73d : ja 0xcc769 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000cd2c9 : ja 0xcd2d2 ; ret
0x00000000000cd339 : ja 0xcd342 ; ret
0x00000000000cd58d : ja 0xcd592 ; ret
0x00000000000cd601 : ja 0xcd607 ; add byte ptr [rax], al ; syscall
0x00000000000cd60d : ja 0xcd612 ; ret
0x00000000000d8e3e : ja 0xd8e57 ; mov eax, 2 ; ret
0x00000000000f5f71 : ja 0xf5f7b ; xor eax, eax ; ret
0x00000000000f646a : ja 0xf6473 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000f6a0e : ja 0xf69a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6a42 : ja 0xf6a33 ; ret
0x00000000000f6beb : ja 0xf6bf3 ; ret
0x00000000000f6c3a : ja 0xf6c43 ; ret
0x00000000000f6c8b : ja 0xf6c93 ; ret
0x00000000000f6ce3 : ja 0xf6cf3 ; ret
0x00000000000f6d47 : ja 0xf6d53 ; ret
0x00000000000f6da0 : ja 0xf6dab ; ret
0x00000000000f6f7f : ja 0xf6f8b ; ret
0x00000000000f7649 : ja 0xf7683 ; ret
0x00000000000f76ed : ja 0xf7737 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fb5a3 : ja 0xfb5b8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000fbad8 : ja 0xfbae3 ; ret
0x00000000000fbb2c : ja 0xfbb33 ; ret
0x00000000000fc280 : ja 0xfc28a ; ret
0x00000000000fc363 : ja 0xfc36f ; ret
0x00000000000fc3b9 : ja 0xfc3c5 ; ret
0x00000000000fc7a4 : ja 0xfc7b2 ; ret
0x00000000000fce33 : ja 0xfce63 ; ret
0x00000000000fd050 : ja 0xfd05a ; ret
0x00000000000fd100 : ja 0xfd10a ; ret
0x00000000000fd1ab : ja 0xfd1b2 ; ret
0x00000000000fd21b : ja 0xfd222 ; ret
0x00000000000fd29c : ja 0xfd2a2 ; ret
0x00000000000fd33d : ja 0xfd346 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000fd34c : ja 0xfd352 ; ret
0x00000000000fd89c : ja 0xfd8a3 ; ret
0x00000000000fefbd : ja 0xfefcb ; ret
0x00000000000ff051 : ja 0xff05b ; ret
0x00000000000ff0f1 : ja 0xff0fb ; ret
0x00000000000ff145 : ja 0xff153 ; ret
0x00000000000ff229 : ja 0xff235 ; ret
0x00000000000022df : ja 0xffffffffd6104b6b ; ret
0x00000000001014df : jae 0x1014e4 ; ret
0x000000000010174d : jae 0x101752 ; ret
0x000000000010177d : jae 0x101782 ; ret
0x00000000001017b6 : jae 0x1017eb ; ret
0x000000000010180d : jae 0x101812 ; ret
0x000000000010183d : jae 0x101842 ; ret
0x0000000000101870 : jae 0x101875 ; ret
0x000000000010189d : jae 0x1018a2 ; ret
0x00000000001018cd : jae 0x1018d2 ; ret
0x00000000001018fd : jae 0x101902 ; ret
0x000000000010192d : jae 0x101932 ; ret
0x0000000000105ff0 : jae 0x105ff5 ; ret
0x000000000010601d : jae 0x106022 ; ret
0x000000000010604d : jae 0x106052 ; ret
0x0000000000106080 : jae 0x106085 ; ret
0x00000000001060b0 : jae 0x1060b5 ; ret
0x00000000001060dd : jae 0x1060e2 ; ret
0x0000000000106110 : jae 0x106115 ; ret
0x000000000010613d : jae 0x106142 ; ret
0x000000000010616d : jae 0x106172 ; ret
0x00000000001061a0 : jae 0x1061a5 ; ret
0x00000000001061cd : jae 0x1061d2 ; ret
0x0000000000106200 : jae 0x106205 ; ret
0x00000000001072ed : jae 0x1072f2 ; ret
0x000000000010731d : jae 0x107322 ; ret
0x000000000010744d : jae 0x107452 ; ret
0x000000000010748d : jae 0x107492 ; ret
0x00000000001074bd : jae 0x1074c2 ; ret
0x00000000001074ed : jae 0x1074f2 ; ret
0x000000000010751d : jae 0x107522 ; ret
0x0000000000107740 : jae 0x107745 ; ret
0x000000000010776d : jae 0x107772 ; ret
0x000000000010779d : jae 0x1077a2 ; ret
0x00000000001077cd : jae 0x1077d2 ; ret
0x0000000000107810 : jae 0x107815 ; ret
0x000000000010783d : jae 0x107842 ; ret
0x000000000010786d : jae 0x107872 ; ret
0x000000000010789d : jae 0x1078a2 ; ret
0x00000000001078cd : jae 0x1078d2 ; ret
0x00000000001078fd : jae 0x107902 ; ret
0x000000000010792d : jae 0x107932 ; ret
0x000000000010795d : jae 0x107962 ; ret
0x000000000010798d : jae 0x107992 ; ret
0x00000000001079c0 : jae 0x1079c5 ; ret
0x00000000001079f9 : jae 0x107a31 ; ret
0x0000000000107a4d : jae 0x107a52 ; ret
0x0000000000107a80 : jae 0x107a85 ; ret
0x0000000000107aad : jae 0x107ab2 ; ret
0x0000000000107add : jae 0x107ae2 ; ret
0x0000000000107b0d : jae 0x107b12 ; ret
0x0000000000107b3d : jae 0x107b42 ; ret
0x0000000000107b6d : jae 0x107b72 ; ret
0x0000000000107ba0 : jae 0x107ba5 ; ret
0x0000000000107bd0 : jae 0x107bd5 ; ret
0x0000000000107bfd : jae 0x107c02 ; ret
0x0000000000107c2d : jae 0x107c32 ; ret
0x0000000000107c60 : jae 0x107c65 ; ret
0x0000000000107c90 : jae 0x107c95 ; ret
0x0000000000107cc0 : jae 0x107cc5 ; ret
0x0000000000107cf9 : jae 0x107d31 ; ret
0x0000000000107d4d : jae 0x107d52 ; ret
0x0000000000107d89 : jae 0x107dc1 ; ret
0x0000000000107ddd : jae 0x107de2 ; ret
0x0000000000107e0d : jae 0x107e12 ; ret
0x0000000000107e49 : jae 0x107e81 ; ret
0x0000000000107e9d : jae 0x107ea2 ; ret
0x0000000000107ed0 : jae 0x107ed5 ; ret
0x0000000000107efd : jae 0x107f02 ; ret
0x0000000000107f2d : jae 0x107f32 ; ret
0x0000000000107f60 : jae 0x107f65 ; ret
0x0000000000107f96 : jae 0x107fcb ; ret
0x0000000000107fed : jae 0x107ff2 ; ret
0x0000000000108020 : jae 0x108025 ; ret
0x0000000000108050 : jae 0x108055 ; ret
0x00000000001080a6 : jae 0x1080db ; ret
0x00000000001080fd : jae 0x108102 ; ret
0x0000000000108136 : jae 0x10816b ; ret
0x000000000010818d : jae 0x108192 ; ret
0x00000000001081bd : jae 0x1081c2 ; ret
0x00000000001081f0 : jae 0x1081f5 ; ret
0x000000000010821d : jae 0x108222 ; ret
0x0000000000108319 : jae 0x108351 ; ret
0x0000000000108376 : jae 0x1083ab ; ret
0x0000000000108496 : jae 0x1084cb ; ret
0x00000000001084f9 : jae 0x108531 ; ret
0x0000000000108550 : jae 0x108555 ; ret
0x000000000010857d : jae 0x108582 ; ret
0x00000000001085ad : jae 0x1085b2 ; ret
0x00000000001085e0 : jae 0x1085e5 ; ret
0x0000000000108b39 : jae 0x108b71 ; ret
0x0000000000108b99 : jae 0x108bd1 ; ret
0x0000000000108bed : jae 0x108bf2 ; ret
0x0000000000108c1d : jae 0x108c22 ; ret
0x0000000000108c4d : jae 0x108c52 ; ret
0x0000000000108c7d : jae 0x108c82 ; ret
0x0000000000108cb0 : jae 0x108cb5 ; ret
0x0000000000108ce0 : jae 0x108ce5 ; ret
0x0000000000108d0d : jae 0x108d12 ; ret
0x0000000000108d3d : jae 0x108d42 ; ret
0x0000000000108d6d : jae 0x108d72 ; ret
0x0000000000108d9d : jae 0x108da2 ; ret
0x000000000010f46c : jae 0x10f497 ; cmp byte ptr [rax], dil ; je 0x10f4a1 ; mov rdx, rax ; jmp 0x10f48e
0x000000000010f777 : jae 0x10f79e ; cmp byte ptr [r8], r9b ; je 0x10f7a5 ; mov rdx, r8 ; jmp 0x10f795
0x000000000013bec5 : jae 0x13bed4 ; xor eax, eax ; ret
0x000000000013bf05 : jae 0x13bf14 ; xor eax, eax ; ret
0x00000000001406a0 : jae 0x1406a5 ; ret
0x00000000001406f0 : jae 0x1406f5 ; ret
0x00000000001432bc : jae 0x143249 ; retf 0x8d48
0x00000000001434f4 : jae 0x1434d7 ; mov eax, 1 ; ret
0x000000000017437c : jae 0x17438b ; call qword ptr [rbx]
0x0000000000175137 : jae 0x175154 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000183e22 : jae 0x183e04 ; jo 0x183ea0 ; mov ebp, 0xfb67d10d ; ret
0x0000000000184cbe : jae 0x184c99 ; push rsi ; pop rdx ; je 0x184c8e ; ret 0xacfc
0x0000000000194f51 : jae 0x194f54 ; call qword ptr [rax + 0x10fffb74]
0x0000000000196941 : jae 0x19692e ; jmp rsp
0x00000000001991bd : jae 0x1991c6 ; add byte ptr [rbp + rax - 0xa], dl ; call rsp
0x000000000019b8c9 : jae 0x19b8c8 ; call rsp
0x00000000001a1469 : jae 0x1a1481 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1db5 : jae 0x1a1dcd ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a2677 : jae 0x1a2685 ; ret
0x00000000001a4619 : jae 0x1a460a ; call qword ptr [rcx]
0x00000000001a6729 : jae 0x1a671b ; jmp qword ptr [rdx]
0x00000000001a7591 : jae 0x1a7584 ; call rax
0x00000000001b0d59 : jae 0x1b0d52 ; call qword ptr [rsi]
0x00000000001b0d89 : jae 0x1b0d82 ; jmp qword ptr [rcx]
0x00000000001b0db9 : jae 0x1b0db2 ; jmp qword ptr [rcx]
0x00000000001b0dd1 : jae 0x1b0dca ; jmp qword ptr [rcx]
0x00000000001bc121 : jae 0x1bc11d ; call qword ptr [rdi]
0x0000000000001d8f : jae 0x1dba ; mov ecx, 0x72b02084 ; retf
0x000000000002cb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003576d : jae 0x35772 ; ret
0x0000000000035e2d : jae 0x35e32 ; ret
0x0000000000047b27 : jae 0x47b30 ; xor eax, eax ; ret
0x000000000006984c : jae 0x697d9 ; ret 0x348
0x000000000006b36d : jae 0x6b372 ; ret
0x000000000006b3a0 : jae 0x6b3a5 ; ret
0x0000000000079618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b2d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cc4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x000000000008964e : jae 0x8965e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc51d : jae 0xbc522 ; ret
0x00000000000bf60d : jae 0xbf612 ; ret
0x00000000000bf63d : jae 0xbf642 ; ret
0x00000000000cbf3d : jae 0xcbf42 ; ret
0x00000000000cc130 : jae 0xcc135 ; ret
0x00000000000cc20d : jae 0xcc212 ; ret
0x00000000000cc296 : jae 0xcc2cb ; ret
0x00000000000cc2f6 : jae 0xcc32b ; ret
0x00000000000cc6f7 : jae 0xcc6fc ; ret
0x00000000000cc77d : jae 0xcc782 ; ret
0x00000000000cd281 : jae 0xcd287 ; add byte ptr [rax], al ; syscall
0x00000000000cd28d : jae 0xcd292 ; ret
0x00000000000cd42d : jae 0xcd432 ; ret
0x00000000000cd45d : jae 0xcd462 ; ret
0x00000000000cd4bd : jae 0xcd4c2 ; ret
0x00000000000cd4ed : jae 0xcd4f2 ; ret
0x00000000000cd51d : jae 0xcd522 ; ret
0x00000000000cd54d : jae 0xcd552 ; ret
0x00000000000e0d0a : jae 0xe0f56 ; movdqa xmm0, xmm2 ; jmp 0xe0cfc
0x00000000000ea76d : jae 0xea772 ; ret
0x00000000000ea79d : jae 0xea7a2 ; ret
0x00000000000ea7cd : jae 0xea7d2 ; ret
0x00000000000ea7fd : jae 0xea802 ; ret
0x00000000000ea82d : jae 0xea832 ; ret
0x00000000000ea85d : jae 0xea862 ; ret
0x00000000000ea88d : jae 0xea892 ; ret
0x00000000000ea8bd : jae 0xea8c2 ; ret
0x00000000000f3fd9 : jae 0xf3fe2 ; add byte ptr [rax], al ; call 0x2027f
0x00000000000f5a79 : jae 0xf5ab1 ; ret
0x00000000000f5ad9 : jae 0xf5b11 ; ret
0x00000000000f6b4d : jae 0xf6b52 ; ret
0x00000000000f6ded : jae 0xf6df2 ; ret
0x00000000000f6e1d : jae 0xf6e22 ; ret
0x00000000000f6eed : jae 0xf6ef2 ; ret
0x00000000000f6f1d : jae 0xf6f22 ; ret
0x00000000000f6fdd : jae 0xf6fe2 ; ret
0x00000000000f700d : jae 0xf7012 ; ret
0x00000000000f7046 : jae 0xf707b ; ret
0x00000000000f7266 : jae 0xf729b ; ret
0x00000000000f72c6 : jae 0xf72fb ; ret
0x00000000000f731d : jae 0xf7322 ; ret
0x00000000000f77ad : jae 0xf77b2 ; ret
0x00000000000f78f6 : jae 0xf792b ; ret
0x00000000000f794d : jae 0xf7952 ; ret
0x00000000000f797d : jae 0xf7982 ; ret
0x00000000000f79ad : jae 0xf79b2 ; ret
0x00000000000f79dd : jae 0xf79e2 ; ret
0x00000000000f7a0d : jae 0xf7a12 ; ret
0x00000000000f7a46 : jae 0xf7a7b ; ret
0x00000000000f7a9d : jae 0xf7aa2 ; ret
0x00000000000f7acd : jae 0xf7ad2 ; ret
0x00000000000f830d : jae 0xf8312 ; ret
0x00000000000f833d : jae 0xf8342 ; ret
0x00000000000f836d : jae 0xf8372 ; ret
0x00000000000f83a0 : jae 0xf83a5 ; ret
0x00000000000f897d : jae 0xf8982 ; ret
0x00000000000f89b0 : jae 0xf89b5 ; ret
0x00000000000f89dd : jae 0xf89e2 ; ret
0x00000000000f8a0d : jae 0xf8a12 ; ret
0x00000000000f8a3d : jae 0xf8a42 ; ret
0x00000000000f8a70 : jae 0xf8a75 ; ret
0x00000000000f8a9d : jae 0xf8aa2 ; ret
0x00000000000f8acd : jae 0xf8ad2 ; ret
0x00000000000f8afd : jae 0xf8b02 ; ret
0x00000000000fb736 : jae 0xfb76b ; ret
0x00000000000fb7c4 : jae 0xfb817 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fbaa0 : jae 0xfbaa5 ; ret
0x00000000000fc219 : jae 0xfc251 ; ret
0x00000000000fc96d : jae 0xfc972 ; ret
0x00000000000fc99d : jae 0xfc9a2 ; ret
0x00000000000fc9cd : jae 0xfc9d2 ; ret
0x00000000000fcd6d : jae 0xfcd72 ; ret
0x00000000000fcf4d : jae 0xfcf52 ; ret
0x00000000000fcf86 : jae 0xfcfbb ; ret
0x00000000000fcfe6 : jae 0xfd01b ; ret
0x00000000000fd4dd : jae 0xfd4e2 ; ret
0x00000000000fd57d : jae 0xfd582 ; ret
0x00000000000fd5b9 : jae 0xfd5f1 ; ret
0x00000000000fd70d : jae 0xfd712 ; ret
0x00000000000fd73d : jae 0xfd742 ; ret
0x00000000000fd776 : jae 0xfd7ab ; ret
0x00000000000fd7cd : jae 0xfd7d2 ; ret
0x00000000000fd806 : jae 0xfd83b ; ret
0x00000000000fd85d : jae 0xfd862 ; ret
0x00000000000fdbcd : jae 0xfdbd2 ; ret
0x00000000000fdbfd : jae 0xfdc02 ; ret
0x00000000000fdc2d : jae 0xfdc32 ; ret
0x00000000000ff17d : jae 0xff182 ; ret
0x00000000000ff1ad : jae 0xff1b2 ; ret
0x00000000000ffe1b : jae 0xffe4f ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000122645 : jae 0xffffffff835a2812 ; ret 0x3904
0x000000000010e9cb : jb 0x10e9df ; mov eax, 1 ; ret
0x00000000001149cd : jb 0x1149c4 ; xor eax, eax ; ret
0x00000000001179d3 : jb 0x1179e8 ; shl rdx, 2 ; jmp 0x94478
0x0000000000123ec8 : jb 0x123ebb ; mov eax, 0xffffffff ; ret
0x000000000012e7f1 : jb 0x12e815 ; ret
0x000000000012e7eb : jb 0x12e81d ; ja 0x12e7e0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014da71 : jb 0x14da5a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dad4 : jb 0x14dabd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014db78 : jb 0x14db84 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014df61 : jb 0x14df4a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dfc4 : jb 0x14dfad ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e068 : jb 0x14e074 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e304 : jb 0x14e2ed ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e364 : jb 0x14e34d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e408 : jb 0x14e414 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001515ea : jb 0x1515fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015173a : jb 0x15174a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015188a : jb 0x15189a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519da : jb 0x1519ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b2a : jb 0x151b3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c7a : jb 0x151c8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dca : jb 0x151dda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f1a : jb 0x151f2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015206a : jb 0x15207a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521ba : jb 0x1521ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015230a : jb 0x15231a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015245a : jb 0x15246a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525aa : jb 0x1525ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526fa : jb 0x15270a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015284a : jb 0x15285a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fba : jb 0x153fca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015410a : jb 0x15411a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015425a : jb 0x15426a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543aa : jb 0x1543ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544fa : jb 0x15450a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015464a : jb 0x15465a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015479a : jb 0x1547aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548ea : jb 0x1548fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a3a : jb 0x154a4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b8a : jb 0x154b9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cda : jb 0x154cea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e2a : jb 0x154e3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f7a : jb 0x154f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550ca : jb 0x1550da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015521a : jb 0x15522a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015698a : jb 0x15699a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ada : jb 0x156aea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c2a : jb 0x156c3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d7a : jb 0x156d8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156eca : jb 0x156eda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015701a : jb 0x15702a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015716a : jb 0x15717a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572ba : jb 0x1572ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015740a : jb 0x15741a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015755a : jb 0x15756a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576aa : jb 0x1576ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577fa : jb 0x15780a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015794a : jb 0x15795a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a9a : jb 0x157aaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157bea : jb 0x157bfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000172a67 : jb 0x172a77 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000172a73 : jb 0x172a89 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000172a83 : jb 0x172a8b ; mov byte ptr [rdi], cl ; ret
0x00000000001743ab : jb 0x1743a1 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000175149 : jb 0x175148 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186e1c : jb 0x186e01 ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000196210 : jb 0x1961bc ; cld ; jmp rdx
0x000000000019e011 : jb 0x19dffe ; jmp qword ptr [rsi]
0x00000000001b0c81 : jb 0x1b0c7a ; jmp qword ptr [rcx]
0x00000000001b0cb1 : jb 0x1b0caa ; jmp qword ptr [rcx]
0x00000000001b0cb0 : jb 0x1b0cab ; jmp qword ptr [rcx]
0x00000000001b0cc9 : jb 0x1b0cc2 ; jmp qword ptr [rcx]
0x00000000001b0d11 : jb 0x1b0d0a ; jmp qword ptr [rcx]
0x0000000000001acd : jb 0x1b4c ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001b69c6 : jb 0x1b69d4 ; ret
0x00000000001bc8a8 : jb 0x1bc8ae ; add byte ptr [rax], al ; retf
0x0000000000001d95 : jb 0x1dc8 ; retf
0x0000000000002b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002da7e : jb 0x2da8b ; ret
0x00000000000038ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000005e8d7 : jb 0x5e875 ; mov rdi, r12 ; call 0x7b3a7
0x0000000000071275 : jb 0x7129b ; mov dword ptr [rcx], eax ; ret
0x0000000000072d5c : jb 0x72d55 ; lea eax, [rdx + rdi] ; ret
0x00000000000886a2 : jb 0x8868d ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000009fbbe : jb 0x9fbca ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0311 : jb 0xa031d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5e : jb 0xa0a6a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a7cca : jb 0xa7cd9 ; add byte ptr [rax], al ; ret
0x00000000000aa5f5 : jb 0xaa604 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000aa600 : jb 0xaa613 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000aa60d : jb 0xaa615 ; mov byte ptr [rdi], cl ; ret
0x00000000000cdb9d : jb 0xcdba6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000d731d : jb 0xd729d ; pop rbx ; ret
0x00000000000fd20f : jb 0xfd215 ; add byte ptr [rax], al ; syscall
0x00000000000fe4f8 : jb 0xfe52b ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x000000000012dda3 : jbe 0x12ddb7 ; mov eax, 2 ; ret
0x000000000013c1dd : jbe 0x13c1f9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001856fc : jbe 0x1856cf ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000001856fb : jbe 0x1856d0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000194f59 : jbe 0x194f5c ; call qword ptr [rax + 0x10fffb77]
0x0000000000195044 : jbe 0x194ff1 ; std ; call qword ptr [rsi]
0x0000000000195f11 : jbe 0x195f15 ; jmp qword ptr [rdx + 0x22fffc7e]
0x0000000000196981 : jbe 0x19696e ; jmp rsp
0x0000000000196b95 : jbe 0x196b9d ; add byte ptr [rcx - 0x17], dl ; call rsp
0x000000000019928d : jbe 0x199296 ; add ah, al ; or al, 0xf6 ; call rsp
0x0000000000199659 : jbe 0x199653 ; jmp rsp
0x0000000000199658 : jbe 0x199654 ; jmp rsp
0x00000000001b0f21 : jbe 0x1b0f1a ; jmp qword ptr [rcx]
0x00000000001b0f39 : jbe 0x1b0f32 ; jmp qword ptr [rcx]
0x000000000002b767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000002c0f : jbe 0x2be3 ; clc ; ret
0x000000000002cdd2 : jbe 0x2cddf ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000037db : jbe 0x3786 ; outsb dx, byte ptr [rsi] ; retf
0x0000000000047f4b : jbe 0x47fc1 ; xor eax, eax ; ret
0x000000000004a49c : jbe 0x4a496 ; nop ; pop rbx ; ret
0x00000000000533bf : jbe 0x5334c ; ret 0x8166
0x000000000007228a : jbe 0x72200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000008eb66 : jbe 0x8eba5 ; add rax, rdi ; ret
0x000000000008eb76 : jbe 0x8eba7 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000008eb86 : jbe 0x8eba7 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000008eb96 : jbe 0x8eba7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000944e3 : jbe 0x944fe ; lea rdi, [rdi + 0x10] ; jne 0x944d9 ; ret
0x00000000000a12a9 : jbe 0xa12a3 ; ret 0xf10
0x00000000000a2ec9 : jbe 0xa2ec3 ; ret 0xf10
0x00000000000cd511 : jbe 0xcd517 ; add byte ptr [rax], al ; syscall
0x00000000000dc0e8 : jbe 0xdc0f7 ; mov eax, 0xc ; ret
0x00000000000f68d8 : jbe 0xf68e3 ; ret
0x00000000000f902a : jbe 0xf9048 ; mov eax, ecx ; syscall
0x00000000001014a8 : je 0x1014b9 ; mov dword ptr [rip + 0x2c2d60], edi ; ret
0x00000000001024f0 : je 0x1024fb ; pop rbx ; ret
0x00000000001039f0 : je 0x103a02 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010541e : je 0x1054be ; call rax
0x0000000000105595 : je 0x105696 ; call rax
0x0000000000105ec0 : je 0x105eee ; adc byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; syscall
0x00000000001073e6 : je 0x1073eb ; ret
0x00000000001095b4 : je 0x1095bb ; pop rbp ; ret
0x00000000001099ba : je 0x1099ca ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000109c09 : je 0x109c17 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010c99b : je 0x10c9b0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010f471 : je 0x10f49c ; mov rdx, rax ; jmp 0x10f489
0x000000000010f77c : je 0x10f7a0 ; mov rdx, r8 ; jmp 0x10f790
0x000000000011274c : je 0x112776 ; xor cl, ch ; retf
0x0000000000112b92 : je 0x112b72 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b66
0x0000000000113303 : je 0x113317 ; mov eax, 7 ; ret
0x0000000000113321 : je 0x113349 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000113330 : je 0x113394 ; xor eax, eax ; pop rbx ; ret
0x0000000000114a4b : je 0x114a5b ; ret
0x00000000001150f9 : je 0x1150fe ; ret
0x000000000011515d : je 0x115162 ; ret
0x000000000011557a : je 0x115582 ; ret
0x0000000000115872 : je 0x1158a2 ; call rax
0x0000000000115cf2 : je 0x115d0f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011622d : je 0x116240 ; lea rax, [rip - 0x767f6] ; ret
0x000000000011626e : je 0x116280 ; lea rax, [rip + 0x37c19] ; ret
0x000000000011631d : je 0x116330 ; lea rax, [rip - 0x76196] ; ret
0x000000000011635e : je 0x116370 ; lea rax, [rip + 0x37ec9] ; ret
0x00000000001163a7 : je 0x1163b9 ; lea rax, [rip - 0x6bea0] ; ret
0x0000000000116d4c : je 0x116d60 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011769c : je 0x1176ae ; add rsp, 8 ; ret
0x000000000011824c : je 0x118260 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011ce58 : je 0x11ce33 ; test byte ptr [rax + rbx*2 + 1], 0x20 ; jne 0x11ce33 ; jmp 0x11ce00
0x000000000011faa7 : je 0x11fab3 ; mov rdi, rbx ; call rax
0x000000000011fd9f : je 0x11fdab ; mov rdi, rbx ; call rax
0x000000000011feaf : je 0x11fec3 ; lea rdi, [rip + 0x2a87e8] ; call rax
0x000000000011ff5a : je 0x11ff87 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000123003 : je 0x122ffb ; pop rbx ; ret
0x0000000000127640 : je 0x12765d ; mov eax, 3 ; syscall
0x0000000000127673 : je 0x127690 ; mov eax, 3 ; syscall
0x00000000001276f8 : je 0x12770c ; mov eax, r14d ; syscall
0x00000000001277a2 : je 0x1277be ; movsxd rdi, eax ; mov eax, r14d ; syscall
0x0000000000128342 : je 0x12834a ; ret
0x00000000001283a1 : je 0x1283aa ; ret
0x000000000012839b : je 0x1283ab ; cmp dword ptr [rdi + 0x10], 2 ; je 0x1283b0 ; ret
0x000000000012b043 : je 0x12b02d ; xor eax, eax ; pop rbx ; ret
0x000000000012b883 : je 0x12b88f ; mov rdi, rsp ; call rax
0x000000000012b96e : je 0x12b97a ; mov rdi, rsp ; call rax
0x000000000012c029 : je 0x12c056 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012c224 : je 0x12c230 ; mov rdi, rbp ; call rax
0x000000000012c5a8 : je 0x12c5b2 ; ret
0x000000000012d2b5 : je 0x12d2c1 ; mov rdi, r14 ; call rax
0x000000000012d833 : je 0x12d844 ; xor eax, eax ; ret
0x000000000012de42 : je 0x12de4e ; mov rdi, rbp ; call rdx
0x000000000012e347 : je 0x12e444 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000132292 : je 0x1322a6 ; lea rdi, [rbx + 0xc8] ; call rax
0x0000000000132c4a : je 0x132c56 ; mov rdi, r12 ; call rax
0x0000000000132e2b : je 0x132e39 ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001337c4 : je 0x1337d4 ; xor eax, eax ; ret
0x00000000001341cb : je 0x1340ef ; mov rdi, rbp ; call rax
0x0000000000134105 : je 0x134111 ; mov rdi, r13 ; call rax
0x0000000000134213 : je 0x134227 ; mov eax, 1 ; ret
0x00000000001342f8 : je 0x134304 ; mov rdi, rbp ; call rax
0x0000000000134518 : je 0x134524 ; mov rdi, rbp ; call rax
0x000000000013500f : je 0x13501d ; lea rdi, [rbx + 0x68] ; call rax
0x00000000001356bb : je 0x1356c7 ; mov rdi, r12 ; call rax
0x0000000000135a2f : je 0x135a3d ; lea rdi, [rbx + 0x58] ; call rax
0x00000000001382ba : je 0x138248 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013823f : je 0x13824b ; pop rbx ; ret
0x00000000001382e3 : je 0x1382f6 ; add rsp, 8 ; ret
0x00000000001386f1 : je 0x138706 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138ecb : je 0x138ed2 ; ret
0x0000000000138fab : je 0x138fb9 ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001396c4 : je 0x1396d2 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000013ab3d : je 0x13ab98 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abfd : je 0x13ac58 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbd : je 0x13ad18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7d : je 0x13add8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b5eb : je 0x13b617 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b72f : je 0x13b75b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b87d : je 0x13b8a8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b93d : je 0x13b968 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b9fd : je 0x13ba28 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013babd : je 0x13bae8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013bdb1 : je 0x13bdc3 ; ret
0x000000000013dd78 : je 0x13dd84 ; xor eax, eax ; ret
0x00000000001429a1 : je 0x1429b6 ; add rsp, 8 ; ret
0x0000000000144d73 : je 0x144d3d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000145a45 : je 0x145a4d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145b43 : je 0x145b0d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000146a2a : je 0x146a32 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146b83 : je 0x146b4d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000148753 : je 0x14871d ; lea r10, [r10 + r9] ; jmp r10
0x000000000014a781 : je 0x14a768 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014aa73 : je 0x14aa3d ; lea r10, [r10 + r9] ; jmp r10
0x000000000014c103 : je 0x14c0cd ; lea r10, [r10 + r9] ; jmp r10
0x000000000016f7c7 : je 0x16f7d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000173e66 : je 0x173e6c ; call rdx
0x0000000000173f7e : je 0x173f89 ; call rax
0x0000000000174360 : je 0x174365 ; ret
0x00000000001751f0 : je 0x17520d ; movsxd rdi, eax ; mov eax, r14d ; syscall
0x000000000018322c : je 0x18325a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000183f88 : je 0x183f53 ; xor al, 0xd8 ; ret
0x0000000000184cc2 : je 0x184c8a ; ret 0xacfc
0x0000000000186a2c : je 0x186a9f ; in eax, dx ; jmp rdi
0x0000000000186a9c : je 0x186b0f ; in eax, dx ; jmp rdi
0x0000000000186a98 : je 0x186b0f ; in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000194f55 : je 0x194f54 ; call qword ptr [rax]
0x00000000001974e0 : je 0x197536 ; in eax, dx ; jmp rsp
0x0000000000198629 : je 0x19861e ; jmp rsp
0x0000000000198ed8 : je 0x198ef1 ; cmc ; call rsp
0x0000000000199008 : je 0x199051 ; cmc ; jmp rsp
0x0000000000199609 : je 0x199603 ; jmp rsp
0x000000000019a160 : je 0x19a14d ; idiv edi ; cld ; ret
0x000000000019b074 : je 0x19b0ae ; add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019b200 : je 0x19b243 ; cli ; jmp rsp
0x000000000019b658 : je 0x19b625 ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x000000000019b6e0 : je 0x19b6ae ; cli ; jmp rsp
0x00000000001a1462 : je 0x1a1470 ; ret
0x00000000001a49ac : je 0x1a4943 ; add byte ptr [rax], al ; sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000001a5eac : je 0x1a5e58 ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a69ac : je 0x1a6963 ; add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x00000000001a7de0 : je 0x1a7de7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aefac : je 0x1aefe9 ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0cac : je 0x1b0d06 ; add dword ptr [rax], eax ; jb 0x1b0caf ; jmp qword ptr [rcx]
0x00000000001b0e01 : je 0x1b0dfa ; jmp qword ptr [rcx]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fb05 : je 0x1faa6 ; jmp 0x1facf
0x0000000000021857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000024ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a698 : je 0x2a6a3 ; pop rbx ; ret
0x000000000002a693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x000000000002b025 : je 0x2b02b ; call rax
0x000000000002b396 : je 0x2b39c ; call rcx
0x000000000002c37b : je 0x2c381 ; call rax
0x00000000000331ae : je 0x331d9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000334fe : je 0x3352d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x0000000000034c5d : je 0x34c4c ; ret
0x0000000000034f55 : je 0x34f7f ; call 0xffffffffe28511e9
0x0000000000035046 : je 0x34fef ; ret
0x0000000000038380 : je 0x383ad ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000062913 : je 0x628a0 ; ret 0x348
0x000000000006ac46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006b45a : je 0x6b463 ; ret
0x000000000006d82e : je 0x6d83d ; mov eax, edx ; pop rbx ; ret
0x000000000006db93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e0d8 : je 0x6e102 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006ee75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f58c : je 0x6f59e ; mov eax, esi ; syscall
0x000000000006f778 : je 0x6f7a3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fdc3 : je 0x6fdd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070107 : je 0x70115 ; mov eax, edx ; pop rbx ; ret
0x00000000000704f7 : je 0x70505 ; mov eax, esi ; pop rbx ; ret
0x0000000000070679 : je 0x70685 ; mov eax, esi ; pop rbx ; ret
0x0000000000070833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070a76 : je 0x70a88 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070fed : je 0x70ffe ; mov eax, r8d ; pop rbx ; ret
0x0000000000071190 : je 0x711a5 ; mov eax, edx ; pop rbx ; ret
0x0000000000071327 : je 0x71335 ; mov eax, edx ; pop rbx ; ret
0x0000000000071cc6 : je 0x71d16 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000071cc5 : je 0x71d17 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000072aac : je 0x72ab2 ; ret
0x0000000000072ada : je 0x72b3c ; pop rbp ; pop r12 ; ret
0x0000000000072b7f : je 0x72be1 ; pop rbp ; pop r12 ; ret
0x0000000000072cbd : je 0x72cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072d01 : je 0x72d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000073238 : je 0x73247 ; mov eax, 0xffffffff ; ret
0x0000000000075b85 : je 0x75b95 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f8a : je 0x75f95 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ae : je 0x760bd ; mov eax, esi ; pop rbx ; ret
0x00000000000761f0 : je 0x76205 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d5 : je 0x764e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e7a : je 0x76e85 ; mov eax, edx ; pop rbx ; ret
0x00000000000774fb : je 0x7750d ; mov dword ptr [rdi], edx ; ret
0x000000000007781c : je 0x7782f ; mov eax, 0xffffffff ; ret
0x0000000000077b9c : je 0x77baf ; mov eax, 0xffffffff ; ret
0x0000000000078086 : je 0x78095 ; mov eax, edx ; pop rbx ; ret
0x000000000007841b : je 0x783c1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007848f : je 0x7849b ; pop rbx ; ret
0x00000000000791a4 : je 0x791e0 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000007b2b3 : je 0x7b26d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b403 : je 0x7b3bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b565 : je 0x7b572 ; ret
0x000000000007b597 : je 0x7b5a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf7a : je 0x7bf85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007d9bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x000000000007df86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e074 : je 0x7e07a ; call rax
0x000000000007eed7 : je 0x7eee4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080f7e : je 0x80fad ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000000845e2 : je 0x8460b ; call rax
0x0000000000084fb2 : je 0x84fde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000008556b : je 0x85571 ; call rax
0x0000000000086fd0 : je 0x86f5d ; retf 0x4c89
0x0000000000086fcf : je 0x86f5e ; retf 0x4c89
0x0000000000087609 : je 0x87612 ; ret
0x00000000000878a2 : je 0x878b7 ; mov eax, 0x16 ; ret
0x00000000000879ce : je 0x87b59 ; mov rsi, r14 ; call rax
0x0000000000088375 : je 0x88375 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000088f28 : je 0x88f32 ; ret
0x00000000000898ab : je 0x898bd ; lea rax, [rip + 0x1777c] ; ret
0x0000000000089a98 : je 0x89aaa ; lea rax, [rip + 0xe6dff] ; ret
0x000000000008b18b : je 0x8b19d ; lea rax, [rip + 0xda48c] ; ret
0x000000000008b298 : je 0x8b2aa ; lea rax, [rip + 0xbf34f] ; ret
0x000000000008b415 : je 0x8b43d ; movsx eax, dl ; ret
0x000000000008b522 : je 0x8b536 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b754 : je 0x8b75f ; bsf eax, edx ; ret
0x000000000008b7fd : je 0x8b816 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f6 ; bsf rax, rdx ; ret
0x000000000008bb0b : je 0x8bb1d ; lea rax, [rip + 0x1713c] ; ret
0x000000000008d3eb : je 0x8d3fd ; lea rax, [rip + 0xd99dc] ; ret
0x000000000008d708 : je 0x8d71a ; lea rax, [rip + 0xbd01f] ; ret
0x000000000008da98 : je 0x8daaa ; lea rax, [rip + 0xbcdbf] ; ret
0x000000000008df0b : je 0x8df36 ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000008ea5c : je 0x8eab3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ebd5 : je 0x8ebe8 ; lea rax, [rip + 0xdf852] ; ret
0x000000000008f1e7 : je 0x8f1f9 ; lea rax, [rip + 0x1b330] ; ret
0x000000000008f34d : je 0x8f360 ; lea rax, [rip + 0x10e4a] ; ret
0x000000000008f38e : je 0x8f3a0 ; lea rax, [rip + 0xbeea9] ; ret
0x000000000008f87b : je 0x8f88d ; lea rax, [rip + 0xda0cc] ; ret
0x000000000008f99b : je 0x8f9ad ; lea rax, [rip + 0xdb7bc] ; ret
0x000000000009440d : je 0x94420 ; lea rax, [rip + 0xb63a] ; ret
0x0000000000094428 : je 0x9442d ; ret
0x0000000000094450 : je 0x94462 ; lea rax, [rip + 0xbcb47] ; ret
0x0000000000095cfa : je 0x95d0e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000966ea : je 0x96741 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000967a1 : je 0x967b9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000096c74 : je 0x96c87 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ebba : je 0x9ebb3 ; ret
0x000000000009ebde : je 0x9ebd3 ; ret
0x000000000009ebda : je 0x9ebd7 ; cmp ecx, esi ; je 0x9ebd7 ; ret
0x000000000009ec2f : je 0x9ec13 ; ret
0x000000000009f1ac : je 0x9f188 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a6059 : je 0xa60aa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76e6 : je 0xa7737 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a93fa : je 0xa944b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000aac0d : je 0xaabd6 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aabe5 : je 0xaabd8 ; movzx eax, cl ; pop rbx ; ret
0x00000000000aac0d : je 0xaabd8 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aad32 : je 0xaad44 ; xor eax, eax ; ret
0x00000000000aad2d : je 0xaad51 ; cmp eax, 2 ; je 0xaad49 ; xor eax, eax ; ret
0x00000000000aad7d : je 0xaad63 ; ret
0x00000000000aadc5 : je 0xaada3 ; ret
0x00000000000abcdf : je 0xabcd1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abf19 : je 0xabf39 ; mov cl, dl ; and cl, 0xf ; je 0xabf49 ; ret
0x00000000000abf20 : je 0xabf42 ; ret
0x00000000000abf35 : je 0xabf56 ; add rax, 2 ; ret
0x00000000000ac566 : je 0xac5d6 ; lea rax, [rdi - 0x10] ; ret
0x00000000000ac81f : je 0xac83c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000ac875 : je 0xac888 ; lea rax, [rip + 0xc31f2] ; ret
0x00000000000aca38 : je 0xac9ed ; mov rax, rbx ; pop rbx ; ret
0x00000000000ad3ae : je 0xad3dd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad666 : je 0xad695 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000ad916 : je 0xad945 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000adac8 : je 0xadad5 ; test edx, edx ; jne 0xadac7 ; ret
0x00000000000b2398 : je 0xb23c6 ; xor byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; retf
0x00000000000bbcf7 : je 0xbbd24 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00000000000bbdac : je 0xbbddb ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bbe75 : je 0xbbea0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000bc266 : je 0xbc295 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000be447 : je 0xbe472 ; cmp byte ptr [rcx + 1], cl ; ret
0x00000000000c3193 : je 0xc31ea ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c7590 : je 0xc75ae ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000c8482 : je 0xc84a0 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x00000000000c964b : je 0xc9651 ; add byte ptr [rax], al ; syscall
0x00000000000cc3a1 : je 0xcc3a7 ; call rax
0x00000000000cc4f2 : je 0xcc4fb ; call rdx
0x00000000000cc583 : je 0xcc58c ; call rax
0x00000000000cdabd : je 0xcdb0c ; mov eax, 0x20 ; ret
0x00000000000cdb79 : je 0xcdba9 ; mov eax, 1 ; ret
0x00000000000cf50c : je 0xcf527 ; call 0x8b724
0x00000000000d3154 : je 0xd3162 ; add dword ptr [rax - 0x77], ecx ; retf 0x894c
0x00000000000d6eef : je 0xd6f19 ; or byte ptr [rcx], ch ; ret
0x00000000000d7300 : je 0xd7299 ; pop rbx ; ret
0x00000000000d7332 : je 0xd72cd ; pop rbx ; ret
0x00000000000d732d : je 0xd72f3 ; and ebx, 8 ; je 0xd72d2 ; pop rbx ; ret
0x00000000000d9272 : je 0xd9281 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000daf61 : je 0xdaf75 ; xor eax, eax ; pop rbx ; ret
0x00000000000dc5d9 : je 0xdc607 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000000e0ff3 : je 0xe102f ; mov rdx, rax ; jmp 0xe0f93
0x00000000000e7034 : je 0xe7063 ; adc byte ptr [rax - 0x75], cl ; jl 0xe7068 ; sub al, ch ; retf 0xf38b
0x00000000000e8498 : je 0xe84d4 ; xor eax, eax ; ret
0x00000000000e84f7 : je 0xe8507 ; mov eax, 2 ; ret
0x00000000000e91b7 : je 0xe91e3 ; enter 0xf41, -0x62 ; ret 0x844
0x00000000000efce5 : je 0xefcc3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f081e : je 0xf0849 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f3fd7 : je 0xf4158 ; call 0x20281
0x00000000000f4214 : je 0xf423f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f5f4a : je 0xf5f53 ; ret
0x00000000000fba60 : je 0xfba7d ; neg eax ; pop rbx ; ret
0x00000000000fcbcf : je 0xfcbf9 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fcc88 : je 0xfccb2 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fd3de : je 0xfd3e5 ; ret
0x00000000000ff253 : je 0xff25e ; mov qword ptr [rax], rdx ; ret
0x00000000000ff322 : je 0xff317 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001003df : jg 0x1003e9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000133042 : jg 0x13308c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133058 ; ret
0x00000000001391a2 : jg 0x1391ec ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b8 ; ret
0x000000000014da70 : jg 0x14daec ; loopne 0x14da41 ; jp 0x14dafd ; jp 0x14da70 ; ret
0x000000000014db1c : jg 0x14db2d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014df60 : jg 0x14dfdc ; loopne 0x14df31 ; jp 0x14dfed ; jp 0x14df60 ; ret
0x000000000014e00c : jg 0x14e01d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e303 : jg 0x14e37f ; loopne 0x14e2d4 ; jp 0x14e390 ; jp 0x14e303 ; ret
0x000000000014e3ac : jg 0x14e3bd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000001531c9 : jg 0x15321c ; ret
0x0000000000153210 : jg 0x153260 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000153215 : jg 0x153268 ; retf
0x000000000015324f : jg 0x15329a ; ret
0x000000000015328f : jg 0x1532da ; retf
0x00000000001533c9 : jg 0x15341c ; ret 0x894c
0x0000000000153410 : jg 0x153460 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000153415 : jg 0x153468 ; retf 0x894c
0x000000000015344f : jg 0x15349a ; ret 0x894c
0x000000000015348b : jg 0x1534d6 ; retf 0x894c
0x0000000000155b99 : jg 0x155bec ; ret
0x0000000000155be0 : jg 0x155c30 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000155be5 : jg 0x155c38 ; retf
0x0000000000155c1f : jg 0x155c6a ; ret
0x0000000000155c5f : jg 0x155caa ; retf
0x0000000000155d99 : jg 0x155dec ; ret 0x894c
0x0000000000155de0 : jg 0x155e30 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000155de5 : jg 0x155e38 ; retf 0x894c
0x0000000000155e1f : jg 0x155e6a ; ret 0x894c
0x0000000000155e5b : jg 0x155ea6 ; retf 0x894c
0x0000000000158569 : jg 0x1585bc ; ret
0x00000000001585b0 : jg 0x158600 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000001585b5 : jg 0x158608 ; retf
0x00000000001585ef : jg 0x15863a ; ret
0x000000000015862f : jg 0x15867a ; retf
0x0000000000158769 : jg 0x1587bc ; ret 0x894c
0x00000000001587b0 : jg 0x158800 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000001587b5 : jg 0x158808 ; retf 0x894c
0x00000000001587ef : jg 0x15883a ; ret 0x894c
0x000000000015882b : jg 0x158876 ; retf 0x894c
0x000000000015ab38 : jg 0x15ab89 ; loope 0x15ab37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abaf : jg 0x15abfa ; ret 0xff2
0x000000000015abc8 : jg 0x15ac19 ; loop 0x15abc7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ac3f : jg 0x15ac8a ; ret
0x000000000015ac58 : jg 0x15aca9 ; jrcxz 0x15ac57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ace8 : jg 0x15ad39 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ad68 : jg 0x15adb9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ade8 : jg 0x15ae39 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ae68 : jg 0x15aeb9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015afc5 : jg 0x15b015 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000015afcf : jg 0x15b01a ; retf 0xff2
0x000000000015b045 : jg 0x15b095 ; mov ebx, 0x46f00ff2 ; retf
0x000000000015b04f : jg 0x15b09a ; retf
0x000000000015b0e8 : jg 0x15b139 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b168 : jg 0x15b1b9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1f8 : jg 0x15b249 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b278 : jg 0x15b2c9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b2ec : jg 0x15b2f7 ; ret
0x000000000015b346 : jg 0x15b359 ; ret
0x000000000015b341 : jg 0x15b391 ; psllq mm1, qword ptr [rdi] ; jg 0x15b35e ; ret
0x000000000015b3b6 : jg 0x15b3c9 ; ret
0x000000000015b426 : jg 0x15b439 ; ret
0x000000000015b421 : jg 0x15b471 ; or eax, 0xf7f0ff3 ; ret
0x000000000015b496 : jg 0x15b4a9 ; ret
0x000000000015b491 : jg 0x15b4e1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b506 : jg 0x15b519 ; ret
0x000000000015b501 : jg 0x15b551 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b576 : jg 0x15b589 ; ret
0x000000000015b571 : jg 0x15b5c1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e6 : jg 0x15b5f9 ; ret
0x000000000015b5e1 : jg 0x15b631 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b656 : jg 0x15b669 ; ret
0x000000000015b651 : jg 0x15b6a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b6c6 : jg 0x15b6d9 ; ret
0x000000000015b736 : jg 0x15b749 ; ret
0x000000000015b7a6 : jg 0x15b7b9 ; ret
0x000000000015b7a1 : jg 0x15b7f1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015b816 : jg 0x15b829 ; ret
0x000000000015b811 : jg 0x15b861 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b886 : jg 0x15b899 ; ret
0x000000000015b881 : jg 0x15b8d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b8f6 : jg 0x15b909 ; ret
0x000000000015b8f1 : jg 0x15b941 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b966 : jg 0x15b979 ; ret
0x000000000015b961 : jg 0x15b9b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d608 : jg 0x15d659 ; loope 0x15d607 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d67f : jg 0x15d6ca ; ret 0xff2
0x000000000015d698 : jg 0x15d6e9 ; loop 0x15d697 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d70f : jg 0x15d75a ; ret
0x000000000015d728 : jg 0x15d779 ; jrcxz 0x15d727 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d7b8 : jg 0x15d809 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d838 : jg 0x15d889 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d8b8 : jg 0x15d909 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d938 : jg 0x15d989 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015da95 : jg 0x15dae5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000015da9f : jg 0x15daea ; retf 0xff2
0x000000000015db15 : jg 0x15db65 ; mov ebx, 0x46f00ff2 ; retf
0x000000000015db1f : jg 0x15db6a ; retf
0x000000000015dbb8 : jg 0x15dc09 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc38 : jg 0x15dc89 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dcc8 : jg 0x15dd19 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd48 : jg 0x15dd99 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ddbc : jg 0x15ddc7 ; ret
0x000000000015de16 : jg 0x15de29 ; ret
0x000000000015de11 : jg 0x15de61 ; psllq mm1, qword ptr [rdi] ; jg 0x15de2e ; ret
0x000000000015de86 : jg 0x15de99 ; ret
0x000000000015def6 : jg 0x15df09 ; ret
0x000000000015def1 : jg 0x15df41 ; or eax, 0xf7f0ff3 ; ret
0x000000000015df66 : jg 0x15df79 ; ret
0x000000000015df61 : jg 0x15dfb1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dfd6 : jg 0x15dfe9 ; ret
0x000000000015dfd1 : jg 0x15e021 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e046 : jg 0x15e059 ; ret
0x000000000015e041 : jg 0x15e091 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e0b6 : jg 0x15e0c9 ; ret
0x000000000015e0b1 : jg 0x15e101 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e126 : jg 0x15e139 ; ret
0x000000000015e121 : jg 0x15e171 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e196 : jg 0x15e1a9 ; ret
0x000000000015e206 : jg 0x15e219 ; ret
0x000000000015e276 : jg 0x15e289 ; ret
0x000000000015e271 : jg 0x15e2c1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015e2e6 : jg 0x15e2f9 ; ret
0x000000000015e2e1 : jg 0x15e331 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e356 : jg 0x15e369 ; ret
0x000000000015e351 : jg 0x15e3a1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e3c6 : jg 0x15e3d9 ; ret
0x000000000015e3c1 : jg 0x15e411 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e436 : jg 0x15e449 ; ret
0x000000000015e431 : jg 0x15e481 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160128 : jg 0x160179 ; loope 0x160127 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016019f : jg 0x1601ea ; ret 0xff2
0x00000000001601b8 : jg 0x160209 ; loop 0x1601b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016022f : jg 0x16027a ; ret
0x0000000000160248 : jg 0x160299 ; jrcxz 0x160247 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001602d8 : jg 0x160329 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160358 : jg 0x1603a9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001603d8 : jg 0x160429 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160458 : jg 0x1604a9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001605b5 : jg 0x160605 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000001605bf : jg 0x16060a ; retf 0xff2
0x0000000000160635 : jg 0x160685 ; mov ebx, 0x46f00ff2 ; retf
0x000000000016063f : jg 0x16068a ; retf
0x00000000001606d8 : jg 0x160729 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160758 : jg 0x1607a9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607e8 : jg 0x160839 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160868 : jg 0x1608b9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001608dc : jg 0x1608e7 ; ret
0x0000000000160936 : jg 0x160949 ; ret
0x0000000000160931 : jg 0x160981 ; psllq mm1, qword ptr [rdi] ; jg 0x16094e ; ret
0x00000000001609a6 : jg 0x1609b9 ; ret
0x0000000000160a16 : jg 0x160a29 ; ret
0x0000000000160a11 : jg 0x160a61 ; or eax, 0xf7f0ff3 ; ret
0x0000000000160a86 : jg 0x160a99 ; ret
0x0000000000160a81 : jg 0x160ad1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160af6 : jg 0x160b09 ; ret
0x0000000000160af1 : jg 0x160b41 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160b66 : jg 0x160b79 ; ret
0x0000000000160b61 : jg 0x160bb1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160bd6 : jg 0x160be9 ; ret
0x0000000000160bd1 : jg 0x160c21 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160c46 : jg 0x160c59 ; ret
0x0000000000160c41 : jg 0x160c91 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160cb6 : jg 0x160cc9 ; ret
0x0000000000160d26 : jg 0x160d39 ; ret
0x0000000000160d96 : jg 0x160da9 ; ret
0x0000000000160d91 : jg 0x160de1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000160e06 : jg 0x160e19 ; ret
0x0000000000160e01 : jg 0x160e51 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e76 : jg 0x160e89 ; ret
0x0000000000160e71 : jg 0x160ec1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160ee6 : jg 0x160ef9 ; ret
0x0000000000160ee1 : jg 0x160f31 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160f56 : jg 0x160f69 ; ret
0x0000000000160f51 : jg 0x160fa1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000172935 : jg 0x172944 ; neg eax ; ret
0x0000000000172a42 : jg 0x172a52 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172ae3 : jg 0x172b34 ; loopne 0x172b38 ; sub eax, edx ; vzeroupper ; ret
0x0000000000194f71 : jg 0x194f74 ; call qword ptr [rax + 0x10fffb80]
0x0000000000196ab1 : jg 0x196a9e ; jmp rsp
0x0000000000196ddd : jg 0x196de5 ; add ah, al ; add ebp, edx ; jmp rsp
0x000000000019b4a9 : jg 0x19b4a7 ; call rsp
0x000000000019e5c1 : jg 0x19e5ae ; jmp rsp
0x00000000001a49b1 : jg 0x1a49a2 ; jmp qword ptr [rbx]
0x00000000001a6889 : jg 0x1a687b ; call qword ptr [rax]
0x0000000000026cff : jg 0x26c8c ; ret 0x5c77
0x00000000000347bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034c5b : jg 0x34c62 ; je 0x34c4e ; ret
0x0000000000035042 : jg 0x3508c ; or eax, esi ; je 0x34ff3 ; ret
0x0000000000035796 : jg 0x3579c ; add byte ptr [rax], al ; syscall
0x000000000003acb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000003a77 : jg 0x3ae4 ; xchg eax, ebp ; retf 0x10bf
0x0000000000047bbb : jg 0x47c29 ; xor eax, eax ; ret
0x0000000000047d7e : jg 0x47c8f ; pop rbx ; ret
0x000000000004a1f4 : jg 0x4a201 ; ret 0x5488
0x0000000000058395 : jg 0x583ae ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000063dfd : jg 0x63d8a ; ret
0x00000000000774f7 : jg 0x77485 ; inc byte ptr [rdx] ; je 0x77511 ; mov dword ptr [rdi], edx ; ret
0x0000000000078342 : jg 0x783bb ; mov eax, 3 ; syscall
0x00000000000791a8 : jg 0x7921e ; xor eax, eax ; syscall
0x000000000008f282 : jg 0x8f2d4 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000008f2e0 : jg 0x8f32c ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000008f427 : jg 0x8f440 ; jne 0x8f417 ; mov rax, rdi ; ret
0x00000000000944e7 : jg 0x944fe ; jne 0x944d5 ; ret
0x00000000000959b8 : jg 0x959a3 ; ret
0x000000000009f92c : jg 0x9f978 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xc875
0x000000000009fb64 : jg 0x9fb75 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fb78 : jg 0x9fb89 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009ffea : jg 0x9ffe6 ; ret
0x00000000000a02b7 : jg 0xa02c8 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a02cb : jg 0xa02dc ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a073d : jg 0xa0739 ; ret
0x00000000000a0a04 : jg 0xa0a15 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a0a18 : jg 0xa0a29 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0e8a : jg 0xa0e86 ; ret
0x00000000000a5e26 : jg 0xa5e31 ; ret
0x00000000000a5e36 : jg 0xa5e44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e4a : jg 0xa5e59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5e69 : jg 0xa5e77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5e79 : jg 0xa5e87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e89 : jg 0xa5e9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5eaa : jg 0xa5eb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5eca : jg 0xa5ed9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5eea : jg 0xa5ef9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5f0a : jg 0xa5f1c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a5f4d : jg 0xa5f5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f6d : jg 0xa5f7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f8b : jg 0xa5f9b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5fab : jg 0xa5fbb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fcb : jg 0xa5fdb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5feb : jg 0xa5ffb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6578 : jg 0xa6583 ; jne 0xa6e38 ; ret
0x00000000000a659c : jg 0xa65a8 ; jne 0xa6e38 ; ret
0x00000000000a65bf : jg 0xa65cc ; jne 0xa6e38 ; ret
0x00000000000a65da : jg 0xa65e8 ; jne 0xa6e38 ; ret
0x00000000000a65fd : jg 0xa660c ; jne 0xa6e38 ; ret
0x00000000000a6622 : jg 0xa6632 ; jne 0xa6e38 ; ret
0x00000000000a6640 : jg 0xa6651 ; jne 0xa6e38 ; ret
0x00000000000a665c : jg 0xa666e ; jne 0xa6e38 ; ret
0x00000000000a667f : jg 0xa6692 ; jne 0xa6e38 ; ret
0x00000000000a66a4 : jg 0xa66b8 ; jne 0xa6e38 ; ret
0x00000000000a66c2 : jg 0xa66d7 ; jne 0xa6e38 ; ret
0x00000000000a66e2 : jg 0xa66f8 ; jne 0xa6e38 ; ret
0x00000000000a6704 : jg 0xa671b ; jne 0xa6e38 ; ret
0x00000000000a6724 : jg 0xa673c ; jne 0xa6e38 ; ret
0x00000000000a6744 : jg 0xa675d ; jne 0xa6e38 ; ret
0x00000000000a675e : jg 0xa6778 ; jne 0xa6e38 ; ret
0x00000000000a6781 : jg 0xa679c ; jne 0xa6e38 ; ret
0x00000000000a67a6 : jg 0xa67c2 ; jne 0xa6e38 ; ret
0x00000000000a67c4 : jg 0xa67e1 ; jne 0xa6e38 ; ret
0x00000000000a67e4 : jg 0xa6802 ; jne 0xa6e38 ; ret
0x00000000000a6807 : jg 0xa6826 ; jne 0xa6e38 ; ret
0x00000000000a6826 : jg 0xa6846 ; jne 0xa6e38 ; ret
0x00000000000a6846 : jg 0xa6867 ; jne 0xa6e38 ; ret
0x00000000000a6866 : jg 0xa6888 ; jne 0xa6e38 ; ret
0x00000000000a6889 : jg 0xa68ac ; jne 0xa6e38 ; ret
0x00000000000a68be : jg 0xa68e2 ; jne 0xa6e38 ; ret
0x00000000000a68ec : jg 0xa6911 ; jne 0xa6e38 ; ret
0x00000000000a691c : jg 0xa6942 ; jne 0xa6e38 ; ret
0x00000000000a6948 : jg 0xa696f ; jne 0xa6e38 ; ret
0x00000000000a6978 : jg 0xa69a0 ; jne 0xa6e38 ; ret
0x00000000000a69a8 : jg 0xa69d1 ; jne 0xa6e38 ; ret
0x00000000000a69d8 : jg 0xa6a02 ; jne 0xa6e38 ; ret
0x00000000000a6af6 : jg 0xa6b01 ; ret
0x00000000000a6b09 : jg 0xa6b17 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a6b1a : jg 0xa6b29 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b39 : jg 0xa6b47 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b49 : jg 0xa6b57 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b5c : jg 0xa6b6d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a6b7a : jg 0xa6b89 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6b9a : jg 0xa6ba9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6bba : jg 0xa6bc9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bdd : jg 0xa6bef ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a6c1d : jg 0xa6c2f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c3d : jg 0xa6c4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c5b : jg 0xa6c6b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6c7b : jg 0xa6c8b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6c9b : jg 0xa6cab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6cbb : jg 0xa6ccb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6df2 : jg 0xa6dfd ; ret
0x00000000000a6f26 : jg 0xa6f5a ; ret
0x00000000000a7496 : jg 0xa74a5 ; lea rax, [rdi + 0xf] ; ret
0x00000000000a74a6 : jg 0xa74b8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000a74d9 : jg 0xa74eb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000a74f9 : jg 0xa750b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000a761f : jg 0xa767f ; or eax, 0x1c478d48 ; ret
0x00000000000a7c1b : jg 0xa7c26 ; jne 0xa8648 ; ret
0x00000000000a7c40 : jg 0xa7c4c ; jne 0xa8648 ; ret
0x00000000000a7c63 : jg 0xa7c70 ; jne 0xa8648 ; ret
0x00000000000a7c7e : jg 0xa7c8c ; jne 0xa8648 ; ret
0x00000000000a7ca1 : jg 0xa7cb0 ; jne 0xa8648 ; ret
0x00000000000a7cc6 : jg 0xa7cd6 ; jne 0xa8648 ; ret
0x00000000000a7ce4 : jg 0xa7cf5 ; jne 0xa8648 ; ret
0x00000000000a7d00 : jg 0xa7d12 ; jne 0xa8648 ; ret
0x00000000000a7d23 : jg 0xa7d36 ; jne 0xa8648 ; ret
0x00000000000a7d48 : jg 0xa7d5c ; jne 0xa8648 ; ret
0x00000000000a7d76 : jg 0xa7d8b ; jne 0xa8648 ; ret
0x00000000000a7d96 : jg 0xa7dac ; jne 0xa8648 ; ret
0x00000000000a7db8 : jg 0xa7dcf ; jne 0xa8648 ; ret
0x00000000000a7de8 : jg 0xa7e00 ; jne 0xa8648 ; ret
0x00000000000a7e18 : jg 0xa7e31 ; jne 0xa8648 ; ret
0x00000000000a7e42 : jg 0xa7e5c ; jne 0xa8648 ; ret
0x00000000000a7e65 : jg 0xa7e80 ; jne 0xa8648 ; ret
0x00000000000a7e8a : jg 0xa7ea6 ; jne 0xa8648 ; ret
0x00000000000a7eb8 : jg 0xa7ed5 ; jne 0xa8648 ; ret
0x00000000000a7ee8 : jg 0xa7f06 ; jne 0xa8648 ; ret
0x00000000000a7f1b : jg 0xa7f3a ; jne 0xa8648 ; ret
0x00000000000a7f4a : jg 0xa7f6a ; jne 0xa8648 ; ret
0x00000000000a7f7a : jg 0xa7f9b ; jne 0xa8648 ; ret
0x00000000000a7faa : jg 0xa7fcc ; jne 0xa8648 ; ret
0x00000000000a7fdd : jg 0xa8000 ; jne 0xa8648 ; ret
0x00000000000a8012 : jg 0xa8036 ; jne 0xa8648 ; ret
0x00000000000a8040 : jg 0xa8065 ; jne 0xa8648 ; ret
0x00000000000a8070 : jg 0xa8096 ; jne 0xa8648 ; ret
0x00000000000a809c : jg 0xa80c3 ; jne 0xa8648 ; ret
0x00000000000a80cc : jg 0xa80f4 ; jne 0xa8648 ; ret
0x00000000000a80fc : jg 0xa8125 ; jne 0xa8648 ; ret
0x00000000000a812c : jg 0xa8156 ; jne 0xa8648 ; ret
0x00000000000a82d6 : jg 0xa82e5 ; lea rax, [rdi + 0x10] ; ret
0x00000000000a82e9 : jg 0xa82fb ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000a8329 : jg 0xa833b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000a8349 : jg 0xa835b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000a846f : jg 0xa84cf ; or eax, 0x1d478d48 ; ret
0x00000000000a8602 : jg 0xa860d ; ret
0x00000000000a8736 : jg 0xa876e ; lea rax, [rdi + 0x40] ; ret
0x00000000000a8735 : jg 0xa87bd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a8f06 : jg 0xa8f11 ; ret
0x00000000000a8f16 : jg 0xa8f24 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8f2a : jg 0xa8f39 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f49 : jg 0xa8f57 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f59 : jg 0xa8f67 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f69 : jg 0xa8f7a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8f8a : jg 0xa8f99 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8faa : jg 0xa8fb9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fca : jg 0xa8fd9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fea : jg 0xa8ffc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a902d : jg 0xa903f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a904d : jg 0xa905f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a906b : jg 0xa907b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a908b : jg 0xa909b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a90ab : jg 0xa90bb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a90cb : jg 0xa90db ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a99d6 : jg 0xa99e1 ; ret
0x00000000000a99e6 : jg 0xa99f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a99fa : jg 0xa9a09 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9a19 : jg 0xa9a27 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a29 : jg 0xa9a37 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a39 : jg 0xa9a4a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9a5a : jg 0xa9a69 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9a7a : jg 0xa9a89 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a9a : jg 0xa9aa9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9aba : jg 0xa9acc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9afd : jg 0xa9b0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9b1d : jg 0xa9b2f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9b3b : jg 0xa9b4b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9b5b : jg 0xa9b6b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9b7b : jg 0xa9b8b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9b9b : jg 0xa9bab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9d46 : jg 0xa9d56 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9f1f : jg 0xa9f80 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f3f : jg 0xa9fa0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9fb6 : jg 0xa9fef ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9fb5 : jg 0xaa03e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000aa5d7 : jg 0xaa5e7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000000aa5cd : jg 0xaa5ed ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aaba0 : jg 0xaabdd ; ret 0x2b77
0x00000000000abc65 : jg 0xabc6d ; neg eax ; ret
0x00000000000beb60 : jg 0xbeb9b ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb79
0x00000000000c7887 : jg 0xc785a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd95c : jg 0xcd962 ; add byte ptr [rax], al ; ret
0x00000000000cd9ab : jg 0xcd9b5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e1ff7 : jg 0xe200c ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000010299b : jge 0x10299f ; call rbx
0x0000000000102ac2 : jge 0x102ac6 ; call rbx
0x0000000000102ad0 : jge 0x102ad4 ; call rbx
0x0000000000102c05 : jge 0x102c09 ; call rbx
0x0000000000102d75 : jge 0x102d79 ; call rbx
0x0000000000102d83 : jge 0x102d87 ; call rbx
0x00000000001031d6 : jge 0x1031a1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000104593 : jge 0x104597 ; call rbx
0x00000000001046bb : jge 0x1046bf ; call rbx
0x00000000001047fe : jge 0x104802 ; call rbx
0x00000000001048ff : jge 0x104903 ; call rbx
0x000000000010491b : jge 0x10491f ; call rbx
0x0000000000105a4e : jge 0x1059ff ; mov eax, 3 ; syscall
0x0000000000105b45 : jge 0x105ae6 ; mov eax, 3 ; syscall
0x0000000000107861 : jge 0x107867 ; add byte ptr [rax], al ; syscall
0x0000000000132e2f : jge 0x132e43 ; call rax
0x0000000000138faf : jge 0x138fc3 ; call rax
0x00000000001396c8 : jge 0x1396dc ; call rax
0x0000000000172b70 : jge 0x172b85 ; call r12
0x000000000018328a : jge 0x18326b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000184bd4 : jge 0x184c45 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000189ff0 : jge 0x189f8b ; cmc ; jmp qword ptr [rbx]
0x0000000000194f6d : jge 0x194f6c ; call qword ptr [rax]
0x0000000000195f1d : jge 0x195f1d ; call qword ptr [rdx]
0x0000000000195f21 : jge 0x195f25 ; call qword ptr [rdx + 0x12fffc7c]
0x000000000019605d : jge 0x19605d ; jmp rax
0x000000000019609d : jge 0x19609d ; call rax
0x00000000000028e6 : jge 0x28e1 ; mov al, 0x1f ; retf
0x0000000000038f6e : jge 0x38f73 ; call r14
0x000000000004727a : jge 0x47281 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000009f08f : jge 0x9f097 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000acb06 : jge 0xacb0b ; call r12
0x000000000000c838 : jge 0xc842 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x00000000000d767a : jge 0xd7653 ; mov edx, eax ; jmp 0xd765c
0x00000000000e35a7 : jge 0xe35cd ; call 0x1f8ac
0x00000000000e35b0 : jge 0xe35de ; call 0x1f8ac
0x00000000000f7842 : jge 0xf7894 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000faed5 : jge 0xfaf07 ; mov r12d, dword ptr fs:[rbx] ; call 0xf78e8
0x00000000000fb0b1 : jge 0xfb0df ; call 0xf7ac4
0x00000000000ff336 : jge 0xff36c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000102e30 : jl 0x102e5e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001073e4 : jl 0x107429 ; je 0x1073ed ; ret
0x0000000000112747 : jl 0x112776 ; and byte ptr [rcx + 0x2b], cl ; je 0x11277b ; xor cl, ch ; retf
0x00000000001159b0 : jl 0x1159de ; or byte ptr [rax + 0xe6], bh ; syscall
0x000000000011938b : jl 0x1193ba ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000128669 : jl 0x128694 ; and byte ptr [rax - 0x77], cl ; ret
0x000000000012cae0 : jl 0x12cb0e ; add al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001336f7 : jl 0x133722 ; or byte ptr [rax + 0x63], cl ; ret
0x000000000017088b : jl 0x170894 ; neg eax ; ret
0x0000000000184dd2 : jl 0x184e31 ; leave ; retf
0x000000000018a7f5 : jl 0x18a7ef ; jmp rdx
0x000000000018a7f9 : jl 0x18a7f3 ; jmp rdx
0x000000000018a7fd : jl 0x18a7f7 ; jmp rdx
0x000000000018a801 : jl 0x18a7fb ; jmp rdx
0x000000000018a80d : jl 0x18a807 ; jmp rax
0x000000000018a815 : jl 0x18a80f ; jmp rdx
0x000000000018a819 : jl 0x18a813 ; jmp rdx
0x000000000018a81d : jl 0x18a817 ; jmp rdx
0x000000000018a821 : jl 0x18a81b ; jmp rdx
0x000000000018a825 : jl 0x18a81f ; jmp rdx
0x000000000018a829 : jl 0x18a823 ; jmp rdx
0x000000000018a82d : jl 0x18a827 ; jmp rdx
0x000000000018a831 : jl 0x18a82b ; jmp rdx
0x000000000018a835 : jl 0x18a82f ; jmp rdx
0x000000000018a839 : jl 0x18a833 ; jmp rdx
0x000000000018a83d : jl 0x18a837 ; jmp rdx
0x000000000018a841 : jl 0x18a83b ; jmp rdx
0x000000000018a845 : jl 0x18a83f ; jmp rdx
0x000000000018a849 : jl 0x18a843 ; jmp rdx
0x000000000018a84d : jl 0x18a84b ; lcall [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000018a855 : jl 0x18a853 ; dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000018a85d : jl 0x18a857 ; jmp rdx
0x000000000018a861 : jl 0x18a85b ; jmp rdx
0x000000000018a865 : jl 0x18a85f ; jmp rdx
0x000000000018a869 : jl 0x18a863 ; jmp rdx
0x000000000018a86d : jl 0x18a867 ; jmp rdx
0x000000000018a871 : jl 0x18a86b ; jmp rdx
0x000000000018a875 : jl 0x18a86f ; jmp rdx
0x000000000018a879 : jl 0x18a873 ; jmp rdx
0x000000000018a87d : jl 0x18a877 ; jmp rdx
0x000000000018a881 : jl 0x18a87b ; jmp rdx
0x000000000018a885 : jl 0x18a87f ; jmp rdx
0x000000000018a891 : jl 0x18a88b ; jmp rdx
0x000000000018a895 : jl 0x18a88f ; jmp rdx
0x000000000018a899 : jl 0x18a893 ; jmp rdx
0x000000000018a89d : jl 0x18a897 ; jmp rdx
0x000000000018a8b5 : jl 0x18a8af ; jmp qword ptr [rdx]
0x000000000018a8b9 : jl 0x18a8b3 ; jmp qword ptr [rdx]
0x000000000018a8bd : jl 0x18a8b7 ; jmp qword ptr [rdx]
0x000000000018a8c1 : jl 0x18a8bb ; jmp qword ptr [rdx]
0x000000000018a8d5 : jl 0x18a8cf ; jmp qword ptr [rdx]
0x000000000018a8d9 : jl 0x18a8d3 ; jmp qword ptr [rdx]
0x000000000018a8dd : jl 0x18a8d7 ; jmp qword ptr [rdx]
0x000000000018a8e1 : jl 0x18a8db ; jmp qword ptr [rdx]
0x000000000018a8e5 : jl 0x18a8df ; jmp qword ptr [rdx]
0x000000000018a8e9 : jl 0x18a8e3 ; jmp qword ptr [rdx]
0x000000000018a8ed : jl 0x18a8e7 ; jmp qword ptr [rdx]
0x000000000018a8f1 : jl 0x18a8eb ; jmp qword ptr [rdx]
0x000000000018a8f5 : jl 0x18a8ef ; jmp qword ptr [rdx]
0x000000000018a8f9 : jl 0x18a8f3 ; jmp qword ptr [rdx]
0x000000000018a8fd : jl 0x18a8f7 ; jmp qword ptr [rdx]
0x000000000018a901 : jl 0x18a8fb ; jmp qword ptr [rdx]
0x000000000018a905 : jl 0x18a8ff ; jmp qword ptr [rdx]
0x000000000018a909 : jl 0x18a903 ; jmp qword ptr [rdx]
0x000000000018a91d : jl 0x18a917 ; jmp qword ptr [rdx]
0x000000000018a921 : jl 0x18a91b ; jmp qword ptr [rdx]
0x000000000018a925 : jl 0x18a91f ; jmp qword ptr [rdx]
0x000000000018a929 : jl 0x18a923 ; jmp qword ptr [rdx]
0x000000000018a92d : jl 0x18a927 ; jmp qword ptr [rdx]
0x000000000018a931 : jl 0x18a92b ; jmp qword ptr [rdx]
0x000000000018a935 : jl 0x18a92f ; jmp qword ptr [rdx]
0x000000000018a939 : jl 0x18a933 ; jmp qword ptr [rdx]
0x000000000018a93d : jl 0x18a937 ; jmp qword ptr [rdx]
0x000000000018a941 : jl 0x18a93b ; jmp qword ptr [rdx]
0x000000000018a945 : jl 0x18a93f ; jmp qword ptr [rdx]
0x000000000018a951 : jl 0x18a94b ; jmp qword ptr [rdx]
0x000000000018a955 : jl 0x18a94f ; jmp qword ptr [rdx]
0x000000000018a959 : jl 0x18a953 ; jmp qword ptr [rdx]
0x000000000018a95d : jl 0x18a957 ; jmp qword ptr [rdx]
0x0000000000194f69 : jl 0x194f6c ; call qword ptr [rax + 0x10fffb7d]
0x0000000000195f25 : jl 0x195f25 ; call qword ptr [rdx]
0x0000000000195f29 : jl 0x195f2d ; call qword ptr [rdx + 0x12fffc7b]
0x0000000000196065 : jl 0x196065 ; jmp rax
0x00000000001960a5 : jl 0x1960a5 ; call rax
0x0000000000198e7c : jl 0x198ee2 ; add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x000000000019a0e4 : jl 0x19a0b1 ; add dword ptr [rax], eax ; test bl, ah ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019ab9c : jl 0x19abb3 ; add al, byte ptr [rax] ; stc ; call rsp
0x000000000019b8c4 : jl 0x19b8d2 ; add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019baac : jl 0x19ba7e ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000019dbb4 : jl 0x19dbdd ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x000000000019e569 : jl 0x19e556 ; jmp qword ptr [rsi]
0x000000000019e599 : jl 0x19e586 ; jmp rsp
0x000000000019ecb4 : jl 0x19ecee ; add byte ptr [rax], al ; clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001a7ed0 : jl 0x1a7ed7 ; add byte ptr [rax], al ; pushfq ; ret
0x00000000001ab4b4 : jl 0x1ab4b7 ; add byte ptr [rax], al ; call 0xffffffffcc1aa726
0x00000000001adbb4 : jl 0x1adbdd ; add dword ptr [rax], eax ; pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b2bb4 : jl 0x1b2c2d ; add dword ptr [rax], eax ; call 0x271b24dc
0x00000000001b85d0 : jl 0x1b85d7 ; add byte ptr [rax], al ; pushfq ; retf 1
0x00000000001bc1b4 : jl 0x1bc1c3 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x0000000000024366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002510f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000025e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x0000000000025f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026869 : jl 0x26892 ; call rbx
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002a278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000003401c : jl 0x3404a ; or byte ptr [rax + 2], bh ; syscall
0x000000000003caee : jl 0x3cb19 ; or byte ptr [rax], al ; jne 0x3cac3 ; jmp 0x3cacb
0x000000000003fdde : jl 0x3fe09 ; adc byte ptr [rax], al ; jne 0x3fdb3 ; jmp 0x3fdbb
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00000000000517b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000053380 : jl 0x533ab ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x0000000000072a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007a78b : jl 0x7a7d6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000879d0 : jl 0x879da ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00000000000898b0 : jl 0x8992d ; add dword ptr [rax], eax ; ret
0x0000000000095125 : jl 0x95150 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x000000000009f11a : jl 0x9f185 ; add rax, rdi ; ret
0x000000000009f12a : jl 0x9f187 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000009f14a : jl 0x9f187 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000009f16a : jl 0x9f187 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000009fae4 : jl 0x9fb33 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fb20 : jl 0x9fb6f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fd1e : jl 0x9fd6d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe85 : jl 0x9fed4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009ffe7 : jl 0xa0036 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0237 : jl 0xa0286 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0273 : jl 0xa02c2 ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0471 : jl 0xa04c0 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a05d8 : jl 0xa0627 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a073a : jl 0xa0789 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0984 : jl 0xa09d3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a09c0 : jl 0xa0a0f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0bbe : jl 0xa0c0d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0d25 : jl 0xa0d74 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0e87 : jl 0xa0ed6 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000aa58c : jl 0xaa5db ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5ad : jl 0xaa5fc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5c0 : jl 0xaa60f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa695 : jl 0xaa6e4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa6ed : jl 0xaa73c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa78a : jl 0xaa7d9 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000c0200 : jl 0xc0257 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c45e9 : jl 0xc4614 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c92b0 : jl 0xc92de ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000cd4b1 : jl 0xcd4b7 ; add byte ptr [rax], al ; syscall
0x00000000000daed1 : jl 0xdaeff ; sbb byte ptr [rcx - 0x17fbdbbc], cl ; retf
0x00000000000df9a9 : jl 0xdf9d7 ; jo 0xdf942 ; add dword ptr [rax + 0x63], ecx ; retf 0x8941
0x00000000000e1c99 : jl 0xe1cc5 ; add rax, rdx ; jmp rax
0x00000000000e31b0 : jl 0xe31db ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e3ec7 : jl 0xe3ef6 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000e7039 : jl 0xe7063 ; sub al, ch ; retf 0xf38b
0x00000000000f360f : jl 0xf363a ; and al, ch ; xchg eax, ecx ; ret 0xfff2
0x00000000000f4395 : jl 0xf43c0 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f7674 : jl 0xf76a1 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f7e79 : jl 0xf7ea7 ; or byte ptr [rax + 0x101], bh ; syscall
0x00000000000f7efc : jl 0xf7f2a ; or byte ptr [rax + 3], bh ; syscall
0x00000000000fb16f : jl 0xfb177 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x0000000000107891 : jle 0x107897 ; add byte ptr [rax], al ; syscall
0x0000000000137cc8 : jle 0x137ce0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014a716 : jle 0x14a631 ; movsxd rax, ecx ; ret
0x000000000014a95a : jle 0x14a89b ; ret
0x0000000000183282 : jle 0x18321b ; xlatb ; retf 0xa1eb
0x0000000000184e45 : jle 0x184e80 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000001887a1 : jle 0x188798 ; jmp rdi
0x000000000018a851 : jle 0x18a84b ; jmp rdx
0x000000000018a859 : jle 0x18a853 ; jmp rdx
0x000000000018a858 : jle 0x18a854 ; jmp rdx
0x0000000000195f15 : jle 0x195f15 ; jmp qword ptr [rdx]
0x0000000000195f19 : jle 0x195f1d ; call qword ptr [rdx + 0x12fffc7d]
0x0000000000196095 : jle 0x196095 ; jmp rax
0x0000000000196d9d : jle 0x196da5 ; add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x00000000001a6831 : jle 0x1a6823 ; jmp qword ptr [rcx]
0x00000000001a7951 : jle 0x1a7944 ; call qword ptr [rdi]
0x00000000001aca01 : jle 0x1aca0f ; ret
0x000000000002a6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000003505 : jle 0x3539 ; retf 0x8792
0x000000000005c4f6 : jle 0x5c577 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000000684ec : jle 0x68479 ; ret
0x000000000008b79e : jle 0x8b7a8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b9f3e : jle 0xb9f5d ; add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000cd1fd : jle 0xcd20b ; ret
0x00000000000cda09 : jle 0xcda0f ; add byte ptr [rax], al ; ret
0x00000000000d7575 : jle 0xd7bc8 ; movsxd rcx, edx ; jmp 0xd758f
0x0000000000101e62 : jmp 0x101e28
0x000000000010e750 : jmp 0x10e716
0x0000000000112b99 : jmp 0x112b5f
0x000000000011f3be : jmp 0x11f38c
0x00000000001322bf : jmp 0x132285
0x0000000000135037 : jmp 0x135005
0x0000000000135a57 : jmp 0x135a25
0x000000000013afd5 : jmp 0x13afa3
0x00000000001436a2 : jmp 0x143670
0x0000000000143bf1 : jmp 0x143bbf
0x000000000016e8d8 : jmp 0x16e8a6
0x000000000016e956 : jmp 0x16e924
0x000000000016ede8 : jmp 0x16edb6
0x000000000016ee66 : jmp 0x16ee34
0x000000000016ff08 : jmp 0x16fed6
0x000000000016ff86 : jmp 0x16ff54
0x0000000000170418 : jmp 0x1703e6
0x0000000000170496 : jmp 0x170464
0x0000000000184e49 : jmp 0x184e17
0x0000000000185396 : jmp 0x185364
0x000000000019d9da : jmp 0x1b9ce0
0x000000000019d9d9 : jmp 0x1b9ce1
0x0000000000102da6 : jmp 0x1f8aa
0x000000000001fb07 : jmp 0x1facd
0x0000000000020225 : jmp 0x201f3
0x0000000000025203 : jmp 0x251d1
0x0000000000027ac7 : jmp 0x27a95
0x0000000000002bf3 : jmp 0x2bc1
0x00000000000038b3 : jmp 0x3879
0x00000000000038b7 : jmp 0x3885
0x000000000003dceb : jmp 0x3dcb9
0x0000000000040fdb : jmp 0x40fa9
0x0000000000041051 : jmp 0x4101f
0x000000000009a60f : jmp 0x440b6899
0x00000000000447ab : jmp 0x44779
0x0000000000045b25 : jmp 0x45af3
0x0000000000133bd2 : jmp 0x48d2fe62
0x0000000000049151 : jmp 0x4911f
0x0000000000049831 : jmp 0x497ff
0x000000000005f811 : jmp 0x5baf2
0x000000000005fde7 : jmp 0x5c803
0x0000000000060852 : jmp 0x5ca99
0x00000000000633d5 : jmp 0x5fe74
0x0000000000062579 : jmp 0x62547
0x0000000000067498 : jmp 0x636fe
0x000000000006499f : jmp 0x6496d
0x0000000000069613 : jmp 0x6585f
0x000000000006902d : jmp 0x65b0b
0x00000000000694c0 : jmp 0x65fbb
0x0000000000069543 : jmp 0x65fc5
0x0000000000069f5b : jmp 0x661e6
0x000000000006a140 : jmp 0x66b79
0x0000000000069152 : jmp 0x69120
0x0000000000072feb : jmp 0x72fb1
0x0000000000072fea : jmp 0x72fb2
0x00000000000762f4 : jmp 0x762c2
0x0000000000089b54 : jmp 0x89b1a
0x00000000001179d9 : jmp 0x94472
0x00000000000967fc : jmp 0x967c2
0x000000000009c254 : jmp 0x98ce9
0x00000000000aa32e : jmp 0xaa2f4
0x00000000000aa3ff : jmp 0xaa3c5
0x00000000000aa46e : jmp 0xaa434
0x00000000000bf715 : jmp 0xbb943
0x00000000000c84c0 : jmp 0xc8486
0x00000000000d7cab : jmp 0xd7c71
0x00000000000abb73 : jmp 0xffffffffc30abb7c
0x0000000000048a91 : jmp 0xffffffffc31413e6
0x0000000000099d43 : jmp 0xffffffffc332e64d
0x0000000000061e73 : jmp 0xffffffffcb3f6a7d
0x0000000000082ede : jmp 0xffffffffcb4176e8
0x000000000008304f : jmp 0xffffffffcb417859
0x0000000000083bd5 : jmp 0xffffffffcb4183df
0x00000000000bb443 : jmp 0xffffffffcb94fc4d
0x00000000000fe5bb : jmp qword ptr [r8]
0x0000000000195b53 : jmp qword ptr [rax + 0x20fffc58]
0x0000000000187dff : jmp qword ptr [rax - 0x2f000e15]
0x000000000004606e : jmp qword ptr [rax]
0x000000000019a11b : jmp qword ptr [rbx + rax*8]
0x000000000019a2db : jmp qword ptr [rbx + rcx*8]
0x0000000000002563 : jmp qword ptr [rbx]
0x0000000000181dcb : jmp qword ptr [rcx]
0x000000000019b65b : jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x00000000000f4893 : jmp qword ptr [rdi]
0x0000000000196443 : jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195f13 : jmp qword ptr [rdx + 0x22fffc7e]
0x000000000006ab58 : jmp qword ptr [rdx]
0x0000000000189583 : jmp qword ptr [rsi]
0x0000000000001b62 : jmp r10
0x0000000000150fbd : jmp r9
0x0000000000020b91 : jmp rax
0x0000000000189267 : jmp rbx
0x000000000002be4a : jmp rcx
0x000000000006caa4 : jmp rdi
0x0000000000001b63 : jmp rdx
0x000000000002e8f4 : jmp rsi
0x0000000000002a71 : jmp rsp
0x00000000001017a7 : jne 0x1017c0 ; mov eax, 0x1a ; syscall
0x0000000000101f37 : jne 0x101f7a ; sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103148 : jne 0x103130 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001056b5 : jne 0x1056ef ; mov eax, 0x88 ; syscall
0x0000000000105d3a : jne 0x105d38 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105daa : jne 0x105da8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000107400 : jne 0x107410 ; mov eax, 0x27 ; syscall
0x0000000000107f87 : jne 0x107fa0 ; mov eax, 0x130 ; syscall
0x0000000000108097 : jne 0x1080b0 ; mov eax, 0x2b ; syscall
0x0000000000108127 : jne 0x108140 ; mov eax, 0x2a ; syscall
0x0000000000108367 : jne 0x108380 ; mov eax, 0x2f ; syscall
0x0000000000108487 : jne 0x1084a0 ; mov eax, 0x2e ; syscall
0x0000000000112d2e : jne 0x112d67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114a45 : jne 0x114a59 ; cmp qword ptr [rdi], 0 ; je 0x114a61 ; ret
0x0000000000114ab8 : jne 0x114ac7 ; mov eax, 1 ; ret
0x0000000000114ae8 : jne 0x114af4 ; xor eax, eax ; ret
0x0000000000114b18 : jne 0x114b24 ; xor eax, eax ; ret
0x0000000000114b48 : jne 0x114b54 ; xor eax, eax ; ret
0x0000000000114b78 : jne 0x114b84 ; xor eax, eax ; ret
0x0000000000114ba8 : jne 0x114bb4 ; xor eax, eax ; ret
0x0000000000114bd8 : jne 0x114be4 ; xor eax, eax ; ret
0x0000000000114c08 : jne 0x114c14 ; xor eax, eax ; ret
0x0000000000114c38 : jne 0x114c44 ; xor eax, eax ; ret
0x0000000000114c68 : jne 0x114c74 ; xor eax, eax ; ret
0x0000000000114c98 : jne 0x114ca4 ; xor eax, eax ; ret
0x0000000000114cc8 : jne 0x114cd4 ; xor eax, eax ; ret
0x0000000000114cf8 : jne 0x114d04 ; xor eax, eax ; ret
0x0000000000114d28 : jne 0x114d34 ; xor eax, eax ; ret
0x0000000000114d58 : jne 0x114d64 ; xor eax, eax ; ret
0x0000000000114d88 : jne 0x114d94 ; xor eax, eax ; ret
0x0000000000114db8 : jne 0x114dc4 ; xor eax, eax ; ret
0x0000000000114de8 : jne 0x114df4 ; xor eax, eax ; ret
0x0000000000114e18 : jne 0x114e24 ; xor eax, eax ; ret
0x0000000000114e48 : jne 0x114e54 ; xor eax, eax ; ret
0x0000000000114e78 : jne 0x114e84 ; xor eax, eax ; ret
0x0000000000114ed8 : jne 0x114ee4 ; xor eax, eax ; ret
0x0000000000114f08 : jne 0x114f14 ; xor eax, eax ; ret
0x0000000000114f38 : jne 0x114f44 ; xor eax, eax ; ret
0x0000000000114f68 : jne 0x114f74 ; xor eax, eax ; ret
0x0000000000114f98 : jne 0x114fa4 ; xor eax, eax ; ret
0x0000000000114fc8 : jne 0x114fd4 ; xor eax, eax ; ret
0x0000000000114ff8 : jne 0x115004 ; xor eax, eax ; ret
0x0000000000115028 : jne 0x115034 ; xor eax, eax ; ret
0x0000000000115058 : jne 0x115064 ; xor eax, eax ; ret
0x00000000001150a2 : jne 0x115099 ; pop rdx ; pop r10 ; ret
0x0000000000115092 : jne 0x1150a4 ; nop ; mov eax, 0xca ; syscall
0x0000000000115195 : jne 0x1151a3 ; ret
0x00000000001153a4 : jne 0x115383 ; ret
0x00000000001153df : jne 0x1153d7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000115537 : jne 0x1154d7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001158cc : jne 0x1158f1 ; xor edi, edi ; mov eax, 0xe3 ; syscall
0x0000000000115b44 : jne 0x115b2f ; lea rdi, [rip - 0x16d] ; call rax
0x0000000000115b73 : jne 0x115b6c ; xor eax, eax ; leave ; ret
0x0000000000116574 : jne 0x11651e ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001178ea : jne 0x117900 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117bb6 : jne 0x117b6a ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011ce5f : jne 0x11ce2c ; jmp 0x11cdf9
0x000000000011fd83 : jne 0x11fd73 ; pop rbx ; ret
0x00000000001235bc : jne 0x123597 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000123de4 : jne 0x123e34 ; mov eax, r8d ; ret
0x000000000012668d : jne 0x1265da ; ret
0x000000000012877c : jne 0x128782 ; ret
0x00000000001287bc : jne 0x1287b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d8ed : jne 0x12d938 ; mov dword ptr [rsi], 0 ; ret
0x000000000012e1a5 : jne 0x12e1b8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012e2ad : jne 0x12e247 ; xor eax, eax ; pop rbx ; ret
0x0000000000133048 : jne 0x133052 ; ret
0x0000000000138f27 : jne 0x138f13 ; pop rbx ; ret
0x00000000001391a8 : jne 0x1391b2 ; ret
0x000000000013aaa3 : jne 0x13aa9a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013afd3 : jne 0x13af9d ; jmp 0x13afa5
0x000000000013c482 : jne 0x13c497 ; mov eax, 1 ; ret
0x000000000013c4c2 : jne 0x13c4d7 ; mov eax, 1 ; ret
0x0000000000140eac : jne 0x140ebd ; xor eax, eax ; pop rbx ; ret
0x000000000014368b : jne 0x14366e ; add rsp, 0x48 ; ret
0x000000000014366d : jne 0x1436a0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143735 : jne 0x143748 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001437a8 : jne 0x1437c6 ; add rsp, 0x38 ; ret
0x00000000001443b8 : jne 0x1443c4 ; xor eax, eax ; ret
0x00000000001443e8 : jne 0x1443f4 ; xor eax, eax ; ret
0x0000000000144418 : jne 0x144424 ; xor eax, eax ; ret
0x0000000000144448 : jne 0x144454 ; xor eax, eax ; ret
0x0000000000144478 : jne 0x144484 ; xor eax, eax ; ret
0x00000000001444a8 : jne 0x1444b4 ; xor eax, eax ; ret
0x00000000001444df : jne 0x1444fe ; mov eax, 0x27 ; syscall
0x0000000000168871 : jne 0x168e26 ; ret
0x000000000016fa0d : jne 0x16fa37 ; xor eax, eax ; ret
0x000000000016f001 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f029 : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000017084d : jne 0x170877 ; xor eax, eax ; ret
0x0000000000170631 : jne 0x17087b ; xor eax, eax ; ret
0x0000000000170881 : jne 0x17088a ; xor eax, eax ; ret
0x0000000000170657 : jne 0x17088e ; xor eax, eax ; ret
0x0000000000170995 : jne 0x170926 ; lea rax, [rdi + 3] ; ret
0x0000000000170967 : jne 0x170926 ; lea rax, [rdi + 7] ; ret
0x0000000000170966 : jne 0x170927 ; lea rax, [rdi + 7] ; ret
0x00000000001720f4 : jne 0x172308 ; xor eax, eax ; ret
0x00000000001722f9 : jne 0x172319 ; xor eax, eax ; ret
0x00000000001721a1 : jne 0x17231d ; xor eax, eax ; ret
0x0000000000172311 : jne 0x17231e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000172926 : jne 0x172934 ; xor eax, eax ; ret
0x00000000001727fd : jne 0x172936 ; ret
0x0000000000172db7 : jne 0x172da7 ; mov rdi, r14 ; call 0x1f8af
0x00000000001735ef : jne 0x1735df ; mov rdi, r14 ; call 0x1f8af
0x00000000001740ed : jne 0x1740de ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174140 : jne 0x174120 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017427d : jne 0x17426d ; pop rbx ; ret
0x0000000000174325 : jne 0x17430b ; pop rbx ; ret
0x0000000000174498 : jne 0x1744a3 ; ret
0x0000000000174579 : jne 0x17456c ; pop rbx ; ret
0x00000000001832f7 : jne 0x1832c1 ; mov ecx, 0x5b92ac50 ; retf
0x000000000018528b : jne 0x1852b2 ; retf 0x32dd
0x0000000000199255 : jne 0x19925e ; add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x000000000019e221 : jne 0x19e20e ; jmp qword ptr [rcx]
0x000000000019e220 : jne 0x19e20f ; jmp qword ptr [rcx]
0x00000000001a7621 : jne 0x1a7614 ; jmp qword ptr [rax]
0x00000000001bc3fd : jne 0x1bc406 ; retf
0x00000000001bc673 : jne 0x1bc67c ; retf
0x0000000000033bd4 : jne 0x33bb2 ; ret
0x0000000000034ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x0000000000034e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x0000000000035308 : jne 0x35313 ; ret
0x0000000000035405 : jne 0x3543f ; mov eax, 0xba ; syscall
0x0000000000003503 : jne 0x356c ; jle 0x353b ; retf 0x8792
0x0000000000003796 : jne 0x3774 ; ret 0x975
0x000000000003a61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a6cb : jne 0x3a6d3 ; pop rbx ; ret
0x000000000003caf2 : jne 0x3cabf ; jmp 0x3cac7
0x000000000003fde2 : jne 0x3fdaf ; jmp 0x3fdb7
0x0000000000047058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x0000000000048061 : jne 0x48047 ; mov eax, 1 ; ret
0x0000000000048087 : jne 0x4807c ; xor eax, eax ; ret
0x00000000000481f9 : jne 0x481df ; mov eax, 1 ; ret
0x000000000004821f : jne 0x48214 ; xor eax, eax ; ret
0x00000000000484c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x0000000000048b7f : jne 0x48b76 ; mov rax, rdx ; ret
0x000000000004a6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x000000000004a775 : jne 0x4a755 ; mov rax, rsi ; ret
0x000000000006acc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000071c01 : jne 0x71bf3 ; ret
0x000000000007469c : jne 0x746a3 ; pop rbx ; ret
0x0000000000078160 : jne 0x78176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a395 : jne 0x7a3a2 ; ret
0x000000000007af41 : jne 0x7af33 ; ret
0x000000000007bc61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bfd2 : jne 0x7bfbd ; pop rbx ; ret
0x000000000007c00c : jne 0x7c005 ; lea eax, [rdx + rdi] ; ret
0x000000000007c846 : jne 0x7c83b ; ret
0x000000000007d8bf : jne 0x7d891 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007d8d7 : jne 0x7d908 ; xor edi, edi ; call qword ptr [r15]
0x0000000000083f8c : jne 0x83f53 ; ret
0x000000000008873f : jne 0x886f5 ; xor eax, eax ; pop rbx ; ret
0x00000000000895d1 : jne 0x895c3 ; ret
0x000000000008967b : jne 0x89673 ; ret
0x0000000000089cfb : jne 0x89d0d ; lea rax, [rip + 0xc] ; ret
0x000000000008b8c3 : jne 0x8b8ce ; xor rax, rax ; ret
0x000000000008bb57 : jne 0x8bb69 ; lea rax, [rip + 0x10] ; ret
0x000000000008d80e : jne 0x8d7d4 ; add rsp, 8 ; ret
0x000000000008d831 : jne 0x8d846 ; add rsp, 8 ; ret
0x000000000008eb19 : jne 0x8eb75 ; xor rax, rax ; ret
0x000000000008ead9 : jne 0x8eb99 ; xor rax, rax ; ret
0x000000000008ebc1 : jne 0x8ebd4 ; lea rax, [rip + 0x26] ; ret
0x000000000008f2ea : jne 0x8f2d3 ; ret
0x000000000008f4d3 : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f429 : jne 0x8f415 ; mov rax, rdi ; ret
0x000000000008f9e7 : jne 0x8f9f9 ; lea rax, [rip + 0x80] ; ret
0x000000000008fa4a : jne 0x8fa5c ; lea rax, [rip + 0xd] ; ret
0x0000000000091cd7 : jne 0x91ce9 ; lea rax, [rip + 0x80] ; ret
0x0000000000091d3a : jne 0x91d4c ; lea rax, [rip + 0xd] ; ret
0x000000000009443c : jne 0x9444f ; lea rax, [rip + 0xb3db] ; ret
0x00000000000945a8 : jne 0x94480 ; ret
0x00000000000944e9 : jne 0x944d3 ; ret
0x0000000000096a46 : jne 0x96a31 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097385 : jne 0x9737d ; xor eax, eax ; pop rbx ; ret
0x0000000000097357 : jne 0x9738d ; mov rax, rdi ; pop rbx ; ret
0x000000000009742d : jne 0x97424 ; xor eax, eax ; ret
0x000000000009751d : jne 0x97514 ; pop rbx ; pop rbp ; ret
0x000000000009eae6 : jne 0x9eadb ; ret
0x000000000009eb2a : jne 0x9eb1b ; ret
0x000000000009eb84 : jne 0x9eb63 ; ret
0x000000000009ec2a : jne 0x9ec18 ; cmp r8d, ecx ; je 0x9ec18 ; ret
0x000000000009ec69 : jne 0x9ec5c ; xor eax, eax ; ret
0x000000000009ecc2 : jne 0x9eca4 ; xor eax, eax ; ret
0x000000000009ed22 : jne 0x9ed15 ; mov qword ptr [rdx], rcx ; ret
0x000000000009eddb : jne 0x9edd0 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee59 : jne 0x9ee41 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009f08d : jne 0x9f118 ; xor eax, eax ; ret
0x000000000009f0ca : jne 0x9f144 ; xor eax, eax ; ret
0x000000000009f80c : jne 0x9f7f6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a657a : jne 0xa6e36 ; ret
0x00000000000a7c1d : jne 0xa8646 ; ret
0x00000000000aa161 : jne 0xaa152 ; ret
0x00000000000aa211 : jne 0xaa202 ; ret
0x00000000000aa381 : jne 0xaa376 ; lea rax, [rcx - 1] ; ret
0x00000000000aa4d1 : jne 0xaa4c6 ; sub rax, 1 ; ret
0x00000000000aae17 : jne 0xaae0b ; ret
0x00000000000abbe6 : jne 0xabc62 ; ret
0x00000000000abb0f : jne 0xabc66 ; ret
0x00000000000abaee : jne 0xabc68 ; xor eax, eax ; ret
0x00000000000abc91 : jne 0xabca4 ; lea rax, [rip + 0xf596] ; ret
0x00000000000ac053 : jne 0xac01b ; ret
0x00000000000ac096 : jne 0xac089 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ac169 : jne 0xac155 ; xor eax, eax ; ret
0x00000000000ac54b : jne 0xac5a6 ; lea rax, [rdi - 0x10] ; ret
0x00000000000ac623 : jne 0xac5f3 ; ret
0x00000000000ac60d : jne 0xac603 ; ret
0x00000000000ac6dc : jne 0xac6d4 ; xor eax, eax ; ret
0x00000000000ac738 : jne 0xac716 ; mov rax, rdi ; ret
0x00000000000ac861 : jne 0xac874 ; lea rax, [rip + 0xe916] ; ret
0x00000000000ac915 : jne 0xac922 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ac953 : jne 0xac94b ; ret
0x00000000000ada8b : jne 0xada46 ; mov rax, rdx ; ret
0x00000000000adacc : jne 0xadac3 ; ret
0x00000000000bb223 : jne 0xbb200 ; ret
0x00000000000bb254 : jne 0xbb24b ; ret
0x00000000000bfe19 : jne 0xbfe31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000c9648 : jne 0xc967f ; mov eax, 0x74 ; syscall
0x00000000000cc287 : jne 0xcc2a0 ; mov eax, 0x22 ; syscall
0x00000000000cc2e7 : jne 0xcc300 ; mov eax, 0x23 ; syscall
0x00000000000cd214 : jne 0xcd208 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000000cd2b8 : jne 0xcd2f1 ; mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000cd328 : jne 0xcd361 ; mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000cd581 : jne 0xcd587 ; add byte ptr [rax], al ; syscall
0x00000000000cd991 : jne 0xcd95e ; ret
0x00000000000cd9d7 : jne 0xcd962 ; mov eax, 0x7d00 ; ret
0x00000000000cda99 : jne 0xcdac2 ; ret
0x00000000000cdb03 : jne 0xcdac6 ; mov eax, 0x40 ; ret
0x00000000000cdba0 : jne 0xcdb7f ; xor eax, eax ; ret
0x00000000000cdb9c : jne 0xcdc18 ; add byte ptr [rax], al ; jne 0xcdb83 ; xor eax, eax ; ret
0x00000000000d1600 : jne 0xd15e4 ; ret
0x00000000000d1638 : jne 0xd15fd ; mov eax, 1 ; ret
0x00000000000d1648 : jne 0xd1613 ; mov eax, 1 ; ret
0x00000000000d170e : jne 0xd16cf ; mov eax, 1 ; ret
0x00000000000d1726 : jne 0xd16ec ; mov eax, 1 ; ret
0x00000000000d189e : jne 0xd1890 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d734d : jne 0xd729d ; pop rbx ; ret
0x00000000000d734c : jne 0xd729e ; pop rbx ; ret
0x00000000000d72fa : jne 0xd72f9 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd729f ; pop rbx ; ret
0x00000000000d7ca9 : jne 0xd7c83 ; jmp 0xd7c73
0x00000000000ef91b : jne 0xef909 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f643d : jne 0xf6446 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000f7037 : jne 0xf7050 ; mov eax, 2 ; syscall
0x00000000000f7257 : jne 0xf7270 ; mov eax, 0 ; syscall
0x00000000000f72b7 : jne 0xf72d0 ; mov eax, 1 ; syscall
0x00000000000f7841 : jne 0xf78c9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f78e7 : jne 0xf7900 ; mov eax, 3 ; syscall
0x00000000000f7a37 : jne 0xf7a50 ; mov eax, 0x55 ; syscall
0x00000000000fb0ad : jne 0xfb0c8 ; mov edi, dword ptr [r13 + 0x28] ; call 0xf7ac8
0x00000000000fb727 : jne 0xfb740 ; mov eax, 7 ; syscall
0x00000000000fcf77 : jne 0xfcf90 ; mov eax, 0x13 ; syscall
0x00000000000fcfd7 : jne 0xfcff0 ; mov eax, 0x14 ; syscall
0x00000000000fd28d : jne 0xfd296 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000fd767 : jne 0xfd780 ; mov eax, 0x4a ; syscall
0x00000000000fd7f7 : jne 0xfd810 ; mov eax, 0x4b ; syscall
0x00000000000fe101 : jne 0xfe0d5 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe2c2 : jne 0xfe295 ; xor eax, eax ; pop rbx ; ret
0x00000000000ffd97 : jne 0xffd41 ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000016f2be : jno 0x16f2cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019ccd1 : jno 0x19ccd2 ; jmp qword ptr [rdi]
0x000000000019dfc9 : jno 0x19dfb6 ; call qword ptr [rax]
0x00000000001a0ee6 : jno 0x1a0ef4 ; ret
0x00000000001a2c8d : jno 0x1a2c95 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x00000000001a45a9 : jno 0x1a459a ; call qword ptr [rsi]
0x00000000001b0c09 : jno 0x1b0c02 ; jmp qword ptr [rcx]
0x00000000001b0c39 : jno 0x1b0c32 ; jmp qword ptr [rcx]
0x00000000001b0c51 : jno 0x1b0c4a ; jmp qword ptr [rcx]
0x00000000001b2c45 : jno 0x1b2c4e ; add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c5d : jno 0x1b2c66 ; add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000001ea2 : jno 0x1e7c ; adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000021d7 : jno 0x2224 ; ret 0x1dd4
0x0000000000003957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x000000000003baba : jno 0x3baf9 ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x0000000000048984 : jno 0x489d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000071271 : jno 0x7127f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008f199 : jno 0x8f1ad ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f199 : jno 0x8f1af ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000009fae0 : jno 0x9fae9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009fd1a : jno 0x9fd23 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fe81 : jno 0x9fe92 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009ffe6 : jno 0xa006a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0233 : jno 0xa023c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a046d : jno 0xa0476 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a05d4 : jno 0xa05e5 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0739 : jno 0xa07bd ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0980 : jno 0xa0989 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a0bba : jno 0xa0bc3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a0d21 : jno 0xa0d32 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0e86 : jno 0xa0f0a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000ac913 : jno 0xac922 ; jne 0xac924 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ac919 : jno 0xac926 ; ret
0x00000000000c1585 : jno 0xc1512 ; ret 0xe283
0x00000000000c1612 : jno 0xc159f ; ret 0xe283
0x00000000000c16da : jno 0xc1667 ; ret 0xe283
0x00000000000c174a : jno 0xc16d7 ; ret 0xe283
0x00000000000c1a83 : jno 0xc1a10 ; ret 0xe283
0x00000000000c1afa : jno 0xc1a87 ; ret 0xe283
0x00000000000c1d4a : jno 0xc1cd7 ; ret 0xe283
0x00000000000c1dda : jno 0xc1d67 ; ret 0xe283
0x00000000000c2655 : jno 0xc264f ; ret
0x00000000000c2bc9 : jno 0xc2bc3 ; ret
0x00000000000c2c18 : jno 0xc2c12 ; ret
0x00000000000c2d03 : jno 0xc2c90 ; ret 0xe283
0x00000000000c2e9b : jno 0xc2e28 ; ret 0xe283
0x00000000000c2f2e : jno 0xc2ebb ; ret 0xe283
0x00000000000e3008 : jno 0xe300e ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f3777 : jno 0xf378b ; add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000000fd19f : jno 0xfd1a5 ; add byte ptr [rax], al ; syscall
0x0000000000102a29 : jnp 0x102a00 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000107511 : jnp 0x107517 ; add byte ptr [rax], al ; syscall
0x000000000011fd7e : jnp 0x11fdd0 ; test rdi, rdi ; jne 0x11fd78 ; pop rbx ; ret
0x0000000000135013 : jnp 0x13507f ; call rax
0x0000000000135a33 : jnp 0x135a8f ; call rax
0x0000000000183ca5 : jnp 0x183c62 ; ret
0x0000000000184ca2 : jnp 0x184d00 ; retf
0x00000000001850a9 : jnp 0x1850f6 ; retf 0x99e0
0x0000000000185d09 : jnp 0x185d4a ; retf
0x0000000000189f31 : jnp 0x189f2a ; call rsi
0x0000000000189f30 : jnp 0x189f2b ; call rsi
0x000000000018a9cd : jnp 0x18a9c7 ; jmp qword ptr [rbx]
0x0000000000195f2d : jnp 0x195f2d ; call qword ptr [rdx]
0x0000000000195f31 : jnp 0x195f35 ; call qword ptr [rdx + 0x12fffc7a]
0x000000000019606d : jnp 0x19606d ; jmp rax
0x00000000001960ad : jnp 0x1960ad ; call rax
0x000000000019938d : jnp 0x199396 ; add byte ptr [rsp - 0xa], al ; call rsp
0x000000000019c201 : jnp 0x19c202 ; jmp qword ptr [rdx]
0x000000000019c200 : jnp 0x19c203 ; jmp qword ptr [rdx]
0x00000000001b11e1 : jnp 0x1b11da ; jmp qword ptr [rcx]
0x00000000001b11f9 : jnp 0x1b11f2 ; jmp qword ptr [rcx]
0x00000000001b1211 : jnp 0x1b120a ; jmp qword ptr [rcx]
0x00000000001b1229 : jnp 0x1b1222 ; jmp qword ptr [rcx]
0x00000000001bcb10 : jnp 0x1bcb19 ; add byte ptr [rax], al ; retf
0x0000000000047055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000fc748 : jnp 0x481beb9b ; add esp, 0x18 ; ret
0x000000000006f139 : jnp 0x6f1b2 ; mov eax, 3 ; syscall
0x000000000007894b : jnp 0x789bf ; syscall
0x00000000000f60e1 : jnp 0xf60fa ; mov eax, ecx ; mov edx, dword ptr [rbx + 0x1c] ; syscall
0x00000000000f61a2 : jnp 0xf61b3 ; mov eax, 3 ; syscall
0x00000000000ff452 : jnp 0xff488 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000012804d : jns 0x12805a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000014abc7 : jns 0x14aba2 ; retf 0xead3
0x000000000014ad17 : jns 0x14acf2 ; retf 0xead3
0x000000000014ae67 : jns 0x14ae42 ; retf 0xead3
0x000000000014afb7 : jns 0x14af92 ; retf 0xead3
0x000000000014b107 : jns 0x14b0e2 ; retf 0xead3
0x000000000014b257 : jns 0x14b232 ; retf 0xead3
0x000000000014b3a7 : jns 0x14b382 ; retf 0xead3
0x000000000014b4f7 : jns 0x14b4d2 ; retf 0xead3
0x000000000014b647 : jns 0x14b622 ; retf 0xead3
0x000000000014b797 : jns 0x14b772 ; retf 0xead3
0x000000000014b8e7 : jns 0x14b8c2 ; retf 0xead3
0x000000000014ba37 : jns 0x14ba12 ; retf 0xead3
0x000000000014bb87 : jns 0x14bb62 ; retf 0xead3
0x000000000014bcd7 : jns 0x14bcb2 ; retf 0xead3
0x000000000014be27 : jns 0x14be02 ; retf 0xead3
0x000000000014c297 : jns 0x14c272 ; retf 0xead3
0x000000000014c417 : jns 0x14c3f2 ; retf 0xead3
0x000000000014c597 : jns 0x14c572 ; retf 0xead3
0x000000000014c717 : jns 0x14c6f2 ; retf 0xead3
0x000000000014c897 : jns 0x14c872 ; retf 0xead3
0x000000000014ca17 : jns 0x14c9f2 ; retf 0xead3
0x000000000014cb97 : jns 0x14cb72 ; retf 0xead3
0x000000000014cd17 : jns 0x14ccf2 ; retf 0xead3
0x000000000014ce97 : jns 0x14ce72 ; retf 0xead3
0x000000000014d017 : jns 0x14cff2 ; retf 0xead3
0x000000000014d197 : jns 0x14d172 ; retf 0xead3
0x000000000014d317 : jns 0x14d2f2 ; retf 0xead3
0x000000000014d497 : jns 0x14d472 ; retf 0xead3
0x000000000014d617 : jns 0x14d5f2 ; retf 0xead3
0x000000000014d797 : jns 0x14d772 ; retf 0xead3
0x0000000000182dae : jns 0x182d44 ; ret 0xf869
0x0000000000182dad : jns 0x182d45 ; ret 0xf869
0x00000000001886c1 : jns 0x1886bc ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188741 : jns 0x18873c ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188759 : jns 0x188754 ; ljmp [rdx - 0x7d] ; call qword ptr [rdx]
0x000000000018a8a9 : jns 0x18a8a3 ; jmp qword ptr [rdx]
0x000000000018a8b1 : jns 0x18a8ab ; jmp qword ptr [rdx]
0x000000000018a919 : jns 0x18a913 ; jmp qword ptr [rdx]
0x000000000018a918 : jns 0x18a914 ; jmp qword ptr [rdx]
0x000000000018a94d : jns 0x18a947 ; jmp qword ptr [rdx]
0x0000000000194f61 : jns 0x194f64 ; call qword ptr [rax + 0x10fffb7a]
0x0000000000195f3d : jns 0x195f3d ; call qword ptr [rdx]
0x000000000019607d : jns 0x19607d ; jmp rax
0x00000000001960bd : jns 0x1960bd ; call rax
0x0000000000001b2d : jns 0x1b38 ; ret
0x00000000001bc371 : jns 0x1bc36d ; call qword ptr [rcx]
0x0000000000029ae4 : jns 0x29d4cceb ; ret
0x0000000000002be3 : jns 0x2bb1 ; clc ; ret
0x0000000000003267 : jns 0x3242 ; ret 0x5a51
0x00000000000038ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004f343 : jns 0x4f2d0 ; sal byte ptr [rbp + rsi*2 + 0x49], 0x63 ; retf 0x20be
0x0000000000058e43 : jns 0x58dd0 ; sal byte ptr [rbp + rsi*2 + 0x49], 0x63 ; retf
0x000000000005c4f7 : jns 0x5c534 ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000009fae7 : jns 0x9faea ; ret
0x000000000009fd21 : jns 0x9fd24 ; ret
0x000000000009fe88 : jns 0x9fe93 ; ret
0x00000000000a023a : jns 0xa023d ; ret
0x00000000000a0474 : jns 0xa0477 ; ret
0x00000000000a05db : jns 0xa05e6 ; ret
0x00000000000a0987 : jns 0xa098a ; ret
0x00000000000a0bc1 : jns 0xa0bc4 ; ret
0x00000000000a0d28 : jns 0xa0d33 ; ret
0x00000000000cd421 : jns 0xcd427 ; add byte ptr [rax], al ; syscall
0x00000000000d7ca6 : jns 0xd7cb6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7c76
0x00000000000fdc64 : jns 0xfdc72 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000137d60 : jns 0xffffffffc496c647 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a9c46 : jns 0xffffffffed3a9fac ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9ca8 : jns 0xffffffffed3aa40e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9cc8 : jns 0xffffffffed3aa52e ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000133353 : jo 0x1333b9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136e62 : jo 0x136ec1 ; ret
0x0000000000140ecc : jo 0x140eed ; sub byte ptr [rax], al ; ret
0x0000000000183e24 : jo 0x183e9e ; mov ebp, 0xfb67d10d ; ret
0x0000000000187dfc : jo 0x187df0 ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000189580 : jo 0x1895d7 ; hlt ; jmp qword ptr [rsi]
0x0000000000194e30 : jo 0x194e3f ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000194e90 : jo 0x194eb3 ; sti ; call qword ptr [rax]
0x0000000000194eb0 : jo 0x194ee0 ; sti ; call qword ptr [rax]
0x0000000000194f4c : jo 0x194fac ; sti ; call qword ptr [rax]
0x00000000001952b0 : jo 0x195290 ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000195314 : jo 0x1952f5 ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195330 : jo 0x19530b ; sti ; jmp qword ptr [rax]
0x000000000019552c : jo 0x195526 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000195580 : jo 0x195581 ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x00000000001959c0 : jo 0x195a18 ; cld ; jmp rax
0x0000000000195bc4 : jo 0x195c1b ; cld ; jmp rax
0x0000000000195e8c : jo 0x195e12 ; cld ; call qword ptr [rax]
0x0000000000196398 : jo 0x196341 ; cld ; jmp rax
0x0000000000196584 : jo 0x196527 ; cld ; jmp rax
0x0000000000197e19 : jo 0x197e0b ; jmp rsp
0x000000000019df71 : jo 0x19df5e ; call qword ptr [rcx]
0x00000000001a2b0b : jo 0x1a2b16 ; mov ebp, 0x41380e0a ; ret
0x00000000001a5f10 : jo 0x1a5f3e ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a6679 : jo 0x1a666b ; jmp qword ptr [rdx]
0x00000000001ac0f8 : jo 0x1ac106 ; ret
0x00000000001ade30 : jo 0x1addce ; hlt ; jmp qword ptr [rcx]
0x00000000001ae610 : jo 0x1ae5e6 ; hlt ; jmp rcx
0x00000000001b0b01 : jo 0x1b0afa ; jmp qword ptr [rcx]
0x00000000001b0b19 : jo 0x1b0b12 ; jmp qword ptr [rcx]
0x00000000001b0b31 : jo 0x1b0b2a ; jmp qword ptr [rcx]
0x00000000001b0b79 : jo 0x1b0b72 ; jmp qword ptr [rcx]
0x00000000001b0b91 : jo 0x1b0b8a ; jmp qword ptr [rcx]
0x00000000001b2b55 : jo 0x1b2b5e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b85 : jo 0x1b2b8e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b84 : jo 0x1b2b8f ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bb5 : jo 0x1b2bbe ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bfd : jo 0x1b2c06 ; add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c15 : jo 0x1b2c1e ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c2d : jo 0x1b2c36 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb340 : jo 0x1bb2da ; sti ; jmp qword ptr [rdx]
0x00000000000292a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e0b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000041923 : jo 0x418b7 ; sar dword ptr [rdx + 1], 0x89 ; ret
0x0000000000045096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000060dbc : jo 0x60d49 ; ret
0x000000000006f13a : jo 0x6f0fa ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000006f589 : jo 0x6f5cb ; std ; je 0x6f5a1 ; mov eax, esi ; syscall
0x0000000000071c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000075ad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000078343 : jo 0x78303 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000079834 : jo 0x79885 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ad294 : jo 0xad2e2 ; mov edi, ebp ; call rbx
0x00000000000ad81e : jo 0xad870 ; mov edi, esp ; call rbx
0x00000000000ba57c : jo 0xba590 ; xchg eax, ebp ; ret 0x8b4c
0x00000000000cd4e1 : jo 0xcd4e7 ; add byte ptr [rax], al ; syscall
0x00000000000df9ab : jo 0xdf940 ; add dword ptr [rax + 0x63], ecx ; retf 0x8941
0x00000000000e3005 : jo 0xe2ff7 ; push rbp ; jno 0xe3011 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e3e68 : jo 0xe3e5a ; mov dl, 0x78 ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000f2d60 : jo 0xf2d6a ; mov qword ptr [rcx], rax ; call 0x1f7f7
0x00000000001074e1 : jp 0x1074e7 ; add byte ptr [rax], al ; syscall
0x0000000000113325 : jp 0x11337c ; mov rsi, rdx ; call rax
0x000000000012e7cd : jp 0x12e82d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000132332 : jp 0x13233e ; ret
0x00000000001350a2 : jp 0x1350ae ; ret
0x00000000001350ba : jp 0x1350c6 ; ret
0x00000000001358f2 : jp 0x1358fe ; ret
0x000000000013590a : jp 0x135916 ; ret
0x000000000013593a : jp 0x135946 ; ret
0x000000000014da76 : jp 0x14da6a ; ret
0x000000000014dad9 : jp 0x14dacd ; ret
0x000000000014da6f : jp 0x14daf9 ; jb 0x14da5c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014da74 : jp 0x14daf9 ; jp 0x14da6c ; ret
0x000000000014df66 : jp 0x14df5a ; ret
0x000000000014dfc9 : jp 0x14dfbd ; ret
0x000000000014df5f : jp 0x14dfe9 ; jb 0x14df4c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014df64 : jp 0x14dfe9 ; jp 0x14df5c ; ret
0x000000000014e309 : jp 0x14e2fd ; ret
0x000000000014e369 : jp 0x14e35d ; ret
0x000000000014e302 : jp 0x14e38c ; jb 0x14e2ef ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e307 : jp 0x14e38c ; jp 0x14e2ff ; ret
0x0000000000183fb3 : jp 0x183f6d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000018a7e9 : jp 0x18a7e3 ; jmp rdx
0x000000000018a7f1 : jp 0x18a7eb ; jmp rdx
0x000000000018a88d : jp 0x18a887 ; jmp rdx
0x000000000018a8d1 : jp 0x18a8cb ; jmp qword ptr [rdx]
0x000000000018a911 : jp 0x18a90b ; jmp qword ptr [rdx]
0x0000000000194f65 : jp 0x194f64 ; call qword ptr [rax]
0x0000000000195e4c : jp 0x195dd2 ; cld ; jmp qword ptr [rax]
0x0000000000195f35 : jp 0x195f35 ; call qword ptr [rdx]
0x0000000000195f39 : jp 0x195f3d ; call qword ptr [rdx + 0x12fffc79]
0x0000000000196075 : jp 0x196075 ; jmp rax
0x00000000001960b5 : jp 0x1960b5 ; call rax
0x0000000000196a81 : jp 0x196a6e ; jmp rsp
0x000000000019e409 : jp 0x19e3f6 ; jmp qword ptr [rcx]
0x00000000001b1151 : jp 0x1b114a ; jmp qword ptr [rcx]
0x00000000001b1169 : jp 0x1b1162 ; jmp qword ptr [rcx]
0x00000000001b1181 : jp 0x1b117a ; jmp qword ptr [rcx]
0x00000000001b1199 : jp 0x1b1192 ; jmp qword ptr [rcx]
0x0000000000002343 : jp 0x231f ; retf 0x23c4
0x0000000000023653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x0000000000002561 : jp 0x2545 ; jmp qword ptr [rbx]
0x0000000000002560 : jp 0x2546 ; jmp qword ptr [rbx]
0x000000000002cb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x000000000006f588 : jp 0x6f602 ; cmp ebp, edi ; je 0x6f5a2 ; mov eax, esi ; syscall
0x0000000000072fe9 : jp 0x7302e ; jmp 0x72fb3
0x000000000007f42d : jp 0x7f42f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000008f3b5 : jp 0x8f3af ; ret 0x7401
0x0000000000009c88 : jp 0x9c93 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x55
0x00000000000bb641 : jp 0xbb656 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bf0b2 : jp 0xbf0e9 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f2e59 : jp 0xf2e6d ; add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000000ff5bb : jp 0xff5f0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ff5ef : jp 0xff625 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ff5ee : jp 0xff626 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001150f3 : jrcxz 0x1150b8 ; cmp r11d, 0xa ; je 0x115104 ; ret
0x00000000001158d1 : jrcxz 0x1158d7 ; add byte ptr [rax], al ; syscall
0x00000000001158ec : jrcxz 0x1158f2 ; add byte ptr [rax], al ; syscall
0x000000000013a78f : jrcxz 0x13a7d4 ; call rsi
0x000000000015ac5a : jrcxz 0x15ac55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ac59 : jrcxz 0x15ac56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d72a : jrcxz 0x15d725 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d729 : jrcxz 0x15d726 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016024a : jrcxz 0x160245 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160249 : jrcxz 0x160246 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000182c05 : jrcxz 0x182c5f ; ret
0x0000000000184dcd : jrcxz 0x184d90 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000185929 : jrcxz 0x18590d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000186ce9 : jrcxz 0x186cda ; jmp qword ptr [rcx]
0x0000000000186ced : jrcxz 0x186cde ; jmp qword ptr [rcx]
0x0000000000186cf1 : jrcxz 0x186ce2 ; jmp qword ptr [rcx]
0x0000000000186cf5 : jrcxz 0x186ce6 ; jmp qword ptr [rcx]
0x0000000000186cf9 : jrcxz 0x186cea ; jmp qword ptr [rcx]
0x0000000000186cfd : jrcxz 0x186cee ; jmp qword ptr [rcx]
0x0000000000186d01 : jrcxz 0x186cf2 ; jmp qword ptr [rcx]
0x0000000000186d05 : jrcxz 0x186cf6 ; jmp qword ptr [rcx]
0x0000000000186d09 : jrcxz 0x186cfa ; jmp qword ptr [rcx]
0x0000000000186d0d : jrcxz 0x186cfe ; jmp qword ptr [rcx]
0x0000000000186d11 : jrcxz 0x186d02 ; jmp qword ptr [rcx]
0x0000000000186d15 : jrcxz 0x186d06 ; jmp qword ptr [rcx]
0x0000000000186d19 : jrcxz 0x186d0a ; jmp qword ptr [rcx]
0x0000000000186d1d : jrcxz 0x186d0e ; jmp qword ptr [rcx]
0x0000000000186d21 : jrcxz 0x186d12 ; jmp qword ptr [rcx]
0x0000000000186d25 : jrcxz 0x186d16 ; jmp qword ptr [rcx]
0x0000000000186d29 : jrcxz 0x186d1a ; jmp qword ptr [rcx]
0x0000000000186d2d : jrcxz 0x186d1e ; jmp qword ptr [rcx]
0x0000000000186d31 : jrcxz 0x186d22 ; jmp qword ptr [rcx]
0x0000000000186d35 : jrcxz 0x186d26 ; jmp qword ptr [rcx]
0x0000000000186d39 : jrcxz 0x186d2a ; jmp qword ptr [rcx]
0x0000000000186d3d : jrcxz 0x186d2e ; jmp qword ptr [rcx]
0x0000000000186d41 : jrcxz 0x186d32 ; jmp qword ptr [rcx]
0x0000000000186d45 : jrcxz 0x186d36 ; jmp qword ptr [rcx]
0x0000000000186d49 : jrcxz 0x186d3a ; jmp qword ptr [rcx]
0x0000000000186d4d : jrcxz 0x186d3e ; jmp qword ptr [rcx]
0x0000000000186d59 : jrcxz 0x186d4e ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d71 : jrcxz 0x186d62 ; jmp qword ptr [rcx]
0x0000000000186d75 : jrcxz 0x186d66 ; jmp qword ptr [rcx]
0x0000000000186d79 : jrcxz 0x186d6a ; jmp qword ptr [rcx]
0x0000000000186d7d : jrcxz 0x186d6e ; jmp qword ptr [rcx]
0x0000000000186d81 : jrcxz 0x186d72 ; jmp qword ptr [rcx]
0x0000000000186d85 : jrcxz 0x186d76 ; jmp qword ptr [rcx]
0x0000000000186d89 : jrcxz 0x186d7a ; jmp qword ptr [rcx]
0x0000000000186d8d : jrcxz 0x186d7e ; jmp qword ptr [rcx]
0x0000000000186d91 : jrcxz 0x186d82 ; jmp qword ptr [rcx]
0x0000000000186d95 : jrcxz 0x186d86 ; jmp qword ptr [rcx]
0x0000000000186d99 : jrcxz 0x186d8e ; dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da1 : jrcxz 0x186d92 ; jmp qword ptr [rcx]
0x0000000000186da5 : jrcxz 0x186d96 ; jmp qword ptr [rcx]
0x0000000000186da9 : jrcxz 0x186d9a ; jmp qword ptr [rcx]
0x0000000000186dad : jrcxz 0x186da2 ; inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186db5 : jrcxz 0x186da6 ; jmp qword ptr [rcx]
0x0000000000186db9 : jrcxz 0x186dae ; lcall [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc1 : jrcxz 0x186db2 ; jmp qword ptr [rcx]
0x0000000000186dc5 : jrcxz 0x186db6 ; jmp qword ptr [rcx]
0x0000000000186dc9 : jrcxz 0x186dba ; jmp qword ptr [rcx]
0x0000000000186dcd : jrcxz 0x186dbe ; jmp qword ptr [rcx]
0x0000000000186df1 : jrcxz 0x186de6 ; inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186df5 : jrcxz 0x186de6 ; jmp qword ptr [rcx]
0x0000000000186df4 : jrcxz 0x186de7 ; jmp qword ptr [rcx]
0x0000000000186df9 : jrcxz 0x186dea ; jmp qword ptr [rcx]
0x0000000000186dfd : jrcxz 0x186dee ; jmp qword ptr [rcx]
0x0000000000186e01 : jrcxz 0x186df2 ; jmp qword ptr [rcx]
0x0000000000186e15 : jrcxz 0x186e06 ; jmp qword ptr [rcx]
0x0000000000186e19 : jrcxz 0x186e0e ; push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e21 : jrcxz 0x186e12 ; jmp qword ptr [rdx]
0x0000000000186e29 : jrcxz 0x186e1a ; jmp qword ptr [rcx]
0x0000000000195269 : jrcxz 0x19526c ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195268 : jrcxz 0x19526d ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195289 : jrcxz 0x195288 ; call qword ptr [rax]
0x000000000019532d : jrcxz 0x195330 ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019a0f9 : jrcxz 0x19a0f6 ; inc esp ; ret 1
0x00000000001a7c81 : jrcxz 0x1a7c74 ; call rsp
0x00000000001aebf1 : jrcxz 0x1aebe9 ; call qword ptr [rsi]
0x00000000001aec09 : jrcxz 0x1aec01 ; jmp qword ptr [rcx]
0x00000000001b5b01 : jrcxz 0x1b5afb ; jmp qword ptr [rdi]
0x0000000000001f53 : jrcxz 0x1f31 ; retf 0xbe35
0x0000000000001f1e : jrcxz 0x1f9b ; retf 0x6321
0x00000000000026aa : jrcxz 0x264b ; retf
0x000000000004edde : jrcxz 0x4edee ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000050ebc : jrcxz 0x50f35 ; ret 0x8945
0x0000000000053b2e : jrcxz 0x53ba7 ; ret
0x00000000000567c8 : jrcxz 0x567c2 ; ret 0xf40
0x00000000000c47cf : jrcxz 0xc47e8 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00000000000d7330 : jrcxz 0xd733f ; je 0xd72cf ; pop rbx ; ret
0x00000000000ef1c2 : jrcxz 0xef23d ; retf
0x00000000000ef91c : jrcxz 0xef96e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000105d3f : js 0x105d9f ; pop rbp ; ret
0x0000000000105daf : js 0x105e0f ; pop rbp ; ret
0x000000000010a498 : js 0x10a424 ; loopne 0x10a4ab ; movzx eax, ax ; ret
0x000000000010a5c8 : js 0x10a551 ; loopne 0x10a5d1 ; ret
0x000000000010a658 : js 0x10a5e4 ; loopne 0x10a665 ; movzx eax, ax ; ret
0x000000000010a958 : js 0x10a8e4 ; loopne 0x10a967 ; movzx eax, ax ; ret
0x000000000010ae31 : js 0x10adbd ; loopne 0x10ae44 ; movzx eax, ax ; ret
0x000000000010af31 : js 0x10aeba ; loopne 0x10af3a ; ret
0x000000000010afb1 : js 0x10af3d ; loopne 0x10afbe ; movzx eax, ax ; ret
0x000000000010b231 : js 0x10b1bd ; loopne 0x10b240 ; movzx eax, ax ; ret
0x00000000001123c4 : js 0x1123ff ; mov edx, 5 ; call 0x2e629
0x00000000001193b4 : js 0x1193c9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000119434 : js 0x119447 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001275fc : js 0x12761d ; mov eax, 3 ; syscall
0x0000000000127754 : js 0x127779 ; mov eax, 3 ; syscall
0x000000000012b8c4 : js 0x12b89f ; sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000013389c : js 0x1338af ; retf 0xc80f
0x000000000013389b : js 0x1338b0 ; retf 0xc80f
0x0000000000140ca3 : js 0x140cb8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001413ac : js 0x1413b3 ; add byte ptr [rax], al ; syscall
0x0000000000141890 : js 0x1418c0 ; add byte ptr [rcx + rcx*4 - 8], al ; syscall
0x0000000000141c69 : js 0x141c84 ; mov eax, 3 ; syscall
0x00000000001751a9 : js 0x1751cd ; mov eax, 3 ; syscall
0x0000000000184d08 : js 0x184cdc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000184ca1 : js 0x184d21 ; pop rdx ; retf
0x0000000000195ec5 : js 0x195ec5 ; jmp qword ptr [rax]
0x0000000000196005 : js 0x196005 ; call rsp
0x0000000000196004 : js 0x196006 ; call rsp
0x0000000000199305 : js 0x19930e ; add byte ptr [rsp + rdx - 0xa], dh ; call rsp
0x000000000019c339 : js 0x19c325 ; call qword ptr [rax]
0x000000000019c338 : js 0x19c326 ; call qword ptr [rax]
0x000000000019c351 : js 0x19c33d ; jmp qword ptr [rcx]
0x000000000019c350 : js 0x19c33e ; jmp qword ptr [rcx]
0x000000000019d9d8 : js 0x19da28 ; jmp 0x1b9ce2
0x00000000001a6678 : js 0x1a66ed ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6af8 : js 0x1a6afc ; stc ; call qword ptr [rax]
0x0000000000001ace : js 0x1ac3 ; fidiv word ptr [rbx] ; retf
0x00000000001aea78 : js 0x1aea5c ; hlt ; call qword ptr [rbx]
0x00000000001aedf8 : js 0x1aede4 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee88 : js 0x1aee75 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b78 : js 0x1b0bed ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fe9 : js 0x1b0fe2 ; jmp qword ptr [rbx]
0x00000000001b0fe8 : js 0x1b0fe3 ; jmp qword ptr [rbx]
0x00000000001bafa8 : js 0x1baf45 ; sti ; jmp qword ptr [rdx]
0x0000000000025b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000002dd11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x000000000002dd51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x000000000002ddf1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x000000000002ded1 : js 0x2de5a ; loopne 0x2deda ; ret
0x000000000002df4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x000000000002df5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x000000000002df9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x000000000002e03a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x000000000002e0c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000006265d : js 0x625ea ; retf 0x348
0x0000000000075add : js 0x75aeb ; ret
0x0000000000085818 : js 0x85823 ; ret
0x0000000000088374 : js 0x883f0 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cd541 : js 0xcd547 ; add byte ptr [rax], al ; syscall
0x00000000000cdbf7 : js 0xcdc03 ; ret
0x00000000000e1a76 : js 0xe1a89 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e3e6b : js 0xe3e6c ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e5138 : js 0xe514b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000f5f1c : js 0xf5f6e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f68b9 : js 0xf690b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f7f6a : js 0xf7f63 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fcefb : js 0xfcecd ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff222 : js 0xff235 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000ff8d5 : js 0xff90c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a9be8 : js 0xffffffffed3a9e4e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c16 : js 0xffffffffed3aa07c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c68 : js 0xffffffffed3aa4ce ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000024c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000000ffd98 : lahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001963c1 : lahf ; cld ; call rax
0x0000000000196441 : lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000196581 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001852e3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000116575 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014b6cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184bd2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001853d4 : lahf ; push -0x57d3205 ; call 0xffffffffab261ed6
0x00000000001833e0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000004c5b6 : lahf ; ret
0x000000000007371e : lahf ; ret 0x3841
0x0000000000102eae : lahf ; ret 0x3845
0x00000000000d5b9a : lahf ; ret 0x82eb
0x0000000000182b3d : lahf ; ret 0x871e
0x000000000011d7af : lahf ; ret 0xc2e9
0x000000000005fc5c : lahf ; ret 0xd129
0x0000000000061f72 : lahf ; ret 0xd329
0x000000000005febc : lahf ; ret 0xd629
0x0000000000101b73 : lahf ; ret 0xe883
0x00000000000aab99 : lahf ; ret 0xea81
0x0000000000019c78 : lahf ; retf
0x000000000014bd5d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101ff7 : lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001899bb : lcall [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00000000001899c7 : lcall [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x0000000000189a3f : lcall [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x000000000019520f : lcall [rax] ; fdivr st(3) ; jmp rax
0x0000000000187cdb : lcall [rax] ; ret 0xfffd
0x0000000000187ceb : lcall [rax] ; retf
0x0000000000123205 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011d125 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070b85 : lcall [rbp + 0x41] ; pop rsp ; ret
0x000000000001fb73 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000073651 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029e13 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b65d1 : lcall [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000039cf2 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070450 : lcall [rbx + 0x5d] ; ret
0x0000000000199f2b : lcall [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000186dbb : lcall [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000865df : lcall [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000188e3b : lcall [rcx + 0x3afff3df] ; sal ebx, cl ; jmp rcx
0x0000000000197ceb : lcall [rcx + 0x5e440000] ; out dx, al ; jmp rsp
0x0000000000186b53 : lcall [rcx + rdi*4 + 0x6e16ffed] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b3f : lcall [rcx + rdi*4 - 0x46630013] ; in eax, dx ; call qword ptr [rsi]
0x0000000000195a0b : lcall [rcx + rdx*2 + 0x512cfffc] ; cld ; call rdx
0x0000000000188e7b : lcall [rcx - 0x30] ; jmp rcx
0x0000000000188ea3 : lcall [rcx - 0x66000c21] ; fcomip st(3) ; jmp rcx
0x000000000011184a : lcall [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x00000000001977ab : lcall [rdi + rdi*4 - 0x44bc0000] ; in eax, dx ; call rsp
0x000000000019b2db : lcall [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x00000000001974db : lcall [rdx + rbp*4 + 0x51740000] ; in eax, dx ; jmp rsp
0x000000000018a84f : lcall [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000018879f : lcall [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000019b63b : lcall [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x0000000000198213 : lcall [rsp + rax + 1] ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000019aea3 : lcall [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000015b2e6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000072d6f : lea eax, [r8 - 1] ; ret
0x0000000000123d0c : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000bb1e8 : lea eax, [rax + rax - 1] ; ret
0x000000000008eb44 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000008eb54 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000009f104 : lea eax, [rax + rdi + 0x30] ; ret
0x000000000008eb24 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000c7982 : lea eax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072d70 : lea eax, [rax - 1] ; ret
0x00000000000fcd61 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x0000000000123e90 : lea eax, [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000012e28b : lea eax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e8 : lea eax, [rbx - 4] ; pop rbx ; ret
0x00000000001b265c : lea eax, [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000123d0d : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x000000000008d5ed : lea eax, [rcx + rsi] ; ret
0x00000000000aa384 : lea eax, [rcx - 1] ; ret
0x00000000000a74ac : lea eax, [rdi + 0x10] ; ret
0x00000000000a74c1 : lea eax, [rdi + 0x11] ; ret
0x00000000000a74df : lea eax, [rdi + 0x12] ; ret
0x00000000000a74ff : lea eax, [rdi + 0x13] ; ret
0x00000000000a7522 : lea eax, [rdi + 0x14] ; ret
0x00000000000a7541 : lea eax, [rdi + 0x15] ; ret
0x00000000000a7561 : lea eax, [rdi + 0x16] ; ret
0x00000000000a7581 : lea eax, [rdi + 0x17] ; ret
0x00000000000a75a4 : lea eax, [rdi + 0x18] ; ret
0x00000000000a75c9 : lea eax, [rdi + 0x19] ; ret
0x00000000000a75e7 : lea eax, [rdi + 0x1a] ; ret
0x00000000000a7607 : lea eax, [rdi + 0x1b] ; ret
0x00000000000a7623 : lea eax, [rdi + 0x1c] ; ret
0x00000000000a7643 : lea eax, [rdi + 0x1d] ; ret
0x00000000000a7663 : lea eax, [rdi + 0x1e] ; ret
0x00000000000a7683 : lea eax, [rdi + 0x1f] ; ret
0x00000000000a84d3 : lea eax, [rdi + 0x20] ; ret
0x00000000000a8739 : lea eax, [rdi + 0x40] ; ret
0x00000000000a73fd : lea eax, [rdi + 0xa] ; ret
0x00000000000a741d : lea eax, [rdi + 0xb] ; ret
0x00000000000a743f : lea eax, [rdi + 0xc] ; ret
0x00000000000a745f : lea eax, [rdi + 0xd] ; ret
0x00000000000a747f : lea eax, [rdi + 0xe] ; ret
0x00000000000a7499 : lea eax, [rdi + 0xf] ; ret
0x000000000009ea64 : lea eax, [rdi + 1] ; ret
0x000000000009ea78 : lea eax, [rdi + 2] ; ret
0x000000000009ea83 : lea eax, [rdi + 3] ; ret
0x000000000009ea97 : lea eax, [rdi + 4] ; ret
0x000000000009eaa7 : lea eax, [rdi + 5] ; ret
0x000000000009eab7 : lea eax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73ab : lea eax, [rdi + 6] ; ret
0x000000000009ea57 : lea eax, [rdi + 7] ; ret
0x00000000000a73ca : lea eax, [rdi + 8] ; ret
0x0000000000123020 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a73df : lea eax, [rdi + 9] ; ret
0x000000000008eb79 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000008eb89 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000008ea73 : lea eax, [rdi + rax + 0x30] ; ret
0x00000000000967a7 : lea eax, [rdi + rax] ; ret
0x000000000014a66a : lea eax, [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000124190 : lea eax, [rdi + rsi + 8] ; ret
0x000000000002da65 : lea eax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e9 : lea eax, [rdi + rsi] ; ret
0x00000000000ac43e : lea eax, [rdi - 0x10] ; ret
0x00000000000ac5a1 : lea eax, [rdi - 0xc] ; ret
0x00000000000ac5c1 : lea eax, [rdi - 4] ; ret
0x00000000000ac5b1 : lea eax, [rdi - 8] ; ret
0x00000000000a7333 : lea eax, [rdi] ; ret
0x00000000001bc716 : lea eax, [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x000000000016b0cd : lea eax, [rdx + 0xa] ; ret
0x000000000016b0ed : lea eax, [rdx + 0xb] ; ret
0x000000000016b10f : lea eax, [rdx + 0xc] ; ret
0x000000000016b12f : lea eax, [rdx + 0xd] ; ret
0x000000000016b14f : lea eax, [rdx + 0xe] ; ret
0x000000000016afdf : lea eax, [rdx + 0xf] ; ret
0x000000000016b007 : lea eax, [rdx + 1] ; ret
0x000000000016b01d : lea eax, [rdx + 2] ; ret
0x000000000016b035 : lea eax, [rdx + 3] ; ret
0x000000000016b04b : lea eax, [rdx + 4] ; ret
0x000000000016b05d : lea eax, [rdx + 5] ; ret
0x000000000016b07b : lea eax, [rdx + 6] ; ret
0x000000000016af87 : lea eax, [rdx + 7] ; ret
0x000000000016b08d : lea eax, [rdx + 8] ; ret
0x000000000016b0ad : lea eax, [rdx + 9] ; ret
0x0000000000072d5e : lea eax, [rdx + rdi] ; ret
0x00000000000aac6c : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000016aff5 : lea eax, [rdx] ; ret
0x000000000008bb5a : lea eax, [rip + 0x10] ; ret
0x000000000008f350 : lea eax, [rip + 0x10e4a] ; ret
0x000000000002cb39 : lea eax, [rip + 0x15ffe6] ; ret
0x0000000000020931 : lea eax, [rip + 0x16bd34] ; ret
0x0000000000020941 : lea eax, [rip + 0x16dc63] ; ret
0x000000000008bb0e : lea eax, [rip + 0x1713c] ; ret
0x00000000000898ae : lea eax, [rip + 0x1777c] ; ret
0x000000000008f1ea : lea eax, [rip + 0x1b330] ; ret
0x000000000008ebc4 : lea eax, [rip + 0x26] ; ret
0x000000000012b9b9 : lea eax, [rip + 0x29d381] ; pop rbx ; ret
0x000000000012b981 : lea eax, [rip + 0x29d3b9] ; pop rbx ; ret
0x000000000012b8c2 : lea eax, [rip + 0x29d478] ; pop rbx ; ret
0x0000000000101f6b : lea eax, [rip + 0x2c52ef] ; pop rbp ; pop r12 ; ret
0x00000000000fe32e : lea eax, [rip + 0x2c8c64] ; ret
0x00000000000fe16e : lea eax, [rip + 0x2c8e24] ; ret
0x000000000006ac84 : lea eax, [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116271 : lea eax, [rip + 0x37c19] ; ret
0x0000000000116361 : lea eax, [rip + 0x37ec9] ; ret
0x000000000012b0f1 : lea eax, [rip + 0x61a2e] ; ret
0x000000000008f9ea : lea eax, [rip + 0x80] ; ret
0x000000000009443f : lea eax, [rip + 0xb3db] ; ret
0x0000000000094410 : lea eax, [rip + 0xb63a] ; ret
0x0000000000094453 : lea eax, [rip + 0xbcb47] ; ret
0x000000000008da9b : lea eax, [rip + 0xbcdbf] ; ret
0x000000000008d70b : lea eax, [rip + 0xbd01f] ; ret
0x000000000008f391 : lea eax, [rip + 0xbeea9] ; ret
0x000000000008b29b : lea eax, [rip + 0xbf34f] ; ret
0x00000000000abc9c : lea eax, [rip + 0xc210e] ; ret
0x00000000000ac878 : lea eax, [rip + 0xc31f2] ; ret
0x00000000000ac880 : lea eax, [rip + 0xc5aaa] ; ret
0x0000000000089cfe : lea eax, [rip + 0xc] ; ret
0x000000000008d3ee : lea eax, [rip + 0xd99dc] ; ret
0x000000000008fa4d : lea eax, [rip + 0xd] ; ret
0x000000000008f87e : lea eax, [rip + 0xda0cc] ; ret
0x000000000008b18e : lea eax, [rip + 0xda48c] ; ret
0x000000000008f99e : lea eax, [rip + 0xdb7bc] ; ret
0x000000000008ebd8 : lea eax, [rip + 0xdf852] ; ret
0x000000000008ebe0 : lea eax, [rip + 0xe1fda] ; ret
0x0000000000089a9b : lea eax, [rip + 0xe6dff] ; ret
0x00000000000ac864 : lea eax, [rip + 0xe916] ; ret
0x00000000000abc94 : lea eax, [rip + 0xf596] ; ret
0x00000000000569f6 : lea eax, [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00000000001163aa : lea eax, [rip - 0x6bea0] ; ret
0x0000000000116320 : lea eax, [rip - 0x76196] ; ret
0x0000000000116230 : lea eax, [rip - 0x767f6] ; ret
0x0000000000123fee : lea eax, [rsi + 8] ; ret
0x00000000001a6fb5 : lea eax, [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb61a : lea eax, [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x0000000000045b5f : lea ebp, [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f81f : lea ebp, [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000ed46c : lea ebp, [rip + 0x9cdee] ; call 0x39768
0x0000000000047071 : lea ebx, [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000598fb : lea ebx, [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000001833f1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000acbb3 : lea ecx, [rax + 1] ; call rbx
0x00000000000accde : lea ecx, [rax + 4] ; call rbx
0x00000000000ad11e : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000beb64 : lea ecx, [rax] ; mov rdx, rax ; jmp 0xbeb75
0x00000000001bc6be : lea ecx, [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000151020 : lea ecx, [rbx + rcx] ; jmp r9
0x00000000000a5bee : lea ecx, [rbx + rcx] ; jmp rcx
0x00000000001688d6 : lea ecx, [rdx + 0x10] ; jne 0x168e29 ; ret
0x0000000000168bd4 : lea ecx, [rdx + 0xa] ; jne 0x168e29 ; ret
0x0000000000168bf4 : lea ecx, [rdx + 0xb] ; jne 0x168e29 ; ret
0x0000000000168c14 : lea ecx, [rdx + 0xc] ; jne 0x168e29 ; ret
0x0000000000168c36 : lea ecx, [rdx + 0xd] ; jne 0x168e29 ; ret
0x0000000000168c56 : lea ecx, [rdx + 0xe] ; jne 0x168e29 ; ret
0x0000000000168c76 : lea ecx, [rdx + 0xf] ; jne 0x168e29 ; ret
0x0000000000168acc : lea ecx, [rdx + 1] ; jne 0x168e29 ; ret
0x0000000000168aee : lea ecx, [rdx + 2] ; jne 0x168e29 ; ret
0x0000000000168b14 : lea ecx, [rdx + 3] ; jne 0x168e29 ; ret
0x0000000000168b2c : lea ecx, [rdx + 4] ; jne 0x168e29 ; ret
0x0000000000072161 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c6 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000168b52 : lea ecx, [rdx + 5] ; jne 0x168e29 ; ret
0x0000000000168b74 : lea ecx, [rdx + 6] ; jne 0x168e29 ; ret
0x0000000000168b92 : lea ecx, [rdx + 7] ; jne 0x168e29 ; ret
0x000000000016886e : lea ecx, [rdx + 8] ; jne 0x168e29 ; ret
0x0000000000168bb4 : lea ecx, [rdx + 9] ; jne 0x168e29 ; ret
0x0000000000088851 : lea ecx, [rip + 0x1042ce] ; mov rdx, rcx ; jmp 0x88826
0x0000000000059878 : lea ecx, [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x000000000010ada7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000136ef9 : lea ecx, [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe4 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012cac8 : lea ecx, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750c0 : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136d0a : lea ecx, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9d6 : lea ecx, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad079 : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000accd9 : lea ecx, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
0x00000000000acbae : lea ecx, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x00000000001380a2 : lea ecx, [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7fc : lea ecx, [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf6b : lea ecx, [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01c : lea ecx, [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55a : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e63 : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81b : lea ecx, [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad291 : lea ecx, [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000014188f : lea edi, [rax + 0x28] ; add byte ptr [rcx + rcx*4 - 8], al ; syscall
0x0000000000132e2e : lea edi, [rbp + 0x10] ; call rax
0x0000000000135a32 : lea edi, [rbx + 0x58] ; call rax
0x0000000000135012 : lea edi, [rbx + 0x68] ; call rax
0x0000000000132295 : lea edi, [rbx + 0xc8] ; call rax
0x0000000000038fec : lea edi, [rbx + rsi] ; call rax
0x000000000008f426 : lea edi, [rdi + 0x10] ; jne 0x8f418 ; mov rax, rdi ; ret
0x00000000000944e6 : lea edi, [rdi + 0x10] ; jne 0x944d6 ; ret
0x00000000000a675d : lea edi, [rdi + 0x10] ; jne 0xa6e39 ; ret
0x00000000000a7e41 : lea edi, [rdi + 0x10] ; jne 0xa8649 ; ret
0x00000000000a6780 : lea edi, [rdi + 0x11] ; jne 0xa6e39 ; ret
0x00000000000a7e64 : lea edi, [rdi + 0x11] ; jne 0xa8649 ; ret
0x00000000000a67a5 : lea edi, [rdi + 0x12] ; jne 0xa6e39 ; ret
0x00000000000a7e89 : lea edi, [rdi + 0x12] ; jne 0xa8649 ; ret
0x00000000000a67c3 : lea edi, [rdi + 0x13] ; jne 0xa6e39 ; ret
0x00000000000a7eb7 : lea edi, [rdi + 0x13] ; jne 0xa8649 ; ret
0x00000000000a67e3 : lea edi, [rdi + 0x14] ; jne 0xa6e39 ; ret
0x00000000000a7ee7 : lea edi, [rdi + 0x14] ; jne 0xa8649 ; ret
0x00000000000a6806 : lea edi, [rdi + 0x15] ; jne 0xa6e39 ; ret
0x00000000000a7f1a : lea edi, [rdi + 0x15] ; jne 0xa8649 ; ret
0x00000000000a6825 : lea edi, [rdi + 0x16] ; jne 0xa6e39 ; ret
0x00000000000a7f49 : lea edi, [rdi + 0x16] ; jne 0xa8649 ; ret
0x00000000000a6845 : lea edi, [rdi + 0x17] ; jne 0xa6e39 ; ret
0x00000000000a7f79 : lea edi, [rdi + 0x17] ; jne 0xa8649 ; ret
0x00000000000a6865 : lea edi, [rdi + 0x18] ; jne 0xa6e39 ; ret
0x00000000000a7fa9 : lea edi, [rdi + 0x18] ; jne 0xa8649 ; ret
0x00000000000a6888 : lea edi, [rdi + 0x19] ; jne 0xa6e39 ; ret
0x00000000000a7fdc : lea edi, [rdi + 0x19] ; jne 0xa8649 ; ret
0x00000000000a68bd : lea edi, [rdi + 0x1a] ; jne 0xa6e39 ; ret
0x00000000000a8011 : lea edi, [rdi + 0x1a] ; jne 0xa8649 ; ret
0x00000000000a68eb : lea edi, [rdi + 0x1b] ; jne 0xa6e39 ; ret
0x00000000000a803f : lea edi, [rdi + 0x1b] ; jne 0xa8649 ; ret
0x00000000000a691b : lea edi, [rdi + 0x1c] ; jne 0xa6e39 ; ret
0x00000000000a806f : lea edi, [rdi + 0x1c] ; jne 0xa8649 ; ret
0x00000000000a6947 : lea edi, [rdi + 0x1d] ; jne 0xa6e39 ; ret
0x00000000000a809b : lea edi, [rdi + 0x1d] ; jne 0xa8649 ; ret
0x00000000000a6977 : lea edi, [rdi + 0x1e] ; jne 0xa6e39 ; ret
0x00000000000a80cb : lea edi, [rdi + 0x1e] ; jne 0xa8649 ; ret
0x00000000000a69a7 : lea edi, [rdi + 0x1f] ; jne 0xa6e39 ; ret
0x00000000000a80fb : lea edi, [rdi + 0x1f] ; jne 0xa8649 ; ret
0x00000000000a69d7 : lea edi, [rdi + 0x20] ; jne 0xa6e39 ; ret
0x00000000000a812b : lea edi, [rdi + 0x20] ; jne 0xa8649 ; ret
0x00000000000a66a3 : lea edi, [rdi + 0xa] ; jne 0xa6e39 ; ret
0x00000000000a7d47 : lea edi, [rdi + 0xa] ; jne 0xa8649 ; ret
0x00000000000a66c1 : lea edi, [rdi + 0xb] ; jne 0xa6e39 ; ret
0x00000000000a7d75 : lea edi, [rdi + 0xb] ; jne 0xa8649 ; ret
0x00000000000a66e1 : lea edi, [rdi + 0xc] ; jne 0xa6e39 ; ret
0x00000000000a7d95 : lea edi, [rdi + 0xc] ; jne 0xa8649 ; ret
0x00000000000a6703 : lea edi, [rdi + 0xd] ; jne 0xa6e39 ; ret
0x00000000000a7db7 : lea edi, [rdi + 0xd] ; jne 0xa8649 ; ret
0x00000000000a6723 : lea edi, [rdi + 0xe] ; jne 0xa6e39 ; ret
0x00000000000a7de7 : lea edi, [rdi + 0xe] ; jne 0xa8649 ; ret
0x00000000000a6743 : lea edi, [rdi + 0xf] ; jne 0xa6e39 ; ret
0x00000000000a7e17 : lea edi, [rdi + 0xf] ; jne 0xa8649 ; ret
0x00000000000a6577 : lea edi, [rdi + 1] ; jne 0xa6e39 ; ret
0x00000000000a7c1a : lea edi, [rdi + 1] ; jne 0xa8649 ; ret
0x00000000000a659b : lea edi, [rdi + 2] ; jne 0xa6e39 ; ret
0x00000000000a7c3f : lea edi, [rdi + 2] ; jne 0xa8649 ; ret
0x00000000000a65be : lea edi, [rdi + 3] ; jne 0xa6e39 ; ret
0x00000000000a7c62 : lea edi, [rdi + 3] ; jne 0xa8649 ; ret
0x00000000000a65d9 : lea edi, [rdi + 4] ; jne 0xa6e39 ; ret
0x00000000000a7c7d : lea edi, [rdi + 4] ; jne 0xa8649 ; ret
0x00000000000a65fc : lea edi, [rdi + 5] ; jne 0xa6e39 ; ret
0x00000000000a7ca0 : lea edi, [rdi + 5] ; jne 0xa8649 ; ret
0x00000000000a6621 : lea edi, [rdi + 6] ; jne 0xa6e39 ; ret
0x00000000000a7cc5 : lea edi, [rdi + 6] ; jne 0xa8649 ; ret
0x00000000000a663f : lea edi, [rdi + 7] ; jne 0xa6e39 ; ret
0x00000000000a7ce3 : lea edi, [rdi + 7] ; jne 0xa8649 ; ret
0x00000000000a665b : lea edi, [rdi + 8] ; jne 0xa6e39 ; ret
0x00000000000a7cff : lea edi, [rdi + 8] ; jne 0xa8649 ; ret
0x00000000000a667e : lea edi, [rdi + 9] ; jne 0xa6e39 ; ret
0x00000000000a7d22 : lea edi, [rdi + 9] ; jne 0xa8649 ; ret
0x0000000000023652 : lea edi, [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x000000000004b511 : lea edi, [rip + 0x1451e9] ; call 0x777f8
0x0000000000029cd3 : lea edi, [rip + 0x166467] ; mov eax, ecx ; syscall
0x0000000000120711 : lea edi, [rip + 0x2a7fe5] ; call rax
0x000000000011feb2 : lea edi, [rip + 0x2a87e8] ; call rax
0x0000000000105acd : lea edi, [rip + 0x88e77] ; mov eax, ebx ; syscall
0x0000000000105a9c : lea edi, [rip + 0x88e9d] ; mov eax, ebx ; syscall
0x0000000000101554 : lea edi, [rip + 0x8b122] ; mov eax, ecx ; syscall
0x00000000000c00ad : lea edi, [rip + 0xc85a1] ; add rax, rdi ; jmp rax
0x0000000000115b47 : lea edi, [rip - 0x16d] ; call rax
0x00000000000f6ad5 : lea edi, [rsp + 0xc] ; call rax
0x00000000000f6b1d : lea edi, [rsp + 0xc] ; mov eax, 0x135 ; syscall
0x000000000007c84b : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000368a9 : lea edx, [rax - 1] ; mov dword ptr [rip + 0x38d7d6], edx ; ret
0x00000000001510f4 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000053f68 : lea edx, [rbx] ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000009ede8 : lea edx, [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000072eed : lea edx, [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000089d96 : lea edx, [rdx + rcx] ; jmp r10
0x000000000010ab83 : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001514e8 : lea edx, [rdx - 0x40] ; jmp r9
0x000000000012ddb1 : lea edx, [rip + 0x295dc9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000137381 : lea edx, [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001162eb : lea edx, [rip + 0x4003f] ; cmove rax, rdx ; ret
0x000000000008f196 : lea edx, [rip + 0xc71a4] ; cmove rax, rdx ; ret
0x00000000000720a1 : lea edx, [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000fc497 : lea edx, [rsp - 0x38] ; mov eax, 0x10 ; syscall
0x00000000000f2d5f : lea esi, [rax + 1] ; mov qword ptr [rcx], rax ; call 0x1f7f8
0x0000000000062053 : lea esi, [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000062d79 : lea esi, [rax*8] ; call 0x1f7f9
0x00000000000e79fe : lea esi, [rbx + rax*4] ; shl rdx, 2 ; call 0x94479
0x0000000000071270 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eea : lea esi, [rdi] ; ret 0x793b
0x000000000004e617 : lea esi, [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000450df : lea esi, [rip + 0x1cb] ; call rax
0x0000000000141ac6 : lea esi, [rip + 0x287654] ; xor eax, eax ; syscall
0x000000000014188d : lea esi, [rip + 0x28788d] ; mov eax, r15d ; syscall
0x000000000006f21a : lea esi, [rip + 0x30] ; call rax
0x000000000007bf0a : lea esi, [rip - 0x15e0] ; call rax
0x000000000007c2fa : lea esi, [rip - 0x19d0] ; call rax
0x000000000007c74a : lea esi, [rip - 0x1e20] ; call rax
0x000000000006f513 : lea esi, [rip - 0x2c9] ; call rax
0x000000000007ac3a : lea esi, [rip - 0x310] ; call rax
0x000000000007aeaa : lea esi, [rip - 0x580] ; call rax
0x0000000000105ebf : lea esi, [rsp + 0x10] ; mov rdi, r8 ; xor eax, eax ; syscall
0x000000000013b23d : lea esi, [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a5 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x000000000013b5ea : lea esi, [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013abad : lea esi, [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000119020 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000398c2 : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006d121 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000089d95 : lea r10, [r10 + r9] ; jmp r10
0x00000000000ed46b : lea r13, [rip + 0x9cdee] ; call 0x39769
0x0000000000038feb : lea r15, [rbx + r14] ; call rax
0x000000000015101f : lea r9, [r11 + r9] ; jmp r9
0x0000000000136ef8 : lea r9, [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe3 : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012cac7 : lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750bf : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136d09 : lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9d5 : lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad078 : lea r9, [rsp + 0x20] ; call rbx
0x00000000000accd8 : lea r9, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
0x00000000000acbad : lea r9, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x00000000001380a1 : lea r9, [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7fb : lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf6a : lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01b : lea r9, [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad559 : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e62 : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81a : lea r9, [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad290 : lea r9, [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000cdbb9 : lea rax, [rax + rax - 1] ; ret
0x000000000008eb43 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000008eb53 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000009f103 : lea rax, [rax + rdi + 0x30] ; ret
0x000000000008eb23 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000c7981 : lea rax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e28a : lea rax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e7 : lea rax, [rbx - 4] ; pop rbx ; ret
0x000000000008d5ec : lea rax, [rcx + rsi] ; ret
0x00000000000aa383 : lea rax, [rcx - 1] ; ret
0x00000000000a74ab : lea rax, [rdi + 0x10] ; ret
0x00000000000a74c0 : lea rax, [rdi + 0x11] ; ret
0x00000000000a74de : lea rax, [rdi + 0x12] ; ret
0x00000000000a74fe : lea rax, [rdi + 0x13] ; ret
0x00000000000a7521 : lea rax, [rdi + 0x14] ; ret
0x00000000000a7540 : lea rax, [rdi + 0x15] ; ret
0x00000000000a7560 : lea rax, [rdi + 0x16] ; ret
0x00000000000a7580 : lea rax, [rdi + 0x17] ; ret
0x00000000000a75a3 : lea rax, [rdi + 0x18] ; ret
0x00000000000a75c8 : lea rax, [rdi + 0x19] ; ret
0x00000000000a75e6 : lea rax, [rdi + 0x1a] ; ret
0x00000000000a7606 : lea rax, [rdi + 0x1b] ; ret
0x00000000000a7622 : lea rax, [rdi + 0x1c] ; ret
0x00000000000a7642 : lea rax, [rdi + 0x1d] ; ret
0x00000000000a7662 : lea rax, [rdi + 0x1e] ; ret
0x00000000000a7682 : lea rax, [rdi + 0x1f] ; ret
0x00000000000a84d2 : lea rax, [rdi + 0x20] ; ret
0x00000000000a8738 : lea rax, [rdi + 0x40] ; ret
0x00000000000a73fc : lea rax, [rdi + 0xa] ; ret
0x00000000000a741c : lea rax, [rdi + 0xb] ; ret
0x00000000000a743e : lea rax, [rdi + 0xc] ; ret
0x00000000000a745e : lea rax, [rdi + 0xd] ; ret
0x00000000000a747e : lea rax, [rdi + 0xe] ; ret
0x00000000000a7498 : lea rax, [rdi + 0xf] ; ret
0x000000000009ea63 : lea rax, [rdi + 1] ; ret
0x000000000009ea77 : lea rax, [rdi + 2] ; ret
0x000000000009ea82 : lea rax, [rdi + 3] ; ret
0x000000000009ea96 : lea rax, [rdi + 4] ; ret
0x000000000009eaa6 : lea rax, [rdi + 5] ; ret
0x000000000009eab6 : lea rax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73aa : lea rax, [rdi + 6] ; ret
0x000000000009ea56 : lea rax, [rdi + 7] ; ret
0x00000000000a73c9 : lea rax, [rdi + 8] ; ret
0x00000000000a73de : lea rax, [rdi + 9] ; ret
0x000000000008eb78 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000008eb88 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000008ea72 : lea rax, [rdi + rax + 0x30] ; ret
0x00000000000967a6 : lea rax, [rdi + rax] ; ret
0x000000000014a669 : lea rax, [rdi + rcx] ; sub rax, r8 ; ret
0x000000000012418f : lea rax, [rdi + rsi + 8] ; ret
0x000000000002da64 : lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e8 : lea rax, [rdi + rsi] ; ret
0x00000000000ac43d : lea rax, [rdi - 0x10] ; ret
0x00000000000ac5a0 : lea rax, [rdi - 0xc] ; ret
0x00000000000ac5c0 : lea rax, [rdi - 4] ; ret
0x00000000000ac5b0 : lea rax, [rdi - 8] ; ret
0x00000000000a7332 : lea rax, [rdi] ; ret
0x000000000016b0cc : lea rax, [rdx + 0xa] ; ret
0x000000000016b0ec : lea rax, [rdx + 0xb] ; ret
0x000000000016b10e : lea rax, [rdx + 0xc] ; ret
0x000000000016b12e : lea rax, [rdx + 0xd] ; ret
0x000000000016b14e : lea rax, [rdx + 0xe] ; ret
0x000000000016afde : lea rax, [rdx + 0xf] ; ret
0x000000000016b006 : lea rax, [rdx + 1] ; ret
0x000000000016b01c : lea rax, [rdx + 2] ; ret
0x000000000016b034 : lea rax, [rdx + 3] ; ret
0x000000000016b04a : lea rax, [rdx + 4] ; ret
0x000000000016b05c : lea rax, [rdx + 5] ; ret
0x000000000016b07a : lea rax, [rdx + 6] ; ret
0x000000000016af86 : lea rax, [rdx + 7] ; ret
0x000000000016b08c : lea rax, [rdx + 8] ; ret
0x000000000016b0ac : lea rax, [rdx + 9] ; ret
0x000000000016aff4 : lea rax, [rdx] ; ret
0x000000000008bb59 : lea rax, [rip + 0x10] ; ret
0x000000000008f34f : lea rax, [rip + 0x10e4a] ; ret
0x000000000002cb38 : lea rax, [rip + 0x15ffe6] ; ret
0x0000000000020930 : lea rax, [rip + 0x16bd34] ; ret
0x0000000000020940 : lea rax, [rip + 0x16dc63] ; ret
0x000000000008bb0d : lea rax, [rip + 0x1713c] ; ret
0x00000000000898ad : lea rax, [rip + 0x1777c] ; ret
0x000000000008f1e9 : lea rax, [rip + 0x1b330] ; ret
0x000000000008ebc3 : lea rax, [rip + 0x26] ; ret
0x000000000012b9b8 : lea rax, [rip + 0x29d381] ; pop rbx ; ret
0x000000000012b980 : lea rax, [rip + 0x29d3b9] ; pop rbx ; ret
0x000000000012b8c1 : lea rax, [rip + 0x29d478] ; pop rbx ; ret
0x00000000000fe32d : lea rax, [rip + 0x2c8c64] ; ret
0x00000000000fe16d : lea rax, [rip + 0x2c8e24] ; ret
0x000000000006ac83 : lea rax, [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116270 : lea rax, [rip + 0x37c19] ; ret
0x0000000000116360 : lea rax, [rip + 0x37ec9] ; ret
0x000000000012b0f0 : lea rax, [rip + 0x61a2e] ; ret
0x000000000008f9e9 : lea rax, [rip + 0x80] ; ret
0x000000000009443e : lea rax, [rip + 0xb3db] ; ret
0x000000000009440f : lea rax, [rip + 0xb63a] ; ret
0x0000000000094452 : lea rax, [rip + 0xbcb47] ; ret
0x000000000008da9a : lea rax, [rip + 0xbcdbf] ; ret
0x000000000008d70a : lea rax, [rip + 0xbd01f] ; ret
0x000000000008f390 : lea rax, [rip + 0xbeea9] ; ret
0x000000000008b29a : lea rax, [rip + 0xbf34f] ; ret
0x00000000000abc9b : lea rax, [rip + 0xc210e] ; ret
0x00000000000ac877 : lea rax, [rip + 0xc31f2] ; ret
0x00000000000ac87f : lea rax, [rip + 0xc5aaa] ; ret
0x0000000000089cfd : lea rax, [rip + 0xc] ; ret
0x000000000008d3ed : lea rax, [rip + 0xd99dc] ; ret
0x000000000008fa4c : lea rax, [rip + 0xd] ; ret
0x000000000008f87d : lea rax, [rip + 0xda0cc] ; ret
0x000000000008b18d : lea rax, [rip + 0xda48c] ; ret
0x000000000008f99d : lea rax, [rip + 0xdb7bc] ; ret
0x000000000008ebd7 : lea rax, [rip + 0xdf852] ; ret
0x000000000008ebdf : lea rax, [rip + 0xe1fda] ; ret
0x0000000000089a9a : lea rax, [rip + 0xe6dff] ; ret
0x00000000000ac863 : lea rax, [rip + 0xe916] ; ret
0x00000000000abc93 : lea rax, [rip + 0xf596] ; ret
0x00000000001163a9 : lea rax, [rip - 0x6bea0] ; ret
0x000000000011631f : lea rax, [rip - 0x76196] ; ret
0x000000000011622f : lea rax, [rip - 0x767f6] ; ret
0x00000000000ac579 : lea rax, es:[rdi - 0x10] ; ret
0x0000000000047070 : lea rbx, [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a5bed : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000acbb2 : lea rcx, [rax + 1] ; call rbx
0x00000000000accdd : lea rcx, [rax + 4] ; call rbx
0x00000000000ad11d : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000beb63 : lea rcx, [rax + r12] ; mov rdx, rax ; jmp 0xbeb76
0x00000000000705c5 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000088850 : lea rcx, [rip + 0x1042ce] ; mov rdx, rcx ; jmp 0x88827
0x000000000010ada6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000132e2d : lea rdi, [rbp + 0x10] ; call rax
0x0000000000135a31 : lea rdi, [rbx + 0x58] ; call rax
0x0000000000135011 : lea rdi, [rbx + 0x68] ; call rax
0x0000000000132294 : lea rdi, [rbx + 0xc8] ; call rax
0x000000000008f425 : lea rdi, [rdi + 0x10] ; jne 0x8f419 ; mov rax, rdi ; ret
0x00000000000944e5 : lea rdi, [rdi + 0x10] ; jne 0x944d7 ; ret
0x000000000004b510 : lea rdi, [rip + 0x1451e9] ; call 0x777f9
0x0000000000029cd2 : lea rdi, [rip + 0x166467] ; mov eax, ecx ; syscall
0x0000000000120710 : lea rdi, [rip + 0x2a7fe5] ; call rax
0x000000000011feb1 : lea rdi, [rip + 0x2a87e8] ; call rax
0x0000000000105acc : lea rdi, [rip + 0x88e77] ; mov eax, ebx ; syscall
0x0000000000105a9b : lea rdi, [rip + 0x88e9d] ; mov eax, ebx ; syscall
0x0000000000101553 : lea rdi, [rip + 0x8b122] ; mov eax, ecx ; syscall
0x0000000000115b46 : lea rdi, [rip - 0x16d] ; call rax
0x00000000000f6ad4 : lea rdi, [rsp + 0xc] ; call rax
0x00000000001510f3 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000010ab82 : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001514e7 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000000f2d5e : lea rsi, [rax + 1] ; mov qword ptr [rcx], rax ; call 0x1f7f9
0x00000000000450de : lea rsi, [rip + 0x1cb] ; call rax
0x0000000000141ac5 : lea rsi, [rip + 0x287654] ; xor eax, eax ; syscall
0x000000000006f219 : lea rsi, [rip + 0x30] ; call rax
0x000000000007bf09 : lea rsi, [rip - 0x15e0] ; call rax
0x000000000007c2f9 : lea rsi, [rip - 0x19d0] ; call rax
0x000000000007c749 : lea rsi, [rip - 0x1e20] ; call rax
0x000000000006f512 : lea rsi, [rip - 0x2c9] ; call rax
0x000000000007ac39 : lea rsi, [rip - 0x310] ; call rax
0x000000000007aea9 : lea rsi, [rip - 0x580] ; call rax
0x000000000013b23c : lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a4 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000013b5e9 : lea rsi, [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013abac : lea rsi, [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c1 : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000150ca7 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001978f5 : leave ; add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x00000000000dc5cb : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000019a29d : leave ; add dword ptr [rax], eax ; test bl, bh ; idiv edi ; push rsp ; retf 1
0x000000000019baad : leave ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x0000000000146687 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010d8bc : leave ; call 0x12a393
0x0000000000029a74 : leave ; call r15
0x0000000000002bec : leave ; clc ; ret
0x000000000019b6e1 : leave ; cli ; jmp rsp
0x000000000008d7b6 : leave ; cmove rax, rdx ; ret
0x000000000014a6a1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000188ef1 : leave ; inc dword ptr [rcx] ; retf 0xfff3
0x000000000011ce57 : leave ; je 0x11ce34 ; test byte ptr [rax + rbx*2 + 1], 0x20 ; jne 0x11ce34 ; jmp 0x11ce01
0x000000000002b395 : leave ; je 0x2b39d ; call rcx
0x000000000006b459 : leave ; je 0x6b464 ; ret
0x000000000012668c : leave ; jne 0x1265db ; ret
0x000000000009eb29 : leave ; jne 0x9eb1c ; ret
0x000000000009ec68 : leave ; jne 0x9ec5d ; xor eax, eax ; ret
0x00000000000aa160 : leave ; jne 0xaa153 ; ret
0x00000000000aa210 : leave ; jne 0xaa203 ; ret
0x00000000000aa4d0 : leave ; jne 0xaa4c7 ; sub rax, 1 ; ret
0x00000000000ac60c : leave ; jne 0xac604 ; ret
0x00000000000ada8a : leave ; jne 0xada47 ; mov rax, rdx ; ret
0x000000000014a668 : leave ; lea rax, [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a56d1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034a71 : leave ; mov dword ptr [rdi], ecx ; ret
0x00000000000aae14 : leave ; mov dword ptr [rdx], ecx ; jne 0xaae0e ; ret
0x000000000009ea2f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e98f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000218e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000b5862 : leave ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000012ddb3 : leave ; pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000042351 : leave ; ret
0x0000000000184dd4 : leave ; retf
0x00000000001835a1 : leave ; retf 0x6ee8
0x0000000000181d49 : leave ; retf 0xcccb
0x000000000019ae69 : leave ; stc ; call rsp
0x00000000001953ad : leave ; sti ; jmp qword ptr [rax]
0x000000000008958b : leave ; test eax, 0x89480033 ; add al, 0x24 ; call qword ptr [rdx]
0x00000000000ad075 : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000018a8cf : ljmp [rax + 0x22fff67a] ; jl 0x18a8d5 ; jmp qword ptr [rdx]
0x000000000018c19b : ljmp [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x0000000000189063 : ljmp [rax + 0x42fff3cb] ; fdivr st(3), st(0) ; jmp rcx
0x000000000018781b : ljmp [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000199003 : ljmp [rax + rbp*2 + 0x44740001] ; cmc ; jmp rsp
0x00000000001953cf : ljmp [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000187817 : ljmp [rax] ; push rsp ; out dx, al ; ljmp [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000187b4b : ljmp [rax] ; ret
0x000000000019847b : ljmp [rbp + rdx + 1] ; add byte ptr [rbx + rsi*8 - 0x10], dl ; jmp rsp
0x000000000018a8a3 : ljmp [rbx + 0x7a] ; idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a8a9 ; jmp qword ptr [rdx]
0x000000000019b30b : ljmp [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x0000000000186c77 : ljmp [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186c73 : ljmp [rbx - 0x2e] ; in eax, dx ; ljmp [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000198ac3 : ljmp [rcx + rax*2 + 0x46940001] ; jmp rsp
0x00000000001882c7 : ljmp [rcx + rbp] ; bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x0000000000195a0f : ljmp [rcx + rdx*2] ; cld ; call rdx
0x000000000018a4f5 : ljmp [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000188ae3 : ljmp [rcx] ; mov ebx, 0xaa49fff3 ; call rsp
0x0000000000181e43 : ljmp [rcx] ; sbb ebx, ebp ; jmp qword ptr [rdi]
0x0000000000197e13 : ljmp [rdi + 0x70d40000] ; out dx, al ; jmp rsp
0x000000000019ace3 : ljmp [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x0000000000195e37 : ljmp [rdx + 0x3afffc83] ; cmp esp, -1 ; retf 0xfc82
0x000000000018875b : ljmp [rdx - 0x7d] ; call qword ptr [rdx]
0x0000000000186a27 : ljmp [rdx] ; movsxd rbp, ebp ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x000000000018a8af : ljmp [rsi + 0x22fff679] ; jl 0x18a8b5 ; jmp qword ptr [rdx]
0x000000000018a94b : ljmp [rsi + 0x22fff679] ; jl 0x18a951 ; jmp qword ptr [rdx]
0x000000000019b4a3 : ljmp [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b4ad ; call rsp
0x000000000012ffd0 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000006d713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x000000000016e80e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001aabdd : lock add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000010de4e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x0000000000086644 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fc1d4 : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000012252f : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000019b30c : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x0000000000145780 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019751d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x00000000001a682d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x0000000000171da0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000198ac4 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], eax ; xchg eax, esp ; jmp rsp
0x00000000001b0ae4 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0063
0x0000000000143a2c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003ea8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c11 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b67c2 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e072a : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000013c84a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000196221 : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x0000000000196165 : lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000188aa1 : lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000196ddc : lodsb al, byte ptr [rsi] ; jg 0x196de6 ; add ah, al ; add ebp, edx ; jmp rsp
0x0000000000184cc6 : lodsb al, byte ptr [rsi] ; loop 0x184c93 ; retf
0x00000000001a6be4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001047f8 : lodsb al, byte ptr [rsi] ; mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x104808 ; call rbx
0x0000000000199f64 : lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000007b2d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008d7d8 : lodsb al, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000145da4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185a7d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000197e14 : lodsb al, byte ptr [rsi] ; out 0, eax ; add ah, dl ; jo 0x197e10 ; jmp rsp
0x0000000000199004 : lodsb al, byte ptr [rsi] ; push 0x44740001 ; cmc ; jmp rsp
0x00000000001b0fe4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fe7 ; jmp qword ptr [rbx]
0x0000000000197834 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000039978 : lodsb al, byte ptr [rsi] ; ret 0x38
0x000000000019a0f4 : lodsb al, byte ptr [rsi] ; ret 1
0x000000000006b10b : lodsb al, byte ptr [rsi] ; retf
0x0000000000019150 : lodsb al, byte ptr [rsi] ; retf 0x18
0x0000000000109632 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000109625 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001095b1 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x1095be ; pop rbp ; ret
0x0000000000109563 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001832fb : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000000892d4 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000004617c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae466 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000019621d : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000196199 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rsi]
0x0000000000196359 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000196355 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000001962d9 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x00000000001b0778 : lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000000f82ff : lodsd eax, dword ptr [rsi] ; mov eax, 0x5c ; syscall
0x00000000001850a5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000aca39 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x0000000000149910 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008041b : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000048af2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000019ca8 : lodsd eax, dword ptr [rsi] ; retf
0x000000000008921c : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000ae465 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000104aca : loop 0x104a58 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001179d7 : loop 0x1179df ; jmp 0x94474
0x000000000013033c : loop 0x1303c6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000137626 : loop 0x1375b8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001377b9 : loop 0x13774b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015abca : loop 0x15abc5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abc9 : loop 0x15abc6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d69a : loop 0x15d695 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d699 : loop 0x15d696 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001601ba : loop 0x1601b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001601b9 : loop 0x1601b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000184cc7 : loop 0x184c92 ; retf
0x0000000000185e1a : loop 0x185e6f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000186ce5 : loop 0x186cd6 ; jmp qword ptr [rcx]
0x0000000000189588 : loop 0x189516 ; hlt ; jmp rdx
0x000000000018958c : loop 0x18951a ; hlt ; jmp rdx
0x0000000000189590 : loop 0x18951e ; hlt ; jmp rdx
0x0000000000189594 : loop 0x189522 ; hlt ; jmp rdx
0x0000000000189598 : loop 0x189526 ; hlt ; jmp rdx
0x000000000018959c : loop 0x18952a ; hlt ; jmp rdx
0x00000000001895a0 : loop 0x18952e ; hlt ; jmp rdx
0x00000000001895a4 : loop 0x189532 ; hlt ; call rsp
0x00000000001895b0 : loop 0x18953e ; hlt ; jmp rdx
0x00000000001895b4 : loop 0x189542 ; hlt ; jmp rdx
0x00000000001895b8 : loop 0x189546 ; hlt ; jmp rdx
0x00000000001895bc : loop 0x18954a ; hlt ; jmp rdx
0x00000000001895c0 : loop 0x18954e ; hlt ; jmp rdx
0x00000000001895c4 : loop 0x189552 ; hlt ; jmp rdx
0x00000000001895c8 : loop 0x189556 ; hlt ; jmp rdx
0x00000000001895cc : loop 0x18955a ; hlt ; jmp rdx
0x00000000001895d0 : loop 0x18955e ; hlt ; jmp rdx
0x00000000001895d4 : loop 0x189562 ; hlt ; jmp rdx
0x00000000001895d8 : loop 0x189566 ; hlt ; jmp rdx
0x00000000001895dc : loop 0x18956a ; hlt ; jmp rdx
0x00000000001895e0 : loop 0x18956e ; hlt ; jmp rdx
0x00000000001895e4 : loop 0x189572 ; hlt ; jmp rdx
0x00000000001895e8 : loop 0x189576 ; hlt ; jmp rdx
0x00000000001895ec : loop 0x18957a ; hlt ; jmp rdx
0x00000000001895f0 : loop 0x18957e ; hlt ; jmp rdx
0x00000000001895f4 : loop 0x189582 ; hlt ; jmp rdx
0x000000000018a84c : loop 0x18a8d1 ; idiv bh ; pop rsp ; jle 0x18a850 ; jmp rdx
0x000000000018a854 : loop 0x18a8d9 ; idiv bh ; jle 0x18a858 ; jmp rdx
0x0000000000194fb8 : loop 0x194f5e ; std ; jmp rdx
0x00000000001952a9 : loop 0x1952a8 ; jmp rax
0x0000000000195309 : loop 0x195308 ; jmp qword ptr [rax]
0x0000000000197d1d : loop 0x197d25 ; add byte ptr [rdx], ah ; out dx, al ; call rsp
0x00000000001aeb39 : loop 0x1aeb31 ; jmp qword ptr [rcx]
0x00000000001b5ae9 : loop 0x1b5ae3 ; call rcx
0x00000000000025e5 : loop 0x25bf ; ret 0x23cb
0x0000000000002bfa : loop 0x2c0d ; retf
0x000000000003a689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000055d0d : loop 0x55c9a ; ret
0x000000000005f10b : loop 0x5f114 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a8
0x0000000000065891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006bcc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000759b4 : loop 0x759bb ; mov eax, edx ; ret
0x0000000000075aa4 : loop 0x75aab ; mov eax, edx ; ret
0x000000000008699d : loop 0x869f0 ; mov esi, ebx ; mov rdi, rbp ; call 0x82bd9
0x0000000000087bf4 : loop 0x87c46 ; mov edi, edi ; call rax
0x000000000009f80d : loop 0x9f845 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a684a : loop 0xa6855 ; add byte ptr [rax], al ; ret
0x00000000000aac55 : loop 0xaac6f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ad28f : loop 0xad2e6 ; lea ecx, [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad558 : loop 0xad5af ; lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000c1cef : loop 0xc1cf5 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e515f : loop 0xe5164 ; add esi, esi ; ret
0x00000000000e7a03 : loop 0xe7a0b ; call 0x94474
0x00000000000e7a3c : loop 0xe7a44 ; call 0x94474
0x00000000000edc76 : loop 0xedc89 ; retf 0x5089
0x00000000000eeb42 : loop 0xeeacb ; ret 0x850f
0x00000000000fd9e9 : loop 0xfda39 ; mov edi, ebx ; call 0x11a426
0x00000000001046c3 : loope 0x10467e ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000111116 : loope 0x111124 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000112290 : loope 0x1122dc ; mov eax, 1 ; call 0x10ed29
0x000000000012ff6e : loope 0x12ff76 ; add bh, bh ; add byte ptr [rax + 0x31], cl ; retf 0xc148
0x000000000013225e : loope 0x1321f3 ; ret
0x000000000015ab3a : loope 0x15ab35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ab39 : loope 0x15ab36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d60a : loope 0x15d605 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d609 : loope 0x15d606 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016012a : loope 0x160125 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160129 : loope 0x160126 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000168c3b : loope 0x168c42 ; add byte ptr [rax], al ; ret
0x0000000000170acb : loope 0x170ad5 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000174326 : loope 0x174385 ; ret
0x0000000000184dd1 : loope 0x184e53 ; pop rdx ; leave ; retf
0x00000000001860f9 : loope 0x1860fc ; jmp qword ptr [rdi]
0x0000000000186179 : loope 0x18617c ; jmp qword ptr [rdi]
0x00000000001861f9 : loope 0x1861fc ; jmp qword ptr [rdi]
0x0000000000186279 : loope 0x18627c ; jmp qword ptr [rdi]
0x00000000001862f9 : loope 0x1862fc ; jmp qword ptr [rdi]
0x0000000000186379 : loope 0x18637c ; jmp qword ptr [rdi]
0x000000000018906c : loope 0x189034 ; call rsi
0x000000000018abc9 : loope 0x18abd3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000195285 : loope 0x195284 ; call qword ptr [rax]
0x0000000000195329 : loope 0x195328 ; jmp rax
0x0000000000196b99 : loope 0x196b86 ; call rsp
0x0000000000197ced : loope 0x197cf5 ; add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x00000000001b64a9 : loope 0x1b64a8 ; call rsi
0x000000000001fa6e : loope 0x1fa8e ; add byte ptr [rax + 2], bh ; syscall
0x00000000000026ba : loope 0x2675 ; hlt ; out 0xdf, eax ; syscall
0x0000000000035d6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x000000000000369a : loope 0x36c0 ; retf 0x5038
0x0000000000048987 : loope 0x489d9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000489b8 : loope 0x48a0b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000048a2d : loope 0x48a80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000758c1 : loope 0x75896 ; mov dword ptr [rdi], ecx ; ret
0x00000000000948eb : loope 0x948fd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094a92 : loope 0x94ae9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000094b5b : loope 0x94b6d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000aa059 : loope 0xaa0c8 ; nop dword ptr [rax + rax] ; ret
0x00000000000aac97 : loope 0xaac58 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aad7e : loope 0xaad75 ; ret
0x00000000000abf1e : loope 0xabf33 ; je 0xabf44 ; ret
0x00000000000b1946 : loope 0xb1951 ; add byte ptr [rax], al ; call 0x2dc46
0x00000000000c89bd : loope 0xc894a ; ret 0xf631
0x00000000000d72b9 : loope 0xd72be ; add esi, esi ; ret
0x00000000000e1154 : loope 0xe115b ; add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000fd88d : loope 0xfd894 ; mov eax, 0xa9 ; syscall
0x0000000000101e60 : loopne 0x101e66 ; jmp 0x101e2a
0x0000000000105f6e : loopne 0x105fd4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a47e : loopne 0x10a484 ; ret
0x000000000010a49a : loopne 0x10a4a9 ; movzx eax, ax ; ret
0x000000000010a50e : loopne 0x10a514 ; ret
0x000000000010a5ae : loopne 0x10a5b4 ; ret
0x000000000010a5ca : loopne 0x10a5cf ; ret
0x000000000010a63e : loopne 0x10a644 ; ret
0x000000000010a65a : loopne 0x10a663 ; movzx eax, ax ; ret
0x000000000010a6ce : loopne 0x10a6d4 ; ret
0x000000000010a75e : loopne 0x10a764 ; ret
0x000000000010a7fe : loopne 0x10a804 ; ret
0x000000000010a89e : loopne 0x10a8a4 ; ret
0x000000000010a93e : loopne 0x10a944 ; ret
0x000000000010a95a : loopne 0x10a965 ; movzx eax, ax ; ret
0x000000000010a9ce : loopne 0x10a9d4 ; ret
0x000000000010aa69 : loopne 0x10aa6f ; ret
0x000000000010aafe : loopne 0x10ab04 ; ret
0x000000000010acda : loopne 0x10ace0 ; ret
0x000000000010ae20 : loopne 0x10ae26 ; ret
0x000000000010ae33 : loopne 0x10ae42 ; movzx eax, ax ; ret
0x000000000010aea0 : loopne 0x10aea6 ; ret
0x000000000010af20 : loopne 0x10af26 ; ret
0x000000000010af33 : loopne 0x10af38 ; ret
0x000000000010afa0 : loopne 0x10afa6 ; ret
0x000000000010afb3 : loopne 0x10afbc ; movzx eax, ax ; ret
0x000000000010b020 : loopne 0x10b026 ; ret
0x000000000010b0a0 : loopne 0x10b0a6 ; ret
0x000000000010b120 : loopne 0x10b126 ; ret
0x000000000010b1a0 : loopne 0x10b1a6 ; ret
0x000000000010b220 : loopne 0x10b226 ; ret
0x000000000010b233 : loopne 0x10b23e ; movzx eax, ax ; ret
0x000000000010b2a0 : loopne 0x10b2a6 ; ret
0x000000000010b31d : loopne 0x10b323 ; ret
0x000000000010b3a0 : loopne 0x10b3a6 ; ret
0x000000000010b54a : loopne 0x10b550 ; ret
0x0000000000114a2b : loopne 0x114a30 ; ret
0x0000000000115158 : loopne 0x11516d ; cmp eax, 4 ; je 0x115167 ; ret
0x0000000000115329 : loopne 0x11533c ; pop rbp ; pop r12 ; ret
0x0000000000115b45 : loopne 0x115b97 ; lea edi, [rip - 0x16d] ; call rax
0x0000000000123024 : loopne 0x123023 ; add eax, 0x10 ; ret
0x000000000012415b : loopne 0x124168 ; cdqe ; shr rax, 4 ; ret
0x00000000001383a7 : loopne 0x1383b0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c701 : loopne 0x13c771 ; nop dword ptr [rax + rax] ; ret
0x000000000014da72 : loopne 0x14da3f ; jp 0x14dafb ; jp 0x14da6e ; ret
0x000000000014df62 : loopne 0x14df2f ; jp 0x14dfeb ; jp 0x14df5e ; ret
0x000000000014e305 : loopne 0x14e2d2 ; jp 0x14e38e ; jp 0x14e301 ; ret
0x0000000000151541 : loopne 0x151558 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151540 : loopne 0x151559 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151691 : loopne 0x1516a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151690 : loopne 0x1516a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517e1 : loopne 0x1517f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517e0 : loopne 0x1517f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151931 : loopne 0x151948 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151930 : loopne 0x151949 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a81 : loopne 0x151a98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a80 : loopne 0x151a99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bd1 : loopne 0x151be8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bd0 : loopne 0x151be9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d21 : loopne 0x151d38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d20 : loopne 0x151d39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e6f : loopne 0x151e86 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e6e : loopne 0x151e87 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fc1 : loopne 0x151fd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fc0 : loopne 0x151fd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152111 : loopne 0x152128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152110 : loopne 0x152129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152261 : loopne 0x152278 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152260 : loopne 0x152279 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001523b1 : loopne 0x1523c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001523b0 : loopne 0x1523c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152501 : loopne 0x152518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152500 : loopne 0x152519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152651 : loopne 0x152668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152650 : loopne 0x152669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001527a1 : loopne 0x1527b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001527a0 : loopne 0x1527b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f11 : loopne 0x153f28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f10 : loopne 0x153f29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154061 : loopne 0x154078 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154060 : loopne 0x154079 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541b1 : loopne 0x1541c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541b0 : loopne 0x1541c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154301 : loopne 0x154318 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154300 : loopne 0x154319 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154451 : loopne 0x154468 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154450 : loopne 0x154469 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545a1 : loopne 0x1545b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545a0 : loopne 0x1545b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546f1 : loopne 0x154708 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546f0 : loopne 0x154709 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015483f : loopne 0x154856 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015483e : loopne 0x154857 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154991 : loopne 0x1549a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154990 : loopne 0x1549a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ae1 : loopne 0x154af8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ae0 : loopne 0x154af9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154c31 : loopne 0x154c48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154c30 : loopne 0x154c49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d81 : loopne 0x154d98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d80 : loopne 0x154d99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ed1 : loopne 0x154ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ed0 : loopne 0x154ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155021 : loopne 0x155038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155020 : loopne 0x155039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155171 : loopne 0x155188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155170 : loopne 0x155189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001563f4 : loopne 0x1563d9 ; add byte ptr es:[rax + 0x39], cl ; retf 0x8949
0x00000000001568e1 : loopne 0x1568f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568e0 : loopne 0x1568f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a31 : loopne 0x156a48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a30 : loopne 0x156a49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b81 : loopne 0x156b98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b80 : loopne 0x156b99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cd1 : loopne 0x156ce8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cd0 : loopne 0x156ce9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e21 : loopne 0x156e38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e20 : loopne 0x156e39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f71 : loopne 0x156f88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f70 : loopne 0x156f89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570c1 : loopne 0x1570d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570c0 : loopne 0x1570d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015720f : loopne 0x157226 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015720e : loopne 0x157227 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157361 : loopne 0x157378 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157360 : loopne 0x157379 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001574b1 : loopne 0x1574c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001574b0 : loopne 0x1574c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157601 : loopne 0x157618 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157600 : loopne 0x157619 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157751 : loopne 0x157768 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157750 : loopne 0x157769 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001578a1 : loopne 0x1578b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001578a0 : loopne 0x1578b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579f1 : loopne 0x157a08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579f0 : loopne 0x157a09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b41 : loopne 0x157b58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b40 : loopne 0x157b59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000172ae5 : loopne 0x172b36 ; sub eax, edx ; vzeroupper ; ret
0x0000000000172ae4 : loopne 0x172b37 ; sub eax, edx ; vzeroupper ; ret
0x00000000001833f4 : loopne 0x1833d4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000186e11 : loopne 0x186e02 ; jmp qword ptr [rcx]
0x0000000000186e1d : loopne 0x186e0e ; jmp qword ptr [rcx]
0x0000000000186e25 : loopne 0x186e16 ; jmp qword ptr [rcx]
0x0000000000187df0 : loopne 0x187ddf ; int1 ; call qword ptr [rax]
0x0000000000187e78 : loopne 0x187e6e ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187f78 : loopne 0x187f7d ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000188030 : loopne 0x18803a ; push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000188030 : loopne 0x18803b ; push rax ; add dh, dl ; call qword ptr [rax]
0x000000000018b0a0 : loopne 0x18b0cd ; cli ; call qword ptr [rax]
0x0000000000194e84 : loopne 0x194ea2 ; sti ; call rax
0x0000000000194f48 : loopne 0x194fbf ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x00000000001952a4 : loopne 0x195289 ; sti ; jmp rax
0x00000000001952a8 : loopne 0x19528f ; sti ; jmp rax
0x00000000001952a5 : loopne 0x1952a4 ; jmp rax
0x0000000000195305 : loopne 0x195304 ; jmp qword ptr [rax]
0x0000000000195324 : loopne 0x195308 ; sti ; jmp rax
0x0000000000195328 : loopne 0x19530e ; sti ; jmp rax
0x000000000019532c : loopne 0x195318 ; sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019538c : loopne 0x195364 ; sti ; jmp qword ptr [rax]
0x00000000001954fc : loopne 0x195504 ; cld ; call rax
0x0000000000195e88 : loopne 0x195e12 ; cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x000000000019610c : loopne 0x196180 ; cld ; jmp qword ptr [rax]
0x0000000000197cc5 : loopne 0x197ccd ; add ah, dl ; pop rax ; out dx, al ; call rsp
0x00000000001a52d9 : loopne 0x1a52e5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00000000001af3c0 : loopne 0x1af3c2 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0a10 : loopne 0x1b0a83 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0dd0 : loopne 0x1b0e48 ; cmc ; jmp qword ptr [rcx]
0x00000000001bc6ca : loopne 0x1bc6d9 ; ret 0xb
0x00000000001bc722 : loopne 0x1bc730 ; ret 0xa
0x000000000002dd13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x000000000002dd53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x000000000002ddf3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x000000000002ded3 : loopne 0x2ded8 ; ret
0x000000000002df4c : loopne 0x2df51 ; ret
0x000000000002df5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x000000000002df9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x000000000002df23 : loopne 0x2dfa6 ; ret
0x000000000002e03c : loopne 0x2e047 ; movzx eax, ax ; ret
0x0000000000034e75 : loopne 0x34e81 ; ret
0x0000000000035187 : loopne 0x3516e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000036084 : loopne 0x360d4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000045a25 : loopne 0x45a4a ; or eax, edx ; ret
0x0000000000045ce4 : loopne 0x45d26 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000046072 : loopne 0x4608c ; test ch, bh ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000004846d : loopne 0x48476 ; sub eax, 1 ; ret
0x0000000000052fc5 : loopne 0x52f52 ; ret 0xe680
0x0000000000054f3e : loopne 0x54ecb ; ret 0xe680
0x0000000000005ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000006c47b : loopne 0x6c4dd ; pop rbp ; pop r12 ; ret
0x000000000006c4a5 : loopne 0x6c507 ; pop rbp ; pop r12 ; ret
0x000000000006cb8b : loopne 0x6cbed ; pop rbp ; pop r12 ; ret
0x000000000006cc0d : loopne 0x6cc6f ; pop rbp ; pop r12 ; ret
0x000000000006dd9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x000000000006ddd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x000000000006de2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x000000000006de6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x000000000006de71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007206e : loopne 0x72007 ; mov eax, 0xffffffff ; ret
0x00000000000779c8 : loopne 0x77a2a ; pop rbp ; pop r12 ; ret
0x0000000000077f06 : loopne 0x77f0b ; ret
0x0000000000077f16 : loopne 0x77f1b ; ret
0x0000000000078fb9 : loopne 0x79020 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079067 : loopne 0x790ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f09d : loopne 0x8f101 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f132 : loopne 0x8f196 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094d5d : loopne 0x94db5 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a47 : loopne 0x96a9d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a4a : loopne 0x96aac ; pop rbp ; pop r12 ; ret
0x00000000000a694c : loopne 0xa6956 ; add byte ptr [rax], al ; ret
0x00000000000aac8d : loopne 0xaaca7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000bea6c : loopne 0xbea0a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000000c428 : loopne 0xc3e2 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cd6b0 : loopne 0xcd716 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d17a2 : loopne 0xd1804 ; pop rbp ; pop r12 ; ret
0x00000000000d18a2 : loopne 0xd1904 ; pop rbp ; pop r12 ; ret
0x00000000000d6568 : loopne 0xd656d ; ret
0x00000000000d71e9 : loopne 0xd71f2 ; add eax, 8 ; ret
0x00000000000d7235 : loopne 0xd723b ; ret
0x00000000000d72e9 : loopne 0xd72ef ; pop rbx ; ret
0x00000000000d92a3 : loopne 0xd92b7 ; ret
0x00000000000d9b4d : loopne 0xd9bbe ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000019aa3c : mov ah, 0 ; add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x00000000001322f7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000019bbec : mov ah, 0 ; add byte ptr [rax], al ; push rax ; call 0x1b86fe
0x0000000000107bf1 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x00000000001acdec : mov ah, 0x12 ; add dword ptr [rax], eax ; add dl, bl ; jmp qword ptr [rcx]
0x0000000000182e0a : mov ah, 0x13 ; ret
0x000000000019d4ec : mov ah, 0x19 ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001ad7ec : mov ah, 0x1c ; add dword ptr [rax], eax ; nop ; xchg esp, esi ; call qword ptr [rax]
0x00000000000b5773 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0d8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000002671d : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000bc209 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00000000001aebec : mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x0000000000198a1c : mov ah, 0x3a ; add dword ptr [rax], eax ; add al, 0x24 ; jmp rsp
0x00000000001af9ec : mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b898 : mov ah, 0x40 ; sti ; call rsp
0x00000000001b05ec : mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000198ed4 : mov ah, 0x61 ; add dword ptr [rax], eax ; je 0x198ef5 ; cmc ; call rsp
0x00000000001b3bec : mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000195df8 : mov ah, 0x83 ; cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000001981e8 : mov ah, 0x91 ; out dx, eax ; jmp rsp
0x0000000000197630 : mov ah, 0x94 ; in eax, dx ; jmp rsp
0x000000000019ab0c : mov ah, 0xa ; add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x00000000001832b0 : mov ah, 0xa5 ; ret
0x00000000001962f0 : mov ah, 0xaa ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019751c : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000188ab4 : mov ah, 0xbb ; jmp rdx
0x0000000000197724 : mov ah, 0xbc ; add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001977d0 : mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000001978f4 : mov ah, 0xc9 ; add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x0000000000197924 : mov ah, 0xca ; add byte ptr [rax], al ; test ah, dh ; in eax, dx ; dec esp ; retf 0
0x0000000000197944 : mov ah, 0xcb ; add byte ptr [rax], al ; in al, 0xfa ; in eax, dx ; push rsp ; retf
0x000000000019a684 : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x000000000019a140 : mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000000b7c1b : mov ah, 0xe9 ; ret
0x0000000000197eac : mov ah, 0xee ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x0000000000188cc5 : mov ah, 0xf3 ; jmp qword ptr [rbx]
0x00000000000026bb : mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x00000000001b5479 : mov ah, 0xf6 ; call rsi
0x0000000000182c04 : mov ah, bl ; push rsi ; ret
0x00000000001895ad : mov ah, dh ; jmp rdx
0x00000000001a6bb5 : mov al, 0 ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000000ebf5e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000107921 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001a6c15 : mov al, 0 ; add byte ptr [rax], bh ; mov cl, 0xee ; call qword ptr [rax]
0x00000000001a6be5 : mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000187fd8 : mov al, 0 ; bnd jmp rax ; add dl, dh ; call qword ptr [rax]
0x00000000001bab20 : mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000000de2ec : mov al, 0x15 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000000028e8 : mov al, 0x1f ; retf
0x000000000012e13c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0f4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001358a9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cdcde : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000c52d5 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000013c6f8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000012674d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x000000000018957c : mov al, 0x52 ; hlt ; push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x00000000001b0560 : mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a9950 : mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x0000000000195970 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x0000000000195758 : mov al, 0x61 ; cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x00000000001b0790 : mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09e0 : mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x0000000000187bf4 : mov al, 0x6e ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001b0c50 : mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x0000000000001d94 : mov al, 0x72 ; retf
0x00000000001960c8 : mov al, 0x77 ; cld ; jmp qword ptr [rax]
0x0000000000195ec4 : mov al, 0x78 ; cld ; jmp qword ptr [rax]
0x0000000000195c84 : mov al, 0x82 ; cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x00000000000037d9 : mov al, 0x85 ; jbe 0x3788 ; outsb dx, byte ptr [rsi] ; retf
0x0000000000195e5c : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00000000001963cc : mov al, 0x9d ; cld ; jmp qword ptr [rsi]
0x00000000001bc6c5 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001950c0 : mov al, 0xa7 ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000019617c : mov al, 0xa9 ; cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000196354 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000001a5320 : mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000000d1fa8 : mov al, 0xe8 ; ret 0x42a
0x0000000000187e44 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00000000001850b6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000187eb8 : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000024315 : mov al, 0xf ; retf 0xd285
0x00000000001047ec : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001047f9 : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x104807 ; call rbx
0x00000000000fde53 : mov al, 0xf3 ; ret
0x00000000001a3fe5 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a9e05 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000188004 : mov al, 1 ; inc eax ; add edx, esi ; jmp rax
0x00000000001a4d80 : mov al, 2 ; std ; jmp rsp
0x00000000000a697c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000018808c : mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00000000000a657c : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001bc71d : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001a4615 : mov al, byte ptr [rax] ; add al, ch ; jae 0x1a460e ; call qword ptr [rcx]
0x00000000001a45a5 : mov al, byte ptr [rax] ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000000f6e11 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a2aab : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2ad9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2b5d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016aff0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000a2a85 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2a95 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000197665 : mov bh, 0 ; add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x000000000015b901 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000006b00b : mov bh, 0x35 ; add byte ptr [rax - 0x77], cl ; retf 0xd148
0x0000000000185140 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000002a21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000029d92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x000000000006caa0 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x0000000000033411 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x0000000000170968 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000000c8486 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000185418 : mov bh, 0x4e ; retf 0x9d7d
0x000000000002da67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001840e4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002dd16 : mov bh, 0xc0 ; ret
0x000000000011940c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000181d46 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x000000000019ecb9 : mov bh, 0xe9 ; call qword ptr [rdx]
0x000000000019add9 : mov bh, 0xf9 ; call rsp
0x0000000000003790 : mov bh, 0xfa ; add ebx, ebp ; in al, 0xee ; jne 0x377a ; ret 0x975
0x00000000001951ed : mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951e9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951c9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x0000000000195119 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951cd : mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019511d : mov bh, 0xfd ; jmp rcx
0x000000000019520d : mov bh, 0xfd ; lcall [rax] ; fdivr st(3) ; jmp rax
0x0000000000108a73 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a496 : mov bh, 4 ; js 0x10a426 ; loopne 0x10a4ad ; movzx eax, ax ; ret
0x000000000010a5c6 : mov bh, 4 ; js 0x10a553 ; loopne 0x10a5d3 ; ret
0x000000000010a656 : mov bh, 4 ; js 0x10a5e6 ; loopne 0x10a667 ; movzx eax, ax ; ret
0x000000000010a956 : mov bh, 4 ; js 0x10a8e6 ; loopne 0x10a969 ; movzx eax, ax ; ret
0x000000000010ae2f : mov bh, 4 ; js 0x10adbf ; loopne 0x10ae46 ; movzx eax, ax ; ret
0x000000000010af2f : mov bh, 4 ; js 0x10aebc ; loopne 0x10af3c ; ret
0x000000000010afaf : mov bh, 4 ; js 0x10af3f ; loopne 0x10afc0 ; movzx eax, ax ; ret
0x000000000010b22f : mov bh, 4 ; js 0x10b1bf ; loopne 0x10b242 ; movzx eax, ax ; ret
0x000000000002dd0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x000000000002dd4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x000000000002ddef : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x000000000002decf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x000000000002df48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x000000000002df58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x000000000002df98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x000000000002e038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x00000000001857f3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f5f31 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000076f91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000019ace9 : mov bh, cl ; call rsp
0x000000000018c195 : mov bh, dl ; call rax
0x000000000018c191 : mov bh, dl ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x0000000000107cb4 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x000000000017225e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006bc81 : mov bl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000018547b : mov bl, 0x29 ; retf 0xbf4b
0x00000000000ada8c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000000e513c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000001851c3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000185460 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000196791 : mov bl, 0xe8 ; call rsp
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001044fb : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010458e : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x10459c ; call rbx
0x0000000000199861 : mov bl, 0xf6 ; jmp rsp
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000f3521 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000008783c : mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000199f2d : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000056c80 : mov bl, 1 ; add byte ptr [rbx - 0x7bf00008], al ; retf
0x000000000005057d : mov bl, byte ptr [rsi - 0x76fffff6] ; ret 0xe680
0x0000000000188751 : mov bl, dh ; jmp rsi
0x0000000000182de1 : mov bx, 0xf32d ; retf
0x0000000000126751 : mov byte ptr [r11], 0 ; ret
0x0000000000082f10 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000007763c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff2c9 : mov byte ptr [r8 - 1], 0 ; ret
0x000000000002fa5c : mov byte ptr [rax + 0x39], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013d6fc : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000180c0c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x0000000000082f11 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000024208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000045af9 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007763d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff2ca : mov byte ptr [rax - 1], 0 ; ret
0x00000000001215b6 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010e74d : mov byte ptr [rax], 0x20 ; jmp 0x10e719
0x0000000000104c2e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000358d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001056b8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000a56d2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000004f2aa : mov byte ptr [rbp - 0x4e8], dl ; call 0x8b5a8
0x000000000004f2a9 : mov byte ptr [rbp - 0x4e8], r10b ; call 0x8b5a9
0x0000000000108f34 : mov byte ptr [rbp - 0x689], 0x73 ; syscall
0x00000000001b0638 : mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000fdc66 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000126752 : mov byte ptr [rbx], 0 ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000977a4 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x0000000000168cb3 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000168cd2 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000168d13 : mov byte ptr [rcx + 8], dl ; ret
0x000000000009ea33 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002be46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x0000000000110bc1 : mov byte ptr [rcx + rcx*4 - 0x3e], 0xf7 ; shr byte ptr [rcx], 1 ; retf 0xeec1
0x000000000018769c : mov byte ptr [rcx - 0x12], dl ; jmp rax
0x000000000009edeb : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed30 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009ee6a : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004821a : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x48219 ; xor eax, eax ; ret
0x000000000002d50c : mov byte ptr [rcx], 0x83 ; ret
0x00000000000e45f1 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00000000001a6a10 : mov byte ptr [rcx], al ; ret
0x0000000000168c90 : mov byte ptr [rcx], dl ; ret
0x00000000000a9d4a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a82eb : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000a6b0b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a9d5b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a74a8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000a5e38 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a9d60 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d82 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9da0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dc0 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a751e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000a5e8e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8371 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000a6b61 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a9de1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9de6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e02 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e22 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e42 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a83f3 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000a6be3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a9e63 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a75a0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000a5f10 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9e68 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e8a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f04 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f24 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f44 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a6ce5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a9f65 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9f6a : mov byte ptr [rdi + 0x21], ch ; ret
0x000000000015d24c : mov byte ptr [rdi + 0x26], ch ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000a9fba : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c90 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cae : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9cce : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cf0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d10 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d30 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc6 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000123c12 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000123c11 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000123de0 : mov byte ptr [rdi + 2], 0 ; jne 0x123e38 ; mov eax, r8d ; ret
0x000000000009ea73 : mov byte ptr [rdi + 2], 0 ; lea rax, [rdi + 2] ; ret
0x000000000009e9e3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a9bd8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a7356 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000a5d56 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8179 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000a6a29 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9be9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9bee : mov byte ptr [rdi + 3], ch ; ret
0x000000000009ea92 : mov byte ptr [rdi + 4], 0 ; lea rax, [rdi + 4] ; ret
0x000000000009ea02 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a9c06 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a7372 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000a5d72 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a81a7 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000a6a47 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9c17 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c1c : mov byte ptr [rdi + 5], ch ; ret
0x000000000009ea19 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a9c2e : mov byte ptr [rdi + 6], ch ; ret
0x0000000000130342 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a9c4c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d5940 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d5901 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d5970 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d5997 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d59e0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d59cd : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d5930 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d5910 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a9c58 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a5db3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a81f9 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000a6a89 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9c69 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9c6e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000123df6 : mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000185475 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000009e976 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000152b6b : mov byte ptr [rdi - 1], dl ; ret
0x00000000001bbf48 : mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc068 : mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9c0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d5960 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d59b9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a9bb2 : mov byte ptr [rdi], ch ; ret
0x000000000009fbc2 : mov byte ptr [rdi], cl ; ret
0x000000000009e911 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a7330 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000a5d30 : mov byte ptr [rdi], dh ; ret
0x00000000000a8152 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000a6a02 : mov byte ptr [rdi], dl ; ret
0x00000000000a9bc2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a585a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016b019 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000a2aae : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016b047 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000a2adc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a57f0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2b60 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000018a910 : mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000011d0d8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105e31 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b90ad : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x000000000016aff2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000a2a87 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000713fa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x0000000000077f3a : mov byte ptr [rdx], bh ; ret
0x0000000000103604 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000713f9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000077f39 : mov byte ptr [rdx], dil ; ret
0x000000000002cae8 : mov byte ptr [rip + 0x398faf], dl ; ret
0x0000000000002478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000012413b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x000000000012413a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00000000000959b4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x959a7 ; ret
0x000000000004a773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x000000000004a6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x00000000000fc548 : mov byte ptr [rsp - 0x58], al ; mov eax, ebx ; syscall
0x000000000007550f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000140694 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x00000000000026a2 : mov ch, 0x24 ; retf 0x54da
0x0000000000182c02 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000183f43 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000184bd6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001852df : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000185c8a : mov ch, 0xab ; ret
0x000000000000378f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, 0xee ; jne 0x377b ; ret 0x975
0x00000000001742e7 : mov ch, 0xea ; push rbx ; ret
0x00000000001b1e59 : mov ch, 0xf5 ; call rdi
0x00000000001a7ba9 : mov ch, 0xfb ; call qword ptr [rax]
0x0000000000199f65 : mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x00000000001bdf50 : mov ch, 3 ; add byte ptr [rax], al ; test al, 8 ; add byte ptr [rax], al ; retf
0x0000000000001b6c : mov ch, 4 ; retf
0x000000000016f386 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001975c5 : mov cl, 0 ; add byte ptr [rax + rax*4 - 0x13], ah ; jmp rsp
0x0000000000107a41 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x000000000008eadb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a6d05 : mov cl, 0 ; add byte ptr [rax], bl ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001095ae : mov cl, 0x15 ; mov word ptr [rbx + rbp + 0x5d027400], gs ; ret
0x000000000017435a : mov cl, 0x15 ; sbb byte ptr [rip + 0x1740025], ah ; ret
0x0000000000003bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000caaa6 : mov cl, 0x35 ; insb byte ptr [rdi], dx ; ret 0x2f
0x0000000000039976 : mov cl, 0x35 ; lodsb al, byte ptr [rsi] ; ret 0x38
0x000000000007ef57 : mov cl, 0x35 ; ret
0x00000000001288f8 : mov cl, 0x35 ; ret 0x2a03
0x000000000012092f : mov cl, 0x35 ; retf
0x0000000000083f10 : mov cl, 0x35 ; retf 0x3428
0x00000000001856e1 : mov cl, 0x3f ; retf
0x0000000000002be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000c78ae : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000142fe0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001a6c19 : mov cl, 0xee ; call qword ptr [rax]
0x00000000001046a9 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001046c4 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001046b6 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x1046c4 ; call rbx
0x00000000000d64e9 : mov cl, byte ptr [rax + 0x39] ; ret
0x000000000002c852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000079b09 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000f2e5f : mov cl, byte ptr [rax + 1] ; retf 0xe2ff
0x0000000000091c75 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009e993 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000089d94 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000001850b2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009fbc0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000abf1b : mov cl, dl ; and cl, 0xf ; je 0xabf47 ; ret
0x000000000018536c : mov cs, edi ; ret 0x8b36
0x0000000000087b71 : mov cs, word ptr [rax - 0x77] ; retf
0x000000000014b1de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000a5d50 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001bd784 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001406e4 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x000000000007a60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d6 : mov dh, 0 ; pop rbx ; ret
0x0000000000077f63 : mov dh, 0 ; ret
0x00000000000991f6 : mov dh, 0x14 ; xor eax, dword ptr [rbp + 0x38] ; retf 0x820f
0x000000000015b971 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008ecc4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033bd0 : mov dh, 0x17 ; test dl, dl ; jne 0x33bb6 ; ret
0x00000000000e3a9a : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000025944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x000000000006c206 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000012de82 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000d7676 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd7657 ; mov edx, eax ; jmp 0xd7660
0x00000000000cf265 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000ceb89 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006c853 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000046273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000099b81 : mov dh, 0x45 ; ret
0x000000000009dab9 : mov dh, 0x45 ; ret 0x8348
0x0000000000099b72 : mov dh, 0x45 ; ret 0x8349
0x000000000004bc83 : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000171e31 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171e21 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171df1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171e11 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171e01 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000e0faa : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x0000000000025c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000001433d7 : mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x00000000000d1921 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001840a2 : mov dh, 0x4e ; ret 0x474c
0x000000000010de63 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000123efd : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000006ce29 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000099c6c : mov dh, 0x54 ; syscall
0x00000000000d45fb : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000099567 : mov dh, 0x55 ; ret
0x000000000009bb75 : mov dh, 0x55 ; ret 0x8348
0x0000000000099559 : mov dh, 0x55 ; ret 0x8349
0x0000000000171e35 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000171e25 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000171df5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000056807 : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000005678a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000171e05 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000001957a0 : mov dh, 0x60 ; cld ; inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x000000000002505c : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000005e59e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ec111 : mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00000000001961c4 : mov dh, 0xa8 ; cld ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000089385 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000009b651 : mov dh, 0xc ; add cl, byte ptr [rcx - 0x77] ; retf 0xf43
0x000000000009a9ef : mov dh, 0xc ; cmovl ebp, dword ptr [rcx] ; ror dword ptr [rcx - 0x77], cl ; retf 0x8349
0x000000000009877f : mov dh, 0xc ; sbb dword ptr [rcx + 0x38], eax ; retf 0xd174
0x000000000012e698 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b84c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e21d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ea9df : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000bb1e6 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000cdbb7 : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x000000000003522d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000d3fdf : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c0eeb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000010ec01 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006b31a : mov dh, 0xc0 ; neg eax ; ret
0x00000000001339c6 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000012f5eb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000c75bc : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000035f2a : mov dh, 0xc0 ; ret
0x00000000000aabe8 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aac10 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a78e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001193fe : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000077f33 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000c3256 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fe : mov dh, 0xc7 ; ret
0x00000000001852e4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000c31db : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008ecea : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000e1290 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008b141 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016e464 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005c1eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000005c418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d9b43 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000188b25 : mov dh, 0xf3 ; dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x00000000000acb02 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000003340c : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x000000000007a621 : mov dh, 2 ; ret
0x00000000000e5732 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d720c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016e461 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecc1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b144 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000007cb14 : mov dh, byte ptr [rax + rax] ; ret
0x000000000006dcb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000aad7c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000001a6981 : mov dh, ch ; call qword ptr [rsi]
0x00000000001a69b1 : mov dh, ch ; jmp rbx
0x000000000018c194 : mov dil, dl ; call rax
0x00000000001a6e25 : mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x0000000000107c84 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x000000000006c3f7 : mov dl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000003aa4 : mov dl, 0x1e ; ret
0x0000000000158f31 : mov dl, 0x26 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000108fd7 : mov dl, 0x2b ; add byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf 0x34c
0x0000000000001f51 : mov dl, 0x3a ; jrcxz 0x1f33 ; retf 0xbe35
0x00000000000c5263 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000195a44 : mov dl, 0x52 ; cld ; jmp qword ptr [rdx]
0x0000000000195844 : mov dl, 0x5c ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001747ed : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3e6a : mov dl, 0x78 ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x0000000000188758 : mov dl, 0x79 ; ljmp [rdx - 0x7d] ; call qword ptr [rdx]
0x00000000001886c0 : mov dl, 0x79 ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000195d30 : mov dl, 0x84 ; cld ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x0000000000196228 : mov dl, 0xab ; cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000102bf2 : mov dl, 0xcc ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000065d59 : mov dl, 0xeb ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fd8
0x0000000000104623 : mov dl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000073d16 : mov dl, 1 ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000010ab85 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000ad172 : mov dl, byte ptr [rax + 0x31] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a6a23 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a6a42 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6a83 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000152bf0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a8150 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000a6a00 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9bc0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000001856fe : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000107412 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000cd224 : mov dword ptr [0x2d0], eax ; ret
0x00000000000bb63f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000007ef06 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000027ac0 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x27a9c
0x000000000012d8ee : mov dword ptr [r14], 0 ; ret
0x0000000000123fa0 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000003acb3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000123f04 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000115810 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000ac917 : mov dword ptr [r9 + 8], esi ; ret
0x000000000009fbb6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000009fba1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000071c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000071c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000023acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acf : mov dword ptr [rax + 0x54], edx ; ret
0x000000000006b46b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007bb1a : mov dword ptr [rax + 8], 0 ; ret
0x000000000008f30e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000005bd92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000013c54d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fd308 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000001025e8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000bb740 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000033ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x000000000008241b : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000082d88 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a8245 : mov dword ptr [rax], 0xf046e800 ; jmp qword ptr [rdi]
0x00000000000fce54 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c80d8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000001a4445 : mov dword ptr [rax], eax ; add al, bl ; insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000abbd3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f6de1 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000ea944 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000101639 : mov dword ptr [rax], ebp ; mov eax, 3 ; syscall
0x00000000000f2db3 : mov dword ptr [rax], ebx ; call 0x1f8ac
0x000000000006a13e : mov dword ptr [rax], ecx ; jmp 0x66b7b
0x0000000000072165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000ff201 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000123fa1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000084116 : mov dword ptr [rax], edi ; ret
0x00000000001072d3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac951 : mov dword ptr [rax], edx ; jne 0xac94d ; ret
0x0000000000123d0a : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003acb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000ea99a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000720a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000123f05 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002d9d3 : mov dword ptr [rax], edx ; ret
0x0000000000072ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000ea943 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000f5c51 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d3114 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd313b
0x000000000010599c : mov dword ptr [rbp - 0x40], esp ; syscall
0x0000000000105998 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000004e7d2 : mov dword ptr [rbp - 0x4d0], ecx ; call 0x7b228
0x0000000000069027 : mov dword ptr [rbp - 0x4d0], ecx ; jmp 0x65b11
0x00000000000694ba : mov dword ptr [rbp - 0x4d0], edx ; jmp 0x65fc1
0x000000000006914c : mov dword ptr [rbp - 0x4d0], edx ; jmp 0x69126
0x000000000004e7d1 : mov dword ptr [rbp - 0x4d0], r9d ; call 0x7b229
0x000000000004d64e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000065556 : mov dword ptr [rbp - 0x508], eax ; call 0x71fd8
0x000000000006953d : mov dword ptr [rbp - 0x510], eax ; jmp 0x65fcb
0x0000000000069f55 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x661ec
0x0000000000023656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x0000000000109150 : mov dword ptr [rbp - 0x6d0], eax ; mov eax, r10d ; syscall
0x0000000000113dcd : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000114703 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x000000000011495c : mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113dd3 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000011437a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000114840 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000114314 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113ea3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000005224f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000141f7d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001192b5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a5fa : mov dword ptr [rbp], edx ; call rax
0x0000000000070982 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070981 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c84b8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc848e
0x00000000001435f6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010ecb4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013c1c5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001435ae : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010ece4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c7e5 : mov dword ptr [rbx + 0x18], edx ; mov rdx, rcx ; jmp 0x7c7d1
0x0000000000076ba5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000013c219 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e83bb : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077495 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000891b9 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00000000000891b8 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003522f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fc1f1 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000008926e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007b20b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000072dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000072ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078327 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002a6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010ec84 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b42a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008964d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001025d2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000011d4 : mov dword ptr [rbx], 0x3c90000 ; add byte ptr [rax], al ; retf 3
0x00000000000d2201 : mov dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret
0x000000000013c3e3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000143821 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013826f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000102572 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000136f50 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006df3a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000891b6 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000047d7c : mov dword ptr [rbx], edx ; jg 0x47c91 ; pop rbx ; ret
0x00000000000896d3 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000008926b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000132314 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000135108 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000135065 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000135135 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002057d : mov dword ptr [rcx + 0x968], eax ; ret
0x0000000000168cf2 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000ac050 : mov dword ptr [rcx + 4], eax ; jne 0xac01e ; ret
0x0000000000168ce3 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000ac04f : mov dword ptr [rcx + 4], r8d ; jne 0xac01f ; ret
0x0000000000168d54 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000168d64 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000168d33 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d24 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000ac918 : mov dword ptr [rcx + 8], esi ; ret
0x000000000009e946 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000481cb : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010906f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000009fbb7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000009fba2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000009fb91 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000002423d : mov dword ptr [rcx], 0x39480000 ; retf
0x00000000000d15fc : mov dword ptr [rcx], 0xdf75d284 ; ret
0x0000000000199655 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000000d6ce2 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f2d63 : mov dword ptr [rcx], eax ; call 0x1f7f4
0x000000000003577a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071277 : mov dword ptr [rcx], eax ; ret
0x0000000000075664 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000123fa4 : mov dword ptr [rcx], ecx ; ret
0x00000000000710d1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000123f78 : mov dword ptr [rcx], edi ; ret
0x000000000008e837 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x0000000000168cb1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168cd0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168d11 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168cf0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168d31 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d41 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d51 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d61 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d71 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d81 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000168ce0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168d21 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000123f08 : mov dword ptr [rcx], edx ; ret
0x00000000000f68bb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f68f2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a74bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000a830d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000a74fb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000a834b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000a757d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000a83cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000a5e8b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b5e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5f0d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000048b3f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9d7d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6be0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5f50 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f70 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f31 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000f68e0 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000a75e3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000a8433 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000a5f53 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9ea3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013be20 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a75c5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000a8415 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000a7603 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000a8453 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000a5f35 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9e85 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013beb2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013bde6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000bf70e : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbb94a
0x000000000010e74a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10e71c
0x000000000013591c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013bf61 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d6bca : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6bc9 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6bce : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d6bcd : mov dword ptr [rdi + 0x30], r8d ; ret
0x0000000000094cd1 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00000000001358d4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000208ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007b163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007eacb : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036049 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000f5f1e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000ac252 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012304f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a753d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000a838d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000a5ead : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a9dfd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a74db : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000a832b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000a755d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000a83ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000a5e6b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9d9b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9e1d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b7b5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b5f8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b898 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015b745 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b588 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b373 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a73a7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000a81d7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x000000000015b6d5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b518 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5d97 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9c47 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ea53 : mov dword ptr [rdi + 4], eax ; lea rax, [rdi + 7] ; ret
0x000000000009e9b3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007eace : mov dword ptr [rdi + 4], eax ; ret
0x000000000003b36d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009eaa3 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000a81b9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x000000000015b4a8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009e9a3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a5d89 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a9c29 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f5f70 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ea52 : mov dword ptr [rdi + 4], r8d ; lea rax, [rdi + 7] ; ret
0x000000000009e9b2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a743b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000a827b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x000000000015b438 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dfb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a9ceb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a745b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000a829b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x000000000015b3c8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e0b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a9d0b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a73f9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000a8239 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000a747b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000a82bb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x000000000015b358 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dd9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9ca9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9d2b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff238 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000aca35 : mov dword ptr [rdi + 8], eax ; je 0xac9f0 ; mov rax, rbx ; pop rbx ; ret
0x000000000007b137 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000048ac4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000a821b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000a7419 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000a8259 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000a73db : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x00000000000482f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003ac94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac85 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9c8b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cc9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fc362 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000036472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000124088 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000124083 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000014db73 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000008f315 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008f31e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00000000001528b5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528f3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000152c3c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae08 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152e1c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad88 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015300c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad08 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001531dd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac79 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001533dd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abe9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001535dd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab59 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6d20 : mov dword ptr [rdi - 1], edx ; ret
0x0000000000152fbd : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000152dd5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000152fb9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009e8ff : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000153399 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a6f : mov dword ptr [rdi - 4], edx ; ret
0x000000000009e95b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000153396 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e8e5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000153596 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e979 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000153796 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000489ba : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001528f7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000152a6c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b68 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae88 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a7a0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000ff225 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000489b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048abe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003655b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000054d86 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009e922 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009ea80 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 3] ; ret
0x00000000000a7375 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000a73c7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000a7354 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000a5d54 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8177 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000a6a27 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009ea00 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a81a5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000a6a45 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a81f7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000a6a87 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a73a5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000a81d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000a5d95 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009e9b0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a73f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000a8237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000a5dd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a7417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000a8257 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000a5de7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008f313 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000aa5f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a5df8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5e08 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e18 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f31b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009e9f0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009e9a0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5d86 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5dc8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000aa603 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000094a97 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x000000000001f9c3 : mov dword ptr [rdi], ecx ; ret
0x00000000000a7344 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000000a8164 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x00000000000a7362 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000a8192 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000a73b4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000a81e4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x00000000000a6d40 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d81 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6da1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6db1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dc1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dd1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d50 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d91 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000034dd6 : mov dword ptr [rdi], edx ; ret
0x00000000000a9bd4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9c02 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c54 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000350c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000009ea61 : mov dword ptr [rdi], esi ; lea rax, [rdi + 1] ; ret
0x000000000009e9e1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009fb9f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000014db5b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004a07d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009fb8e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014db3e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009e9d1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000009fbb3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000014db70 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000004a0a3 : mov dword ptr [rdi], esi ; ret
0x00000000000f5f51 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000001514d2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000001359dc : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006dcb7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00000000000784b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000094d5f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000710ce : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071274 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000012e7f0 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000012e7cc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e7d0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00000000001323b0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001358bc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000bb640 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000016b077 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000a2b1c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016b059 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000a2afe : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016b10b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000016b089 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000166d39 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016b12b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000016b0a9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000166d49 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016b0c9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000016b14b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000a2ba0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000006b414 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016b0e9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000016afdb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000a2b82 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000132331 : mov dword ptr [rdx + 8], edi ; ret
0x000000000008e67b : mov dword ptr [rdx - 0x76b3ffcd], eax ; ret 0x8348
0x000000000006e574 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00000000000fc71f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000005fde5 : mov dword ptr [rdx], eax ; jmp 0x5c805
0x000000000016b004 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000016b032 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000016af84 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x0000000000078961 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003545a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004a07f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c9f7d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000791c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a2a99 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c9762 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002e19d : mov dword ptr [rdx], eax ; ret
0x00000000000762df : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000aae15 : mov dword ptr [rdx], ecx ; jne 0xaae0d ; ret
0x0000000000071f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000ea697 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000009ed25 : mov dword ptr [rdx], ecx ; ret
0x00000000000e7afb : mov dword ptr [rdx], edi ; ret
0x00000000000c9dd3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000013232e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000094f87 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9f7c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000017431f : mov dword ptr [rip + 0x25241b], ebx ; jne 0x174311 ; pop rbx ; ret
0x0000000000115ae8 : mov dword ptr [rip + 0x2b2632], eax ; pop rbp ; ret
0x0000000000109560 : mov dword ptr [rip + 0x2bacda], ebx ; pop rbx ; ret
0x00000000001014aa : mov dword ptr [rip + 0x2c2d60], edi ; ret
0x00000000000fe4f5 : mov dword ptr [rip + 0x2c72a5], eax ; mov rdx, rax ; jmp 0xfe497
0x00000000000368bb : mov dword ptr [rip + 0x38d7cb], eax ; mov eax, edx ; ret
0x00000000000368ac : mov dword ptr [rip + 0x38d7d6], edx ; ret
0x000000000002c7c9 : mov dword ptr [rip + 0x399259], eax ; mov eax, ecx ; syscall
0x000000000001f928 : mov dword ptr [rip + 0x3a99da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000e88a4 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003b296 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003ac00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003ac04 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000077f36 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000fc1d7 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000fb5a6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000f5e8f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003b2e0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003b327 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000ac098 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e8887 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000012d8d1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e88a0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000bb251 : mov dword ptr [rsi + rcx], edx ; jne 0xbb24e ; ret
0x00000000000aa606 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000000aa5f9 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000012d8ef : mov dword ptr [rsi], 0 ; ret
0x000000000009e8e3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000012d980 : mov dword ptr [rsi], 0xa ; ret
0x000000000012d970 : mov dword ptr [rsi], 0xb ; ret
0x000000000012d9a0 : mov dword ptr [rsi], 0xc ; ret
0x000000000012d990 : mov dword ptr [rsi], 8 ; ret
0x00000000000bf4a8 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8b727
0x000000000007783b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001235bf : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x0000000000123053 : mov dword ptr [rsi], edi ; ret
0x0000000000119361 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003acb6 : mov dword ptr [rsi], edx ; ret
0x0000000000081a68 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081951 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ef07 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000081a63 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x000000000012c7f7 : mov dword ptr [rsp + 0x18], edx ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000f2dae : mov dword ptr [rsp + 0x18], edx ; mov qword ptr [rax], rbx ; call 0x1f8b1
0x000000000008162f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000819ab : mov dword ptr [rsp + 0x20], edx ; call rax
0x0000000000100eea : mov dword ptr [rsp + 0x28], eax ; call 0xcd1f6
0x00000000000819a6 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bfad : mov dword ptr [rsp + 0x28], ecx ; call 0x138236
0x00000000000335d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000e1c98 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bc208 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x0000000000089220 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102d46 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013b4ad : mov dword ptr [rsp + 8], eax ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001228c9 : mov dword ptr [rsp + 8], eax ; mov rdi, rax ; call 0x8f3b9
0x000000000013c2ec : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000f35bf : mov dword ptr [rsp + 8], ebp ; call 0x1f8ae
0x00000000000554a3 : mov dword ptr [rsp + 8], edx ; call 0x71f96
0x0000000000035003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000107378 : mov dword ptr [rsp - 0x30], ecx ; syscall
0x0000000000107373 : mov dword ptr [rsp - 0x38], eax ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000000fde24 : mov dword ptr [rsp - 0x48], 0x18 ; syscall
0x00000000000351a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000010e816 : mov dword ptr [rsp], eax ; call 0x7b225
0x0000000000089590 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x00000000000f7273 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x00000000000fcf93 : mov dword ptr [rsp], eax ; mov eax, 0x13 ; syscall
0x0000000000107fa3 : mov dword ptr [rsp], eax ; mov eax, 0x130 ; syscall
0x00000000000fcff3 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x00000000001017c3 : mov dword ptr [rsp], eax ; mov eax, 0x1a ; syscall
0x00000000000cc2a3 : mov dword ptr [rsp], eax ; mov eax, 0x22 ; syscall
0x00000000000cc303 : mov dword ptr [rsp], eax ; mov eax, 0x23 ; syscall
0x0000000000108143 : mov dword ptr [rsp], eax ; mov eax, 0x2a ; syscall
0x00000000001080b3 : mov dword ptr [rsp], eax ; mov eax, 0x2b ; syscall
0x00000000001084a3 : mov dword ptr [rsp], eax ; mov eax, 0x2e ; syscall
0x0000000000108383 : mov dword ptr [rsp], eax ; mov eax, 0x2f ; syscall
0x00000000000fd783 : mov dword ptr [rsp], eax ; mov eax, 0x4a ; syscall
0x00000000000fd813 : mov dword ptr [rsp], eax ; mov eax, 0x4b ; syscall
0x00000000000f7a53 : mov dword ptr [rsp], eax ; mov eax, 0x55 ; syscall
0x00000000000f72d3 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x00000000000f7053 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x00000000000f7903 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x00000000000fb743 : mov dword ptr [rsp], eax ; mov eax, 7 ; syscall
0x0000000000027ac1 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x27a9b
0x000000000010584b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000012a513 : mov dword ptr [rsp], ecx ; call r12
0x00000000000cd223 : mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000fd307 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000001025e7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000bb73f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000082d87 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c80d7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x0000000000101638 : mov dword ptr fs:[rax], ebp ; mov eax, 3 ; syscall
0x00000000000ff200 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000ea999 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ea942 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000121e70 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006e573 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000078960 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035459 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c9dd2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000014db5a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152dd0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a5d40 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fb886 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000108ab6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000d6c3c : mov eax, 0 ; cmove eax, esi ; ret
0x0000000000097485 : mov eax, 0 ; cmovne rax, rdi ; ret
0x00000000000f7259 : mov eax, 0 ; syscall
0x000000000012bf74 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000aacc2 : mov eax, 0x10 ; pop rbx ; ret
0x00000000000fc49b : mov eax, 0x10 ; syscall
0x0000000000123920 : mov eax, 0x100 ; ret
0x000000000012391a : mov eax, 0x101 ; ret
0x00000000000f7123 : mov eax, 0x101 ; syscall
0x0000000000123926 : mov eax, 0x102 ; ret
0x00000000000f7000 : mov eax, 0x102 ; syscall
0x00000000000f6d3a : mov eax, 0x103 ; syscall
0x0000000000123912 : mov eax, 0x104 ; ret
0x00000000000f8393 : mov eax, 0x104 ; syscall
0x00000000000ff138 : mov eax, 0x105 ; syscall
0x00000000000f6d93 : mov eax, 0x106 ; syscall
0x00000000000f8ac0 : mov eax, 0x107 ; syscall
0x000000000006b393 : mov eax, 0x108 ; syscall
0x00000000000f89a3 : mov eax, 0x109 ; syscall
0x00000000000f8a00 : mov eax, 0x10a ; syscall
0x00000000000f8a63 : mov eax, 0x10b ; syscall
0x00000000000f6f72 : mov eax, 0x10c ; syscall
0x00000000000f7483 : mov eax, 0x10d ; syscall
0x00000000000fd64a : mov eax, 0x10e ; syscall
0x00000000000fb7b6 : mov eax, 0x10f ; syscall
0x00000000000f5a6c : mov eax, 0x11 ; syscall
0x0000000000107dd0 : mov eax, 0x110 ; syscall
0x0000000000107cec : mov eax, 0x113 ; syscall
0x0000000000107d7c : mov eax, 0x114 ; syscall
0x00000000000fc20c : mov eax, 0x115 ; syscall
0x0000000000107e3c : mov eax, 0x116 ; syscall
0x00000000000fbacb : mov eax, 0x118 ; syscall
0x00000000001075b9 : mov eax, 0x119 ; syscall
0x0000000000107e90 : mov eax, 0x11b ; syscall
0x00000000000fc273 : mov eax, 0x11d ; syscall
0x0000000000107ec3 : mov eax, 0x11e ; syscall
0x0000000000107ef0 : mov eax, 0x11f ; syscall
0x00000000000f5acc : mov eax, 0x12 ; syscall
0x0000000000108870 : mov eax, 0x120 ; syscall
0x000000000010766b : mov eax, 0x121 ; syscall
0x00000000001076a5 : mov eax, 0x122 ; syscall
0x0000000000107980 : mov eax, 0x123 ; syscall
0x00000000000f79a0 : mov eax, 0x124 ; syscall
0x00000000000f7a00 : mov eax, 0x125 ; syscall
0x0000000000107b00 : mov eax, 0x126 ; syscall
0x00000000000fd043 : mov eax, 0x127 ; syscall
0x00000000000fd0f3 : mov eax, 0x128 ; syscall
0x0000000000108912 : mov eax, 0x12b ; syscall
0x0000000000107f20 : mov eax, 0x12c ; syscall
0x0000000000107803 : mov eax, 0x12d ; syscall
0x0000000000107733 : mov eax, 0x12e ; syscall
0x0000000000107f53 : mov eax, 0x12f ; syscall
0x00000000000fcf79 : mov eax, 0x13 ; syscall
0x0000000000107f89 : mov eax, 0x130 ; syscall
0x00000000001078c0 : mov eax, 0x131 ; syscall
0x00000000000fd850 : mov eax, 0x132 ; syscall
0x00000000001089c2 : mov eax, 0x133 ; syscall
0x0000000000107fe0 : mov eax, 0x134 ; syscall
0x00000000000f6b21 : mov eax, 0x135 ; syscall
0x0000000000108013 : mov eax, 0x136 ; syscall
0x0000000000108043 : mov eax, 0x137 ; syscall
0x00000000000fcd2d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000fcfd9 : mov eax, 0x14 ; syscall
0x00000000000f7310 : mov eax, 0x15 ; syscall
0x00000000000f68d3 : mov eax, 0x16 ; jbe 0xf68e8 ; ret
0x0000000000087604 : mov eax, 0x16 ; je 0x87617 ; ret
0x00000000000f5f45 : mov eax, 0x16 ; je 0xf5f58 ; ret
0x00000000000877a0 : mov eax, 0x16 ; ret
0x00000000000f79d0 : mov eax, 0x16 ; syscall
0x00000000000fd5ac : mov eax, 0x17 ; syscall
0x00000000000ea820 : mov eax, 0x18 ; syscall
0x0000000000107bc3 : mov eax, 0x19 ; syscall
0x00000000001a73cd : mov eax, 0x1900000 ; out dx, eax ; jmp rsi
0x00000000001017a9 : mov eax, 0x1a ; syscall
0x0000000000101830 : mov eax, 0x1b ; syscall
0x00000000000f6908 : mov eax, 0x1c ; syscall
0x0000000000108d60 : mov eax, 0x1d ; syscall
0x0000000000108d00 : mov eax, 0x1e ; syscall
0x0000000000108d90 : mov eax, 0x1f ; syscall
0x00000000000cdada : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000aacbb : mov eax, 0x20 ; pop rbx ; ret
0x00000000000cdabf : mov eax, 0x20 ; ret
0x00000000000f7940 : mov eax, 0x20 ; syscall
0x000000000002def7 : mov eax, 0x200 ; ret
0x00000000000f7970 : mov eax, 0x21 ; syscall
0x00000000000cc289 : mov eax, 0x22 ; syscall
0x00000000000cc2e9 : mov eax, 0x23 ; syscall
0x00000000000bf600 : mov eax, 0x24 ; syscall
0x00000000000cc200 : mov eax, 0x25 ; syscall
0x00000000000bf630 : mov eax, 0x26 ; syscall
0x0000000000107402 : mov eax, 0x27 ; syscall
0x00000000000fba93 : mov eax, 0x28 ; syscall
0x00000000001085a0 : mov eax, 0x29 ; syscall
0x0000000000108129 : mov eax, 0x2a ; syscall
0x0000000000108099 : mov eax, 0x2b ; syscall
0x00000000001083d6 : mov eax, 0x2c ; syscall
0x0000000000108256 : mov eax, 0x2d ; syscall
0x0000000000108489 : mov eax, 0x2e ; syscall
0x0000000000108369 : mov eax, 0x2f ; syscall
0x00000000000aacb4 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000108570 : mov eax, 0x30 ; syscall
0x00000000001080f0 : mov eax, 0x31 ; syscall
0x0000000000108210 : mov eax, 0x32 ; syscall
0x00000000001081b0 : mov eax, 0x33 ; syscall
0x0000000000108180 : mov eax, 0x34 ; syscall
0x00000000001085d3 : mov eax, 0x35 ; syscall
0x0000000000108543 : mov eax, 0x36 ; syscall
0x00000000001081e3 : mov eax, 0x37 ; syscall
0x0000000000044f73 : mov eax, 0x38 ; syscall
0x00000000000bdc81 : mov eax, 0x39480030 ; ret 0x850f
0x00000000000cc6dd : mov eax, 0x3a ; syscall
0x00000000000cc770 : mov eax, 0x3b ; syscall
0x00000000000cbfd9 : mov eax, 0x3d ; syscall
0x00000000000452b9 : mov eax, 0x3e ; mov rbx, rdi ; syscall
0x0000000000035760 : mov eax, 0x3e ; syscall
0x00000000000cbf30 : mov eax, 0x3f ; syscall
0x00000000000aacad : mov eax, 0x40 ; pop rbx ; ret
0x00000000000cdb05 : mov eax, 0x40 ; ret
0x0000000000108c70 : mov eax, 0x40 ; syscall
0x0000000000187bac : mov eax, 0x40fff16d ; insd dword ptr [rdi], dx ; int1 ; call rax
0x0000000000108c40 : mov eax, 0x41 ; syscall
0x00000000000bc20b : mov eax, 0x41000000 ; call rsp
0x0000000000108ca3 : mov eax, 0x42 ; syscall
0x0000000000108d30 : mov eax, 0x43 ; syscall
0x0000000000108be0 : mov eax, 0x44 ; syscall
0x0000000000108b2c : mov eax, 0x45 ; syscall
0x00000000001831fb : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000108b8c : mov eax, 0x46 ; syscall
0x0000000000108c10 : mov eax, 0x47 ; syscall
0x00000000000f763c : mov eax, 0x48 ; syscall
0x000000000008f7fa : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000f77a0 : mov eax, 0x49 ; syscall
0x00000000000fd769 : mov eax, 0x4a ; syscall
0x00000000000fd7f9 : mov eax, 0x4b ; syscall
0x00000000000ff170 : mov eax, 0x4c ; syscall
0x00000000000ff1a0 : mov eax, 0x4d ; syscall
0x00000000000f7b6d : mov eax, 0x4f ; syscall
0x00000000000f7a90 : mov eax, 0x50 ; syscall
0x00000000000f7ac0 : mov eax, 0x51 ; syscall
0x000000000006b360 : mov eax, 0x52 ; syscall
0x00000000000f6fd0 : mov eax, 0x53 ; syscall
0x00000000000f8af0 : mov eax, 0x54 ; syscall
0x00000000000f7a39 : mov eax, 0x55 ; syscall
0x00000000000f8970 : mov eax, 0x56 ; syscall
0x00000000000f8a90 : mov eax, 0x57 ; syscall
0x00000000000f89d0 : mov eax, 0x58 ; syscall
0x00000000000f8a30 : mov eax, 0x59 ; syscall
0x00000000000f6ee0 : mov eax, 0x5a ; syscall
0x00000000000f6f10 : mov eax, 0x5b ; syscall
0x00000000000f8300 : mov eax, 0x5c ; syscall
0x00000000000f8330 : mov eax, 0x5d ; syscall
0x00000000000f8360 : mov eax, 0x5e ; syscall
0x00000000000f6ed0 : mov eax, 0x5f ; syscall
0x00000000000aaca6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000bc430 : mov eax, 0x60 ; syscall
0x00000000000fc960 : mov eax, 0x61 ; syscall
0x00000000000fc9c0 : mov eax, 0x62 ; syscall
0x0000000000107d40 : mov eax, 0x63 ; syscall
0x0000000000003500 : mov eax, 0x637514da ; jle 0x353e ; retf 0x8792
0x00000000000cbf60 : mov eax, 0x64 ; syscall
0x00000000000cd240 : mov eax, 0x66 ; syscall
0x0000000000107b60 : mov eax, 0x67 ; syscall
0x00000000000cd260 : mov eax, 0x68 ; syscall
0x00000000000cd2bc : mov eax, 0x69 ; syscall
0x00000000000cd32c : mov eax, 0x6a ; syscall
0x00000000000cd250 : mov eax, 0x6b ; syscall
0x00000000000cd270 : mov eax, 0x6c ; syscall
0x00000000000cd450 : mov eax, 0x6d ; syscall
0x00000000000cd230 : mov eax, 0x6e ; syscall
0x00000000000cd480 : mov eax, 0x6f ; syscall
0x00000000000cd4e0 : mov eax, 0x70 ; syscall
0x00000000000fd19e : mov eax, 0x71 ; syscall
0x00000000000fd20e : mov eax, 0x72 ; syscall
0x00000000000cd280 : mov eax, 0x73 ; syscall
0x00000000000c964a : mov eax, 0x74 ; syscall
0x00000000000f643c : mov eax, 0x75 ; mov rdi, rdx ; syscall
0x00000000000cd580 : mov eax, 0x75 ; syscall
0x00000000000cd510 : mov eax, 0x76 ; syscall
0x00000000000f6469 : mov eax, 0x77 ; mov rdi, rdx ; syscall
0x00000000000cd600 : mov eax, 0x77 ; syscall
0x00000000000cd540 : mov eax, 0x78 ; syscall
0x00000000000cd420 : mov eax, 0x79 ; syscall
0x00000000001074e0 : mov eax, 0x7a ; syscall
0x0000000000107510 : mov eax, 0x7b ; syscall
0x00000000000cd4b0 : mov eax, 0x7c ; syscall
0x0000000000107860 : mov eax, 0x7d ; syscall
0x00000000000cd9d9 : mov eax, 0x7d00 ; ret
0x00000000000cda08 : mov eax, 0x7e ; ret
0x0000000000107890 : mov eax, 0x7e ; syscall
0x00000000000cd9aa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000cd95b : mov eax, 0x7f ; ret
0x0000000000035795 : mov eax, 0x7f ; syscall
0x00000000000aac9f : mov eax, 0x80 ; pop rbx ; ret
0x0000000000036bdd : mov eax, 0x81 ; syscall
0x00000000000357df : mov eax, 0x82 ; syscall
0x0000000000035e20 : mov eax, 0x83 ; syscall
0x00000000000f6b40 : mov eax, 0x84 ; syscall
0x00000000000f6cd6 : mov eax, 0x85 ; syscall
0x000000000005cd94 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000107e00 : mov eax, 0x86 ; syscall
0x0000000000107760 : mov eax, 0x87 ; syscall
0x00000000001056b7 : mov eax, 0x88 ; syscall
0x0000000000187698 : mov eax, 0x88ffee4f ; push rcx ; out dx, al ; jmp rax
0x00000000000f6de0 : mov eax, 0x89 ; syscall
0x00000000001065a1 : mov eax, 0x89000000 ; ret 0xe8c1
0x00000000000f5c64 : mov eax, 0x89fffffe ; ret 0xcb8
0x00000000000f6e10 : mov eax, 0x8a ; syscall
0x00000000000749b1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fcd60 : mov eax, 0x8d ; syscall
0x00000000000ea760 : mov eax, 0x8e ; syscall
0x00000000000ea790 : mov eax, 0x8f ; syscall
0x00000000000ea7c0 : mov eax, 0x90 ; syscall
0x00000000000ea7f0 : mov eax, 0x91 ; syscall
0x00000000000ea850 : mov eax, 0x92 ; syscall
0x00000000000ea880 : mov eax, 0x93 ; syscall
0x00000000000ea8b0 : mov eax, 0x94 ; syscall
0x0000000000101890 : mov eax, 0x95 ; syscall
0x00000000001018c0 : mov eax, 0x96 ; syscall
0x00000000001018f0 : mov eax, 0x97 ; syscall
0x0000000000101920 : mov eax, 0x98 ; syscall
0x00000000000fdbc0 : mov eax, 0x99 ; syscall
0x00000000001077c0 : mov eax, 0x9a ; syscall
0x0000000000107c20 : mov eax, 0x9b ; syscall
0x0000000000107c53 : mov eax, 0x9d ; syscall
0x0000000000107790 : mov eax, 0x9e ; syscall
0x0000000000107830 : mov eax, 0x9f ; syscall
0x0000000000101770 : mov eax, 0xa ; syscall
0x00000000000fc990 : mov eax, 0xa0 ; syscall
0x00000000000fd730 : mov eax, 0xa1 ; syscall
0x0000000000003184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000fd7c0 : mov eax, 0xa2 ; syscall
0x00000000000fd700 : mov eax, 0xa3 ; syscall
0x00000000000bc510 : mov eax, 0xa4 ; syscall
0x0000000000107b93 : mov eax, 0xa5 ; syscall
0x0000000000107480 : mov eax, 0xa6 ; syscall
0x00000000000fdbf0 : mov eax, 0xa7 ; syscall
0x00000000000fdc20 : mov eax, 0xa8 ; syscall
0x00000000000fd88f : mov eax, 0xa9 ; syscall
0x00000000000fd4d0 : mov eax, 0xaa ; syscall
0x00000000000fd570 : mov eax, 0xab ; syscall
0x0000000000107310 : mov eax, 0xac ; syscall
0x00000000001072e0 : mov eax, 0xad ; syscall
0x00000000001078f0 : mov eax, 0xae ; syscall
0x0000000000107a73 : mov eax, 0xaf ; syscall
0x0000000000101740 : mov eax, 0xb ; syscall
0x0000000000107920 : mov eax, 0xb0 ; syscall
0x0000000000107a40 : mov eax, 0xb1 ; syscall
0x0000000000107c83 : mov eax, 0xb2 ; syscall
0x0000000000107cb3 : mov eax, 0xb3 ; syscall
0x0000000000107bf0 : mov eax, 0xb4 ; syscall
0x0000000000140693 : mov eax, 0xb5 ; syscall
0x00000000001406e3 : mov eax, 0xb6 ; syscall
0x000000000013243f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035407 : mov eax, 0xba ; syscall
0x00000000001074b0 : mov eax, 0xbb ; syscall
0x00000000001061f3 : mov eax, 0xbc ; syscall
0x0000000000106193 : mov eax, 0xbd ; syscall
0x0000000000106073 : mov eax, 0xbe ; syscall
0x00000000001060a3 : mov eax, 0xbf ; syscall
0x00000000000dc120 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc0ea : mov eax, 0xc ; ret
0x0000000000106103 : mov eax, 0xc0 ; syscall
0x000000000010599a : mov eax, 0xc065894c ; syscall
0x0000000000105fe3 : mov eax, 0xc1 ; syscall
0x00000000001060d0 : mov eax, 0xc2 ; syscall
0x0000000000106130 : mov eax, 0xc3 ; syscall
0x0000000000106010 : mov eax, 0xc4 ; syscall
0x00000000001061c0 : mov eax, 0xc5 ; syscall
0x0000000000106160 : mov eax, 0xc6 ; syscall
0x0000000000106040 : mov eax, 0xc7 ; syscall
0x00000000000bc370 : mov eax, 0xc9 ; syscall
0x0000000000119350 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000001192e9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000115095 : mov eax, 0xca ; syscall
0x0000000000107950 : mov eax, 0xd5 ; syscall
0x0000000000101863 : mov eax, 0xd8 ; syscall
0x0000000000108cd3 : mov eax, 0xdc ; syscall
0x00000000000fb876 : mov eax, 0xdd ; syscall
0x0000000000035729 : mov eax, 0xe ; syscall
0x00000000001383a6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001158d0 : mov eax, 0xe3 ; syscall
0x00000000000c75ac : mov eax, 0xe4 ; syscall
0x00000000000ce07f : mov eax, 0xe5 ; syscall
0x000000000011595e : mov eax, 0xe6 ; syscall
0x00000000001079ec : mov eax, 0xe8 ; syscall
0x00000000001079b3 : mov eax, 0xe9 ; syscall
0x000000000006960f : mov eax, 0xe9fffffb ; ret 0xffff
0x000000000003541e : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x00000000000fefb0 : mov eax, 0xeb ; syscall
0x00000000000354b1 : mov eax, 0xf ; syscall
0x00000000000cc164 : mov eax, 0xf7 ; syscall
0x00000000000cd9ff : mov eax, 0xfa ; ret
0x00000000000cda20 : mov eax, 0xfc17 ; ret
0x0000000000107ad0 : mov eax, 0xfd ; syscall
0x00000000000cd98c : mov eax, 0xfde8 ; jne 0xcd963 ; ret
0x0000000000107aa0 : mov eax, 0xfe ; syscall
0x0000000000107b30 : mov eax, 0xff ; syscall
0x000000000009d27a : mov eax, 0xfff167e9 ; dec dword ptr [rbp - 0x77] ; retf 0x894c
0x00000000000cda10 : mov eax, 0xfffa ; ret
0x00000000000cbfac : mov eax, 0xfffffff2 ; ret
0x00000000000865e2 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000000f6b0a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x000000000008b452 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x0000000000073021 : mov eax, 0xffffffff ; ja 0x73038 ; ret
0x0000000000070b81 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000039cee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007044c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0e : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000353e7 : mov eax, 0xffffffff ; ret
0x00000000000fde9f : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000112292 : mov eax, 1 ; call 0x10ed27
0x0000000000172930 : mov eax, 1 ; jg 0x172949 ; neg eax ; ret
0x00000000000abc60 : mov eax, 1 ; jg 0xabc72 ; neg eax ; ret
0x0000000000170886 : mov eax, 1 ; jl 0x170899 ; neg eax ; ret
0x00000000000cdbf2 : mov eax, 1 ; js 0xcdc08 ; ret
0x000000000004a09d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000d9806 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd9821
0x0000000000070b6d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007ba62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea60 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000012b050 : mov eax, 1 ; pop rbx ; ret
0x0000000000048063 : mov eax, 1 ; ret
0x000000000001fa13 : mov eax, 1 ; syscall
0x00000000000abf81 : mov eax, 2 ; ret
0x000000000001fa71 : mov eax, 2 ; syscall
0x0000000000115806 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000c8122 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000078944 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000abf91 : mov eax, 3 ; ret
0x000000000001facf : mov eax, 3 ; syscall
0x00000000000abfa1 : mov eax, 4 ; ret
0x00000000000f6bde : mov eax, 4 ; syscall
0x000000000011f3b9 : mov eax, 5 ; jmp 0x11f391
0x00000000000efcbc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000001063df : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00000000000abfb1 : mov eax, 5 ; ret
0x00000000000f6c2d : mov eax, 5 ; syscall
0x00000000000abfc1 : mov eax, 6 ; ret
0x00000000000f6c7e : mov eax, 6 ; syscall
0x0000000000112fac : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000abfd1 : mov eax, 7 ; ret
0x00000000000fb729 : mov eax, 7 ; syscall
0x00000000000aac98 : mov eax, 8 ; pop rbx ; ret
0x0000000000107440 : mov eax, 8 ; syscall
0x00000000001016fa : mov eax, 9 ; movsxd r10, r10d ; syscall
0x00000000000f5d67 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001016b3 : mov eax, 9 ; syscall
0x0000000000114958 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000033e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000106279 : mov eax, dword ptr [rax + 0x110] ; ret
0x000000000014351f : mov eax, dword ptr [rax + 0x130] ; jmp rax
0x0000000000109c20 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001099d0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000128777 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128787 ; ret
0x00000000000fd3d8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfd3eb ; ret
0x0000000000072222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007206a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000001149d9 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000010a347 : mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000105fcc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007b708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000134fb4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000074f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000135854 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003a726 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000013aab5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000106269 : mov eax, dword ptr [rax + 8] ; ret
0x00000000000895cb : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x895c9 ; ret
0x000000000002def5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e0b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002da1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002da68 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010acd4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x000000000019703d : mov eax, dword ptr [rax] ; add byte ptr [rbp + rcx*2 - 0x16], ah ; call rsp
0x000000000013aaaa : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002decc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289f9 : mov eax, dword ptr [rax] ; ret
0x000000000007e06f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x0000000000085566 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x85576 ; call rax
0x0000000000001ac9 : mov eax, dword ptr [rbp + 0x7872a51b] ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000006960d : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65865
0x00000000001031dc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000222c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000077491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000113dd0 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000001fc03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e771 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013823a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x138250 ; pop rbx ; ret
0x00000000000a2b19 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166d36 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166d46 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a2b9d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2bbd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000146cea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001485c2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000033e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000016b030 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000001323c0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a2ac5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016af81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000166c51 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016b001 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000a2a96 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000072e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c860 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c888 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000115190 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1151a8 ; ret
0x00000000000cc57d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc592 ; call rax
0x000000000013c1e3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013bd81 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d8ce : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000c8851 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000173f78 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f8f ; call rax
0x00000000000abbe0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabc68 ; ret
0x00000000000abbf5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabc68 ; ret
0x000000000012d927 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013c160 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000774d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000abc00 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc68 ; ret
0x00000000000abc1b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabc68 ; ret
0x00000000000abc30 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabc68 ; ret
0x00000000000abc45 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabc68 ; ret
0x00000000000abc50 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc68 ; ret
0x000000000012d95f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d7240 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007cb31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000075ad8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af0 ; ret
0x00000000000f5f60 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fc310 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013b239 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a1 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000013bb49 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb59 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aab1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aaa6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001389d9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013ab91 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c4a7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ac61d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac5f9 ; ret
0x0000000000077430 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077400 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000135940 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007c84f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001151a5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c8960 : mov eax, dword ptr [rdi] ; ret
0x0000000000077f00 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000077f10 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000133044 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133056 ; ret
0x0000000000133043 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133057 ; ret
0x00000000001391a4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b6 ; ret
0x00000000001391a3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b7 ; ret
0x00000000000ac6d8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac6d8 ; xor eax, eax ; ret
0x000000000002de83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aad77 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad69 ; ret
0x0000000000091c76 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012ddb8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000074630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e7af8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000072167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705cc : mov eax, dword ptr [rdx] ; ret
0x000000000007c841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x0000000000140f24 : mov eax, dword ptr [rip + 0x2844e6] ; call qword ptr [rax]
0x0000000000140911 : mov eax, dword ptr [rip + 0x284af9] ; call qword ptr [rax]
0x0000000000120fd1 : mov eax, dword ptr [rip + 0x2a48a1] ; ret
0x000000000010a341 : mov eax, dword ptr [rip + 0x2b9b29] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008410f : mov eax, dword ptr [rip + 0x33fdcb] ; mov qword ptr [rax], rdi ; ret
0x0000000000081a85 : mov eax, dword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x0000000000081860 : mov eax, dword ptr [rip + 0x34256a] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb11 : mov eax, dword ptr [rip + 0x348a09] ; ret
0x0000000000036880 : mov eax, dword ptr [rip + 0x38d802] ; ret
0x0000000000036870 : mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000002d9cc : mov eax, dword ptr [rip + 0x39641e] ; mov qword ptr [rax], rdx ; ret
0x0000000000029c91 : mov eax, dword ptr [rip + 0x39bc59] ; ret
0x0000000000021a51 : mov eax, dword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a41 : mov eax, dword ptr [rip + 0x3a78d9] ; ret
0x0000000000114959 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002e0b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000010e0fb : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000720a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000c8b0e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000f0037 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0079
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x0000000000112b95 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x112b63
0x0000000000035839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f6ae8 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000001437ce : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000ba004 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cc39a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcc3ae ; call rax
0x00000000000fde50 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cc270 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a3a3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a404 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123df4 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000fc4dd : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c90 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc598 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a807 : mov eax, eax ; pop rbx ; ret
0x00000000000504ba : mov eax, eax ; ret
0x000000000002c2d5 : mov eax, eax ; syscall
0x000000000007912a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a2aa : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000006e7db : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006eff9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2b5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d363 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000500e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000001fae6 : mov eax, ebp ; syscall
0x0000000000048433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000079a9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e77 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9124 : mov eax, ebx ; call rax
0x0000000000105e2f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000fc573 : mov eax, ebx ; mov r13d, dword ptr fs:[r12] ; syscall
0x000000000002a836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003aaaf : mov eax, ebx ; pop rbx ; ret
0x0000000000101ffa : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000035942 : mov eax, ebx ; syscall
0x00000000000482f7 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000f60e3 : mov eax, ecx ; mov edx, dword ptr [rbx + 0x1c] ; syscall
0x00000000001014d0 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x000000000003a68c : mov eax, ecx ; or rax, rdx ; ret
0x0000000000087a5d : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005b774 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033ea7 : mov eax, ecx ; ret
0x0000000000045a22 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00000000000c7fe8 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x0000000000029cd9 : mov eax, ecx ; syscall
0x0000000000116471 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002df20 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000001193b6 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000119390 : mov eax, edi ; bswap eax ; ret
0x000000000003a6a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000096e84 : mov eax, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000ff2c7 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009ea17 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000002121b : mov eax, edi ; neg eax ; ret
0x000000000009f515 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009735a : mov eax, edi ; pop rbx ; ret
0x000000000002122e : mov eax, edi ; ret
0x00000000001193a0 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003a632 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000011909a : mov eax, edi ; sar rax, 6 ; ret
0x0000000000119436 : mov eax, edi ; shr eax, 0x18 ; ret
0x000000000002c1f1 : mov eax, edi ; syscall
0x00000000000bb888 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fdd57 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000841ed : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d725 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000110b5c : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000097966 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cd1fb : mov eax, edx ; jle 0xcd20d ; ret
0x00000000000c9bdf : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047a12 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000054b8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba7 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c47 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000490b5 : mov eax, edx ; pop rbx ; ret
0x00000000000218a5 : mov eax, edx ; ret
0x0000000000034f01 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000d72e3 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000208a2 : mov eax, edx ; syscall
0x00000000000c9f7f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012e861 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9765 : mov eax, esi ; add rsp, 8 ; ret
0x000000000004a5be : mov eax, esi ; cmovae rax, rdi ; ret
0x00000000000352e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006fc84 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000c8503 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b633 : mov eax, esi ; pop rbx ; ret
0x000000000004a6f4 : mov eax, esi ; ret
0x0000000000172afb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000006f58e : mov eax, esi ; syscall
0x000000000008f09c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c47a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001faaf : mov eax, esp ; syscall
0x0000000000030cd1 : mov eax, r10d ; syscall
0x000000000001faae : mov eax, r12d ; syscall
0x00000000000717cb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c43c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078ba9 : mov eax, r13d ; syscall
0x00000000001276fa : mov eax, r14d ; syscall
0x000000000002c1f0 : mov eax, r15d ; syscall
0x0000000000123df3 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000fc4dc : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000fc597 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070fef : mov eax, r8d ; pop rbx ; ret
0x00000000000504b9 : mov eax, r8d ; ret
0x000000000002c2d4 : mov eax, r8d ; syscall
0x0000000000140577 : mov eax, r9d ; ret
0x00000000000358b2 : mov eax, r9d ; syscall
0x00000000001a2b0d : mov ebp, 0x41380e0a ; ret
0x00000000000fe569 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009f0f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f101 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0e1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001850f4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000128072 : mov ebp, 0x89480029 ; ret 0x1be
0x000000000013c533 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000187cd5 : mov ebp, 0xbfd8fffd ; std ; lcall [rax] ; ret 0xfffd
0x000000000017d404 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000195351 : mov ebp, 0xc180fffb ; sti ; call rax
0x0000000000181d3d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000009f161 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f141 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f121 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000003536 : mov ebp, 0xef5aa220 ; nop ; retf 0xe9ee
0x000000000009f212 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008d458 : mov ebp, 0xf80148c0 ; ret
0x000000000008d6dc : mov ebp, 0xf80148c6 ; ret
0x0000000000183e26 : mov ebp, 0xfb67d10d ; ret
0x000000000004dc26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004e1b6 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000564af : mov ebp, 0xfffffb58 ; call rax
0x000000000004c389 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000cf306 : mov ebp, 0xfffffcf8 ; call r12
0x00000000000ebee4 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000ec6f6 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x0000000000134831 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00000000000ebc51 : mov ebp, 0xffffff78 ; call rbx
0x00000000000dc60e : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000006a13b : mov ebp, dword ptr [rdx] ; mov qword ptr [rax], rcx ; jmp 0x66b7e
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000fc577 : mov ebp, dword ptr [rsp] ; syscall
0x000000000013302c : mov ebp, eax ; call 0x12f304
0x0000000000102837 : mov ebp, eax ; call rax
0x00000000001031d9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000352ed : mov ebp, ecx ; nop ; jmp rdx
0x00000000001981a1 : mov ebp, edi ; jmp rsp
0x00000000000aebd8 : mov ebp, edi ; setne dl ; jmp 0xaebec
0x00000000000b14f9 : mov ebp, edi ; setne dl ; jmp 0xb150c
0x00000000000b3cb0 : mov ebp, edi ; setne dl ; jmp 0xb3ccc
0x00000000001035df : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000007d8ad : mov ebp, edx ; call qword ptr [r15]
0x00000000001335b4 : mov ebp, esi ; call 0x1f8a4
0x0000000000173654 : mov ebp, esi ; call 0x1f8ac
0x0000000000172dcc : mov ebp, esp ; call 0x1f8ac
0x000000000012a615 : mov ebp, esp ; call r15
0x00000000001159d4 : mov ebp, esp ; pop rbp ; ret
0x00000000001b90c4 : mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x0000000000184e44 : mov ebx, 0x1b5c347e ; jmp 0x184e1c
0x0000000000173d5a : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x0000000000002d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000007d269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015b047 : mov ebx, 0x46f00ff2 ; retf
0x00000000001531f4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000153212 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000044869 : mov ebx, 0x6eba0014 ; add eax, dword ptr [rax] ; add al, ch ; retf 0xfe93
0x0000000000001f1b : mov ebx, 0x79e33a1c ; retf 0x6321
0x0000000000058398 : mov ebx, 0x83ffffe5 ; ret
0x0000000000003671 : mov ebx, 0x952a6c41 ; ret
0x00000000000d5b93 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x0000000000188ae5 : mov ebx, 0xaa49fff3 ; call rsp
0x00000000001150f4 : mov ebx, 0xafb8341 ; je 0x115103 ; ret
0x0000000000181d3b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000013dd73 : mov ebx, 0xc0850028 ; je 0x13dd89 ; xor eax, eax ; ret
0x0000000000132296 : mov ebx, 0xc8 ; call rax
0x000000000005f80c : mov ebx, 2 ; jmp 0x5baf7
0x00000000001153e2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000185464 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001335c1 : mov ebx, eax ; call 0x1f8a4
0x0000000000085961 : mov ebx, eax ; call 0x81b84
0x00000000001035e6 : mov ebx, eax ; call rax
0x0000000000025201 : mov ebx, eax ; jmp 0x251d3
0x000000000012e2ab : mov ebx, eax ; jne 0x12e249 ; xor eax, eax ; pop rbx ; ret
0x000000000012674f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000fca97 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037307 : mov ebx, eax ; mov rdi, r12 ; call r15
0x0000000000173604 : mov ebx, ebp ; call 0x1f8ac
0x00000000000452bf : mov ebx, edi ; syscall
0x000000000002c376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x000000000012bf36 : mov ebx, esi ; sub rsp, 8 ; call 0x138238
0x00000000000c88e3 : mov ebx, esi ; sub rsp, 8 ; syscall
0x00000000000cd216 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x0000000000138323 : mov ecx, 0x480028bc ; add esp, 8 ; ret
0x00000000001047eb : mov ecx, 0x49fff1b0 ; mov edi, dword ptr [rsi] ; call rbx
0x000000000012b983 : mov ecx, 0x5b0029d3 ; ret
0x00000000001832f9 : mov ecx, 0x5b92ac50 ; retf
0x0000000000186b55 : mov ecx, 0x6e16ffed ; in eax, dx ; call qword ptr [rsi]
0x0000000000001d91 : mov ecx, 0x72b02084 ; retf
0x0000000000184dce : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000000d9b93 : mov ecx, 0x83000005 ; ret 0x3902
0x0000000000033edb : mov ecx, 0x8948fffe ; fucomip st(0) ; ret 0xfeb9
0x0000000000186b41 : mov ecx, 0xb99cffed ; in eax, dx ; call qword ptr [rsi]
0x00000000000fce10 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000033ee3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x0000000000030a04 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x000000000002b390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x000000000012b797 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000047c94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x000000000009fb9c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000013bec0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13bed9 ; xor eax, eax ; ret
0x000000000013bf00 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13bf19 ; xor eax, eax ; ret
0x0000000000047bb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000015101e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000074f4b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000091c73 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000ac609 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xac607 ; ret
0x0000000000047f46 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000185284 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x1852b9 ; retf 0x32dd
0x0000000000153393 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153593 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153793 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a5d70 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5db1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015b7b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b743 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b6d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b5f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b585 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b515 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b435 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b3c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b355 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b895 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a5d51 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000135bbd : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x0000000000132785 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000137e5e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013258d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012d51d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000001014d3 : mov ecx, dword ptr [rsp + 8] ; syscall
0x00000000000d9804 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd9823
0x000000000009ed34 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012d93c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000009ed46 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f4776 : mov ecx, ebp ; call 0xf11c4
0x000000000012aa21 : mov ecx, ebp ; call rbx
0x0000000000075291 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad66a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x0000000000088d30 : mov ecx, ebp ; mov rdx, r14 ; xor eax, eax ; call 0x55779
0x000000000002be41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009ea2e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000ad91d : mov ecx, edi ; call rbx
0x000000000010a479 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000014dc71 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc74 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007ba07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000002185b : mov ecx, esi ; call rbx
0x000000000012a2ad : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000010eee4 : mov edi, 0x2000004 ; call rax
0x0000000000105ca0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000332f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000e2e22 : mov edi, 0x3c8 ; call 0x1f8a7
0x00000000001044ed : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000004764f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000067898 : mov edi, 0x89000000 ; ret 0x348
0x00000000000c97e4 : mov edi, 0x8948002f ; ret 0x8d48
0x0000000000119899 : mov edi, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000001977ad : mov edi, 0xbb440000 ; in eax, dx ; call rsp
0x000000000006ddd7 : mov edi, 0xe0 ; call rax
0x000000000006dd9b : mov edi, 0xe0 ; jmp rax
0x000000000009d9db : mov edi, 0xf700000b ; ret 0
0x0000000000032dfd : mov edi, 4 ; call 0x1f8a7
0x0000000000003cca : mov edi, cs ; retf
0x00000000000fb0af : mov edi, dword ptr [r13 + 0x28] ; call 0xf7ac6
0x00000000000bb021 : mov edi, dword ptr [rax] ; call r14
0x0000000000102d43 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000e35a6 : mov edi, dword ptr [rbp + 0x20] ; call 0x1f8ad
0x00000000000e35af : mov edi, dword ptr [rbp + 0x28] ; call 0x1f8ad
0x00000000000fb0b0 : mov edi, dword ptr [rbp + 0x28] ; call 0xf7ac5
0x00000000000faed4 : mov edi, dword ptr [rbp + 0x28] ; mov r12d, dword ptr fs:[rbx] ; call 0xf78e9
0x00000000000cf305 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00000000000564ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00000000000ebc50 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00000000000acb05 : mov edi, dword ptr [rbp] ; call r12
0x0000000000038f6d : mov edi, dword ptr [rbp] ; call r14
0x000000000010299a : mov edi, dword ptr [rbp] ; call rbx
0x00000000000f60e0 : mov edi, dword ptr [rbx + 0x10] ; mov eax, ecx ; mov edx, dword ptr [rbx + 0x1c] ; syscall
0x000000000011fd7d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11fd79 ; pop rbx ; ret
0x000000000012804c : mov edi, dword ptr [rcx + 6] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000133041 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133059 ; ret
0x00000000001391a1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b9 ; ret
0x0000000000047bba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dd9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000102948 : mov edi, dword ptr [rdi] ; call rbx
0x000000000002bff8 : mov edi, dword ptr [rdi] ; syscall
0x0000000000072fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72fb4
0x0000000000113324 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001840e6 : mov edi, dword ptr [rdx] ; ret
0x0000000000102907 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102e2f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000143699 : mov edi, dword ptr [rsp + 0x18] ; call 0x1f8ae
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c92af : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f360e : mov edi, dword ptr [rsp + 0x20] ; call 0x1f8ae
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000012d539 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bbdb0 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00000000001159af : mov edi, dword ptr [rsp + 8] ; mov eax, 0xe6 ; syscall
0x000000000003401b : mov edi, dword ptr [rsp + 8] ; mov eax, 2 ; syscall
0x0000000000036b1e : mov edi, dword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x0000000000105890 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000112e62 : mov edi, dword ptr [rsp] ; call 0x1f8ad
0x0000000000102d90 : mov edi, dword ptr [rsp] ; call rbx
0x00000000000f7b6a : mov edi, dword ptr [rsp] ; mov eax, 0x4f ; syscall
0x00000000000369c5 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000230b1 : mov edi, eax ; call 0x8f3b4
0x00000000000e79c6 : mov edi, eax ; call 0x94474
0x0000000000136e04 : mov edi, eax ; call qword ptr [r10]
0x00000000000ece5a : mov edi, eax ; call rbx
0x00000000000877aa : mov edi, eax ; call rcx
0x0000000000136ef6 : mov edi, eax ; lea r9, [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136d07 : mov edi, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000004a6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x00000000000f6cd4 : mov edi, eax ; mov eax, 0x85 ; syscall
0x00000000000fdb03 : mov edi, eax ; mov eax, 1 ; syscall
0x000000000001facd : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000035940 : mov edi, eax ; mov eax, ebx ; syscall
0x000000000001faac : mov edi, eax ; mov eax, r12d ; syscall
0x00000000000358b0 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000008595e : mov edi, eax ; mov rbx, rax ; call 0x81b87
0x000000000012b794 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b38 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000001057be : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x00000000000fd906 : mov edi, eax ; xor eax, eax ; syscall
0x000000000013a78b : mov edi, ebp ; add rbx, r12 ; call r14
0x0000000000172b6c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e35b8 : mov edi, ebp ; call 0x1f8ac
0x00000000000be94e : mov edi, ebp ; call 0x7b3a4
0x00000000000869a2 : mov edi, ebp ; call 0x82bd4
0x00000000000fec81 : mov edi, ebp ; call 0x8b724
0x00000000000d4e17 : mov edi, ebp ; call 0xd1874
0x00000000000f4035 : mov edi, ebp ; call 0xf0334
0x000000000012e34e : mov edi, ebp ; call qword ptr [rbx]
0x000000000011ff5e : mov edi, ebp ; call r12
0x00000000000391ac : mov edi, ebp ; call r14
0x0000000000037347 : mov edi, ebp ; call r15
0x000000000002f6d9 : mov edi, ebp ; call rax
0x00000000000ad296 : mov edi, ebp ; call rbx
0x000000000013bf91 : mov edi, ebp ; call rcx
0x000000000012de45 : mov edi, ebp ; call rdx
0x000000000012cac5 : mov edi, ebp ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000554a1 : mov edi, ebp ; mov dword ptr [rsp + 8], edx ; call 0x71f98
0x000000000002c2d2 : mov edi, ebp ; mov eax, r8d ; syscall
0x000000000013b4d4 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000083344 : mov edi, ebp ; mov edx, 1 ; call 0x7fd59
0x0000000000173651 : mov edi, ebp ; mov r13, r14 ; call 0x1f8af
0x0000000000172dc9 : mov edi, ebp ; mov rbp, r12 ; call 0x1f8af
0x0000000000135bba : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132782 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012aa1e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00000000000378b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x00000000000859c3 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d74d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000002c2a0 : mov edi, ebp ; xor eax, eax ; syscall
0x0000000000034669 : mov edi, ebx ; add rsi, rbp ; mov eax, r8d ; syscall
0x0000000000057fc7 : mov edi, ebx ; call 0x114a74
0x00000000000fd9eb : mov edi, ebx ; call 0x11a424
0x0000000000133673 : mov edi, ebx ; call 0x1f8ac
0x0000000000085891 : mov edi, ebx ; call 0x81b84
0x00000000000bda2b : mov edi, ebx ; call 0x89d14
0x00000000000bf4ab : mov edi, ebx ; call 0x8b724
0x00000000000ceac5 : mov edi, ebx ; call qword ptr [r15]
0x000000000012e778 : mov edi, ebx ; call qword ptr [rax]
0x0000000000029c47 : mov edi, ebx ; call r12
0x0000000000021be0 : mov edi, ebx ; call r14
0x000000000006cb49 : mov edi, ebx ; call r8
0x0000000000052256 : mov edi, ebx ; call rax
0x00000000001740eb : mov edi, ebx ; jne 0x1740e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb808 : mov edi, ebx ; mov eax, 0x10f ; syscall
0x000000000003581d : mov edi, ebx ; mov eax, 0x82 ; syscall
0x00000000000cc1b7 : mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000001fa11 : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000003408d : mov edi, ebx ; mov eax, 3 ; syscall
0x000000000001fae4 : mov edi, ebx ; mov eax, ebp ; syscall
0x000000000012a510 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a612 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000222be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000173601 : mov edi, ebx ; mov rbx, rbp ; call 0x1f8af
0x0000000000088106 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007d8c2 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x000000000007221e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000132e40 : mov edi, ebx ; pop rbx ; pop rbp ; jmp 0x1f8ae
0x000000000013a910 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000174278 : mov edi, ebx ; test rdi, rdi ; jne 0x174272 ; pop rbx ; ret
0x00000000001414ad : mov edi, ecx ; mov eax, 1 ; syscall
0x0000000000080fae : mov edi, ecx ; mov eax, 3 ; syscall
0x0000000000080f82 : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000089268 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000f365e : mov edi, edi ; call 0x1f8ac
0x0000000000065d5d : mov edi, edi ; call 0x71fd4
0x000000000005f10f : mov edi, edi ; call 0x7b3a4
0x00000000001389e0 : mov edi, edi ; call qword ptr [rax]
0x000000000013a86e : mov edi, edi ; call r14
0x0000000000074015 : mov edi, edi ; call rax
0x0000000000103674 : mov edi, edi ; call rbx
0x00000000000ffd4d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x000000000013809f : mov edi, edi ; lea r9, [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001076a3 : mov edi, edi ; mov eax, 0x122 ; syscall
0x00000000000cd2ba : mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000cd32a : mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000fd19c : mov edi, edi ; mov eax, 0x71 ; syscall
0x00000000000fd20c : mov edi, edi ; mov eax, 0x72 ; syscall
0x00000000000cd57e : mov edi, edi ; mov eax, 0x75 ; syscall
0x00000000000cd5fe : mov edi, edi ; mov eax, 0x77 ; syscall
0x00000000000cc162 : mov edi, edi ; mov eax, 0xf7 ; syscall
0x0000000000033fce : mov edi, edi ; mov eax, 2 ; syscall
0x000000000014150a : mov edi, edi ; mov eax, 3 ; syscall
0x000000000008162c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000010af2c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000075294 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000000f2dc0 : mov edi, edx ; call 0x1f8ac
0x00000000001151a8 : mov edi, edx ; jmp rax
0x000000000004a771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x00000000000fc571 : mov edi, edx ; mov eax, ebx ; mov r13d, dword ptr fs:[r12] ; syscall
0x00000000000cc731 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000cc741 : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000f6442 : mov edi, edx ; syscall
0x00000000001735f2 : mov edi, esi ; call 0x1f8ac
0x0000000000081867 : mov edi, esi ; call qword ptr [rax]
0x000000000012d2b8 : mov edi, esi ; call rax
0x0000000000103654 : mov edi, esi ; call rbx
0x000000000012c9d3 : mov edi, esi ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000002c1ee : mov edi, esi ; mov eax, r15d ; syscall
0x00000000000776c7 : mov edi, esi ; mov eax, r9d ; syscall
0x0000000000172e66 : mov edi, esi ; mov r14, r15 ; call 0x1f8af
0x000000000012d51a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000005e8da : mov edi, esp ; call 0x7b3a4
0x00000000000fed01 : mov edi, esp ; call 0x8b724
0x000000000013b5ef : mov edi, esp ; call qword ptr [rax]
0x000000000003730a : mov edi, esp ; call r15
0x000000000012b886 : mov edi, esp ; call rax
0x0000000000074fe9 : mov edi, esp ; call rbx
0x000000000013a981 : mov edi, esp ; call rdx
0x0000000000109051 : mov edi, esp ; mov eax, 0x14 ; syscall
0x0000000000108e5e : mov edi, esp ; mov eax, 1 ; syscall
0x0000000000109255 : mov edi, esp ; mov eax, 2 ; syscall
0x0000000000030ab8 : mov edi, esp ; mov eax, 3 ; syscall
0x00000000001016b1 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000030ccf : mov edi, esp ; mov eax, r10d ; syscall
0x000000000014290e : mov edi, esp ; mov r12, rsp ; call 0x8f3b7
0x00000000000ad91a : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000088e56 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000111f78 : mov edi, esp ; xor eax, eax ; call 0x10ea76
0x00000000000cbf79 : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000123907 : mov edx, 0x102 ; cmove eax, edx ; ret
0x00000000001238ca : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001238ac : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000000784b6 : mov edx, 0x130 ; pop rbx ; ret
0x00000000001419dd : mov edx, 0x159 ; call 0x2dc47
0x0000000000080fdc : mov edx, 0x234 ; call 0x7d287
0x000000000008105d : mov edx, 0x237 ; call 0x7d287
0x000000000008103e : mov edx, 0x23a ; call 0x7d287
0x0000000000021972 : mov edx, 0x2c ; call 0x2dc47
0x00000000000b1945 : mov edx, 0x3e1 ; call 0x2dc47
0x000000000011f38f : mov edx, 0x448b0006 ; ret 0x4804
0x000000000015afc7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000021953 : mov edx, 0x4a ; call 0x2dc47
0x00000000001533f4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000153412 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000000211ad : mov edx, 0x5b ; call 0x2dc47
0x000000000006ac87 : mov edx, 0x5d5b0035 ; ret
0x00000000001a758d : mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001a761d : mov edx, 0x75800000 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000133e2a : mov edx, 0x854dffee ; dec dword ptr [rax - 0x77] ; ret
0x0000000000119d3c : mov edx, 0x8948002a ; ret 0x8b48
0x00000000000c47d2 : mov edx, 0xe9ffffea ; ret 0xfff3
0x000000000008e649 : mov edx, 0xf480001 ; ret 0x66c3
0x0000000000023b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000006ff7e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010cfc8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000003a6ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000013b48c : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013b4d6 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001122f8 : mov edx, 1 ; call 0x10ed27
0x0000000000083346 : mov edx, 1 ; call 0x7fd57
0x0000000000045b20 : mov edx, 3 ; jmp 0x45af8
0x00000000001123c6 : mov edx, 5 ; call 0x2e627
0x00000000000218a0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000114310 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000077465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4ec : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc501 ; call rdx
0x000000000009c251 : mov edx, dword ptr [rax + rsi*4] ; jmp 0x98cec
0x0000000000071f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000114311 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000114223 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000113ea0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000114377 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f60e5 : mov edx, dword ptr [rbx + 0x1c] ; syscall
0x0000000000078770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000007c7e1 : mov edx, dword ptr [rbx + 0x50] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x7c7d5
0x000000000011483d : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001485bf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000146ced : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000007400e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000754c6 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000001151a1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000036266 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000089675 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x89679 ; ret
0x0000000000173e60 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173e72 ; call rdx
0x000000000005fde3 : mov edx, dword ptr [rdx] ; mov dword ptr [rdx], eax ; jmp 0x5c807
0x000000000011452b : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a5d92 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a5d83 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5dd3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb21d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb206 ; ret
0x00000000000a5de3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000152dd1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000153190 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152a21 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a7360 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000a8190 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000a5d60 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9c00 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a73b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000a81e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000a5da1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a7341 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000a8161 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000a5d41 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010eee0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010eddc : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000f2dbb : mov edx, dword ptr [rsp + 0x18] ; mov rdi, r10 ; call 0x1f8b1
0x00000000000848e9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x00000000001073d6 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x0000000000070105 : mov edx, eax ; je 0x70117 ; mov eax, edx ; pop rbx ; ret
0x000000000010f474 : mov edx, eax ; jmp 0x10f486
0x000000000010f77f : mov edx, eax ; jmp 0x10f78d
0x0000000000134dc7 : mov edx, eax ; jmp 0x134d8b
0x00000000000711f7 : mov edx, eax ; jmp 0x7118b
0x0000000000071388 : mov edx, eax ; jmp 0x71322
0x0000000000075be3 : mov edx, eax ; jmp 0x75b80
0x0000000000076533 : mov edx, eax ; jmp 0x764d0
0x0000000000076cd0 : mov edx, eax ; jmp 0x76c57
0x00000000000780eb : mov edx, eax ; jmp 0x78081
0x000000000007d9c4 : mov edx, eax ; jmp 0x7d9e1
0x0000000000087840 : mov edx, eax ; jmp 0x8780b
0x00000000000beb68 : mov edx, eax ; jmp 0xbeb71
0x00000000000d0442 : mov edx, eax ; jmp 0xd03e1
0x00000000000d5199 : mov edx, eax ; jmp 0xd51b8
0x00000000000d767c : mov edx, eax ; jmp 0xd765a
0x00000000000d980c : mov edx, eax ; jmp 0xd981b
0x00000000000e0ff6 : mov edx, eax ; jmp 0xe0f90
0x00000000000f003c : mov edx, eax ; jmp 0xf0074
0x00000000000fe4fc : mov edx, eax ; jmp 0xfe490
0x0000000000121df0 : mov edx, eax ; mov eax, 3 ; syscall
0x0000000000075513 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000010584f : mov edx, eax ; mov eax, r12d ; syscall
0x0000000000111f75 : mov edx, eax ; mov rdi, r12 ; xor eax, eax ; call 0x10ea79
0x0000000000143ade : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000779bb : mov edx, ebp ; call 0x94474
0x00000000000378b7 : mov edx, ebp ; call r15
0x0000000000114707 : mov edx, ebp ; call rax
0x00000000000ad3b2 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000037341 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000012f513 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088937 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088e59 : mov edx, ebp ; mov rsi, rbp ; call rax
0x000000000003735c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000113ea7 : mov edx, ebx ; call rax
0x0000000000174577 : mov edx, ebx ; jne 0x17456e ; pop rbx ; ret
0x00000000000e79c3 : mov edx, ebx ; mov rdi, rax ; call 0x94477
0x000000000012f405 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000078ba4 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000068481 : mov edx, ecx ; jmp 0x6842a
0x000000000007c7e9 : mov edx, ecx ; jmp 0x7c7cd
0x0000000000088858 : mov edx, ecx ; jmp 0x8881f
0x00000000000f8391 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x00000000000f6d91 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000006b391 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x00000000000f89a1 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x00000000000f8a61 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000000f5a6a : mov edx, ecx ; mov eax, 0x11 ; syscall
0x0000000000107cea : mov edx, ecx ; mov eax, 0x113 ; syscall
0x0000000000107d7a : mov edx, ecx ; mov eax, 0x114 ; syscall
0x00000000000fc20a : mov edx, ecx ; mov eax, 0x115 ; syscall
0x0000000000107e3a : mov edx, ecx ; mov eax, 0x116 ; syscall
0x0000000000107ec1 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x00000000000f5aca : mov edx, ecx ; mov eax, 0x12 ; syscall
0x0000000000107801 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x0000000000107731 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x0000000000107f51 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x0000000000108011 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x0000000000108041 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000000fd5aa : mov edx, ecx ; mov eax, 0x17 ; syscall
0x0000000000107bc1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000000fba91 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000001084ea : mov edx, ecx ; mov eax, 0x2c ; syscall
0x000000000010830a : mov edx, ecx ; mov eax, 0x2d ; syscall
0x00000000001085d1 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x0000000000108541 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000001081e1 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000cc121 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x0000000000108ca1 : mov edx, ecx ; mov eax, 0x42 ; syscall
0x0000000000108b2a : mov edx, ecx ; mov eax, 0x45 ; syscall
0x0000000000108b8a : mov edx, ecx ; mov eax, 0x46 ; syscall
0x0000000000107c51 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x0000000000107b91 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x0000000000107a71 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x0000000000107c81 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x0000000000107cb1 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x0000000000140691 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x00000000001406e1 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x00000000001061f1 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x0000000000106191 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x0000000000106071 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x00000000001060a1 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x0000000000106101 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x0000000000105fe1 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x0000000000101861 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x0000000000108cd1 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x00000000001079ea : mov edx, ecx ; mov eax, 0xe8 ; syscall
0x00000000001079b1 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x000000000002c29d : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000088109 : mov edx, edi ; call rax
0x000000000018c19d : mov edx, edi ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x0000000000063b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011ceef : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000114318 : mov edx, esi ; call rax
0x0000000000088d33 : mov edx, esi ; xor eax, eax ; call 0x55776
0x00000000000fba50 : mov edx, esi ; xor esi, esi ; syscall
0x000000000011437e : mov edx, esp ; call rax
0x0000000000087bf3 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000000fd9e8 : mov edx, esp ; mov rdi, rbx ; call 0x11a427
0x00000000000fc696 : mov edx, esp ; syscall
0x00000000001a49ad : mov es, word ptr [rax] ; add al, dl ; jg 0x1a49a6 ; jmp qword ptr [rbx]
0x00000000000ea761 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000d7576 : mov es, word ptr [rbp + 6] ; add byte ptr [rax], al ; movsxd rcx, edx ; jmp 0xd758e
0x000000000010ada9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000005977e : mov es, word ptr [rdx + 5] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001b265e : mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000103b56 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000000a7fae : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000004f9ec : mov esi, 0x158d48c2 ; retf
0x000000000010e7d0 : mov esi, 0x20 ; call 0x7b227
0x000000000009ec16 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000886e3 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000334bb : mov esi, 0x3966010c ; retf 0x840f
0x00000000000ac4de : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x0000000000023ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000001850a6 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000012772b : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x0000000000185143 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000001958cc : mov esi, 0x64fffc5b ; pop rbx ; cld ; call rsp
0x000000000018322a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000009ec41 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009eb01 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009ec65 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000001a794d : mov esi, 0x7ed00000 ; out dx, eax ; call qword ptr [rdi]
0x0000000000143e6e : mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000115178 : mov esi, 0x80 ; syscall
0x0000000000142068 : mov esi, 0x80002 ; mov eax, ecx ; syscall
0x0000000000128be7 : mov esi, 0x83480153 ; ret
0x00000000000d7f89 : mov esi, 0x840f002e ; ret 2
0x000000000009eb7e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000000f1d32 : mov esi, 0x89010544 ; ret
0x00000000000c9954 : mov esi, 0x8948002f ; ret 0x8d48
0x0000000000087a35 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000ed506 : mov esi, 0x894d0251 ; retf 0x4864
0x00000000000ca8cc : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000008d80f : mov esi, 0x8c48348 ; ret
0x0000000000188ebc : mov esi, 0x99fff3d1 ; fcomip st(3) ; jmp rcx
0x000000000003d6df : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000009ecbd : mov esi, 0xc0844507 ; jne 0x9eca9 ; xor eax, eax ; ret
0x0000000000181d3e : mov esi, 0xc2c1c0bf ; ret
0x000000000010ec30 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009eb25 : mov esi, 0xc984070c ; jne 0x9eb20 ; ret
0x0000000000003cc7 : mov esi, 0xcf8cb236 ; retf
0x000000000009eae1 : mov esi, 0xd2840714 ; jne 0x9eae0 ; ret
0x00000000000aab94 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000000ff966 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x000000000009ebb5 : mov esi, 0xf2390714 ; je 0x9ebb8 ; ret
0x00000000001742e6 : mov esi, 0xf3ffeab5 ; ret
0x0000000000002bf1 : mov esi, 0xf8cbeb8f ; ret
0x000000000011cfe6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000103696 : mov esi, 1 ; call rbx
0x0000000000062574 : mov esi, 1 ; jmp 0x6254c
0x0000000000133027 : mov esi, 1 ; mov ebp, eax ; call 0x12f309
0x0000000000103883 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000010374f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000001036c7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103b0d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006cb43 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006c430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000102881 : mov esi, 2 ; jmp rax
0x0000000000103b01 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000103874 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000103740 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000001036b8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000010289b : mov esi, 3 ; jmp rax
0x000000000010407c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001040d3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000104153 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104253 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000038f6a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x00000000000c8128 : mov esi, dword ptr [rdx] ; syscall
0x0000000000063b67 : mov esi, dword ptr [rip + 0x360403] ; call rax
0x000000000005be59 : mov esi, dword ptr [rip + 0x368111] ; call rax
0x000000000005b803 : mov esi, dword ptr [rip + 0x368767] ; call rax
0x000000000005004b : mov esi, dword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cf : mov esi, dword ptr [rip + 0x376b9b] ; call rax
0x0000000000047f4a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000d7674 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd7659 ; mov edx, eax ; jmp 0xd7662
0x000000000014db59 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012c028 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000845e1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010ede1 : mov esi, dword ptr [rsp + 8] ; call rax
0x00000000000f4771 : mov esi, dword ptr [rsp + 8] ; mov rcx, rbp ; call 0xf11c9
0x000000000011ff59 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000c8127 : mov esi, dword ptr fs:[rdx] ; syscall
0x000000000006d712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x0000000000142fdf : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000088e5c : mov esi, ebp ; call rax
0x0000000000078ba7 : mov esi, ebp ; mov eax, r13d ; syscall
0x00000000000cc1b5 : mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000776c4 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x00000000000cdfde : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000008588e : mov esi, ebp ; mov rdi, rbx ; call 0x81b87
0x00000000000bda28 : mov esi, ebp ; mov rdi, rbx ; call 0x89d17
0x0000000000085c7e : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000001158a6 : mov esi, ebp ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000c84bc : mov esi, ebp ; xor edx, edx ; jmp 0xc848a
0x00000000001886c5 : mov esi, ebx ; call qword ptr [rdx]
0x0000000000142207 : mov esi, ebx ; mov eax, 1 ; syscall
0x0000000000036921 : mov esi, ebx ; mov eax, ecx ; syscall
0x0000000000036b1b : mov esi, ebx ; mov rdi, qword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x00000000000369c2 : mov esi, ebx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000003735f : mov esi, ebx ; mov rdi, r12 ; call r15
0x00000000001091c2 : mov esi, ebx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000001389dd : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a86b : mov esi, ebx ; mov rdi, r15 ; call r14
0x0000000000140a56 : mov esi, ebx ; mov rdi, r8 ; mov eax, r12d ; syscall
0x00000000000877a7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x000000000008699f : mov esi, ebx ; mov rdi, rbp ; call 0x82bd7
0x000000000013bf8e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000c75a8 : mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x000000000006f181 : mov esi, ecx ; mov eax, r8d ; syscall
0x0000000000030ccc : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000172e69 : mov esi, edi ; call 0x1f8ac
0x0000000000141eae : mov esi, edi ; mov eax, r10d ; syscall
0x0000000000141d9d : mov esi, edi ; mov eax, r13d ; syscall
0x00000000000391a9 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000000c7593 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000132dca : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000113328 : mov esi, edx ; call rax
0x00000000000f6bdc : mov esi, edx ; mov eax, 4 ; syscall
0x00000000000f6c2b : mov esi, edx ; mov eax, 5 ; syscall
0x00000000000f6c7c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000002c2cf : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000001faa9 : mov esi, edx ; mov rdi, r8 ; mov eax, r12d ; syscall
0x000000000001fae1 : mov esi, edx ; mov rdi, rbx ; mov eax, ebp ; syscall
0x00000000000c52d0 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000879d5 : mov esi, esi ; call rax
0x00000000000fd19a : mov esi, esi ; mov edi, edi ; mov eax, 0x71 ; syscall
0x00000000000fd20a : mov esi, esi ; mov edi, edi ; mov eax, 0x72 ; syscall
0x00000000000cd57c : mov esi, esi ; mov edi, edi ; mov eax, 0x75 ; syscall
0x00000000000cd5fc : mov esi, esi ; mov edi, edi ; mov eax, 0x77 ; syscall
0x00000000000cc160 : mov esi, esi ; mov edi, edi ; mov eax, 0xf7 ; syscall
0x00000000000564ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x000000000010588d : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000000ba6f2 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00000000000ba562 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38b : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000000378b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000013c0b8 : mov esi, esi ; mov rdi, rbp ; call r12
0x00000000001358a4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000fcd15 : mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000cdcd9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001322e4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000c525e : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000013ab95 : mov esi, esp ; call qword ptr [rax]
0x000000000003731b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000086b35 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f4032 : mov esi, esp ; mov rdi, rbp ; call 0xf0337
0x0000000000037344 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000088d01 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012aa1b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012e775 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087e63 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000012a60f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x000000000008683a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000008605d : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000037d7 : mov esi, fs ; mov al, 0x85 ; jbe 0x378a ; outsb dx, byte ptr [rsi] ; retf
0x00000000000c525d : mov esi, r14d ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00000000001971ac : mov esp, 0x14000096 ; adc al, 0xeb ; call rsp
0x0000000000198c14 : mov esp, 0x14000149 ; insd dword ptr [rdi], dx ; call rsp
0x000000000019b0f4 : mov esp, 0x14000234 ; and bh, dl ; call rsp
0x0000000000043e30 : mov esp, 0x1b6024 ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x000000000019a8cc : mov esp, 0x340001f4 ; fprem ; call rsp
0x00000000001b11f4 : mov esp, 0x38000156 ; jnp 0x1b11f7 ; jmp qword ptr [rcx]
0x0000000000197da4 : mov esp, 0x40000e4 ; out dx, al ; call rsp
0x0000000000197df4 : mov esp, 0x40000e6 ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x0000000000199b44 : mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000196be4 : mov esp, 0x44000077 ; in eax, 0xe9 ; call rsp
0x000000000019938c : mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x000000000008f837 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000138c91 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008eb21 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000196b94 : mov esp, 0x54000076 ; loope 0x196b8b ; call rsp
0x00000000001277d7 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000001a3df4 : mov esp, 0x68000082 ; in eax, dx ; call qword ptr [rax]
0x0000000000199304 : mov esp, 0x74000178 ; adc al, 0xf6 ; call rsp
0x00000000000d732e : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00000000001aedf4 : mov esp, 0x78000132 ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001adef4 : mov esp, 0x8000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1f4 : mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000000d50e6 : mov esp, 0x8024 ; add byte ptr [rax - 0x77], cl ; retf 0x8944
0x00000000000b01fb : mov esp, 0x80d4 ; add byte ptr [rcx + 0x29], al ; retf 0xca89
0x00000000000b6f6a : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000de974 : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000de0b4 : mov esp, 0x89000000 ; ret 0xd139
0x00000000000bf810 : mov esp, 0x89000373 ; ret 0x3b8
0x000000000010b8d4 : mov esp, 0x8948002b ; ret 0x8d48
0x000000000019a3ec : mov esp, 0x940001d1 ; adc edi, eax ; call rsp
0x00000000000f4cda : mov esp, 0x9824 ; add al, ch ; ret
0x00000000000de51d : mov esp, 0xa024 ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000db39b : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000197725 : mov esp, 0xaf940000 ; in eax, dx ; call rsp
0x0000000000196e9c : mov esp, 0xb4000084 ; cmp edx, ebp ; jmp rsp
0x000000000019b894 : mov esp, 0xb4000116 ; sti ; call rsp
0x000000000008f826 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000a6475 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x000000000019928c : mov esp, 0xc4000176 ; or al, 0xf6 ; call rsp
0x000000000019b3fc : mov esp, 0xc4000247 ; pop rbp ; cli ; call rsp
0x00000000001b09f4 : mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56f4 : mov esp, 0xc800019b ; ret
0x00000000000e0718 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000008b8b3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000019796c : mov esp, 0xd40000cc ; std ; in eax, dx ; call rsp
0x0000000000197cc4 : mov esp, 0xd40000e0 ; pop rax ; out dx, al ; call rsp
0x00000000001aa2f4 : mov esp, 0xd80000e7 ; out dx, al ; int1 ; jmp rcx
0x00000000001a7785 : mov esp, 0xd9d80000 ; cld ; call qword ptr [rax]
0x00000000001969cc : mov esp, 0xe400006c ; ja 0x1969c3 ; call rsp
0x00000000001b2af4 : mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x0000000000199c44 : mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x0000000000001eb4 : mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x00000000000965ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008eb31 : mov esp, 0xf80148c0 ; ret
0x0000000000066c64 : mov esp, 1 ; jmp 0x63703
0x0000000000067493 : mov esp, 2 ; jmp 0x63703
0x00000000000faed9 : mov esp, dword ptr [rbx] ; call 0xf78e4
0x00000000000352ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000cf50a : mov esp, edi ; je 0xcf529 ; call 0x8b726
0x000000000005f80a : mov esp, edi ; mov ebx, 2 ; jmp 0x5baf9
0x00000000000d5194 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51bd
0x0000000000102834 : mov esp, edx ; mov rbp, rax ; call rax
0x00000000001895a5 : mov esp, esi ; call rsp
0x0000000000027ac5 : mov esp, esi ; jmp 0x27a97
0x0000000000189585 : mov esp, esi ; jmp rdx
0x000000000009f47d : mov esp, esi ; sub rsp, 8 ; call 0x8b728
0x000000000007d8a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000142911 : mov esp, esp ; call 0x8f3b4
0x00000000000fe171 : mov gs, word ptr [rax + rax] ; ret
0x0000000000003825 : mov gs, word ptr [rbx] ; retf 0x707d
0x000000000011f733 : mov gs, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000094d5e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf4a7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8b728
0x000000000009fb90 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000123f07 : mov qword ptr [r9], r10 ; ret
0x0000000000123fa3 : mov qword ptr [r9], rcx ; ret
0x0000000000123f77 : mov qword ptr [r9], rdi ; ret
0x0000000000071c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000071c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007bb19 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000fce53 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000123d09 : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000f2db2 : mov qword ptr [rax], rbx ; call 0x1f8ad
0x000000000006a13d : mov qword ptr [rax], rcx ; jmp 0x66b7c
0x0000000000072164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084115 : mov qword ptr [rax], rdi ; ret
0x00000000000720a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002d9d2 : mov qword ptr [rax], rdx ; ret
0x0000000000072ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d3113 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd313c
0x000000000010599b : mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000105997 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000069026 : mov qword ptr [rbp - 0x4d0], rcx ; jmp 0x65b12
0x00000000000694b9 : mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x65fc2
0x000000000006914b : mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x69127
0x000000000004d64d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000065555 : mov qword ptr [rbp - 0x508], r8 ; call 0x71fd9
0x000000000006953c : mov qword ptr [rbp - 0x510], rax ; jmp 0x65fcc
0x0000000000023655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x0000000000114702 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000003a5f9 : mov qword ptr [rbp], rdx ; call rax
0x000000000002a6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001435f5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001435ad : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007c7e4 : mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x7c7d2
0x0000000000076ba4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c218 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e83ba : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008926d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000fc1f0 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b20a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000078326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008964c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001025d1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000143820 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013826e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000891b5 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000896d2 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008926a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000132313 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002057c : mov qword ptr [rcx + 0x968], rax ; ret
0x0000000000168d53 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d63 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d73 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d83 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000481ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d6ce1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f2d62 : mov qword ptr [rcx], rax ; call 0x1f7f5
0x0000000000075663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000168d10 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168d30 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d40 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d50 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d60 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d70 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d80 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168d20 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168d00 : mov qword ptr [rcx], rdx ; ret
0x00000000000f68ba : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000048b3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000a757c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000a83cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000a5f0c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a5eec : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9e3c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6bdf : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5f4f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f6f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f30 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013bde5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010e749 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10e71d
0x000000000013591b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000094cd0 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000001358d3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007eaca : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036048 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000f5f1d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a753c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000a838c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000a5eac : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9dfc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a755c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000a83ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000a5ecc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9e1c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b5f7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b587 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b517 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4a7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a743a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000a827a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x000000000015b437 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dfa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a9cea : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a745a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000a829a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x000000000015b3c7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e0a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a9d0a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a747a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000a82ba : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x000000000015b357 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e1a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a9d2a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff237 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000482f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048ac3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b136 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003ac93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac84 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ff227 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000036471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000124087 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008f31d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000001528b4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528f2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000152c3b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae07 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152e1b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad87 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015300b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad07 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001531dc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac78 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001533dc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abe8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001535dc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab58 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6d60 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000489b9 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001528b8 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528f6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a6b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b67 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae87 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000054d85 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094a96 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000048988 : mov qword ptr [rdi], r9 ; ret
0x00000000000ff224 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000003655a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a73c6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000a6a86 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5dd6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5de6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5df7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5e07 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e17 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f31a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000a5dc7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f9c2 : mov qword ptr [rdi], rcx ; ret
0x00000000000a73b3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000a81e3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000a6d80 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6da0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6db0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dc0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dd0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d90 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009eddf : mov qword ptr [rdi], rdx ; ret
0x00000000000a9c53 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009fb8d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014db3d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000004a0a2 : mov qword ptr [rdi], rsi ; ret
0x000000000006dcb6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00000000000784b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000710cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071273 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012e7ef : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012e7cb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e7cf : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016b10a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000166d7a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016b12a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000166d9a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016b14a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000166dba : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006b413 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016afda : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000166caa : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000132330 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000016af83 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001323fa : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000166c53 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e19c : mov qword ptr [rdx], rax ; ret
0x00000000000762de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009ed24 : mov qword ptr [rdx], rcx ; ret
0x00000000000e7afa : mov qword ptr [rdx], rdi ; ret
0x000000000013232d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000115ae7 : mov qword ptr [rip + 0x2b2632], rax ; pop rbp ; ret
0x000000000010955f : mov qword ptr [rip + 0x2bacda], rbx ; pop rbx ; ret
0x00000000000fe4f4 : mov qword ptr [rip + 0x2c72a5], rax ; mov rdx, rax ; jmp 0xfe498
0x000000000002c7c8 : mov qword ptr [rip + 0x399259], rax ; mov eax, ecx ; syscall
0x00000000000e88a3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012d90e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003ac03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000077f35 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000fc1d6 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f5e8e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e8886 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000012d8de : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e889f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007783a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001235be : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000123052 : mov qword ptr [rsi], rdi ; ret
0x0000000000119360 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000081a67 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081950 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008162e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000819aa : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bfac : mov qword ptr [rsp + 0x28], r9 ; call 0x138237
0x0000000000100ee9 : mov qword ptr [rsp + 0x28], rax ; call 0xcd1f7
0x00000000000335d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000e1c97 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bc207 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00000000000f35be : mov qword ptr [rsp + 8], r13 ; call 0x1f8af
0x000000000008921f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102d45 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013c2eb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000107377 : mov qword ptr [rsp - 0x30], r9 ; syscall
0x000000000010e815 : mov qword ptr [rsp], r8 ; call 0x7b226
0x000000000008958f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000f7272 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x00000000000fcf92 : mov qword ptr [rsp], rax ; mov eax, 0x13 ; syscall
0x0000000000107fa2 : mov qword ptr [rsp], rax ; mov eax, 0x130 ; syscall
0x00000000000fcff2 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x00000000001017c2 : mov qword ptr [rsp], rax ; mov eax, 0x1a ; syscall
0x00000000000cc2a2 : mov qword ptr [rsp], rax ; mov eax, 0x22 ; syscall
0x00000000000cc302 : mov qword ptr [rsp], rax ; mov eax, 0x23 ; syscall
0x0000000000108142 : mov qword ptr [rsp], rax ; mov eax, 0x2a ; syscall
0x00000000001080b2 : mov qword ptr [rsp], rax ; mov eax, 0x2b ; syscall
0x00000000001084a2 : mov qword ptr [rsp], rax ; mov eax, 0x2e ; syscall
0x0000000000108382 : mov qword ptr [rsp], rax ; mov eax, 0x2f ; syscall
0x00000000000fd782 : mov qword ptr [rsp], rax ; mov eax, 0x4a ; syscall
0x00000000000fd812 : mov qword ptr [rsp], rax ; mov eax, 0x4b ; syscall
0x00000000000f7a52 : mov qword ptr [rsp], rax ; mov eax, 0x55 ; syscall
0x00000000000f72d2 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x00000000000f7052 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x00000000000f7902 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x00000000000fb742 : mov qword ptr [rsp], rax ; mov eax, 7 ; syscall
0x000000000012a512 : mov qword ptr [rsp], rcx ; call r12
0x000000000013821e : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013826d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e19b : mov qword ptr fs:[rdx], rax ; ret
0x000000000014db3c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000f8390 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x000000000006b390 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x00000000000f89a0 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x00000000000f8a60 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000000f5a69 : mov r10, rcx ; mov eax, 0x11 ; syscall
0x0000000000107ce9 : mov r10, rcx ; mov eax, 0x113 ; syscall
0x0000000000107d79 : mov r10, rcx ; mov eax, 0x114 ; syscall
0x00000000000fc209 : mov r10, rcx ; mov eax, 0x115 ; syscall
0x0000000000107e39 : mov r10, rcx ; mov eax, 0x116 ; syscall
0x0000000000107ec0 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000f5ac9 : mov r10, rcx ; mov eax, 0x12 ; syscall
0x0000000000107800 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x0000000000107730 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x0000000000107f50 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x0000000000108010 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x0000000000108040 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000fd5a9 : mov r10, rcx ; mov eax, 0x17 ; syscall
0x0000000000107bc0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000fba90 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000001084e9 : mov r10, rcx ; mov eax, 0x2c ; syscall
0x0000000000108309 : mov r10, rcx ; mov eax, 0x2d ; syscall
0x00000000001085d0 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x0000000000108540 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000001081e0 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000cc120 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000108ca0 : mov r10, rcx ; mov eax, 0x42 ; syscall
0x0000000000108b29 : mov r10, rcx ; mov eax, 0x45 ; syscall
0x0000000000108b89 : mov r10, rcx ; mov eax, 0x46 ; syscall
0x0000000000107c50 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x0000000000107b90 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x0000000000107a70 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x0000000000107c80 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x0000000000107cb0 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000140690 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x00000000001406e0 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000001061f0 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x0000000000106190 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x0000000000106070 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000001060a0 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x0000000000106100 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x0000000000105fe0 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x0000000000101860 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x0000000000108cd0 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000001079e9 : mov r10, rcx ; mov eax, 0xe8 ; syscall
0x00000000001079b0 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x000000000015afc6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000153411 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000133e29 : mov r10d, 0x854dffee ; dec dword ptr [rax - 0x77] ; ret
0x000000000009c250 : mov r10d, dword ptr [rax + rsi*4] ; jmp 0x98ced
0x000000000012674e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x000000000015b046 : mov r11d, 0x46f00ff2 ; retf
0x0000000000153211 : mov r11d, 0x4f7f0ff3 ; retf
0x00000000000cf509 : mov r12, rdi ; je 0xcf52a ; call 0x8b727
0x00000000000d5193 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51be
0x0000000000027ac4 : mov r12, rsi ; jmp 0x27a98
0x000000000009f47c : mov r12, rsi ; sub rsp, 8 ; call 0x8b729
0x000000000007d8a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000142910 : mov r12, rsp ; call 0x8f3b5
0x0000000000066c63 : mov r12d, 1 ; jmp 0x63704
0x0000000000067492 : mov r12d, 2 ; jmp 0x63704
0x00000000000faed8 : mov r12d, dword ptr [rbx] ; call 0xf78e5
0x00000000000faed7 : mov r12d, dword ptr fs:[rbx] ; call 0xf78e6
0x0000000000102833 : mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000173653 : mov r13, r14 ; call 0x1f8ad
0x00000000000aebd7 : mov r13, r15 ; setne dl ; jmp 0xaebed
0x00000000000b14f8 : mov r13, r15 ; setne dl ; jmp 0xb150d
0x00000000000b3caf : mov r13, r15 ; setne dl ; jmp 0xb3ccd
0x000000000007d8ac : mov r13, rdx ; call qword ptr [r15]
0x000000000012a614 : mov r13, rsp ; call r15
0x00000000000fc576 : mov r13d, dword ptr [r12] ; syscall
0x000000000006a13a : mov r13d, dword ptr [rdx] ; mov qword ptr [rax], rcx ; jmp 0x66b7f
0x00000000000fc575 : mov r13d, dword ptr fs:[r12] ; syscall
0x00000000001031d8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000001335b3 : mov r13d, esi ; call 0x1f8a5
0x0000000000172e68 : mov r14, r15 ; call 0x1f8ad
0x00000000001014cf : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000ff2c6 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000ebf5d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000009d279 : mov r8d, 0xfff167e9 ; dec dword ptr [rbp - 0x77] ; retf 0x894c
0x0000000000112291 : mov r8d, 1 ; call 0x10ed28
0x00000000001014d2 : mov r9, qword ptr [rsp + 8] ; syscall
0x000000000002185a : mov r9, r14 ; call rbx
0x00000000000ad91c : mov r9, r15 ; call rbx
0x00000000000cbfab : mov rax, -0xe ; ret
0x0000000000078330 : mov rax, -1 ; pop rbx ; ret
0x00000000000353e6 : mov rax, -1 ; ret
0x00000000000354b0 : mov rax, 0xf ; syscall
0x00000000000abf70 : mov rax, 1 ; ret
0x00000000000abf80 : mov rax, 2 ; ret
0x00000000000abf90 : mov rax, 3 ; ret
0x00000000000abfa0 : mov rax, 4 ; ret
0x00000000000abfb0 : mov rax, 5 ; ret
0x00000000000abfc0 : mov rax, 6 ; ret
0x00000000000abfd0 : mov rax, 7 ; ret
0x0000000000112b94 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b64
0x0000000000106278 : mov rax, qword ptr [rax + 0x110] ; ret
0x000000000014351e : mov rax, qword ptr [rax + 0x130] ; jmp rax
0x0000000000109c1f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000001099cf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001149d8 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000134fb3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000074f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000135853 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000106270 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013aab4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000106268 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x000000000002df14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002da1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000013aaa9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003a722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289f8 : mov rax, qword ptr [rax] ; ret
0x000000000007e06e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x0000000000085565 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x85577 ; call rax
0x000000000006960c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x00000000001031db : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000222c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000077490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000138239 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x138251 ; pop rbx ; ret
0x0000000000166c50 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000cc57c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc593 ; call rax
0x000000000013c1e2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013bd80 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c8850 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000173f77 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f90 ; call rax
0x000000000012d926 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000774d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d95e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013b238 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a0 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000013bb48 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb58 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aab0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aaa5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013ab90 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c4a6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007c84e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001151a4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002deb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012ddb7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e7af7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x0000000000140f23 : mov rax, qword ptr [rip + 0x2844e6] ; call qword ptr [rax]
0x0000000000140910 : mov rax, qword ptr [rip + 0x284af9] ; call qword ptr [rax]
0x0000000000120fd0 : mov rax, qword ptr [rip + 0x2a48a1] ; ret
0x0000000000081a84 : mov rax, qword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cb10 : mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000029c90 : mov rax, qword ptr [rip + 0x39bc59] ; ret
0x0000000000021a50 : mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a40 : mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x000000000002cb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c8b0d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f0036 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf007a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fde4f : mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000010a3a2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a403 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001289f7 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000094f89 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f09b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e2b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008308c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a806 : mov rax, r8 ; pop rbx ; ret
0x000000000007df36 : mov rax, r8 ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006eff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ed80 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e76 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9123 : mov rax, rbx ; call rax
0x0000000000105e2e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaae : mov rax, rbx ; pop rbx ; ret
0x0000000000101ff9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a68b : mov rax, rcx ; or rax, rdx ; ret
0x0000000000033ea6 : mov rax, rcx ; ret
0x0000000000116470 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000003a6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009ea16 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f514 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097359 : mov rax, rdi ; pop rbx ; ret
0x000000000004a60d : mov rax, rdi ; ret
0x0000000000119099 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bb887 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000841ec : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000097965 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000010eb6b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007db2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000490b4 : mov rax, rdx ; pop rbx ; ret
0x00000000000484c9 : mov rax, rdx ; ret
0x00000000000c9764 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004a5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000006fc83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000c8502 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011ce41 : mov rax, rsi ; pop rbx ; ret
0x000000000004a6f3 : mov rax, rsi ; ret
0x0000000000172afa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000172dcb : mov rbp, r12 ; call 0x1f8ad
0x00000000000352ec : mov rbp, r9 ; nop ; jmp rdx
0x0000000000102836 : mov rbp, rax ; call rax
0x00000000001159d3 : mov rbp, rsp ; pop rbp ; ret
0x00000000001153e1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001335c0 : mov rbx, rax ; call 0x1f8a5
0x0000000000085960 : mov rbx, rax ; call 0x81b85
0x00000000001035e5 : mov rbx, rax ; call rax
0x0000000000025200 : mov rbx, rax ; jmp 0x251d4
0x000000000012e2aa : mov rbx, rax ; jne 0x12e24a ; xor eax, eax ; pop rbx ; ret
0x00000000000fca96 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x0000000000173603 : mov rbx, rbp ; call 0x1f8ad
0x00000000000452be : mov rbx, rdi ; syscall
0x000000000002c375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x000000000012bf35 : mov rbx, rsi ; sub rsp, 8 ; call 0x138239
0x00000000000c88e2 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000002b38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x000000000012b796 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a5db0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000135bbc : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132784 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012d51c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012aa20 : mov rcx, r13 ; call rbx
0x0000000000075290 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad669 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000012a2ac : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000009ed33 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009ed45 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f4775 : mov rcx, rbp ; call 0xf11c5
0x000000000014dc70 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc73 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000102d8f : mov rdi, qword ptr [r12] ; call rbx
0x00000000000e35a5 : mov rdi, qword ptr [r13 + 0x20] ; call 0x1f8ae
0x00000000000e35ae : mov rdi, qword ptr [r13 + 0x28] ; call 0x1f8ae
0x0000000000038f6c : mov rdi, qword ptr [r13] ; call r14
0x0000000000102999 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000102906 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102947 : mov rdi, qword ptr [r15] ; call rbx
0x00000000000bb020 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102d42 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000cf304 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000564ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000ebc4f : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000acb04 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000102ace : mov rdi, qword ptr [rbp] ; call rbx
0x00000000000f60df : mov rdi, qword ptr [rbx + 0x10] ; mov eax, ecx ; mov edx, dword ptr [rbx + 0x1c] ; syscall
0x0000000000047bb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dd99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000002bff7 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000072fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb5
0x0000000000113323 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000143698 : mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8af
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000f360d : mov rdi, qword ptr [rsp + 0x20] ; call 0x1f8af
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000012d538 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bbdaf : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000036b1d : mov rdi, qword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x000000000010588f : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000112e61 : mov rdi, qword ptr [rsp] ; call 0x1f8ae
0x00000000000f7b69 : mov rdi, qword ptr [rsp] ; mov eax, 0x4f ; syscall
0x00000000000369c4 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f2dbf : mov rdi, r10 ; call 0x1f8ad
0x000000000005e8d9 : mov rdi, r12 ; call 0x7b3a5
0x00000000000fed00 : mov rdi, r12 ; call 0x8b725
0x000000000013b5ee : mov rdi, r12 ; call qword ptr [rax]
0x0000000000037309 : mov rdi, r12 ; call r15
0x0000000000132c4c : mov rdi, r12 ; call rax
0x0000000000074fe8 : mov rdi, r12 ; call rbx
0x0000000000109050 : mov rdi, r12 ; mov eax, 0x14 ; syscall
0x0000000000108e5d : mov rdi, r12 ; mov eax, 1 ; syscall
0x0000000000030ab7 : mov rdi, r12 ; mov eax, 3 ; syscall
0x00000000001016b0 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000030cce : mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000000ad919 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000088e55 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000111f77 : mov rdi, r12 ; xor eax, eax ; call 0x10ea77
0x00000000000e35b7 : mov rdi, r13 ; call 0x1f8ad
0x00000000000fec80 : mov rdi, r13 ; call 0x8b725
0x000000000011ff5d : mov rdi, r13 ; call r12
0x00000000000391ab : mov rdi, r13 ; call r14
0x000000000002f6d8 : mov rdi, r13 ; call rax
0x000000000010362f : mov rdi, r13 ; call rbx
0x000000000002c2d1 : mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000173650 : mov rdi, r13 ; mov r13, r14 ; call 0x1f8b0
0x00000000000378b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000002c29f : mov rdi, r13 ; xor eax, eax ; syscall
0x00000000001735f1 : mov rdi, r14 ; call 0x1f8ad
0x0000000000081866 : mov rdi, r14 ; call qword ptr [rax]
0x000000000012d2b7 : mov rdi, r14 ; call rax
0x0000000000103653 : mov rdi, r14 ; call rbx
0x000000000012c9d2 : mov rdi, r14 ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000002c1ed : mov rdi, r14 ; mov eax, r15d ; syscall
0x00000000000776c6 : mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000172e65 : mov rdi, r14 ; mov r14, r15 ; call 0x1f8b0
0x000000000012d519 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000f365d : mov rdi, r15 ; call 0x1f8ad
0x0000000000065d5c : mov rdi, r15 ; call 0x71fd5
0x000000000005f10e : mov rdi, r15 ; call 0x7b3a5
0x00000000001389df : mov rdi, r15 ; call qword ptr [rax]
0x000000000013a86d : mov rdi, r15 ; call r14
0x0000000000074014 : mov rdi, r15 ; call rax
0x0000000000103673 : mov rdi, r15 ; call rbx
0x000000000013809e : mov rdi, r15 ; lea r9, [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000033fcd : mov rdi, r15 ; mov eax, 2 ; syscall
0x0000000000141509 : mov rdi, r15 ; mov eax, 3 ; syscall
0x000000000008162b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000075293 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000f6cd3 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x00000000000fdb02 : mov rdi, r8 ; mov eax, 1 ; syscall
0x000000000001facc : mov rdi, r8 ; mov eax, 3 ; syscall
0x000000000003593f : mov rdi, r8 ; mov eax, ebx ; syscall
0x000000000001faab : mov rdi, r8 ; mov eax, r12d ; syscall
0x00000000000358af : mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000000fd905 : mov rdi, r8 ; xor eax, eax ; syscall
0x00000000001414ac : mov rdi, r9 ; mov eax, 1 ; syscall
0x0000000000080fad : mov rdi, r9 ; mov eax, 3 ; syscall
0x0000000000080f81 : mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000000230b0 : mov rdi, rax ; call 0x8f3b5
0x00000000000e79c5 : mov rdi, rax ; call 0x94475
0x0000000000136e03 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ece59 : mov rdi, rax ; call rbx
0x00000000000877a9 : mov rdi, rax ; call rcx
0x0000000000136ef5 : mov rdi, rax ; lea r9, [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136d06 : mov rdi, rax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000008595d : mov rdi, rax ; mov rbx, rax ; call 0x81b88
0x000000000012b793 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b37 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000001057bd : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000013a78a : mov rdi, rbp ; add rbx, r12 ; call r14
0x0000000000172b6b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013367a : mov rdi, rbp ; call 0x1f8ad
0x00000000000be94d : mov rdi, rbp ; call 0x7b3a5
0x00000000000869a1 : mov rdi, rbp ; call 0x82bd5
0x00000000000d4e16 : mov rdi, rbp ; call 0xd1875
0x00000000000f4034 : mov rdi, rbp ; call 0xf0335
0x000000000012e34d : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013c0ba : mov rdi, rbp ; call r12
0x000000000012c02c : mov rdi, rbp ; call r14
0x0000000000037346 : mov rdi, rbp ; call r15
0x0000000000084fb5 : mov rdi, rbp ; call rax
0x00000000000ad295 : mov rdi, rbp ; call rbx
0x000000000013bf90 : mov rdi, rbp ; call rcx
0x000000000012de44 : mov rdi, rbp ; call rdx
0x000000000012cac4 : mov rdi, rbp ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000554a0 : mov rdi, rbp ; mov dword ptr [rsp + 8], edx ; call 0x71f99
0x0000000000172dc8 : mov rdi, rbp ; mov rbp, r12 ; call 0x1f8b0
0x0000000000135bb9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132781 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132589 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012aa1d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00000000000859c2 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d74c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000034668 : mov rdi, rbx ; add rsi, rbp ; mov eax, r8d ; syscall
0x0000000000057fc6 : mov rdi, rbx ; call 0x114a75
0x00000000000fd9ea : mov rdi, rbx ; call 0x11a425
0x0000000000133672 : mov rdi, rbx ; call 0x1f8ad
0x0000000000085890 : mov rdi, rbx ; call 0x81b85
0x00000000000bda2a : mov rdi, rbx ; call 0x89d15
0x00000000000bf4aa : mov rdi, rbx ; call 0x8b725
0x00000000000ceac4 : mov rdi, rbx ; call qword ptr [r15]
0x000000000012e777 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000029c46 : mov rdi, rbx ; call r12
0x0000000000021bdf : mov rdi, rbx ; call r14
0x000000000006cb48 : mov rdi, rbx ; call r8
0x0000000000052255 : mov rdi, rbx ; call rax
0x00000000001740ea : mov rdi, rbx ; jne 0x1740e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb807 : mov rdi, rbx ; mov eax, 0x10f ; syscall
0x000000000003581c : mov rdi, rbx ; mov eax, 0x82 ; syscall
0x000000000001fa10 : mov rdi, rbx ; mov eax, 1 ; syscall
0x000000000003408c : mov rdi, rbx ; mov eax, 3 ; syscall
0x000000000001fae3 : mov rdi, rbx ; mov eax, ebp ; syscall
0x000000000012a50f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a611 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000222bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000173600 : mov rdi, rbx ; mov rbx, rbp ; call 0x1f8b0
0x0000000000088105 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007d8c1 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007221d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000132e3f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp 0x1f8af
0x000000000013a90f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001151a7 : mov rdi, rdx ; jmp rax
0x00000000000cc730 : mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000cc740 : mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000f6441 : mov rdi, rdx ; syscall
0x000000000012b885 : mov rdi, rsp ; call rax
0x000000000013a980 : mov rdi, rsp ; call rdx
0x0000000000109254 : mov rdi, rsp ; mov eax, 2 ; syscall
0x000000000014290d : mov rdi, rsp ; mov r12, rsp ; call 0x8f3b8
0x0000000000077464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4eb : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc502 ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000173e5f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173e73 ; call rdx
0x000000000005fde2 : mov rdx, qword ptr [rdx] ; mov dword ptr [rdx], eax ; jmp 0x5c808
0x0000000000152a20 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a5da0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000848e8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000011437d : mov rdx, r12 ; call rax
0x0000000000087bf2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000fd9e7 : mov rdx, r12 ; mov rdi, rbx ; call 0x11a428
0x0000000000114706 : mov rdx, r13 ; call rax
0x00000000000ad3b1 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012f512 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088e58 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000114317 : mov rdx, r14 ; call rax
0x0000000000088d32 : mov rdx, r14 ; xor eax, eax ; call 0x55777
0x0000000000088108 : mov rdx, r15 ; call rax
0x000000000011ceee : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000010f77e : mov rdx, r8 ; jmp 0x10f78e
0x00000000000d5198 : mov rdx, r8 ; jmp 0xd51b9
0x00000000000d980b : mov rdx, r8 ; jmp 0xd981c
0x0000000000068480 : mov rdx, r9 ; jmp 0x6842b
0x000000000002c29c : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x000000000010f473 : mov rdx, rax ; jmp 0x10f487
0x0000000000134dc6 : mov rdx, rax ; jmp 0x134d8c
0x000000000007d9c3 : mov rdx, rax ; jmp 0x7d9e2
0x000000000008783f : mov rdx, rax ; jmp 0x8780c
0x00000000000beb67 : mov rdx, rax ; jmp 0xbeb72
0x00000000000d0441 : mov rdx, rax ; jmp 0xd03e2
0x00000000000e0ff5 : mov rdx, rax ; jmp 0xe0f91
0x00000000000e0ff4 : mov rdx, rax ; jmp 0xe0f92
0x00000000000f003b : mov rdx, rax ; jmp 0xf0075
0x00000000000fe4fb : mov rdx, rax ; jmp 0xfe491
0x000000000010584e : mov rdx, rax ; mov eax, r12d ; syscall
0x00000000000779ba : mov rdx, rbp ; call 0x94475
0x00000000000378b6 : mov rdx, rbp ; call r15
0x0000000000088936 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113ea6 : mov rdx, rbx ; call rax
0x0000000000174576 : mov rdx, rbx ; jne 0x17456f ; pop rbx ; ret
0x00000000000e79c2 : mov rdx, rbx ; mov rdi, rax ; call 0x94478
0x000000000012f404 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000078ba3 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000007c7e8 : mov rdx, rcx ; jmp 0x7c7ce
0x0000000000088857 : mov rdx, rcx ; jmp 0x88820
0x00000000000f6d90 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000fba4f : mov rdx, rsi ; xor esi, esi ; syscall
0x00000000000fc695 : mov rdx, rsp ; syscall
0x0000000000038f69 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b66 : mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000005be58 : mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b802 : mov rsi, qword ptr [rip + 0x368767] ; call rax
0x000000000005004a : mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3ce : mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000047f49 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012c027 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010ede0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011ff58 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000002c2ce : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000001faa8 : mov rsi, r10 ; mov rdi, r8 ; mov eax, r12d ; syscall
0x000000000001fae0 : mov rsi, r10 ; mov rdi, rbx ; mov eax, ebp ; syscall
0x000000000003731a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000f4031 : mov rsi, r12 ; mov rdi, rbp ; call 0xf0338
0x0000000000037343 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000088d00 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012aa1a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000087e62 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086839 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000008605c : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000776c3 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000085c7d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000879d4 : mov rsi, r14 ; call rax
0x00000000000ba6f1 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000ba561 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013c0b7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x0000000000141ead : mov rsi, r15 ; mov eax, r10d ; syscall
0x0000000000141d9c : mov rsi, r15 ; mov eax, r13d ; syscall
0x00000000000391a8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x000000000006f180 : mov rsi, r9 ; mov eax, r8d ; syscall
0x0000000000030ccb : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000142fde : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000088e5b : mov rsi, rbp ; call rax
0x0000000000078ba6 : mov rsi, rbp ; mov eax, r13d ; syscall
0x00000000000cdfdd : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000008588d : mov rsi, rbp ; mov rdi, rbx ; call 0x81b88
0x00000000000bda27 : mov rsi, rbp ; mov rdi, rbx ; call 0x89d18
0x0000000000088b76 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000001158a5 : mov rsi, rbp ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000c84bb : mov rsi, rbp ; xor edx, edx ; jmp 0xc848b
0x0000000000142206 : mov rsi, rbx ; mov eax, 1 ; syscall
0x0000000000036920 : mov rsi, rbx ; mov eax, ecx ; syscall
0x00000000000369c1 : mov rsi, rbx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000003735e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000001091c1 : mov rsi, rbx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000001389dc : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a86a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x0000000000140a55 : mov rsi, rbx ; mov rdi, r8 ; mov eax, r12d ; syscall
0x00000000000877a6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000008699e : mov rsi, rbx ; mov rdi, rbp ; call 0x82bd8
0x000000000013bf8d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c7592 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000132dc9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000113327 : mov rsi, rdx ; call rax
0x00000000000f6bdb : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000000f6c2a : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000000f6c7b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000013ab94 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e774 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000009fbb5 : mov word ptr [r9 - 2], cx ; ret
0x00000000000fe331 : mov word ptr [rax + rax], gs ; ret
0x000000000019cfc4 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x000000000008f30d : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000013a7e0 : mov word ptr [rax - 0x12], ss ; dec dword ptr [rax - 0x77] ; ret
0x000000000013cec5 : mov word ptr [rax - 0x39], cs ; ret
0x00000000000ec541 : mov word ptr [rax - 0x77], cs ; ret
0x00000000000a65a0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001095b0 : mov word ptr [rbx + rbp + 0x5d027400], gs ; ret
0x00000000001ac6c4 : mov word ptr [rbx], cs ; add dword ptr [rax], eax ; cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001acec4 : mov word ptr [rbx], ss ; add dword ptr [rax], eax ; call 0x181ac2ae
0x00000000001b0cc4 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b454 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], ah ; cli ; call rsp
0x0000000000168ce2 : mov word ptr [rcx + 4], dx ; ret
0x0000000000168d23 : mov word ptr [rcx + 8], dx ; ret
0x0000000000198f2c : mov word ptr [rcx + rax], fs ; in al, 0x20 ; cmc ; jmp rsp
0x0000000000198dbc : mov word ptr [rcx + rax], ss ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000168cb0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168ca0 : mov word ptr [rcx], dx ; ret
0x00000000000a74bc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000a830c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000a5e4c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9d7c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a75c4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000a8414 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000a5f34 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9e84 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000015b897 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000001b2ac4 : mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000003b372 : mov word ptr [rdi + 2], dx ; ret
0x000000000009eaa2 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000a81b8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x000000000009e9a2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5d88 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a9c28 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a821a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000a73da : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000a5dca : mov word ptr [rdi + 8], dx ; ret
0x00000000000a9c8a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014db72 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000152fbc : mov word ptr [rdi - 2], cx ; ret
0x0000000000152dd4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000152fb8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a5d53 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a6a26 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000aa602 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015b89b : mov word ptr [rdi], cx ; ret
0x00000000000a7343 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000a8163 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000a5d43 : mov word ptr [rdi], dx ; ret
0x00000000000a9bd3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ea60 : mov word ptr [rdi], si ; lea rax, [rdi + 1] ; ret
0x000000000009e9d0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000009fbb2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000014db6f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000f5f50 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000001323af : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000016b058 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000a2afd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2b81 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000016b003 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000a2a98 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001099bf : mov word ptr [rdx], ax ; ret
0x00000000001bb87a : mov word ptr [rdx], cs ; ret
0x00000000001a71f3 : mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a6cc2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000fb5a5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003b2df : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b326 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000aa605 : mov word ptr [rsi - 2], cx ; ret
0x00000000000f5f33 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001bc328 : mov word ptr [rsi], es ; add dword ptr [r15], 2 ; retf
0x00000000001aaf50 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00000000001bb860 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ae378 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b0090 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000035002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000000fe330 : mov word ptr fs:[rax + rax], gs ; ret
0x000000000014db6e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000d572c : movabs al, byte ptr [0x14cffffff1d840f] ; retf
0x000000000003ded9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000000209ce : movabs al, byte ptr [0x2b80016bc] ; syscall
0x00000000001b2eaa : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00000000001a8574 : movabs al, byte ptr [0x440000006c000003] ; retf 0
0x00000000000f55a6 : movabs al, byte ptr [0x7701458d49000000] ; retf
0x00000000000db232 : movabs al, byte ptr [0x834801538d000000] ; ret
0x000000000006368d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x0000000000053c48 : movabs al, byte ptr [0x840fc08548000000] ; retf
0x0000000000056864 : movabs al, byte ptr [0x840fc08548000000] ; retf 0x1c
0x00000000000623f2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x00000000000ecd9c : movabs al, byte ptr [0x8948c085480003c8] ; ret
0x00000000000e054c : movabs al, byte ptr [0x8948c08548fff3f2] ; ret
0x00000000001000cc : movabs al, byte ptr [0x8948c08548fff762] ; ret
0x0000000000044d54 : movabs al, byte ptr [0x948f209480014f9] ; retf 0x8948
0x00000000001a85e4 : movabs al, byte ptr [0xb400000014000003] ; retf 0
0x00000000000081f0 : movabs al, byte ptr [0xd0000d001200002f] ; retf
0x0000000000072fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00000000000d09f0 : movabs byte ptr [0x8348e18948000000], al ; ret 0x480f
0x00000000000e3969 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00000000000ae7dd : movabs byte ptr [0xc74900758b48fff9], al ; ret 0xfc01
0x0000000000003acf : movabs byte ptr [0xd0bd63067c9a2d95], al ; retf 0x6e33
0x00000000001851e3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000000024f3 : movabs byte ptr [0xdec51188012c607d], al ; retf 0x736c
0x0000000000184e41 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000000313b4 : movabs dword ptr [0x14808c783490005], eax ; ret
0x0000000000002cb1 : movabs dword ptr [0x1ad04fca8653d0e9], eax ; retf 0x2217
0x00000000000d731b : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x00000000000bd0a1 : movabs dword ptr [0xe800000001003099], eax ; ret 0xf7c6
0x00000000000b6070 : movabs dword ptr [0xe80000036eba000d], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x0000000000183287 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x0000000000112e5e : movabs eax, dword ptr [0x3ee8243c8b48fff5] ; retf 0xfff0
0x00000000001105fb : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x000000000011f9fd : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x0000000000183b3a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000004bb47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x0000000000034b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000003492f : movapd xmm0, xmm1 ; ret
0x0000000000034b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x0000000000034e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x0000000000034930 : movaps xmm0, xmm1 ; ret
0x0000000000151542 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015153e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001515ec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034dd3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034856 : movd mm0, eax ; ret
0x0000000000034855 : movd mm0, rax ; ret
0x000000000003492c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000034cba : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000348bf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034c36 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003492b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034dd2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034c0c : movd xmm0, eax ; ret
0x0000000000034cb9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034c35 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000e0d10 : movdqa xmm0, xmm2 ; jmp 0xe0cf6
0x00000000000a5e20 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a767d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000a84cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000a6ce0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a5fed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8733 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000a6f23 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000015b56f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b4ff : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b48f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b41f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a761d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000a846d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000a5f8d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000015b3af : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a763d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000a848d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000a5fad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000015b33f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a765d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000a84ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000a5fcd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b95f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8ef : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b87f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b80f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b79f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b72f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6bf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b64f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5df : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f26c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8f289 ; ret
0x000000000008f285 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000015aacb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015ab3b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6de0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a82d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000a7494 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000a6b07 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e34 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e77 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e67 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ee8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5ea8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5ec8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5e48 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5fe9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f89 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5fa9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fc9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5e24 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a9d44 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b344 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a2be2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c02 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c22 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a16 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2be3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c03 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c23 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a17 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000101e5b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x101e2f
0x0000000000101e5c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x101e2e
0x00000000000e0d11 : movq mm0, mm2 ; jmp 0xe0cf5
0x00000000000a5e21 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a767e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000a84ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000a6ce1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a5fee : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a9f3e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a8734 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000a6f24 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a9fb4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015b570 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b500 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b490 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b420 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a761e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000a846e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000a5f8e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a9ede : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015b3b0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a763e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000a848e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000a5fae : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a9efe : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015b340 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a765e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000a84ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000a5fce : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a9f1e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b960 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8f0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b880 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b810 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b7a0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b730 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6c0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b650 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5e0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f26d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8f288 ; ret
0x000000000008f286 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000015aacc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015ab3c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b277 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1f7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b167 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b0e7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b067 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015afe7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af67 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aee7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae67 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ade7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad67 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ace7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac57 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015abc7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab37 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6de1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a82d5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000a7495 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000a6b08 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e35 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e88 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b5b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5e78 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e68 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ee9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5ea9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5ec9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5e49 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5fea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f8a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5faa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5e25 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a9d45 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b345 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034854 : movq xmm0, rax ; ret
0x000000000003492a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000006846a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5b94 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5b27
0x00000000000e072c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b5fd5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b09dc : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x0000000000198dc0 : movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000196555 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000196399 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rax
0x0000000000196395 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000198f88 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x00000000001a9adc : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rax] ; add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x0000000000197eb0 : movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x0000000000183f62 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001984e0 : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x00000000001979e4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x0000000000196980 : movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x19696f ; jmp rsp
0x0000000000196ab0 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196a9f ; jmp rsp
0x000000000008f198 : movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x8f1ae ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f198 : movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x8f1b0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001aabdc : movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001979e8 : movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x00000000001999ac : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019b65c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x00000000001b11dc : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000035047 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019ae28 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x000000000005f9ff : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001977cc : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x000000000019854c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, byte ptr [rcx] ; add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000194fe5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rcx
0x0000000000182e45 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000019b9d4 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rcx] ; add ah, ah ; ret 0xfffd
0x000000000013f314 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007573f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f6aa : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000001bc4b2 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000018545d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001ae149 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00000000001857f5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000001acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4d ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000000fe4f7 : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0xfe52c ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000001850b1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009ed44 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000037dc : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; retf
0x00000000000489e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000011b937 : movsd dword ptr [rdi], dword ptr [rsi] ; retf 0x2a
0x0000000000194fed : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rcx
0x0000000000183b41 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000000348c2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003488b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000bb8f8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000142fe5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000034c39 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034c20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000004a18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010ec2f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b417 : movsx eax, dl ; ret
0x000000000009eb24 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9eb21 ; ret
0x000000000009ec64 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9ec61 ; xor eax, eax ; ret
0x000000000009ebb4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9ebb9 ; ret
0x000000000009eae0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9eae1 ; ret
0x00000000001016ff : movsxd r10, r10d ; syscall
0x00000000000c3258 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x0000000000089d91 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000158f4b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015101b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000009ea30 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000108e06 : movsxd r9, dword ptr [rax] ; add byte ptr [rax + 2], bh ; syscall
0x000000000009e990 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009e8c7 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000085544 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000002ebb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004b603 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000107d41 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000183ee0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x0000000000085545 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x0000000000063885 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000001b1e55 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax - 0x4b], bl ; cmc ; call rdi
0x00000000000ac439 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000d3fe2 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000009e8c8 : movsxd rax, dword ptr [rdx + rax*4] ; add r10, rax ; jmp r10
0x00000000000c3259 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, r8 ; jmp rdx
0x00000000000210b4 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000009e991 : movsxd rax, dword ptr [rdx + rcx*4] ; add r10, rax ; jmp r10
0x0000000000168bb9 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000002ebb8 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000006c1d3 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c302 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000002e8ee : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000aabc8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ab4b : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014a784 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a648 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a89d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014a71d : movsxd rax, ecx ; ret
0x00000000000cdacc : movsxd rbp, dword ptr [rdi] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000186a29 : movsxd rbp, ebp ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000184d0a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000003822 : movsxd rbx, ebp ; clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000014a7c4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a645a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000047c91 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e44d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a5be9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000002be43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000005c1ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000009ea31 : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, r9 ; jmp rax
0x00000000000948ee : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000002be44 : movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, r8 ; jmp rcx
0x00000000001358a7 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x000000000012ee5f : movsxd rcx, dword ptr [rax - 0x77] ; ret
0x000000000003a175 : movsxd rcx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000009649c : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000108e07 : movsxd rcx, dword ptr [rax] ; add byte ptr [rax + 2], bh ; syscall
0x000000000005c1ee : movsxd rcx, dword ptr [rax] ; add rax, rcx ; jmp rax
0x00000000000a645b : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000158f4c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x0000000000047c92 : movsxd rcx, dword ptr [rbx + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000015101c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000016e44e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a5bea : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000033298 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000f2e5d : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000089d92 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000014a639 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a6a0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a667 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000d757c : movsxd rcx, edx ; jmp 0xd7588
0x00000000000d757b : movsxd rcx, edx ; jmp 0xd7589
0x00000000000e1a78 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x0000000000105a4d : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x0000000000105b44 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x000000000006f138 : movsxd rdi, dword ptr [rbx + 0x70] ; mov eax, 3 ; syscall
0x000000000007894a : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000f61a1 : movsxd rdi, dword ptr [rbx + 8] ; mov eax, 3 ; syscall
0x00000000000e1a79 : movsxd rdi, dword ptr [rbx + rdi*4] ; add rdi, r11 ; jmp rdi
0x0000000000078341 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x00000000000791a7 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x0000000000122191 : movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x000000000006f587 : movsxd rdi, dword ptr [rdx + 0x70] ; cmp ebp, edi ; je 0x6f5a3 ; mov eax, esi ; syscall
0x0000000000003504 : movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000012cadf : movsxd rdi, dword ptr [rsp + 4] ; mov eax, 3 ; syscall
0x00000000000f7e78 : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x101 ; syscall
0x00000000000f7efb : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 3 ; syscall
0x00000000001444ee : movsxd rdi, eax ; mov eax, 0x3e ; syscall
0x000000000013c910 : movsxd rdi, eax ; mov eax, 3 ; syscall
0x00000000001277a5 : movsxd rdi, eax ; mov eax, r14d ; syscall
0x00000000000f718e : movsxd rdi, ebp ; mov eax, 0x101 ; syscall
0x0000000000079b0b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x00000000000fc7e2 : movsxd rdi, ebx ; mov eax, 0x10 ; syscall
0x00000000000fd6a3 : movsxd rdi, ebx ; mov eax, 0x10e ; syscall
0x000000000010761e : movsxd rdi, ebx ; mov eax, 0x119 ; syscall
0x00000000000fc2c6 : movsxd rdi, ebx ; mov eax, 0x11d ; syscall
0x00000000001088bf : movsxd rdi, ebx ; mov eax, 0x120 ; syscall
0x00000000000fd097 : movsxd rdi, ebx ; mov eax, 0x127 ; syscall
0x00000000000fd147 : movsxd rdi, ebx ; mov eax, 0x128 ; syscall
0x000000000010896d : movsxd rdi, ebx ; mov eax, 0x12b ; syscall
0x0000000000108a15 : movsxd rdi, ebx ; mov eax, 0x133 ; syscall
0x0000000000108436 : movsxd rdi, ebx ; mov eax, 0x2c ; syscall
0x00000000001082b6 : movsxd rdi, ebx ; mov eax, 0x2d ; syscall
0x00000000000cc0c2 : movsxd rdi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f7762 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x0000000000029d4e : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x00000000001158a9 : movsxd rdi, ebx ; mov eax, ecx ; syscall
0x0000000000121dee : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000f6d38 : movsxd rdi, ecx ; mov eax, 0x103 ; syscall
0x000000000013ce2a : movsxd rdi, ecx ; mov eax, 3 ; syscall
0x0000000000035424 : movsxd rdi, ecx ; syscall
0x00000000000ea8f8 : movsxd rdi, edi ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x00000000000fc795 : movsxd rdi, edi ; mov eax, 0x10 ; syscall
0x00000000000f7121 : movsxd rdi, edi ; mov eax, 0x101 ; syscall
0x00000000000ff136 : movsxd rdi, edi ; mov eax, 0x105 ; syscall
0x00000000000f6f70 : movsxd rdi, edi ; mov eax, 0x10c ; syscall
0x00000000000f7481 : movsxd rdi, edi ; mov eax, 0x10d ; syscall
0x00000000000fd648 : movsxd rdi, edi ; mov eax, 0x10e ; syscall
0x00000000000fbac9 : movsxd rdi, edi ; mov eax, 0x118 ; syscall
0x00000000001075b7 : movsxd rdi, edi ; mov eax, 0x119 ; syscall
0x00000000000fc271 : movsxd rdi, edi ; mov eax, 0x11d ; syscall
0x000000000010886e : movsxd rdi, edi ; mov eax, 0x120 ; syscall
0x00000000000fd041 : movsxd rdi, edi ; mov eax, 0x127 ; syscall
0x00000000000fd0f1 : movsxd rdi, edi ; mov eax, 0x128 ; syscall
0x0000000000108910 : movsxd rdi, edi ; mov eax, 0x12b ; syscall
0x00000000001089c0 : movsxd rdi, edi ; mov eax, 0x133 ; syscall
0x00000000001083d4 : movsxd rdi, edi ; mov eax, 0x2c ; syscall
0x0000000000108254 : movsxd rdi, edi ; mov eax, 0x2d ; syscall
0x00000000000cc071 : movsxd rdi, edi ; mov eax, 0x3d ; syscall
0x00000000000f763a : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x00000000000fb874 : movsxd rdi, edi ; mov eax, 0xdd ; syscall
0x0000000000035727 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x00000000001158e9 : movsxd rdi, edi ; mov eax, 0xe3 ; syscall
0x0000000000115821 : movsxd rdi, edi ; mov eax, 0xe5 ; syscall
0x000000000002c86f : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000002e0b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000355a8 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000143e6c : movsxd rdi, edi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000117596 : movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000001157f4 : movsxd rdi, edx ; syscall
0x000000000002c131 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000036bdb : movsxd rdi, esp ; mov eax, 0x81 ; syscall
0x0000000000030b05 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000036bda : movsxd rdi, r12d ; mov eax, 0x81 ; syscall
0x0000000000030b04 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000013d622 : movsxd rdi, r13d ; mov eax, 3 ; syscall
0x000000000002c130 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000002c86e : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000013c90f : movsxd rdi, r8d ; mov eax, 3 ; syscall
0x00000000000f6d37 : movsxd rdi, r9d ; mov eax, 0x103 ; syscall
0x00000000001510ef : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000005c148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d1bde : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d9b46 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000852e9 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002ec96 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005bf53 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cdcdc : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000005c149 : movsxd rdx, dword ptr [rax] ; add rax, rdx ; jmp rax
0x00000000001510f0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000063e46 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000e1293 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000123f72 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000079a56 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x0000000000109092 : movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x00000000000f6906 : movsxd rdx, edx ; mov eax, 0x1c ; syscall
0x0000000000123df1 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000e7a38 : movsxd rdx, edx ; shl rdx, 2 ; call 0x94478
0x00000000000e7a37 : movsxd rdx, edx ; shl rdx, 2 ; call 0x94479
0x0000000000101700 : movsxd rdx, edx ; syscall
0x00000000000aac58 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c52d3 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aac90 : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000006ca9e : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000003340f : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000c5261 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x0000000000189de5 : movsxd rsi, ebp ; call qword ptr [rbx]
0x0000000000189eb9 : movsxd rsi, ebp ; call rsi
0x0000000000128a40 : movsxd rsi, ebp ; mov eax, 0x81 ; syscall
0x0000000000189ec9 : movsxd rsi, ebp ; push rbx ; cmc ; call qword ptr [rbx]
0x00000000001a9a49 : movsxd rsi, ecx ; call qword ptr [rdx]
0x0000000000199f69 : movsxd rsi, edi ; jmp rsp
0x000000000011595c : movsxd rsi, esi ; mov eax, 0xe6 ; syscall
0x00000000001076a1 : movsxd rsi, esi ; mov edi, edi ; mov eax, 0x122 ; syscall
0x0000000000171dbc : movsxd rsi, esi ; ret 0x7520
0x000000000013c21a : movsxd rsp, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc32a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003afe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bb8f9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000009a6f7 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009a6f6 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000003b171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000348c3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003488c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012e697 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b84b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e21c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ea9de : movzx eax, al ; cmova eax, edx ; ret
0x00000000000bb1e5 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000cdbb6 : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x000000000003522c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c0eea : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000010ec00 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34c : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006b319 : movzx eax, al ; neg eax ; ret
0x00000000001339c5 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012f5ea : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000c75bb : movzx eax, al ; pop rbx ; ret
0x0000000000035f29 : movzx eax, al ; ret
0x000000000002dd15 : movzx eax, ax ; ret
0x00000000000c3255 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fd : movzx eax, bh ; ret
0x000000000007a78c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013033e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bfb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000077f62 : movzx eax, byte ptr [rax] ; ret
0x000000000008b128 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000016e460 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecc0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b143 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a620 : movzx eax, byte ptr [rdx] ; ret
0x000000000007a78d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aabe7 : movzx eax, cl ; pop rbx ; ret
0x00000000001193fd : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000000713fc : movzx eax, dil ; ret
0x00000000000aac0f : movzx eax, dl ; pop rbx ; ret
0x000000000011940b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001193fc : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002dece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f5f30 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000aa15a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa159 ; ret
0x00000000000aa20a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa209 ; ret
0x000000000016f304 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000008b140 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016e463 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000108a72 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033bcf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb7 ; ret
0x000000000009f721 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000144dff : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000009f5b3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000171de4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000171e44 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000171e34 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171e24 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171e14 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171e04 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171df4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015b290 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016f0b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000171dcb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000015b970 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008ecc3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000e128f : movzx edx, dh ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008ece9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000015b210 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b900 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000acb01 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000f8964 : movzx rax, al ; ret
0x0000000000088706 : mul al ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008d527 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000034951 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cdf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034950 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cde : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000006e797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000136d5f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001373aa : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000035777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010ec03 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34f : neg eax ; pop rbx ; ret
0x000000000002121d : neg eax ; ret
0x0000000000088501 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007d8c5 : neg edi ; call qword ptr [r15]
0x00000000001890ac : neg edx ; jmp rcx
0x0000000000189014 : neg edx ; push rsp ; ret
0x000000000007d8c4 : neg rdi ; call qword ptr [r15]
0x00000000001aac70 : nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000000e3f58 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x0000000000073ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007a3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000015a9c7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035a93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016e76c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fd54d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c2232 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a145d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a1475 ; ret
0x00000000001a146b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000003c9c0 : nop ; add eax, 0x394d0000 ; retf
0x00000000001a73d0 : nop ; add edi, ebp ; jmp rsi
0x000000000004b605 : nop ; add rax, rdi ; jmp rax
0x000000000005bf55 : nop ; add rax, rdx ; jmp rax
0x00000000000aac5a : nop ; add rax, rsi ; jmp rax
0x00000000000ba00f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006ac4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000758bf : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001b2cc0 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb1f : nop ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000009f0cf : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f25f : nop ; bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000195bd8 : nop ; cld ; call qword ptr [rax]
0x00000000001956b0 : nop ; cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000195c1c : nop ; cmp ah, bh ; call qword ptr [rax]
0x0000000000195be8 : nop ; cmp al, 0xfc ; call qword ptr [rax]
0x0000000000195c24 : nop ; cmp edi, esp ; call qword ptr [rax]
0x0000000000195be0 : nop ; cmp esp, edi ; call qword ptr [rax]
0x00000000001950b8 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000001b9fd0 : nop ; div bh ; call qword ptr [rdx]
0x000000000003512f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001ad9c1 : nop ; hlt ; call qword ptr [rcx]
0x00000000001ad9a9 : nop ; hlt ; jmp qword ptr [rcx]
0x0000000000194f44 : nop ; insd dword ptr [rdi], dx ; sti ; jmp rax
0x0000000000194f5c : nop ; ja 0x194f5d ; call qword ptr [rax]
0x0000000000194f54 : nop ; je 0x194f55 ; call qword ptr [rax]
0x0000000000194f6c : nop ; jge 0x194f6d ; call qword ptr [rax]
0x00000000000352ef : nop ; jmp rdx
0x00000000001b0b90 : nop ; jo 0x1b0b8b ; jmp qword ptr [rcx]
0x0000000000194f64 : nop ; jp 0x194f65 ; call qword ptr [rax]
0x00000000001b1150 : nop ; jp 0x1b114b ; jmp qword ptr [rcx]
0x000000000007f42c : nop ; jp 0x7f430 ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000000d9b4f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000001a6980 : nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a69b0 : nop ; mov dh, ch ; jmp rbx
0x0000000000152bef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000011580f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000152dcf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000107eef : nop ; mov eax, 0x11f ; syscall
0x0000000000108cff : nop ; mov eax, 0x1e ; syscall
0x000000000010856f : nop ; mov eax, 0x30 ; syscall
0x000000000010820f : nop ; mov eax, 0x32 ; syscall
0x00000000000f8a8f : nop ; mov eax, 0x57 ; syscall
0x00000000000f89cf : nop ; mov eax, 0x58 ; syscall
0x00000000000f6ecf : nop ; mov eax, 0x5f ; syscall
0x000000000010775f : nop ; mov eax, 0x87 ; syscall
0x00000000000f6ddf : nop ; mov eax, 0x89 ; syscall
0x000000000010188f : nop ; mov eax, 0x95 ; syscall
0x00000000000fdbbf : nop ; mov eax, 0x99 ; syscall
0x000000000010782f : nop ; mov eax, 0x9f ; syscall
0x000000000010173f : nop ; mov eax, 0xb ; syscall
0x0000000000107bef : nop ; mov eax, 0xb4 ; syscall
0x00000000001060cf : nop ; mov eax, 0xc2 ; syscall
0x000000000010612f : nop ; mov eax, 0xc3 ; syscall
0x000000000010600f : nop ; mov eax, 0xc4 ; syscall
0x00000000001061bf : nop ; mov eax, 0xc5 ; syscall
0x0000000000115094 : nop ; mov eax, 0xca ; syscall
0x0000000000107a9f : nop ; mov eax, 0xfe ; syscall
0x00000000000cda0f : nop ; mov eax, 0xfffa ; ret
0x000000000007206f : nop ; mov eax, 0xffffffff ; ret
0x00000000000acd6f : nop ; mov eax, 1 ; ret
0x0000000000114957 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113dcf : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000abbff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc69 ; ret
0x00000000000abc4f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc69 ; ret
0x00000000000fc30f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000077eff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000003686f : nop ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000010adaf : nop ; mov eax, edi ; ret
0x000000000011939f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000368cf : nop ; mov eax, edx ; ret
0x00000000000fce0f : nop ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000015318f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a735f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000010803f : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x0000000000107bbf : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000fba8f : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x0000000000107c7f : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x0000000000107caf : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000014068f : nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x00000000001406df : nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000010609f : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x0000000000105fdf : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x0000000000108ccf : nop ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x000000000007832f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007bf3f : nop ; mov rax, -1 ; ret
0x00000000000774cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013aaaf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013ab8f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000120fcf : nop ; mov rax, qword ptr [rip + 0x2a48a1] ; ret
0x00000000000d179f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ec6f : nop ; mov rax, rdi ; ret
0x00000000000251ff : nop ; mov rbx, rax ; jmp 0x251d5
0x00000000000251fe : nop ; mov rbx, rax ; jmp 0x251d6
0x00000000000fec7f : nop ; mov rdi, r13 ; call 0x8b726
0x00000000000fec7e : nop ; mov rdi, r13 ; call 0x8b727
0x000000000017364f : nop ; mov rdi, r13 ; mov r13, r14 ; call 0x1f8b1
0x0000000000114705 : nop ; mov rdx, r13 ; call rax
0x0000000000084faf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000f5f4f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a5e1f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000196554 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000085543 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000f5f2f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001953ec : nop ; or eax, 0x20fffc ; cld ; jmp rax
0x00000000000937dd : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019d580 : nop ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001953e8 : nop ; or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195b94 : nop ; pop rax ; cld ; call qword ptr [rax]
0x0000000000110a5f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f6a0f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a49f : nop ; pop rbx ; ret
0x0000000000195968 : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x0000000000195b6c : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000195b7c : nop ; push rbx ; cld ; call qword ptr [rax]
0x0000000000195b5c : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000195b64 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000195b74 : nop ; push rsp ; cld ; call qword ptr [rax]
0x00000000000080d8 : nop ; ret
0x0000000000002f9e : nop ; ret 0x5bdb
0x0000000000005990 : nop ; ret 0xa
0x00000000000021c6 : nop ; retf 0x3844
0x0000000000006c50 : nop ; retf 0xa
0x000000000000353b : nop ; retf 0xe9ee
0x0000000000195388 : nop ; sar bl, cl ; jmp rax
0x0000000000195734 : nop ; sbb al, 0xfc ; jmp rax
0x0000000000194ea4 : nop ; sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000196174 : nop ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x000000000007c88f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000194f84 : nop ; xchg bl, bh ; call qword ptr [rax]
0x0000000000195e54 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x00000000001ad7f0 : nop ; xchg esp, esi ; call qword ptr [rax]
0x000000000008d7d9 : nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000c78af : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074f5f : nop ; xor eax, eax ; ret
0x000000000008eb9f : nop ; xor rax, rax ; ret
0x00000000001439e8 : nop dword ptr [rax + rax] ; call rcx
0x00000000000350d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000070153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a5d5b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001149d3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106263 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fcb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000006847b : nop dword ptr [rax + rax] ; mov rdx, r9 ; jmp 0x68430
0x000000000012c58b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a33 : nop dword ptr [rax + rax] ; ret
0x000000000003a7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000034cb : nop dword ptr [rax - 0x80] ; fcmove st(0), st(5) ; retf
0x000000000006b475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000abf3c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000174475 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001436a4 : nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000175139 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000ac845 : nop dword ptr [rax] ; lea rax, [rdi + 0xc] ; ret
0x00000000000ac835 : nop dword ptr [rax] ; lea rax, [rdi + 4] ; ret
0x00000000000ac83d : nop dword ptr [rax] ; lea rax, [rdi + 8] ; ret
0x00000000000bf5fd : nop dword ptr [rax] ; mov eax, 0x24 ; syscall
0x000000000003575c : nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x000000000006b35d : nop dword ptr [rax] ; mov eax, 0x52 ; syscall
0x00000000000f6fcc : nop dword ptr [rax] ; mov eax, 0x53 ; syscall
0x00000000000cd22c : nop dword ptr [rax] ; mov eax, 0x6e ; syscall
0x00000000000cda05 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000035e1c : nop dword ptr [rax] ; mov eax, 0x83 ; syscall
0x00000000000f6b3c : nop dword ptr [rax] ; mov eax, 0x84 ; syscall
0x00000000000fcd5c : nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x00000000001072dd : nop dword ptr [rax] ; mov eax, 0xad ; syscall
0x00000000000fefad : nop dword ptr [rax] ; mov eax, 0xeb ; syscall
0x00000000000368c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000895d5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012e08d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000c895d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000745fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002df1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000a6a2d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076ccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x0000000000094a14 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000010626d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000848e5 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000845dc : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000006dded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x0000000000084ca4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b9fac : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002bd51 : nop dword ptr [rax] ; ret
0x0000000000110c05 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000d7cad : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d72ed : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006acd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000034a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a69e7 : nop dword ptr cs:[rax + rax] ; ret
0x00000000001439e7 : nop word ptr [rax + rax] ; call rcx
0x00000000000350d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fca : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000006847a : nop word ptr [rax + rax] ; mov rdx, r9 ; jmp 0x68431
0x000000000012c58a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a3a : nop word ptr [rax + rax] ; ret
0x000000000003a7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000bf6ee : not eax ; add eax, 0x16e ; ret
0x000000000013c451 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000d7232 : not eax ; and eax, 2 ; ret
0x0000000000034790 : not eax ; and eax, edx ; ret
0x0000000000035f63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000218e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000035f62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000e3376 : or al, 0 ; add al, ch ; ret 0xf4a8
0x00000000000662e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000145d77 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149989 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145da5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fce6a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fce11 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000008241d : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000dc121 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089d00 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000082d8a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000145e18 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000662cc : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000c00b1 : or al, 0 ; add rax, rdi ; jmp rax
0x00000000000fc702 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000008f19a : or al, 0 ; cmove rax, rdx ; ret
0x00000000000abca0 : or al, 0 ; ret
0x000000000019b974 : or al, 0x15 ; add dword ptr [rax], eax ; retf 0xfffc
0x00000000000959b2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x959a9 ; ret
0x000000000008b126 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000082f12 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000019d444 : or al, 0x19 ; add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x00000000000beb65 : or al, 0x20 ; mov rdx, rax ; jmp 0xbeb74
0x000000000012a514 : or al, 0x24 ; call r12
0x00000000001aea44 : or al, 0x2f ; add dword ptr [rax], eax ; fcomip st(4) ; jmp qword ptr [rcx]
0x000000000010756a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x0000000000053997 : or al, 0x31 ; div dh ; ret 0x4050
0x000000000013380b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dbb32 : or al, 0x39 ; retf
0x00000000000cc0e2 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000001178eb : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4e : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c9623 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001437d1 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000035be9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x0000000000070f03 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000123051 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000ac254 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c7633 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b523 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000001ea5 : or al, 0x5c ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000bb642 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000011532a : or al, 0x5d ; pop r12 ; ret
0x0000000000189c28 : or al, 0x66 ; cmc ; push rsp ; cmc ; call rsp
0x0000000000196b4c : or al, 0x75 ; add byte ptr [rax], al ; push rsp ; retf 0xffe9
0x000000000008e718 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000121c3b : or al, 0x75 ; retf 0x8b41
0x000000000006c6da : or al, 0x7e ; ret
0x000000000006cefa : or al, 0x7e ; retf
0x000000000006cae3 : or al, 0x7e ; retf 0xffb8
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000a645c : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000004bc85 : or al, 0x83 ; ret
0x0000000000086fd6 : or al, 0x83 ; retf 0x8902
0x000000000005155c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009ea32 : or al, 0x88 ; add rax, r9 ; jmp rax
0x00000000000948ef : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002be45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000001a4444 : or al, 0x89 ; add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000000e7615 : or al, 0x89 ; push rsp ; ret
0x0000000000118ceb : or al, 0x89 ; ret 0x6ae9
0x00000000000f2e5e : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000089d93 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000091c74 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000158f4d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000047c93 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000015101d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000003d495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000010ada8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000033299 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000016e44f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5beb : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000005c1ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00000000001bc4b1 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001a6444 : or al, 0xa9 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x0000000000002bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x0000000000151021 : or al, 0xb ; jmp r9
0x00000000000a5bef : or al, 0xb ; jmp rcx
0x00000000001358a8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013c6f7 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000001358be : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003646f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000001a8244 : or al, 0xc7 ; add byte ptr [rax], al ; call 0x281a729a
0x0000000000036473 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x00000000001a9a44 : or al, 0xdf ; add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x000000000013b3d7 : or al, 0xe8 ; ret
0x00000000000e7b4f : or al, 0xe8 ; retf
0x0000000000133966 : or al, 0xf ; retf 0x5089
0x000000000012db07 : or al, 0xf ; retf 0xd189
0x00000000000534ea : or al, 0xf ; test byte ptr [rdi], dl ; add al, 0 ; add al, ch ; retf 0xfe39
0x00000000000abb55 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a66e3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000015b493 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000357a3 : or al, 0xf3 ; ret
0x00000000001ab144 : or al, 0xf6 ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x0000000000199291 : or al, 0xf6 ; call rsp
0x0000000000122992 : or al, 0xf6 ; ret 0xc602
0x000000000006ce2b : or al, 0xf6 ; ret 0xf04
0x000000000005678c : or al, 0xf6 ; ret 0xf08
0x00000000001011c5 : or al, 0xf7 ; ret 0xfc07
0x000000000002b391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x00000000001953a8 : or al, 0xfb ; call rax
0x00000000000f67f2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f6f73 : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000f68e2 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf44 : or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000000a6920 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000000b9e69 : or al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000009eb26 : or al, 7 ; test cl, cl ; jne 0x9eb1f ; ret
0x00000000000459d0 : or al, 9 ; retf 0xbe0f
0x000000000009d4ef : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000097b2b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b3ead : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000037371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000144f4d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147b61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144f71 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000760 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx], dl ; retf
0x000000000012d982 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000101771 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008c938 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000196685 : or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x00000000000dfd71 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000e1ff8 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e627e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000ac60a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000003cfc1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x000000000006f2bd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x0000000000126359 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000f8a01 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000019ab0d : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x000000000014cf47 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012b092 : or al, ch ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f482 : or al, ch ; cwde ; ret 0xfffe
0x0000000000045b5d : or al, ch ; lea ebp, [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012bf3b : or al, ch ; out dx, eax ; ret 0
0x000000000006dcd7 : or al, ch ; ret
0x00000000000fd15f : or al, ch ; retf
0x0000000000128650 : or al, ch ; retf 0xf630
0x00000000000f5ca0 : or al, ch ; retf 0xfd82
0x000000000013bc07 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013afcd : or bh, bh ; push rax ; or byte ptr [rbp - 0x143a8a40], al ; retf
0x000000000008b451 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007781d : or bh, byte ptr [rax - 1] ; ret
0x0000000000045be1 : or bh, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b9e6f : or bh, byte ptr [rcx] ; ret
0x00000000000e513f : or bh, dh ; ret
0x00000000000ffe1f : or bh, dh ; ret 0xfc07
0x000000000012affe : or bl, al ; mov eax, 1 ; ret
0x00000000000ac843 : or bl, al ; nop dword ptr [rax] ; lea rax, [rdi + 0xc] ; ret
0x000000000010626b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000124193 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123ff0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000194e39 : or bl, bh ; jmp rax
0x00000000001bc6c6 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bc6dd ; ret 0xb
0x00000000000022dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x0000000000096c75 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ea698 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000011938d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000000780e8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x78084
0x000000000015b653 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002da7f : or bl, dh ; ret
0x00000000000d5998 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000012c4a8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d5911 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000033e4d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000aca36 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00000000000a2b7f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d5902 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d59ce : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000074087 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000daca1 : or byte ptr [r8 + 0x39], r9b ; retf 0x1274
0x00000000000d7252 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000d59e1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013bb4a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000a2b5e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000166ca8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e772 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003aeda : or byte ptr [r8 - 0x77], cl ; retf
0x00000000001389da : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000eb92f : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000039f32 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000103207 : or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000014d122 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000bf2d3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00000000000d9934 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000a2bbe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000007250f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000000d5971 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d5931 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000000f7e7b : or byte ptr [rax + 0x101], bh ; syscall
0x000000000012bf73 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x00000000000bb513 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000074088 : or byte ptr [rax + 0x29], cl ; ret
0x000000000013f9a4 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x0000000000140627 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x0000000000082f07 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000000bbc83 : or byte ptr [rax + 0x29], r9b ; ret
0x000000000012fc15 : or byte ptr [rax + 0x31], cl ; retf 0x894c
0x00000000001073d9 : or byte ptr [rax + 0x38], bh ; syscall
0x000000000007cc47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000105ca5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000008231c : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000048e15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000143405 : or byte ptr [rax + 0x39], cl ; retf
0x00000000000daca2 : or byte ptr [rax + 0x39], cl ; retf 0x1274
0x00000000000bbcc2 : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x0000000000083bcc : or byte ptr [rax + 0x440f4802], ch ; retf 0x8348
0x00000000001336f9 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d7253 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00000000001a9eca : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001afeac : or byte ptr [rax + 0xb], cl ; ret
0x00000000001aca0d : or byte ptr [rax + 0xb], dl ; ret
0x00000000001159b2 : or byte ptr [rax + 0xe6], bh ; syscall
0x00000000000bc337 : or byte ptr [rax + 0xf], 0x4c ; shr cl, 1 ; retf 0xfffb
0x00000000001193fb : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000be59b : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000010ea5f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000310dc : or byte ptr [rax + 1], cl ; ret
0x000000000003401e : or byte ptr [rax + 2], bh ; syscall
0x00000000000f61a3 : or byte ptr [rax + 3], bh ; syscall
0x00000000001063de : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x0000000000112fab : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000ca8cd : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000004b158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00000000000d59e2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000de6fb : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000012fd0b : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00000000001296c9 : or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000168e37 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000008f34e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x000000000008ebc2 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x000000000009443d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x000000000009440e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00000000000ac876 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31f2 ; ret
0x000000000008ebd6 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf852 ; ret
0x00000000000ac862 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00000000000abc92 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x000000000011622e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8980a ; ret
0x000000000011631e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89e6a ; ret
0x000000000013b5e8 : or byte ptr [rax - 0x73], cl ; je 0x13b61a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b72c : or byte ptr [rax - 0x73], cl ; je 0x13b75e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007ee43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000010a3a1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a402 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000102d41 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f4186 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000dcd9f : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013bb4b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006ddd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012d95d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135852 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013ed4d : or byte ptr [rax - 0x75], cl ; xor al, ch ; retf 0xa
0x00000000000a2b5f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000012fe3f : or byte ptr [rax - 0x76be03a9], cl ; retf
0x0000000000113ea5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000896fb : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000038f4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2a70 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000119098 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000326a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001389db : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000132e3e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp 0x1f8b0
0x000000000013a90e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000166ca9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e773 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000859c1 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012d74b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007db2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000098f97 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012f955 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013b87f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000efcab : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039f33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003aedb : or byte ptr [rax - 0x77], cl ; retf
0x00000000000ef0a0 : or byte ptr [rax - 0x77], cl ; retf 0x830f
0x000000000013db65 : or byte ptr [rax - 0x77], cl ; retf 0x8944
0x0000000000115474 : or byte ptr [rax - 0x77], cl ; retf 0x8949
0x0000000000039071 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x00000000000895cd : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000089677 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000898d9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000082f48 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000048c36 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000094aa6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094b2e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006e67e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000054d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000007044b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007413d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000001451ac : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008041c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000007d9d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007d995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000000b5845 : or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000007ddac : or byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000001451ad : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147d01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001451d1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008041d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000000bc587 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000ec0e4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf 0x8b4c
0x000000000007bb1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000084086 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000019130 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x18
0x0000000000019250 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in eax, dx ; retf 0x18
0x0000000000019010 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; retf 0x18
0x0000000000019c70 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf
0x0000000000019148 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 0x18
0x0000000000019ca0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; retf
0x0000000000019be0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; retf
0x0000000000018fc8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; retf 0x18
0x0000000000019118 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; retf 0x18
0x0000000000018fb0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; retf 0x18
0x00000000000191c0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001c058 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001a078 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18f8
0x000000000000b530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x0000000000019838 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000018f80 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x18
0x0000000000019100 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; retf 0x18
0x0000000000019c58 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; retf
0x00000000000190e8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; retf 0x18
0x00000000000fb7b2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x0000000000107667 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x0000000000035791 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x00000000000357db : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x0000000000047b16 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000218a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000003691c : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x00000000000355a3 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000aac99 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012d992 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000107441 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000008cab8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000083f86 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f59 ; ret
0x00000000000f330c : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f488e : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000001bc8a5 : or byte ptr [rax], al ; add byte ptr [rdx], dh ; add byte ptr [rax], al ; retf
0x000000000003caf0 : or byte ptr [rax], al ; jne 0x3cac1 ; jmp 0x3cac9
0x0000000000108e08 : or byte ptr [rax], al ; mov eax, 2 ; syscall
0x0000000000105aa0 : or byte ptr [rax], al ; mov eax, ebx ; syscall
0x0000000000101558 : or byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000111b9e : or byte ptr [rax], al ; mov edx, 5 ; call 0x2e629
0x000000000004a608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000105e6d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000002c1eb : or byte ptr [rax], al ; mov rdi, r14 ; mov eax, r15d ; syscall
0x0000000000108a70 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000105e9a : or byte ptr [rax], al ; sub rsp, 0x60 ; syscall
0x000000000010d8b8 : or byte ptr [rax], al ; xor r9d, r9d ; call 0x12a397
0x00000000000a9c8d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9ccb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006abcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014b71e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004876c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x0000000000123e8f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x0000000000047d6f : or byte ptr [rbp + 1], cl ; retf 0x8b4d
0x00000000000aca37 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000d6f24 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x000000000013afd0 : or byte ptr [rbp - 0x143a8a40], al ; retf
0x00000000000bb222 : or byte ptr [rbp - 0x28], dh ; ret
0x000000000003d31d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ac729 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000cc3bf : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf
0x00000000000dc5db : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000001b0808 : or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000003cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fc02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000012e87b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000071fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000032dc3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008964f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007915a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000019d11d : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x000000000019ffb3 : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x0000000000033e4e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000050197 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000013dcde : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000006d3d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000070a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000019d4f0 : or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d550 : or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000115174 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000001af518 : or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001bc581 : or byte ptr [rbx], al ; ret
0x000000000004a00b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000bf2d4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x0000000000054b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000001426b5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e1a77 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000d9935 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00000000001a0eea : or byte ptr [rcx + 0xb], cl ; ret
0x000000000006c203 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004842b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000490b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013eae3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000001316b3 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x000000000011ff5c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000013b5ed : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x0000000000037d67 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000001facb : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x00000000000391a7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000048432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000001311f9 : or byte ptr [rcx - 0x3f7cb7f0], cl ; add al, 0x89 ; retf 0x3944
0x00000000000e1152 : or byte ptr [rcx - 0x3ff001f], al ; dec dword ptr [rcx] ; retf 0x5089
0x0000000000109019 : or byte ptr [rcx - 0x6bf73], cl ; dec dword ptr [rax + 0x63] ; retf 0x8b48
0x000000000007763a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d6eec : or byte ptr [rcx - 0x75], cl ; je 0xd6f1c ; or byte ptr [rcx], ch ; ret
0x00000000000a2bbf : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000005b323 : or byte ptr [rcx - 0x77], al ; push rbp ; add byte ptr [rax + 0x63], cl ; add cl, ch ; retf
0x00000000000da623 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000072510 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000003ce6f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000012fddb : or byte ptr [rcx - 0x77], cl ; ror dword ptr [rax + 0x31], cl ; retf
0x000000000010a478 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a48a ; ret
0x000000000010a508 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a51a ; ret
0x000000000010a5a8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a5ba ; ret
0x000000000010a638 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a64a ; ret
0x000000000010a6c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a6da ; ret
0x000000000010a758 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a76a ; ret
0x000000000010a7f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a80a ; ret
0x000000000010a898 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a8aa ; ret
0x000000000010a938 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a94a ; ret
0x000000000010a9c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a9da ; ret
0x000000000010aa63 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aa75 ; ret
0x000000000010aaf8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10ab0a ; ret
0x000000000010ae1a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10ae2c ; ret
0x000000000010ae9a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aeac ; ret
0x000000000010af1a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10af2c ; ret
0x000000000010af9a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10afac ; ret
0x000000000010b01a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b02c ; ret
0x000000000010b09a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b0ac ; ret
0x000000000010b11a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b12c ; ret
0x000000000010b19a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b1ac ; ret
0x000000000010b21a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b22c ; ret
0x000000000010b29a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b2ac ; ret
0x000000000010b317 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b329 ; ret
0x000000000010b39a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b3ac ; ret
0x0000000000083b29 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003909a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3cd8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x0000000000037611 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000000e8c0a : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000001982c5 : or byte ptr [rcx], al ; add ah, ah ; cli ; out dx, eax ; call rsp
0x00000000000f6802 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000359df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000006b394 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f68f4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f9025 : or byte ptr [rcx], al ; add byte ptr [rcx + 3], cl ; jbe 0xf904d ; mov eax, ecx ; syscall
0x00000000000d59b7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d5932 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000bb21f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000013f413 : or byte ptr [rcx], bh ; ret 0x3875
0x00000000000db6ca : or byte ptr [rcx], bh ; retf
0x000000000013c8d2 : or byte ptr [rcx], bh ; retf 0x850f
0x0000000000138db6 : or byte ptr [rcx], bh ; retf 0x8d0f
0x00000000000d5972 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b9eed : or byte ptr [rcx], ch ; ret
0x000000000012550c : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000115a40 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e7bbb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007db6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c8cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fa5d2 : or byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x52 ; retf 0xffff
0x0000000000185a7e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a3ff3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000001a2674 : or byte ptr [rdi + 0xb], al ; jae 0x1a2688 ; ret
0x00000000001a02f9 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000027613 : or byte ptr [rdi], 0x85 ; retf
0x0000000000026ec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x00000000001539c4 : or byte ptr [rdi], ah ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000002a219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000002dd14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b42c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f61 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000cf263 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000006c851 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000077fcb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012f5e9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000453b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000035d64 : or byte ptr [rdi], cl ; ret 0xc289
0x000000000012daf3 : or byte ptr [rdi], cl ; retf 0xd189
0x00000000001515eb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000004753f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x000000000004c38e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000002086a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000001b2d88 : or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x000000000019dba2 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00000000001bc36d : or byte ptr [rdx], al ; add al, dh ; jns 0x1bc371 ; call qword ptr [rcx]
0x00000000000d7ca7 : or byte ptr [rdx], al ; jne 0xd7c85 ; jmp 0xd7c75
0x00000000000d5912 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d5999 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000012c4a9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000c8c29 : or byte ptr [rdx], cl ; add byte ptr [rax], al ; add bl, ch ; retf 0xdb31
0x00000000000fc312 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fc311 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000fc5fa : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000000a5771 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000009b64e : or byte ptr [rsi + 0xf], al ; mov dh, 0xc ; add cl, byte ptr [rcx - 0x77] ; retf 0xf43
0x0000000000062573 : or byte ptr [rsi + 1], bh ; jmp 0x6254d
0x000000000010f77b : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10f791
0x00000000000d7331 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00000000000a2b80 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d59cf : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000edbd0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000d5903 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000096af1 : or ch, bl ; ret 0x1f0f
0x00000000001bc5e8 : or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc6cb : or ch, byte ptr [rsi] ; ret 0xb
0x00000000000da723 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000003505b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000bb2c7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029d94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000ac165 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x000000000013f4ee : or cl, byte ptr [rax + 0x63] ; clc ; mov eax, 3 ; syscall
0x000000000013ce28 : or cl, byte ptr [rax + 0x63] ; stc ; mov eax, 3 ; syscall
0x000000000007a5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000078bd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000662cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072faf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e8446 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00000000000c15c2 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000016d6ac : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000006f75c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008dc6a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d980f : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000004ac1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000003d45d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000071f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000119435 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000013e05f : or cl, byte ptr [rcx + 0x39] ; ret
0x000000000013c90e : or cl, byte ptr [rcx + 0x63] ; clc ; mov eax, 3 ; syscall
0x00000000000ef30d : or cl, byte ptr [rcx + 0x63] ; cld ; mov eax, 3 ; syscall
0x000000000013d621 : or cl, byte ptr [rcx + 0x63] ; std ; mov eax, 3 ; syscall
0x000000000010e6c2 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00000000001193b5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000168bd6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000008638a : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x000000000003d323 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000013dce1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000019d169 : or cl, ch ; call qword ptr [rdi]
0x00000000001aa108 : or cl, ch ; int1 ; jmp qword ptr [rdi]
0x00000000000356f7 : or cl, ch ; ret
0x00000000000e5720 : or cl, ch ; ret 0xfffe
0x0000000000069e22 : or cl, ch ; retf
0x000000000013f1cb : or cl, ch ; retf 0xfffe
0x0000000000002beb : or cl, cl ; clc ; ret
0x000000000008d7b5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000185462 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000054e12 : or dh, bl ; add byte ptr ss:[rax + 0x63], cl ; retf 0x8948
0x000000000015b573 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001056c5 : or dh, bl ; ret
0x000000000018528a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000001bc3fc : or dh, byte ptr [rbp + 5] ; retf
0x00000000000aae16 : or dh, byte ptr [rbp - 0x11] ; ret
0x000000000006b00a : or dh, byte ptr [rdi - 0x76b7ffcb] ; retf 0xd148
0x00000000001979e9 : or dh, ch ; jmp rsp
0x0000000000199259 : or dh, dh ; jmp rsp
0x0000000000081ef3 : or dh, dh ; ret 0x7404
0x00000000000f71f3 : or dh, dh ; ret 0x7540
0x000000000012de84 : or dh, dh ; ret 0x8802
0x0000000000081e66 : or dh, dh ; ret 0xf04
0x000000000001fe58 : or dh, dh ; ret 0xf08
0x000000000002f3de : or dh, dh ; ret 0xfdf
0x0000000000095752 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000006656e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b57ea : or dword ptr [r8], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000002c9d3 : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x000000000014fb67 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e7a00 : or dword ptr [rax - 0x3f], 0xffffffe2 ; add ch, al ; retf 0xfffa
0x000000000011feb0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a87e8 ; call rax
0x0000000000132293 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000010e7f9 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a3009
0x000000000009931b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000089a6e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000b57cd : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000001450dd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b5cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145037 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000f6b2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000073c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002122a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000001016fb : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x00000000000f5d68 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001016b4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000093a2e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006656f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4cc5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000ed470 : or dword ptr [rax], eax ; call 0x39764
0x00000000000fdadc : or dword ptr [rax], eax ; mov eax, 2 ; syscall
0x00000000000f2133 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2e5a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f2627 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000001bc71e : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bc734 ; ret 0xa
0x0000000000182437 : or dword ptr [rax], ecx ; retf
0x0000000000184bd3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000003d43d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016f886 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000012e1a6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000094f08 : or dword ptr [rbx + 0x49000000], 0xffffff89 ; retf 0xb941
0x000000000010e0a6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eed3b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x00000000000f0220 : or dword ptr [rbx - 0x7af0fd08], eax ; retf 0
0x000000000006dde3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d0a8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000488bc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000008b3c8 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x0000000000070fee : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x000000000003ad24 : or dword ptr [rcx - 0x7d], 0xfffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000086356 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000095c44 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d5320 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000086539 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000f89a4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000143736 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000002384 : or dword ptr [rdi + 0x2735a120], 0xffffff98 ; retf 0x81c0
0x0000000000035f43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006ddf0 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fc3c7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000036086 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000011cfeb : or dword ptr [rdi], ecx ; ret
0x000000000011ce1a : or dword ptr [rdi], ecx ; retf
0x0000000000168bb6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000042b9d : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000008b372 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x0000000000101b2a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001020aa : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018542e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000006ad8e : or dword ptr [rdx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001ae78a : or dword ptr [rsi], 0x54028310 ; ret
0x00000000000269b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x000000000004c8ac : or dword ptr [rsi], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bc723 : or dword ptr [rsi], ebp ; ret 0xa
0x0000000000137383 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000014d03f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000088852 : or eax, 0x1042ce ; mov rdx, rcx ; jmp 0x88825
0x00000000000fc8ea : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000347fb : or eax, 0x15fb10 ; orpd xmm0, xmm1 ; ret
0x0000000000002d45 : or eax, 0x1954b385 ; retf 0x172
0x00000000000a7621 : or eax, 0x1c478d48 ; ret
0x00000000000a8471 : or eax, 0x1d478d48 ; ret
0x0000000000168c38 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000194e8d : or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x00000000001953ed : or eax, 0x20fffc ; cld ; jmp rax
0x000000000007bc62 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000bdb7d : or eax, 0x2d8b4800 ; retf 0x308e
0x00000000000fc8a1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000001a52dc : or eax, 0x380e0a03 ; ret
0x00000000000b33f4 : or eax, 0x3d8d4800 ; ret
0x00000000000b1943 : or eax, 0x3e1ba00 ; add byte ptr [rax], al ; call 0x2dc49
0x000000000006c232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c95a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000be065 : or eax, 0x440f4800 ; ret 0x8d48
0x00000000000d5ed2 : or eax, 0x441f0f ; add byte ptr [rcx], bh ; retf 0x337e
0x00000000000c911f : or eax, 0x480007a4 ; mov eax, ebx ; call rax
0x000000000013821b : or eax, 0x48640029 ; mov dword ptr [rax], edx ; ret
0x00000000000967a2 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x00000000000bfe1a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000012cb7f : or eax, 0x4c0000de ; lea ecx, [rsp + 0x18] ; call qword ptr [rax]
0x000000000006acc2 : or eax, 0x5bd88948 ; ret
0x0000000000117414 : or eax, 0x5c0d8b48 ; retf 0x2a
0x00000000001386f2 : or eax, 0x5c415d5b ; ret
0x0000000000113073 : or eax, 0x6348002b ; ret 0x4864
0x00000000000a6705 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000003d4b1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000145c87 : or eax, 0x83480000 ; ret 0x4910
0x0000000000147821 : or eax, 0x83480000 ; ret 0xe910
0x0000000000145cb5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a7db9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000008c638 : or eax, 0x894d0000 ; retf
0x000000000006e3ba : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008d832 : or eax, 0x8c48348 ; ret
0x00000000000711f4 : or eax, 0xc2890000 ; jmp 0x7118e
0x0000000000183281 : or eax, 0xcad7947e ; jmp 0x18322d
0x000000000017d159 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000017d165 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000185413 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000001850b3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000010366e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015b423 : or eax, 0xf7f0ff3 ; ret
0x000000000002db93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000059879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001faff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x000000000003577d : or eax, 0xffffffff ; ret
0x00000000001af298 : or eax, dword ptr [r11] ; retf
0x00000000001a4fbf : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000009d9dc : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000af934 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000005744f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144e7d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001479c1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ea1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000dd98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000012d972 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000101741 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001b872c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; retf
0x000000000008c7b8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d2219 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d1bdc : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000ce049 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008b29f : or eax, dword ptr [rax] ; ret
0x000000000002a694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000001af299 : or eax, dword ptr [rbx] ; retf
0x00000000000f8a64 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000011e71c : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001bcba8 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000036848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001bb878 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x000000000019f946 : or eax, dword ptr [rdx] ; ret 0x900e
0x00000000001a0443 : or eax, dword ptr [rdx] ; retf
0x000000000019ffb5 : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000001a4fc0 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001b004f : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000034cb7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034b67 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000119400 : or eax, edi ; bswap eax ; ret
0x0000000000107556 : or eax, edi ; ret
0x0000000000034a65 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000107592 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003a68f : or eax, edx ; ret
0x0000000000035044 : or eax, esi ; je 0x34ff1 ; ret
0x0000000000107595 : or eax, esi ; or rax, rdi ; ret
0x000000000007c884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006df38 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073ce0 : or ebp, eax ; ret 0xfabb
0x000000000007ef53 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000019d431 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d569 : or ebp, ecx ; call qword ptr [rcx]
0x000000000019d419 : or ebp, ecx ; call qword ptr [rdx]
0x000000000019d389 : or ebp, ecx ; call qword ptr [rsi]
0x000000000019d551 : or ebp, ecx ; jmp qword ptr [rax]
0x000000000006fdc4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010c99c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001bc482 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000015b5e3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000075ade : or ebx, esi ; ret
0x00000000000fa434 : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000001179d4 : or ecx, dword ptr [rax - 0x3f] ; loop 0x1179e2 ; jmp 0x94477
0x000000000008392a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef94 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000c190e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000006ffb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010c5ab : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ffa57 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000110c7d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ed22b : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000024bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007d0a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000003d479 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000abbf4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abc44 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000012dae3 : or ecx, dword ptr [rdi] ; retf 0xd285
0x00000000000a66c3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000001a263e : or ecx, dword ptr [rdx + 0xa] ; ret
0x0000000000094a94 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000cd98b : or edi, dword ptr [rax + 0xfde8] ; jne 0xcd964 ; ret
0x000000000010e9cc : or edi, dword ptr [rax + 1] ; ret
0x000000000012dda4 : or edi, dword ptr [rax + 2] ; ret
0x0000000000113304 : or edi, dword ptr [rax + 7] ; ret
0x0000000000045b6a : or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000045af6 : or edi, dword ptr [rax] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x0000000000173d99 : or edi, dword ptr [rbx + 0x1f0fffea] ; add bl, dh ; ret
0x0000000000113d36 : or edi, dword ptr [rcx] ; ret 0xf7e
0x000000000017437d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000aa057 : or edi, edi ; loope 0xaa0ca ; nop dword ptr [rax + rax] ; ret
0x00000000001953e9 : or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195449 : or edi, esp ; jmp qword ptr [rax]
0x00000000001aa9e1 : or edx, esi ; call rsi
0x00000000001b7832 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x0000000000174899 : or esi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000001a2676 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000001a1468 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000012b9e4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b7833 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001a7cc9 : or esi, eax ; jmp rbx
0x00000000000fc35e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000015b503 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f6ce4 : or esi, ebx ; ret
0x0000000000003a74 : or esi, edx ; push rbp ; jg 0x3ae7 ; xchg eax, ebp ; retf 0x10bf
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000fb5a4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000195445 : or esp, edi ; jmp qword ptr [rax]
0x000000000003ad23 : or qword ptr [rcx - 0x7d], 0xfffffffffffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000035f42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000168bb5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000780e7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x78085
0x000000000015b652 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b572 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000199258 : or r14b, sil ; jmp rsp
0x00000000001a2675 : or r14d, dword ptr [r11 + 0xa] ; ret
0x000000000015b502 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001bb877 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00000000001b004e : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x000000000019ffb4 : or r8d, dword ptr [rdx] ; retf 0xe0a
0x0000000000035043 : or r8d, esi ; je 0x34ff2 ; ret
0x0000000000094a93 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000da722 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000029d93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00000000001a263d : or r9d, dword ptr [r10 + 0xa] ; ret
0x0000000000168c37 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003577c : or rax, 0xffffffffffffffff ; ret
0x00000000001ba356 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014ce22 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145f07 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000036847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001a0442 : or rax, qword ptr [rdx] ; retf
0x0000000000107597 : or rax, rdi ; ret
0x0000000000034a64 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a68e : or rax, rdx ; ret
0x0000000000107594 : or rax, rsi ; or rax, rdi ; ret
0x000000000019d448 : or rbp, rcx ; call qword ptr [rdx]
0x000000000012de83 : or sil, sil ; ret 0x8802
0x0000000000034800 : orpd xmm0, xmm1 ; ret
0x0000000000034801 : orps xmm0, xmm1 ; ret
0x0000000000034bce : orps xmm0, xmm3 ; ret
0x00000000001aa22d : out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x000000000011595f : out 0, al ; add byte ptr [rax], al ; syscall
0x0000000000197df5 : out 0, al ; add byte ptr [rsp + rbp*2], al ; out dx, al ; call rsp
0x0000000000197e15 : out 0, eax ; add ah, dl ; jo 0x197e0f ; jmp rsp
0x00000000001aa2f5 : out 0, eax ; add al, bl ; out dx, al ; int1 ; jmp rcx
0x0000000000119409 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001126b1 : out 0x31, eax ; shr al, 0xb7 ; ret
0x0000000000111f79 : out 0x31, eax ; shr al, 0xef ; retf 0xffff
0x000000000003730b : out 0x41, eax ; call rdi
0x0000000000140f26 : out 0x44, al ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000030cd0 : out 0x44, eax ; mov eax, edx ; syscall
0x000000000003731c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000086b36 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f4033 : out 0x48, al ; mov edi, ebp ; call 0xf0336
0x0000000000037345 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000088d02 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012aa1c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x000000000012e776 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000087e64 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000012a610 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000f718c : out 0x48, al ; movsxd rdi, ebp ; mov eax, 0x101 ; syscall
0x00000000000fd6a1 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x10e ; syscall
0x0000000000108434 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x2c ; syscall
0x00000000001082b4 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x2d ; syscall
0x00000000000abce0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000484c8 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000109090 : out 0x48, eax ; movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x00000000000ff2c5 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000014290f : out 0x49, eax ; mov esp, esp ; call 0x8f3b6
0x00000000000d189f : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001735f0 : out 0x4c, eax ; mov edi, esi ; call 0x1f8ae
0x0000000000088e57 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000000ad91b : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000008605e : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000007bfd3 : out 0x5b, al ; ret
0x0000000000138f28 : out 0x5b, eax ; ret
0x000000000008683b : out 0x5d, al ; pop r12 ; jmp rax
0x0000000000186a30 : out 0x65, eax ; in eax, dx ; jmp rdi
0x0000000000184ca0 : out 0x78, al ; jnp 0x184d02 ; retf
0x00000000001887a4 : out 0x80, eax ; jmp rsi
0x000000000002df33 : out 0x80, eax ; sete al ; ret
0x0000000000188750 : out 0x88, al ; jmp rsi
0x0000000000039905 : out 0x89, eax ; ret
0x00000000000302fe : out 0x89, eax ; ret 0x8948
0x00000000000f1469 : out 0x89, eax ; ret 0x8b48
0x0000000000195040 : out 0xa7, al ; std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x000000000000247e : out 0xa9, al ; ret 0xbd07
0x00000000000037d8 : out 0xb0, al ; test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000183231 : out 0xb3, al ; retf 0xe80
0x0000000000109052 : out 0xb8, eax ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000109256 : out 0xb8, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000108e5f : out 0xb8, eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000030ab9 : out 0xb8, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001016b2 : out 0xb8, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000183f60 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000026bd : out 0xdf, eax ; syscall
0x000000000013a7de : out 0xe8, al ; mov word ptr [rax - 0x12], ss ; dec dword ptr [rax - 0x77] ; ret
0x000000000012399f : out 0xe8, al ; retf
0x00000000000cd3d1 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x0000000000112042 : out 0xe8, eax ; cwde ; ret
0x00000000001286c1 : out 0xe8, eax ; pop rcx ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f5db2 : out 0xe8, eax ; push -0x76000003 ; ret 0xcb8
0x000000000002e247 : out 0xe8, eax ; ret
0x00000000000bf83f : out 0xe8, eax ; retf
0x00000000000d00a0 : out 0xe8, eax ; retf 0xfbb3
0x00000000001a6e29 : out 0xee, al ; call qword ptr [rax]
0x000000000015adea : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000959b9 : out 0xf3, al ; ret
0x000000000015ae6a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001aed49 : out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001aeda9 : out 0xf4, eax ; jmp qword ptr [rcx]
0x0000000000185c88 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000199931 : out 0xf6, al ; call rsp
0x000000000019a151 : out 0xf7, al ; dec esp ; ret
0x000000000019a159 : out 0xf7, al ; jmp rsp
0x000000000006f734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001ba1a5 : out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x00000000001bd208 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000000e3564 : out 2, al ; call 0x1f7f4
0x0000000000123fec : out 4, al ; lea eax, [rsi + 8] ; ret
0x000000000012418d : out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x00000000000208f1 : out 4, eax ; add rdi, rbp ; call rax
0x000000000011e1b3 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000094909 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000012e349 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047d66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000197ead : out dx, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x00000000000e2fd6 : out dx, al ; add byte ptr [rcx - 0x7d], 0xf8 ; add al, 0x75 ; retf 0x8b48
0x0000000000123c0f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x123c1c ; ret
0x0000000000097383 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009742b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000123c0c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x123c1f ; ret
0x000000000008392d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000001a6402 : out dx, al ; call qword ptr [rax]
0x00000000001a6a6a : out dx, al ; call qword ptr [rcx]
0x00000000001a6482 : out dx, al ; call qword ptr [rdx]
0x00000000001a58c2 : out dx, al ; call qword ptr [rsi]
0x0000000000088e5d : out dx, al ; call rax
0x0000000000197a12 : out dx, al ; call rsp
0x0000000000133568 : out dx, al ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x0000000000133678 : out dx, al ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8af
0x000000000013a7e2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130e37 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000133e2b : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001850b7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187ebd : out dx, al ; int1 ; call rax
0x0000000000187ec9 : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187eb9 : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e7d : out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187ec1 : out dx, al ; int1 ; jmp rax
0x00000000001aa2f9 : out dx, al ; int1 ; jmp rcx
0x000000000018704a : out dx, al ; jmp qword ptr [rax]
0x00000000001a6232 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a5f12 : out dx, al ; jmp qword ptr [rdi]
0x00000000001a638a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a6b72 : out dx, al ; jmp qword ptr [rsi]
0x000000000018769e : out dx, al ; jmp rax
0x00000000001a69b2 : out dx, al ; jmp rbx
0x00000000001a6662 : out dx, al ; jmp rdx
0x00000000001979ea : out dx, al ; jmp rsp
0x0000000000003795 : out dx, al ; jne 0x3775 ; ret 0x975
0x0000000000197cea : out dx, al ; lcall [rcx + 0x5e440000] ; out dx, al ; jmp rsp
0x000000000018781a : out dx, al ; ljmp [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000187816 : out dx, al ; ljmp [rax] ; push rsp ; out dx, al ; ljmp [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000197e12 : out dx, al ; ljmp [rdi + 0x70d40000] ; out dx, al ; jmp rsp
0x0000000000003183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000078ba8 : out dx, al ; mov eax, r13d ; syscall
0x000000000003466d : out dx, al ; mov eax, r8d ; syscall
0x00000000000cc1b6 : out dx, al ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x0000000000152c3a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001016af : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x00000000000776c5 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x00000000000cdfdf : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000001414ab : out dx, al ; mov rdi, r9 ; mov eax, 1 ; syscall
0x000000000008595c : out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x81b89
0x000000000008588f : out dx, al ; mov rdi, rbx ; call 0x81b86
0x00000000000bda29 : out dx, al ; mov rdi, rbx ; call 0x89d16
0x0000000000085c7f : out dx, al ; mov rdi, rbx ; call rax
0x00000000000fb806 : out dx, al ; mov rdi, rbx ; mov eax, 0x10f ; syscall
0x000000000015b1fa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001088bd : out dx, al ; movsxd rdi, ebx ; mov eax, 0x120 ; syscall
0x00000000000fd095 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x127 ; syscall
0x00000000000fd145 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x128 ; syscall
0x000000000010896b : out dx, al ; movsxd rdi, ebx ; mov eax, 0x12b ; syscall
0x0000000000108a13 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x133 ; syscall
0x00000000000cc0c0 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x3d ; syscall
0x00000000001158a7 : out dx, al ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000021c5 : out dx, al ; nop ; retf 0x3844
0x00000000000ac0a9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014b47e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000da725 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000185412 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x000000000008f394 : out dx, al ; or eax, dword ptr [rax] ; ret
0x0000000000184c9f : out dx, al ; out 0x78, al ; jnp 0x184d03 ; retf
0x0000000000197eaa : out dx, al ; push qword ptr [rsi + rbp*8 - 0x265c0000] ; out dx, al ; call rsp
0x0000000000107a86 : out dx, al ; ret
0x00000000000025b2 : out dx, al ; ret 0x88ad
0x0000000000002891 : out dx, al ; retf 0x182c
0x00000000000f2db6 : out dx, al ; retf 0xfff2
0x0000000000195525 : out dx, al ; sti ; jmp qword ptr [rax]
0x00000000000c84bd : out dx, al ; xor edx, edx ; jmp 0xc8489
0x00000000000aaf8d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000081bd3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x0000000000101b2d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c023f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000001bab1d : out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x000000000007ef97 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000013a78c : out dx, eax ; add rbx, r12 ; call r14
0x0000000000172b6d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e35b9 : out dx, eax ; call 0x1f8ab
0x00000000000be94f : out dx, eax ; call 0x7b3a3
0x00000000000869a3 : out dx, eax ; call 0x82bd3
0x00000000000fec82 : out dx, eax ; call 0x8b723
0x00000000000d4e18 : out dx, eax ; call 0xd1873
0x00000000000f4036 : out dx, eax ; call 0xf0333
0x000000000012e34f : out dx, eax ; call qword ptr [rbx]
0x00000000001a7952 : out dx, eax ; call qword ptr [rdi]
0x000000000011ff5f : out dx, eax ; call r12
0x00000000000391ad : out dx, eax ; call r14
0x0000000000037348 : out dx, eax ; call r15
0x00000000000208f5 : out dx, eax ; call rax
0x00000000000ad297 : out dx, eax ; call rbx
0x000000000013bf92 : out dx, eax ; call rcx
0x000000000012de46 : out dx, eax ; call rdx
0x0000000000198052 : out dx, eax ; call rsp
0x0000000000189dd8 : out dx, eax ; cmc ; call qword ptr [rdi]
0x0000000000185d05 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000012b096 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134d85 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134dc4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000001acf : out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001982c2 : out dx, eax ; inc dword ptr [rax + rcx - 0x51bffff] ; out dx, eax ; call rsp
0x0000000000187ecd : out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187ed1 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x00000000001879d6 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a7c6a : out dx, eax ; jmp qword ptr [rbx]
0x00000000001a73d2 : out dx, eax ; jmp rsi
0x0000000000197fb2 : out dx, eax ; jmp rsp
0x0000000000198212 : out dx, eax ; lcall [rsp + rax + 1] ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000012cac6 : out dx, eax ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001046b5 : out dx, eax ; mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x1046c5 ; call rbx
0x00000000000554a2 : out dx, eax ; mov dword ptr [rsp + 8], edx ; call 0x71f97
0x000000000002c2d3 : out dx, eax ; mov eax, r8d ; syscall
0x000000000013b48b : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013b4d5 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000083345 : out dx, eax ; mov edx, 1 ; call 0x7fd58
0x0000000000152a6a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b66 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173652 : out dx, eax ; mov r13, r14 ; call 0x1f8ae
0x0000000000048b80 : out dx, eax ; mov rax, rdx ; ret
0x0000000000172dca : out dx, eax ; mov rbp, r12 ; call 0x1f8ae
0x00000000001153e0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000135bbb : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132783 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012aa1f : out dx, eax ; mov rcx, r13 ; call rbx
0x00000000000378b5 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000015b27a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000000353a : out dx, eax ; nop ; retf 0xe9ee
0x000000000014b57d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000002890 : out dx, eax ; out dx, al ; retf 0x182c
0x00000000001743ac : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000186aac : out dx, eax ; pop rbp ; in eax, dx ; jmp rdi
0x00000000000859c4 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000072cc1 : out dx, eax ; pop rbx ; ret
0x000000000016e8d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16e8ab
0x000000000016e951 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16e929
0x000000000016ede3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16edbb
0x000000000016ee61 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16ee39
0x000000000016ff03 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16fedb
0x000000000016ff81 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16ff59
0x0000000000170413 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1703eb
0x0000000000170491 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x170469
0x0000000000197faa : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f440000] ; out dx, eax ; jmp rsp
0x0000000000101f6d : out dx, eax ; push rdx ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000016e4d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aae18 : out dx, eax ; ret
0x000000000012bf3d : out dx, eax ; ret 0
0x00000000000aa2a3 : out dx, eax ; ret 0xf66
0x000000000011b7d5 : out dx, eax ; retf
0x00000000000aa286 : out dx, eax ; retf 0x4466
0x00000000001853db : out dx, eax ; retf 0xab0d
0x0000000000111f7d : out dx, eax ; retf 0xffff
0x0000000000089d3a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000016f9ec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f9d5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f9be : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e47a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195565 : out dx, eax ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000012d74e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000048088 : out dx, eax ; xor eax, eax ; ret
0x000000000002c2a1 : out dx, eax ; xor eax, eax ; syscall
0x000000000014712e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bf6f1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010c6fe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017098e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001b298d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2a05 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b29a5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b295d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000b6074 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000004486d : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; retf 0xfe93
0x0000000000196109 : outsb dx, byte ptr [rsi] ; cld ; jmp rax
0x00000000001b0939 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000034cbb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000014a6de : outsb dx, byte ptr [rsi] ; fild dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x0000000000186b59 : outsb dx, byte ptr [rsi] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186a2d : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp rdi
0x0000000000186a99 : outsb dx, byte ptr [rsi] ; in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000187bf9 : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bcd : outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187bf5 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bd1 : outsb dx, byte ptr [rsi] ; int1 ; jmp rsp
0x0000000000185863 : outsb dx, byte ptr [rsi] ; ja 0x1857ec ; ret 0x48f
0x0000000000057c06 : outsb dx, byte ptr [rsi] ; ret 0x36
0x00000000000bf4ae : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00000000000037de : outsb dx, byte ptr [rsi] ; retf
0x00000000000349fb : outsb dx, byte ptr [rsi] ; retf 0xff2
0x0000000000034d68 : outsb dx, byte ptr [rsi] ; retf 0xff3
0x00000000001835a4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000011094f : outsb dx, byte ptr [rsi] ; sbb cl, ch ; retf
0x0000000000184bd8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000000f6430 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000194f49 : outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x000000000000366d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000008f75a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007e5c4 : outsd dx, dword ptr [rsi] ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000109f9d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000196aad : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa2 ; jmp rsp
0x000000000015d24d : outsd dx, dword ptr [rsi] ; add byte ptr es:[rax + 0x39], cl ; retf 0x377
0x00000000000970ad : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b2a4d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b2ac5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b23eb
0x00000000001b2af5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b241b
0x00000000001b2b25 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244b
0x00000000001b2a65 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001bbf79 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000001bbf49 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001bc069 : outsd dx, dword ptr [rsi] ; clc ; call rcx
0x000000000019610d : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00000000001b0a41 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000011568d : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000089ee8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001531f2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000001533f2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x00000000000b58bc : outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000016f7ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016f88d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000016f3b2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000016f432 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000008d52a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003d2fc : outsd dx, dword ptr [rsi] ; ret
0x0000000000115691 : outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000183f66 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000001533a7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000016f892 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000e0d12 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000008d57a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000ca14c : outsd dx, dword ptr [rsi] ; retf
0x000000000006555d : outsd dx, dword ptr [rsi] ; retf 0
0x0000000000146ad9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000153472 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x0000000000115689 : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000016e8ca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000000e0cf5 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000019cfc9 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000183f65 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000144d72 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000abf34 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000abf1f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000144d71 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000185365 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000185366 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000009e9a1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000009f015 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000034b41 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034e71 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000009f023 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0c5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9f149 ; xor eax, eax ; ret
0x0000000000034b40 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034e70 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000000223b : pmuludq mm4, mm7 ; retf
0x00000000000ea791 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000dbee5 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x00000000001150a5 : pop r10 ; ret
0x00000000001857ef : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000084caa : pop r12 ; jmp rax
0x0000000000086b3c : pop r12 ; jmp rcx
0x000000000010287f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102899 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423cc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002024f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b2 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d125 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000206c2 : pop r12 ; pop r13 ; ret
0x00000000000b65d4 : pop r12 ; pop r14 ; ret
0x00000000000398c6 : pop r12 ; pop rbp ; ret
0x000000000001fb12 : pop r12 ; ret
0x00000000000423ce : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000102da0 : pop r13 ; pop r14 ; pop r15 ; jmp 0x1f8b0
0x000000000010404d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b4 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e5 : pop r13 ; pop r14 ; ret
0x0000000000073632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d127 : pop r13 ; pop rbp ; ret
0x00000000000206c4 : pop r13 ; ret
0x00000000000423d0 : pop r14 ; fmul st(0) ; ret
0x000000000004234e : pop r14 ; fmulp st(1) ; ret
0x0000000000102da2 : pop r14 ; pop r15 ; jmp 0x1f8ae
0x000000000010404f : pop r14 ; pop r15 ; jmp rax
0x0000000000020253 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210ff : pop r14 ; pop r15 ; ret
0x00000000000cd6b6 : pop r14 ; pop rbp ; ret
0x00000000000202e7 : pop r14 ; ret
0x0000000000073634 : pop r14 ; sar rax, 2 ; ret
0x0000000000102da4 : pop r15 ; jmp 0x1f8ac
0x0000000000104051 : pop r15 ; jmp rax
0x0000000000020255 : pop r15 ; pop rbp ; ret
0x0000000000021101 : pop r15 ; ret
0x0000000000077570 : pop r8 ; adc dword ptr [rax], eax ; mov eax, 2 ; syscall
0x000000000007eacc : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000135136 : pop r8 ; mov eax, 1 ; ret
0x00000000001946b7 : pop r9 ; clc ; ret 0x6e1f
0x00000000000edc8f : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000077571 : pop rax ; adc dword ptr [rax], eax ; mov eax, 2 ; syscall
0x000000000013586e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000011ce5c : pop rax ; add dword ptr [rax], esp ; jne 0x11ce2f ; jmp 0x11cdfc
0x000000000011ce5b : pop rax ; add dword ptr [rax], esp ; jne 0x11ce30 ; jmp 0x11cdfd
0x000000000010f938 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; jmp rdx
0x00000000001b2a68 : pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000135a34 : pop rax ; call rax
0x0000000000195b59 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b95 : pop rax ; cld ; call qword ptr [rax]
0x0000000000195b55 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000001a6b28 : pop rax ; cli ; call qword ptr [rax]
0x000000000009bd56 : pop rax ; dec dword ptr [rcx + 0x29] ; retf
0x00000000001b59a8 : pop rax ; fcomi st(6) ; jmp rsi
0x00000000000b9fa9 : pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001aefc8 : pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a6728 : pop rax ; jae 0x1a671c ; jmp qword ptr [rdx]
0x00000000001b0cc8 : pop rax ; jb 0x1b0cc3 ; jmp qword ptr [rcx]
0x000000000019e568 : pop rax ; jl 0x19e557 ; jmp qword ptr [rsi]
0x0000000000135876 : pop rax ; jmp rcx
0x00000000001b1e58 : pop rax ; mov ch, 0xf5 ; call rdi
0x000000000007eacd : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000135137 : pop rax ; mov eax, 1 ; ret
0x000000000002def4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000003cc6 : pop rax ; mov esi, 0xcf8cb236 ; retf
0x000000000012e7ce : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000101ff8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e513e : pop rax ; or bh, dh ; ret
0x00000000000a4cc4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000019d478 : pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6e28 : pop rax ; out 0xee, al ; call qword ptr [rax]
0x0000000000197cc9 : pop rax ; out dx, al ; call rsp
0x00000000001b0968 : pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019cfc8 : pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001b0608 : pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000001f92e : pop rax ; pop rbx ; pop rbp ; ret
0x000000000005df1c : pop rax ; pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000107419 : pop rax ; pop rdi ; call rax
0x00000000001435b1 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000033544 : pop rax ; ret
0x00000000000caabc : pop rax ; ret 0x2f
0x0000000000185743 : pop rax ; retf
0x000000000019ab39 : pop rax ; stc ; jmp rsp
0x00000000001019cb : pop rax ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001adbb8 : pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x0000000000001ea7 : pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000001bc1b8 : pop rax ; xchg ebx, edi ; call rcx
0x00000000000deab7 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000001390be : pop rbp ; add al, ch ; retf
0x00000000000de8ed : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x00000000001192b6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000015e4dc : pop rbp ; add byte ptr es:[rax + 0x39], cl ; retf 0x830f
0x0000000000198e7d : pop rbp ; add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x000000000009e409 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000000001101cf : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012e87d : pop rbp ; add eax, edx ; ret
0x00000000001153e3 : pop rbp ; clc ; leave ; ret
0x000000000019583d : pop rbp ; cld ; jmp qword ptr [rdx]
0x0000000000195781 : pop rbp ; cld ; jmp rax
0x000000000019b401 : pop rbp ; cli ; call rsp
0x000000000002e198 : pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000048daa : pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000186bd5 : pop rbp ; in eax, dx ; call qword ptr [rsi]
0x0000000000186aad : pop rbp ; in eax, dx ; jmp rdi
0x00000000001851e5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000132e43 : pop rbp ; jmp 0x1f8ab
0x0000000000071fc4 : pop rbp ; jmp rax
0x000000000012bf65 : pop rbp ; jmp rcx
0x000000000012d752 : pop rbp ; jmp rdx
0x000000000013d6fb : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000007ef05 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000183b40 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000084ca9 : pop rbp ; pop r12 ; jmp rax
0x0000000000086b3b : pop rbp ; pop r12 ; jmp rcx
0x000000000010287e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102898 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042349 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000210fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000202e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b65d3 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb11 : pop rbp ; pop r12 ; ret
0x000000000012cb06 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000423cf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000004234d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x0000000000102da1 : pop rbp ; pop r14 ; pop r15 ; jmp 0x1f8af
0x000000000010404e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000020252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fe : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cd6b5 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000202e6 : pop rbp ; pop r14 ; ret
0x0000000000073633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x000000000006d128 : pop rbp ; pop rbp ; ret
0x0000000000048438 : pop rbp ; pop rbx ; ret
0x000000000001f930 : pop rbp ; ret
0x0000000000088e1f : pop rbp ; ret 8
0x0000000000048db2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000076ca6 : pop rbp ; sbb al, ch ; ret
0x0000000000194f15 : pop rbp ; sti ; jmp qword ptr [rax]
0x000000000012ddb4 : pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000007915c : pop rbp ; sub rax, rdx ; ret
0x00000000000e95e6 : pop rbp ; test al, 0xe9 ; retf 0xfffd
0x0000000000113331 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x0000000000100ee7 : pop rbx ; add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0xcd1f9
0x00000000001a167d : pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x0000000000182b38 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000aac3c : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000aac6f : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000115327 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001958d1 : pop rbx ; cld ; call rsp
0x0000000000195751 : pop rbx ; cld ; jmp qword ptr [rax]
0x0000000000196115 : pop rbx ; cld ; jmp rax
0x00000000001b05c1 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000182b36 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006e28e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000186dbc : pop rbx ; in al, 0xed ; jmp qword ptr [rcx]
0x000000000006f8ca : pop rbx ; jmp rax
0x00000000000bf0b1 : pop rbx ; jp 0xbf0ea ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001192e8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000070b80 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000070b6c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000d5962 : pop rbx ; mov eax, 1 ; ret
0x00000000000efcbb : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000003a725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000aacdc : pop rbx ; mov eax, eax ; ret
0x0000000000047a11 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d4e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000717ca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc4db : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000009ee6d : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000072220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006eff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fc82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000086838 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000001339c4 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000cd6b1 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006d124 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000398c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012e87c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000132e42 : pop rbx ; pop rbp ; jmp 0x1f8ac
0x0000000000071fc3 : pop rbx ; pop rbp ; jmp rax
0x000000000012bf64 : pop rbx ; pop rbp ; jmp rcx
0x000000000012d751 : pop rbx ; pop rbp ; jmp rdx
0x0000000000084ca8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000086b3a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000010287d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102897 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000202e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b65d2 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb10 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cb05 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f92f : pop rbx ; pop rbp ; ret
0x000000000007915b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000101fc1 : pop rbx ; push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x000000000002a69a : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x0000000000185e20 : pop rbx ; ret 0x6f9
0x00000000001832fd : pop rbx ; retf
0x0000000000194f4d : pop rbx ; sti ; call qword ptr [rax]
0x0000000000002fa1 : pop rbx ; sub edi, esi ; retf 0x54f7
0x00000000000ad159 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000001d3d : pop rbx ; test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x000000000001fb74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009ee5b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000019b6dd : pop rcx ; add al, byte ptr [rax] ; je 0x19b6b1 ; cli ; jmp rsp
0x000000000019b6e5 : pop rcx ; add al, byte ptr [rax] ; push rsp ; retf
0x00000000001419de : pop rcx ; add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret 0xffee
0x0000000000150e17 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004104c : pop rcx ; add eax, 0xebe80000 ; retf
0x0000000000091f14 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000194330 : pop rcx ; clc ; ret 0x6e1f
0x00000000001960d1 : pop rcx ; cld ; jmp rax
0x0000000000034ce0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000000662e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000145ff7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000be064 : pop rcx ; or eax, 0x440f4800 ; ret 0x8d48
0x000000000013cc0f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000101f3b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea69a : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x000000000003c1af : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000001419e3 : pop rcx ; ret 0xffee
0x0000000000019be8 : pop rcx ; retf
0x0000000000101df2 : pop rcx ; retf 0xc383
0x0000000000188e7c : pop rcx ; sal bl, 1 ; jmp rcx
0x000000000007d87e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001079e2 : pop rcx ; sbb eax, 0x7500002c ; adc ecx, dword ptr [rcx - 0x77] ; retf 0xe8b8
0x00000000000ac9e3 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x000000000002c7cb : pop rcx ; xchg eax, edx ; cmp dword ptr [rax], eax ; mov eax, ecx ; syscall
0x00000000001286c3 : pop rcx ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000001515e8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000f6fc2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000005df1d : pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001b1b0d : pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x000000000014bc0d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e95e2 : pop rdi ; and byte ptr [rax - 0x77], cl ; pop rbp ; test al, 0xe9 ; retf 0xfffd
0x000000000010741a : pop rdi ; call rax
0x000000000019576d : pop rdi ; cld ; call qword ptr [rax]
0x0000000000195969 : pop rdi ; cld ; jmp qword ptr [rax]
0x00000000001960e1 : pop rdi ; cld ; jmp rax
0x000000000019582d : pop rdi ; cld ; jmp rdx
0x0000000000153009 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e19 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001850de : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000102da5 : pop rdi ; jmp 0x1f8ab
0x0000000000104052 : pop rdi ; jmp rax
0x00000000001840a1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000b57cc : pop rdi ; or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x0000000000152c39 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152a69 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b65 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000020256 : pop rdi ; pop rbp ; ret
0x0000000000021102 : pop rdi ; ret
0x0000000000067499 : pop rdi ; ret 0xffff
0x0000000000001c26 : pop rdi ; retf 0x49f2
0x0000000000132e45 : pop rdi ; retf 0xffee
0x00000000000c7885 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000110cee : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000001464f6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000001b0561 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000134dc2 : pop rdx ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000003a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000184cc1 : pop rdx ; je 0x184c8b ; ret 0xacfc
0x0000000000184dd3 : pop rdx ; leave ; retf
0x00000000000ac883 : pop rdx ; or al, 0 ; ret
0x000000000012fc55 : pop rdx ; or byte ptr [rax - 0x77], cl ; retf
0x0000000000185c87 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000003539 : pop rdx ; out dx, eax ; nop ; retf 0xe9ee
0x00000000001150a4 : pop rdx ; pop r10 ; ret
0x0000000000101ffc : pop rdx ; pop rbx ; ret
0x00000000000ea699 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000001150c9 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000184ca3 : pop rdx ; retf
0x00000000001857f0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000ac575 : pop rdx ; test al, 0xf0 ; jne 0xac5a9 ; lea rax, [rdi - 0x10] ; ret
0x000000000016e8d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16e8aa
0x000000000016e952 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16e928
0x000000000016ede4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16edba
0x000000000016ee62 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16ee38
0x000000000016ff04 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16feda
0x000000000016ff82 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x16ff58
0x0000000000170414 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1703ea
0x0000000000170492 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x170468
0x000000000014bb0e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012413c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x000000000010935c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x0000000000195839 : pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x00000000001957b5 : pop rsi ; cld ; call qword ptr [rsi]
0x0000000000195975 : pop rsi ; cld ; call rax
0x0000000000195971 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019611d : pop rsi ; cld ; jmp rax
0x00000000001958f5 : pop rsi ; cld ; jmp rsp
0x00000000000cdebe : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c924a : pop rsi ; fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000423d1 : pop rsi ; fmul st(0) ; ret
0x000000000004234f : pop rsi ; fmulp st(1) ; ret
0x0000000000094aa5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000197cf1 : pop rsi ; out dx, al ; jmp rsp
0x0000000000102da3 : pop rsi ; pop r15 ; jmp 0x1f8ad
0x0000000000104050 : pop rsi ; pop r15 ; jmp rax
0x0000000000020254 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000021100 : pop rsi ; pop r15 ; ret
0x00000000000cd6b7 : pop rsi ; pop rbp ; ret
0x00000000000202e8 : pop rsi ; ret
0x0000000000101dbb : pop rsi ; ret 0xcdbb
0x0000000000002457 : pop rsi ; retf 0x8a3f
0x0000000000073635 : pop rsi ; sar rax, 2 ; ret
0x00000000000f90d5 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000147340 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000198214 : pop rsp ; add al, 1 ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001467f4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3c94 : pop rsp ; add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000000d9592 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000148040 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000bb8f5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000195985 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000195849 : pop rsp ; cld ; call rdx
0x0000000000195845 : pop rsp ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001960d9 : pop rsp ; cld ; jmp rax
0x00000000001957c9 : pop rsp ; cld ; jmp rsi
0x00000000001b9594 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x0000000000186899 : pop rsp ; in eax, dx ; call qword ptr [rdi]
0x0000000000186891 : pop rsp ; in eax, dx ; call rsp
0x0000000000198551 : pop rsp ; int1 ; call rsp
0x00000000001a9951 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001887a0 : pop rsp ; jle 0x188799 ; jmp rdi
0x000000000018a850 : pop rsp ; jle 0x18a84c ; jmp rdx
0x0000000000084cab : pop rsp ; jmp rax
0x0000000000086b3d : pop rsp ; jmp rcx
0x0000000000199f2c : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000102880 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010289a : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001451d0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000423cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000102d9f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x1f8b1
0x000000000010404c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b3 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d126 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x00000000000b65d5 : pop rsp ; pop r14 ; ret
0x0000000000001ea6 : pop rsp ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000398c7 : pop rsp ; pop rbp ; ret
0x00000000001b1194 : pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x0000000000003838 : pop rsp ; ret
0x000000000000318d : pop rsp ; ret 0x52c0
0x00000000001a8694 : pop rsp ; retf
0x0000000000018fd0 : pop rsp ; retf 0x18
0x0000000000117418 : pop rsp ; retf 0x2a
0x0000000000048319 : pop rsp ; retf 0x4df0
0x0000000000184e47 : pop rsp ; sbb ebp, ebx ; retf
0x0000000000194f11 : pop rsp ; sti ; call rax
0x000000000019e594 : pop rsp ; sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58b ; jmp rsp
0x00000000001aef94 : pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a58bd : popfq ; add byte ptr [rax], al ; add esi, ebp ; call qword ptr [rsi]
0x00000000001999ad : popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001ae37e : popfq ; add ecx, dword ptr [rdx] ; ret
0x000000000019644d : popfq ; cld ; call qword ptr [rdx]
0x00000000001963cd : popfq ; cld ; jmp qword ptr [rsi]
0x000000000019658d : popfq ; cld ; jmp rax
0x0000000000077b1f : popfq ; cmp eax, 0x89480001 ; and r11b, bpl ; retf 0x1f0f
0x0000000000184dcc : popfq ; jrcxz 0x184d91 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000000e3375 : popfq ; or al, 0 ; add al, ch ; ret 0xf4a8
0x00000000000e90b5 : popfq ; ret
0x0000000000173607 : popfq ; ret 0xffea
0x00000000000026ab : popfq ; retf
0x0000000000019120 : popfq ; retf 0x18
0x0000000000185b82 : popfq ; retf 0xde4f
0x0000000000148a20 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000104907 : popfq ; scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000005a7b3 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000015b342 : psllq mm1, qword ptr [r15] ; jg 0x15b35d ; ret
0x000000000015de12 : psllq mm1, qword ptr [r15] ; jg 0x15de2d ; ret
0x0000000000160932 : psllq mm1, qword ptr [r15] ; jg 0x16094d ; ret
0x000000000015b343 : psllq mm1, qword ptr [rdi] ; jg 0x15b35c ; ret
0x000000000015de13 : psllq mm1, qword ptr [rdi] ; jg 0x15de2c ; ret
0x0000000000160933 : psllq mm1, qword ptr [rdi] ; jg 0x16094c ; ret
0x00000000000a5e66 : psllq mm1, qword ptr [rdi] ; jg 0xa5e7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5e65 : psllq mm1, qword ptr [rdi] ; jg 0xa5e7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ec7 : psllq mm1, qword ptr [rdi] ; jg 0xa5edc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6b36 : psllq mm1, qword ptr [rdi] ; jg 0xa6b4a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b35 : psllq mm1, qword ptr [rdi] ; jg 0xa6b4b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b97 : psllq mm1, qword ptr [rdi] ; jg 0xa6bac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8f46 : psllq mm1, qword ptr [rdi] ; jg 0xa8f5a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f45 : psllq mm1, qword ptr [rdi] ; jg 0xa8f5b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8fa7 : psllq mm1, qword ptr [rdi] ; jg 0xa8fbc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a16 : psllq mm1, qword ptr [rdi] ; jg 0xa9a2a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a15 : psllq mm1, qword ptr [rdi] ; jg 0xa9a2b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a77 : psllq mm1, qword ptr [rdi] ; jg 0xa9a8c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bf21c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x0000000000068c38 : push -0x14000005 ; retf 0x8b48
0x0000000000183ba4 : push -0x30 ; retf 0xe72e
0x00000000000ad5c7 : push -0x38b6ffcf ; ret 0xffff
0x000000000018322e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001853d5 : push -0x57d3205 ; call 0xffffffffab261ed5
0x00000000001833e1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000002c01 : push -0x7329150 ; ret
0x0000000000111924 : push -0x74fff86c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000f5db4 : push -0x76000003 ; ret 0xcb8
0x000000000004b15c : push -0x76000005 ; ret 0x8941
0x000000000005c896 : push -0x7c000006 ; ret 0x8908
0x000000000018875c : push -0x7d ; call qword ptr [rdx]
0x0000000000116893 : push -0x7eb7000d ; ret
0x0000000000170974 : push -0x9ffffff ; ret 0x7501
0x000000000002057f : push -0xcfffff7 ; ret
0x00000000000ac567 : push -0xfb872b8 ; ret
0x0000000000096e3b : push -1 ; ja 0x96e21 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019613d : push -4 ; jmp rax
0x00000000000cd32d : push 0 ; add byte ptr [rax], al ; syscall
0x000000000012c4aa : push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000045f8f : push 0x11b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000004665e : push 0x13b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000012c4ac : push 0x19 ; call qword ptr [rax]
0x0000000000184bd5 : push 0x1b6e41b5 ; std ; retf
0x00000000000fa3d8 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000e10bc : push 0x2494b60f ; ret
0x0000000000081862 : push 0x25 ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000005633c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x00000000001ba33a : push 0x41380e0a ; ret
0x0000000000199005 : push 0x44740001 ; cmc ; jmp rsp
0x0000000000085c7c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000000e8a73 : push 0x5c415d5b ; pop r13 ; ret
0x0000000000196139 : push 0x6a60fffc ; cld ; jmp rax
0x0000000000185862 : push 0x6e ; ja 0x1857ed ; ret 0x48f
0x00000000000034ff : push 0x7514dab8 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x0000000000185142 : push 0xfd4cbe ; retf 0xf64
0x0000000000134fce : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000a68c2 : push 5 ; add byte ptr [rax], al ; ret
0x00000000000504c1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000194e8f : push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194eaf : push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x000000000019596f : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e5b : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196353 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00000000001950bf : push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195bc3 : push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000018957f : push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x00000000001959bf : push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000194f4b : push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x000000000018957b : push qword ptr [rax + 0x70fff452] ; push rdx ; hlt ; jmp qword ptr [rsi]
0x0000000000194e2f : push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x000000000019aa3b : push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000187dfb : push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187fd7 : push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x0000000000195313 : push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001952af : push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x000000000019532f : push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000018808b : push qword ptr [rax - 0x3f000dfc] ; add al, 0xf2 ; call rax
0x0000000000188003 : push qword ptr [rax - 0x3f000dff] ; add edx, esi ; jmp rax
0x0000000000187eb7 : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187e43 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187bf3 : push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000196397 : push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196583 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000060dbb : push qword ptr [rax - 0x77] ; ret
0x0000000000195e8b : push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x000000000019552b : push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019557f : push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e6f : push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954f3 : push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000001954db : push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000194e1f : push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194ecf : push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x00000000001952b3 : push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000187e0b : push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x00000000000a56cf : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001955af : push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000194ea7 : push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000195637 : push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x00000000001952cf : push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x00000000001722f8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000007469b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000001073ff : push qword ptr [rbp + 7] ; mov eax, 0x27 ; syscall
0x000000000007ba4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000072b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000001276f7 : push qword ptr [rbp + rcx + 0x44] ; mov eax, esi ; syscall
0x00000000001429a0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000072b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000c89ae : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048b7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000011fd82 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00000000001287bb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017427c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000484c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000115b72 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000cc295 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f5a78 : push qword ptr [rbx + 0x34] ; ret
0x000000000003576c : push qword ptr [rbx + 1] ; ret
0x0000000000047b26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000072cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000195df7 : push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000073cde : push qword ptr [rbx + rcx - 0x18] ; ret 0xfabb
0x00000000001751ef : push qword ptr [rbx + rdx + 0x48] ; movsxd rdi, eax ; mov eax, r14d ; syscall
0x0000000000198ed3 : push qword ptr [rcx + 0x14740001] ; cmc ; call rsp
0x00000000001978f3 : push qword ptr [rcx + rcx*8 - 0xfec0000] ; in eax, dx ; call rsp
0x000000000019b073 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x00000000001975c3 : push qword ptr [rcx + rsi*4 - 0x7f9c0000] ; in eax, dx ; jmp rsp
0x0000000000074b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000cf38b : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000075f78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000504c2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000b7c15 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x00000000001158dc : push qword ptr [rdi + 0x1b] ; ret
0x000000000003542d : push qword ptr [rdi + 0x20] ; ret
0x00000000000f7648 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f76ec : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fc7a3 : push qword ptr [rdi + 0xa] ; ret
0x00000000000f6ce2 : push qword ptr [rdi + 0xb] ; ret
0x00000000000357a1 : push qword ptr [rdi + 0xc] ; ret
0x00000000000cd58c : push qword ptr [rdi + 1] ; ret
0x00000000000357eb : push qword ptr [rdi + 2] ; ret
0x00000000000f6bea : push qword ptr [rdi + 3] ; ret
0x00000000000f6c39 : push qword ptr [rdi + 4] ; ret
0x00000000000cc170 : push qword ptr [rdi + 5] ; ret
0x00000000000cc07f : push qword ptr [rdi + 6] ; ret
0x00000000000c9656 : push qword ptr [rdi + 7] ; ret
0x0000000000035735 : push qword ptr [rdi + 8] ; ret
0x00000000000c83dc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000bc43c : push qword ptr [rdi + 9] ; ret
0x000000000007b596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000e84f6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000134836 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x0000000000197fab : push qword ptr [rdi + rsi*8 + 0x1f440000] ; out dx, eax ; jmp rsp
0x0000000000096e3c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001158b4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188b23 : push qword ptr [rdi] ; mov dh, 0xf3 ; dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x0000000000195843 : push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x0000000000195d2f : push qword ptr [rdx + 0x42fffc84] ; test ah, bh ; call rdx
0x0000000000196227 : push qword ptr [rdx + 0x42fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001962ef : push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019ab0b : push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x0000000000198a1b : push qword ptr [rdx + rdi + 0x24040001] ; jmp rsp
0x00000000001277a1 : push qword ptr [rdx + rdx + 0x48] ; movsxd rdi, eax ; mov eax, r14d ; syscall
0x00000000000ad2ab : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000186e1b : push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019620f : push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001886bf : push qword ptr [rdx - 0xb000c87] ; mov esi, ebx ; call qword ptr [rdx]
0x000000000019643f : push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001890bf : push qword ptr [rip + 0x23fff3db] ; fcomi st(3) ; call qword ptr [rcx]
0x00000000001961c3 : push qword ptr [rsi + 0x46fffca8] ; test al, 0xfc ; call rsi
0x00000000001099b9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000186a2b : push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000186a97 : push qword ptr [rsi + rbp*2 - 0x13] ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000187bcb : push qword ptr [rsi + rbp*2] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000197eab : push qword ptr [rsi + rbp*8 - 0x265c0000] ; out dx, al ; call rsp
0x0000000000195043 : push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x000000000019a683 : push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000019751b : push qword ptr [rsp + rbp*4 + 0x6b040000] ; in eax, dx ; jmp rsp
0x0000000000197723 : push qword ptr [rsp + rdi*4 - 0x506c0000] ; in eax, dx ; call rsp
0x000000000012763f : push qword ptr [rsp + rdx - 0x48] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000186d5b : push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000135066 : push r12 ; mov eax, 1 ; ret
0x000000000007b20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018328c : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000012dc6a : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000ee79a : push rax ; adc al, 0x8b ; sbb al, 0x39 ; retf 0x850f
0x000000000012db1c : push rax ; adc al, 0xf ; retf 0xd189
0x000000000012dc61 : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000071c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012db11 : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x000000000012c73d : push rax ; adc dh, dh ; ret 0x7401
0x000000000008156d : push rax ; adc dh, dh ; ret 0xf0f
0x00000000001aabe0 : push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000009411d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000819e6 : push rax ; add al, ch ; ret
0x00000000001954d8 : push rax ; add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000007b20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000188033 : push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000077f5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001072b5 : push rax ; add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x75], 5 ; retf
0x00000000001335af : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; cmc ; call 0x1f8a9
0x00000000001b0c05 : push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0c35 : push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c36 ; jmp qword ptr [rcx]
0x00000000001b0b75 : push rax ; add dword ptr [rax], eax ; js 0x1b0bf0 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b8d : push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b8e ; jmp qword ptr [rcx]
0x000000000002d711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000009574f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000018800f : push rax ; add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000188053 : push rax ; add esi, edx ; call qword ptr [rax]
0x00000000001953d3 : push rax ; add esp, edi ; call rax
0x000000000013bc09 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b867 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000005676b : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000141061 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001b2960 : push rax ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019bbf0 : push rax ; call 0x1b86fa
0x00000000000218e8 : push rax ; call rbx
0x00000000001bb590 : push rax ; clc ; call qword ptr [rbx]
0x0000000000195b91 : push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000195b51 : push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000004b829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001b1b10 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x0000000000099717 : push rax ; dec dword ptr [rax + 0x29] ; retf
0x0000000000046bdd : push rax ; dec dword ptr [rax + 1] ; retf 0xf66
0x00000000001952bb : push rax ; fdiv st(3), st(0) ; call rax
0x0000000000195300 : push rax ; fdivp st(3) ; jmp qword ptr [rax]
0x00000000001952d3 : push rax ; fdivr st(3) ; call rax
0x0000000000195337 : push rax ; fsincos ; call rax
0x0000000000189108 : push rax ; hlt ; call qword ptr [rax]
0x00000000001891a1 : push rax ; hlt ; call rdi
0x000000000018919d : push rax ; hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001891a5 : push rax ; hlt ; jmp rcx
0x0000000000187e53 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000195510 : push rax ; in eax, 0xfb ; call qword ptr [rax - 0x1f000417]
0x00000000001b0f20 : push rax ; jbe 0x1b0f1b ; jmp qword ptr [rcx]
0x000000000019609c : push rax ; jge 0x19609e ; call rax
0x00000000001960a4 : push rax ; jl 0x1960a6 ; call rax
0x00000000001960ac : push rax ; jnp 0x1960ae ; call rax
0x00000000001b1210 : push rax ; jnp 0x1b120b ; jmp qword ptr [rcx]
0x00000000001960bc : push rax ; jns 0x1960be ; call rax
0x00000000001960b4 : push rax ; jp 0x1960b6 ; call rax
0x0000000000074fe2 : push rax ; lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000196164 : push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x00000000001832fa : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000005f10a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x0000000000023ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000007c7e3 : push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x7c7d3
0x0000000000135856 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000113326 : push rax ; mov rsi, rdx ; call rax
0x0000000000196393 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x000000000012db06 : push rax ; or al, 0xf ; retf 0xd189
0x00000000001296c8 : push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000007ee42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000013afcf : push rax ; or byte ptr [rbp - 0x143a8a40], al ; retf
0x000000000012daf2 : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000081ef2 : push rax ; or dh, dh ; ret 0x7404
0x0000000000081e65 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe57 : push rax ; or dh, dh ; ret 0xf08
0x00000000001450dc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019d460 : push rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6400 : push rax ; out dx, al ; call qword ptr [rax]
0x000000000013a7e1 : push rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000187ec7 : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00000000001946b6 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000195780 : push rax ; pop rbp ; cld ; jmp rax
0x00000000000acb0e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019658c : push rax ; popfq ; cld ; jmp rax
0x0000000000195b8f : push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x00000000001959bb : push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195bcc : push rax ; push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000187fc7 : push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000023ad0 : push rax ; push rsp ; ret
0x00000000000348fd : push rax ; ret
0x00000000000091b8 : push rax ; ret 0x13
0x00000000001123cc : push rax ; ret 0xfff1
0x0000000000009248 : push rax ; retf
0x0000000000010d48 : push rax ; retf 0x11
0x00000000000502f3 : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000000c0201 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c3194 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000195393 : push rax ; sar ebx, 0xff ; ret
0x0000000000194e7f : push rax ; sbb bl, bh ; jmp rax
0x0000000000073e62 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000007c886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000012db27 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x00000000001100e2 : push rax ; sbb dh, dh ; ret 0x7508
0x0000000000114a25 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f5b81 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000187f97 : push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000195657 : push rax ; sub bh, ah ; call rax
0x000000000018b09b : push rax ; sub dl, bh ; jmp rax
0x00000000001956bb : push rax ; sub edi, esp ; jmp rax
0x00000000001955b3 : push rax ; sub esp, edi ; call rax
0x0000000000195634 : push rax ; sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x00000000001ae240 : push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000195c6c : push rax ; test esp, edi ; jmp rax
0x0000000000195c10 : push rax ; xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x00000000000fa437 : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000007bfcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000018328d : push rax ; xor byte ptr [rcx], ah ; retf
0x0000000000195bcf : push rax ; xor edi, esp ; call qword ptr [rax]
0x00000000000e2440 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2465 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x0000000000172b77 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012ed7c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000f5c52 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5bd4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000005b326 : push rbp ; add byte ptr [rax + 0x63], cl ; add cl, ch ; retf
0x000000000004950f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000f247d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000102f91 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d45fc : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000118d0a : push rbp ; and byte ptr [rcx], ch ; retf 0x3ae9
0x0000000000118f22 : push rbp ; and byte ptr [rcx], ch ; retf 0x45e9
0x0000000000076cea : push rbp ; and byte ptr [rcx], ch ; retf 0x55e9
0x0000000000195b71 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b6d : push rbp ; cld ; call qword ptr [rax]
0x00000000000edcd8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x0000000000003a76 : push rbp ; jg 0x3ae5 ; xchg eax, ebp ; retf 0x10bf
0x0000000000003a75 : push rbp ; jg 0x3ae6 ; xchg eax, ebp ; retf 0x10bf
0x00000000000e3007 : push rbp ; jno 0xe300f ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114704 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000149b68 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000113ea4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000d6eeb : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd6f1d ; or byte ptr [rcx], ch ; ret
0x00000000000c88e0 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000099568 : push rbp ; ret
0x000000000009bb76 : push rbp ; ret 0x8348
0x000000000009955a : push rbp ; ret 0x8349
0x00000000000026ad : push rbp ; retf
0x0000000000018fb8 : push rbp ; retf 0x18
0x0000000000105a1a : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000025de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x00000000001116a8 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000004bccf : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d581b : push rbp ; test al, 0x89 ; ret
0x0000000000023657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x0000000000113d31 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000001159d0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008eb1a : push rbp ; xor rax, rax ; ret
0x00000000000891d1 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000012dc3b : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000b6849 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000105e21 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000db237 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000085f7f : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001b0f1d : push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f1e ; jmp qword ptr [rcx]
0x0000000000110a7c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000012dc5c : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000195b7d : push rbx ; cld ; call qword ptr [rax]
0x00000000001959c1 : push rbx ; cld ; jmp rax
0x0000000000195bc1 : push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000001959bd : push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x000000000019b2e1 : push rbx ; cli ; call rsp
0x0000000000189ecb : push rbx ; cmc ; call qword ptr [rbx]
0x00000000001b0331 : push rbx ; cmc ; call qword ptr [rdx]
0x000000000007c7bd : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000002053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000e03e6 : push rbx ; cmp cl, ch ; ret
0x00000000000dfee7 : push rbx ; cmp cl, ch ; ret 0xfffe
0x00000000001892c5 : push rbx ; hlt ; call rdi
0x00000000001892c1 : push rbx ; hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000001892c9 : push rbx ; hlt ; jmp rcx
0x000000000002a692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x0000000000072ad9 : push rbx ; je 0x72b3d ; pop rbp ; pop r12 ; ret
0x0000000000072b7e : push rbx ; je 0x72be2 ; pop rbp ; pop r12 ; ret
0x00000000000cdbcd : push rbx ; je 0xcdbaa ; mov eax, 1 ; ret
0x00000000000cdbcc : push rbx ; je 0xcdbab ; mov eax, 1 ; ret
0x00000000000ac54c : push rbx ; lea rax, [rdi - 0x10] ; ret
0x00000000000c88e1 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000000a6f22 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006ce2a : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000007b42b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000045b69 : push rbx ; or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000018781d : push rbx ; out dx, al ; jmp rax
0x000000000007c7e2 : push rbx ; push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x7c7d4
0x000000000002d8a8 : push rbx ; ret
0x000000000012dc4f : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000000891d5 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000007c7c1 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000007c7e6 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x0000000000076ba6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001443b3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443c9 ; xor eax, eax ; ret
0x00000000001443e3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443f9 ; xor eax, eax ; ret
0x0000000000144413 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144429 ; xor eax, eax ; ret
0x000000000012dc65 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000007a8a4 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000101d79 : push rbx ; sub dword ptr [rcx], ecx ; add byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x0000000000078771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000fd8dc : push rbx ; sub rsp, 0xa8 ; syscall
0x0000000000002cb4 : push rbx ; xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x0000000000184cbc : push rbx ; xchg eax, edx ; jae 0x184c9b ; push rsi ; pop rdx ; je 0x184c90 ; ret 0xacfc
0x000000000012dc6d : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000004b514 : push rcx ; adc al, 0 ; call 0x777f5
0x0000000000132315 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000e0f6a : push rcx ; add cl, byte ptr [rax + 0x63] ; retf 0x3949
0x00000000000bb43f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcb94fc51
0x00000000000ed507 : push rcx ; add cl, byte ptr [rbp - 0x77] ; retf 0x4864
0x00000000000b7956 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000001b0c7d : push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0cad : push rcx ; add dword ptr [rax], eax ; jb 0x1b0cae ; jmp qword ptr [rcx]
0x00000000001b0c4d : push rcx ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0cc5 : push rcx ; add dword ptr [rax], eax ; pop rax ; jb 0x1b0cc6 ; jmp qword ptr [rcx]
0x00000000001b0d0d : push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000d6d9e : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x000000000009ede9 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee68 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000013ab3e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000183f45 : push rcx ; call qword ptr [rsi]
0x0000000000195a11 : push rcx ; cld ; call rdx
0x0000000000195a4d : push rcx ; cld ; jmp qword ptr [rdx]
0x0000000000195a0d : push rcx ; cld ; ljmp [rcx + rdx*2] ; cld ; call rdx
0x0000000000195bcd : push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000194ff4 : push rcx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000189201 : push rcx ; hlt ; call rsp
0x00000000001891fd : push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x00000000001974e1 : push rcx ; in eax, dx ; jmp rsp
0x000000000009fd1d : push rcx ; jl 0x9fd6e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe84 : push rcx ; jl 0x9fed5 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0470 : push rcx ; jl 0xa04c1 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a05d7 : push rcx ; jl 0xa0628 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0bbd : push rcx ; jl 0xa0c0e ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0d24 : push rcx ; jl 0xa0d75 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000187fc9 : push rcx ; jmp qword ptr [rax]
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000194fe4 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rcx
0x0000000000194fec : push rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rcx
0x0000000000168e36 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000018769d : push rcx ; out dx, al ; jmp rax
0x0000000000187fc5 : push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000127aeb : push rcx ; ret
0x0000000000127bc3 : push rcx ; ret 0x29
0x00000000000f7323 : push rcx ; retf
0x000000000003d31f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000120692 : push rcx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000082f23 : push rcx ; sysenter
0x00000000000a9de2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8372 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000a9f40 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9c18 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009eaa4 : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000a81ba : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000015b4a9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000009ea14 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e9a4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002da7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000019b65d : push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b665 : push rdi ; add al, byte ptr [rax] ; ret
0x00000000000a9bea : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a743c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a827c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000fea4a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00000000000a9c48 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000108a9a : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001ba1a9 : push rdi ; call qword ptr [rdx]
0x00000000001528f8 : push rdi ; clc ; ret
0x0000000000195b61 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b5d : push rdi ; cld ; call qword ptr [rax]
0x0000000000152a70 : push rdi ; cld ; ret
0x000000000019b351 : push rdi ; cli ; jmp rsp
0x0000000000153597 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad89 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001358d5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000dac9d : push rdi ; cmp byte ptr [rcx - 0x73], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x1274
0x00000000000886da : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000015ad09 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ab5a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000007b164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015abea : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000123050 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a9c8c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cca : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000bb221 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000004a00a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004842a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000013eae2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000048431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000013c8d1 : push rdi ; or byte ptr [rcx], bh ; retf 0x850f
0x0000000000077f60 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a7620 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a8470 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000d20f2 : push rdi ; ret
0x000000000009d4e5 : push rdi ; ret 0xf800
0x000000000016f88e : push rdi ; ret 0xff3
0x000000000016f3b3 : push rdi ; retf
0x000000000016f433 : push rdi ; retf 0xcab2
0x000000000013beb3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010f576 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013cfcb : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000153797 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000153397 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000101a2a : push rdi ; sub al, 0 ; add rsp, 8 ; ret
0x000000000013591d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000013be12 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000013be42 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x0000000000104c2c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007400f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000a9f20 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008d52b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000198d85 : push rdx ; add dword ptr [rax], eax ; in al, 7 ; hlt ; call rsp
0x00000000001b0dcd : push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e4b ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d55 : push rdx ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x0000000000123efe : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000025d7a : push rdx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x0000000000195a49 : push rdx ; cld ; call qword ptr [rdx + 0x22fffc51]
0x0000000000195a45 : push rdx ; cld ; jmp qword ptr [rdx]
0x0000000000195bc5 : push rdx ; cld ; jmp rax
0x00000000001891b3 : push rdx ; hlt ; call qword ptr [rax]
0x00000000001892d7 : push rdx ; hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x0000000000189361 : push rdx ; hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x0000000000189581 : push rdx ; hlt ; jmp qword ptr [rsi]
0x0000000000189265 : push rdx ; hlt ; jmp rbx
0x000000000018957d : push rdx ; hlt ; push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x00000000001891af : push rdx ; hlt ; push rdx ; hlt ; call qword ptr [rax]
0x0000000000089676 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000013f412 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x000000000019582c : push rdx ; pop rdi ; cld ; jmp rdx
0x00000000001a71f5 : push rdx ; ret
0x00000000000d4e1a : push rdx ; retf 0xffff
0x00000000000b5c9e : push rdx ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000019ab11 : push rdx ; stc ; call rsp
0x0000000000101fc2 : push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x0000000000101f6e : push rdx ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x0000000000112424 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000144443 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144459 ; xor eax, eax ; ret
0x0000000000144473 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144489 ; xor eax, eax ; ret
0x00000000001444a3 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1444b9 ; xor eax, eax ; ret
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x0000000000196237 : push rdx ; test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x0000000000195d18 : push rdx ; xchg esp, edi ; jmp rdx
0x000000000016e4d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa6e9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xaa740 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000720a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000013e4df : push rsi ; add al, 0x75 ; sbb ebp, ecx ; retf
0x0000000000063bba : push rsi ; add al, 0x83 ; retf
0x0000000000075be0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x000000000015b741 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000f9606 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001b11dd : push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b11f5 : push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b1195 : push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b114d : push rsi ; add dword ptr [rax], eax ; nop ; jp 0x1b114e ; jmp qword ptr [rcx]
0x00000000001b120d : push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b120e ; jmp qword ptr [rcx]
0x00000000001b1165 : push rsi ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x000000000015b7b1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5df5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000020c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015b6d1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5d93 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000016e4e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000152a22 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000195b69 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b65 : push rsi ; cld ; call qword ptr [rax]
0x0000000000153191 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dc5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152fa5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153185 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152be5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000019b311 : push rsi ; cli ; jmp rsp
0x0000000000185860 : push rsi ; cli ; push 0x6e ; ja 0x1857ef ; ret 0x48f
0x0000000000171e36 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000019503c : push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000171e26 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000182639 : push rsi ; in al, dx ; call rax
0x0000000000171df6 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000113302 : push rsi ; je 0x113318 ; mov eax, 7 ; ret
0x00000000000f5f1b : push rsi ; js 0xf5f6f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f68b8 : push rsi ; js 0xf690c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000056808 : push rsi ; or al, 0x83 ; ret
0x000000000005678b : push rsi ; or al, 0xf6 ; ret 0xf08
0x0000000000094b2d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000bb21e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000184cc0 : push rsi ; pop rdx ; je 0x184c8c ; ret 0xacfc
0x00000000001957c8 : push rsi ; pop rsp ; cld ; jmp rsi
0x0000000000034bcf : push rsi ; ret
0x00000000000e5177 : push rsi ; ret 0x7420
0x000000000009f9ca : push rsi ; ret 0x7518
0x0000000000061bbf : push rsi ; ret 0xf02
0x00000000000e4b51 : push rsi ; ret 0xf08
0x00000000000582e8 : push rsi ; ret 0xf10
0x00000000000afecf : push rsi ; retf
0x00000000001961ac : push rsi ; stosd dword ptr [rdi], eax ; cld ; jmp rsi
0x00000000000eef8f : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000171e06 : push rsi ; sub eax, edx ; ret
0x0000000000195cb4 : push rsi ; test ah, bh ; jmp rsi
0x0000000000183288 : push rsi ; xchg eax, ebp ; jge 0x18326d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000000fb5a7 : push rsi ; xor ax, ax ; ret
0x000000000016e4fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019a310 : push rsp ; add al, bh ; push rsp ; retf
0x00000000001b0fe5 : push rsp ; add dword ptr [rax], eax ; js 0x1b0fe6 ; jmp qword ptr [rbx]
0x0000000000198dbd : push rsp ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x00000000001bad8c : push rsp ; add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b078c : push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000010eee1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010eddd : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000012c7f8 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000f2daf : push rsp ; and al, 0x18 ; mov qword ptr [rax], rbx ; call 0x1f8b0
0x00000000000f2dbc : push rsp ; and al, 0x18 ; mov rdi, r10 ; call 0x1f8b0
0x0000000000081630 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000819ac : push rsp ; and al, 0x20 ; call rax
0x00000000000ba6ee : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fdd54 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000848ea : push rsp ; and al, 0x68 ; call rax
0x0000000000085c7a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000fc498 : push rsp ; and al, 0xc8 ; mov eax, 0x10 ; syscall
0x000000000004a1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000554a4 : push rsp ; and al, 8 ; call 0x71f95
0x00000000001073d7 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x00000000001989f8 : push rsp ; and dh, bl ; jmp rsp
0x00000000000812c2 : push rsp ; and eax, 0x950f4100 ; ret
0x0000000000196850 : push rsp ; and ecx, ebp ; call rsp
0x00000000001af451 : push rsp ; call rsi
0x00000000001bb8f1 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bb929 : push rsp ; clc ; jmp qword ptr [rcx]
0x000000000019a688 : push rsp ; clc ; jmp rsp
0x0000000000195b79 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b75 : push rsp ; cld ; call qword ptr [rax]
0x00000000001bb58c : push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a6be9 : push rsp ; cli ; call qword ptr [rax]
0x0000000000189c2b : push rsp ; cmc ; call rsp
0x0000000000188cc0 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000189020 : push rsp ; fdivr st(3), st(0) ; push rsp ; ret
0x000000000019a5e4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000001892dd : push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892e5 : push rsp ; hlt ; jmp qword ptr [rdi]
0x000000000018932d : push rsp ; hlt ; jmp rbx
0x00000000001a248c : push rsp ; imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x00000000000cd9d6 : push rsp ; jne 0xcd963 ; mov eax, 0x7d00 ; ret
0x00000000001a2c8c : push rsp ; jno 0x1a2c96 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x000000000009f12b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000001962d8 : push rsp ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000196b98 : push rsp ; loope 0x196b87 ; call rsp
0x0000000000186e10 : push rsp ; loopne 0x186e03 ; jmp qword ptr [rcx]
0x0000000000135067 : push rsp ; mov eax, 1 ; ret
0x00000000001a758c : push rsp ; mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001886c3 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000149869 : push rsp ; or eax, 0x894d0000 ; retf
0x0000000000187819 : push rsp ; out dx, al ; ljmp [rax + 0x53] ; out dx, al ; jmp rax
0x00000000001b298c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001958f4 : push rsp ; pop rsi ; cld ; jmp rsp
0x0000000000198550 : push rsp ; pop rsp ; int1 ; call rsp
0x00000000001b0b8c : push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b8f ; jmp qword ptr [rcx]
0x00000000000fd8db : push rsp ; push rbx ; sub rsp, 0xa8 ; syscall
0x0000000000023ad1 : push rsp ; ret
0x0000000000034df8 : push rsp ; ret 0x2e0f
0x000000000010a434 : push rsp ; ret 0x8940
0x0000000000034aba : push rsp ; ret 0xf66
0x000000000019a10b : push rsp ; ret 1
0x0000000000101d7f : push rsp ; retf
0x0000000000048832 : push rsp ; retf 0x45f8
0x00000000000482b0 : push rsp ; retf 0x48f8
0x0000000000196b50 : push rsp ; retf 0xffe9
0x000000000019b980 : push rsp ; retf 0xfffc
0x000000000019a2a4 : push rsp ; retf 1
0x00000000000e7613 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x0000000000099c6d : push rsp ; syscall
0x0000000000195de0 : push rsp ; xchg ah, bh ; jmp rsp
0x000000000018874b : push rsp ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x00000000001acdd4 : pushfq ; adc al, byte ptr [rcx] ; add al, ch ; fpatan ; jmp qword ptr [rcx]
0x0000000000147000 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000019b2dc : pushfq ; add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x00000000001b3bd4 : pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000008638d : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000001af9d4 : pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001bc4a4 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000023ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000db23f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000019aea4 : pushfq ; and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x0000000000196551 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001b95d4 : pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x0000000000197669 : pushfq ; in eax, dx ; call rsp
0x000000000001fb06 : pushfq ; jmp 0x1face
0x0000000000197cec : pushfq ; loope 0x197cf6 ; add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x000000000007841c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000186b54 : pushfq ; mov ecx, 0x6e16ffed ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b40 : pushfq ; mov ecx, 0xb99cffed ; in eax, dx ; call qword ptr [rsi]
0x00000000001977ac : pushfq ; mov edi, 0xbb440000 ; in eax, dx ; call rsp
0x00000000001b5fd4 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x0000000000147d00 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145cb4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x0000000000195a0c : pushfq ; push rcx ; cld ; ljmp [rcx + rdx*2] ; cld ; call rdx
0x000000000019a144 : pushfq ; ret
0x00000000000bd78f : pushfq ; ret 0xb60f
0x000000000019a2bc : pushfq ; retf 1
0x00000000000ac17b : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000001974dc : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x19753a ; in eax, dx ; jmp rsp
0x0000000000092e9d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001bad90 : rcl byte ptr [rax + rdi*8], 0xff ; ret
0x0000000000181f64 : rcl byte ptr [rbx + rbp*8], 0xff ; retf
0x0000000000002cb3 : rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x00000000001b0330 : rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001891fc : rcl byte ptr [rcx - 0xc], 0xff ; retf 0xf451
0x00000000001855d1 : rcl byte ptr [rdi], cl ; retf
0x0000000000001ea3 : rcl byte ptr [rip + 0x42585c0c], 1 ; xchg eax, edi ; retf 0x20f4
0x00000000000f5b80 : rcl dword ptr [rax - 0x3f], 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001850fa : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x0000000000184cbf : rcl dword ptr [rsi + 0x5a], cl ; je 0x184c8d ; ret 0xacfc
0x00000000001850f9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000184cbb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x184c91 ; ret 0xacfc
0x00000000001048ec : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000034f9f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000002cb7 : rcr byte ptr [r10], 1 ; retf 0x2217
0x0000000000163d2d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003c1b0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fc4de : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000001fb76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c9be0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047a13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000048437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000019577c : rcr byte ptr [rbp - 4], 0xff ; push rax ; pop rbp ; cld ; jmp rax
0x0000000000194f14 : rcr byte ptr [rbp - 5], 1 ; jmp qword ptr [rax]
0x00000000000cd408 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000075051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb569 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c9c2c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054b8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000084ba8 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000045c48 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006fb6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010c9d8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000927ad : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001850dd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001afa50 : rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001956f0 : rcr byte ptr [rdx], 1 ; cld ; jmp qword ptr [rax]
0x0000000000002cb8 : rcr byte ptr [rdx], 1 ; retf 0x2217
0x00000000001956fc : rcr byte ptr [rsi], 0xfc ; call qword ptr [rax]
0x00000000001acdc0 : rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000000ea693 : rcr dword ptr [rax + 0xa89002d], 1 ; pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000048469 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000185431 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000014dc76 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000142fe4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000123e28 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9a : rep stosq qword ptr [rdi], rax ; ret
0x000000000015d3e2 : repne insd dword ptr [rdi], dx ; add byte ptr es:[rax + 0x39], cl ; retf 0x377
0x0000000000000937 : ret
0x00000000000202fc : ret 0
0x000000000000a641 : ret 0x10
0x00000000000007bf : ret 0x102
0x000000000006cddf : ret 0x107
0x00000000000842b2 : ret 0x10d6
0x000000000000bac9 : ret 0x11
0x00000000000821a2 : ret 0x110
0x00000000000e6f77 : ret 0x110f
0x000000000004840c : ret 0x114d
0x00000000000e0dfc : ret 0x1175
0x00000000000d8fe6 : ret 0x1176
0x00000000000242a8 : ret 0x1189
0x000000000006c932 : ret 0x11ad
0x0000000000107a19 : ret 0x11e8
0x00000000000b3cb4 : ret 0x11eb
0x0000000000006639 : ret 0x12
0x00000000000331b3 : ret 0x1274
0x000000000005c412 : ret 0x12a6
0x00000000000091b9 : ret 0x13
0x00000000000991ca : ret 0x1374
0x00000000001178ca : ret 0x1376
0x000000000004a6ba : ret 0x13b7
0x0000000000051f17 : ret 0x13e8
0x000000000005a6dc : ret 0x144
0x00000000001234c9 : ret 0x1472
0x000000000009f169 : ret 0x147c
0x00000000000493f2 : ret 0x148
0x0000000000044be7 : ret 0x1480
0x00000000000d6f5b : ret 0x148b
0x000000000007bfe2 : ret 0x149
0x000000000002b502 : ret 0x14a2
0x000000000003763d : ret 0x14c
0x00000000000a00dc : ret 0x14d
0x00000000000d311c : ret 0x14eb
0x0000000000031bdf : ret 0x15
0x0000000000040e3a : ret 0x1538
0x0000000000034c00 : ret 0x1575
0x00000000000ed5a1 : ret 0x1589
0x000000000000e460 : ret 0x16
0x0000000000108687 : ret 0x1674
0x0000000000117717 : ret 0x1676
0x00000000000244d2 : ret 0x1683
0x0000000000018809 : ret 0x17
0x0000000000021aba : ret 0x171a
0x00000000000fcd26 : ret 0x1777
0x00000000000cc313 : ret 0x17e8
0x00000000000a0019 : ret 0x180f
0x0000000000136085 : ret 0x1872
0x000000000002c4a6 : ret 0x1874
0x000000000008eb85 : ret 0x1876
0x000000000001c060 : ret 0x18c7
0x000000000001a080 : ret 0x18d0
0x000000000007d9c5 : ret 0x18eb
0x00000000001a3631 : ret 0x18f
0x000000000001b3b8 : ret 0x18f8
0x00000000000bd314 : ret 0x190
0x00000000000587ca : ret 0x197
0x000000000008e825 : ret 0x1974
0x000000000005ec5e : ret 0x1a
0x000000000009edca : ret 0x1a74
0x000000000003bf12 : ret 0x1a75
0x000000000018563a : ret 0x1ad4
0x00000000000d519a : ret 0x1aeb
0x0000000000183dcd : ret 0x1b49
0x0000000000108aa2 : ret 0x1b72
0x000000000009512a : ret 0x1b8
0x0000000000001bf5 : ret 0x1bb7
0x00000000000be4db : ret 0x1be
0x000000000008408f : ret 0x1bf
0x000000000000349f : ret 0x1bf9
0x00000000000fce21 : ret 0x1c77
0x000000000017f230 : ret 0x1d4
0x000000000017f9c8 : ret 0x1d5
0x000000000008e726 : ret 0x1d74
0x00000000000021d9 : ret 0x1dd4
0x00000000000c0604 : ret 0x1e74
0x0000000000024c2b : ret 0x1e76
0x00000000000268e2 : ret 0x1f0f
0x00000000000ac773 : ret 0x1f74
0x0000000000084d2e : ret 0x1f76
0x00000000000c23b4 : ret 0x1fbd
0x000000000002d952 : ret 0x200
0x00000000000b16b5 : ret 0x2041
0x00000000000899ad : ret 0x2074
0x00000000000d5d89 : ret 0x20be
0x000000000005cb3b : ret 0x21
0x0000000000034778 : ret 0x2148
0x000000000008993b : ret 0x2275
0x00000000000aa847 : ret 0x2276
0x0000000000089a68 : ret 0x2288
0x0000000000003ff0 : ret 0x23
0x000000000016f9f2 : ret 0x2373
0x00000000000368a2 : ret 0x237f
0x00000000000025e7 : ret 0x23cb
0x000000000017e238 : ret 0x24
0x00000000000027d8 : ret 0x244f
0x00000000000cfc9c : ret 0x2476
0x000000000007aa6e : ret 0x2501
0x000000000009ec48 : ret 0x2574
0x000000000008425d : ret 0x2575
0x0000000000023dc8 : ret 0x2576
0x0000000000005ec8 : ret 0x26
0x000000000015a912 : ret 0x2698
0x000000000008ba06 : ret 0x2774
0x00000000000fd003 : ret 0x27e8
0x000000000000054f : ret 0x2800
0x00000000000a17a5 : ret 0x280f
0x000000000014254a : ret 0x281d
0x0000000000127850 : ret 0x2875
0x0000000000024273 : ret 0x2876
0x00000000000c020a : ret 0x28f5
0x0000000000127bc4 : ret 0x29
0x00000000000b2fb1 : ret 0x2941
0x00000000000556a3 : ret 0x2944
0x0000000000047468 : ret 0x2948
0x00000000000b07ba : ret 0x2949
0x000000000009b2cf : ret 0x294c
0x0000000000078cdf : ret 0x294d
0x0000000000048b64 : ret 0x2973
0x00000000000aaf44 : ret 0x2975
0x00000000000779aa : ret 0x2976
0x00000000000ea964 : ret 0x2977
0x0000000000060591 : ret 0x29e9
0x000000000011c172 : ret 0x2a
0x00000000001288fa : ret 0x2a03
0x0000000000001b19 : ret 0x2a63
0x0000000000084c3b : ret 0x2a75
0x000000000011f6a2 : ret 0x2a8f
0x000000000011a172 : ret 0x2ae0
0x0000000000107ba7 : ret 0x2b
0x0000000000046198 : ret 0x2b48
0x000000000002322e : ret 0x2b49
0x0000000000121302 : ret 0x2b74
0x000000000006ad97 : ret 0x2b76
0x00000000000aaba2 : ret 0x2b77
0x000000000012f88b : ret 0x2b8
0x000000000010cfa6 : ret 0x2ba6
0x000000000010a13a : ret 0x2bd2
0x000000000010a002 : ret 0x2bd3
0x00000000000f7b9a : ret 0x2c
0x0000000000127849 : ret 0x2c3c
0x0000000000101179 : ret 0x2c85
0x00000000000f5ab2 : ret 0x2ce3
0x0000000000034df9 : ret 0x2e0f
0x000000000012f9c5 : ret 0x2e66
0x00000000000caaa9 : ret 0x2f
0x00000000000ff96c : ret 0x2f3c
0x00000000000886de : ret 0x2f74
0x00000000000cb781 : ret 0x2fb6
0x00000000000cb352 : ret 0x2fba
0x00000000000e2dca : ret 0x2fe9
0x0000000000010e90 : ret 0x30
0x000000000003aca8 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000ba33a : ret 0x307e
0x00000000000bde9a : ret 0x308b
0x00000000000e200b : ret 0x30f
0x000000000000d7b8 : ret 0x31
0x000000000002310d : ret 0x3101
0x0000000000126bd2 : ret 0x3108
0x0000000000047fd9 : ret 0x3145
0x000000000012f958 : ret 0x314c
0x00000000000f5af9 : ret 0x31e8
0x000000000017e728 : ret 0x33
0x00000000000f6d32 : ret 0x3375
0x00000000000f003d : ret 0x33eb
0x0000000000080412 : ret 0x3463
0x000000000009f149 : ret 0x347c
0x00000000000310a5 : ret 0x348
0x000000000002944d : ret 0x349
0x00000000000662ba : ret 0x34c
0x000000000006d48b : ret 0x35
0x000000000006d71a : ret 0x3559
0x00000000000886e8 : ret 0x3574
0x00000000000f6cd0 : ret 0x3575
0x000000000003bf68 : ret 0x357e
0x0000000000068db2 : ret 0x35b0
0x00000000000d9885 : ret 0x35e8
0x0000000000057c07 : ret 0x36
0x00000000000e7e81 : ret 0x3673
0x0000000000047bc4 : ret 0x37
0x0000000000054e2a : ret 0x3718
0x0000000000039979 : ret 0x38
0x0000000000184f1a : ret 0x3827
0x00000000000bbcfe : ret 0x3840
0x000000000007371f : ret 0x3841
0x0000000000102eaf : ret 0x3845
0x000000000013f415 : ret 0x3875
0x000000000008eb65 : ret 0x3876
0x000000000003a73a : ret 0x387a
0x000000000007b52b : ret 0x389
0x00000000001835a6 : ret 0x38ae
0x000000000006e516 : ret 0x38b
0x000000000005ed1d : ret 0x38e9
0x00000000000663be : ret 0x3901
0x00000000000d9b98 : ret 0x3902
0x000000000012264b : ret 0x3904
0x000000000009eb66 : ret 0x3941
0x00000000000e4787 : ret 0x3944
0x00000000000dddf7 : ret 0x3945
0x0000000000037381 : ret 0x3948
0x000000000002772a : ret 0x3949
0x000000000002a296 : ret 0x394c
0x000000000003413d : ret 0x394d
0x00000000000300fa : ret 0x3995
0x00000000000537c2 : ret 0x39e9
0x000000000013483a : ret 0x3a
0x00000000000aa152 : ret 0x3a01
0x0000000000023016 : ret 0x3a28
0x000000000016f9db : ret 0x3a73
0x00000000000e3fc0 : ret 0x3ae9
0x00000000000d3211 : ret 0x3b01
0x00000000000dbd67 : ret 0x3b42
0x00000000000dbdb7 : ret 0x3b43
0x000000000013d733 : ret 0x3b48
0x0000000000134d62 : ret 0x3b74
0x00000000000bf815 : ret 0x3b8
0x00000000000bc6aa : ret 0x3bba
0x0000000000110604 : ret 0x3bf
0x00000000000d028e : ret 0x3c01
0x0000000000089921 : ret 0x3c75
0x00000000000f149f : ret 0x3c76
0x000000000003953e : ret 0x3ce8
0x00000000000d8246 : ret 0x3d01
0x0000000000034840 : ret 0x3d75
0x0000000000042180 : ret 0x3d7e
0x000000000002293e : ret 0x3d83
0x0000000000046ef7 : ret 0x3dbe
0x00000000000bf2c2 : ret 0x3e9
0x0000000000070efb : ret 0x3f7
0x00000000000f5359 : ret 0x3f76
0x00000000000d927a : ret 0x4001
0x00000000000ec115 : ret 0x4002
0x000000000007f432 : ret 0x4007
0x00000000000009f5 : ret 0x4021
0x000000000005399b : ret 0x4050
0x00000000000acbb9 : ret 0x408d
0x0000000000022d30 : ret 0x4101
0x00000000000b8595 : ret 0x4102
0x00000000000de332 : ret 0x4104
0x000000000004d6a9 : ret 0x4108
0x000000000004f20c : ret 0x4110
0x0000000000082bdc : ret 0x4117
0x00000000000ee1d8 : ret 0x4118
0x000000000009ee13 : ret 0x4153
0x000000000012c7b3 : ret 0x415f
0x0000000000023b8e : ret 0x41c3
0x000000000009b317 : ret 0x4201
0x000000000012de95 : ret 0x4203
0x00000000000bc5f4 : ret 0x4240
0x000000000009f75a : ret 0x4266
0x00000000000dab96 : ret 0x428b
0x00000000000bd41c : ret 0x428d
0x00000000000d1faa : ret 0x42a
0x000000000009a97a : ret 0x4301
0x000000000002a853 : ret 0x4389
0x0000000000074d83 : ret 0x4401
0x00000000000e17f5 : ret 0x4404
0x00000000000c2854 : ret 0x4407
0x00000000000ccdf5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x000000000004dc71 : ret 0x440f
0x0000000000072857 : ret 0x4410
0x0000000000000456 : ret 0x4412
0x00000000000d8dd4 : ret 0x4422
0x000000000010f596 : ret 0x4428
0x00000000001133c8 : ret 0x4430
0x00000000000e1826 : ret 0x4489
0x0000000000034ea0 : ret 0x448b
0x000000000003ce72 : ret 0x44c6
0x00000000000e5da2 : ret 0x44c7
0x000000000005d3da : ret 0x45
0x00000000000e3cdb : ret 0x4501
0x000000000006c712 : ret 0x4502
0x00000000000662db : ret 0x4504
0x0000000000117b97 : ret 0x4510
0x00000000000b856e : ret 0x4574
0x0000000000036b2e : ret 0x4577
0x00000000000e032f : ret 0x45c6
0x000000000011fd1b : ret 0x45e9
0x000000000006e678 : ret 0x45f6
0x00000000000aaf27 : ret 0x4675
0x0000000000029d97 : ret 0x4676
0x0000000000113206 : ret 0x46e9
0x00000000000b8507 : ret 0x4703
0x000000000009ab5f : ret 0x470e
0x000000000009ebc4 : ret 0x474
0x00000000001840a4 : ret 0x474c
0x00000000000f72e3 : ret 0x47e8
0x0000000000021908 : ret 0x4801
0x0000000000094911 : ret 0x4802
0x000000000006e681 : ret 0x4803
0x000000000002656d : ret 0x4804
0x00000000000949bd : ret 0x4805
0x00000000000949a5 : ret 0x4806
0x0000000000108a8b : ret 0x4807
0x00000000000899f3 : ret 0x4808
0x000000000002c4b4 : ret 0x4809
0x000000000010b1d2 : ret 0x480a
0x000000000010add2 : ret 0x480b
0x00000000000bb6a2 : ret 0x480e
0x0000000000051184 : ret 0x480f
0x0000000000048d94 : ret 0x4810
0x000000000001f91e : ret 0x4811
0x0000000000137661 : ret 0x4812
0x0000000000108f7d : ret 0x4814
0x000000000004b632 : ret 0x481e
0x000000000004b652 : ret 0x4820
0x000000000005432c : ret 0x482d
0x0000000000125c3e : ret 0x482e
0x000000000002146f : ret 0x4830
0x0000000000066165 : ret 0x4840
0x00000000000cc46c : ret 0x4864
0x00000000001156cd : ret 0x4874
0x00000000001177c5 : ret 0x4875
0x0000000000110ef8 : ret 0x48b
0x0000000000133bd4 : ret 0x48bf
0x000000000008b758 : ret 0x48c3
0x000000000003aba0 : ret 0x48d
0x0000000000185866 : ret 0x48f
0x0000000000022cfa : ret 0x4901
0x000000000003437c : ret 0x4903
0x0000000000029019 : ret 0x4904
0x000000000002648c : ret 0x4906
0x000000000004f8a9 : ret 0x4908
0x00000000000bf359 : ret 0x4909
0x00000000000495ac : ret 0x4910
0x000000000008739e : ret 0x4920
0x00000000000862e8 : ret 0x4930
0x00000000000c7859 : ret 0x4948
0x00000000000038f3 : ret 0x49ec
0x00000000000eace0 : ret 0x4a08
0x00000000000d906c : ret 0x4a74
0x00000000000b8a30 : ret 0x4ae9
0x0000000000032d55 : ret 0x4c01
0x0000000000094b81 : ret 0x4c02
0x00000000000d7c42 : ret 0x4c04
0x00000000000539a6 : ret 0x4c05
0x0000000000061c84 : ret 0x4c08
0x00000000000d888b : ret 0x4c20
0x000000000004acf6 : ret 0x4c40
0x00000000000d9938 : ret 0x4c6
0x00000000000c07c5 : ret 0x4c80
0x0000000000053400 : ret 0x4c8b
0x00000000000415b5 : ret 0x4d01
0x0000000000023ca1 : ret 0x4d02
0x00000000000a6062 : ret 0x4d10
0x0000000000110132 : ret 0x4d30
0x0000000000022800 : ret 0x4d74
0x00000000001852c7 : ret 0x4e27
0x00000000000755d0 : ret 0x4e8b
0x00000000000beb69 : ret 0x4eb
0x000000000010e89c : ret 0x4ee8
0x0000000000021938 : ret 0x4ee9
0x000000000000b328 : ret 0x4f
0x0000000000029d8e : ret 0x4f72
0x00000000000369d4 : ret 0x4f77
0x00000000001bc4a9 : ret 0x503
0x00000000000d7a75 : ret 0x5089
0x000000000016f9c4 : ret 0x5173
0x00000000000fd5d9 : ret 0x51e8
0x000000000002c2b3 : ret 0x527e
0x000000000000318e : ret 0x52c0
0x0000000000008658 : ret 0x53
0x000000000006d008 : ret 0x5389
0x000000000012e8eb : ret 0x53ff
0x00000000000edc9c : ret 0x5408
0x00000000000bbdcb : ret 0x5438
0x000000000009f129 : ret 0x547c
0x000000000004a1f6 : ret 0x5488
0x000000000002a11a : ret 0x5489
0x000000000018352c : ret 0x5508
0x000000000003295f : ret 0x5525
0x000000000000245e : ret 0x5576
0x00000000000d6f2a : ret 0x5589
0x000000000000b538 : ret 0x56
0x0000000000089907 : ret 0x5675
0x000000000011d802 : ret 0x56e9
0x0000000000087802 : ret 0x575
0x00000000001175d2 : ret 0x577
0x0000000000134efa : ret 0x57c
0x00000000001017d3 : ret 0x57e8
0x00000000000cf893 : ret 0x57e9
0x00000000001857f8 : ret 0x5803
0x00000000000396fb : ret 0x589
0x0000000000183200 : ret 0x591c
0x00000000000d9071 : ret 0x5974
0x000000000011fc63 : ret 0x5978
0x0000000000003269 : ret 0x5a51
0x0000000000123f33 : ret 0x5a74
0x0000000000183f67 : ret 0x5ae4
0x00000000000e7ac9 : ret 0x5ba
0x0000000000002f9f : ret 0x5bdb
0x00000000001116a0 : ret 0x5bf
0x00000000000aeefa : ret 0x5c4
0x0000000000026d01 : ret 0x5c77
0x0000000000003055 : ret 0x5cbe
0x00000000000e9ced : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000002725 : ret 0x617e
0x0000000000185c92 : ret 0x62c1
0x0000000000054d53 : ret 0x6348
0x0000000000077662 : ret 0x6349
0x00000000000d8fa0 : ret 0x634d
0x00000000000aaf0a : ret 0x6375
0x000000000008d8df : ret 0x63be
0x00000000001268da : ret 0x646
0x000000000009f119 : ret 0x647c
0x0000000000069a45 : ret 0x65e8
0x0000000000130eb9 : ret 0x6600
0x00000000000e922a : ret 0x6601
0x000000000003d251 : ret 0x6610
0x000000000008eaf2 : ret 0x6620
0x0000000000002827 : ret 0x6642
0x00000000000230ea : ret 0x669
0x000000000008b7a5 : ret 0x66c3
0x00000000000f9616 : ret 0x674
0x000000000018321f : ret 0x67b2
0x00000000001080c3 : ret 0x67e8
0x00000000000bc5f1 : ret 0x6948
0x00000000000f4219 : ret 0x69e9
0x00000000001068da : ret 0x69f
0x0000000000118ced : ret 0x6ae9
0x00000000000c28af : ret 0x6b45
0x00000000000ce18f : ret 0x6b8
0x0000000000003ce2 : ret 0x6bba
0x000000000010fd92 : ret 0x6bf
0x00000000000ac6d1 : ret 0x6c74
0x0000000000194333 : ret 0x6e1f
0x0000000000185e21 : ret 0x6f9
0x000000000002face : ret 0x6fe9
0x00000000001195ce : ret 0x708d
0x00000000000f54f9 : ret 0x71e8
0x00000000001148c8 : ret 0x71e9
0x000000000014dd0e : ret 0x7280
0x000000000007ba51 : ret 0x7401
0x0000000000084e33 : ret 0x7402
0x0000000000081ef5 : ret 0x7404
0x0000000000072b69 : ret 0x7408
0x000000000006dba1 : ret 0x7420
0x0000000000051562 : ret 0x7450
0x00000000000c5fe5 : ret 0x748d
0x00000000000aa9ff : ret 0x74e9
0x00000000000a1297 : ret 0x7501
0x00000000000a129c : ret 0x7502
0x0000000000061ba6 : ret 0x7504
0x0000000000072b11 : ret 0x7508
0x000000000017094b : ret 0x7510
0x000000000008f2f4 : ret 0x7518
0x0000000000170958 : ret 0x7520
0x00000000000d8e68 : ret 0x7540
0x00000000000d6647 : ret 0x7580
0x00000000000e1ce5 : ret 0x75e8
0x000000000016e8b2 : ret 0x7677
0x0000000000023222 : ret 0x774
0x000000000004878a : ret 0x777
0x00000000000cc2b3 : ret 0x77e8
0x000000000011d7e1 : ret 0x77e9
0x0000000000002eec : ret 0x793b
0x00000000000cda89 : ret 0x7974
0x000000000011f70c : ret 0x7a8d
0x0000000000023dfa : ret 0x7b8
0x0000000000034d85 : ret 0x7c7
0x000000000008ea82 : ret 0x7e20
0x00000000000fd823 : ret 0x7e8
0x0000000000089eec : ret 0x7f10
0x0000000000059904 : ret 0x7f3c
0x000000000015903e : ret 0x80
0x000000000008b0c9 : ret 0x8000
0x00000000000343bc : ret 0x8001
0x00000000000bf552 : ret 0x8010
0x00000000000cfc49 : ret 0x8040
0x00000000000e0faf : ret 0x8041
0x00000000000a649d : ret 0x8072
0x000000000011e1b6 : ret 0x8080
0x00000000000038b0 : ret 0x80fc
0x00000000000d7edd : ret 0x8141
0x0000000000045d16 : ret 0x8148
0x000000000003508f : ret 0x8166
0x0000000000107da9 : ret 0x81e8
0x000000000008024c : ret 0x820f
0x000000000012bc06 : ret 0x828d
0x00000000000817df : ret 0x82e9
0x0000000000076cd1 : ret 0x82eb
0x0000000000031275 : ret 0x8301
0x0000000000130fee : ret 0x8302
0x0000000000121c09 : ret 0x8303
0x00000000000d8d4a : ret 0x8304
0x0000000000099ab5 : ret 0x8305
0x0000000000099aad : ret 0x8306
0x000000000005e0cb : ret 0x8308
0x0000000000055c34 : ret 0x830f
0x000000000012fd12 : ret 0x8320
0x00000000000df15f : ret 0x833b
0x0000000000046daa : ret 0x8341
0x0000000000021300 : ret 0x8348
0x000000000003d6e4 : ret 0x8349
0x000000000006f353 : ret 0x8389
0x0000000000074cf0 : ret 0x840
0x00000000000ceb8e : ret 0x8401
0x000000000010de68 : ret 0x8408
0x000000000002006c : ret 0x840f
0x00000000000e91bd : ret 0x844
0x00000000000977a8 : ret 0x8440
0x00000000000aa966 : ret 0x8444
0x00000000000973d7 : ret 0x8445
0x00000000000e0720 : ret 0x8488
0x0000000000054d45 : ret 0x8504
0x000000000006ce96 : ret 0x8508
0x000000000002191c : ret 0x850f
0x00000000000456b1 : ret 0x8539
0x00000000000f1b9d : ret 0x8545
0x0000000000020130 : ret 0x8548
0x000000000002c2c5 : ret 0x854d
0x00000000000eb308 : ret 0x8589
0x00000000000522bc : ret 0x858b
0x000000000004ea24 : ret 0x85c7
0x00000000000240f0 : ret 0x860f
0x00000000000355b6 : ret 0x870f
0x0000000000182b3e : ret 0x871e
0x000000000003d6d7 : ret 0x875
0x000000000008eb95 : ret 0x876
0x000000000003ce6d : ret 0x87e
0x00000000000fcfa3 : ret 0x87e8
0x000000000002bc4a : ret 0x87e9
0x0000000000106e4a : ret 0x880
0x000000000008938a : ret 0x8801
0x000000000009f9e2 : ret 0x8802
0x0000000000024e31 : ret 0x8804
0x0000000000057621 : ret 0x880f
0x0000000000025949 : ret 0x8840
0x00000000000025b4 : ret 0x88ad
0x0000000000024202 : ret 0x8901
0x000000000005c89b : ret 0x8908
0x000000000010a435 : ret 0x8940
0x000000000002a21f : ret 0x8941
0x00000000000b9785 : ret 0x8942
0x0000000000076b9c : ret 0x8944
0x0000000000050ebe : ret 0x8945
0x00000000000b9ba6 : ret 0x8946
0x0000000000021613 : ret 0x8948
0x0000000000024ffe : ret 0x8949
0x0000000000030cca : ret 0x894c
0x0000000000022d0f : ret 0x894d
0x00000000000490ab : ret 0x894e
0x000000000003b360 : ret 0x8966
0x000000000008e6fa : ret 0x8a04
0x0000000000002553 : ret 0x8a4c
0x000000000006562f : ret 0x8ae9
0x000000000006c962 : ret 0x8b04
0x000000000002da3e : ret 0x8b05
0x00000000000d88a0 : ret 0x8b10
0x000000000018536e : ret 0x8b36
0x000000000002c53a : ret 0x8b41
0x00000000000f0823 : ret 0x8b44
0x00000000000d70a0 : ret 0x8b47
0x0000000000035d75 : ret 0x8b48
0x00000000000744d6 : ret 0x8b49
0x000000000004902e : ret 0x8b4a
0x000000000002a27d : ret 0x8b4c
0x000000000006e418 : ret 0x8b64
0x00000000000adcdc : ret 0x8b8
0x00000000000c1a48 : ret 0x8c0f
0x00000000000037b6 : ret 0x8cba
0x000000000005bd95 : ret 0x8d01
0x000000000004ac1d : ret 0x8d04
0x0000000000051fef : ret 0x8d0f
0x00000000000c4201 : ret 0x8d41
0x00000000001194ef : ret 0x8d44
0x0000000000119540 : ret 0x8d45
0x0000000000020778 : ret 0x8d48
0x0000000000030319 : ret 0x8d49
0x0000000000048529 : ret 0x8d4a
0x00000000000483c5 : ret 0x8d4c
0x00000000000a32f2 : ret 0x8d4d
0x0000000000082c3c : ret 0x8d4e
0x000000000013ee9b : ret 0x8d8b
0x000000000002854c : ret 0x8e0f
0x00000000000fc601 : ret 0x8e75
0x000000000006afe2 : ret 0x8e8
0x00000000000b14fd : ret 0x8eb
0x00000000000e07c9 : ret 0x8f0f
0x0000000000105286 : ret 0x8f7
0x00000000000711f8 : ret 0x8feb
0x000000000019f948 : ret 0x900e
0x00000000000d7d0d : ret 0x9066
0x000000000002d90d : ret 0x90c3
0x00000000001402f5 : ret 0x90f3
0x00000000000f5a99 : ret 0x91e8
0x00000000000780ec : ret 0x91eb
0x0000000000052008 : ret 0x92e8
0x00000000001195f5 : ret 0x930f
0x0000000000087a3e : ret 0x93be
0x0000000000126d43 : ret 0x93c
0x0000000000061b92 : ret 0x940f
0x000000000003dad7 : ret 0x941
0x00000000000db0df : ret 0x947c
0x000000000012fb27 : ret 0x948
0x000000000008d5c8 : ret 0x94c
0x00000000000dcbfa : ret 0x94d
0x000000000004c391 : ret 0x9522
0x0000000000114659 : ret 0x952b
0x0000000000030b18 : ret 0x953d
0x0000000000184193 : ret 0x9576
0x0000000000071389 : ret 0x95eb
0x00000000000f878f : ret 0x95f
0x00000000000f8b2f : ret 0x970f
0x0000000000003798 : ret 0x975
0x00000000000817f9 : ret 0x976
0x00000000000fd793 : ret 0x97e8
0x00000000000e3f5c : ret 0x9848
0x0000000000089955 : ret 0x9874
0x0000000000075be4 : ret 0x98eb
0x000000000002a0da : ret 0x9a
0x0000000000042208 : ret 0x9a74
0x000000000013e067 : ret 0x9ae9
0x00000000000d0443 : ret 0x9aeb
0x00000000000b8b77 : ret 0x9be9
0x000000000006af23 : ret 0x9ce9
0x000000000006820a : ret 0x9d
0x00000000000a6480 : ret 0x9d72
0x00000000000ae5c8 : ret 0x9e74
0x0000000000022f83 : ret 0x9e9
0x00000000000aebdc : ret 0x9eb
0x0000000000044e11 : ret 0x9f74
0x0000000000005991 : ret 0xa
0x00000000001ab5ec : ret 0xa02
0x000000000006f64a : ret 0xa1
0x00000000000e8449 : ret 0xa1e8
0x000000000003bfe8 : ret 0xa274
0x00000000000e99e9 : ret 0xa4b
0x0000000000183e83 : ret 0xa514
0x00000000000eaf3d : ret 0xa6e9
0x000000000012ac0f : ret 0xa74
0x000000000006d3ba : ret 0xa7c
0x00000000000f7283 : ret 0xa7e8
0x00000000000ba732 : ret 0xa8e9
0x0000000000184307 : ret 0xac65
0x00000000000b617e : ret 0xace8
0x0000000000184cc4 : ret 0xacfc
0x00000000000f63cd : ret 0xade9
0x00000000000d980d : ret 0xaeb
0x000000000012dcbc : ret 0xaee8
0x00000000000aa9ea : ret 0xaf0f
0x0000000000020cce : ret 0xaf72
0x0000000000086d61 : ret 0xafe9
0x00000000001bc6c2 : ret 0xb
0x00000000000821df : ret 0xb48b
0x000000000004b1ad : ret 0xb589
0x000000000002f459 : ret 0xb60f
0x00000000000fe058 : ret 0xb6e9
0x00000000000bd435 : ret 0xb70f
0x00000000000f90cd : ret 0xb74
0x0000000000077d0c : ret 0xb76
0x00000000000c06ee : ret 0xb77d
0x0000000000034b83 : ret 0xb8
0x00000000000347b1 : ret 0xb848
0x000000000002c305 : ret 0xb87f
0x00000000000607c8 : ret 0xb908
0x00000000001841ce : ret 0xb9b9
0x0000000000003189 : ret 0xba88
0x00000000000d3a5b : ret 0xba9
0x00000000000c98d3 : ret 0xbb
0x000000000006c81d : ret 0xbb41
0x000000000005dfff : ret 0xbbe9
0x00000000000488b2 : ret 0xbc41
0x0000000000002480 : ret 0xbd07
0x000000000012959f : ret 0xbd74
0x000000000004b19a : ret 0xbd89
0x00000000000824fd : ret 0xbde8
0x0000000000061808 : ret 0xbe08
0x00000000000c2836 : ret 0xbe0f
0x0000000000183f24 : ret 0xbe57
0x000000000012dcac : ret 0xbee8
0x0000000000053498 : ret 0xbf07
0x0000000000060051 : ret 0xbf08
0x000000000007db9e : ret 0xbfe9
0x0000000000134dc8 : ret 0xbfeb
0x0000000000005fd9 : ret 0xc
0x000000000008af89 : ret 0xc000
0x000000000004242e : ret 0xc001
0x00000000000423e2 : ret 0xc002
0x00000000001234d7 : ret 0xc019
0x000000000006c072 : ret 0xc031
0x00000000000ddb6a : ret 0xc041
0x000000000012bbea : ret 0xc069
0x0000000000047d6c : ret 0xc083
0x00000000000ff9c5 : ret 0xc084
0x000000000008d595 : ret 0xc085
0x00000000000dddac : ret 0xc141
0x0000000000034a17 : ret 0xc148
0x000000000004a538 : ret 0xc149
0x0000000000136098 : ret 0xc173
0x00000000000358bd : ret 0xc189
0x0000000000107e69 : ret 0xc1e8
0x0000000000047542 : ret 0xc221
0x000000000003aba6 : ret 0xc229
0x000000000003ad40 : ret 0xc269
0x00000000000c3fe1 : ret 0xc26b
0x0000000000083f8b : ret 0xc275
0x00000000000f5c3a : ret 0xc283
0x0000000000035d67 : ret 0xc289
0x000000000016f894 : ret 0xc2b2
0x000000000011d7b0 : ret 0xc2e9
0x000000000003a6f8 : ret 0xc35b
0x0000000000083f8d : ret 0xc3f3
0x00000000000f9680 : ret 0xc3f6
0x0000000000181d42 : ret 0xc4c3
0x0000000000183ad8 : ret 0xc4ff
0x000000000004f5aa : ret 0xc54
0x000000000014dda8 : ret 0xc580
0x00000000000e5995 : ret 0xc5e8
0x000000000010e65a : ret 0xc601
0x0000000000122994 : ret 0xc602
0x00000000000e4efe : ret 0xc683
0x0000000000056263 : ret 0xc689
0x000000000009f4a4 : ret 0xc6e8
0x0000000000087841 : ret 0xc6eb
0x000000000012f806 : ret 0xc707
0x00000000000f960a : ret 0xc72
0x0000000000037291 : ret 0xc748
0x00000000000442b6 : ret 0xc749
0x00000000000aaf61 : ret 0xc75
0x000000000009d24f : ret 0xc76
0x00000000000c0ee6 : ret 0xc78
0x0000000000082490 : ret 0xc789
0x00000000000f7063 : ret 0xc7e8
0x00000000000f349d : ret 0xc7e9
0x00000000000334a8 : ret 0xc801
0x0000000000098791 : ret 0xc829
0x0000000000071cb4 : ret 0xc883
0x0000000000025b9c : ret 0xc985
0x00000000000899c6 : ret 0xc9ff
0x00000000000debc2 : ret 0xca39
0x00000000000eaf07 : ret 0xca83
0x00000000000b3160 : ret 0xcae8
0x000000000005cb8d : ret 0xcb73
0x00000000000d321d : ret 0xcb75
0x00000000000f5c69 : ret 0xcb8
0x000000000018356a : ret 0xcca7
0x000000000012c04a : ret 0xcd
0x000000000018564d : ret 0xcd11
0x00000000000a6450 : ret 0xcd72
0x0000000000101dbc : ret 0xcdbb
0x000000000002c79d : ret 0xcde8
0x0000000000083931 : ret 0xce31
0x0000000000031ff8 : ret 0xce80
0x000000000005c46d : ret 0xce83
0x000000000007ef9b : ret 0xcf31
0x00000000000b0a86 : ret 0xd
0x00000000000d2b0e : ret 0xd008
0x00000000000d9c60 : ret 0xd009
0x00000000000bbf63 : ret 0xd021
0x00000000000cd8a2 : ret 0xd029
0x000000000014dc1c : ret 0xd073
0x0000000000046dbf : ret 0xd084
0x000000000003296e : ret 0xd089
0x00000000000b58ed : ret 0xd0f7
0x00000000000ee7d1 : ret 0xd101
0x0000000000072495 : ret 0xd108
0x000000000005fc5d : ret 0xd129
0x00000000000d85fa : ret 0xd138
0x00000000000dbe62 : ret 0xd139
0x00000000000dddb3 : ret 0xd141
0x000000000012f929 : ret 0xd148
0x0000000000108b59 : ret 0xd1e8
0x0000000000033e55 : ret 0xd231
0x000000000002086d : ret 0xd284
0x000000000009ee20 : ret 0xd308
0x0000000000061a97 : ret 0xd309
0x0000000000061f73 : ret 0xd329
0x0000000000086216 : ret 0xd341
0x000000000003c3db : ret 0xd348
0x00000000000b0b57 : ret 0xd3e8
0x0000000000036942 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x00000000000528e2 : ret 0xd5e9
0x00000000000e0bb3 : ret 0xd609
0x000000000005febd : ret 0xd629
0x00000000000dbaba : ret 0xd639
0x00000000001087ae : ret 0xd6e9
0x00000000000ba5dd : ret 0xd721
0x00000000000ddf61 : ret 0xd739
0x0000000000105e06 : ret 0xd74
0x00000000000b9529 : ret 0xd76
0x00000000000fb753 : ret 0xd7e8
0x00000000000c3554 : ret 0xd801
0x00000000000aa9ef : ret 0xd889
0x00000000001850e5 : ret 0xd8f
0x00000000000204df : ret 0xd975
0x00000000000d767d : ret 0xd9eb
0x00000000001230c0 : ret 0xda21
0x00000000000de8f0 : ret 0xda39
0x00000000001153a3 : ret 0xda75
0x0000000000034eb1 : ret 0xdaf7
0x00000000000f0cb2 : ret 0xdb31
0x000000000002539b : ret 0xdb85
0x00000000000bb0f1 : ret 0xdc00
0x00000000000e26b1 : ret 0xdc74
0x00000000001851c6 : ret 0xdcd9
0x00000000000887ce : ret 0xdce8
0x00000000000c84a0 : ret 0xdd72
0x00000000000e0d13 : ret 0xddeb
0x0000000000184142 : ret 0xde5d
0x0000000000074615 : ret 0xde74
0x000000000013a797 : ret 0xde77
0x0000000000045ced : ret 0xde8
0x0000000000182ed1 : ret 0xde9e
0x000000000010f475 : ret 0xdeb
0x000000000008ae49 : ret 0xe000
0x000000000019c915 : ret 0xe01
0x00000000000b340a : ret 0xe05
0x0000000000170909 : ret 0xe074
0x0000000000023ded : ret 0xe077
0x00000000001247e6 : ret 0xe083
0x00000000001a9cf9 : ret 0xe0a
0x0000000000061cda : ret 0xe0e8
0x000000000012ddba : ret 0xe0ff
0x00000000000e287c : ret 0xe174
0x0000000000028555 : ret 0xe183
0x0000000000030389 : ret 0xe1e8
0x000000000002429b : ret 0xe277
0x0000000000020628 : ret 0xe281
0x0000000000027352 : ret 0xe283
0x00000000000210b9 : ret 0xe2ff
0x000000000004b173 : ret 0xe383
0x0000000000095d26 : ret 0xe3e9
0x00000000000e2469 : ret 0xe474
0x000000000011ead6 : ret 0xe4e8
0x0000000000096b70 : ret 0xe575
0x000000000007d9b7 : ret 0xe675
0x0000000000050583 : ret 0xe680
0x00000000001852e6 : ret 0xe71f
0x00000000000d90b6 : ret 0xe775
0x00000000000d3678 : ret 0xe777
0x000000000006f1c2 : ret 0xe8
0x00000000000fb174 : ret 0xe801
0x00000000000d959b : ret 0xe875
0x0000000000051e85 : ret 0xe87f
0x000000000006c20b : ret 0xe883
0x00000000000cd78f : ret 0xe8b8
0x0000000000020497 : ret 0xe8c1
0x000000000002ba92 : ret 0xe901
0x000000000002fb2e : ret 0xe902
0x0000000000026ec9 : ret 0xe904
0x00000000000bb651 : ret 0xe907
0x0000000000089a56 : ret 0xe908
0x0000000000146e66 : ret 0xe910
0x000000000004b70d : ret 0xe920
0x0000000000086393 : ret 0xe96e
0x0000000000183647 : ret 0xe970
0x000000000003bf2c : ret 0xe974
0x0000000000110c84 : ret 0xe975
0x000000000008653c : ret 0xe977
0x000000000002acaa : ret 0xea
0x000000000004607b : ret 0xea75
0x00000000000aab9a : ret 0xea81
0x000000000004b18a : ret 0xeac0
0x00000000000d6e92 : ret 0xeac1
0x000000000009d4d4 : ret 0xeb01
0x00000000000d778a : ret 0xeb04
0x0000000000144ea6 : ret 0xeb10
0x00000000000ca1f2 : ret 0xeb11
0x000000000008635f : ret 0xeb5b
0x00000000000394fa : ret 0xeb72
0x0000000000185df8 : ret 0xec2
0x00000000000b8dd5 : ret 0xec77
0x00000000000d79d1 : ret 0xec7f
0x0000000000119648 : ret 0xed75
0x0000000000028098 : ret 0xed85
0x00000000000e0df7 : ret 0xee72
0x0000000000022c8f : ret 0xee75
0x0000000000185a9a : ret 0xef32
0x0000000000072a2e : ret 0xef75
0x00000000000d3219 : ret 0xef7c
0x0000000000005919 : ret 0xf
0x000000000008ad09 : ret 0xf000
0x0000000000025941 : ret 0xf01
0x0000000000061bc1 : ret 0xf02
0x00000000000dc102 : ret 0xf039
0x000000000006ce2d : ret 0xf04
0x000000000009f9c3 : ret 0xf077
0x000000000001fe5a : ret 0xf08
0x000000000011956f : ret 0xf089
0x000000000012067a : ret 0xf0d5
0x000000000009a02b : ret 0xf0e
0x000000000002fb37 : ret 0xf0e9
0x0000000000081570 : ret 0xf0f
0x00000000000582ea : ret 0xf10
0x000000000009f22c : ret 0xf188
0x0000000000020341 : ret 0xf189
0x00000000000fc239 : ret 0xf1e8
0x000000000006ee5c : ret 0xf20
0x000000000008b3f9 : ret 0xf201
0x000000000006c375 : ret 0xf229
0x000000000002c1b8 : ret 0xf2e8
0x0000000000037614 : ret 0xf301
0x00000000001393ca : ret 0xf315
0x000000000012390e : ret 0xf3c3
0x00000000000e14e2 : ret 0xf3e3
0x00000000000567ca : ret 0xf40
0x000000000009a6fe : ret 0xf41
0x00000000000deafb : ret 0xf44
0x00000000000dc585 : ret 0xf45
0x000000000003cbc6 : ret 0xf48
0x00000000000f113a : ret 0xf48b
0x00000000000e337a : ret 0xf4a8
0x0000000000052ef7 : ret 0xf4c
0x0000000000100aaa : ret 0xf4c6
0x00000000000ccfe2 : ret 0xf528
0x00000000000d7256 : ret 0xf53
0x0000000000097275 : ret 0xf5e8
0x00000000000c15c8 : ret 0xf601
0x000000000010ba1a : ret 0xf61e
0x0000000000049aa2 : ret 0xf631
0x000000000011962b : ret 0xf641
0x000000000011959b : ret 0xf643
0x0000000000034abb : ret 0xf66
0x000000000018a988 : ret 0xf678
0x00000000000ff2b4 : ret 0xf683
0x00000000000aa7bc : ret 0xf685
0x000000000010536a : ret 0xf6b7
0x0000000000035d5d : ret 0xf701
0x00000000000821c3 : ret 0xf710
0x0000000000049b15 : ret 0xf74
0x0000000000047645 : ret 0xf741
0x000000000008f6ec : ret 0xf748
0x0000000000048774 : ret 0xf749
0x0000000000100cea : ret 0xf775
0x00000000000ff94a : ret 0xf788
0x00000000000bd0aa : ret 0xf7c6
0x0000000000113d38 : ret 0xf7e
0x0000000000052bd3 : ret 0xf7e9
0x00000000000dff5c : ret 0xf80
0x000000000008abc9 : ret 0xf800
0x0000000000182db0 : ret 0xf869
0x00000000000aed85 : ret 0xf883
0x00000000000c5f55 : ret 0xf889
0x00000000000c2229 : ret 0xf8c1
0x000000000002100d : ret 0xf8e9
0x0000000000127870 : ret 0xf980
0x0000000000063814 : ret 0xf983
0x00000000000c416f : ret 0xfa29
0x000000000007b9e2 : ret 0xfa3e
0x00000000000523c0 : ret 0xfa80
0x000000000003dee2 : ret 0xfa81
0x0000000000029a79 : ret 0xfa83
0x0000000000073ce2 : ret 0xfabb
0x0000000000032982 : ret 0xfac1
0x00000000000dba7d : ret 0xfad1
0x00000000000733b0 : ret 0xfae8
0x0000000000141d4a : ret 0xfb58
0x0000000000127c21 : ret 0xfb80
0x00000000000d9bee : ret 0xfb83
0x000000000008aa89 : ret 0xfc00
0x000000000003f4d6 : ret 0xfc01
0x000000000003f48a : ret 0xfc02
0x00000000000ffe21 : ret 0xfc07
0x000000000005c8da : ret 0xfc2f
0x000000000008b419 : ret 0xfc3
0x0000000000195a3c : ret 0xfc53
0x0000000000195a34 : ret 0xfc54
0x0000000000195a2c : ret 0xfc55
0x0000000000195a24 : ret 0xfc56
0x0000000000195a1c : ret 0xfc57
0x0000000000195828 : ret 0xfc5f
0x0000000000057fda : ret 0xfc78
0x0000000000195d14 : ret 0xfc87
0x0000000000196414 : ret 0xfca4
0x000000000019624c : ret 0xfca7
0x000000000004b3e2 : ret 0xfd44
0x00000000000aa8c8 : ret 0xfd83
0x000000000002f3e0 : ret 0xfdf
0x000000000008a949 : ret 0xfe00
0x00000000000aa8e9 : ret 0xfe83
0x0000000000121328 : ret 0xfe9
0x0000000000044b7a : ret 0xfe90
0x0000000000033ee2 : ret 0xfeb9
0x000000000014dbee : ret 0xfec5
0x000000000008a809 : ret 0xff00
0x00000000001242ea : ret 0xff0d
0x0000000000044d4f : ret 0xff2
0x00000000000b7450 : ret 0xff25
0x000000000009f68a : ret 0xff3
0x0000000000089165 : ret 0xff31
0x000000000009e8cd : ret 0xff41
0x000000000002b3e2 : ret 0xff44
0x0000000000089904 : ret 0xff48
0x000000000007fc4a : ret 0xff78
0x000000000008a6c9 : ret 0xff80
0x000000000003c216 : ret 0xff81
0x000000000003c1ca : ret 0xff82
0x0000000000063832 : ret 0xff83
0x000000000008288a : ret 0xffae
0x0000000000069de9 : ret 0xffaf
0x000000000001f96b : ret 0xffb8
0x0000000000042317 : ret 0xffbf
0x000000000008a589 : ret 0xffc0
0x000000000009c00c : ret 0xffd0
0x000000000009e7e9 : ret 0xffd3
0x000000000009c2fc : ret 0xffd7
0x0000000000087681 : ret 0xffdf
0x000000000008a449 : ret 0xffe0
0x0000000000057afa : ret 0xffe1
0x0000000000066b2d : ret 0xffe5
0x0000000000020fda : ret 0xffe8
0x0000000000021005 : ret 0xffe9
0x00000000001735f6 : ret 0xffea
0x0000000000040f87 : ret 0xffec
0x000000000014369f : ret 0xffed
0x00000000001335b8 : ret 0xffee
0x000000000003b58c : ret 0xffef
0x000000000008a309 : ret 0xfff0
0x0000000000031d08 : ret 0xfff1
0x00000000000f35c5 : ret 0xfff2
0x00000000000c47d7 : ret 0xfff3
0x00000000000b071e : ret 0xfff4
0x000000000009e6b5 : ret 0xfff5
0x00000000000ef64e : ret 0xfff6
0x00000000000b194c : ret 0xfff7
0x000000000004ec76 : ret 0xfff8
0x00000000000346c6 : ret 0xfff9
0x000000000005115a : ret 0xfffa
0x000000000002b0b3 : ret 0xfffb
0x00000000000343c6 : ret 0xfffc
0x000000000005fac0 : ret 0xfffd
0x00000000000325e8 : ret 0xfffe
0x000000000002365b : ret 0xffff
0x000000000001f6bc : ret 1
0x000000000004b519 : ret 2
0x00000000000011c8 : ret 3
0x0000000000007608 : ret 4
0x0000000000001570 : ret 5
0x000000000000dda0 : ret 6
0x00000000000ab4aa : ret 7
0x0000000000001a8c : ret 8
0x00000000001713ba : ret 9
0x0000000000000766 : retf
0x00000000000207da : retf 0
0x0000000000007fe0 : retf 0x10
0x000000000014dc6d : retf 0x1073
0x0000000000085df5 : retf 0x107f
0x0000000000023f40 : retf 0x1089
0x0000000000085c22 : retf 0x10b8
0x0000000000003a7a : retf 0x10bf
0x000000000010e90a : retf 0x10e8
0x000000000000c030 : retf 0x11
0x000000000008140a : retf 0x1105
0x000000000004833d : retf 0x114d
0x00000000000777fb : retf 0x117a
0x000000000012e8e7 : retf 0x1189
0x00000000000f5a6b : retf 0x11b8
0x000000000000b181 : retf 0x12
0x00000000000daca5 : retf 0x1274
0x000000000005bf4e : retf 0x12a8
0x00000000000f5acb : retf 0x12b8
0x000000000000289c : retf 0x12c5
0x000000000005ebe1 : retf 0x13
0x0000000000025deb : retf 0x1308
0x00000000000839f0 : retf 0x1373
0x000000000009eb70 : retf 0x1374
0x000000000005888a : retf 0x137e
0x0000000000107ceb : retf 0x13b8
0x00000000000f2651 : retf 0x14
0x00000000000d700e : retf 0x144
0x00000000000b871c : retf 0x145
0x000000000002603c : retf 0x148
0x0000000000023d3c : retf 0x1489
0x000000000002590c : retf 0x149
0x0000000000107d7b : retf 0x14b8
0x00000000000386e3 : retf 0x14c
0x0000000000031f45 : retf 0x15
0x00000000000423c2 : retf 0x151f
0x000000000003ff02 : retf 0x1547
0x000000000009edcf : retf 0x1574
0x00000000000fc20b : retf 0x15b8
0x0000000000031686 : retf 0x15da
0x000000000008bca2 : retf 0x16
0x00000000000260a6 : retf 0x1608
0x000000000002a9f7 : retf 0x1621
0x000000000012eb6c : retf 0x1689
0x0000000000028d92 : retf 0x16b2
0x0000000000107e3b : retf 0x16b8
0x0000000000002d4a : retf 0x172
0x00000000000fd5ab : retf 0x17b8
0x0000000000005ef8 : retf 0x18
0x0000000000002892 : retf 0x182c
0x0000000000065792 : retf 0x18e8
0x0000000000049f1d : retf 0x194d
0x0000000000107bc2 : retf 0x19b8
0x00000000000c07e3 : retf 0x1a74
0x00000000000c9ebc : retf 0x1be
0x000000000010e9ff : retf 0x1be8
0x00000000000cee82 : retf 0x1bf
0x000000000005686d : retf 0x1c
0x000000000017f268 : retf 0x1d4
0x000000000017fa08 : retf 0x1d5
0x0000000000107ec2 : retf 0x1eb8
0x000000000004acca : retf 0x1f0f
0x00000000000cda79 : retf 0x1f74
0x0000000000115b61 : retf 0x1f8
0x000000000004f34a : retf 0x20be
0x0000000000001eaa : retf 0x20f4
0x000000000005cb33 : retf 0x21
0x000000000007f45a : retf 0x2173
0x0000000000002cba : retf 0x2217
0x0000000000083ca9 : retf 0x2273
0x000000000000226c : retf 0x2281
0x000000000007f060 : retf 0x2373
0x000000000012bd81 : retf 0x2374
0x0000000000002345 : retf 0x23c4
0x000000000017e278 : retf 0x24
0x00000000000cda98 : retf 0x2475
0x00000000000fe93f : retf 0x2674
0x00000000000d7c86 : retf 0x2774
0x0000000000068783 : retf 0x27e8
0x00000000001514d9 : retf 0x280f
0x00000000001427e2 : retf 0x286a
0x00000000000fba92 : retf 0x28b8
0x000000000003dd28 : retf 0x2948
0x000000000003eeb8 : retf 0x294c
0x0000000000128f02 : retf 0x29fd
0x0000000000117419 : retf 0x2a
0x0000000000120dea : retf 0x2a79
0x000000000011b0aa : retf 0x2a8d
0x000000000011afaa : retf 0x2a8e
0x0000000000183fbc : retf 0x2a91
0x0000000000107394 : retf 0x2b
0x0000000000117e71 : retf 0x2b18
0x0000000000116971 : retf 0x2b2d
0x0000000000114f62 : retf 0x2b47
0x0000000000114c62 : retf 0x2b4a
0x00000000001095c2 : retf 0x2bac
0x000000000010b902 : retf 0x2bbc
0x00000000001096da : retf 0x2bdc
0x00000000000091c8 : retf 0x2c
0x00000000001007e2 : retf 0x2c69
0x00000000000bd70d : retf 0x2c7e
0x000000000018343a : retf 0x2c90
0x00000000001084eb : retf 0x2cb8
0x0000000000089930 : retf 0x2d73
0x0000000000107802 : retf 0x2db8
0x00000000000349c0 : retf 0x2de9
0x000000000003a165 : retf 0x2e66
0x0000000000107732 : retf 0x2eb8
0x00000000000c737c : retf 0x2f
0x00000000000bee2b : retf 0x2f74
0x0000000000117592 : retf 0x2f77
0x0000000000107f52 : retf 0x2fb8
0x00000000000c7652 : retf 0x2fe2
0x0000000000131476 : retf 0x3074
0x00000000000bdb82 : retf 0x308e
0x000000000004dd5b : retf 0x30be
0x00000000001016f6 : retf 0x3140
0x00000000001153e9 : retf 0x3145
0x000000000015a7a6 : retf 0x3148
0x000000000013016c : retf 0x3149
0x000000000012fbc1 : retf 0x314d
0x00000000000acd32 : retf 0x3154
0x0000000000185225 : retf 0x3159
0x000000000018528d : retf 0x32dd
0x000000000017e768 : retf 0x33
0x00000000000d5ed9 : retf 0x337e
0x000000000008e73a : retf 0x3381
0x0000000000088b52 : retf 0x33b2
0x0000000000183b43 : retf 0x33e6
0x00000000000861ae : retf 0x33f1
0x0000000000076838 : retf 0x34
0x0000000000083f12 : retf 0x3428
0x0000000000080482 : retf 0x343c
0x000000000005c7ea : retf 0x348
0x0000000000052014 : retf 0x349
0x0000000000108fdd : retf 0x34c
0x00000000000748aa : retf 0x34f5
0x0000000000066b68 : retf 0x35
0x000000000006b1aa : retf 0x358c
0x000000000006e971 : retf 0x35ad
0x00000000001085d2 : retf 0x35b8
0x0000000000058cef : retf 0x36
0x0000000000184071 : retf 0x3617
0x0000000000108012 : retf 0x36b8
0x000000000015a782 : retf 0x377
0x0000000000115443 : retf 0x3774
0x0000000000108042 : retf 0x37b8
0x0000000000047382 : retf 0x37d2
0x00000000000021c7 : retf 0x3844
0x0000000000002d6e : retf 0x385b
0x0000000000109e6f : retf 0x3941
0x000000000004d880 : retf 0x3944
0x000000000002662d : retf 0x3948
0x0000000000076c70 : retf 0x3949
0x00000000000a647d : retf 0x394c
0x00000000000a6044 : retf 0x394d
0x0000000000048494 : retf 0x3973
0x000000000002f2fa : retf 0x39a3
0x00000000000b8b67 : retf 0x39e9
0x00000000001234a3 : retf 0x3a72
0x00000000000b7cf6 : retf 0x3ae9
0x000000000004e068 : retf 0x3b44
0x0000000000029da2 : retf 0x3b72
0x00000000001826a9 : retf 0x3b9a
0x0000000000126bf5 : retf 0x3c6
0x0000000000083fdd : retf 0x3d83
0x0000000000185686 : retf 0x3d8a
0x00000000000cc122 : retf 0x3db8
0x0000000000182f1b : retf 0x3ec
0x0000000000009a68 : retf 0x3f
0x00000000000b82c0 : retf 0x41e9
0x00000000001313ed : retf 0x420f
0x0000000000000321 : retf 0x4244
0x000000000009f73c : retf 0x4266
0x000000000009bad7 : retf 0x4280
0x0000000000108ca2 : retf 0x42b8
0x0000000000095918 : retf 0x42e8
0x00000000000d14a2 : retf 0x435
0x000000000000b100 : retf 0x44
0x00000000000aa287 : retf 0x4466
0x0000000000143d30 : retf 0x4489
0x0000000000133841 : retf 0x448b
0x000000000003205d : retf 0x44f6
0x0000000000122803 : retf 0x4566
0x0000000000108b2b : retf 0x45b8
0x0000000000118f25 : retf 0x45e9
0x0000000000048833 : retf 0x45f8
0x0000000000108b8b : retf 0x46b8
0x0000000000073164 : retf 0x46e8
0x000000000007c7c5 : retf 0x476
0x0000000000089916 : retf 0x4773
0x00000000000826c9 : retf 0x4801
0x0000000000127a7f : retf 0x4806
0x0000000000072ace : retf 0x4808
0x00000000000fb785 : retf 0x4853
0x00000000000476e7 : retf 0x4857
0x00000000000ed50b : retf 0x4864
0x00000000000349f7 : retf 0x4866
0x00000000000de173 : retf 0x488d
0x000000000008e9ee : retf 0x4890
0x00000000000482b1 : retf 0x48f8
0x0000000000082d9d : retf 0x4901
0x00000000000e1479 : retf 0x4974
0x00000000000b7552 : retf 0x49e9
0x0000000000001c27 : retf 0x49f2
0x0000000000002dea : retf 0x4a9a
0x00000000000f8392 : retf 0x4b8
0x0000000000082816 : retf 0x4b83
0x00000000000bc0cf : retf 0x4c01
0x00000000000819c7 : retf 0x4c04
0x000000000011e85e : retf 0x4c08
0x0000000000086fd2 : retf 0x4c89
0x0000000000062110 : retf 0x4c8b
0x000000000007e432 : retf 0x4d01
0x000000000007a14d : retf 0x4d80
0x0000000000048308 : retf 0x4de8
0x000000000004831a : retf 0x4df0
0x000000000004832c : retf 0x4df8
0x00000000001bc70b : retf 0x503
0x000000000000369c : retf 0x5038
0x0000000000071a1d : retf 0x5077
0x00000000000d5b2b : retf 0x5088
0x00000000000e115a : retf 0x5089
0x000000000013ddf9 : retf 0x518
0x000000000002499e : retf 0x5355
0x00000000000fccce : retf 0x5389
0x00000000000fd606 : retf 0x5441
0x0000000000044e0b : retf 0x5489
0x00000000000026a4 : retf 0x54da
0x0000000000002fa4 : retf 0x54f7
0x0000000000009c90 : retf 0x55
0x00000000000fcc16 : retf 0x5589
0x0000000000001e70 : retf 0x559a
0x0000000000139ec3 : retf 0x55e
0x0000000000076ced : retf 0x55e9
0x0000000000118712 : retf 0x577
0x00000000000e524c : retf 0x57e9
0x0000000000136660 : retf 0x595
0x000000000002fe52 : retf 0x5b8
0x0000000000096de6 : retf 0x5d5b
0x00000000000898fc : retf 0x6173
0x0000000000029d7c : retf 0x6176
0x0000000000001f20 : retf 0x6321
0x000000000003ddf1 : retf 0x6348
0x00000000000afe37 : retf 0x6349
0x0000000000097cf0 : retf 0x634d
0x0000000000130f82 : retf 0x636
0x00000000000352c8 : retf 0x6411
0x0000000000126912 : retf 0x646
0x00000000001515c3 : retf 0x6601
0x0000000000151713 : retf 0x6602
0x0000000000151863 : retf 0x6603
0x00000000001519b3 : retf 0x6604
0x0000000000151b03 : retf 0x6605
0x0000000000151c53 : retf 0x6606
0x0000000000151da3 : retf 0x6607
0x0000000000151ef3 : retf 0x6608
0x0000000000152043 : retf 0x6609
0x0000000000152193 : retf 0x660a
0x00000000001522e3 : retf 0x660b
0x0000000000152433 : retf 0x660c
0x0000000000152583 : retf 0x660d
0x00000000001526d3 : retf 0x660e
0x0000000000152823 : retf 0x660f
0x000000000015a7a1 : retf 0x676
0x00000000000d7c46 : retf 0x6774
0x00000000001855a5 : retf 0x67ca
0x00000000000233d2 : retf 0x68
0x00000000000e3bdb : retf 0x6a73
0x000000000014dda3 : retf 0x6a77
0x00000000000955f0 : retf 0x6ae8
0x000000000009e79d : retf 0x6ae9
0x00000000000f6d92 : retf 0x6b8
0x00000000000035e3 : retf 0x6b85
0x00000000000d9901 : retf 0x6c74
0x0000000000003ad8 : retf 0x6e33
0x00000000001835a2 : retf 0x6ee8
0x000000000009826d : retf 0x6f75
0x0000000000003827 : retf 0x707d
0x0000000000001cac : retf 0x7085
0x0000000000123f14 : retf 0x7175
0x0000000000185466 : retf 0x7272
0x00000000000fc1e8 : retf 0x72e8
0x00000000000024fc : retf 0x736c
0x000000000004761a : retf 0x74ff
0x0000000000184c3f : retf 0x76a5
0x00000000000b06c2 : retf 0x777
0x0000000000049e56 : retf 0x77f
0x0000000000183ac2 : retf 0x79f5
0x000000000006cd39 : retf 0x7a8b
0x0000000000113f57 : retf 0x7b9
0x00000000001126fa : retf 0x7cb
0x00000000000d757d : retf 0x7eb
0x00000000000ebd54 : retf 0x7f74
0x000000000011ce1f : retf 0x7f80
0x00000000000eaf09 : retf 0x8002
0x00000000000007c7 : retf 0x8003
0x000000000014a7cc : retf 0x8075
0x0000000000035d6b : retf 0x8102
0x000000000012ff85 : retf 0x8141
0x000000000015a78a : retf 0x8148
0x00000000000bf767 : retf 0x8166
0x000000000000238b : retf 0x81c0
0x0000000000096c69 : retf 0x81e8
0x00000000000991fb : retf 0x820f
0x000000000007f930 : retf 0x8304
0x0000000000056773 : retf 0x830f
0x00000000000606b8 : retf 0x8341
0x00000000000219db : retf 0x8348
0x000000000009a9b5 : retf 0x8349
0x00000000000334c0 : retf 0x840f
0x00000000000cec5e : retf 0x8410
0x0000000000025061 : retf 0x8440
0x000000000003d915 : retf 0x8445
0x00000000001843b0 : retf 0x8481
0x000000000004a332 : retf 0x850f
0x000000000002ef32 : retf 0x8545
0x0000000000039061 : retf 0x8548
0x0000000000089459 : retf 0x854d
0x000000000006926a : retf 0x85c7
0x00000000000aa61b : retf 0x870f
0x0000000000048651 : retf 0x877
0x0000000000003507 : retf 0x8792
0x00000000000bb340 : retf 0x880f
0x00000000000df67e : retf 0x8841
0x000000000009824d : retf 0x8844
0x00000000001064d5 : retf 0x885
0x0000000000025da3 : retf 0x8880
0x00000000000d183b : retf 0x8901
0x0000000000086fd8 : retf 0x8902
0x00000000000748af : retf 0x8920
0x0000000000030bad : retf 0x8941
0x000000000004ab36 : retf 0x8944
0x00000000000d3f20 : retf 0x8945
0x000000000002fa73 : retf 0x8948
0x0000000000085505 : retf 0x8949
0x000000000001fadf : retf 0x894c
0x0000000000023ba9 : retf 0x894d
0x0000000000002458 : retf 0x8a3f
0x0000000000143ac4 : retf 0x8b08
0x0000000000023732 : retf 0x8b41
0x00000000000d708c : retf 0x8b45
0x000000000001fbc9 : retf 0x8b48
0x0000000000039235 : retf 0x8b49
0x00000000000d12c1 : retf 0x8b4c
0x0000000000047d72 : retf 0x8b4d
0x000000000006b392 : retf 0x8b8
0x00000000000da97d : retf 0x8c0f
0x00000000000d974a : retf 0x8ce9
0x000000000005345a : retf 0x8d0f
0x00000000000bd681 : retf 0x8d41
0x00000000000de1c1 : retf 0x8d45
0x0000000000027084 : retf 0x8d48
0x00000000000e7a32 : retf 0x8d49
0x0000000000145a34 : retf 0x8d4a
0x000000000009b097 : retf 0x8d4b
0x000000000006c848 : retf 0x8d4c
0x000000000009f8f3 : retf 0x8d4d
0x00000000000263f4 : retf 0x8e0f
0x000000000014a831 : retf 0x8f0f
0x00000000000cf82d : retf 0x9066
0x000000000014a8ec : retf 0x9075
0x00000000000e92c9 : retf 0x91e9
0x0000000000001d41 : retf 0x9226
0x000000000009b0a3 : retf 0x930f
0x0000000000001be0 : retf 0x9396
0x0000000000184d0e : retf 0x93a2
0x00000000000d9646 : retf 0x93eb
0x000000000004a1ca : retf 0x948
0x0000000000089901 : retf 0x94c
0x00000000000dcbbf : retf 0x94d
0x000000000003e19e : retf 0x950f
0x0000000000001e58 : retf 0x9582
0x000000000011ce60 : retf 0x95eb
0x0000000000054d60 : retf 0x97e
0x000000000007c1e2 : retf 0x98e
0x00000000001850ab : retf 0x99e0
0x00000000000982e1 : retf 0x9b73
0x00000000000f89a2 : retf 0x9b8
0x000000000018541a : retf 0x9d7d
0x0000000000107c52 : retf 0x9db8
0x00000000000bbf8d : retf 0x9e0f
0x0000000000006c51 : retf 0xa
0x0000000000185d25 : retf 0xa020
0x00000000000738b2 : retf 0xa17
0x0000000000183285 : retf 0xa1eb
0x000000000018530b : retf 0xa2fe
0x0000000000067ba2 : retf 0xa31
0x00000000000eebe2 : retf 0xa37
0x000000000004a3ea : retf 0xa375
0x0000000000003395 : retf 0xa3f6
0x0000000000068482 : retf 0xa4eb
0x0000000000107b92 : retf 0xa5b8
0x00000000000d37f7 : retf 0xa76
0x0000000000112d06 : retf 0xa880
0x00000000000eec0b : retf 0xa8e9
0x0000000000067502 : retf 0xaa
0x00000000000872cb : retf 0xaa75
0x00000000001853dc : retf 0xab0d
0x000000000018592e : retf 0xae32
0x000000000000389c : retf 0xaec4
0x0000000000107a72 : retf 0xafb8
0x0000000000057fcb : retf 0xb
0x0000000000107c82 : retf 0xb2b8
0x0000000000107cb2 : retf 0xb3b8
0x0000000000184129 : retf 0xb51a
0x0000000000140692 : retf 0xb5b8
0x000000000004cb95 : retf 0xb60f
0x00000000001406e2 : retf 0xb6b8
0x0000000000094f0f : retf 0xb941
0x0000000000026c65 : retf 0xb9e9
0x0000000000002762 : retf 0xba99
0x00000000000f8a62 : retf 0xbb8
0x0000000000185433 : retf 0xbb9a
0x000000000012c562 : retf 0xbc
0x0000000000110d81 : retf 0xbc75
0x00000000001061f2 : retf 0xbcb8
0x0000000000073e6a : retf 0xbd75
0x0000000000106192 : retf 0xbdb8
0x00000000000459d2 : retf 0xbe0f
0x0000000000001f55 : retf 0xbe35
0x0000000000106072 : retf 0xbeb8
0x0000000000003a5e : retf 0xbf15
0x000000000018547d : retf 0xbf4b
0x00000000001060a2 : retf 0xbfb8
0x00000000000049b9 : retf 0xc
0x000000000006c74e : retf 0xc001
0x0000000000079ac1 : retf 0xc031
0x00000000000c26e8 : retf 0xc041
0x00000000000fc268 : retf 0xc085
0x0000000000106102 : retf 0xc0b8
0x00000000000689ea : retf 0xc0e8
0x00000000001850fd : retf 0xc0fe
0x00000000000349b2 : retf 0xc148
0x000000000008d58e : retf 0xc149
0x0000000000105fe2 : retf 0xc1b8
0x000000000014dddf : retf 0xc1c4
0x00000000000bd41a : retf 0xc229
0x00000000000cb91d : retf 0xc29
0x0000000000088859 : retf 0xc2eb
0x0000000000101df3 : retf 0xc383
0x0000000000111441 : retf 0xc475
0x000000000013ab11 : retf 0xc675
0x0000000000023a96 : retf 0xc748
0x000000000003e701 : retf 0xc77
0x0000000000030e95 : retf 0xc80f
0x000000000009f935 : retf 0xc875
0x000000000001f975 : retf 0xc883
0x0000000000035d4d : retf 0xc889
0x00000000000de8c2 : retf 0xc8e9
0x00000000000346e1 : retf 0xc90f
0x00000000000b29c8 : retf 0xc931
0x000000000002012b : retf 0xc985
0x0000000000102151 : retf 0xc9d9
0x00000000000b0203 : retf 0xca89
0x000000000016f434 : retf 0xcab2
0x00000000001101c2 : retf 0xcb75
0x0000000000181d4a : retf 0xcccb
0x0000000000131427 : retf 0xcf89
0x0000000000145c86 : retf 0xd
0x000000000004f0e3 : retf 0xd039
0x0000000000002cb6 : retf 0xd04f
0x0000000000003d54 : retf 0xd08a
0x000000000003caf3 : retf 0xd0eb
0x0000000000034ebf : retf 0xd0f7
0x000000000006b010 : retf 0xd148
0x000000000012fd93 : retf 0xd149
0x0000000000098784 : retf 0xd174
0x0000000000051532 : retf 0xd189
0x0000000000183ee6 : retf 0xd1cb
0x00000000000aace9 : retf 0xd231
0x00000000000c71e5 : retf 0xd26b
0x00000000000f1e23 : retf 0xd275
0x0000000000024317 : retf 0xd285
0x00000000000e558d : retf 0xd289
0x0000000000132979 : retf 0xd301
0x00000000001855f7 : retf 0xd39
0x000000000006e232 : retf 0xd4
0x000000000003cc52 : retf 0xd5
0x00000000000440fd : retf 0xd529
0x000000000012de1e : retf 0xd689
0x00000000000db9df : retf 0xd739
0x000000000013bdb0 : retf 0xd74
0x00000000000d7cd6 : retf 0xd774
0x000000000002c9c3 : retf 0xd88
0x000000000002d06e : retf 0xd8b
0x0000000000101862 : retf 0xd8b8
0x00000000000b7381 : retf 0xd9e8
0x000000000003543d : retf 0xdaf7
0x00000000000c8c2f : retf 0xdb31
0x0000000000108cd2 : retf 0xdcb8
0x00000000000546e5 : retf 0xdde9
0x0000000000185b83 : retf 0xde4f
0x0000000000083296 : retf 0xde9
0x0000000000032d9e : retf 0xdf75
0x00000000001841b3 : retf 0xdf7f
0x000000000007c7ea : retf 0xdfeb
0x0000000000145b86 : retf 0xe
0x0000000000025d83 : retf 0xe083
0x000000000019ffb7 : retf 0xe0a
0x000000000004f03a : retf 0xe0c1
0x0000000000183c5e : retf 0xe152
0x00000000000d7faf : retf 0xe183
0x0000000000026472 : retf 0xe281
0x000000000007f8b5 : retf 0xe283
0x000000000003ded0 : retf 0xe2c1
0x00000000000e1298 : retf 0xe2ff
0x000000000008f2e9 : retf 0xe475
0x000000000018423c : retf 0xe496
0x00000000000d93f8 : retf 0xe575
0x00000000000c0622 : retf 0xe675
0x000000000004bc07 : retf 0xe677
0x0000000000183ba6 : retf 0xe72e
0x0000000000183233 : retf 0xe80
0x000000000005c453 : retf 0xe873
0x00000000000df245 : retf 0xe877
0x00000000001079eb : retf 0xe8b8
0x00000000000dbf9e : retf 0xe8c1
0x00000000001179ac : retf 0xe975
0x00000000000debc4 : retf 0xe977
0x000000000007a198 : retf 0xe980
0x00000000001079b2 : retf 0xe9b8
0x000000000000353c : retf 0xe9ee
0x00000000000cf093 : retf 0xea72
0x0000000000117a63 : retf 0xea75
0x00000000001851ec : retf 0xea91
0x00000000001433db : retf 0xeac0
0x0000000000025daa : retf 0xeac1
0x0000000000089e61 : retf 0xead3
0x00000000000e9270 : retf 0xeae9
0x00000000000c232a : retf 0xeaf7
0x00000000000d1761 : retf 0xeb02
0x000000000018330d : retf 0xeb83
0x0000000000185b01 : retf 0xebbf
0x0000000000054e7c : retf 0xebff
0x00000000000dec11 : retf 0xec77
0x0000000000023510 : retf 0xed75
0x00000000000b9d65 : retf 0xee75
0x0000000000110bc8 : retf 0xeec1
0x000000000009df54 : retf 0xef75
0x0000000000110b50 : retf 0xefc1
0x00000000001591ac : retf 0xf01
0x000000000012c852 : retf 0xf01d
0x000000000015932c : retf 0xf02
0x00000000001594ac : retf 0xf03
0x00000000000d1731 : retf 0xf04
0x00000000001597ac : retf 0xf05
0x000000000015992c : retf 0xf06
0x0000000000159aac : retf 0xf07
0x00000000000b8a7e : retf 0xf075
0x0000000000159c2c : retf 0xf08
0x00000000000d4f5a : retf 0xf089
0x0000000000159dac : retf 0xf09
0x0000000000159f2c : retf 0xf0a
0x000000000015a0ac : retf 0xf0b
0x000000000015a22c : retf 0xf0c
0x000000000015a3ac : retf 0xf0d
0x000000000015a52c : retf 0xf0e
0x000000000015a6ac : retf 0xf0f
0x00000000000b8d02 : retf 0xf175
0x000000000014aa0d : retf 0xf1c5
0x000000000013f7a2 : retf 0xf201
0x0000000000112d62 : retf 0xf272
0x000000000010f48b : retf 0xf275
0x00000000000e703d : retf 0xf38b
0x00000000000bbcc5 : retf 0xf40
0x000000000008e0a8 : retf 0xf41
0x000000000009b124 : retf 0xf43
0x0000000000085113 : retf 0xf44
0x00000000000dadd2 : retf 0xf44a
0x0000000000189200 : retf 0xf451
0x000000000003cf9d : retf 0xf48
0x000000000008ba71 : retf 0xf4c
0x00000000000f2ce2 : retf 0xf579
0x00000000000d5872 : retf 0xf583
0x0000000000128652 : retf 0xf630
0x00000000000e53a7 : retf 0xf631
0x0000000000185148 : retf 0xf64
0x000000000010f75f : retf 0xf641
0x0000000000110d72 : retf 0xf642
0x0000000000034d65 : retf 0xf66
0x000000000003e590 : retf 0xf741
0x000000000016e49a : retf 0xf748
0x00000000000b7762 : retf 0xf762
0x00000000000bbf6d : retf 0xf789
0x000000000008b36f : retf 0xf883
0x0000000000099aca : retf 0xf889
0x0000000000106572 : retf 0xf88c
0x0000000000094e62 : retf 0xf8a9
0x00000000000c23fc : retf 0xf8c1
0x00000000000b3162 : retf 0xf957
0x000000000005bd8b : retf 0xf989
0x000000000014aadf : retf 0xf9c5
0x00000000000f66a2 : retf 0xf9dd
0x000000000012de28 : retf 0xfa81
0x0000000000142d96 : retf 0xfa83
0x000000000005072d : retf 0xfac1
0x000000000006fe62 : retf 0xfb0c
0x00000000000d00a2 : retf 0xfbb3
0x00000000000d3522 : retf 0xfbb6
0x00000000000851e2 : retf 0xfc54
0x0000000000195914 : retf 0xfc61
0x00000000000c8922 : retf 0xfc66
0x0000000000196050 : retf 0xfc76
0x0000000000196048 : retf 0xfc77
0x0000000000195e40 : retf 0xfc82
0x0000000000196338 : retf 0xfca9
0x00000000000c2192 : retf 0xfcfb
0x00000000000e81e8 : retf 0xfd4f
0x00000000000f5ca2 : retf 0xfd82
0x00000000000534f2 : retf 0xfe39
0x0000000000130fda : retf 0xfe83
0x0000000000044872 : retf 0xfe93
0x0000000000034722 : retf 0xfeb0
0x0000000000033eda : retf 0xfeb9
0x0000000000041c72 : retf 0xfebf
0x00000000000349fc : retf 0xff2
0x0000000000034d69 : retf 0xff3
0x00000000000524d2 : retf 0xff6a
0x000000000007f742 : retf 0xff7d
0x000000000006cae5 : retf 0xffb8
0x000000000005ee33 : retf 0xffd9
0x0000000000196b51 : retf 0xffe9
0x0000000000172dbe : retf 0xffea
0x00000000001a1721 : retf 0xffec
0x00000000000649f7 : retf 0xffed
0x0000000000132e38 : retf 0xffee
0x000000000005493a : retf 0xffef
0x0000000000112e67 : retf 0xfff0
0x0000000000053ef2 : retf 0xfff1
0x00000000000f2d67 : retf 0xfff2
0x00000000000e2e29 : retf 0xfff3
0x00000000000523aa : retf 0xfff4
0x000000000016d6b2 : retf 0xfff5
0x0000000000057570 : retf 0xfff6
0x000000000004e4d6 : retf 0xfff7
0x00000000000fec85 : retf 0xfff8
0x000000000002bc39 : retf 0xfff9
0x0000000000027ec1 : retf 0xfffa
0x0000000000046d7c : retf 0xfffb
0x0000000000088d39 : retf 0xfffc
0x00000000000b7f9b : retf 0xfffd
0x0000000000021b32 : retf 0xfffe
0x0000000000030652 : retf 0xffff
0x0000000000010420 : retf 1
0x000000000000b511 : retf 2
0x00000000000011dc : retf 3
0x00000000000c8685 : retf 4
0x0000000000180e14 : retf 5
0x000000000000eeb0 : retf 6
0x000000000001c5b9 : retf 7
0x0000000000045fc2 : retf 8
0x00000000000ed847 : retf 9
0x00000000000aa215 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000aacde : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000ff80c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000009ec6c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009f0cd : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000acd6d : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000ada9b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000072e8c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008eced : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000af48c : rol byte ptr [r11 - 0x79f0f608], 1 ; retf
0x000000000008b36b : rol byte ptr [r9 - 0x77], 1 ; retf 0xf883
0x000000000003a6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000110bfd : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000009f662 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000bd832 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x000000000008ba02 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000854ff : rol byte ptr [rax + 0x755f067b], 1 ; retf 0x8949
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000180c00 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000024bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000006632c : rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000124139 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000003d320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000502f4 : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000000ac94d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000016e7bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a7b75 : rol byte ptr [rax], 0 ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001977cd : rol byte ptr [rax], 0 ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000000bc608 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006b62f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000105487 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7f40 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003569c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000008d80b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x00000000000966d2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000005d9e1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000036269 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x000000000011d757 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d93d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000195c68 : rol byte ptr [rbp - 0x7aaf0004], 0xfc ; jmp rax
0x000000000004846b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000119129 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000105a1b : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000d71e7 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000011ce14 : rol byte ptr [rbx - 0x47ca817], 1 ; or dword ptr [rdi], ecx ; retf
0x000000000010a6dc : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000073058 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002df31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000d16d5 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000ef09d : rol byte ptr [rbx - 0x76b7f707], 1 ; retf 0x830f
0x00000000000af48d : rol byte ptr [rbx - 0x79f0f608], 1 ; retf
0x000000000005df0f : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x00000000000abf92 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000122b06 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012dc01 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000188050 : rol byte ptr [rbx], 1 ; push rax ; add esi, edx ; call qword ptr [rax]
0x00000000000aab91 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000011d759 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x000000000011d93f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x0000000000097323 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009eb62 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000b862b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x000000000009ec1b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000be1e6 : rol byte ptr [rcx + 0xf], cl ; retf 0x6348
0x00000000000d6565 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x000000000002975b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000ac04e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xac020 ; ret
0x0000000000123df2 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000cec59 : rol byte ptr [rcx + rcx*4 - 6], 0x83 ; retf 0x8410
0x00000000001031d7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000c284e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00000000000dba1e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x000000000008b36c : rol byte ptr [rcx - 0x77], 1 ; retf 0xf883
0x0000000000123f11 : rol byte ptr [rcx - 0x77], cl ; retf 0x7175
0x00000000000c23ad : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x0000000000195c8c : rol byte ptr [rcx - 0x7e990004], 1 ; cld ; call rsi
0x000000000008b3f2 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000abf72 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e812a : rol byte ptr [rcx], 0x39 ; ret
0x00000000000d9598 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000e5e22 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000e92c2 : rol byte ptr [rcx], 0x39 ; sar dword ptr [rdi - 0x18], 1 ; retf 0x91e9
0x0000000000048082 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48081 ; xor eax, eax ; ret
0x00000000000aa99b : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00000000001099bd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000d9277 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002b152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006ee57 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000004606a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000102167 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00000000000aa9fb : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000aa9e6 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000188008 : rol byte ptr [rcx], 0xf2 ; jmp rax
0x00000000001335bc : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; mov rbx, rax ; call 0x1f8a9
0x000000000014dc1e : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000019c912 : rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001bc718 : rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc6c0 : rol byte ptr [rcx], cl ; ret 0xb
0x00000000000f6a3c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010aaad : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000abfd2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000188090 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000188094 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000195e80 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00000000000abf82 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000218e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000018802c : rol byte ptr [rdx], 0xf2 ; jmp rax
0x0000000000107415 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd227 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000bf6ef : rol byte ptr [rip + 0x16e], 1 ; ret
0x000000000010a97d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x000000000002e50e : rol byte ptr [rip + 0x788d4800], cl ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000abfc2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000164f2d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d7a71 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000014abc5 : rol ch, 1 ; jns 0x14aba4 ; retf 0xead3
0x000000000014ad15 : rol ch, 1 ; jns 0x14acf4 ; retf 0xead3
0x000000000014ae65 : rol ch, 1 ; jns 0x14ae44 ; retf 0xead3
0x000000000014afb5 : rol ch, 1 ; jns 0x14af94 ; retf 0xead3
0x000000000014b105 : rol ch, 1 ; jns 0x14b0e4 ; retf 0xead3
0x000000000014b255 : rol ch, 1 ; jns 0x14b234 ; retf 0xead3
0x000000000014b3a5 : rol ch, 1 ; jns 0x14b384 ; retf 0xead3
0x000000000014b4f5 : rol ch, 1 ; jns 0x14b4d4 ; retf 0xead3
0x000000000014b645 : rol ch, 1 ; jns 0x14b624 ; retf 0xead3
0x000000000014b795 : rol ch, 1 ; jns 0x14b774 ; retf 0xead3
0x000000000014b8e5 : rol ch, 1 ; jns 0x14b8c4 ; retf 0xead3
0x000000000014ba35 : rol ch, 1 ; jns 0x14ba14 ; retf 0xead3
0x000000000014bb85 : rol ch, 1 ; jns 0x14bb64 ; retf 0xead3
0x000000000014bcd5 : rol ch, 1 ; jns 0x14bcb4 ; retf 0xead3
0x000000000014be25 : rol ch, 1 ; jns 0x14be04 ; retf 0xead3
0x000000000014c295 : rol ch, 1 ; jns 0x14c274 ; retf 0xead3
0x000000000014c415 : rol ch, 1 ; jns 0x14c3f4 ; retf 0xead3
0x000000000014c595 : rol ch, 1 ; jns 0x14c574 ; retf 0xead3
0x000000000014c715 : rol ch, 1 ; jns 0x14c6f4 ; retf 0xead3
0x000000000014c895 : rol ch, 1 ; jns 0x14c874 ; retf 0xead3
0x000000000014ca15 : rol ch, 1 ; jns 0x14c9f4 ; retf 0xead3
0x000000000014cb95 : rol ch, 1 ; jns 0x14cb74 ; retf 0xead3
0x000000000014cd15 : rol ch, 1 ; jns 0x14ccf4 ; retf 0xead3
0x000000000014ce95 : rol ch, 1 ; jns 0x14ce74 ; retf 0xead3
0x000000000014d015 : rol ch, 1 ; jns 0x14cff4 ; retf 0xead3
0x000000000014d195 : rol ch, 1 ; jns 0x14d174 ; retf 0xead3
0x000000000014d315 : rol ch, 1 ; jns 0x14d2f4 ; retf 0xead3
0x000000000014d495 : rol ch, 1 ; jns 0x14d474 ; retf 0xead3
0x000000000014d615 : rol ch, 1 ; jns 0x14d5f4 ; retf 0xead3
0x000000000014d795 : rol ch, 1 ; jns 0x14d774 ; retf 0xead3
0x0000000000181d40 : rol cl, 0xc2 ; ret
0x0000000000195364 : rol dh, 0xfb ; call qword ptr [rax]
0x000000000011d0d7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000195358 : rol dl, 1 ; sti ; jmp qword ptr [rax]
0x00000000000abf1c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000110bd1 : rol dword ptr [rax + 0x38], 0xc6 ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000009f931 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xc875
0x000000000008f2e5 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000030efc : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000015fd40 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000b2f55 : rol dword ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000019780d : rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001a7c7d : rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x000000000006bcf8 : rol dword ptr [rax], 1 ; ret
0x000000000009f0c7 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x000000000001f9be : rol dword ptr [rbx + rbp*8], 0xcc ; mov qword ptr [rdi], rcx ; ret
0x00000000000c612b : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x0000000000066328 : rol dword ptr [rcx + rcx*2], 0x83 ; rol byte ptr [rax + rcx*2], 1 ; ret
0x000000000012fda3 : rol dword ptr [rcx - 0x77], 1 ; retf 0x8945
0x000000000012ff6c : rol dword ptr [rcx - 0xff001f], 1 ; add byte ptr [rax + 0x31], cl ; retf 0xc148
0x0000000000022d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000047d77 : rol dword ptr [rcx], 0x39 ; retf 0x894c
0x0000000000080f59 : rol dword ptr [rcx], cl ; adc dword ptr [rax], eax ; mov eax, 2 ; syscall
0x0000000000111f71 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a7e69 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001b2d06 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x0000000000123f9e : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x000000000010d103 : rol dword ptr [rsi - 0x76b7ffd5], 1 ; ret 0x8d48
0x0000000000111f70 : rol dword ptr fs:[rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000360c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008b459 : rol ebx, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008b458 : rol r11d, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000360c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001a1680 : ror al, 1 ; in al, dx ; call rsp
0x00000000001193a2 : ror ax, 8 ; ret
0x0000000000035f64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000360c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008eb62 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8eba9 ; add rax, rdi ; ret
0x000000000008b8b7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a128e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000007442a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000023db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000005a215 : ror byte ptr [rax + 0x29], cl ; retf 0xc148
0x00000000000c3928 : ror byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x000000000013bdad : ror byte ptr [rax + 0x39], 0xca ; je 0x13bdc7 ; ret
0x00000000000fce2f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce67 ; ret
0x0000000000114aa8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f6a3e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f6ccd : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000048f16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000143440 : ror byte ptr [rax + 0x39], 1 ; retf
0x00000000001149c8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000d3fe0 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000046f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bc400 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115ae2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000128f0c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000097967 : ror byte ptr [rax + 0xf], 1 ; ret
0x0000000000047fd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x000000000002c864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000049a9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x00000000000acd89 : ror byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000009f213 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000965ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008d459 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003bfb5 : ror byte ptr [rax + 1], 1 ; retf 0x8b48
0x0000000000123f73 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000076b99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000af121 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b81d6 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000042205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000ae5c5 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000003bfe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003bf29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000f69f6 : ror byte ptr [rax + 1], cl ; retf 0x8948
0x000000000008b8b4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000df850 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000017d008 : ror byte ptr [rax + rax], 0 ; ret
0x000000000008ece5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000aa84c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f35a8
0x000000000002d902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001096f6 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000005715a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000e7a39 : ror byte ptr [rax - 0x3f], cl ; loop 0xe7a47 ; call 0x94477
0x00000000000c0202 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000bb5f8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cdbb8 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008eb22 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008eb52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009f102 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008eb42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000008217b : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000008249a : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000000cf38d : ror byte ptr [rax - 0x75], 0x54 ; ret
0x000000000010a431 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c6108 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000001072b9 : ror byte ptr [rax - 0x75], 5 ; retf
0x000000000007ba0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000048db3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000009ed49 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012e2a9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12e24b ; xor eax, eax ; pop rbx ; ret
0x0000000000097964 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000132dc8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000001159d2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000013a789 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x0000000000132e32 : ror byte ptr [rax - 0x77], 1 ; out dx, eax ; call 0x1f8ae
0x000000000008810c : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000014003a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x000000000003b35d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000078f65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000bf1f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000052005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x000000000012f926 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000020625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000f6d8f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000074499 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x00000000000872a2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000001323f9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007db6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012fdc1 : ror byte ptr [rax - 0x77], cl ; retf
0x000000000007a391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00000000001024eb : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000000773e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000954d1 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003adac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b321 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001370d6 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136e5e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136ec5 ; ret
0x00000000000f8960 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003a08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000143670 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000013380d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013c35a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000122216 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f162 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f142 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f122 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f6e6e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c3195 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e0cf6 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000004f583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000fdb15 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000075f7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000046180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d52a3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a6476 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000bee4e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077ccf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002593e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007818a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011791a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x0000000000138db5 : ror byte ptr [rax], 0x39 ; retf 0x8d0f
0x00000000000aff1a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000008d7b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b856b : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00000000000ad077 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000f0cb6 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x00000000000f6d2f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x0000000000024c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x0000000000024270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000040609 : ror byte ptr [rcx + 0x39], cl ; retf
0x00000000000ac9b7 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000000aeb63 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x0000000000030cf7 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000006f17f : ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x000000000012a31b : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000034f34 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000094f36 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000003522e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000012304e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000d6ece : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00000000000aa844 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x0000000000094f78 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000a605f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000441d6 : ror byte ptr [rcx - 0x7d], cl ; in al, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000099aaa : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000ac950 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000bb250 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x000000000010756c : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008f529 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000354b2 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000016462d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000105fd0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000101ca5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000ea9e0 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000bd432 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000003a6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000004745f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000bd9ed : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007573c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000970aa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000885e6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b67 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e396f : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c49f6 : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000096fda : ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000063693 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000002aecd : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000020155 : ror byte ptr [rdi], 0x84 ; retf
0x0000000000075d87 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000005686a : ror byte ptr [rdi], 0x84 ; retf 0x1c
0x0000000000046d79 : ror byte ptr [rdi], 0x84 ; retf 0xfffb
0x0000000000071ea1 : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000000494af : ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000126b99 : ror byte ptr [rdi], 0x84 ; retf 9
0x0000000000110be2 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x0000000000126fb9 : ror byte ptr [rdi], 0x84 ; syscall
0x000000000007638c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001657fa : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000084ab5 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009f08c : ror byte ptr [rdi], 0x85 ; jge 0x9f09a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086641 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a4cc1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005cd99 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1607 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000600bb : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000db8bf : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x0000000000113915 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x000000000011989e : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000006374b : ror byte ptr [rdi], 0x85 ; retf
0x000000000016d6af : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000016d4cf : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000000e59de : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x0000000000122298 : ror byte ptr [rdi], 0x88 ; ret
0x00000000000f8707 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000000355c7 : ror byte ptr [rdi], 0x88 ; retf
0x00000000001003e4 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00000000000bbdd3 : ror byte ptr [rdi], 0x89 ; ret 3
0x00000000000cd89f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000884fd : ror byte ptr [rdi], 0x94 ; ret
0x00000000000ed59e : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e2dc7 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000bbcfb : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000136d16 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000bbdc8 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x0000000000059901 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000000817dc : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00000000000e0b28 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x0000000000020775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000061a94 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000006ffba : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000cec56 : ror byte ptr [rdi], 0x94 ; rol byte ptr [rcx + rcx*4 - 6], 0x83 ; retf 0x8410
0x000000000010fbd3 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d9b15 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00000000000ba72f : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00000000000ba5da : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x0000000000045c3d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000ad2af : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ad59c : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00000000000d9beb : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000007371c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000cdbb5 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000ea9dd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ac17c : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8b4a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000033bce : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33bb8 ; ret
0x00000000000d7574 : ror byte ptr [rdi], 1 ; mov es, word ptr [rbp + 6] ; add byte ptr [rax], al ; movsxd rcx, edx ; jmp 0xd7590
0x00000000000e5e25 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000dc0ff : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000007f529 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c18fb : ror byte ptr [rdi], 1 ; test ch, dh ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009731d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009f1ad : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007550c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000d9565 : ror byte ptr [rdi], cl ; test byte ptr [rdi], dl ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf 0xb60f
0x00000000000bc04a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x0000000000098967 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b7880 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x0000000000010af1 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a6480 : ror byte ptr [rsi - 0x12], 1 ; call qword ptr [rdx]
0x00000000001953b8 : ror ch, 0xfb ; call qword ptr [rax]
0x00000000001953ac : ror cl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000099b2f : ror dword ptr [r9 + 0x1ef8c1f8], 0x89 ; ret 0x8b48
0x000000000015a787 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000074143 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000007449c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000012fdde : ror dword ptr [rax + 0x31], cl ; retf
0x0000000000082f0a : ror dword ptr [rax + 0x39], 1 ; retf
0x00000000000cef63 : ror dword ptr [rax + 0x39], 1 ; retf 0x870f
0x00000000000bbf8a : ror dword ptr [rax + 0x39], 1 ; retf 0x9e0f
0x000000000013ab0e : ror dword ptr [rax + 0x39], 1 ; retf 0xc675
0x000000000012d93d : ror dword ptr [rax + 0x63], 0xc ; mov cl, byte ptr [rax + 1] ; retf 0xe2ff
0x00000000000c31dc : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000cd3b1 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000003905d : ror dword ptr [rax + 0xf], 1 ; retf 0x8548
0x00000000000d9643 : ror dword ptr [rax + 1], 0xca ; jmp 0xd95df
0x000000000014a785 : ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000014a649 : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x000000000014a89e : ror dword ptr [rax + 1], 0xf8 ; sub rax, rdx ; ret
0x000000000012fdbe : ror dword ptr [rax + 1], 1 ; ror byte ptr [rax - 0x77], cl ; retf
0x000000000013f307 : ror dword ptr [rax + 1], cl ; ret
0x0000000000143402 : ror dword ptr [rax + 3], 1 ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000117700 : ror dword ptr [rax + 9], cl ; retf 0x8949
0x000000000008b784 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000008b8a9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000008ba6a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000010a224 : ror dword ptr [rax - 0x3f], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000000de85e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000dabac : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000049da3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000009ed35 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000105e2d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000dcbf7 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x0000000000142d81 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000052bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x00000000000c392b : ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x00000000000f69b9 : ror dword ptr [rax - 0x77], 1 ; retf 0xc148
0x00000000000cfcd3 : ror dword ptr [rax - 0x77], 1 ; retf 0xe283
0x000000000014dc72 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f1886 : ror dword ptr [rax - 0x77], cl ; retf
0x0000000000071bfd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x71bf7 ; ret
0x000000000007af3d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x7af37 ; ret
0x000000000003a178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000032752 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000004b64f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000c15c5 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000062572 : ror dword ptr [rax], 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x6254e
0x00000000000e571f : ror dword ptr [rax], 0xe9 ; ret 0xfffe
0x000000000012fd80 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x000000000012fce5 : ror dword ptr [rbp - 0x77], 1 ; retf
0x000000000009b080 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x000000000012dadd : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0xd285
0x0000000000099b30 : ror dword ptr [rcx + 0x1ef8c1f8], 0x89 ; ret 0x8b48
0x00000000000dcbf4 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x000000000002c2c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000b970e : ror dword ptr [rcx + 1], cl ; retf 0x8d4d
0x000000000012fda0 : ror dword ptr [rcx + 9], 1 ; rol dword ptr [rcx - 0x77], 1 ; retf 0x8945
0x0000000000094a95 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000000e7614 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00000000000e928b : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00000000000e9293 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x00000000000afe34 : ror dword ptr [rcx - 0x77], cl ; retf 0x6349
0x000000000009a9d1 : ror dword ptr [rcx - 0x77], cl ; retf 0x8349
0x000000000009b11d : ror dword ptr [rcx - 0x7d], 1 ; clc ; add ecx, dword ptr [rax - 0x77] ; retf 0xf43
0x0000000000170907 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000089455 : ror dword ptr [rdi + rcx + 0x47], 1 ; retf 0x854d
0x000000000009a6f3 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000014479b : ror dword ptr [rdi], 0x1f ; add byte ptr [rcx], sil ; shr cl, cl ; retf 0xfffd
0x000000000016f028 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f734 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f506 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x0000000000170630 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f486 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016f7c4 : ror dword ptr [rdi], 0x85 ; je 0x16f7d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f2bb : ror dword ptr [rdi], 0x85 ; jno 0x16f2d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f383 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011acd7 : ror dword ptr [rdi], 0x85 ; ret 0xfffe
0x000000000016f000 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d85f7 : ror dword ptr [rdi], 0x92 ; ret 0xd138
0x00000000000e3fbd : ror dword ptr [rdi], 0x94 ; ret 0x3ae9
0x000000000003c3d8 : ror dword ptr [rdi], 0x95 ; ret 0xd348
0x000000000009f025 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000f8b2c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000009ee17 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000826ae : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000123c35 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000001193a3 : ror eax, 8 ; ret
0x0000000000071bfc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x71bf8 ; ret
0x000000000007af3c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x7af38 ; ret
0x0000000000071385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x00000000001b59a5 : sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x0000000000095a5f : sahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000196445 : sahf ; cld ; call qword ptr [rdx]
0x00000000001965c5 : sahf ; cld ; call rax
0x0000000000196585 : sahf ; cld ; jmp rax
0x00000000000025e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00000000000025e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x000000000014b5ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000195750 : sahf ; pop rbx ; cld ; jmp qword ptr [rax]
0x00000000000e91b3 : sahf ; ret
0x00000000000493f1 : sahf ; ret 0x148
0x00000000000c23b3 : sahf ; ret 0x1fbd
0x0000000000107bd6 : sahf ; ret 0x2b
0x00000000001835a5 : sahf ; ret 0x38ae
0x000000000003887c : sahf ; ret 0x8348
0x00000000000e91bc : sahf ; ret 0x844
0x00000000000bbf8f : sahf ; ret 0xe8c1
0x00000000001840dc : sahf ; retf
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000084122 : sahf ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004baae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bf6ed : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000d7231 : sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000136d5e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001373a9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010ec02 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006b31b : sal bh, 0xd8 ; ret
0x00000000000aacf2 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000008b0c7 : sal bh, 1 ; ret 0x8000
0x000000000008af87 : sal bh, 1 ; ret 0xc000
0x000000000008ae47 : sal bh, 1 ; ret 0xe000
0x000000000008ad07 : sal bh, 1 ; ret 0xf000
0x000000000008abc7 : sal bh, 1 ; ret 0xf800
0x000000000008aa87 : sal bh, 1 ; ret 0xfc00
0x000000000008a947 : sal bh, 1 ; ret 0xfe00
0x000000000008a807 : sal bh, 1 ; ret 0xff00
0x000000000008a6c7 : sal bh, 1 ; ret 0xff80
0x000000000008a587 : sal bh, 1 ; ret 0xffc0
0x000000000008a447 : sal bh, 1 ; ret 0xffe0
0x000000000008a307 : sal bh, 1 ; ret 0xfff0
0x000000000008a1c7 : sal bh, 1 ; ret 0xfff8
0x000000000008a087 : sal bh, 1 ; ret 0xfffc
0x0000000000089f47 : sal bh, 1 ; ret 0xfffe
0x00000000000504c4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000123e27 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000188e7d : sal bl, 1 ; jmp rcx
0x0000000000045a28 : sal bl, 1 ; ret
0x00000000000896c3 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000ac71f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000cf261 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000001369e5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000000c9647 : sal byte ptr [rbp + 0x2e], 0xb8 ; je 0xc9655 ; add byte ptr [rax], al ; syscall
0x000000000008eb18 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000053995 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x000000000013c481 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000008d830 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006acc0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000005155e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000114ab7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035307 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x0000000000115091 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x000000000012e1a4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115194 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007a394 : sal byte ptr [rbp + 9], cl ; ret
0x000000000012c223 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de41 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000134104 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000001382b9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000014a780 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000001386f0 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000058e45 : sal byte ptr [rbp + rsi*2 + 0x49], 0x63 ; retf
0x000000000004f345 : sal byte ptr [rbp + rsi*2 + 0x49], 0x63 ; retf 0x20be
0x00000000001150a1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007c845 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009eae5 : sal byte ptr [rbp - 0x10], cl ; ret
0x0000000000048086 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000001153de : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000895d0 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000aa380 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000071c00 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009edda : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000138f26 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009f80b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000d15ff : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000009eb83 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033bd3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000001235bb : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000ac622 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000013afd2 : sal byte ptr [rbp - 0x3b], 0xeb ; retf
0x000000000008d80d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x000000000008873e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x0000000000115536 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000008967a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000adacb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000012b042 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x000000000012cc8c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff252 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000fef73 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000012d832 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x0000000000113d34 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000ffa55 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001382e2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000006dcdf : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000012de7e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000006f61a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000008842a : sal byte ptr [rbx + rsi*8 + 0x48], 0x8b ; sbb byte ptr [r8 - 0x77], cl ; retf 0x348
0x000000000009ee0e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00000000000839e7 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000105dd9 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000008b7fc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000117abc : sal byte ptr [rcx + rdx + 0x4c], 0x89 ; retf 0x8949
0x0000000000114aa6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000fa5d4 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x52 ; retf 0xffff
0x00000000000facc5 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x61 ; ret
0x000000000006f17d : sal byte ptr [rcx], cl ; ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x00000000000f6ad1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001035e2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000000358ac : sal byte ptr [rcx], cl ; test byte ptr [rcx + rcx*4 - 0x39], 0x44 ; mov eax, ecx ; syscall
0x0000000000123f2e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x000000000008b9cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000123483 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00000000000a1293 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000089a63 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009f1ab : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001b0d10 : sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001149cc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x000000000013dd77 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000132e2a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132e48 ; call rax
0x0000000000138faa : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138fc8 ; call rax
0x00000000001396c3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1396e1 ; call rax
0x000000000013500e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135084 ; call rax
0x0000000000135a2e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135a94 ; call rax
0x00000000001179a7 : sal byte ptr [rsi + rdx + 0x48], 0x39 ; retf 0xe975
0x0000000000112b91 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x112b67
0x000000000008b521 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000122990 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000108de2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000195578 : sal ch, 1 ; sti ; jmp qword ptr [rax]
0x0000000000195530 : sal dl, 0xfb ; call qword ptr [rax]
0x0000000000034e0a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x0000000000034acf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x000000000004876f : sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000013bec4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000ac602 : sal dword ptr [rbx + rdx + 0x48], 0x83 ; ret 0x8b04
0x000000000013bdab : sal dword ptr [rcx], 0xc0 ; cmp rdx, rcx ; je 0x13bdc9 ; ret
0x000000000009ed47 : sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x0000000000123e25 : sal dword ptr [rcx], 0xc0 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ba08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000019520c : sal dword ptr [rdi - 0x27e70003], 0xfb ; jmp rax
0x00000000001951e8 : sal dword ptr [rdi - 0x483e0003], 0xfd ; call qword ptr [rax]
0x00000000001951c8 : sal dword ptr [rdi - 0x483e0003], 0xfd ; jmp qword ptr [rax]
0x0000000000195118 : sal dword ptr [rdi - 0x483e0003], 0xfd ; jmp rcx
0x00000000001179d2 : sal dword ptr [rdx + 0xb], 1 ; shl rdx, 2 ; jmp 0x94479
0x000000000009ebd9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9ebd8 ; ret
0x000000000014dc75 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000188e41 : sal ebx, cl ; jmp rcx
0x000000000011ce59 : sal esi, 1 ; pop rax ; add dword ptr [rax], esp ; jne 0x11ce32 ; jmp 0x11cdff
0x00000000001ae611 : sal esp, 1 ; jmp rcx
0x0000000000187f74 : sar ah, 0xf1 ; jmp rax
0x0000000000187fc4 : sar bh, 0xf1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000061b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005ebe8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000120f70 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195389 : sar bl, cl ; jmp rax
0x0000000000109093 : sar byte ptr [rax + 0x14], cl ; syscall
0x00000000000f6907 : sar byte ptr [rax + 0x1c], cl ; syscall
0x0000000000133b10 : sar byte ptr [rax + 0x3d], 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x0000000000121dd3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000121a01 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x0000000000140ca2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000cdbcf : sar byte ptr [rax + 1], cl ; ret
0x000000000011f3b8 : sar byte ptr [rax + 5], cl ; jmp 0x11f392
0x0000000000085817 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000075adc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000026ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x000000000014a7ca : sar byte ptr [rcx], 1 ; retf 0x8075
0x000000000014a6a6 : sar byte ptr [rcx], 1 ; retf 0x850f
0x000000000014a8ea : sar byte ptr [rcx], 1 ; retf 0x9075
0x00000000001073e3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00000000001a49b0 : sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000000d72fd : sar byte ptr [rdx], 0xe ; je 0xd729c ; pop rbx ; ret
0x0000000000002b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x0000000000103b0c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cd1fc : sar byte ptr [rsi + 9], 1 ; ret
0x0000000000183f3f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001a7950 : sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x00000000001960a0 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x1960aa ; call rax
0x0000000000187f94 : sar ch, 0xf1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000195584 : sar cl, 0xfb ; call qword ptr [rax]
0x000000000019aea9 : sar cl, 1 ; call rsp
0x0000000000187fac : sar dh, 0xf1 ; jmp rax
0x00000000000d9805 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd9822
0x0000000000079a57 : sar dword ptr [rax + 2], 1 ; syscall
0x000000000009fae3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9faee ; ret
0x00000000000a0236 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa0241 ; ret
0x00000000000a0983 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa098e ; ret
0x00000000000fea8b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000ff451 : sar dword ptr [rbx + 0x2c], cl ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000e7e26 : sar dword ptr [rcx], 1 ; ret
0x000000000001f969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00000000000d3217 : sar dword ptr [rcx], cl ; ret 0xef7c
0x00000000000e92c5 : sar dword ptr [rdi - 0x18], 1 ; retf 0x91e9
0x0000000000041925 : sar dword ptr [rdx + 1], 0x89 ; ret
0x00000000000fea2f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000034f03 : sar eax, 0x10 ; ret
0x0000000000034b69 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000140664 : sar eax, 0x1f ; ret
0x0000000000034ebb : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003478d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000fe5f2 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000072d6c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000075660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000734f9 : sar eax, 2 ; ret
0x000000000011909d : sar eax, 6 ; ret
0x0000000000195395 : sar ebx, 0xff ; ret
0x0000000000195355 : sar ebx, 0xff ; rol dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000195385 : sar ebx, 1 ; call qword ptr [rax - 0x1f00042e]
0x000000000019538d : sar ebx, cl ; jmp qword ptr [rax]
0x0000000000183ca3 : sar ecx, 1 ; jnp 0x183c64 ; ret
0x000000000003a634 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003a647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000012516a : sar edx, 4 ; add rdx, 1 ; syscall
0x000000000008ece7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000072d6b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000003478c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000734f8 : sar rax, 2 ; ret
0x000000000011909c : sar rax, 6 ; ret
0x0000000000125169 : sar rdx, 4 ; add rdx, 1 ; syscall
0x000000000008ece6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000034ab4 : sbb ah, bh ; adc eax, 0x540f6600 ; ret 0xf66
0x00000000000026b9 : sbb ah, cl ; mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x00000000000f6909 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014897a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001488d3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000011332e : sbb al, 0x20 ; je 0x113396 ; xor eax, eax ; pop rbx ; ret
0x000000000011332d : sbb al, 0x20 ; je 0x113397 ; xor eax, eax ; pop rbx ; ret
0x00000000000ee79e : sbb al, 0x39 ; retf 0x850f
0x0000000000001f1c : sbb al, 0x3a ; jrcxz 0x1f9d ; retf 0x6321
0x0000000000136d0d : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000002f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000010f778 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10f7a4 ; mov rdx, r8 ; jmp 0x10f794
0x00000000001b0a54 : sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d54 : sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e54 : sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b54 : sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b247c
0x00000000000ffd53 : sbb al, 0x83 ; ret
0x000000000006999b : sbb al, 0x83 ; ret 0x8308
0x0000000000068ac8 : sbb al, 0x89 ; ret
0x000000000006e8d3 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x0000000000184fa2 : sbb al, 0x8c ; retf
0x00000000001b6654 : sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d93
0x0000000000003a73 : sbb al, 0xb ; push rbp ; jg 0x3ae8 ; xchg eax, ebp ; retf 0x10bf
0x00000000000d59e3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000127755 : sbb al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000143be9 : sbb al, 0xb8 ; retf 0
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001a7d54 : sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x000000000012e650 : sbb al, 0xce ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000102988 : sbb al, 0xcf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000ae294 : sbb al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x00000000000dec75 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00000000001af869 : sbb al, 0xf5 ; call qword ptr [rdx]
0x0000000000195735 : sbb al, 0xfc ; jmp rax
0x00000000001ad80d : sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x00000000001ad82d : sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x0000000000195210 : sbb al, bl ; sti ; jmp rax
0x000000000000b398 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000007fd8 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x00000000001017aa : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000148b5a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000123d00 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000004b9a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00000000000ac72c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000005aa9a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x000000000019854d : sbb al, byte ptr [rcx] ; add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000148b59 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f2db4 : sbb al, ch ; out dx, al ; retf 0xfff2
0x0000000000076ca7 : sbb al, ch ; ret
0x000000000010ed4f : sbb al, ch ; retf
0x00000000001956f1 : sbb bh, ah ; jmp qword ptr [rax]
0x00000000000d599a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001a6bb9 : sbb bh, dl ; call qword ptr [rax]
0x0000000000194e81 : sbb bl, bh ; jmp rax
0x0000000000194e7d : sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000183d32 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x0000000000182a25 : sbb bl, byte ptr [rsi] ; ret
0x0000000000110aba : sbb byte ptr [r11 + 0x39481846], r9b ; retf 0x840f
0x0000000000033e51 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000076b8e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000001435af : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013be21 : sbb byte ptr [r8 + 1], r15b ; ret
0x0000000000113297 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x0000000000087ada : sbb byte ptr [r8 - 0x77], cl ; retf 0x348
0x0000000000087eca : sbb byte ptr [r8 - 0x77], r9b ; retf 0x348
0x00000000000c9b92 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013c1c6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064133 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00000000000a9e64 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e86 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000741da : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000076b8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007eed3 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d6396 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000110abe : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000110abd : sbb byte ptr [rax + 0x39], r9b ; retf 0x840f
0x00000000001435b0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007d397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x0000000000074496 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000013be22 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013d82d : sbb byte ptr [rax + 1], cl ; ret
0x0000000000113298 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00000000001275fd : sbb byte ptr [rax + 3], bh ; syscall
0x000000000012dc50 : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000000c92b2 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000024368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000073e63 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x00000000000dd5fa : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007e42b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x000000000014290c : sbb byte ptr [rax - 0x77], cl ; out 0x49, eax ; mov esp, esp ; call 0x8f3b9
0x000000000007b161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4397 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f003a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00000000000891d6 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000b5c9f : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000087adb : sbb byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000007c7c2 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000007c7e7 : sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x00000000000f2db1 : sbb byte ptr [rax - 0x77], cl ; sbb al, ch ; out dx, al ; retf 0xfff2
0x0000000000073f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000000b22ba : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000078b09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c9b93 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f90d6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009490e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000084387 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009490d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000001b0b18 : sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000cae69 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d87f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001bc6c7 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc71f : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x000000000007b9af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013c1c7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000ea821 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000019d415 : sbb byte ptr [rax], al ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rdx]
0x000000000019d385 : sbb byte ptr [rax], al ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x0000000000148d3a : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000064134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000773e6 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a9e65 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e87 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000019d384 : sbb byte ptr [rax], r8b ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x000000000013e958 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000012c7fa : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000137e61 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x000000000019dbb8 : sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x0000000000021859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000110abb : sbb byte ptr [rbx + 0x39481846], cl ; retf 0x840f
0x00000000000f6e72 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000076b04 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009f44d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000076ba7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012cb04 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000003b177 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000194f10 : sbb byte ptr [rbx + rdi*8 - 1], 0xd0 ; pop rbp ; sti ; jmp qword ptr [rax]
0x000000000007c887 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012fe8e : sbb byte ptr [rbx - 0x76bbf712], al ; retf
0x00000000001b0d58 : sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000000d948e : sbb byte ptr [rcx + 0x39], al ; retf
0x000000000009eb5f : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000072bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000013cfcc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00000000000ec10e : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x0000000000081a66 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00000000000ceef6 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ad3b0 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad668 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000038382 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000000750c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ad918 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000779c5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2dbe : sbb byte ptr [rcx + rcx*4 - 0x29], cl ; call 0x1f8ae
0x0000000000082f13 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000daed3 : sbb byte ptr [rcx - 0x17fbdbbc], cl ; retf
0x00000000000d948a : sbb byte ptr [rcx - 0x3f], al ; sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x000000000009e8fe : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000744d3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x00000000000741db : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000000b9b5c : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ac721 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001956ec : sbb byte ptr [rcx], 0xfc ; call rax
0x00000000000fbacc : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f0034 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf007c
0x00000000000fcbd1 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000e926e : sbb byte ptr [rcx], al ; retf 0xeae9
0x00000000000d4f62 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000045a08 : sbb byte ptr [rcx], cl ; retf 0xbe0f
0x0000000000075117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117918 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000016366d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001af9d8 : sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000006b318 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013ab88 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013c35e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000312c9 : sbb byte ptr [rdi], cl ; retf
0x000000000012db28 : sbb byte ptr [rdi], cl ; retf 0x5389
0x00000000000346df : sbb byte ptr [rdi], cl ; retf 0xc90f
0x0000000000033e52 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012e358 : sbb byte ptr [rdi], cl ; test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000019e408 : sbb byte ptr [rdx - 0x17], bh ; jmp qword ptr [rcx]
0x0000000000002057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x000000000017435c : sbb byte ptr [rip + 0x1740025], ah ; ret
0x00000000001899bc : sbb byte ptr [rip + 0x518fff5], al ; cmc ; call rax
0x00000000001899c8 : sbb byte ptr [rip + 0x518fff5], al ; cmc ; jmp rax
0x0000000000189a40 : sbb byte ptr [rip + 0x580fff5], al ; cmc ; call rax
0x00000000001099d2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000001099d1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000004b78c : sbb byte ptr [rsi], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a6d08 : sbb ch, bl ; out dx, al ; jmp qword ptr [rsi]
0x0000000000140ecd : sbb ch, byte ptr [rax] ; add bl, dh ; ret
0x00000000001a2c91 : sbb ch, ch ; call rdx
0x00000000000de09f : sbb ch, cl ; retf 0
0x00000000000d4f5f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001b2ac9 : sbb cl, bh ; jmp qword ptr [rsi]
0x000000000012f9f2 : sbb cl, byte ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; retf
0x00000000000f65be : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000129423 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000001108fd : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000a68bf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014584d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001479bd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014543d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144f49 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145759 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b96a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b18a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014b57a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad9a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014851d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001451cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001474dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014550d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145829 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014af39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001458f9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014803d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014781d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146ffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001481dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001456ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144e9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000014529d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b42a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac4a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014577d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000144f6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014733d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014500f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014536d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000147473 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148173 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b32b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bc5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001484b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001477b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001472d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fd3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b47b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ac9b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145033 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000110950 : sbb cl, ch ; retf
0x00000000000649f5 : sbb cl, ch ; retf 0xffed
0x00000000001100e3 : sbb dh, dh ; ret 0x7508
0x00000000000034ce : sbb dl, 0xcd ; retf
0x00000000001ace08 : sbb dl, bl ; jmp qword ptr [rcx]
0x0000000000148c78 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d5973 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x0000000000105de6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00000000001403b4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000148c01 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c79 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000107bc4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000929fe : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010d8b7 : sbb dword ptr [rax], ecx ; add byte ptr [rbp + 0x31], al ; leave ; call 0x12a398
0x000000000010d8b6 : sbb dword ptr [rax], ecx ; add byte ptr [rbp + 0x31], al ; leave ; call 0x12a399
0x00000000000cd9d5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000000aad2e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x0000000000116273 : sbb dword ptr [rbx + rax], edi ; ret
0x00000000001852dd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000098781 : sbb dword ptr [rcx + 0x38], eax ; retf 0xd174
0x0000000000123efa : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000001075ba : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000a7fde : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x000000000016cc0c : sbb eax, -1 ; ret
0x0000000000115b64 : sbb eax, 0 ; leave ; ret
0x0000000000047062 : sbb eax, 0x1476d4 ; mov rax, rbx ; pop rbx ; ret
0x00000000001956f9 : sbb eax, 0x1ec0fffc ; cld ; call qword ptr [rax]
0x0000000000174320 : sbb eax, 0x25241b ; jne 0x174310 ; pop rbx ; ret
0x0000000000109561 : sbb eax, 0x2bacda ; pop rbx ; ret
0x0000000000183d33 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x0000000000194ecd : sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x00000000000fba4b : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x00000000000a6949 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000113322 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a809d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000001ad84d : sbb eax, 0x66a00001 ; stc ; call qword ptr [rax]
0x00000000001079e3 : sbb eax, 0x7500002c ; adc ecx, dword ptr [rcx - 0x77] ; retf 0xe8b8
0x0000000000039955 : sbb eax, 0x854d0005 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105e6a : sbb eax, 0x888cc ; mov rax, rbx ; pop rbx ; ret
0x0000000000110be5 : sbb eax, 0x89000001 ; ret 0x8944
0x00000000001487dd : sbb eax, 0x894d0000 ; retf
0x0000000000121a2a : sbb eax, 0xb8fb6348 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000002cae : sbb eax, 0xe9a3d0b9 ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x0000000000127c1b : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x000000000012786a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x0000000000148a21 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a99 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000101831 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000043e33 : sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x00000000000927ae : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000172854 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x0000000000107e91 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000133060 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000d71e6 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004846a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d7230 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00000000001234d8 : sbb eax, eax ; ret
0x0000000000172315 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000184e48 : sbb ebp, ebx ; retf
0x00000000000d5d23 : sbb ebp, ecx ; ret
0x000000000013e4e2 : sbb ebp, ecx ; retf
0x00000000000bbaa7 : sbb ebx, 0x89000001 ; ret
0x0000000000181e45 : sbb ebx, ebp ; jmp qword ptr [rdi]
0x0000000000181e41 : sbb ebx, ebp ; ljmp [rcx] ; sbb ebx, ebp ; jmp qword ptr [rdi]
0x0000000000102d8b : sbb ebx, ecx ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000194e85 : sbb ebx, edi ; call rax
0x00000000000fef75 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x000000000014055f : sbb ecx, dword ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000054d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012cc91 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000000381f : sbb ecx, dword ptr [rdi - 0x7229c81] ; mov gs, word ptr [rbx] ; retf 0x707d
0x00000000001751aa : sbb edi, dword ptr [rax + 3] ; syscall
0x0000000000125954 : sbb edi, dword ptr [rcx] ; ret
0x0000000000184bd9 : sbb edi, ebp ; retf
0x0000000000199c49 : sbb edi, esi ; call rsp
0x0000000000195731 : sbb edi, esp ; call qword ptr [rax - 0x1f0003e4]
0x000000000006bd01 : sbb edx, 3 ; sub rdx, r12 ; syscall
0x000000000019b079 : sbb edx, edi ; jmp rsp
0x00000000001aadc9 : sbb edx, esi ; jmp qword ptr [rcx]
0x000000000003bab9 : sbb esi, dword ptr [rcx + 0x38] ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000000025df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x00000000001158de : sbb esi, ebx ; ret
0x00000000001a90e9 : sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000000dc5e4 : sbb esi, esi ; ret
0x0000000000174321 : sbb esp, dword ptr [0x5be17500] ; ret
0x00000000001956ed : sbb esp, edi ; call rax
0x000000000016cc0b : sbb rax, -1 ; ret
0x000000000006bd00 : sbb rdx, 3 ; sub rdx, r12 ; syscall
0x000000000014c8bf : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014c5bf : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014d4bf : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001469a2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d4d57 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001a697d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a69ad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x000000000008e3dd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014d7bf : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014b9be : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000013366e : scasb al, byte ptr [rdi] ; cdq ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xffee
0x000000000018a8a8 : scasb al, byte ptr [rdi] ; jns 0x18a8a4 ; jmp qword ptr [rdx]
0x000000000018a8b0 : scasb al, byte ptr [rdi] ; jns 0x18a8ac ; jmp qword ptr [rdx]
0x000000000018a94c : scasb al, byte ptr [rdi] ; jns 0x18a948 ; jmp qword ptr [rdx]
0x0000000000111115 : scasb al, byte ptr [rdi] ; loope 0x111125 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000014cebf : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000185289 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000014cbbf : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x00000000000ad5c6 : scasb al, byte ptr [rdi] ; push -0x38b6ffcf ; ret 0xffff
0x0000000000182638 : scasb al, byte ptr [rdi] ; push rsi ; in al, dx ; call rax
0x0000000000001d40 : scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000000779be : scasb al, byte ptr [rdi] ; retf 1
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018871c : scasb al, byte ptr [rdi] ; test ebx, esi ; jmp rax
0x000000000014babd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000dde02 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf
0x00000000001a6af5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x1a6aff ; stc ; call qword ptr [rax]
0x00000000001a6b25 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x000000000007b5d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x000000000008de7d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000197729 : scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x0000000000104916 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x104924 ; call rbx
0x0000000000104908 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001048fa : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104908 ; call rbx
0x0000000000188b1d : scasd eax, dword ptr [rdi] ; jmp rcx
0x000000000011938f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x000000000009d4ee : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000037300 : scasd eax, dword ptr [rdi] ; ret
0x000000000007407c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000aa9fe : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000872a8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000aa9e9 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000037290 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000033e54 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000001096fd : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000001735f5 : scasd eax, dword ptr [rdi] ; ret 0xffea
0x0000000000101603 : scasd eax, dword ptr [rdi] ; retf
0x0000000000108fdc : scasd eax, dword ptr [rdi] ; retf 0x34c
0x0000000000109701 : scasd eax, dword ptr [rdi] ; retf 0xc148
0x000000000010a223 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000138ec4 : scasd eax, dword ptr [rdi] ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138ed9 ; ret
0x0000000000002bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x0000000000183fb4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000000025ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000018322f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000088740 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x0000000000109a05 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000f8b48 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000114aac : setae al ; ret
0x000000000003041d : setae byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c75b8 : setbe al ; movzx eax, al ; pop rbx ; ret
0x000000000010a6e0 : setbe al ; ret
0x000000000012aff8 : sete al ; add rsp, 8 ; ret
0x000000000013aa94 : sete al ; movzx eax, al ; ret
0x000000000002df35 : sete al ; ret
0x0000000000052ef0 : setg byte ptr [rbx] ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000000d5b99 : setg dl ; jmp 0xd5b22
0x00000000000ac17a : setl al ; movzx eax, al ; neg eax ; ret
0x0000000000136e5c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ea9db : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x000000000006b349 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000ea9bd : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000102574 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035f26 : setne al ; movzx eax, al ; ret
0x000000000007305c : setne al ; neg eax ; ret
0x00000000000773e8 : setne al ; ret
0x00000000000aebda : setne dl ; jmp 0xaebea
0x00000000000b14fb : setne dl ; jmp 0xb150a
0x00000000000b3cb2 : setne dl ; jmp 0xb3cca
0x0000000000096005 : sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1d2 : sgdt [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026553 : sgdt [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000002cb0 : shl byte ptr [rbx - 0x79ac2f17], 1 ; retf 0xd04f
0x000000000016342d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000195744 : shl byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x00000000000aa29f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000034853 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000089d3b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000170903 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000089ca5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016f9bb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016f9d2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000008d566 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d577 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000009efe8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000016f8b1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ad810 : shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x000000000017e230 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000183b3d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x0000000000194fe8 : shl dword ptr [rbp + rdi*8 - 0x25aae01], 1 ; call rcx
0x0000000000194ff0 : shl dword ptr [rbp - 0x59ae0003], 1 ; std ; jmp rcx
0x0000000000194fe0 : shl dword ptr [rbx - 0x5bae0003], 1 ; std ; call rcx
0x0000000000194fd8 : shl dword ptr [rcx - 0x5d2e0003], 1 ; std ; call rcx
0x000000000013776c : shl dword ptr [rcx], 1 ; retf 0xe281
0x0000000000183e28 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000000aa282 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x0000000000089d3f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000ab06b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x00000000000ac2f9 : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x000000000008d562 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000aa0fb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000016f936 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f9ed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f9d6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f9bf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e47b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f951 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e93c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009f228 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000016f811 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fec7d : shl dword ptr [rsi - 0x70], cl ; mov rdi, r13 ; call 0x8b728
0x0000000000045a24 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000012415a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000036083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000048a2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048986 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000094a91 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000208f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000e7a02 : shl edx, 2 ; call 0x94475
0x00000000001179d6 : shl edx, 2 ; jmp 0x94475
0x00000000000e3563 : shl esi, 2 ; call 0x1f7f5
0x0000000000123feb : shl esi, 4 ; lea eax, [rsi + 8] ; ret
0x000000000012418c : shl esi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000048a2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048985 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000036082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x00000000000e7a01 : shl rdx, 2 ; call 0x94476
0x00000000001179d5 : shl rdx, 2 ; jmp 0x94476
0x00000000000e3562 : shl rsi, 2 ; call 0x1f7f6
0x000000000012418b : shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000187e48 : shr ah, 0xf1 ; call rax
0x0000000000187e4c : shr ah, 1 ; int1 ; jmp rax
0x0000000000088d36 : shr al, 0x34 ; retf 0xfffc
0x00000000000fa5d8 : shr al, 0x52 ; retf 0xffff
0x00000000000facc9 : shr al, 0x61 ; ret
0x0000000000112705 : shr al, 0x65 ; ret
0x00000000001126b3 : shr al, 0xb7 ; ret
0x0000000000111f7b : shr al, 0xef ; retf 0xffff
0x0000000000187dac : shr al, 0xf1 ; jmp rax
0x00000000001833e4 : shr al, cl ; add al, 0x3d ; retf
0x0000000000114a26 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000143e11 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c84bf : shr bl, cl ; ret
0x0000000000047a2e : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000018b098 : shr byte ptr [rax], 0xfa ; push rax ; sub dl, bh ; jmp rax
0x00000000000bd5ee : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c222f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000196378 : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x000000000009f80f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b9f4f : shr byte ptr [rcx], 1 ; ret
0x0000000000110bc6 : shr byte ptr [rcx], 1 ; retf 0xeec1
0x0000000000110b4e : shr byte ptr [rcx], 1 ; retf 0xefc1
0x0000000000194eac : shr byte ptr [rcx], 1 ; sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000029ae8 : shr byte ptr [rcx], cl ; ret
0x000000000008eceb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000f8b4d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001b0ad0 : shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001851e7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000187e74 : shr ch, 0xf1 ; jmp rax
0x0000000000186c79 : shr ch, cl ; jmp qword ptr [rax]
0x0000000000186c75 : shr ch, cl ; ljmp [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x000000000009e5ca : shr cl, 0xd6 ; in eax, 0xff ; dec dword ptr [rbp - 0x77] ; retf 0x894c
0x0000000000187dcc : shr cl, 0xf1 ; jmp rax
0x000000000004510c : shr cl, 1 ; retf
0x00000000000bc33b : shr cl, 1 ; retf 0xfffb
0x0000000000044ac0 : shr cl, cl ; ret
0x00000000001447a1 : shr cl, cl ; retf 0xfffd
0x0000000000187ebc : shr dh, 0xf1 ; call rax
0x0000000000187ec0 : shr dh, 1 ; int1 ; jmp rax
0x0000000000195524 : shr dh, 1 ; sti ; jmp qword ptr [rax]
0x0000000000187dec : shr dl, 0xf1 ; jmp rax
0x000000000019500c : shr dword ptr [rcx - 0x55b10003], 1 ; std ; jmp rsi
0x00000000000c7080 : shr dword ptr [rcx], 1 ; ret
0x00000000001a9470 : shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x0000000000119438 : shr eax, 0x18 ; ret
0x0000000000034b91 : shr eax, 0x1f ; ret
0x000000000017087c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x17088f ; xor eax, eax ; ret
0x00000000000347c0 : shr eax, 0x3f ; ret
0x0000000000107568 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000aac1a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000114a27 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000d72e5 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x0000000000077f02 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000124160 : shr eax, 4 ; ret
0x0000000000077f12 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000aabf9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000035f3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000010a47b : shr eax, cl ; and eax, 1 ; ret
0x00000000000de1c9 : shr ecx, 1 ; retf
0x0000000000142fe1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000035f97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048b3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000ca7b6 : shr ecx, cl ; ret
0x00000000000d81fc : shr ecx, cl ; retf 0xfffd
0x0000000000072e73 : shr edx, 2 ; sub eax, edx ; ret
0x000000000013c6fa : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000759b0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000075aa0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002da79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x0000000000048b3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000347bf : shr rax, 0x3f ; ret
0x0000000000107567 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000012415f : shr rax, 4 ; ret
0x0000000000072e72 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000013c6f9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000009ea91 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, [rdi + 4] ; ret
0x000000000009ea01 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009970e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009bd2c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000107553 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017d409 : sldt word ptr [rax] ; ret
0x00000000000e0ff1 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f95
0x000000000011e2e2 : stc ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012e35b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000146957 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001ab4b5 : stc ; add byte ptr [rax], al ; call 0xffffffffcc1aa725
0x000000000003ad27 : stc ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000123c31 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x000000000012786c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001a6afa : stc ; call qword ptr [rax]
0x00000000000ad91e : stc ; call rbx
0x000000000019aa22 : stc ; call rsp
0x000000000010de51 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012ac02 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000f90bc : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000088376 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f3522 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000f4b63 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000b4c43 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000896bf : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000f8f22 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000f9602 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000002c9bf : stc ; dec dword ptr [rdi] ; retf 0xd88
0x000000000019ae62 : stc ; inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019acca : stc ; inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x000000000000366f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001aa589 : stc ; int1 ; call rsi
0x000000000014aa72 : stc ; je 0x14aa3e ; lea r10, [r10 + r9] ; jmp r10
0x000000000014c102 : stc ; je 0x14c0ce ; lea r10, [r10 + r9] ; jmp r10
0x00000000001b2aca : stc ; jmp qword ptr [rsi]
0x000000000003329d : stc ; jmp rcx
0x000000000019aa42 : stc ; jmp rsp
0x0000000000183ca4 : stc ; jnp 0x183c63 ; ret
0x000000000019aea2 : stc ; lcall [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000019ace2 : stc ; ljmp [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x0000000000153798 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000f6d39 : stc ; mov eax, 0x103 ; syscall
0x000000000013ce2b : stc ; mov eax, 3 ; syscall
0x000000000010b8d3 : stc ; mov esp, 0x8948002b ; ret 0x8d48
0x0000000000127af2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e97b : stc ; mov rax, rdi ; ret
0x00000000000fd9e6 : stc ; mov rdx, r12 ; mov rdi, rbx ; call 0x11a429
0x00000000000ef09f : stc ; or byte ptr [rax - 0x77], cl ; retf 0x830f
0x0000000000150577 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019aa3a : stc ; push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000048b7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000019ab0a : stc ; push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x0000000000059ac3 : stc ; retf
0x00000000000d9489 : stc ; sbb byte ptr [rcx - 0x3f], al ; sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x000000000010a47a : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000195585 : stc ; sti ; call qword ptr [rax]
0x0000000000140913 : stc ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000035425 : stc ; syscall
0x000000000009ffe4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008b3f5 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000046075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000cd98e : std ; add byte ptr [rax], al ; jne 0xcd961 ; ret
0x00000000000e7e52 : std ; add byte ptr [rcx], bh ; ret
0x00000000001950b6 : std ; call qword ptr [rax + 0x20fffda6]
0x0000000000194fca : std ; call qword ptr [rax]
0x000000000019cfca : std ; call qword ptr [rcx]
0x0000000000194fb2 : std ; call qword ptr [rdx]
0x0000000000195046 : std ; call qword ptr [rsi]
0x0000000000194fd6 : std ; call rcx
0x000000000019b9aa : std ; call rsp
0x00000000000f6431 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012e839 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000076a47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000019500e : std ; dec dword ptr [rsi - 0x56] ; std ; jmp rsi
0x000000000019b9a2 : std ; dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x0000000000003895 : std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x000000000003505d : std ; fstp st(1) ; ret
0x00000000001af3a9 : std ; hlt ; jmp qword ptr [rcx]
0x000000000007676f : std ; imul edi, ebp, 0x89c085ff ; ret
0x0000000000197971 : std ; in eax, dx ; call rsp
0x00000000001950c2 : std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x00000000001950b2 : std ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x000000000019b9da : std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001951ea : std ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951e6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951c6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x0000000000195116 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951ca : std ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019511a : std ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019520a : std ; inc ecx ; mov bh, 0xfd ; lcall [rax] ; fdivr st(3) ; jmp rax
0x0000000000187f99 : std ; int1 ; call qword ptr [rax]
0x0000000000187f7d : std ; int1 ; jmp qword ptr [rax]
0x0000000000187f95 : std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000006f58b : std ; je 0x6f59f ; mov eax, esi ; syscall
0x0000000000194fc6 : std ; jmp qword ptr [rax]
0x000000000019ccd2 : std ; jmp qword ptr [rdi]
0x000000000019c202 : std ; jmp qword ptr [rdx]
0x00000000001950c6 : std ; jmp rax
0x0000000000194ff6 : std ; jmp rcx
0x0000000000194fb6 : std ; jmp rdx
0x0000000000195012 : std ; jmp rsi
0x00000000001a4d82 : std ; jmp rsp
0x000000000019520e : std ; lcall [rax] ; fdivr st(3) ; jmp rax
0x0000000000187cda : std ; lcall [rax] ; ret 0xfffd
0x0000000000187cea : std ; lcall [rax] ; retf
0x00000000000f718f : std ; mov eax, 0x101 ; syscall
0x00000000000c83a6 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000079b0c : std ; mov eax, 3 ; syscall
0x0000000000152fbb : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000001950be : std ; push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195042 : std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x0000000000100eef : std ; ret 0xfffc
0x0000000000184bda : std ; retf
0x0000000000102da7 : std ; retf 0xfff1
0x00000000000aebd9 : std ; setne dl ; jmp 0xaebeb
0x00000000000b14fa : std ; setne dl ; jmp 0xb150b
0x00000000000b3cb1 : std ; setne dl ; jmp 0xb3ccb
0x0000000000051341 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000084112 : std ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000001035e0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000005a6d8 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000003c47b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x0000000000194f52 : sti ; call qword ptr [rax + 0x10fffb74]
0x0000000000194f5a : sti ; call qword ptr [rax + 0x10fffb77]
0x0000000000194f62 : sti ; call qword ptr [rax + 0x10fffb7a]
0x0000000000194f6a : sti ; call qword ptr [rax + 0x10fffb7d]
0x0000000000194f72 : sti ; call qword ptr [rax + 0x10fffb80]
0x0000000000194f7a : sti ; call qword ptr [rax + 0x10fffb83]
0x0000000000194f82 : sti ; call qword ptr [rax + 0x10fffb86]
0x0000000000195566 : sti ; call qword ptr [rax - 0x1f000410]
0x0000000000195512 : sti ; call qword ptr [rax - 0x1f000417]
0x0000000000195386 : sti ; call qword ptr [rax - 0x1f00042e]
0x000000000019539a : sti ; call qword ptr [rax - 0x1f00043c]
0x0000000000194f42 : sti ; call qword ptr [rax - 0x1f000493]
0x0000000000081059 : sti ; call qword ptr [rax]
0x0000000000194e12 : sti ; call rax
0x00000000001b5fda : sti ; call rcx
0x00000000001b64aa : sti ; call rsi
0x000000000019b89a : sti ; call rsp
0x00000000000bea6e : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cdec0 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dcdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000007f42e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000006d361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000019a2a9 : sti ; idiv edi ; insb byte ptr [rdi], dx ; retf 1
0x000000000019a2a1 : sti ; idiv edi ; push rsp ; retf 1
0x000000000019522a : sti ; inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x0000000000194eea : sti ; inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000194f3e : sti ; inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000195472 : sti ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000194e32 : sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000195562 : sti ; inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000019526a : sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195266 : sti ; inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195296 : sti ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000195316 : sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195572 : sti ; inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x000000000019551e : sti ; inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x00000000001953a6 : sti ; inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195352 : sti ; inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194f0e : sti ; inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195382 : sti ; inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195396 : sti ; inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x0000000000195226 : sti ; inc dword ptr [rax - 0x7f00041d] ; in eax, 0xfb ; call qword ptr [rax]
0x0000000000194e22 : sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000195492 : sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194e8a : sti ; inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x0000000000194e7a : sti ; inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194eca : sti ; inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000194ef2 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000195582 : sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x000000000019552e : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018a4f8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000194e72 : sti ; jmp qword ptr [rax]
0x00000000001bafaa : sti ; jmp qword ptr [rdx]
0x000000000018c5f2 : sti ; jmp rax
0x00000000000d6f8b : sti ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001953ce : sti ; ljmp [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000153398 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000fc7e3 : sti ; mov eax, 0x10 ; syscall
0x00000000000fd6a4 : sti ; mov eax, 0x10e ; syscall
0x000000000010761f : sti ; mov eax, 0x119 ; syscall
0x00000000000fc2c7 : sti ; mov eax, 0x11d ; syscall
0x00000000001088c0 : sti ; mov eax, 0x120 ; syscall
0x00000000000fd098 : sti ; mov eax, 0x127 ; syscall
0x00000000000fd148 : sti ; mov eax, 0x128 ; syscall
0x000000000010896e : sti ; mov eax, 0x12b ; syscall
0x0000000000108a16 : sti ; mov eax, 0x133 ; syscall
0x0000000000108437 : sti ; mov eax, 0x2c ; syscall
0x00000000001082b7 : sti ; mov eax, 0x2d ; syscall
0x00000000000cc0c3 : sti ; mov eax, 0x3d ; syscall
0x00000000000f7763 : sti ; mov eax, 0x48 ; syscall
0x00000000000c8121 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000029d4f : sti ; mov eax, 3 ; syscall
0x00000000001158aa : sti ; mov eax, ecx ; syscall
0x0000000000121def : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000009e95d : sti ; mov rax, rdi ; ret
0x00000000000e8c09 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000011cfea : sti ; or dword ptr [rdi], ecx ; ret
0x000000000011ce19 : sti ; or dword ptr [rdi], ecx ; retf
0x0000000000194e8e : sti ; push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194eae : sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000194f4a : sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000194e2e : sti ; push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000195312 : sti ; push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001952ae : sti ; push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x000000000019532e : sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019552a : sti ; push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019557e : sti ; push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e6e : sti ; push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954f2 : sti ; push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194e1e : sti ; push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194ece : sti ; push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x00000000001952b2 : sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000194ea6 : sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x00000000001952ce : sti ; push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x00000000001952ba : sti ; push rax ; fdiv st(3), st(0) ; call rax
0x00000000001952d2 : sti ; push rax ; fdivr st(3) ; call rax
0x0000000000195336 : sti ; push rax ; fsincos ; call rax
0x0000000000195392 : sti ; push rax ; sar ebx, 0xff ; ret
0x0000000000194e7e : sti ; push rax ; sbb bl, bh ; jmp rax
0x0000000000183e2a : sti ; ret
0x0000000000042316 : sti ; ret 0xffbf
0x00000000000d948d : sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x000000000019afc9 : sti ; stc ; jmp rsp
0x0000000000127c1d : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00000000000452c0 : sti ; syscall
0x000000000002c377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x0000000000102830 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000002314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00000000000f006c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000123622 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001974dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x197539 ; in eax, dx ; jmp rsp
0x0000000000188b29 : stosb byte ptr [rdi], al ; call qword ptr [rax]
0x0000000000188ae9 : stosb byte ptr [rdi], al ; call rsp
0x00000000001961b9 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001962f5 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962f1 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000196175 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x0000000000184304 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001044fa : stosb byte ptr [rdi], al ; mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000047a30 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000011e71b : stosb byte ptr [rdi], al ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000ac882 : stosb byte ptr [rdi], al ; pop rdx ; or al, 0 ; ret
0x0000000000002317 : stosb byte ptr [rdi], al ; ret
0x00000000000615d8 : stosb byte ptr [rdi], al ; retf
0x000000000000366e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000195011 : stosb byte ptr [rdi], al ; std ; jmp rsi
0x0000000000083b72 : stosb byte ptr [rdi], al ; sysenter
0x00000000001a6675 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; js 0x1a66f0 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6725 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a671f ; jmp qword ptr [rdx]
0x00000000001b6655 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; call 0xffffffffd21b5d92
0x0000000000196171 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000196369 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x000000000019622d : stosd dword ptr [rdi], eax ; cld ; call rdx
0x0000000000196229 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x00000000001961ad : stosd dword ptr [rdi], eax ; cld ; jmp rsi
0x0000000000075d81 : stosd dword ptr [rdi], eax ; cmp eax, 0x85480000 ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000123e2a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00000000000b5880 : stosd dword ptr [rdi], eax ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x0000000000035f9c : stosd dword ptr [rdi], eax ; ret
0x000000000018530a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x00000000001048f9 : stosd dword ptr [rdi], eax ; scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104909 ; call rbx
0x0000000000123e29 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9b : stosq qword ptr [rdi], rax ; ret
0x00000000001857f1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001956b5 : sub ah, bh ; call qword ptr [rax]
0x00000000001955d1 : sub ah, bh ; call rax
0x0000000000195591 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00000000001955b1 : sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000186a28 : sub ah, byte ptr [rbx - 0x13] ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x00000000001aef98 : sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000021973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x00000000001b8698 : sub al, 0 ; add byte ptr [rax], al ; retf
0x00000000001083d7 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000101fc3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fdf9f : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe32b : sub al, 0 ; lea rax, [rip + 0x2c8c64] ; ret
0x00000000000fe16b : sub al, 0 ; lea rax, [rip + 0x2c8e24] ; ret
0x00000000000ff337 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001025e5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fe4f9 : sub al, 0 ; mov rdx, rax ; jmp 0xfe493
0x0000000000101f6f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000ff8d6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff5bc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f39 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe172 : sub al, 0 ; ret
0x00000000000fc578 : sub al, 0x24 ; syscall
0x00000000001882c8 : sub al, 0x29 ; bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x000000000019e564 : sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; jl 0x19e55b ; jmp qword ptr [rsi]
0x00000000000abc02 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000d6bcc : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000001b0964 : sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000195a10 : sub al, 0x51 ; cld ; call rdx
0x00000000001b1164 : sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x0000000000003cc5 : sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001b2a64 : sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000abc05 : sub al, 0x75 ; pop rax ; ret
0x00000000000d7ac9 : sub al, 0x83 ; ret 0x4801
0x00000000000bbcf9 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000016f003 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009dac6 : sub al, 0xf ; mov dh, 0x45 ; ret
0x000000000009bb82 : sub al, 0xf ; mov dh, 0x55 ; ret
0x0000000000127c1e : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x0000000000101b6f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000adf8e : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019bc64 : sub al, 1 ; add byte ptr [rax], al ; call 0x1119a4c0
0x0000000000107f21 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001ae80d : sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x000000000019afdd : sub al, 2 ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001bc064 : sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x000000000019e5bd : sub al, byte ptr [rax] ; add al, al ; jg 0x19e5b2 ; jmp rsp
0x000000000019e595 : sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58a ; jmp rsp
0x000000000011b8ca : sub al, byte ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; retf
0x0000000000033ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000010812a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011a78f : sub al, byte ptr [rax] ; add ecx, ebp ; retf
0x0000000000120693 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011feb6 : sub al, byte ptr [rax] ; call rax
0x0000000000120fd5 : sub al, byte ptr [rax] ; ret
0x000000000012833e : sub al, byte ptr [rax] ; test eax, eax ; je 0x12834e ; ret
0x000000000005c6b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x0000000000035302 : sub al, byte ptr [rcx + rdi] ; test eax, eax ; jne 0x35319 ; ret
0x00000000001ae60d : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004c4e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e35b1 : sub al, ch ; int1 ; ret 0xfff3
0x00000000000fa057 : sub al, ch ; ret
0x0000000000033635 : sub al, ch ; ret 0xfffe
0x000000000003cc50 : sub al, ch ; retf 0xd5
0x00000000000e703b : sub al, ch ; retf 0xf38b
0x0000000000033ed8 : sub al, ch ; retf 0xfeb9
0x0000000000100eed : sub al, ch ; std ; ret 0xfffc
0x000000000005a7b4 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000195659 : sub bh, ah ; call rax
0x00000000001aeda8 : sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000195595 : sub bh, ah ; jmp rax
0x00000000001956b9 : sub bh, ah ; push rax ; sub edi, esp ; jmp rax
0x000000000007206c : sub bh, bh ; loopne 0x72009 ; mov eax, 0xffffffff ; ret
0x00000000001a7d71 : sub bh, dl ; call qword ptr [rdi]
0x0000000000194ea9 : sub bl, bh ; call rax
0x00000000000abbf6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000076b95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000741de : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000013c191 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000142d77 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000013bec1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000056770 : sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000f5c37 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000076b96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000001216e4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x000000000013591e : sub byte ptr [rax + 1], bh ; ret
0x00000000000741df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x000000000010163a : sub byte ptr [rax + 3], bh ; syscall
0x000000000013c192 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000084fb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000132588 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000032a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f9e61 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000896c5 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f8f27 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000073f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006d20c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000008df0d : sub byte ptr [rax - 0x77], cl ; retf
0x0000000000096de3 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x0000000000089362 : sub byte ptr [rax - 0x77], cl ; retf 0x8d48
0x00000000000713f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000e2dc4 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000eef90 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000002aca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x0000000000005638 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000fba94 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001bcc0c : sub byte ptr [rax], al ; add byte ptr [rax], al ; test al, 3 ; add byte ptr [rax], al ; retf
0x000000000019e405 : sub byte ptr [rax], al ; add byte ptr [rax], bl ; jp 0x19e3fa ; jmp qword ptr [rcx]
0x00000000001382f5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140915 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001953d0 : sub byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x0000000000138ec5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138ed8 ; ret
0x0000000000141891 : sub byte ptr [rax], al ; mov eax, r15d ; syscall
0x0000000000140ece : sub byte ptr [rax], al ; ret
0x000000000013dd74 : sub byte ptr [rax], al ; test eax, eax ; je 0x13dd88 ; xor eax, eax ; ret
0x0000000000140ea8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x140ec1 ; xor eax, eax ; pop rbx ; ret
0x00000000001443b4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443c8 ; xor eax, eax ; ret
0x00000000001443e4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443f8 ; xor eax, eax ; ret
0x0000000000144414 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144428 ; xor eax, eax ; ret
0x0000000000144444 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144458 ; xor eax, eax ; ret
0x0000000000144474 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144488 ; xor eax, eax ; ret
0x00000000001444a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1444b8 ; xor eax, eax ; ret
0x0000000000141aca : sub byte ptr [rax], al ; xor eax, eax ; syscall
0x0000000000140d79 : sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000140f27 : sub byte ptr [rax], r8b ; call qword ptr [rax]
0x00000000000abbfa : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abbf9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001b0838 : sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000000206bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044c97 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000001434f3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000001434f2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000013be13 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000013be43 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000001b3c08 : sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000000abbf7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001bc704 : sub byte ptr [rcx + rax + 0x1c6], bl ; retf 0x503
0x00000000000819a9 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000013c217 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cc5ac : sub byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000001154fd : sub byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000008162a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000d9367 : sub byte ptr [rcx - 0x17bfdbbc], cl ; call rax
0x0000000000033500 : sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x000000000002a27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000e3ec9 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000fd0f4 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000762f2 : sub byte ptr [rcx], al ; jmp 0x762c4
0x000000000013bec2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000850e0 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000012e7ec : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001b0a58 : sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000012dc66 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000aed82 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x000000000004c66f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001ac2fa : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a8e5a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x00000000001abdda : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 2 ; retf
0x00000000001b0938 : sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000189a50 : sub byte ptr [rsi], al ; cmc ; call qword ptr [rcx]
0x00000000001af918 : sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000002c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000195520 : sub ch, 0xfb ; call rax
0x00000000001afd19 : sub ch, dh ; jmp qword ptr [rbx]
0x0000000000034b32 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x0000000000034e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x0000000000034931 : sub cl, al ; ret
0x00000000001aa588 : sub cl, bh ; int1 ; call rsi
0x0000000000082765 : sub cl, byte ptr [rax + 0x39] ; retf
0x00000000000d17ed : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000099565 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00000000000662c8 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007a8a5 : sub cl, ch ; ret 0xfffe
0x000000000010e74c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10e71a
0x000000000004bcd0 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000104c2d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac9e4 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001af438 : sub dh, bh ; hlt ; jmp rdi
0x00000000001882cd : sub dh, dl ; call qword ptr [rax]
0x00000000001882c5 : sub dh, dl ; ljmp [rcx + rbp] ; bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x00000000001aeb38 : sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000018b0a1 : sub dl, bh ; call qword ptr [rax]
0x000000000018b09d : sub dl, bh ; jmp rax
0x000000000018b099 : sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x000000000019f701 : sub dl, ch ; jmp rax
0x0000000000188309 : sub dl, dh ; call rdi
0x00000000001841ad : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x00000000000fe939 : sub dword ptr [rax - 0x76b3df07], eax ; retf 0x2674
0x000000000011b7f3 : sub dword ptr [rax - 0x76b7ffd6], esp ; ret 0x8d48
0x00000000001085a1 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000064324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000012c5bd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000128775 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128789 ; ret
0x000000000013821c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012ddb5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001289f5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b8c6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012c5a4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12c5b6 ; ret
0x00000000000762f0 : sub dword ptr [rbx + 0x28], 1 ; jmp 0x762c6
0x0000000000184e42 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x0000000000188ae4 : sub dword ptr [rbx - 0x55b6000d], edi ; call rsp
0x0000000000168af3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000011142a : sub dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; retf 0x4864
0x00000000001ae51d : sub dword ptr [rcx], eax ; add byte ptr [rax], al ; retf 0xfff4
0x0000000000101d7a : sub dword ptr [rcx], ecx ; add byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x000000000014366e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001515e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1515fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151737 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15174d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151887 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15189d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151ddd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151f2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152067 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15207d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1521cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15231d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152457 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15246d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1525bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15270d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15285d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154107 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15411d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154257 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15426d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1543bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15450d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154647 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15465d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154797 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1547ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1548fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154a4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154b9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154ced ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154e3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1550dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15522d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15699d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ad7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156aed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156edd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157017 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15702d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157167 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15717d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1572cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157407 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15741d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157557 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15756d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1576bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15780d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157947 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15795d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x157aad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157be7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x157bfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151543 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015153f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000066500 : sub dword ptr [rdi], ecx ; test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1de4 : sub dword ptr [rdi], ecx ; test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001515ed : sub dword ptr [rdi], esp ; jmp r9
0x0000000000170659 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000145d27 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000016f7e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000145be1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000001856fa : sub dword ptr [rsi], 0x76 ; retf
0x0000000000138316 : sub eax, -0x80 ; add rsp, 8 ; ret
0x00000000000850b9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013bf9a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7af5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000e8495 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x00000000000822d2 : sub eax, 0x39480108 ; ret
0x000000000012b022 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea695 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034ba9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000056841 : sub eax, 0x83000000 ; ret
0x00000000000989bd : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bc6bb : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x00000000001336e4 : sub eax, 0x8948f631 ; out 0x89, eax ; ret
0x00000000000ed46d : sub eax, 0x9cdee ; call 0x39767
0x00000000000efb49 : sub eax, 0xbe0f4800 ; retf 0x4864
0x000000000005b48c : sub eax, 0xe9000000 ; retf
0x0000000000182e46 : sub eax, 0xea4ca798 ; retf
0x000000000000288d : sub eax, 0xeeef33a1 ; retf 0x182c
0x000000000013748e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ce094 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000009751a : sub eax, 1 ; jne 0x97517 ; pop rbx ; pop rbp ; ret
0x000000000002a6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004846f : sub eax, 1 ; ret
0x000000000011539e : sub eax, dword ptr [r8] ; cmp rdx, rax ; jne 0x115389 ; ret
0x0000000000109633 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010b9ca : sub eax, dword ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; retf
0x0000000000109626 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010809a : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000115202 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000109718 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000011539f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x115388 ; ret
0x00000000001095b2 : sub eax, dword ptr [rax] ; je 0x1095bd ; pop rbp ; ret
0x000000000010a345 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000109c1d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000115aec : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000109564 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000114ae4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114af8 ; xor eax, eax ; ret
0x0000000000114b14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b28 ; xor eax, eax ; ret
0x0000000000114b44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b58 ; xor eax, eax ; ret
0x0000000000114b74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b88 ; xor eax, eax ; ret
0x0000000000114ba4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114bb8 ; xor eax, eax ; ret
0x0000000000114bd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114be8 ; xor eax, eax ; ret
0x0000000000114c04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c18 ; xor eax, eax ; ret
0x0000000000114c34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c48 ; xor eax, eax ; ret
0x0000000000114c64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c78 ; xor eax, eax ; ret
0x0000000000114c94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ca8 ; xor eax, eax ; ret
0x0000000000114cc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114cd8 ; xor eax, eax ; ret
0x0000000000114cf4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d08 ; xor eax, eax ; ret
0x0000000000114d24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d38 ; xor eax, eax ; ret
0x0000000000114d54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d68 ; xor eax, eax ; ret
0x0000000000114d84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d98 ; xor eax, eax ; ret
0x0000000000114db4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114dc8 ; xor eax, eax ; ret
0x0000000000114de4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114df8 ; xor eax, eax ; ret
0x0000000000114e14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e28 ; xor eax, eax ; ret
0x0000000000114e44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e58 ; xor eax, eax ; ret
0x0000000000114e74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e88 ; xor eax, eax ; ret
0x0000000000114ed4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ee8 ; xor eax, eax ; ret
0x0000000000114f04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f18 ; xor eax, eax ; ret
0x0000000000114f34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f48 ; xor eax, eax ; ret
0x0000000000114f64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f78 ; xor eax, eax ; ret
0x0000000000114f94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114fa8 ; xor eax, eax ; ret
0x0000000000114fc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114fd8 ; xor eax, eax ; ret
0x0000000000114ff4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115008 ; xor eax, eax ; ret
0x0000000000115024 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115038 ; xor eax, eax ; ret
0x0000000000115054 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115068 ; xor eax, eax ; ret
0x0000000000115575 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x115587 ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004bc80 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000aadc1 : sub eax, dword ptr [rcx + r8*4] ; je 0xaada7 ; ret
0x00000000000aadc2 : sub eax, dword ptr [rcx + rax*4] ; je 0xaada6 ; ret
0x000000000019b9d5 : sub eax, dword ptr [rcx] ; add ah, ah ; ret 0xfffd
0x0000000000108913 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007d0be : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000000774d5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000773c5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000011953c : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x00000000000734f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000aad7a : sub eax, dword ptr [rdx + rcx*4] ; je 0xaad66 ; ret
0x000000000019afc5 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x000000000007c863 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000115aeb : sub eax, dword ptr es:[rax] ; pop rbp ; ret
0x0000000000110bfc : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014a64e : sub eax, eax ; ret
0x000000000007b6dd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad15b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007c019 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x000000000004a13d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008b12c : sub eax, ecx ; ret
0x000000000008b8b9 : sub eax, edi ; ret
0x0000000000110b8f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000003a639 : sub eax, edx ; ret
0x0000000000034b8f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000347bd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000172ae7 : sub eax, edx ; vzeroupper ; ret
0x000000000007b7fa : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078fb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110bfb : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000018409e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000006df3b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000182b35 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000b9e1c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194ead : sub ebx, edi ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000035f94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000049125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a6601 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d9642 : sub ecx, eax ; add rdx, rcx ; jmp 0xd95e0
0x00000000000aaf8c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000009eb06 : sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000194eb1 : sub edi, ebx ; call qword ptr [rax]
0x0000000000002fa2 : sub edi, esi ; retf 0x54f7
0x0000000000195639 : sub edi, esp ; call qword ptr [rax]
0x0000000000195619 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x00000000001956bd : sub edi, esp ; jmp rax
0x000000000007c890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013a1c3 : sub edx, dword ptr [rbp + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008eb64 : sub edx, eax ; jbe 0x8eba7 ; add rax, rdi ; ret
0x000000000008eb74 : sub edx, eax ; jbe 0x8eba9 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000008eb84 : sub edx, eax ; jbe 0x8eba9 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000008eb94 : sub edx, eax ; jbe 0x8eba9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d311b : sub edx, eax ; jmp 0xd3134
0x0000000000003698 : sub edx, eax ; loope 0x36c2 ; retf 0x5038
0x0000000000034eff : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000034ebe : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00000000001a7d59 : sub edx, edi ; jmp qword ptr [rdi]
0x000000000019b159 : sub edx, edi ; jmp rsp
0x00000000001882c9 : sub edx, esi ; call qword ptr [rdi]
0x000000000018830d : sub edx, esi ; call rax
0x00000000001ab209 : sub edx, esi ; jmp qword ptr [rdi]
0x0000000000188295 : sub edx, esi ; jmp rax
0x00000000001057c1 : sub edx, esi ; mov eax, r12d ; syscall
0x0000000000074012 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000078774 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000006bd05 : sub edx, esp ; syscall
0x0000000000097382 : sub esi, 1 ; jne 0x97380 ; xor eax, eax ; pop rbx ; ret
0x000000000009742a : sub esi, 1 ; jne 0x97427 ; xor eax, eax ; ret
0x0000000000123c0e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000142c3a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a5f11 : sub esi, ebp ; jmp qword ptr [rdi]
0x00000000000fce34 : sub esi, ebx ; ret
0x00000000001ab289 : sub esi, edx ; jmp rcx
0x000000000009c24e : sub esi, edx ; mov r10d, dword ptr [rax + rsi*4] ; jmp 0x98cef
0x00000000000f6e70 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c30e : sub esp, -0x80 ; pop rbx ; ret
0x00000000001413aa : sub esp, 0x178 ; syscall
0x00000000000fc692 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000105e9d : sub esp, 0x60 ; syscall
0x0000000000088e18 : sub esp, 0x80 ; call 0x115088
0x00000000000c867d : sub esp, 0x80 ; call 0x1150b8
0x00000000000c7feb : sub esp, 0x98 ; syscall
0x00000000000fd8de : sub esp, 0xa8 ; syscall
0x000000000012bf39 : sub esp, 8 ; call 0x138235
0x000000000009f480 : sub esp, 8 ; call 0x8b725
0x00000000000c88e6 : sub esp, 8 ; syscall
0x00000000001955b5 : sub esp, edi ; call rax
0x0000000000195635 : sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195655 : sub esp, edi ; push rax ; sub bh, ah ; call rax
0x00000000000762ef : sub qword ptr [rbx + 0x28], 1 ; jmp 0x762c7
0x00000000000d311a : sub r10, rax ; jmp 0xd3135
0x000000000010e74b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e71b
0x0000000000114ae3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114af9 ; xor eax, eax ; ret
0x0000000000114b13 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114b29 ; xor eax, eax ; ret
0x000000000007c018 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000115201 : sub r8d, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114f33 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114f49 ; xor eax, eax ; ret
0x0000000000114f63 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114f79 ; xor eax, eax ; ret
0x0000000000114f93 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114fa9 ; xor eax, eax ; ret
0x0000000000114fc3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114fd9 ; xor eax, eax ; ret
0x0000000000114ff3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x115009 ; xor eax, eax ; ret
0x0000000000115023 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x115039 ; xor eax, eax ; ret
0x0000000000115053 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x115069 ; xor eax, eax ; ret
0x0000000000138315 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000822d1 : sub rax, 0x39480108 ; ret
0x0000000000097519 : sub rax, 1 ; jne 0x97518 ; pop rbx ; pop rbp ; ret
0x00000000000aa4d3 : sub rax, 1 ; ret
0x0000000000114b43 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b59 ; xor eax, eax ; ret
0x0000000000114b73 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b89 ; xor eax, eax ; ret
0x0000000000114ba3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114bb9 ; xor eax, eax ; ret
0x0000000000114bd3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114be9 ; xor eax, eax ; ret
0x0000000000114c03 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114c19 ; xor eax, eax ; ret
0x0000000000114d53 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d69 ; xor eax, eax ; ret
0x0000000000114d83 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d99 ; xor eax, eax ; ret
0x0000000000114db3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114dc9 ; xor eax, eax ; ret
0x0000000000114de3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114df9 ; xor eax, eax ; ret
0x0000000000114e13 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114e29 ; xor eax, eax ; ret
0x0000000000114c33 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c49 ; xor eax, eax ; ret
0x0000000000114c63 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c79 ; xor eax, eax ; ret
0x0000000000114c93 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ca9 ; xor eax, eax ; ret
0x0000000000114cc3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114cd9 ; xor eax, eax ; ret
0x0000000000114cf3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114d09 ; xor eax, eax ; ret
0x0000000000114d23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114d39 ; xor eax, eax ; ret
0x0000000000114e43 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114e59 ; xor eax, eax ; ret
0x0000000000114e73 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114e89 ; xor eax, eax ; ret
0x0000000000114ed3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ee9 ; xor eax, eax ; ret
0x0000000000114f03 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114f19 ; xor eax, eax ; ret
0x000000000007d0bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000774d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000734f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000014a64d : sub rax, r8 ; ret
0x00000000000ad15a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008b8b8 : sub rax, rdi ; ret
0x000000000003a64d : sub rax, rdx ; ret
0x00000000000347bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000172ae6 : sub rax, rdx ; vzeroupper ; ret
0x00000000000d9641 : sub rcx, rax ; add rdx, rcx ; jmp 0xd95e1
0x00000000000aaf8b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000006bd04 : sub rdx, r12 ; syscall
0x000000000008eb63 : sub rdx, rax ; jbe 0x8eba8 ; add rax, rdi ; ret
0x00000000001057c0 : sub rdx, rsi ; mov eax, r12d ; syscall
0x0000000000074011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000078773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000097381 : sub rsi, 1 ; jne 0x97381 ; xor eax, eax ; pop rbx ; ret
0x0000000000097429 : sub rsi, 1 ; jne 0x97428 ; xor eax, eax ; ret
0x000000000009c24d : sub rsi, r10 ; mov r10d, dword ptr [rax + rsi*4] ; jmp 0x98cf0
0x00000000000f6e6f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c30d : sub rsp, -0x80 ; pop rbx ; ret
0x00000000001413a9 : sub rsp, 0x178 ; syscall
0x00000000000fc691 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000105e9c : sub rsp, 0x60 ; syscall
0x0000000000088e17 : sub rsp, 0x80 ; call 0x115089
0x00000000000c867c : sub rsp, 0x80 ; call 0x1150b9
0x00000000000c7fea : sub rsp, 0x98 ; syscall
0x00000000000fd8dd : sub rsp, 0xa8 ; syscall
0x000000000012bf38 : sub rsp, 8 ; call 0x138236
0x000000000012bf37 : sub rsp, 8 ; call 0x138237
0x000000000009f47f : sub rsp, 8 ; call 0x8b726
0x00000000000c88e5 : sub rsp, 8 ; syscall
0x00000000001956b4 : sub spl, dil ; call qword ptr [rax]
0x0000000000034890 : subps xmm0, xmm1 ; ret
0x000000000003488f : subsd xmm0, xmm1 ; ret
0x0000000000034c24 : subss xmm0, xmm1 ; ret
0x00000000000026bf : syscall
0x0000000000082f24 : sysenter
0x0000000000195c79 : test ah, bh ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e71 : test ah, bh ; call qword ptr [rax]
0x0000000000195d35 : test ah, bh ; call rdx
0x0000000000195d31 : test ah, bh ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x0000000000195cb5 : test ah, bh ; jmp rsi
0x00000000000bd9ef : test ah, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001492c8 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014a1c8 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000197928 : test ah, dh ; in eax, dx ; dec esp ; retf 0
0x00000000001490e8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000149fe8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x00000000001a6385 : test al, 0 ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a63fd : test al, 0 ; add byte ptr [rax + 0x4d], dl ; out dx, al ; call qword ptr [rax]
0x0000000000138377 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000132412 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000136b66 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000fd8e0 : test al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a3728 : test al, 0x3c ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3c98 : test al, 0x46 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000d9b48 : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000001bbf78 : test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001b1168 : test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x000000000009d398 : test al, 0x83 ; ret 0x4901
0x000000000018c19c : test al, 0x89 ; cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d581c : test al, 0x89 ; ret
0x00000000001ad9a8 : test al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x00000000001bb0a8 : test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001833f7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001ade98 : test al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x0000000000182dde : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x0000000000105a4f : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000003893 : test al, 0xc6 ; std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000189064 : test al, 0xcb ; inc dword ptr [rdx - 0x24] ; jmp rcx
0x00000000000ccfe0 : test al, 0xe8 ; ret 0xf528
0x0000000000023658 : test al, 0xe8 ; ret 0xffff
0x00000000000e95e7 : test al, 0xe9 ; retf 0xfffd
0x0000000000105b1b : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000ecfa3 : test al, 0xf ; xchg eax, esp ; ret
0x00000000000ac549 : test al, 0xf0 ; jne 0xac5a8 ; lea rax, [rdi - 0x10] ; ret
0x00000000000ac548 : test al, 0xf0 ; jne 0xac5a9 ; lea rax, [rdi - 0x10] ; ret
0x00000000001ae1f9 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001961c9 : test al, 0xfc ; call rsi
0x00000000001961c5 : test al, 0xfc ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000195045 : test al, 0xfd ; call qword ptr [rsi]
0x00000000001950c5 : test al, 0xfd ; jmp rax
0x00000000000f7676 : test al, 2 ; cmove eax, edx ; ret
0x00000000001bcc10 : test al, 3 ; add byte ptr [rax], al ; retf
0x00000000001bdf54 : test al, 8 ; add byte ptr [rax], al ; retf
0x0000000000074153 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000d7c7b : test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000066502 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009358c : test al, ah ; or eax, 0x894d0000 ; retf
0x000000000016342c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009eb82 : test al, al ; jne 0x9eb65 ; ret
0x000000000009ecc0 : test al, al ; jne 0x9eca6 ; xor eax, eax ; ret
0x000000000009f80a : test al, al ; jne 0x9f7f8 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000163d2c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000927ac : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019b798 : test al, bl ; cli ; jmp rsp
0x0000000000092e9c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000bd86b : test al, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x000000000007f414 : test bh, ah ; add al, 0 ; add dh, dh ; ret
0x00000000000b5843 : test bh, ah ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x0000000000185d04 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000111447 : test bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001256cc : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000006f0c4 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001841b1 : test bh, dl ; retf 0xdf7f
0x000000000019a0e8 : test bl, ah ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019a13c : test bl, al ; add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x000000000019a2a0 : test bl, bh ; idiv edi ; push rsp ; retf 1
0x000000000002def6 : test byte ptr [rax + 0x200], bh ; ret
0x00000000001255c3 : test byte ptr [rax + 0x39000003], al ; ret
0x00000000000cdcda : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001322e5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000003340d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000c525f : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00000000001358a5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000001157f2 : test byte ptr [rax + 0x63], 0xfa ; syscall
0x000000000010761c : test byte ptr [rax + 0x63], 0xfb ; mov eax, 0x119 ; syscall
0x00000000000fbb1b : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x118 ; syscall
0x00000000000fc26f : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x11d ; syscall
0x00000000000f7638 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x00000000000fcd16 : test byte ptr [rax + 0x63], 0xff ; mov eax, ecx ; syscall
0x000000000000075e : test byte ptr [rax + 0xa], cl ; add byte ptr [rdx], dl ; retf
0x0000000000068469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x0000000000148d38 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000011ce5a : test byte ptr [rax + rbx*2 + 1], 0x20 ; jne 0x11ce31 ; jmp 0x11cdfe
0x000000000012fb46 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000019a4e0 : test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000f403f : test byte ptr [rax - 0x14000002], ch ; retf 0x2e66
0x00000000000f6ad3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x000000000010588e : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x0000000000102ea1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000001035e4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000047059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x000000000012a50e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000013c0b9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000019ab38 : test byte ptr [rax - 7], bl ; jmp rsp
0x00000000001ab205 : test byte ptr [rax], 0 ; call 0x281aa43b
0x00000000001ab205 : test byte ptr [rax], 0 ; call 0x281aa43c
0x00000000001ab145 : test byte ptr [rax], 0 ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x000000000013e00b : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e3635 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011033f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000001d92 : test byte ptr [rax], ah ; mov al, 0x72 ; retf
0x00000000001643ec : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000077eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001439ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000170ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000168c8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a5d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000168cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a6d1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d723a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000168cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a6d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007cb3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000020589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000758ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006acca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001276ac : test byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x00000000000f6b41 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000164cec : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000163aec : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007f52b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019b19c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x00000000000963dc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001af3bc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af3c6 ; hlt ; jmp qword ptr [rcx]
0x0000000000097b29 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001982c4 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; in al, 0xfa ; out dx, eax ; call rsp
0x000000000009333c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000963f4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a58bc : test byte ptr [rbp + 0x1400000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000113d32 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x000000000006e536 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000149868 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019762c : test byte ptr [rbp - 0x6b4c0000], dh ; in eax, dx ; jmp rsp
0x00000000000b7c17 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000002646c : test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x000000000007550e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x000000000013e4f9 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00000000000663b8 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000007d776 : test byte ptr [rbp - 0xa000000], ch ; ret
0x000000000007e23f : test byte ptr [rbp - 0xa000000], dl ; ret
0x000000000011332c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x113398 ; xor eax, eax ; pop rbx ; ret
0x00000000000f3fd8 : test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20280
0x0000000000149a48 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f0cac : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x0000000000066c5c : test byte ptr [rbx - 0x76fffff7], dl ; retf
0x0000000000058397 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x00000000000af933 : test byte ptr [rbx], 0 ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000084bde : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000b5807 : test byte ptr [rbx], ah ; or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000842df : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001bd1ec : test byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000008676e : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000ecf0b : test byte ptr [rcx + 0x3dffffe4], ah ; retf 0
0x0000000000117a5c : test byte ptr [rcx + 0x480f7430], 0x39 ; retf 0xea75
0x000000000012429d : test byte ptr [rcx + 0x63], 0xff ; mov eax, 3 ; syscall
0x00000000000975ab : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x000000000011718f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000879cf : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000149c28 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x00000000000378b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000003dad1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00000000000ba563 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000133b14 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x00000000000358ae : test byte ptr [rcx + rcx*4 - 0x39], 0x44 ; mov eax, ecx ; syscall
0x0000000000033fcc : test byte ptr [rcx + rcx*4 - 1], 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000affb3 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000050302 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000102832 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000d9b92 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000c76ea : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000084607 : test byte ptr [rcx - 0xa000000], dl ; ret
0x000000000019b440 : test byte ptr [rcx - 6], ah ; call rsp
0x0000000000145036 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000022c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000150b36 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000145e16 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014fe46 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000145d26 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x000000000014fb66 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000122e40 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000149e08 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000000d1806 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005749b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x000000000004764e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000013840c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009d9da : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009d4ed : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x00000000001215b3 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000b6dfc : test byte ptr [rdi], 0x84 ; ret
0x0000000000102caa : test byte ptr [rdi], 0x84 ; ret 0
0x00000000000b239d : test byte ptr [rdi], 0x84 ; retf
0x00000000000cfdd2 : test byte ptr [rdi], 0x84 ; retf 0x12
0x00000000000b2baf : test byte ptr [rdi], 0x84 ; retf 2
0x0000000000024ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x00000000000ecfa9 : test byte ptr [rdi], 0x95 ; ret 0x3145
0x000000000005feba : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000077412 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077422 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a66a8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000009601c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096004 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1d1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000534ec : test byte ptr [rdi], dl ; add al, 0 ; add al, ch ; retf 0xfe39
0x00000000000d9567 : test byte ptr [rdi], dl ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf 0xb60f
0x000000000002de84 : test byte ptr [rdx + 0x200], al ; ret
0x00000000001b05bc : test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019afdc : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000007d9be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x0000000000148b58 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c47d1 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x000000000019ae64 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x0000000000120253 : test byte ptr [rdx], ch ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000662ca : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001acdbc : test byte ptr [rdx], dl ; add dword ptr [rax], eax ; rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000001341cc : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x0000000000110be4 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00000000000f0efe : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008b95d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000809d6 : test byte ptr [rsi + rax - 0x9bf0000], cl ; ret 0xf01
0x0000000000148f08 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000195c9c : test byte ptr [rsi - 0x79790004], 0xfc ; call qword ptr [rsi]
0x000000000009d4f9 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x0000000000032e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008b79d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000343b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af9bc : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000002b95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014c73e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014c43e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000014d63e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014cd3e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014d03e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019accc : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000012252e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x0000000000148978 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aabe2 : test ch, 0xf0 ; je 0xaabdb ; movzx eax, cl ; pop rbx ; ret
0x000000000002c4d6 : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x000000000019a6ac : test ch, ah ; add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x0000000000046074 : test ch, bh ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000001a4cb1 : test ch, ch ; call qword ptr [rdx]
0x00000000000c18fd : test ch, dh ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001487db : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x00000000000b2f54 : test cl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000012e35a : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000146956 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000150576 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000146776 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000150296 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008beb6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008c1b6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008d0b6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000146866 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008cdb6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x000000000008cab6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008c7b6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009c0f9 : test cl, ch ; retf
0x0000000000150ca6 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000dc5ca : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000146686 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012668b : test cl, cl ; jne 0x1265dc ; ret
0x000000000009eb28 : test cl, cl ; jne 0x9eb1d ; ret
0x000000000009ec67 : test cl, cl ; jne 0x9ec5e ; xor eax, eax ; ret
0x00000000000aa15f : test cl, cl ; jne 0xaa154 ; ret
0x00000000000aa20f : test cl, cl ; jne 0xaa204 ; ret
0x00000000000aa4cf : test cl, cl ; jne 0xaa4c8 ; sub rax, 1 ; ret
0x00000000000b5861 : test cl, cl ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000019ae68 : test cl, cl ; stc ; call rsp
0x00000000000aac0a : test dh, 0xf0 ; je 0xaabd9 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aac0a : test dh, 0xf0 ; je 0xaabdb ; movzx eax, dl ; pop rbx ; ret
0x00000000000f1de6 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001215b5 : test dh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000012e348 : test dh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000009ed20 : test dh, dh ; jne 0x9ed17 ; mov qword ptr [rdx], rcx ; ret
0x00000000000af932 : test dh, dh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000013ca65 : test dh, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000170964 : test dl, 0x40 ; jne 0x170929 ; lea rax, [rdi + 7] ; ret
0x0000000000170992 : test dl, 4 ; jne 0x170929 ; lea rax, [rdi + 3] ; ret
0x000000000008093f : test dl, al ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835d3 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000019a2b4 : test dl, cl ; add dword ptr [rax], eax ; and al, 0xfc ; idiv edi ; pushfq ; retf 1
0x0000000000033bd2 : test dl, dl ; jne 0x33bb4 ; ret
0x000000000009eae4 : test dl, dl ; jne 0x9eadd ; ret
0x00000000000aa37f : test dl, dl ; jne 0xaa378 ; lea rax, [rcx - 1] ; ret
0x00000000000d15fe : test dl, dl ; jne 0xd15e6 ; ret
0x000000000008f7f9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a69db : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a7eeb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a7deb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000c00b0 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x000000000006960e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x000000000005c8d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x00000000000e53a1 : test dword ptr [rax - 0x77000000], ecx ; retf 0xf631
0x0000000000174ad2 : test dword ptr [rax - 0x77], 0xe808244c ; retf
0x000000000005cd93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x000000000006f0c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000197fad : test dword ptr [rax], 0xef1f4400 ; jmp rsp
0x00000000001ab285 : test dword ptr [rax], 0xf22bf800 ; jmp rcx
0x00000000000d7799 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x0000000000085e53 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000055b89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000f6cd7 : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000085547 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000006589a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000085546 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000947cf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009f08e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000abb10 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ac438 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x0000000000168bd8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000168bb8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168ad0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a7fe0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016f2e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f736 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000e45f4 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000009eff8 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000007e600 : test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000001aca : test dword ptr [rbx], ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4f ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000003b4fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008eada : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008f510 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000001688da : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016f2bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a65c2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016f1cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f0dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abb57 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000172817 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000abb27 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000168c7a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000037b7e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000005d532 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000f2132 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000817f2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000045520 : test dword ptr [rcx], edi ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x000000000008f6fa : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000a6727 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a6707 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000035f23 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000945e5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000036106 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000a68c1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a7cc9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000170632 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f002 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000061a26 : test dword ptr [rdx + rdi*8 - 0x76b70001], edi ; retf 0x8948
0x000000000010364d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000003b9cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000168b97 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000001d3e : test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000000ac4dd : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x00000000001721a2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a66e5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a66c5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a65dd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000f56b8 : test dword ptr [rsi - 0x1600000d], ebx ; retf
0x000000000004cdbd : test dword ptr [rsi - 0x16000012], edx ; retf
0x00000000000037da : test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x00000000000948ce : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000d7783 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000016f508 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xfc78
0x000000000019b971 : test eax, 0x150cfffc ; add dword ptr [rax], eax ; retf 0xfffc
0x000000000018428d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000000cd3d3 : test eax, 0x39fffffe ; ret
0x0000000000138353 : test eax, 0x480028bb ; add esp, 8 ; ret
0x0000000000117bb7 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x00000000001974b5 : test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x00000000001a6445 : test eax, 0x4e380000 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a647d : test eax, 0x4ed00000 ; out dx, al ; call qword ptr [rdx]
0x00000000001850e0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000159036 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034c58 : test eax, 0x7fffff ; je 0x34c51 ; ret
0x00000000000659cf : test eax, 0x83000000 ; ret 0x8308
0x00000000000608fc : test eax, 0x89000007 ; ret 0x348
0x000000000008958c : test eax, 0x89480033 ; add al, 0x24 ; call qword ptr [rdx]
0x000000000019617d : test eax, 0xa940fffc ; cld ; call rax
0x0000000000196379 : test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000196239 : test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x000000000019500d : test eax, 0xaa4efffd ; std ; jmp rsi
0x0000000000188c85 : test eax, 0xbbfdfff3 ; jmp rax
0x000000000018a4f6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000001b64a5 : test eax, 0xe1f80001 ; sti ; call rsi
0x0000000000135033 : test eax, 0xebfffc28 ; retf
0x0000000000105fcf : test eax, eax ; cmove eax, edx ; ret
0x000000000003a6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000010541c : test eax, eax ; je 0x1054c0 ; call rax
0x0000000000105593 : test eax, eax ; je 0x105698 ; call rax
0x0000000000115578 : test eax, eax ; je 0x115584 ; ret
0x0000000000115870 : test eax, eax ; je 0x1158a4 ; call rax
0x000000000011769a : test eax, eax ; je 0x1176b0 ; add rsp, 8 ; ret
0x000000000011faa5 : test eax, eax ; je 0x11fab5 ; mov rdi, rbx ; call rax
0x000000000011fd9d : test eax, eax ; je 0x11fdad ; mov rdi, rbx ; call rax
0x0000000000128340 : test eax, eax ; je 0x12834c ; ret
0x000000000012b041 : test eax, eax ; je 0x12b02f ; xor eax, eax ; pop rbx ; ret
0x000000000012b881 : test eax, eax ; je 0x12b891 ; mov rdi, rsp ; call rax
0x000000000012b96c : test eax, eax ; je 0x12b97c ; mov rdi, rsp ; call rax
0x000000000012c222 : test eax, eax ; je 0x12c232 ; mov rdi, rbp ; call rax
0x000000000012c5a6 : test eax, eax ; je 0x12c5b4 ; ret
0x000000000012d2b3 : test eax, eax ; je 0x12d2c3 ; mov rdi, r14 ; call rax
0x000000000012d831 : test eax, eax ; je 0x12d846 ; xor eax, eax ; ret
0x0000000000132c48 : test eax, eax ; je 0x132c58 ; mov rdi, r12 ; call rax
0x0000000000132e29 : test eax, eax ; je 0x132e3b ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000134103 : test eax, eax ; je 0x134113 ; mov rdi, r13 ; call rax
0x00000000001342f6 : test eax, eax ; je 0x134306 ; mov rdi, rbp ; call rax
0x0000000000134516 : test eax, eax ; je 0x134526 ; mov rdi, rbp ; call rax
0x000000000013500d : test eax, eax ; je 0x13501f ; lea rdi, [rbx + 0x68] ; call rax
0x00000000001356b9 : test eax, eax ; je 0x1356c9 ; mov rdi, r12 ; call rax
0x0000000000135a2d : test eax, eax ; je 0x135a3f ; lea rdi, [rbx + 0x58] ; call rax
0x00000000001382b8 : test eax, eax ; je 0x13824a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013823d : test eax, eax ; je 0x13824d ; pop rbx ; ret
0x00000000001386ef : test eax, eax ; je 0x138708 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138fa9 : test eax, eax ; je 0x138fbb ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001396c2 : test eax, eax ; je 0x1396d4 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000013dd76 : test eax, eax ; je 0x13dd86 ; xor eax, eax ; ret
0x0000000000145a43 : test eax, eax ; je 0x145a4f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146a28 : test eax, eax ; je 0x146a34 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000173f7c : test eax, eax ; je 0x173f8b ; call rax
0x000000000002b023 : test eax, eax ; je 0x2b02d ; call rax
0x000000000002c379 : test eax, eax ; je 0x2c383 ; call rax
0x000000000007848d : test eax, eax ; je 0x7849d ; pop rbx ; ret
0x000000000007e072 : test eax, eax ; je 0x7e07c ; call rax
0x0000000000085569 : test eax, eax ; je 0x85573 ; call rax
0x000000000008b520 : test eax, eax ; je 0x8b538 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c758e : test eax, eax ; je 0xc75b0 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc39f : test eax, eax ; je 0xcc3a9 ; call rax
0x00000000000cc581 : test eax, eax ; je 0xcc58e ; call rax
0x00000000000fd3dc : test eax, eax ; je 0xfd3e7 ; ret
0x00000000000ff251 : test eax, eax ; je 0xff260 ; mov qword ptr [rax], rdx ; ret
0x00000000001073e2 : test eax, eax ; jl 0x10742b ; je 0x1073ef ; ret
0x0000000000114ab6 : test eax, eax ; jne 0x114ac9 ; mov eax, 1 ; ret
0x0000000000114ae6 : test eax, eax ; jne 0x114af6 ; xor eax, eax ; ret
0x0000000000114b16 : test eax, eax ; jne 0x114b26 ; xor eax, eax ; ret
0x0000000000114b46 : test eax, eax ; jne 0x114b56 ; xor eax, eax ; ret
0x0000000000114b76 : test eax, eax ; jne 0x114b86 ; xor eax, eax ; ret
0x0000000000114ba6 : test eax, eax ; jne 0x114bb6 ; xor eax, eax ; ret
0x0000000000114bd6 : test eax, eax ; jne 0x114be6 ; xor eax, eax ; ret
0x0000000000114c06 : test eax, eax ; jne 0x114c16 ; xor eax, eax ; ret
0x0000000000114c36 : test eax, eax ; jne 0x114c46 ; xor eax, eax ; ret
0x0000000000114c66 : test eax, eax ; jne 0x114c76 ; xor eax, eax ; ret
0x0000000000114c96 : test eax, eax ; jne 0x114ca6 ; xor eax, eax ; ret
0x0000000000114cc6 : test eax, eax ; jne 0x114cd6 ; xor eax, eax ; ret
0x0000000000114cf6 : test eax, eax ; jne 0x114d06 ; xor eax, eax ; ret
0x0000000000114d26 : test eax, eax ; jne 0x114d36 ; xor eax, eax ; ret
0x0000000000114d56 : test eax, eax ; jne 0x114d66 ; xor eax, eax ; ret
0x0000000000114d86 : test eax, eax ; jne 0x114d96 ; xor eax, eax ; ret
0x0000000000114db6 : test eax, eax ; jne 0x114dc6 ; xor eax, eax ; ret
0x0000000000114de6 : test eax, eax ; jne 0x114df6 ; xor eax, eax ; ret
0x0000000000114e16 : test eax, eax ; jne 0x114e26 ; xor eax, eax ; ret
0x0000000000114e46 : test eax, eax ; jne 0x114e56 ; xor eax, eax ; ret
0x0000000000114e76 : test eax, eax ; jne 0x114e86 ; xor eax, eax ; ret
0x0000000000114ed6 : test eax, eax ; jne 0x114ee6 ; xor eax, eax ; ret
0x0000000000114f06 : test eax, eax ; jne 0x114f16 ; xor eax, eax ; ret
0x0000000000114f36 : test eax, eax ; jne 0x114f46 ; xor eax, eax ; ret
0x0000000000114f66 : test eax, eax ; jne 0x114f76 ; xor eax, eax ; ret
0x0000000000114f96 : test eax, eax ; jne 0x114fa6 ; xor eax, eax ; ret
0x0000000000114fc6 : test eax, eax ; jne 0x114fd6 ; xor eax, eax ; ret
0x0000000000114ff6 : test eax, eax ; jne 0x115006 ; xor eax, eax ; ret
0x0000000000115026 : test eax, eax ; jne 0x115036 ; xor eax, eax ; ret
0x0000000000115056 : test eax, eax ; jne 0x115066 ; xor eax, eax ; ret
0x00000000001150a0 : test eax, eax ; jne 0x11509b ; pop rdx ; pop r10 ; ret
0x0000000000115193 : test eax, eax ; jne 0x1151a5 ; ret
0x0000000000115535 : test eax, eax ; jne 0x1154d9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000012877a : test eax, eax ; jne 0x128784 ; ret
0x0000000000133046 : test eax, eax ; jne 0x133054 ; ret
0x0000000000138f25 : test eax, eax ; jne 0x138f15 ; pop rbx ; ret
0x00000000001391a6 : test eax, eax ; jne 0x1391b4 ; ret
0x000000000013afd1 : test eax, eax ; jne 0x13af9f ; jmp 0x13afa7
0x0000000000140eaa : test eax, eax ; jne 0x140ebf ; xor eax, eax ; pop rbx ; ret
0x00000000001443b6 : test eax, eax ; jne 0x1443c6 ; xor eax, eax ; ret
0x00000000001443e6 : test eax, eax ; jne 0x1443f6 ; xor eax, eax ; ret
0x0000000000144416 : test eax, eax ; jne 0x144426 ; xor eax, eax ; ret
0x0000000000144446 : test eax, eax ; jne 0x144456 ; xor eax, eax ; ret
0x0000000000144476 : test eax, eax ; jne 0x144486 ; xor eax, eax ; ret
0x00000000001444a6 : test eax, eax ; jne 0x1444b6 ; xor eax, eax ; ret
0x00000000001444dd : test eax, eax ; jne 0x144500 ; mov eax, 0x27 ; syscall
0x0000000000174496 : test eax, eax ; jne 0x1744a5 ; ret
0x0000000000035306 : test eax, eax ; jne 0x35315 ; ret
0x000000000006acbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c844 : test eax, eax ; jne 0x7c83d ; ret
0x000000000007d8d5 : test eax, eax ; jne 0x7d90a ; xor edi, edi ; call qword ptr [r15]
0x00000000000895cf : test eax, eax ; jne 0x895c5 ; ret
0x000000000008d80c : test eax, eax ; jne 0x8d7d6 ; add rsp, 8 ; ret
0x000000000008d82f : test eax, eax ; jne 0x8d848 ; add rsp, 8 ; ret
0x000000000008eb17 : test eax, eax ; jne 0x8eb77 ; xor rax, rax ; ret
0x000000000009f0c8 : test eax, eax ; jne 0x9f146 ; xor eax, eax ; ret
0x00000000000ac621 : test eax, eax ; jne 0xac5f5 ; ret
0x00000000000ac6da : test eax, eax ; jne 0xac6d6 ; xor eax, eax ; ret
0x00000000000c9646 : test eax, eax ; jne 0xc9681 ; mov eax, 0x74 ; syscall
0x00000000000fe0ff : test eax, eax ; jne 0xfe0d7 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe2c0 : test eax, eax ; jne 0xfe297 ; xor eax, eax ; pop rbx ; ret
0x0000000000075adb : test eax, eax ; js 0x75aed ; ret
0x0000000000085816 : test eax, eax ; js 0x85825 ; ret
0x00000000000ac04d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xac021 ; ret
0x000000000012aff6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000000835dd : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000004baf5 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000086643 : test eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001983d1 : test eax, esi ; jmp rsp
0x00000000000aebd5 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebef
0x00000000000b14f6 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb150f
0x00000000000b3cad : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3ccf
0x00000000001b13b1 : test ebp, esi ; jmp rax
0x000000000008ea40 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000007815e : test ebx, ebx ; jne 0x78178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac736 : test ebx, ebx ; jne 0xac718 ; mov rax, rdi ; ret
0x0000000000174574 : test ebx, ebx ; mov rdx, rbx ; jne 0x174571 ; pop rbx ; ret
0x0000000000194f81 : test ebx, edi ; call qword ptr [rax + 0x10fffb86]
0x000000000018871d : test ebx, esi ; jmp rax
0x0000000000022d7a : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170952 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000002b394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x000000000006b458 : test ecx, ecx ; je 0x6b465 ; ret
0x00000000000ac60b : test ecx, ecx ; jne 0xac605 ; ret
0x00000000000ada89 : test ecx, ecx ; jne 0xada48 ; mov rax, rdx ; ret
0x00000000000aae13 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaae0f ; ret
0x000000000002423c : test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000878a0 : test edi, edi ; je 0x878b9 ; mov eax, 0x16 ; ret
0x000000000011fd81 : test edi, edi ; jne 0x11fd75 ; pop rbx ; ret
0x000000000017427b : test edi, edi ; jne 0x17426f ; pop rbx ; ret
0x0000000000119432 : test edi, edi ; js 0x119449 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001275fa : test edi, edi ; js 0x12761f ; mov eax, 3 ; syscall
0x0000000000127752 : test edi, edi ; js 0x12777b ; mov eax, 3 ; syscall
0x0000000000141c67 : test edi, edi ; js 0x141c86 ; mov eax, 3 ; syscall
0x00000000001751a7 : test edi, edi ; js 0x1751cf ; mov eax, 3 ; syscall
0x00000000000e45e5 : test edx, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x000000000012de40 : test edx, edx ; je 0x12de50 ; mov rdi, rbp ; call rdx
0x0000000000173e64 : test edx, edx ; je 0x173e6e ; call rdx
0x000000000007781a : test edx, edx ; je 0x77831 ; mov eax, 0xffffffff ; ret
0x0000000000077b9a : test edx, edx ; je 0x77bb1 ; mov eax, 0xffffffff ; ret
0x000000000008b752 : test edx, edx ; je 0x8b761 ; bsf eax, edx ; ret
0x000000000008b7fb : test edx, edx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x00000000000cc4f0 : test edx, edx ; je 0xcc4fd ; call rdx
0x00000000001153dd : test edx, edx ; jne 0x1153d9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000013c480 : test edx, edx ; jne 0x13c499 ; mov eax, 1 ; ret
0x000000000013c4c0 : test edx, edx ; jne 0x13c4d9 ; mov eax, 1 ; ret
0x0000000000071bff : test edx, edx ; jne 0x71bf5 ; ret
0x000000000007a393 : test edx, edx ; jne 0x7a3a4 ; ret
0x000000000007af3f : test edx, edx ; jne 0x7af35 ; ret
0x0000000000089679 : test edx, edx ; jne 0x89675 ; ret
0x00000000000adaca : test edx, edx ; jne 0xadac5 ; ret
0x00000000000ac94f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xac94f ; ret
0x00000000000bb24f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb250 ; ret
0x000000000003626a : test edx, edx ; sete al ; ret
0x0000000000170945 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000035403 : test esi, esi ; jne 0x35441 ; mov eax, 0xba ; syscall
0x000000000008b8c1 : test esi, esi ; jne 0x8b8d0 ; xor rax, rax ; ret
0x0000000000084ab7 : test esp, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000017095f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000195d29 : test esp, edi ; jmp qword ptr [rdx]
0x0000000000195c6d : test esp, edi ; jmp rax
0x0000000000061769 : test esp, esi ; retf 0xffff
0x00000000001ab284 : test qword ptr [rax], -0xdd40800 ; jmp rcx
0x0000000000036105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000ac735 : test r11d, r11d ; jne 0xac719 ; mov rax, rdi ; ret
0x000000000009eb81 : test r8b, r8b ; jne 0x9eb66 ; ret
0x000000000009ecbf : test r8b, r8b ; jne 0x9eca7 ; xor eax, eax ; ret
0x0000000000145a42 : test r8d, r8d ; je 0x145a50 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146a27 : test r8d, r8d ; je 0x146a35 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000ac620 : test r8d, r8d ; jne 0xac5f6 ; ret
0x00000000000ada88 : test r9d, r9d ; jne 0xada49 ; mov rax, rdx ; ret
0x000000000010541b : test rax, rax ; je 0x1054c1 ; call rax
0x0000000000105592 : test rax, rax ; je 0x105699 ; call rax
0x0000000000115577 : test rax, rax ; je 0x115585 ; ret
0x000000000011586f : test rax, rax ; je 0x1158a5 ; call rax
0x0000000000117699 : test rax, rax ; je 0x1176b1 ; add rsp, 8 ; ret
0x000000000011faa4 : test rax, rax ; je 0x11fab6 ; mov rdi, rbx ; call rax
0x000000000011fd9c : test rax, rax ; je 0x11fdae ; mov rdi, rbx ; call rax
0x000000000012b040 : test rax, rax ; je 0x12b030 ; xor eax, eax ; pop rbx ; ret
0x000000000012b880 : test rax, rax ; je 0x12b892 ; mov rdi, rsp ; call rax
0x000000000012b96b : test rax, rax ; je 0x12b97d ; mov rdi, rsp ; call rax
0x000000000012c221 : test rax, rax ; je 0x12c233 ; mov rdi, rbp ; call rax
0x000000000012d2b2 : test rax, rax ; je 0x12d2c4 ; mov rdi, r14 ; call rax
0x0000000000132c47 : test rax, rax ; je 0x132c59 ; mov rdi, r12 ; call rax
0x0000000000132e28 : test rax, rax ; je 0x132e3c ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000134102 : test rax, rax ; je 0x134114 ; mov rdi, r13 ; call rax
0x00000000001342f5 : test rax, rax ; je 0x134307 ; mov rdi, rbp ; call rax
0x0000000000134515 : test rax, rax ; je 0x134527 ; mov rdi, rbp ; call rax
0x000000000013500c : test rax, rax ; je 0x135020 ; lea rdi, [rbx + 0x68] ; call rax
0x00000000001356b8 : test rax, rax ; je 0x1356ca ; mov rdi, r12 ; call rax
0x0000000000135a2c : test rax, rax ; je 0x135a40 ; lea rdi, [rbx + 0x58] ; call rax
0x000000000013823c : test rax, rax ; je 0x13824e ; pop rbx ; ret
0x0000000000138fa8 : test rax, rax ; je 0x138fbc ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001396c1 : test rax, rax ; je 0x1396d5 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000173f7b : test rax, rax ; je 0x173f8c ; call rax
0x000000000002b022 : test rax, rax ; je 0x2b02e ; call rax
0x000000000002c378 : test rax, rax ; je 0x2c384 ; call rax
0x000000000007848c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x000000000007e071 : test rax, rax ; je 0x7e07d ; call rax
0x0000000000085568 : test rax, rax ; je 0x85574 ; call rax
0x000000000008b51f : test rax, rax ; je 0x8b539 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc39e : test rax, rax ; je 0xcc3aa ; call rax
0x00000000000cc580 : test rax, rax ; je 0xcc58f ; call rax
0x00000000000fd3db : test rax, rax ; je 0xfd3e8 ; ret
0x00000000000ff250 : test rax, rax ; je 0xff261 ; mov qword ptr [rax], rdx ; ret
0x00000000001073e1 : test rax, rax ; jl 0x10742c ; je 0x1073f0 ; ret
0x0000000000138f24 : test rax, rax ; jne 0x138f16 ; pop rbx ; ret
0x000000000007c843 : test rax, rax ; jne 0x7c83e ; ret
0x000000000007d8d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x00000000000895ce : test rax, rax ; jne 0x895c6 ; ret
0x00000000000fe0fe : test rax, rax ; jne 0xfe0d8 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe2bf : test rax, rax ; jne 0xfe298 ; xor eax, eax ; pop rbx ; ret
0x000000000007815d : test rbx, rbx ; jne 0x78179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x000000000011fd80 : test rdi, rdi ; jne 0x11fd76 ; pop rbx ; ret
0x000000000011fd7f : test rdi, rdi ; jne 0x11fd77 ; pop rbx ; ret
0x000000000017427a : test rdi, rdi ; jne 0x174270 ; pop rbx ; ret
0x000000000012de3f : test rdx, rdx ; je 0x12de51 ; mov rdi, rbp ; call rdx
0x0000000000173e63 : test rdx, rdx ; je 0x173e6f ; call rdx
0x000000000008b7fa : test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x00000000000cc4ef : test rdx, rdx ; je 0xcc4fe ; call rdx
0x0000000000071bfe : test rdx, rdx ; jne 0x71bf6 ; ret
0x000000000007a392 : test rdx, rdx ; jne 0x7a3a5 ; ret
0x000000000007af3e : test rdx, rdx ; jne 0x7af36 ; ret
0x0000000000089678 : test rdx, rdx ; jne 0x89676 ; ret
0x000000000008b8c0 : test rsi, rsi ; jne 0x8b8d1 ; xor rax, rax ; ret
0x000000000009ed1f : test sil, sil ; jne 0x9ed18 ; mov qword ptr [rdx], rcx ; ret
0x0000000000195d34 : test spl, dil ; call rdx
0x0000000000002b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000079945 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000009fb7a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000014de0a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014dd40 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014db09 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000000aa5d5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014dc4f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014da73 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dad6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000000aa5d9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009fb66 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fb4d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000aa5cb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa5cf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa5e4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000000aa5e8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000009fe83 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009fd1c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fb1e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000009fae2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009ffe5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000aa788 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000000aa6eb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000000aa58a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000014aa71 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000329d5 : vpsubsb xmm8, xmm15, xmmword ptr [rbp + rcx*4 + 5] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000991c4 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x0000000000172ae9 : vzeroupper ; ret
0x00000000001972a5 : wait ; add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000001adef9 : wait ; hlt ; jmp qword ptr [rcx]
0x000000000004d3d1 : wait ; imul esi, dword ptr [rdi], 0 ; call rax
0x000000000002cdd1 : wait ; jbe 0x2cde0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010a344 : wait ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007cc18 : wait ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a9d9d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9e1f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9f21 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bd4 : xabort -0xd ; ret
0x0000000000002bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x0000000000195d25 : xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x0000000000195ca1 : xchg ah, bh ; call qword ptr [rsi]
0x0000000000195e61 : xchg ah, bh ; call rax
0x0000000000195e5d : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195de1 : xchg ah, bh ; jmp rsp
0x000000000014584f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000188f0c : xchg ah, bl ; jmp qword ptr [rcx]
0x0000000000146073 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001479bf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014543f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000146163 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f83 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f4b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014575b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b96c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b18c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014b57c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad9c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d89d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a000 : xchg bl, al ; cmc ; call rdx
0x0000000000194f85 : xchg bl, bh ; call qword ptr [rax]
0x00000000000cdb38 : xchg bl, ch ; retf 0x1f0f
0x000000000014c3a1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014d5a1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cca1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cfa1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c699 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001469cb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000014851f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cff : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001451cf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001474df : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014550f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000146523 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000d02dc : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000e8127 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x000000000014582b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000107e01 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000014af3b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001458fb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014803f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145cb3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000014781f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146fff : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001481df : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001456af : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146703 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e93 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000144e9f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001a71f1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000010d104 : xchg byte ptr [rbx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000b889b : xchg byte ptr [rcx + 0x29], cl ; retf 0x8d48
0x000000000013f72c : xchg byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000002ebba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000001468e3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000e7562 : xchg byte ptr [rcx], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000014529f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000183fb5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000014b42c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac4c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd5c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000023d3a : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000014577f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001467f3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f6f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014733f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145011 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146135 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146225 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146045 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014536f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000001957b4 : xchg byte ptr [rsi - 4], bl ; call qword ptr [rsi]
0x000000000014c946 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147475 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148175 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d846 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf46 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc46 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000147c95 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b32d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c63e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bc5d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455df : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145da3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149ccf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aef : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4c7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493e7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2e7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015fd3f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001484b5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001477b5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001472d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fd5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b47d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000025b1 : xchg dh, ch ; ret 0x88ad
0x000000000014ac9d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145035 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000104acb : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000145f55 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d75 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e65 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c85 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000002cb5 : xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000000b9ba3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00000000000d3fe4 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000002f50f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000107761 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000002691b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000183fb8 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000042b9f : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000183b3f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000000624e9 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00000000000ac61f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005ef3b : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x000000000005744d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000681a5 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x0000000000182dac : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000008638c : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00000000000f67f1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000608fb : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x00000000000659ce : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x0000000000067897 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x000000000011509e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x11509d ; pop rdx ; pop r10 ; ret
0x00000000000f261b : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x0000000000060d6b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x00000000000671db : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x000000000015ba01 : xchg dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000182f4b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000149028 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000072a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007638f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000074f12 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000132aae : xchg eax, ebp ; cwde ; add byte ptr [rax], al ; add bl, ch ; retf 0x8b48
0x00000000001add41 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001a9ac9 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x0000000000183289 : xchg eax, ebp ; jge 0x18326c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000001eb3 : xchg eax, ebp ; mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x000000000005e8d8 : xchg eax, ebp ; mov rdi, r12 ; call 0x7b3a6
0x000000000007bf3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x000000000011ce62 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000002e197 : xchg eax, ebp ; pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000020d3 : xchg eax, ebp ; ret
0x00000000000b3cb3 : xchg eax, ebp ; ret 0x11eb
0x00000000000b1e74 : xchg eax, ebp ; ret 0x2041
0x00000000000b05c5 : xchg eax, ebp ; ret 0x294c
0x0000000000127848 : xchg eax, ebp ; ret 0x2c3c
0x00000000000ff96b : xchg eax, ebp ; ret 0x2f3c
0x00000000000ecfab : xchg eax, ebp ; ret 0x3145
0x00000000000bc04c : xchg eax, ebp ; ret 0x3840
0x000000000009eb65 : xchg eax, ebp ; ret 0x3941
0x000000000006d007 : xchg eax, ebp ; ret 0x5389
0x0000000000035de5 : xchg eax, ebp ; ret 0x5489
0x000000000012ac05 : xchg eax, ebp ; ret 0x8041
0x00000000000d9b17 : xchg eax, ebp ; ret 0x8341
0x00000000000826b0 : xchg eax, ebp ; ret 0x8348
0x00000000000975ae : xchg eax, ebp ; ret 0x8445
0x00000000000e071f : xchg eax, ebp ; ret 0x8488
0x0000000000047656 : xchg eax, ebp ; ret 0x854d
0x00000000000ba57e : xchg eax, ebp ; ret 0x8b4c
0x00000000000b14fc : xchg eax, ebp ; ret 0x8eb
0x000000000003dad6 : xchg eax, ebp ; ret 0x941
0x0000000000030b17 : xchg eax, ebp ; ret 0x953d
0x00000000000aebdb : xchg eax, ebp ; ret 0x9eb
0x00000000000ba731 : xchg eax, ebp ; ret 0xa8e9
0x0000000000098969 : xchg eax, ebp ; ret 0xb60f
0x00000000000ff9c4 : xchg eax, ebp ; ret 0xc084
0x0000000000047541 : xchg eax, ebp ; ret 0xc221
0x000000000003c3da : xchg eax, ebp ; ret 0xd348
0x0000000000036941 : xchg eax, ebp ; ret 0xd521
0x00000000000ba5dc : xchg eax, ebp ; ret 0xd721
0x0000000000045c3f : xchg eax, ebp ; ret 0xdaf7
0x00000000001247e5 : xchg eax, ebp ; ret 0xe083
0x00000000000ad2b1 : xchg eax, ebp ; ret 0xe883
0x00000000000bce0f : xchg eax, ebp ; ret 0xf748
0x000000000012786f : xchg eax, ebp ; ret 0xf980
0x00000000000ad59e : xchg eax, ebp ; ret 0xf983
0x0000000000127c20 : xchg eax, ebp ; ret 0xfb80
0x00000000000d9bed : xchg eax, ebp ; ret 0xfb83
0x0000000000003a79 : xchg eax, ebp ; retf 0x10bf
0x0000000000019108 : xchg eax, ebp ; retf 0x18
0x0000000000183b42 : xchg eax, ebp ; retf 0x33e6
0x0000000000136e5d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136ec6 ; ret
0x00000000000ff804 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ea9dc : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ea9be : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000136d5d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007305d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000061b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001bb341 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x0000000000002b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000184f9c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000081f56 : xchg eax, ebx ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000007b702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000081567 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000016e450 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003959 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000189fe9 : xchg eax, ebx ; cmc ; jmp qword ptr [rcx]
0x00000000001adb01 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000018592c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x00000000000a5bec : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001510f2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000184e43 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x184e1d
0x0000000000198219 : xchg eax, ebx ; out dx, eax ; call rsp
0x000000000009a6fa : xchg eax, ebx ; ret
0x00000000000b862e : xchg eax, ebx ; ret 0x14c
0x0000000000037380 : xchg eax, ebx ; ret 0x3948
0x0000000000037ecd : xchg eax, ebx ; ret 0x3949
0x0000000000074cef : xchg eax, ebx ; ret 0x840
0x00000000000383a1 : xchg eax, ebx ; ret 0x8548
0x0000000000072494 : xchg eax, ebx ; ret 0xd108
0x0000000000001eba : xchg eax, ebx ; retf
0x0000000000003a72 : xchg eax, ebx ; sbb al, 0xb ; push rbp ; jg 0x3ae9 ; xchg eax, ebp ; retf 0x10bf
0x00000000001a7b79 : xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000006c41c : xchg eax, ebx ; xor eax, 0x48b4800 ; ret 0x8548
0x000000000012e2ae : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x00000000000b5b4b : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000084608 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000063e48 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00000000000e1295 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x00000000001a9229 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001ada11 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001ada29 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x0000000000198e81 : xchg eax, ecx ; hlt ; jmp rsp
0x000000000008783b : xchg eax, ecx ; mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00000000001485c1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000065d5b : xchg eax, ecx ; mov rdi, r15 ; call 0x71fd6
0x00000000001981e9 : xchg eax, ecx ; out dx, eax ; jmp rsp
0x0000000000107ae3 : xchg eax, ecx ; ret
0x00000000000f3613 : xchg eax, ecx ; ret 0xfff2
0x0000000000019c60 : xchg eax, ecx ; retf
0x00000000000190f0 : xchg eax, ecx ; retf 0x18
0x0000000000146cef : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000809e1 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000d6b55 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8b4c
0x0000000000024aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000001a531d : xchg eax, edi ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000000f68bc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001998e5 : xchg eax, edi ; add dword ptr [rax], eax ; xchg eax, esp ; retf 0xfff6
0x00000000001832f5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1832c3 ; mov ecx, 0x5b92ac50 ; retf
0x00000000000ff335 : xchg eax, edi ; jge 0xff36d ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000115538 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000045f27 : xchg eax, edi ; ret 0x870f
0x00000000000b0aa4 : xchg eax, edi ; ret 0xd
0x00000000000d2b0d : xchg eax, edi ; ret 0xd008
0x00000000000f3fde : xchg eax, edi ; ret 0xfff2
0x0000000000076d15 : xchg eax, edi ; retf
0x0000000000001ea9 : xchg eax, edi ; retf 0x20f4
0x0000000000183c5d : xchg eax, edi ; retf 0xe152
0x00000000000cd89e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000109a06 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8b49 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000d85f6 : xchg eax, edi ; ror dword ptr [rdi], 0x92 ; ret 0xd138
0x00000000001bb0a9 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x0000000000184f9b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001833f8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000009563a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000061ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000001a4d7d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000007daba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006da0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000002c7cc : xchg eax, edx ; cmp dword ptr [rax], eax ; mov eax, ecx ; syscall
0x00000000001adae9 : xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001888c0 : xchg eax, edx ; ja 0x1888bd ; call qword ptr [rdx - 0x1b000c89]
0x00000000001888c4 : xchg eax, edx ; ja 0x1888bd ; jmp rsp
0x0000000000184cbd : xchg eax, edx ; jae 0x184c9a ; push rsi ; pop rdx ; je 0x184c8f ; ret 0xacfc
0x0000000000195f1c : xchg eax, edx ; jge 0x195f1e ; call qword ptr [rdx]
0x0000000000195f24 : xchg eax, edx ; jl 0x195f26 ; call qword ptr [rdx]
0x00000000001888c9 : xchg eax, edx ; jmp rsp
0x0000000000195f2c : xchg eax, edx ; jnp 0x195f2e ; call qword ptr [rdx]
0x0000000000195f3c : xchg eax, edx ; jns 0x195f3e ; call qword ptr [rdx]
0x0000000000195f34 : xchg eax, edx ; jp 0x195f36 ; call qword ptr [rdx]
0x0000000000196220 : xchg eax, edx ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x00000000000780ea : xchg eax, edx ; mov edx, eax ; jmp 0x78082
0x000000000019583c : xchg eax, edx ; pop rbp ; cld ; jmp qword ptr [rdx]
0x00000000001832fc : xchg eax, edx ; pop rbx ; retf
0x0000000000195a4c : xchg eax, edx ; push rcx ; cld ; jmp qword ptr [rdx]
0x000000000003cfc4 : xchg eax, edx ; ret 0x8348
0x00000000000f8b2e : xchg eax, edx ; ret 0x970f
0x000000000003d325 : xchg eax, edx ; ret 0xb60f
0x00000000000cd8a1 : xchg eax, edx ; ret 0xd029
0x00000000000d85f9 : xchg eax, edx ; ret 0xd138
0x000000000014a63d : xchg eax, edx ; ret 0xf40
0x0000000000182daf : xchg eax, edx ; ret 0xf869
0x00000000000f281a : xchg eax, edx ; retf
0x00000000001179da : xchg eax, edx ; retf 0xfff7
0x0000000000145a47 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000195d28 : xchg eax, edx ; test esp, edi ; jmp qword ptr [rdx]
0x000000000007e54c : xchg eax, esi ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000016e750 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a833 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000025ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000041e6c : xchg eax, esi ; add eax, dword ptr [rax] ; add al, ch ; retf
0x00000000000abc96 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x0000000000189ff1 : xchg eax, esi ; cmc ; jmp qword ptr [rbx]
0x00000000001850a8 : xchg eax, esi ; jnp 0x1850f7 ; retf 0x99e0
0x000000000016e80d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e76b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000196684 : xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x00000000000d7333 : xchg eax, esi ; pop rbx ; ret
0x0000000000033506 : xchg eax, esi ; ret
0x00000000000362cc : xchg eax, esi ; ret 0x394c
0x000000000008b374 : xchg eax, esi ; ret 0xc031
0x000000000018564c : xchg eax, esi ; ret 0xcd11
0x0000000000123c37 : xchg eax, esi ; ret 0xfb83
0x00000000000ed846 : xchg eax, esi ; retf 9
0x000000000016e7bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bea6d : xchg eax, esi ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000019cccc : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19ccd7 ; jmp qword ptr [rdi]
0x000000000019a3f0 : xchg eax, esp ; adc edi, eax ; call rsp
0x00000000000e07c4 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001b0acc : xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000e5cb6 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525c : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5bb4 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000e07c2 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000071867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019a904 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x0000000000198a6c : xchg eax, esp ; cmp eax, 0x32640001 ; jmp rsp
0x0000000000197631 : xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000196940 : xchg eax, esp ; jae 0x19692f ; jmp rsp
0x0000000000198628 : xchg eax, esp ; je 0x19861f ; jmp rsp
0x0000000000198ac8 : xchg eax, esp ; jmp rsp
0x0000000000197664 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x00000000001a73cc : xchg eax, esp ; mov eax, 0x1900000 ; out dx, eax ; jmp rsi
0x0000000000149c29 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000196aac : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa3 ; jmp rsp
0x00000000000d7301 : xchg eax, esp ; pop rbx ; ret
0x00000000001b0dcc : xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e4c ; cmc ; jmp qword ptr [rcx]
0x000000000018585f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857f0 ; ret 0x48f
0x000000000004727e : xchg eax, esp ; ret
0x00000000001a7dcc : xchg eax, esp ; ret 0
0x00000000000ed5a0 : xchg eax, esp ; ret 0x1589
0x00000000000b16b4 : xchg eax, esp ; ret 0x2041
0x00000000000b2d8d : xchg eax, esp ; ret 0x294c
0x00000000000e2dc9 : xchg eax, esp ; ret 0x2fe9
0x00000000000bbcfd : xchg eax, esp ; ret 0x3840
0x000000000009ec1e : xchg eax, esp ; ret 0x3941
0x0000000000124d87 : xchg eax, esp ; ret 0x3945
0x00000000000e3fbf : xchg eax, esp ; ret 0x3ae9
0x0000000000136d18 : xchg eax, esp ; ret 0x3d83
0x00000000000d8dd3 : xchg eax, esp ; ret 0x4422
0x00000000000edc9b : xchg eax, esp ; ret 0x5408
0x00000000000bbdca : xchg eax, esp ; ret 0x5438
0x0000000000059903 : xchg eax, esp ; ret 0x7f3c
0x00000000000817de : xchg eax, esp ; ret 0x82e9
0x0000000000046da9 : xchg eax, esp ; ret 0x8341
0x0000000000026ec5 : xchg eax, esp ; ret 0x8348
0x000000000011184d : xchg eax, esp ; ret 0x840
0x00000000000977a7 : xchg eax, esp ; ret 0x8440
0x00000000000aa965 : xchg eax, esp ; ret 0x8444
0x00000000000973d6 : xchg eax, esp ; ret 0x8445
0x000000000011d75c : xchg eax, esp ; ret 0x8545
0x00000000000e20ab : xchg eax, esp ; ret 0x854d
0x00000000000e0bba : xchg eax, esp ; ret 0x8941
0x00000000000e2af5 : xchg eax, esp ; ret 0x8949
0x0000000000020777 : xchg eax, esp ; ret 0x8d48
0x0000000000126d42 : xchg eax, esp ; ret 0x93c
0x000000000004c390 : xchg eax, esp ; ret 0x9522
0x00000000000e3f5b : xchg eax, esp ; ret 0x9848
0x000000000002f458 : xchg eax, esp ; ret 0xb60f
0x00000000000dbb71 : xchg eax, esp ; ret 0xc031
0x000000000011fa05 : xchg eax, esp ; ret 0xc085
0x00000000000e4efd : xchg eax, esp ; ret 0xc683
0x00000000000d9c5f : xchg eax, esp ; ret 0xd009
0x00000000000bbf62 : xchg eax, esp ; ret 0xd021
0x0000000000046dbe : xchg eax, esp ; ret 0xd084
0x00000000000fea33 : xchg eax, esp ; ret 0xd108
0x000000000002086c : xchg eax, esp ; ret 0xd284
0x000000000009ee1f : xchg eax, esp ; ret 0xd308
0x0000000000061a96 : xchg eax, esp ; ret 0xd309
0x00000000000e0bb2 : xchg eax, esp ; ret 0xd609
0x000000000006ffbc : xchg eax, esp ; ret 0xdaf7
0x00000000000ec6fd : xchg eax, esp ; ret 0xf0e9
0x000000000008b3f8 : xchg eax, esp ; ret 0xf201
0x00000000000e3ecf : xchg eax, esp ; ret 0xf44
0x000000000011d942 : xchg eax, esp ; ret 0xf741
0x00000000000aed84 : xchg eax, esp ; ret 0xf883
0x00000000000d2afc : xchg eax, esp ; ret 0xf983
0x00000000000523bf : xchg eax, esp ; ret 0xfa80
0x00000000000aa8c7 : xchg eax, esp ; ret 0xfd83
0x00000000000aa8e8 : xchg eax, esp ; ret 0xfe83
0x000000000019a0ec : xchg eax, esp ; ret 1
0x00000000001b86cc : xchg eax, esp ; retf
0x00000000001998e8 : xchg eax, esp ; retf 0xfff6
0x00000000000acd6c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000cec58 : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 6], 0x83 ; retf 0x8410
0x00000000000954d0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f895f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000453b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c359 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fea8a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000fea2e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000197728 : xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x000000000019a2a8 : xchg eax, esp ; sti ; idiv edi ; insb byte ptr [rdi], dx ; retf 1
0x00000000001bb429 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x0000000000140d78 : xchg eax, esp ; sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000019afc4 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000183283 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000001eb9 : xchg eax, r11d ; retf
0x0000000000113dce : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000008767a : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001b1449 : xchg ebp, esi ; jmp rax
0x00000000001bc1b9 : xchg ebx, edi ; call rcx
0x00000000001ac6c9 : xchg ebx, esi ; call qword ptr [rsi]
0x000000000011d16d : xchg ebx, esi ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000018879d : xchg ebx, esi ; lcall [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000019acd1 : xchg ecx, edi ; call rsp
0x0000000000101b2c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007f0c4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x00000000001020ac : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105ed1 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000047d65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000195c59 : xchg esp, edi ; call qword ptr [rax]
0x0000000000195e55 : xchg esp, edi ; jmp qword ptr [rax]
0x0000000000195d19 : xchg esp, edi ; jmp rdx
0x00000000000cdfef : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001ad7f1 : xchg esp, esi ; call qword ptr [rax]
0x00000000001ad7a9 : xchg esp, esi ; call qword ptr [rsi]
0x00000000001895a9 : xchg esp, esi ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000104b69 : xchg r10b, dil ; dec dword ptr [rax + 0x39] ; ret
0x0000000000074f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000001ada28 : xchg rax, rcx ; hlt ; jmp qword ptr [rsi]
0x0000000000195e60 : xchg spl, dil ; call rax
0x00000000000befe5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a931d : xlatb ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000180259 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000150fb9 : xlatb ; add r9, r11 ; jmp r9
0x00000000000f2dc1 : xlatb ; call 0x1f8ab
0x00000000000368be : xlatb ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000368af : xlatb ; cmp byte ptr [rax], al ; ret
0x0000000000002d43 : xlatb ; cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x00000000000026b7 : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x00000000000fce32 : xlatb ; ja 0xfce64 ; ret
0x00000000001151a9 : xlatb ; jmp rax
0x0000000000183e23 : xlatb ; jo 0x183e9f ; mov ebp, 0xfb67d10d ; ret
0x000000000004a772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x000000000003541d : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x00000000000fc572 : xlatb ; mov eax, ebx ; mov r13d, dword ptr fs:[r12] ; syscall
0x00000000000cc732 : xlatb ; mov eax, esi ; syscall
0x00000000000cc742 : xlatb ; mov eax, r8d ; syscall
0x0000000000123f76 : xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000183230 : xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001891a4 : xlatb ; push rax ; hlt ; jmp rcx
0x00000000001892c8 : xlatb ; push rbx ; hlt ; jmp rcx
0x0000000000089bf9 : xlatb ; ret
0x00000000001852c6 : xlatb ; ret 0x4e27
0x0000000000003268 : xlatb ; ret 0x5a51
0x000000000008d5c7 : xlatb ; ret 0x94c
0x000000000008e93f : xlatb ; ret 0xc085
0x0000000000089bf0 : xlatb ; ret 0xc148
0x000000000009f22b : xlatb ; ret 0xf188
0x000000000008b774 : xlatb ; ret 0xf66
0x0000000000089c8d : xlatb ; retf
0x00000000000ac452 : xlatb ; retf 0x8548
0x0000000000183284 : xlatb ; retf 0xa1eb
0x000000000008d6a4 : xlatb ; retf 0xc148
0x00000000001841b2 : xlatb ; retf 0xdf7f
0x0000000000089e60 : xlatb ; retf 0xead3
0x00000000000ac2fc : xlatb ; retf 0xf66
0x000000000006902e : xlatb ; retf 0xffff
0x00000000000966d1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000009f0c6 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000a605e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000170906 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009f024 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008b0c6 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008af86 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008ae46 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008ad06 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008abc6 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008aa86 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008a946 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008a806 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008a6c6 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008a586 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008a446 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008a306 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008a1c6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008a086 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000089f46 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000170902 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008d565 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d576 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001952b1 : xlatb ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952d1 : xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x000000000018830c : xlatb ; sub edx, esi ; call rax
0x00000000000f6443 : xlatb ; syscall
0x0000000000035f68 : xlatb ; xor eax, eax ; ret
0x0000000000195574 : xor ah, 0xfb ; call rax
0x00000000000a5858 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a57ee : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000025e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x0000000000115aea : xor ah, byte ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000187e0c : xor ah, ch ; int1 ; jmp rax
0x000000000013cd11 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000d7b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000007cc19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b8730 : xor al, 0 ; add byte ptr [rax], al ; cld ; retf
0x0000000000108181 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x000000000007cba6 : xor al, 0 ; add dword ptr [rip + 0x349bb5], 1 ; ret
0x000000000008194e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081864 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb15 : xor al, 0 ; ret
0x0000000000081a89 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x0000000000182daa : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000019a4a8 : xor al, 0x21 ; clc ; jmp rsp
0x000000000019f26c : xor al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x0000000000002051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000009f14b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x000000000019b2e0 : xor al, 0x53 ; cli ; call rsp
0x0000000000184e46 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000187bcc : xor al, 0x6e ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x000000000019b9a8 : xor al, 0x77 ; std ; call rsp
0x00000000000aac91 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000e5982 : xor al, 0x83 ; ret 0x4401
0x00000000000e79ff : xor al, 0x83 ; shl rdx, 2 ; call 0x94478
0x000000000019acd0 : xor al, 0x87 ; stc ; call rsp
0x00000000000e9023 : xor al, 0x89 ; ret 0x4489
0x000000000003295d : xor al, 0x89 ; ret 0x5525
0x00000000000aac59 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00000000000c52d4 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000c5262 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00000000001b716c : xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000000d7675 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd7658 ; mov edx, eax ; jmp 0xd7661
0x000000000006ca9f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x0000000000033410 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x000000000019add8 : xor al, 0xb7 ; stc ; call rsp
0x000000000019a0d4 : xor al, 0xc2 ; add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x0000000000062d7a : xor al, 0xc5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f7f8
0x0000000000183f8a : xor al, 0xd8 ; ret
0x00000000001a946c : xor al, 0xd9 ; add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x000000000019a8d0 : xor al, 0xd9 ; clc ; call rsp
0x000000000019bab0 : xor al, 0xdf ; std ; call rsp
0x0000000000186d5c : xor al, 0xe4 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000b44e4 : xor al, 0xe9 ; ret 6
0x00000000001a6231 : xor al, 0xee ; jmp qword ptr [rcx]
0x00000000001aac6c : xor al, 0xf1 ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x0000000000195c11 : xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000019566d : xor al, 0xfc ; call qword ptr [rax]
0x000000000019568d : xor al, 0xfc ; call rax
0x00000000001aefad : xor al, 1 ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc5 : xor al, 1 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aef65 : xor al, 1 ; add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x00000000000abb28 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000107fe1 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001aef95 : xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000004baaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000080fdd : xor al, 2 ; add byte ptr [rax], al ; call 0x7d286
0x000000000019b0f5 : xor al, 2 ; add byte ptr [rdx], dl ; cli ; call rsp
0x000000000019afe0 : xor al, 3 ; cli ; call rsp
0x000000000010756b : xor al, al ; or eax, edi ; ret
0x000000000000075d : xor al, byte ptr [rax + rcx*4 + 0xa] ; add byte ptr [rdx], dl ; retf
0x0000000000108211 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001aed45 : xor al, byte ptr [rcx] ; add al, cl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001aedf5 : xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000fd851 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001aeda5 : xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x000000000011151b : xor al, ch ; call rax
0x00000000001122c3 : xor al, ch ; push rdi ; ret
0x0000000000105368 : xor al, ch ; ret 0xf6b7
0x000000000013ed50 : xor al, ch ; retf 0xa
0x00000000000fb5a8 : xor ax, ax ; ret
0x0000000000195689 : xor bh, ah ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001aea30 : xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000195280 : xor bh, bl ; sti ; call qword ptr [rax]
0x00000000001952d0 : xor bh, dl ; sti ; push rax ; fdivr st(3) ; call rax
0x0000000000111eaa : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001aebf0 : xor bl, ah ; hlt ; call qword ptr [rsi]
0x000000000008eb9c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000196440 : xor bl, byte ptr [rdi - 0x615d0004] ; cld ; call qword ptr [rdx]
0x0000000000128f08 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000abc1c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008ea5d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000047bb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47c2d ; xor eax, eax ; ret
0x000000000012e8c2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x000000000009f92d : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xc875
0x000000000008f2e1 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000004b974 : xor byte ptr [rax + 0x29], cl ; retf
0x0000000000076c6d : xor byte ptr [rax + 0x29], cl ; retf 0x3949
0x0000000000110c81 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000c45eb : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f5cef : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000089b01 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009f126 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000fa438 : xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000012b9b7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d381 ; pop rbx ; ret
0x000000000012b97f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d3b9 ; pop rbx ; ret
0x000000000012b8c0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d478 ; pop rbx ; ret
0x00000000000a8737 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047f48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00000000000be444 : xor byte ptr [rax - 0x75], cl ; je 0xbe475 ; cmp byte ptr [rcx + 1], cl ; ret
0x0000000000047bb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x0000000000047f47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x0000000000089a2f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013c2ea : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000c8b09 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000ad55d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000135bb8 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000076ba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000306c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000cfc46 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000e0fac : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000012e8c3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d720e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000128f09 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000332f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000009f92e : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xc875
0x000000000008f2e2 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000001b0b30 : xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000143520 : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000746ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d858 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002084e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039fca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000003a5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f6d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000aacb5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000108571 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000011586b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x1158a9 ; call rax
0x000000000004d399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000bd08a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb7e1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001954f4 : xor byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000072aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00000000000beb61 : xor byte ptr [rax], al ; lea rcx, [rax + r12] ; mov rdx, rax ; jmp 0xbeb78
0x00000000001955b0 : xor byte ptr [rax], ch ; cld ; push rax ; sub esp, edi ; call rax
0x0000000000194ea8 : xor byte ptr [rax], ch ; sti ; call rax
0x00000000000a9fb7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000abc20 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000abc1f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007bc60 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b239a : xor byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; retf
0x000000000017398b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000008557c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000121a3c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a533f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000e901e : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00000000000e901f : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x000000000008f75b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007bfce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000012b88d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00000000001b3bf0 : xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000194e20 : xor byte ptr [rbx], al ; sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000000abc1d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000195638 : xor byte ptr [rbx], ch ; cld ; call qword ptr [rax]
0x00000000000862e9 : xor byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000001a9320 : xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000194fc4 : xor byte ptr [rcx - 0x5ddf0003], ah ; std ; call qword ptr [rax]
0x000000000003ce9e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000000e9268 : xor byte ptr [rcx - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; sbb byte ptr [rcx], al ; retf 0xeae9
0x0000000000051377 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f79f : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000e0fee : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f98
0x0000000000151054 : xor byte ptr [rcx], 0x27 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000000fc3cc : xor byte ptr [rcx], 0xc0 ; ret
0x000000000018328e : xor byte ptr [rcx], ah ; retf
0x0000000000143521 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000746ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000784b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006dcb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000107f8a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001aec05 : xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aec05 ; jmp qword ptr [rcx]
0x00000000001aebed : xor byte ptr [rcx], al ; add byte ptr [rax], dh ; jrcxz 0x1aebed ; call qword ptr [rsi]
0x00000000000668fa : xor byte ptr [rcx], dh ; imul cl ; ret
0x0000000000121a6b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010a6da : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000001b7170 : xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000000840a8 : xor byte ptr [rdi], ah ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001af9f0 : xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000101b71 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000c8484 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000071cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x000000000012dc6e : xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000051342 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000fa3dd : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x000000000008b3f6 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000095cfc : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001123c5 : xor byte ptr [rdx + 5], bh ; call 0x2e628
0x00000000001a5c57 : xor byte ptr [rdx], al ; ret
0x00000000001a9cf7 : xor byte ptr [rdx], al ; ret 0xe0a
0x0000000000194ed0 : xor byte ptr [rdx], bh ; sti ; call qword ptr [rax]
0x00000000001a2c90 : xor byte ptr [rdx], bl ; in eax, dx ; call rdx
0x0000000000194e70 : xor byte ptr [rip + 0x1620fffb], dl ; sti ; call qword ptr [rax]
0x00000000001955cc : xor byte ptr [rip + 0x2810fffc], 0xfc ; call rax
0x000000000016e4ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008d52c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008ea5e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000000ac88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x00000000001a6230 : xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x0000000000038fea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x0000000000184f9e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001b40a0 : xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x000000000018327f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x18322f
0x000000000019566c : xor byte ptr [rsp + rdi*8], 0xff ; adc byte ptr [rdi], ah ; cld ; call rax
0x00000000001954dc : xor byte ptr [rsp + rdi*8], al ; jmp qword ptr [rax]
0x0000000000198051 : xor ch, bh ; call rsp
0x00000000000e56f0 : xor ch, byte ptr [rcx] ; ret
0x00000000000a9d48 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9d5e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d80 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9d9e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dbe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9de4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e00 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e20 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e40 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9e66 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e88 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f02 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f22 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f42 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9f68 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fb8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c8e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cac : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9ccc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cee : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d0e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d2e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9bd6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9bec : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c04 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c1a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9c4a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9c56 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9c6c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9bb0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000005f9fd : xor ch, cl ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001952b4 : xor cl, bl ; sti ; call qword ptr [rax]
0x00000000000961eb : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000791a5 : xor cl, byte ptr [rax + 0x63] ; jg 0x79221 ; xor eax, eax ; syscall
0x00000000000c45e6 : xor cl, byte ptr [rax - 0x75] ; jl 0xc4617 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000013232f : xor cl, byte ptr [rax - 0x77] ; jp 0x132341 ; ret
0x000000000013509f : xor cl, byte ptr [rax - 0x77] ; jp 0x1350b1 ; ret
0x00000000001350b7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1350c9 ; ret
0x00000000001358ef : xor cl, byte ptr [rax - 0x77] ; jp 0x135901 ; ret
0x0000000000135907 : xor cl, byte ptr [rax - 0x77] ; jp 0x135919 ; ret
0x0000000000135937 : xor cl, byte ptr [rax - 0x77] ; jp 0x135949 ; ret
0x00000000000ca8d1 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000e926b : xor cl, byte ptr [rax - 0x77] ; sbb byte ptr [rcx], al ; retf 0xeae9
0x00000000000e773d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000000000130d3c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010de61 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000103772 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000110a81 : xor cl, ch ; ret
0x000000000011274e : xor cl, ch ; retf
0x00000000000a56d0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a9501 : xor cl, dh ; jmp qword ptr [rcx]
0x0000000000198a71 : xor dh, bl ; jmp rsp
0x0000000000128674 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x000000000012f804 : xor dh, dh ; ret 0xc707
0x0000000000195688 : xor dil, spl ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001af1a0 : xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001ace20 : xor dl, bl ; jmp qword ptr [rcx]
0x000000000002d8ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001101b1 : xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x00000000001056b6 : xor dword ptr [rax + 0x88], edi ; syscall
0x0000000000035406 : xor dword ptr [rax + 0xba], edi ; syscall
0x00000000000872a5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000ac87b : xor dword ptr [rax + rax], ecx ; ret
0x0000000000052bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000009ed1e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000184236 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x00000000000d18ee : xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000019ecb5 : xor dword ptr [rax], eax ; add al, bh ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001080f1 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000991f3 : xor dword ptr [rbp + 0xf], eax ; mov dh, 0x14 ; xor eax, dword ptr [rbp + 0x38] ; retf 0x820f
0x00000000000cac3b : xor dword ptr [rbx - 0x76b7ffd1], ebp ; ret 0x9ce9
0x00000000000d7089 : xor dword ptr [rcx + 0x63], ecx ; retf 0x8b45
0x000000000009cbe9 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x00000000001078c1 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000150ff4 : xor dword ptr [rdi], esp ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000019b075 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000103c13 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000004e618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000450e0 : xor eax, 0x1cb ; call rax
0x00000000000fc1d3 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001890c0 : xor eax, 0x23fff3db ; fcomi st(3) ; call qword ptr [rcx]
0x00000000001955cd : xor eax, 0x2810fffc ; cld ; call rax
0x0000000000141ac7 : xor eax, 0x287654 ; xor eax, eax ; syscall
0x000000000014188e : xor eax, 0x28788d ; mov eax, r15d ; syscall
0x000000000006f21b : xor eax, 0x30 ; call rax
0x0000000000063b68 : xor eax, 0x360403 ; call rax
0x000000000005be5a : xor eax, 0x368111 ; call rax
0x000000000005b804 : xor eax, 0x368767 ; call rax
0x0000000000195bd5 : xor eax, 0x3690fffc ; cld ; call qword ptr [rax]
0x000000000005004c : xor eax, 0x373f1f ; call rax
0x000000000004d3d0 : xor eax, 0x376b9b ; call rax
0x0000000000078181 : xor eax, 0x39480000 ; ret
0x00000000000419ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c41d : xor eax, 0x48b4800 ; ret 0x8548
0x0000000000102d6f : xor eax, 0x49fff1cb ; mov edi, dword ptr [rbp] ; call rbx
0x00000000001bc713 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000000f6cd2 : xor eax, 0xb8c7894c ; test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000002479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00000000000582e5 : xor eax, 0xf6ffffee ; ret 0xf10
0x000000000007c74b : xor eax, 0xffffe1e0 ; call rax
0x000000000007c2fb : xor eax, 0xffffe630 ; call rax
0x000000000007bf0b : xor eax, 0xffffea20 ; call rax
0x000000000007aeab : xor eax, 0xfffffa80 ; call rax
0x000000000007ac3b : xor eax, 0xfffffcf0 ; call rax
0x000000000006f514 : xor eax, 0xfffffd37 ; call rax
0x000000000002084b : xor eax, dword ptr [0x30] ; call rax
0x0000000000035320 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004d396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x00000000001081b1 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000088482 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088708 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000885f1 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e73c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000886a4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7da : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000084113 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008921d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008958d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000085814 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x85827 ; ret
0x00000000000991f8 : xor eax, dword ptr [rbp + 0x38] ; retf 0x820f
0x00000000001aeefd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aee85 : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001089c3 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000c78b0 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013380c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bf782 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000122215 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011eae8 : xor eax, eax ; add rsp, 0x28 ; ret
0x00000000001370d5 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143e08 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000014366f : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb80e : xor eax, eax ; add rsp, 8 ; ret
0x000000000002df30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000111f7a : xor eax, eax ; call 0x10ea74
0x0000000000088d35 : xor eax, eax ; call 0x55774
0x0000000000088d34 : xor eax, eax ; call 0x55775
0x00000000000fa5d7 : xor eax, eax ; call 0xf7034
0x000000000013b491 : xor eax, eax ; call r8
0x0000000000075297 : xor eax, eax ; call rbx
0x000000000013b4db : xor eax, eax ; call rcx
0x000000000013c2f0 : xor eax, eax ; call rdx
0x000000000003a6c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6d8 ; pop rbx ; ret
0x00000000000d72fc : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd729d ; pop rbx ; ret
0x000000000010a6db : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d16d4 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000001024ea : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x102501 ; pop rbx ; ret
0x00000000000fce2e : xor eax, eax ; cmp rdi, rdx ; ja 0xfce68 ; ret
0x000000000013bdac : xor eax, eax ; cmp rdx, rcx ; je 0x13bdc8 ; ret
0x0000000000114aa7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000012e140 : xor eax, eax ; jmp rcx
0x0000000000115b75 : xor eax, eax ; leave ; ret
0x0000000000124138 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000012304d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fc360 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000001122f6 : xor eax, eax ; mov edx, 1 ; call 0x10ed29
0x000000000003ac82 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000009ed48 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000001159d1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000012a31a : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000013a788 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00000000000d5196 : xor eax, eax ; mov rdx, r8 ; jmp 0xd51bb
0x0000000000132dc7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003b370 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000006e7e9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cd407 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012bf62 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d74f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000022b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb568 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a26d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ac54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033ee6 : xor eax, eax ; pop rbx ; ret
0x0000000000123e26 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000001fb7b : xor eax, eax ; ret
0x000000000009f80e : xor eax, eax ; sub eax, ecx ; ret
0x000000000002c2a2 : xor eax, eax ; syscall
0x0000000000077410 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077420 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000aac08 : xor eax, eax ; test dh, 0xf0 ; je 0xaabdb ; movzx eax, dl ; pop rbx ; ret
0x0000000000036268 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007a390 : xor eax, eax ; test rdx, rdx ; jne 0x7a3a7 ; ret
0x000000000003afbe : xor eax, ecx ; ret
0x000000000003a637 : xor eax, edx ; sub eax, edx ; ret
0x000000000003a64b : xor eax, edx ; sub rax, rdx ; ret
0x0000000000189fdd : xor ebp, 0xf58ec0ff ; call rsi
0x000000000011acd1 : xor ebp, dword ptr [rbx - 0x76b7ffd6] ; ror dword ptr [rdi], 0x85 ; ret 0xfffe
0x000000000000288f : xor ebp, edi ; out dx, al ; retf 0x182c
0x000000000018874d : xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x00000000000bcc23 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008851a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000039074 : xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x00000000000c849d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000025041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x000000000008e209 : xor ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x00000000000f3279 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000096ea5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008926c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000012de26 : xor ecx, dword ptr [rdi] ; retf 0xfa81
0x000000000002c4b2 : xor ecx, eax ; ret 0x4809
0x000000000010d8bb : xor ecx, ecx ; call 0x12a394
0x0000000000029a73 : xor ecx, ecx ; call r15
0x0000000000034a70 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000ad074 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000129094 : xor edi, dword ptr [0x30] ; call rax
0x000000000007d8d9 : xor edi, edi ; call qword ptr [r15]
0x0000000000081955 : xor edi, edi ; call qword ptr [rax]
0x00000000000c7595 : xor edi, edi ; call rax
0x00000000001158ce : xor edi, edi ; mov eax, 0xe3 ; syscall
0x00000000000c75aa : xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000208a0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000007d8aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000195bd1 : xor edi, esp ; call qword ptr [rax]
0x00000000001ad131 : xor edi, esp ; jmp qword ptr [rax]
0x0000000000039fc7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000218e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bfe31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000504c3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x0000000000078189 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117919 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000c84be : xor edx, edx ; jmp 0xc8488
0x00000000000ad076 : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000009eddd : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007ba09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007db6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006f17e : xor edx, edx ; mov rsi, r9 ; mov eax, r8d ; syscall
0x0000000000036a80 : xor edx, edx ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000008d7b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000010c9d7 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f6ad0 : xor edx, edx ; xor esi, esi ; lea rdi, [rsp + 0xc] ; call rax
0x00000000001035e1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000003593b : xor edx, edx ; xor esi, esi ; mov rdi, r8 ; mov eax, ebx ; syscall
0x00000000000fa5d3 : xor edx, edx ; xor esi, esi ; xor eax, eax ; call 0xf7038
0x000000000018a809 : xor esi, 0xf67ce2ff ; jmp rax
0x000000000006499b : xor esi, edx ; add byte ptr [rax], al ; jmp 0x64971
0x000000000004d39d : xor esi, esi ; call rax
0x00000000000f6ad2 : xor esi, esi ; lea rdi, [rsp + 0xc] ; call rax
0x00000000000cdfae : xor esi, esi ; mov eax, 2 ; syscall
0x0000000000030a09 : xor esi, esi ; mov eax, ecx ; syscall
0x0000000000102831 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000001035e3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000103608 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000010362d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103651 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103671 : xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000003593d : xor esi, esi ; mov rdi, r8 ; mov eax, ebx ; syscall
0x00000000000358ad : xor esi, esi ; mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000001157f1 : xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000e8c0e : xor esi, esi ; ret
0x00000000000fba52 : xor esi, esi ; syscall
0x00000000000fa5d5 : xor esi, esi ; xor eax, eax ; call 0xf7036
0x00000000001aee84 : xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000075296 : xor r8d, r8d ; call rbx
0x0000000000110a80 : xor r9b, bpl ; ret
0x000000000010d8ba : xor r9d, r9d ; call 0x12a395
0x0000000000029a72 : xor r9d, r9d ; call r15
0x00000000000fc1d2 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002084a : xor rax, qword ptr [0x30] ; call rax
0x000000000003531f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020849 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003531e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008b8c5 : xor rax, rax ; ret
0x000000000003a64a : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000129093 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000129092 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000039fc6 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000039fc5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 26063
