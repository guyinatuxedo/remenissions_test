Gadgets information
============================================================
0x000000000047ee73 : adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000043bd4f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bdb9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479dcb : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000425ca8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040b6d6 : adc al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x14
0x000000000047154f : adc al, 0x11 ; test edx, edx ; jne 0x471566 ; ret
0x000000000042c125 : adc al, 0x13 ; jmp rdx
0x0000000000424039 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000425550 : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x0000000000493e0f : adc al, 0x18 ; add byte ptr [rsp - 0x17], dh ; retf
0x00000000004100b5 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000429b2d : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x000000000044879c : adc al, 0x48 ; add esp, 0x28 ; ret
0x0000000000443510 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000453774 : adc al, 0x85 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x000000000046db15 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000046b434 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x000000000043d1e0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043b90e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042c121 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040eeaf : adc al, 0x97 ; add r10, r15 ; jmp r10
0x000000000040ed81 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000422c37 : adc al, 0xa ; jmp r10
0x00000000004241a3 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004256cd : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x0000000000445e78 : adc al, 0xe ; cmp rdi, rdx ; jb 0x445e8b ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000428a8a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042a69a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000048f732 : adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000047fda2 : adc al, 0xf8 ; add cl, ch ; ret 0xfff6
0x0000000000410927 : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048d405 : adc al, 2 ; add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000043bef7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bf61 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000427668 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047c248 : adc al, ch ; and dl, byte ptr [rbx - 0x76b70000] ; ret
0x000000000040a747 : adc al, ch ; ret
0x000000000047c638 : adc al, ch ; xor cl, byte ptr [rdi - 0x76b70000] ; ret
0x000000000043f9c5 : adc bl, ch ; call 0xffffffffc414831a
0x000000000043f8d5 : adc bl, ch ; call 0xffffffffc43c822a
0x0000000000488de6 : adc bl, ch ; jge 0x488e3c ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000442e36 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000442ea7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000442e07 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000442e35 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000044aad0 : adc byte ptr [r13 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 4
0x000000000045d158 : adc byte ptr [r15], cl ; sahf ; ret 0x3949
0x000000000045cd20 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000048989b : adc byte ptr [r15], r9b ; popfq ; ret 0x3948
0x0000000000405aab : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000047da93 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000412a12 : adc byte ptr [r8 + 1], r9b ; ret
0x0000000000473905 : adc byte ptr [r8 - 0x73], cl ; push rax ; dec dword ptr [rax + 0x21] ; retf 0x8548
0x000000000044ba35 : adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x0000000000478fa0 : adc byte ptr [r8 - 0x77], cl ; ret 0xf748
0x00000000004198a3 : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000478126 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041e862 : adc byte ptr [rax + 0x29], cl ; ret 0x3948
0x0000000000481a15 : adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x000000000046e9e6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000442c5a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000045ccc8 : adc byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000048939d : adc byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000405aec : adc byte ptr [rax + 0x39], cl ; ret 0xee75
0x000000000046e28e : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x000000000048806f : adc byte ptr [rax + 0x39], cl ; retf 0xf375
0x000000000041d766 : adc byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000047da94 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000448a5f : adc byte ptr [rax + 1], bh ; syscall
0x000000000049252e : adc byte ptr [rax + 1], cl ; out dx, eax ; call r12
0x0000000000412a13 : adc byte ptr [rax + 1], cl ; ret
0x0000000000412102 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000471047 : adc byte ptr [rax + 1], cl ; retf 0x8b49
0x0000000000477f83 : adc byte ptr [rax + rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040288b : adc byte ptr [rax + rsi*4 - 0x7f], dh ; retf 0x434
0x0000000000402112 : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000471564 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000473906 : adc byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rax + 0x21] ; retf 0x8548
0x0000000000471563 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000416e93 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000402578 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000046ca5b : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000046ca9d : adc byte ptr [rax - 0x77], cl ; push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000044c107 : adc byte ptr [rax - 0x77], cl ; push rax ; or bl, al ; nop dword ptr [rax] ; ret
0x000000000046ca5f : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000459344 : adc byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000044ba36 : adc byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041d19b : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000419404 : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000481e95 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000478fa1 : adc byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004198a4 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000042251c : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000049361b : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; retf 0xfea4
0x000000000041e72b : adc byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000402333 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041b703 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044a032 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000044cd6d : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000449d4d : adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000448512 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043b9a2 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000428aea : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043d4c8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043d7bc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c101 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047cee8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx], eax ; pop rbx ; ret
0x000000000044931e : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000447192 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000471374 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000426128 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040cebd : adc byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x00000000004399b8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000402099 : adc byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x000000000046e13c : adc byte ptr [rax], cl ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000459dca : adc byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000044a8bd : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x3e] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a8e9 : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x69] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044aad1 : adc byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 4
0x000000000044ab81 : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 0x3b], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000044abaa : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 0x7d], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004224e9 : adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x000000000044d2b9 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412348 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000047b1cf : adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000041706f : adc byte ptr [rbx + 0xa9bf92d], al ; add byte ptr [rcx], al ; ret
0x000000000041945a : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000046d34e : adc byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000047b8f7 : adc byte ptr [rbx - 0x55], dh ; xor eax, eax ; ret
0x0000000000483279 : adc byte ptr [rbx - 0x7bf0cf02], al ; retf 0xfff1
0x000000000047730d : adc byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000482c0a : adc byte ptr [rcx + 0x39], cl ; ret
0x000000000040d843 : adc byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret
0x0000000000491616 : adc byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000046ff9e : adc byte ptr [rcx + rcx*4 - 0x19], cl ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000459df2 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046b82b : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041058c : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000041e872 : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbp ; ret
0x000000000041e67b : adc byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000451aff : adc byte ptr [rcx - 0x75], cl ; add cl, byte ptr [rax - 0x77] ; retf 0x2948
0x000000000041a69c : adc byte ptr [rcx - 0x77], al ; ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x0000000000463d46 : adc byte ptr [rcx - 0x77], cl ; push rsi ; or cl, ch ; ret 0xfff3
0x000000000048d121 : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000041d6a6 : adc byte ptr [rcx - 0x77], cl ; retf 0x894d
0x000000000041cf3a : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000048f0fd : adc byte ptr [rcx - 0x7d], cl ; call qword ptr [rdx]
0x0000000000428b1d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000047e492 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000041945d : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000046e71e : adc byte ptr [rcx], cl ; ret 0x3949
0x000000000049003f : adc byte ptr [rdi + 1], bh ; jmp rax
0x0000000000457f04 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000048989c : adc byte ptr [rdi], cl ; popfq ; ret 0x3948
0x0000000000489f0e : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045d159 : adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x000000000041d34c : adc byte ptr [rdi], cl ; test dword ptr [rip - 0x9fffffd], ebp ; ret 0xf01
0x0000000000443ad3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000428f01 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428ff1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428e11 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429859 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000004293b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000428b41 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000429591 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428d21 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429771 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429681 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428fc3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004290b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428ed3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428c31 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000428de3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428c03 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428cf3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428b13 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000405aac : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045cd21 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000448d62 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000489f0d : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000042c62a : adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042b55b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b40a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042aa05 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ae05 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42add9
0x000000000042ae83 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42ae57
0x000000000042b315 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42b2e9
0x000000000042b393 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42b367
0x000000000042ae00 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42adde
0x000000000042ae7e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ae5c
0x000000000042b310 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42b2ee
0x000000000042b38e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42b36c
0x0000000000422d85 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004376bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000041327a : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xff3
0x000000000045df76 : adc ch, al ; add al, 0x32 ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004822d4 : adc cl, bl ; in eax, 0xdf ; loopne 0x482269 ; ret
0x0000000000416e96 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000044c1b9 : adc cl, byte ptr [rax - 0x77] ; and sil, al ; sub byte ptr [rcx], al ; ret
0x000000000048eb4d : adc cl, byte ptr [rax - 0x77] ; shr ecx, cl ; ret 0xfffc
0x000000000043f8c5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000485dd2 : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048e7f9 : adc cl, byte ptr [rcx + 1] ; ret 0xef89
0x000000000049152f : adc cl, byte ptr [rcx - 0x77] ; xlatb ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d4c8 : adc cl, byte ptr [rdx] ; add byte ptr [rcx - 0x77], cl ; push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000481cb2 : adc dh, bl ; add eax, dword ptr [rax] ; syscall
0x0000000000478366 : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000046d8ba : adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000045bfed : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004126a9 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000469047 : adc dword ptr [rax - 0x77], ecx ; ret 0xc148
0x000000000046c0de : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000043d7bb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043c097 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d6bf : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000425fa8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046caa3 : adc dword ptr [rax], eax ; ret
0x00000000004184ef : adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x000000000044769e : adc dword ptr [rbx + 0x147402f8], eax ; xor eax, eax ; ret
0x0000000000414373 : adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x0000000000414377 : adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000417d86 : adc dword ptr [rbx + 0x38], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417875 : adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000004147b6 : adc dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047ceee : adc dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004460dc : adc dword ptr [rbx], eax ; ret
0x0000000000446055 : adc dword ptr [rbx], esp ; ret
0x0000000000436fdb : adc dword ptr [rcx + 7], edi ; ret
0x0000000000446050 : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000436c76 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000436c3a : adc dword ptr [rcx - 1], edi ; ret
0x00000000004460d7 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000041859f : adc dword ptr [rdi + 0xa0], eax ; ret
0x000000000041778c : adc dword ptr [rdi + 8], eax ; ret
0x0000000000445e17 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000445fb9 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000445fbe : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000445f96 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000445f9b : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000043713d : adc dword ptr [rdi - 8], edi ; ret
0x000000000048a785 : adc dword ptr [rdi], eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000445e14 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000445c00 : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000045116f : adc dword ptr [rdx + 0x48], eax ; ret
0x0000000000481db8 : adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000445d33 : adc dword ptr [rsi + 3], edx ; ret
0x0000000000445dd0 : adc dword ptr [rsi + 7], edx ; ret
0x0000000000445bd2 : adc dword ptr [rsi - 1], edx ; ret
0x000000000048d40a : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043c096 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004227fa : adc eax, 0x11851 ; cmovne rax, rdx ; ret
0x0000000000422a4e : adc eax, 0x16afd ; cmovne rax, rdx ; ret
0x0000000000421e0b : adc eax, 0x1dbc0 ; cmovne rax, rdx ; ret
0x00000000004229fb : adc eax, 0x1e780 ; cmovne rax, rdx ; ret
0x000000000042275c : adc eax, 0x215ef ; cmovne rax, rdx ; ret
0x0000000000421d4b : adc eax, 0x21ce0 ; cmovne rax, rdx ; ret
0x0000000000421dab : adc eax, 0x24f0 ; cmovne rax, rdx ; ret
0x00000000004700ab : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000044aaaa : adc eax, 0x49000007 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000421f15 : adc eax, 0x5296 ; cmovne rax, rdx ; ret
0x000000000043bc21 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000450db3 : adc eax, 0x83480006 ; ret 0x4901
0x0000000000427388 : adc eax, 0x894d0000 ; retf
0x000000000041a2c8 : adc eax, 0xa44a3 ; ret
0x000000000047051a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422aca : adc eax, 0xea91 ; cmovne rax, rdx ; ret
0x000000000042295a : adc eax, 0xebe1 ; cmovne rax, rdx ; ret
0x000000000042275e : adc eax, 0xf480002 ; ret 0x66c3
0x0000000000446c98 : adc eax, 0xf880272 ; ret
0x000000000046e03d : adc eax, dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000043d51e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425e28 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041a5b8 : adc eax, dword ptr [rbp + 1] ; sbb byte ptr [r8 + 0x39], cl ; ret
0x000000000048a42d : adc eax, eax ; ret
0x000000000048a566 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000041840e : adc ebp, ebx ; retf
0x000000000048f1da : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004106cf : adc ecx, dword ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x000000000048dfa2 : adc ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004101d9 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000459114 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000478682 : adc ecx, dword ptr [rcx - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047cc9c : adc ecx, dword ptr [rdi] ; mov dh, 0x45 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000042c126 : adc edi, dword ptr [rsi] ; jmp rdx
0x0000000000411b60 : adc esi, esi ; ret 0xf20
0x000000000041838f : adc esp, dword ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret 0x110f
0x0000000000436fda : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000436c75 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000436c39 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000043713c : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000445d32 : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000445dcf : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000445bd1 : adc qword ptr [rsi - 1], rdx ; ret
0x000000000047c247 : adc r8b, bpl ; and dl, byte ptr [rbx - 0x76b70000] ; ret
0x000000000047c637 : adc r8b, bpl ; xor cl, byte ptr [rdi - 0x76b70000] ; ret
0x000000000048a565 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000422942 : add ah, ah ; or dword ptr [rax], eax ; add dh, byte ptr [rdi + rax*2 - 0xa] ; ret 0x7520
0x00000000004470cf : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004471c9 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x000000000044711a : add ah, bh ; inc dword ptr [rbx] ; ret
0x0000000000445d2e : add ah, byte ptr [rdx - 0xf] ; jl 0x445d83 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000047498a : add ah, byte ptr [rsi + 0xf] ; jo 0x474958 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004131c5 : add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x0000000000401c3d : add ah, dh ; nop ; endbr64 ; ret
0x0000000000401c3b : add al, 0 ; add ah, dh ; nop ; endbr64 ; ret
0x00000000004542a7 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000487d61 : add al, 0 ; add bl, ch ; ret
0x0000000000458441 : add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000479e14 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000044831f : add al, 0 ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000404dd5 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000451b1d : add al, 0 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000429477 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e3df : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004294a5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c10a : add al, 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004705a3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004487d4 : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000426d28 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046b51a : add al, 0 ; add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000477f84 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000403579 : add al, 0 ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x14c
0x0000000000480167 : add al, 0 ; add dh, dh ; ret
0x0000000000471438 : add al, 0 ; cmp rdi, rax ; ja 0x471471 ; xor eax, eax ; ret
0x000000000044c709 : add al, 0 ; mov eax, 0x15 ; syscall
0x000000000047b3d3 : add al, 0 ; mov qword ptr [rsi], rax ; ret
0x000000000047b362 : add al, 0 ; mov rax, r8 ; ret
0x000000000044d68c : add al, 0 ; mov rdi, r12 ; call 0x42a187
0x000000000044de7c : add al, 0 ; mov rdi, r15 ; call 0x42a187
0x00000000004778be : add al, 0 ; or byte ptr [rdi + 0x31d], 4 ; ret
0x000000000047b26d : add al, 0 ; ret
0x0000000000477806 : add al, 0 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000047156a : add al, 0x11 ; ret
0x0000000000447164 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000424035 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000423fca : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004439be : add al, 0x17 ; vzeroupper ; ret
0x000000000048cf5e : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000040f7cd : add al, 0x24 ; call rax
0x000000000041ccca : add al, 0x24 ; call rdx
0x000000000040f932 : add al, 0x24 ; mov r13, r15 ; add r15, rbx ; call rax
0x000000000040f8bd : add al, 0x24 ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000045c02e : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004100d3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000482277 : add al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000046f14e : add al, 0x31 ; ret
0x000000000045df78 : add al, 0x32 ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000046f04a : add al, 0x37 ; ret
0x00000000004700d6 : add al, 0x39 ; bnd je 0x4700e8 ; test edx, edx ; jne 0x4700d9 ; ret
0x000000000041bd0a : add al, 0x39 ; ret
0x000000000041896f : add al, 0x3a ; ret
0x000000000044337b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000442879 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000044288b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000433b6a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004410b9 : add al, 0x48 ; mov eax, edi ; ret
0x000000000046f428 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000484b2c : add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x0000000000457dcf : add al, 0x4c ; cmp edx, ecx ; jb 0x457e2a ; mov r10, rcx ; jmp 0x457d9a
0x0000000000457dce : add al, 0x4c ; cmp edx, ecx ; jb 0x457e2b ; mov r10, rcx ; jmp 0x457d9b
0x000000000046fcb0 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000442887 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004410c7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000459112 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000454ae7 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000419868 : add al, 0x74 ; or al, byte ptr [rax] ; syscall
0x000000000046ac80 : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000004476f2 : add al, 0x81 ; je 0x4476dc ; ret
0x000000000043b90b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004476ee : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x4476e0 ; ret
0x000000000043d1e3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000416437 : add al, 0x82 ; add rax, r10 ; jmp rax
0x00000000004030c6 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000439507 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000416469 : add al, 0x83 ; add rax, r11 ; jmp rax
0x000000000044d57a : add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000004823c4 : add al, 0x83 ; ret
0x00000000004831c6 : add al, 0x83 ; ret 0x4802
0x0000000000488463 : add al, 0x83 ; ret 0xf601
0x000000000048f06f : add al, 0x84 ; add rax, r12 ; jmp rax
0x00000000004700da : add al, 0x85 ; sal byte ptr [rbp - 0xf], cl ; ret
0x000000000045e981 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ab7c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000046b334 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000442876 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000004410b6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000045fd91 : add al, 0x89 ; ret 0xf41
0x000000000047900d : add al, 0x89 ; retf 0x8941
0x00000000004885a1 : add al, 0x89 ; retf 0xeac0
0x000000000045b39b : add al, 0x8a ; add r8, rdx ; jmp r8
0x0000000000401b83 : add al, 0x8a ; add rax, rdx ; jmp rax
0x0000000000447133 : add al, 0x96 ; add rax, rsi ; jmp rax
0x0000000000477fb2 : add al, 0xa6 ; add rax, rsi ; jmp rax
0x00000000004784ef : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000417cc2 : add al, 0xa8 ; add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x000000000041837c : add al, 0xa8 ; add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x0000000000448439 : add al, 0xaa ; add rax, rdx ; jmp rax
0x000000000048e8f2 : add al, 0xb1 ; add rax, r9 ; jmp rax
0x000000000048e92f : add al, 0xb4 ; add rax, r12 ; jmp rax
0x000000000044706b : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046169a : add al, 0xc6 ; jmp rax
0x0000000000461a87 : add al, 0xc8 ; jmp rax
0x00000000004936a1 : add al, 0xd8 ; test rax, rax ; je 0x4936b1 ; call rax
0x000000000045a46f : add al, 0xe0 ; test rax, rax ; je 0x45a47f ; call rax
0x000000000045a705 : add al, 0xe8 ; test rax, rax ; je 0x45a715 ; call rax
0x000000000048441c : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000428a86 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000468742 : add al, 0xf0 ; jmp rax
0x0000000000433ed3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004875ad : add al, 0xf8 ; add cl, ch ; ret
0x0000000000450851 : add al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418fcd : add al, 1 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x0000000000470f96 : add al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042bc67 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000461696 : add al, 3 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000043e911 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000043eb3c : add al, 7 ; ret
0x000000000042419f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004933be : add al, bpl ; retf
0x0000000000492eee : add al, bpl ; wait ; retf 0xfff8
0x000000000043f8c1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000041dd95 : add al, byte ptr [rax] ; add al, ch ; ret
0x000000000045482f : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000047350f : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004776ce : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000046e9d2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000490aa6 : add al, byte ptr [rax] ; add byte ptr [rax + 9], cl ; retf 0x840f
0x0000000000402325 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000402196 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004466a8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000429657 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043cfa1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429685 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004530fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x000000000045bfb6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000040f640 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000470583 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000487cb4 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000426ea8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004450d4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004858e4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x148b48d8], cl ; ret 0xb60f
0x000000000041d83b : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000044a7a8 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000046add6 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x76b3d395], cl ; ret 0x8348
0x000000000045651b : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; xor ecx, dword ptr [rcx - 0x77] ; retf
0x0000000000449ace : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x0000000000478ee6 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; retf 0x850f
0x0000000000422717 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000421d4e : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000443988 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000048d406 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000044d4f8 : add al, byte ptr [rax] ; nop word ptr [rax + rax] ; ret
0x0000000000493aec : add al, byte ptr [rax] ; syscall
0x00000000004924b8 : add al, byte ptr [rax] ; test rbx, rbx ; jne 0x4924a8 ; pop rbx ; ret
0x000000000043f768 : add al, byte ptr [rax] ; vzeroupper ; ret
0x000000000048801e : add al, byte ptr [rbp - 0x7c] ; ror byte ptr [rdi], 0x45 ; ret 0x8964
0x000000000046dc02 : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004628f5 : add al, byte ptr [rcx] ; retf
0x000000000048a6b3 : add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x0000000000422826 : add al, byte ptr ds:[rax] ; cmove rax, rdx ; ret
0x0000000000422842 : add al, byte ptr ss:[rax] ; cmove rax, rdx ; ret
0x000000000047589b : add al, ch ; call rsi
0x000000000041e38e : add al, ch ; cld ; ret 0xffff
0x0000000000416580 : add al, ch ; cmp ch, byte ptr [rbx - 0x76b70002] ; ret
0x00000000004746d3 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfff8
0x00000000004568bf : add al, ch ; fcmovnb st(0), st(6) ; cli ; dec dword ptr [rbp - 0x77] ; ret
0x000000000041dc1e : add al, ch ; insb byte ptr [rdi], dx ; retf 0xffff
0x000000000040282c : add al, ch ; mov esi, 0x81000119 ; retf 0x4b0
0x0000000000456637 : add al, ch ; movsxd rcx, ecx ; cli ; dec dword ptr [rcx - 0x77] ; retf
0x00000000004215fe : add al, ch ; pop rsp ; retf 3
0x0000000000414947 : add al, ch ; ret
0x00000000004865d8 : add al, ch ; ret 0xf7c9
0x00000000004199d8 : add al, ch ; ret 0xffe2
0x0000000000412d2f : add al, ch ; retf
0x0000000000402720 : add al, ch ; retf 0x11a
0x0000000000485c30 : add al, ch ; retf 0xb7a3
0x0000000000484230 : add al, ch ; retf 0xb7bd
0x0000000000486bf0 : add al, ch ; retf 0xc
0x00000000004923c0 : add al, ch ; retf 0xf8d5
0x0000000000453fd0 : add al, ch ; retf 0xfaef
0x000000000046a930 : add al, ch ; retf 0xffcc
0x0000000000491c30 : add al, ch ; retf 0xfff3
0x0000000000421617 : add al, ch ; retf 3
0x000000000044831c : add al, ch ; sahf ; add al, 0 ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044d18e : add al, ch ; sub rax, -0x76b70004 ; ret
0x00000000004031df : add al, ch ; wait ; ret
0x0000000000492eef : add al, ch ; wait ; retf 0xfff8
0x0000000000418407 : add al, ch ; xor dword ptr [rbp], 0 ; mov edx, dword ptr [rbx] ; jmp 0x4183e5
0x000000000048a6b1 : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000045f9f7 : add bh, al ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x00000000004101d7 : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000401c6b : add bh, bh ; loopne 0x401cda ; nop ; ret
0x00000000004936a7 : add bh, bh ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000048a5f9 : add bh, byte ptr [rax + 1] ; ret
0x000000000048a788 : add bh, byte ptr [rax + 2] ; ret
0x00000000004487f3 : add bh, byte ptr [rax - 1] ; ret
0x00000000004454a2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000048f4f3 : add bh, byte ptr [rdi + 1] ; call rax
0x000000000047542f : add bh, dh ; ret
0x0000000000421ef0 : add bh, dh ; ret 0
0x00000000004542a9 : add bh, dh ; ret 0xf800
0x00000000004108cf : add bh, dh ; ret 0xffef
0x000000000040232d : add bl, bpl ; or bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000040232e : add bl, ch ; or bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000485a69 : add bl, ch ; ret
0x000000000046b843 : add bl, ch ; ret 0x43c7
0x000000000046b83a : add bl, ch ; retf
0x000000000041da6c : add bl, ch ; retf 0x8d48
0x0000000000418507 : add bl, ch ; retf 0xf66
0x000000000041bbd0 : add bl, ch ; stosb byte ptr [rdi], al ; nop dword ptr [rax + rax] ; call rax
0x000000000048d407 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000484855 : add byte ptr [eax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044b903 : add byte ptr [r11 + rcx*4 + 0x7d], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004494cf : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000041241e : add byte ptr [r8 - 0x39], cl ; ret
0x00000000004612c6 : add byte ptr [r8 - 0x77], cl ; ret 0x8148
0x000000000046e8d7 : add byte ptr [r8 - 0x77], r9b ; ret 0x14eb
0x000000000046e86a : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000443c7e : add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000044c70a : add byte ptr [rax + 0x15], bh ; syscall
0x0000000000418977 : add byte ptr [rax + 0x29], cl ; enter -0x177d, 1 ; ret
0x0000000000464a4e : add byte ptr [rax + 0x29], cl ; ret
0x000000000045386e : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000476798 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000488694 : add byte ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000403ca7 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000468ef3 : add byte ptr [rax + 0x29], cl ; retf 0x8949
0x0000000000402af7 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000041e66b : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000004900fc : add byte ptr [rax + 0x39], cl ; or byte ptr [rdi + 2], r14b ; sbb eax, eax ; ret
0x00000000004101bf : add byte ptr [rax + 0x39], cl ; ret
0x00000000004776d0 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000414aa7 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041b1df : add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x000000000047a126 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000453778 : add byte ptr [rax + 0x39], cl ; retf
0x0000000000421d35 : add byte ptr [rax + 0x39], cl ; retf 0x1974
0x000000000042c516 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000421d85 : add byte ptr [rax + 0x39], cl ; retf 0x2974
0x0000000000421ee5 : add byte ptr [rax + 0x39], cl ; retf 0x3374
0x0000000000432e2f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000452c64 : add byte ptr [rax + 0x39], cl ; retf 0x3775
0x0000000000488b7f : add byte ptr [rax + 0x39], cl ; retf 0x777
0x0000000000411c39 : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004315e3 : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000419d2f : add byte ptr [rax + 0x39], cl ; retf 0x860f
0x0000000000419cb1 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042c026 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000446fa7 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000446de4 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000485838 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004101be : add byte ptr [rax + 0x39], r9b ; ret
0x0000000000447147 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000449321 : add byte ptr [rax + 0x48], bh ; syscall
0x000000000046b431 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x000000000040ed7e : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046ac7d : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000004030c3 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000401b80 : add byte ptr [rax + 0x63], cl ; add al, 0x8a ; add rax, rdx ; jmp rax
0x0000000000448436 : add byte ptr [rax + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x0000000000447068 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000040280e : add byte ptr [rax + 0x63], cl ; or al, 0x8e ; add rcx, rsi ; jmp rcx
0x000000000046b3cd : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x0000000000479e16 : add byte ptr [rax + 0x63], cl ; ret
0x000000000045a790 : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000043f8bf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000044331f : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000402317 : add byte ptr [rax + 0x9e], bh ; syscall
0x0000000000401435 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000045c2ce : add byte ptr [rax + 0xd], bh ; syscall
0x000000000040f643 : add byte ptr [rax + 0xe], bh ; syscall
0x000000000045dcd3 : add byte ptr [rax + 0xf48f685], al ; ret 0x13eb
0x00000000004842c5 : add byte ptr [rax + 0xf], cl ; enter -0x3fcf, -0x18 ; outsd dx, dword ptr [rsi] ; retf 0xfff8
0x000000000046efa9 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000450d87 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480142 ; ret 0xf01
0x0000000000421d4f : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000045348c : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000421f19 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004227d6 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000041d559 : add byte ptr [rax + 0xf], cl ; retf 0xc183
0x000000000048a5c0 : add byte ptr [rax + 1], bh ; ret
0x000000000046e9d4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000041aa10 : add byte ptr [rax + 1], cl ; ret
0x000000000048c3ef : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000432eed : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000048701c : add byte ptr [rax + 1], cl ; retf 0x8941
0x000000000048a733 : add byte ptr [rax + 2], bh ; ret
0x0000000000429a6c : add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047d4f8 : add byte ptr [rax + 9], cl ; ret 0x2875
0x0000000000490aa8 : add byte ptr [rax + 9], cl ; retf 0x840f
0x000000000041d44c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000046b477 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047763a : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000402327 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000411458 : add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x000000000040f66f : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000047058f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004705cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047057f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004705bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c1ff : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000473599 : add byte ptr [rax - 0x3f], cl ; out dx, eax ; add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000045c178 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000459dbd : add byte ptr [rax - 0x3f], cl ; ret 0x4911
0x0000000000459d91 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000047e609 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000468f08 : add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rcx + 0x29] ; retf 0xf4c
0x0000000000462c2f : add byte ptr [rax - 0x50743], al ; jmp qword ptr [rax]
0x000000000044ba32 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x0000000000493ae6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2d452 ; syscall
0x0000000000483fb6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x3d016 ; syscall
0x0000000000483d32 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x3d296 ; syscall
0x0000000000481cae : add byte ptr [rax - 0x73], cl ; cmp eax, 0x3f312 ; syscall
0x0000000000481b6e : add byte ptr [rax - 0x73], cl ; cmp eax, 0x3f452 ; syscall
0x000000000045da96 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x634a2 ; syscall
0x000000000045d9d1 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x63567 ; syscall
0x000000000045d82f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x63709 ; syscall
0x000000000045d755 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x637e3 ; syscall
0x0000000000450056 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x71882 ; syscall
0x000000000044feea : add byte ptr [rax - 0x73], cl ; cmp eax, 0x719ee ; syscall
0x000000000044fdca : add byte ptr [rax - 0x73], cl ; cmp eax, 0x71b0e ; syscall
0x0000000000447d32 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x79ba6 ; syscall
0x0000000000421982 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9ce36 ; syscall
0x000000000041ed62 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9fa56 ; syscall
0x000000000041ed02 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9fab6 ; syscall
0x000000000041e942 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9fe76 ; syscall
0x000000000041e6e2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa00d6 ; syscall
0x000000000041e11a : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa069e ; syscall
0x000000000041e0e2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa06d6 ; syscall
0x000000000041fcc2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa1026 ; syscall
0x000000000041f276 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa1a62 ; syscall
0x000000000041b3f3 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa58e5 ; syscall
0x000000000041b3c2 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa5926 ; syscall
0x000000000041b142 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa5ba6 ; syscall
0x000000000041ac1e : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa60ca ; syscall
0x0000000000419864 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa7404 ; syscall
0x00000000004192a4 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa79c4 ; syscall
0x0000000000418f38 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa7d30 ; syscall
0x0000000000418bf6 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa8072 ; syscall
0x0000000000417690 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa95d8 ; syscall
0x00000000004173f0 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9878 ; syscall
0x000000000041709c : add byte ptr [rax - 0x73], cl ; cmp eax, 0xa9bcc ; syscall
0x0000000000411632 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb02a6 ; syscall
0x00000000004105e1 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb1187 ; syscall
0x00000000004104a1 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb12c7 ; syscall
0x000000000041026a : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb14fe ; syscall
0x000000000041022f : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb1539 ; syscall
0x000000000041014b : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb161d ; syscall
0x0000000000406a2f : add byte ptr [rax - 0x73], cl ; cmp eax, 0xb9dc1 ; syscall
0x000000000040508c : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbb72c ; syscall
0x0000000000403f0d : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbc803 ; syscall
0x0000000000403edf : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbc831 ; syscall
0x0000000000403d93 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbc97d ; syscall
0x00000000004012cb : add byte ptr [rax - 0x73], cl ; cmp eax, 0xbf53d ; syscall
0x000000000048d47a : add byte ptr [rax - 0x73], cl ; or byte ptr [rcx + rcx*4 + 1], cl ; ret
0x0000000000449de7 : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000478f9d : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0xf748
0x0000000000478123 : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041b6ff : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485dcf : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048f1d7 : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000047867f : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rcx - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048cf5b : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000467b2a : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; jmp rax
0x0000000000461a84 : add byte ptr [rax - 0x75], cl ; add al, 0xc8 ; jmp rax
0x000000000046873f : add byte ptr [rax - 0x75], cl ; add al, 0xf0 ; jmp rax
0x000000000048b38f : add byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000041fc3f : add byte ptr [rax - 0x75], cl ; je 0x41fc71 ; cmp byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000420e5f : add byte ptr [rax - 0x75], cl ; je 0x420e91 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000048d11c : add byte ptr [rax - 0x75], cl ; je 0x48d14d ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004845f6 : add byte ptr [rax - 0x75], cl ; jnp 0x48461b ; pop rbx ; jmp 0x401028
0x00000000004936e9 : add byte ptr [rax - 0x75], cl ; pop rbp ; sbb al, ch ; popfq ; ret 0xfff8
0x0000000000402198 : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042da5f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004040d2 : add byte ptr [rax - 0x76b7bcc8], al ; ret
0x000000000048f72f : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000046d2c7 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004840a6 : add byte ptr [rax - 0x77], cl ; add eax, 0x3cf3a ; ret
0x000000000041b5a4 : add byte ptr [rax - 0x77], cl ; add eax, 0xa31f4 ; ret
0x000000000041a64a : add byte ptr [rax - 0x77], cl ; add eax, 0xa40de ; ret
0x000000000041a621 : add byte ptr [rax - 0x77], cl ; add eax, 0xa40ff ; ret
0x000000000041a601 : add byte ptr [rax - 0x77], cl ; add eax, 0xa4117 ; ret
0x0000000000415f87 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000480428 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x2948
0x000000000042003f : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 0xca] ; syscall
0x000000000049210d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf 0xffd5
0x0000000000419326 : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047ba1a : add byte ptr [rax - 0x77], cl ; in eax, 0x48 ; mov esi, ebp ; syscall
0x000000000044c15f : add byte ptr [rax - 0x77], cl ; ja 0x44c189 ; ret
0x000000000044c1c7 : add byte ptr [rax - 0x77], cl ; jo 0x44c1f1 ; ret
0x0000000000402c0d : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x000000000041bf8b : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 0xca ; syscall
0x000000000045b8f5 : add byte ptr [rax - 0x77], cl ; push rbp ; enter -0x2dcf, -0x18 ; outsd dx, dword ptr [rsi] ; retf 0xfffe
0x0000000000402b74 : add byte ptr [rax - 0x77], cl ; ret
0x000000000046e8d8 : add byte ptr [rax - 0x77], cl ; ret 0x14eb
0x0000000000449f72 : add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000041e64f : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411e48 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004157b7 : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000404dd7 : add byte ptr [rax - 0x77], cl ; ret 0x448b
0x00000000004612c7 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000047498f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004665cf : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000048b10c : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000041ea44 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000481fe7 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000482b6f : add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000487fcf : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044b96e : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x000000000041a20a : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000416108 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000451b1f : add byte ptr [rax - 0x77], cl ; retf
0x000000000043b9a4 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000482ba0 : add byte ptr [rax - 0x77], cl ; retf 0x30be
0x0000000000428aec : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045babc : add byte ptr [rax - 0x77], cl ; retf 0x850f
0x000000000048818f : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000488a77 : add byte ptr [rax - 0x77], cl ; retf 0x8b49
0x0000000000428a2a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000048a3b7 : add byte ptr [rax - 0x77], cl ; retf 0xa0e8
0x000000000043b826 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043d3ac : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000445ef4 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047d9c5 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000045607d : add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x1f0f
0x0000000000480427 : add byte ptr [rax - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x2948
0x0000000000414a5d : add byte ptr [rax - 0x77], r9b ; ret 0x294c
0x00000000004157b6 : add byte ptr [rax - 0x77], r9b ; ret 0x294d
0x000000000046d0de : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044e42d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x000000000041193d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000041ef3b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000410704 : add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x000000000046458b : add byte ptr [rax - 0x7bf10000], al ; ret
0x0000000000420410 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421d01 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000047b8b1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000474e19 : add byte ptr [rax - 0x7d], cl ; jge 0x474dee ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041e8af : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004045af : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d647 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000044559f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004476d7 : add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x000000000044d297 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000471b65 : add byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000000000048581f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000447b1f : add byte ptr [rax - 0x7d], cl ; ret 0x4817
0x0000000000450db6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000428b19 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047b052 : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000004478d7 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000044c6af : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x000000000041de26 : add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000004221b0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ba83 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428b47 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044c437 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041bbc3 : add byte ptr [rax - 0x7d], cl ; retf
0x000000000041d4bf : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000041c888 : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000004240df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046f55f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000458fcd : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000411b5a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000004530ff : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x00000000004869a5 : add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0x83 ; ret 0x4801
0x000000000045bfb8 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000425655 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048dcb4 : add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000000000412c3f : add byte ptr [rax - 1], bh ; pop rbp ; ret
0x0000000000413a1f : add byte ptr [rax - 1], bh ; ret
0x00000000004146f6 : add byte ptr [rax - 1], dil ; ret
0x0000000000446de1 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000041a250 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000432eea : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000416105 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000425652 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000486ed3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000433edb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004470fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000447793 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044a52b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000040f563 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ac83 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000402097 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x00000000004746d1 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfff8
0x000000000045d8c5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004199d6 : add byte ptr [rax], al ; add al, ch ; ret 0xffe2
0x000000000044d614 : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000486bee : add byte ptr [rax], al ; add al, ch ; retf 0xc
0x00000000004031dd : add byte ptr [rax], al ; add al, ch ; wait ; ret
0x000000000048a6af : add byte ptr [rax], al ; add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000047542d : add byte ptr [rax], al ; add bh, dh ; ret
0x000000000042276d : add byte ptr [rax], al ; add bh, dh ; ret 0
0x00000000004108cd : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x0000000000485a67 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000046b841 : add byte ptr [rax], al ; add bl, ch ; ret 0x43c7
0x000000000046b838 : add byte ptr [rax], al ; add bl, ch ; retf
0x000000000041da6a : add byte ptr [rax], al ; add bl, ch ; retf 0x8d48
0x0000000000443c7c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x0000000000464a4c : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000476796 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000488692 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc148
0x000000000046229d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000468ef1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8949
0x0000000000402af5 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004677b7 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047a124 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000453776 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x000000000042c514 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000435941 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000452c62 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3775
0x0000000000488cbd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x0000000000411c37 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000476392 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x860f
0x0000000000446de2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000044931f : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000045a78e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000044331d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000401433 : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000045c2cc : add byte ptr [rax], al ; add byte ptr [rax + 0xd], bh ; syscall
0x000000000040f641 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x000000000045dcd1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f685], al ; ret 0x13eb
0x00000000004700ad : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000045348a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048a5be : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000048c3ed : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000432eeb : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000048a731 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000046b475 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000041aaff : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000411456 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x000000000040f66d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000473597 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; out dx, eax ; add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000045c176 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000459dbb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4911
0x0000000000459d8f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000047e607 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000468f06 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rcx + 0x29] ; retf 0xf4c
0x0000000000467b28 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; jmp rax
0x000000000046873d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xf0 ; jmp rax
0x000000000046d2c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000049210b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf 0xffd5
0x000000000047ba18 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in eax, 0x48 ; mov esi, ebp ; syscall
0x000000000044c15d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x44c18b ; ret
0x0000000000411845 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449f70 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000041e64d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411e46 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046179e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000047767d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004665cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000041ea42 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000481fe5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000482b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000487fcd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000416106 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000045c4b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000428a28 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043b824 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043d3aa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000046d0dc : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000042040e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e8ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004045ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d645 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000044559d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004476d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x000000000044ece3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000471b63 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000000000048581d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000447b1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4817
0x0000000000429833 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004478d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000044c6ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x000000000043d141 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042985d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041debc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000041c886 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000004240dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000425653 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000413a1d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000042276b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0
0x00000000004108cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x000000000046e86b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000488cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x000000000048c3eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000045c3cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000044c15b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x44c18d ; ret
0x000000000047b29b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004665cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000482b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x00000000004045ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044559b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000447b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4817
0x000000000044c6ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x000000000041c884 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000418798 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004457db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000421adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x000000000048224b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000042443b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000422d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000047054c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000041fa1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047d857 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000486ed4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048ca0c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044c09c : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; ret
0x000000000046e86c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x46e842
0x0000000000485a66 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485a34
0x0000000000443cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000443d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000443d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000443d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000443d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000443c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000443c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000443cac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000443cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000443ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000443cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000443cec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044331c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000442cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000413a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048a5bd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000048a730 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000433edc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x0000000000468c46 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000421adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x000000000046d8b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x0000000000417870 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000047cee9 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x00000000004470fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043402c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000443c7b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x0000000000443c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x0000000000445949 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000447794 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004470b7 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x0000000000459c9a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040176b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000004186e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040100b : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40101f ; call rax
0x000000000040f564 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004025ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000443aac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047d090 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000448798 : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x000000000047e902 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x000000000047db46 : add byte ptr [rax], al ; add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x000000000047dc12 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2d], dh ; add rsp, 0x58 ; ret
0x0000000000414a0c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000048d721 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; out 0x77, eax ; retf
0x000000000047dd84 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x0000000000483e1b : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000046d196 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000045dcd2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x440f48f6], 0xc2 ; jmp 0x45dcf8
0x0000000000449308 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x0000000000449397 : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x000000000044944f : add byte ptr [rax], al ; add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x00000000004494ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x000000000041485a : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000047e5c3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x38 ; ret
0x000000000045c122 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004496fb : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000004846ae : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000044befc : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004297e8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004605e0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; shr ecx, cl ; retf 0xfff0
0x0000000000415fad : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046b6cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x3c83480e], cl ; retf 0x4800
0x00000000004470b8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x0000000000415af6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000046bc3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044be50 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000468d2e : add byte ptr [rax], al ; add byte ptr [rbx - 0x4ff43], al ; call qword ptr [rax]
0x00000000004473b6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x000000000043f6b1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x00000000004682f6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0xf4c
0x000000000047a705 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x0000000000482279 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000004820c1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x1773
0x0000000000453a1e : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000004653fd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000411e7a : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000492195 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000421add : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x00000000004595c2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000411202 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000041d44e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000046f7ed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000474699 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x401198
0x0000000000416001 : add byte ptr [rax], al ; add byte ptr [rcx - 0x38b78f89], cl ; ret 0xfb80
0x000000000048224d : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000044a748 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44a756 ; call rbx
0x0000000000453a0a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000457d6a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x457d29
0x000000000041d6a0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rdx ; adc byte ptr [rcx - 0x77], cl ; retf 0x894d
0x000000000046a25d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401a7b : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000040eef9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042443d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000422d3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000449a73 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x000000000042a1a4 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042a1ca : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x0000000000405b95 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x6c77
0x0000000000429cad : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x000000000045ab12 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; retf
0x0000000000451603 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x1089
0x0000000000449773 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046de07 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046ebba : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000041d05e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3c ; ret
0x000000000048f5c7 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000047e2b8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x854d
0x000000000046d8b6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x0000000000417871 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000047ceea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx], eax ; pop rbx ; ret
0x000000000040f618 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000405acf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3fcf, -0x77 ; retf 0xeac1
0x0000000000433fbd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043402d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000040659d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000407215 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000041086d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004470fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000429ffd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000459de1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x000000000041a639 : add byte ptr [rax], al ; add byte ptr [rdx], al ; jbe 0x41a646 ; ret
0x000000000042ac84 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046eb22 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000457f06 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000481975 : add byte ptr [rax], al ; add cl, ch ; ret 0xffe2
0x0000000000492123 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000401b8d : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048186d : add byte ptr [rax], al ; add cl, ch ; retf 0xffe3
0x000000000044ddbe : add byte ptr [rax], al ; add cl, ch ; retf 0xfff7
0x0000000000412a26 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000418fcf : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x000000000040febd : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048a345 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004607f6 : add byte ptr [rax], al ; add dh, al ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000046640f : add byte ptr [rax], al ; add dh, al ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x000000000041a63a : add byte ptr [rax], al ; add dh, byte ptr [rsi + 1] ; ret
0x000000000044cf7b : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000444f31 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048247d : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x0000000000453022 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x452ffc
0x000000000047054e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000046e9d3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000412d24 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041fa1e : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004136d1 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004488f9 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x0000000000402960 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000447ca0 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047d859 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004020a6 : add byte ptr [rax], al ; and byte ptr [rax], al ; add dh, dh ; ret 0x7440
0x0000000000429ffe : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000046f4c0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000046efa8 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004746d2 : add byte ptr [rax], al ; call 0x401184
0x000000000044df64 : add byte ptr [rax], al ; call 0x42a184
0x0000000000403d24 : add byte ptr [rax], al ; call 4
0x0000000000486ed6 : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000044988f : add byte ptr [rax], al ; call r12
0x0000000000459185 : add byte ptr [rax], al ; call r15
0x00000000004100d7 : add byte ptr [rax], al ; call rax
0x00000000004100b9 : add byte ptr [rax], al ; call rdx
0x00000000004470f2 : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x0000000000422b4e : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000421dae : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000046d099 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x46d0b1 ; ret
0x000000000041979e : add byte ptr [rax], al ; endbr64 ; mov rax, rdi ; ret
0x000000000041975e : add byte ptr [rax], al ; endbr64 ; ret
0x00000000004187be : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; ret
0x000000000044953e : add byte ptr [rax], al ; endbr64 ; xor eax, eax ; syscall
0x0000000000401c3c : add byte ptr [rax], al ; hlt ; nop ; endbr64 ; ret
0x000000000041421a : add byte ptr [rax], al ; je 0x414223 ; ret
0x000000000046b839 : add byte ptr [rax], al ; jmp 0x46b80b
0x000000000046e86e : add byte ptr [rax], al ; jmp 0x46e840
0x0000000000485a68 : add byte ptr [rax], al ; jmp 0x485a32
0x0000000000487d62 : add byte ptr [rax], al ; jmp 0x487d2c
0x00000000004678fb : add byte ptr [rax], al ; jmp rax
0x000000000041e526 : add byte ptr [rax], al ; jne 0x41e539 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000042a782 : add byte ptr [rax], al ; jne 0x42a698 ; ret
0x00000000004477f1 : add byte ptr [rax], al ; jne 0x44781d ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000448799 : add byte ptr [rax], al ; jne 0x4487b9 ; add rsp, 0x28 ; ret
0x0000000000449309 : add byte ptr [rax], al ; jne 0x44935b ; add rsp, 0x68 ; ret
0x0000000000449398 : add byte ptr [rax], al ; jne 0x4493eb ; add rsp, 0x18 ; ret
0x0000000000449450 : add byte ptr [rax], al ; jne 0x4494a3 ; add rsp, 0x58 ; ret
0x00000000004494ee : add byte ptr [rax], al ; jne 0x449543 ; add rsp, 0x58 ; ret
0x00000000004496fc : add byte ptr [rax], al ; jne 0x44970d ; add rsp, 0x28 ; ret
0x000000000045c123 : add byte ptr [rax], al ; jne 0x45c134 ; add rsp, 0x18 ; ret
0x000000000047da4c : add byte ptr [rax], al ; jne 0x47da5f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000047db47 : add byte ptr [rax], al ; jne 0x47db7b ; add rsp, 0x38 ; ret
0x000000000047dc13 : add byte ptr [rax], al ; jne 0x47dc4c ; add rsp, 0x58 ; ret
0x000000000047dd85 : add byte ptr [rax], al ; jne 0x47ddcc ; add rsp, 0x68 ; ret
0x000000000047e0a3 : add byte ptr [rax], al ; jne 0x47e0dc ; add rsp, 0x58 ; ret
0x000000000047e5c4 : add byte ptr [rax], al ; jne 0x47e5dc ; add rsp, 0x38 ; ret
0x000000000047e903 : add byte ptr [rax], al ; jne 0x47e92d ; add rsp, 0x38 ; ret
0x00000000004846af : add byte ptr [rax], al ; jne 0x4846c0 ; add rsp, 0x38 ; ret
0x0000000000484798 : add byte ptr [rax], al ; jne 0x4847a9 ; add rsp, 0x38 ; ret
0x000000000048a340 : add byte ptr [rax], al ; jne 0x48a3ce ; leave ; ret
0x000000000048a8d3 : add byte ptr [rax], al ; jne 0x48a8e4 ; add rsp, 0x38 ; ret
0x0000000000443cfe : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000443d0e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000443d1e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000443d2e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000443d3e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000443c5d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000443c8e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000443c9e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000443cae : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000443cbe : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000443cce : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000443c0a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000443cde : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000443cee : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000493ae5 : add byte ptr [rax], al ; lea rdi, [rip + 0x2d452] ; syscall
0x0000000000483fb5 : add byte ptr [rax], al ; lea rdi, [rip + 0x3d016] ; syscall
0x0000000000483d31 : add byte ptr [rax], al ; lea rdi, [rip + 0x3d296] ; syscall
0x0000000000481cad : add byte ptr [rax], al ; lea rdi, [rip + 0x3f312] ; syscall
0x0000000000481b6d : add byte ptr [rax], al ; lea rdi, [rip + 0x3f452] ; syscall
0x000000000045da95 : add byte ptr [rax], al ; lea rdi, [rip + 0x634a2] ; syscall
0x000000000045d9d0 : add byte ptr [rax], al ; lea rdi, [rip + 0x63567] ; syscall
0x000000000045d82e : add byte ptr [rax], al ; lea rdi, [rip + 0x63709] ; syscall
0x000000000045d754 : add byte ptr [rax], al ; lea rdi, [rip + 0x637e3] ; syscall
0x0000000000450055 : add byte ptr [rax], al ; lea rdi, [rip + 0x71882] ; syscall
0x000000000044fee9 : add byte ptr [rax], al ; lea rdi, [rip + 0x719ee] ; syscall
0x000000000044fdc9 : add byte ptr [rax], al ; lea rdi, [rip + 0x71b0e] ; syscall
0x0000000000447d31 : add byte ptr [rax], al ; lea rdi, [rip + 0x79ba6] ; syscall
0x0000000000421981 : add byte ptr [rax], al ; lea rdi, [rip + 0x9ce36] ; syscall
0x000000000041ed61 : add byte ptr [rax], al ; lea rdi, [rip + 0x9fa56] ; syscall
0x000000000041ed01 : add byte ptr [rax], al ; lea rdi, [rip + 0x9fab6] ; syscall
0x000000000041e941 : add byte ptr [rax], al ; lea rdi, [rip + 0x9fe76] ; syscall
0x000000000041e6e1 : add byte ptr [rax], al ; lea rdi, [rip + 0xa00d6] ; syscall
0x000000000041e119 : add byte ptr [rax], al ; lea rdi, [rip + 0xa069e] ; syscall
0x000000000041e0e1 : add byte ptr [rax], al ; lea rdi, [rip + 0xa06d6] ; syscall
0x000000000041fcc1 : add byte ptr [rax], al ; lea rdi, [rip + 0xa1026] ; syscall
0x000000000041f275 : add byte ptr [rax], al ; lea rdi, [rip + 0xa1a62] ; syscall
0x000000000041b3f2 : add byte ptr [rax], al ; lea rdi, [rip + 0xa58e5] ; syscall
0x000000000041b3c1 : add byte ptr [rax], al ; lea rdi, [rip + 0xa5926] ; syscall
0x000000000041b141 : add byte ptr [rax], al ; lea rdi, [rip + 0xa5ba6] ; syscall
0x000000000041ac1d : add byte ptr [rax], al ; lea rdi, [rip + 0xa60ca] ; syscall
0x0000000000419863 : add byte ptr [rax], al ; lea rdi, [rip + 0xa7404] ; syscall
0x00000000004192a3 : add byte ptr [rax], al ; lea rdi, [rip + 0xa79c4] ; syscall
0x0000000000418f37 : add byte ptr [rax], al ; lea rdi, [rip + 0xa7d30] ; syscall
0x0000000000418bf5 : add byte ptr [rax], al ; lea rdi, [rip + 0xa8072] ; syscall
0x000000000041768f : add byte ptr [rax], al ; lea rdi, [rip + 0xa95d8] ; syscall
0x00000000004173ef : add byte ptr [rax], al ; lea rdi, [rip + 0xa9878] ; syscall
0x000000000041709b : add byte ptr [rax], al ; lea rdi, [rip + 0xa9bcc] ; syscall
0x0000000000411631 : add byte ptr [rax], al ; lea rdi, [rip + 0xb02a6] ; syscall
0x00000000004105e0 : add byte ptr [rax], al ; lea rdi, [rip + 0xb1187] ; syscall
0x00000000004104a0 : add byte ptr [rax], al ; lea rdi, [rip + 0xb12c7] ; syscall
0x0000000000410269 : add byte ptr [rax], al ; lea rdi, [rip + 0xb14fe] ; syscall
0x000000000041022e : add byte ptr [rax], al ; lea rdi, [rip + 0xb1539] ; syscall
0x000000000041014a : add byte ptr [rax], al ; lea rdi, [rip + 0xb161d] ; syscall
0x0000000000406a2e : add byte ptr [rax], al ; lea rdi, [rip + 0xb9dc1] ; syscall
0x000000000040508b : add byte ptr [rax], al ; lea rdi, [rip + 0xbb72c] ; syscall
0x0000000000403f0c : add byte ptr [rax], al ; lea rdi, [rip + 0xbc803] ; syscall
0x0000000000403ede : add byte ptr [rax], al ; lea rdi, [rip + 0xbc831] ; syscall
0x0000000000403d92 : add byte ptr [rax], al ; lea rdi, [rip + 0xbc97d] ; syscall
0x00000000004012ca : add byte ptr [rax], al ; lea rdi, [rip + 0xbf53d] ; syscall
0x000000000048a346 : add byte ptr [rax], al ; leave ; ret
0x000000000044331e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000442cee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000048a6b0 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000041a670 : add byte ptr [rax], al ; mov dword ptr [rip + 0xa40d4], eax ; ret
0x0000000000449320 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000402316 : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x0000000000401434 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000045c2cd : add byte ptr [rax], al ; mov eax, 0xd ; syscall
0x000000000040f642 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000412c3e : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000413a1e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048a5bf : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000048a732 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041f245 : add byte ptr [rax], al ; mov eax, ebx ; syscall
0x000000000040f60d : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e494 : add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000041150b : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004595c3 : add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000411203 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000442d2e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048f5c8 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004481ee : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000041840b : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x4183e1
0x0000000000433ede : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046dc9a : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000041f240 : add byte ptr [rax], al ; mov esi, 0x81 ; mov eax, ebx ; syscall
0x000000000044c1c6 : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484618 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000047d9c4 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048a946 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000048aa0a : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000044c15e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000047733a : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000477308 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x310], rax ; ret
0x000000000048a5d8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000411808 : add byte ptr [rax], al ; mov qword ptr [rdx + 0xf0], rcx ; ret
0x000000000041b5a3 : add byte ptr [rax], al ; mov qword ptr [rip + 0xa31f4], rax ; ret
0x000000000041a649 : add byte ptr [rax], al ; mov qword ptr [rip + 0xa40de], rax ; ret
0x000000000041a620 : add byte ptr [rax], al ; mov qword ptr [rip + 0xa40ff], rax ; ret
0x000000000041a600 : add byte ptr [rax], al ; mov qword ptr [rip + 0xa4117], rax ; ret
0x0000000000402c0c : add byte ptr [rax], al ; mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000045c0cd : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000457b0b : add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x457ac8
0x0000000000457d6b : add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x457d28
0x0000000000449754 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000047057e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047058e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047059e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004705ae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004705be : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004705ce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000412c32 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000046873e : add byte ptr [rax], al ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x00000000004789bf : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000467b29 : add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000041ef77 : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d44f : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000046f7ee : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000004070b5 : add byte ptr [rax], al ; mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041562b : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f8f0 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000415f86 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ba19 : add byte ptr [rax], al ; mov rbp, rsp ; mov rsi, rbp ; syscall
0x0000000000445ef3 : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a6e9 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044a7a9 : add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x000000000040b0d7 : add byte ptr [rax], al ; mov rdi, qword ptr [r15 + 0x18] ; call 0x407318
0x000000000044a91a : add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004845f5 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; pop rbx ; jmp 0x401029
0x0000000000492196 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000047469a : add byte ptr [rax], al ; mov rdi, r15 ; call 0x401197
0x000000000046b795 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046b19f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000433d1e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000421ade : add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x000000000046d8b7 : add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x00000000004184ec : add byte ptr [rax], al ; movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x0000000000417872 : add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000047ceeb : add byte ptr [rax], al ; movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x0000000000416b91 : add byte ptr [rax], al ; movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004470fe : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043402e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000433fbe : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000443c7d : add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x0000000000443c6d : add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x0000000000401d50 : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000045b2ac : add byte ptr [rax], al ; nop ; ret
0x000000000046eedd : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x000000000044594b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000402009 : add byte ptr [rax], al ; or byte ptr [rcx + rcx - 0x7d], dh ; retf 0x8910
0x0000000000447089 : add byte ptr [rax], al ; or byte ptr [rdi], 0xa2 ; jmp 0x447059
0x0000000000483e1c : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046d197 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000447796 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004470b9 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x000000000041ee92 : add byte ptr [rax], al ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000415af7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044e2c4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044be51 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401f39 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000415fae : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040176d : add byte ptr [rax], al ; pop rdx ; ret
0x0000000000401cf6 : add byte ptr [rax], al ; ret
0x000000000041dd3d : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x000000000042b6cc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000418976 : add byte ptr [rax], al ; sub rax, rcx ; sub eax, 1 ; ret
0x0000000000445a01 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000401439 : add byte ptr [rax], al ; syscall
0x000000000044befd : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004489ba : add byte ptr [rax], al ; test eax, eax ; jne 0x4489d6 ; syscall
0x0000000000484034 : add byte ptr [rax], al ; test edx, edx ; jne 0x484049 ; sub dword ptr [rdi], 1 ; ret
0x000000000040100d : add byte ptr [rax], al ; test rax, rax ; je 0x40101d ; call rax
0x000000000046de08 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f905 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000447076 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040f566 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000429cde : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004025ae : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004495ae : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000004142b6 : add byte ptr [rax], al ; xor r8d, r8d ; mov rax, r8 ; ret
0x0000000000443aae : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047d092 : add byte ptr [rax], cl ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048ded2 : add byte ptr [rax], cl ; mov byte ptr [rip + 0x33255], 8 ; ret
0x000000000048ded9 : add byte ptr [rax], cl ; ret
0x000000000044ee15 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041bbd5 : add byte ptr [rax], r8b ; call rax
0x000000000041975d : add byte ptr [rax], r8b ; endbr64 ; ret
0x0000000000412c3d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004198e5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000004481ed : add byte ptr [rax], r8b ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000442d1d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c1c5 : add byte ptr [rax], r8b ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000442d5d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000048438d : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000401cf5 : add byte ptr [rax], r8b ; ret
0x0000000000418975 : add byte ptr [rax], r8b ; sub rax, rcx ; sub eax, 1 ; ret
0x0000000000447075 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x000000000041358d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000429cdd : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x000000000044879a : add byte ptr [rbp + 0x14], dh ; add rsp, 0x28 ; ret
0x00000000004190a0 : add byte ptr [rbp + 0x15890150], cl ; retf 0xa7b
0x000000000047e904 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x00000000004477f2 : add byte ptr [rbp + 0x1f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000047db48 : add byte ptr [rbp + 0x28], dh ; add rsp, 0x38 ; ret
0x000000000047dc14 : add byte ptr [rbp + 0x2d], dh ; add rsp, 0x58 ; ret
0x0000000000414a0e : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000048d723 : add byte ptr [rbp + 0x39], cl ; out 0x77, eax ; retf
0x000000000041c982 : add byte ptr [rbp + 0x39], cl ; ret
0x000000000041a421 : add byte ptr [rbp + 0x39], cl ; ret 0xd977
0x000000000047dd86 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x00000000004204ef : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; jmp rax
0x0000000000483e1d : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000046d198 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000045dcd4 : add byte ptr [rbp + 0x440f48f6], 0xc2 ; jmp 0x45dcf6
0x000000000044930a : add byte ptr [rbp + 0x46], dh ; add rsp, 0x68 ; ret
0x0000000000449399 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; ret
0x0000000000449451 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x58 ; ret
0x00000000004494ef : add byte ptr [rbp + 0x49], dh ; add rsp, 0x58 ; ret
0x000000000041f757 : add byte ptr [rbp + 0x4c], bl ; mov eax, eax ; pop r12 ; pop r13 ; ret
0x00000000004207cf : add byte ptr [rbp + 0x4c], bl ; mov esi, esp ; pop r12 ; pop r13 ; jmp rax
0x00000000004118c0 : add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000047e5c5 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x38 ; ret
0x0000000000488f5f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000488e4f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000045c124 : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004496fd : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000004846b0 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041e527 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbp ; ret
0x000000000047da4d : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004494d0 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000493684 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; hlt ; ret 2
0x000000000045816c : add byte ptr [rbp + rcx*4 + 0x41], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x0000000000488acf : add byte ptr [rbp + rcx*4 + 0x54], cl ; retf 0x4cf0
0x000000000046e3af : add byte ptr [rbp + rcx*4 + 0x58], cl ; dec dword ptr [rcx - 0x77] ; ret 0x3948
0x0000000000487cb6 : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000044befe : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000044801f : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000476c2f : add byte ptr [rbp - 0x76b7febe], cl ; ret 0x8b49
0x0000000000425a4d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000004605e2 : add byte ptr [rbp - 0x77], cl ; shr ecx, cl ; retf 0xfff0
0x0000000000452179 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x000000000043b909 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000484472 : add byte ptr [rbx + 0x158902ca], al ; retf
0x0000000000415faf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046b6cf : add byte ptr [rbx + 0x3c83480e], cl ; retf 0x4800
0x0000000000442d2f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000044285f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x00000000004470ba : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x000000000041ee93 : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004337bf : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000046e7d3 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415af8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e2c5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044be52 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041e07b : add byte ptr [rbx + 0xa073d2d], al ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004197e5 : add byte ptr [rbx + 0xa748705], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000402051 : add byte ptr [rbx + 0xbed0415], cl ; add dh, dh ; ret 0x7408
0x000000000045130f : add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x000000000047d03e : add byte ptr [rbx + rcx*4 + 0x25], cl ; ret 0x447
0x000000000048a557 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048cec7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000040ff27 : add byte ptr [rbx + rcx*4 + 0x63], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000044b904 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048b0ed : add byte ptr [rbx + rcx*4 + 0xd], al ; ret
0x000000000040a003 : add byte ptr [rbx + rcx*4 + 4], cl ; and al, 0xe9 ; ret 0xffed
0x000000000046d4cf : add byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044718e : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000447187 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000447180 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000447179 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000044719c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000447195 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000044740d : add byte ptr [rbx - 0x3f7cfe3e], al ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x0000000000468d30 : add byte ptr [rbx - 0x4ff43], al ; call qword ptr [rax]
0x0000000000447424 : add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xcfe9
0x0000000000455c31 : add byte ptr [rbx - 0x57f3f1e], al ; or byte ptr [rdi], 0x85 ; retf 0xfff5
0x00000000004473b8 : add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x00000000004450d6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004077c4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0x1a
0x000000000040b25c : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000040a119 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x0000000000408db3 : add byte ptr [rbx - 0x7bf0fd08], al ; call qword ptr [rcx]
0x000000000040b987 : add byte ptr [rbx - 0x7bf0fd08], al ; retf 8
0x000000000040836b : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000040c6a0 : add byte ptr [rbx - 0x7bf0fe08], al ; retf
0x000000000040cebf : add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x000000000040b6d8 : add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x14
0x000000000046b51c : add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000483bbf : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret
0x000000000046b447 : add byte ptr [rbx - 0x7cb7fbbe], cl ; ret 0x4104
0x000000000043f6b3 : add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x0000000000419457 : add byte ptr [rbx], ch ; push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004858e6 : add byte ptr [rcx + 0x148b48d8], cl ; ret 0xb60f
0x0000000000428a75 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000047e8ef : add byte ptr [rcx + 0x29], cl ; retf 0x8d4b
0x00000000004682f8 : add byte ptr [rcx + 0x29], cl ; retf 0xf4c
0x0000000000412a0f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000455ffb : add byte ptr [rcx + 0x3948fc51], cl ; ret
0x000000000047a707 : add byte ptr [rcx + 0x39], al ; ret
0x000000000046f58f : add byte ptr [rcx + 0x39], cl ; ret
0x00000000004820c3 : add byte ptr [rcx + 0x39], cl ; ret 0x1773
0x0000000000453a20 : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x000000000045e97e : add byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000042a980 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000049102e : add byte ptr [rcx + 0xf], al ; mov bh, 0x5d ; and byte ptr [rsi - 9], ah ; ret
0x00000000004653ff : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000004634c4 : add byte ptr [rcx + 0xf], al ; ret 0x3944
0x000000000048258d : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x3145
0x0000000000411e7c : add byte ptr [rcx + 1], cl ; ret
0x00000000004735f8 : add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x000000000048e77b : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000044abdc : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; mov rdi, qword ptr [r8] ; call rbx
0x0000000000492197 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000420679 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, 0xca ; syscall
0x000000000048be8f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000044d68d : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x42a186
0x000000000041f0e6 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 0xca ; syscall
0x0000000000421adf : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x000000000047d538 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r8 ; call 0x4497c9
0x000000000047e495 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x000000000041150c : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046e0e0 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004070b6 : add byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004595c4 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbp ; pop r12 ; ret
0x0000000000411204 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000041ef78 : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d450 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000046f7ef : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000047469b : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x401196
0x000000000044de7d : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x42a186
0x00000000004212ba : add byte ptr [rcx + rcx*4 - 1], cl ; mov eax, 0xca ; syscall
0x000000000047197c : add byte ptr [rcx + rdi - 0x37], dh ; xor eax, eax ; ret
0x00000000004936b9 : add byte ptr [rcx + rdi - 9], cl ; je 0x4936d1 ; call 0x41f998
0x0000000000449871 : add byte ptr [rcx + rsi + 0x48], dh ; mov edi, ebp ; xor esi, esi ; call r12
0x0000000000415f34 : add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0x1389
0x000000000048092e : add byte ptr [rcx - 0x1177b], cl ; ljmp [rcx] ; ret
0x0000000000416003 : add byte ptr [rcx - 0x38b78f89], cl ; ret 0xfb80
0x000000000048224f : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000457af2 : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000455fb0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000041c62e : add byte ptr [rcx - 0x73], cl ; dec dword ptr [rcx - 0x7b] ; ret
0x000000000041d83d : add byte ptr [rcx - 0x73], cl ; push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000044a7aa : add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000488bcf : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000040b0d8 : add byte ptr [rcx - 0x75], cl ; jg 0x40b0fc ; call 0x407317
0x000000000044a6ea : add byte ptr [rcx - 0x75], cl ; jge 0x44a6f4 ; call rbx
0x000000000044a71a : add byte ptr [rcx - 0x75], cl ; jge 0x44a724 ; call rbx
0x000000000044a74a : add byte ptr [rcx - 0x75], cl ; jge 0x44a754 ; call rbx
0x0000000000412bfc : add byte ptr [rcx - 0x75], cl ; mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000046add8 : add byte ptr [rcx - 0x76b3d395], cl ; ret 0x8348
0x000000000046b088 : add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x0000000000453a0c : add byte ptr [rcx - 0x77], al ; ret
0x0000000000468329 : add byte ptr [rcx - 0x77], al ; ret 0x1d74
0x0000000000454c38 : add byte ptr [rcx - 0x77], al ; ret 0x5a58
0x0000000000401927 : add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x000000000045651d : add byte ptr [rcx - 0x77], al ; xor ecx, dword ptr [rcx - 0x77] ; retf
0x0000000000407257 : add byte ptr [rcx - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000457b0c : add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x457ac7
0x0000000000457d6c : add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x457d27
0x000000000041d4ca : add byte ptr [rcx - 0x77], cl ; push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000041d6a2 : add byte ptr [rcx - 0x77], cl ; push rdx ; adc byte ptr [rcx - 0x77], cl ; retf 0x894d
0x000000000046a25f : add byte ptr [rcx - 0x77], cl ; ret
0x000000000046956f : add byte ptr [rcx - 0x77], cl ; ret 0x2949
0x0000000000421f77 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000481e5e : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000004682f0 : add byte ptr [rcx - 0x77], cl ; ret 0xb8
0x0000000000467b1a : add byte ptr [rcx - 0x77], cl ; retf
0x000000000046d07c : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x0000000000480a3f : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000044c317 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x0000000000401a7d : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000040eefb : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042443f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000422d3f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000449ad0 : add byte ptr [rcx - 0x7d], cl ; retf
0x0000000000449a75 : add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x0000000000451d0f : add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx], 0x89 ; xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000045ae3e : add byte ptr [rcx - 0x8373], cl ; dec dword ptr [rcx + 1] ; ret 0x8d48
0x000000000046554e : add byte ptr [rcx - 0x8ef63], cl ; dec dword ptr [rax - 0x77] ; retf
0x0000000000451bef : add byte ptr [rcx - 0xa], al ; ret
0x000000000042a1a6 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042a1cc : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004459ff : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000410342 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000422784 : add byte ptr [rcx], al ; je 0x422745 ; ret
0x0000000000483f67 : add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000401cef : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000481b08 : add byte ptr [rcx], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000004197eb : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000417075 : add byte ptr [rcx], al ; ret
0x000000000045da55 : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000044d4c3 : add byte ptr [rcx], bh ; ret
0x000000000041c8a6 : add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000405b97 : add byte ptr [rcx], bh ; retf 0x6c77
0x0000000000478ee8 : add byte ptr [rcx], bh ; retf 0x850f
0x000000000042582f : add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000429caf : add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x000000000045ab14 : add byte ptr [rcx], ch ; retf
0x0000000000451605 : add byte ptr [rcx], cl ; retf 0x1089
0x0000000000449775 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046de09 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046ebbc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000491d57 : add byte ptr [rcx], dh ; rol bl, 0xe9 ; ret 0xf6f9
0x000000000041d060 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x3c ; ret
0x000000000047d746 : add byte ptr [rcx], dh ; shr al, 0xe2 ; retf
0x00000000004854df : add byte ptr [rcx], dh ; shr bl, 0xcf ; nop dword ptr [rax] ; call rax
0x000000000041e01c : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call 0x41a308
0x0000000000491d56 : add byte ptr [rcx], sil ; rol bl, 0xe9 ; ret 0xf6f9
0x000000000048f5c9 : add byte ptr [rdi + 1], bh ; call rax
0x000000000044a4e8 : add byte ptr [rdi + rbp + 0x48], dh ; mov edi, ebp ; xor esi, esi ; call r12
0x000000000047e2ba : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x854d
0x000000000041661a : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000048e682 : add byte ptr [rdi + rcx*2 + 0x48], dh ; add esp, 0x18 ; ret
0x000000000046d8b8 : add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x00000000004184ed : add byte ptr [rdi], cl ; adc dword ptr [rbp + 0x38], eax ; pop rbp ; pop r12 ; ret
0x0000000000417873 : add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000047ceec : add byte ptr [rdi], cl ; adc dword ptr [rbx], eax ; pop rbx ; ret
0x000000000040f61a : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000432f76 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000040357b : add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x14c
0x0000000000405ad1 : add byte ptr [rdi], cl ; enter -0x3fcf, -0x77 ; retf 0xeac1
0x0000000000433fbf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043402f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000040659f : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000407217 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000047ccb9 : add byte ptr [rdi], cl ; mov dh, 0x45 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000041086f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000040ec8e : add byte ptr [rdi], cl ; mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x00000000004470ff : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000416b92 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423fdf : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042a70f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000429fef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042a01f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042a00f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000429fff : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000477649 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000459de3 : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000451313 : add byte ptr [rdi], cl ; retf 0x1489
0x00000000004052bc : add byte ptr [rdi], cl ; retf 0xd289
0x0000000000428a6f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040f5ff : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000048a341 : add byte ptr [rdi], cl ; test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x000000000044cc2f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000044d0d7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8d48
0x00000000004114eb : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3948
0x000000000044d0b6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d48
0x0000000000467d95 : add byte ptr [rdi], cl ; xchg esp, edx ; sub byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044106f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000477faf : add byte ptr [rdx + 0x63], cl ; add al, 0xa6 ; add rax, rsi ; jmp rax
0x00000000004784ec : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000041da75 : add byte ptr [rdx - 0x7d], cl ; xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000041dd94 : add byte ptr [rdx], 0 ; add al, ch ; ret
0x000000000045c0cb : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000450f66 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000041a63b : add byte ptr [rdx], al ; jbe 0x41a644 ; ret
0x000000000046dc9b : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000041f241 : add byte ptr [rsi + 0x81], bh ; mov eax, ebx ; syscall
0x000000000042ac86 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048aa5d : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x290f
0x000000000041303a : add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x7589
0x000000000047ee6f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000481db4 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000047ee98 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000046eb24 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000442cfd : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000045b2ad : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000493e11 : add byte ptr [rsp - 0x17], dh ; retf
0x000000000045e2aa : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042ce43 : add byte ptr es:[rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000044befb : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000416ac2 : add ch, al ; clc ; ret 0xffff
0x000000000047cb71 : add ch, al ; or dword ptr [rsi - 8], eax ; dec dword ptr [rax + 1] ; ret
0x000000000046f39f : add ch, al ; std ; xlatb ; retf 0xc985
0x0000000000471411 : add ch, bl ; retf
0x000000000046daaa : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041a14a : add ch, byte ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000044d6f7 : add ch, byte ptr [rsp + rax - 0x76b400] ; call 0x42a189
0x000000000045fb58 : add ch, cl ; retf
0x000000000045816f : add cl, byte ptr [r13 + 0x39] ; ret 0x820f
0x0000000000441097 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000455fb4 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000045678f : add cl, byte ptr [rax + 0x39] ; retf
0x00000000004311ea : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000446e08 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041286d : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004126ad : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041da40 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x0000000000441098 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000441005 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000451b02 : add cl, byte ptr [rax - 0x77] ; retf 0x2948
0x000000000046ad5f : add cl, byte ptr [rax - 0x77] ; retf 0x8948
0x0000000000470323 : add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x00000000004773aa : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rax + rsi*2 + 0x48], 0x89 ; ret 0x8b48
0x000000000047cca0 : add cl, byte ptr [rax - 0x7d] ; ret
0x000000000045ead3 : add cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004224ec : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000043f850 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000451494 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x000000000046b218 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000043f8b3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004045cd : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000458170 : add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x0000000000433e02 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000449334 : add cl, byte ptr [rbx + 0x750c2444] ; ret 0xd8f7
0x0000000000468f0c : add cl, byte ptr [rcx + 0x29] ; retf 0xf4c
0x000000000046c7fc : add cl, byte ptr [rcx - 0x77] ; ret
0x0000000000468b63 : add cl, byte ptr [rcx - 0x77] ; retf
0x000000000046b9c9 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x0000000000487e25 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xfb83
0x0000000000463461 : add cl, ch ; jmp rsp
0x000000000045b2a8 : add cl, ch ; mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x0000000000407a30 : add cl, ch ; ret
0x0000000000481977 : add cl, ch ; ret 0xffe2
0x000000000047fda4 : add cl, ch ; ret 0xfff6
0x0000000000492125 : add cl, ch ; ret 0xfffd
0x0000000000401b8f : add cl, ch ; retf
0x00000000004935f0 : add cl, ch ; retf 0xfb61
0x000000000048186f : add cl, ch ; retf 0xffe3
0x000000000044ddc0 : add cl, ch ; retf 0xfff7
0x0000000000412a28 : add cl, ch ; retf 0xfffc
0x000000000040b4b0 : add cl, ch ; retf 0xfffd
0x000000000040febf : add cl, ch ; retf 0xfffe
0x000000000048a347 : add cl, cl ; ret
0x00000000004607f8 : add dh, al ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x0000000000466411 : add dh, al ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x0000000000433fb3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000402601 : add dh, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004227e6 : add dh, byte ptr [rdi + rax*2 - 0xa] ; ret 0x7520
0x000000000041a63c : add dh, byte ptr [rsi + 1] ; ret
0x000000000041d7fe : add dh, byte ptr [rsp - 0x77] ; ret 0xb48b
0x000000000047f08f : add dh, dh ; ret
0x000000000040209b : add dh, dh ; ret 0x7402
0x00000000004786f9 : add dh, dh ; ret 0x7403
0x0000000000402647 : add dh, dh ; ret 0x7404
0x0000000000402057 : add dh, dh ; ret 0x7408
0x000000000041428f : add dh, dh ; ret 0x7420
0x00000000004020aa : add dh, dh ; ret 0x7440
0x0000000000443b07 : add dh, dh ; ret 0x7501
0x0000000000443b14 : add dh, dh ; ret 0x7502
0x0000000000443b21 : add dh, dh ; ret 0x7504
0x0000000000476dfd : add dh, dh ; ret 0x7508
0x0000000000443ad9 : add dh, dh ; ret 0x7510
0x0000000000443ae6 : add dh, dh ; ret 0x7520
0x0000000000443af3 : add dh, dh ; ret 0x7540
0x000000000041d352 : add dh, dh ; ret 0xf01
0x0000000000471b01 : add dh, dh ; ret 0xf0e
0x0000000000465437 : add dh, dh ; ret 0xf40
0x000000000048247f : add dh, dh ; ret 0xf50
0x0000000000406a54 : add dl, byte ptr [rbx - 0x77] ; retf
0x0000000000456677 : add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000406554 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000442821 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000481452 : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000481417 : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x00000000004566c4 : add dword ptr [rax + 0x39480751], ecx ; ret
0x000000000041da7b : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000410a8b : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x0000000000452823 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x0000000000492540 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000493e43 : add dword ptr [rax + 0x39], ecx ; sal dword ptr [rcx + rcx*4 + 0x48], 0x89 ; ret 0xc148
0x0000000000421373 : add dword ptr [rax + 0xf], ecx ; ret 0xfc3
0x000000000044e3bc : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040f53f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000044a423 : add dword ptr [rax + 9], ecx ; retf 0x8948
0x000000000047cf3b : add dword ptr [rax + rax*8 - 0x41f0318b], eax ; ret 0xd8f7
0x0000000000462306 : add dword ptr [rax - 0x50743], eax ; jmp qword ptr [rax]
0x0000000000441071 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000041a2c5 : add dword ptr [rax - 0x77], ecx ; adc eax, 0xa44a3 ; ret
0x0000000000441002 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047b267 : add dword ptr [rax - 0x77], ecx ; add eax, 0x460c1 ; ret
0x00000000004502a7 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000421351 : add dword ptr [rax - 0x77], ecx ; ret 0x3174
0x0000000000415946 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000004717db : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x0000000000476c32 : add dword ptr [rax - 0x77], ecx ; ret 0x8b49
0x000000000045edd9 : add dword ptr [rax - 0x77], ecx ; retf 0x3948
0x0000000000485832 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000040707f : add dword ptr [rax - 0x7cb700b8], ecx ; ret 0x4901
0x0000000000406555 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045d395 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000045c794 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000453cbc : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000047997c : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000479991 : add dword ptr [rax - 0x7d], ecx ; ret 0x4f10
0x00000000004065a3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000483dc4 : add dword ptr [rax - 0x7d], ecx ; ret 0x8404
0x000000000040390d : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000450d8c : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000045f740 : add dword ptr [rax - 0x8ff43], eax ; jmp qword ptr [rax]
0x00000000004660fa : add dword ptr [rax - 0x93343], eax ; jmp qword ptr [rax]
0x0000000000406c98 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000041f0e3 : add dword ptr [rax], 0x894c0000 ; out 0xb8, eax ; retf 0
0x000000000041f243 : add dword ptr [rax], 0xd8890000 ; syscall
0x000000000046a92e : add dword ptr [rax], eax ; add al, ch ; retf 0xffcc
0x0000000000419caf : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000446fa5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000479ec0 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004649f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x000000000048f435 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000048818d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000445ef2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045607b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x1f0f
0x0000000000410702 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x0000000000429747 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047b050 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000000000041de24 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000004221ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e67f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429775 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048dcb2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000000000044ece1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044988d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x000000000048f4f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000490041 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000048fa5f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000048a5d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046873c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000467b27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000046b793 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046b19d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000483e1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046d195 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000046ddc4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046beab : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000470573 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000448a61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000045816a : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x41], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x820f
0x0000000000427028 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000452177 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x000000000048f381 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e2c3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000455ff9 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x000000000047e493 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop r12 ; ret
0x0000000000457d50 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000044a868 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000044a6e8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x44a6f6 ; call rbx
0x000000000044a718 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x44a726 ; call rbx
0x000000000046b086 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x0000000000479efd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000416618 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000047ccb7 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x45 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000004052ba : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; retf 0xd289
0x0000000000443b05 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000443b12 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000443b1f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000443ad7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000443ae4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000443af1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000421eae : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000421e0e : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000407362 : add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x0000000000402314 : add dword ptr [rax], esi ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x0000000000493cd1 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000452176 : add dword ptr [rax], r8d ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret
0x000000000046fc40 : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x20 ; call rbx
0x000000000046fb1d : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x28 ; call rbx
0x0000000000472066 : add dword ptr [rbp + rcx*4 + 0xd], ecx ; retf 0x356
0x0000000000401cf0 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax + rax] ; ret
0x000000000041e082 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x0000000000447fcb : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000433e72 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000481b09 : add dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044a375 : add dword ptr [rbx + 0x94901e0], eax ; ret
0x000000000041c8a0 : add dword ptr [rbx + 0xa1ea905], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000468367 : add dword ptr [rbx - 0x4ef43], eax ; jmp qword ptr [rax]
0x0000000000468338 : add dword ptr [rbx - 0x4ff43], eax ; call qword ptr [rax]
0x0000000000447410 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0x518d
0x00000000004622da : add dword ptr [rbx - 0x50f43], eax ; call qword ptr [rax]
0x000000000047841b : add dword ptr [rbx - 0x79f0fe08], eax ; ret
0x000000000040c68e : add dword ptr [rbx - 0x7bf0fd08], eax ; ret 0x1d
0x000000000040eb66 : add dword ptr [rbx - 0x7cb60030], eax ; ret
0x000000000041a34d : add dword ptr [rcx + 0x21], ecx ; ret 0x8d4d
0x000000000044a378 : add dword ptr [rcx + 9], ecx ; ret
0x0000000000417cc4 : add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x0000000000483f68 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000411b0f : add dword ptr [rcx + rcx*4 - 0x40], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004410a1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000004561f5 : add dword ptr [rcx - 0x77], eax ; ret 0x8341
0x000000000045eea5 : add dword ptr [rcx - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041d77a : add dword ptr [rcx - 0x77], ecx ; push rdx ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000489b30 : add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000453efb : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000044c4eb : add dword ptr [rcx - 0x7d], ecx ; ret 0x4938
0x00000000004488d5 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000046599b : add dword ptr [rcx], eax ; ret
0x0000000000446c96 : add dword ptr [rdi + 0x15], esi ; jb 0x446ca4 ; mov byte ptr [rdi], cl ; ret
0x00000000004487d0 : add dword ptr [rdi + 0x2d], esi ; mov eax, 4 ; syscall
0x0000000000471250 : add dword ptr [rdi + 0x2d], esi ; mov eax, 6 ; syscall
0x000000000044882f : add dword ptr [rdi + 0x2e], esi ; mov eax, 5 ; syscall
0x00000000004712b5 : add dword ptr [rdi + 0x30], esi ; mov eax, 0x106 ; syscall
0x000000000041837e : add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x0000000000451ee6 : add dword ptr [rdi - 2], -1 ; dec dword ptr [rax + 0x39] ; retf 0x9775
0x0000000000453025 : add dword ptr [rdi], 1 ; jmp 0x452ff9
0x000000000041eaea : add dword ptr [rdi], ecx ; ret 0x8348
0x0000000000447413 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x0000000000447427 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xcfe9
0x0000000000447419 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000004891a7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8948
0x00000000004476ef : add dword ptr [rdx + 0x2b], 0xe2748104 ; ret
0x0000000000445c50 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000436d11 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004851df : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000044c307 : add dword ptr [rdx + rdx*8 - 0x49f0db8c], eax ; or byte ptr [rax], bh ; retf 0xe574
0x00000000004197e6 : add dword ptr [rip + 0xa7487], 1 ; pop rbx ; ret
0x0000000000441082 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000475b4b : add dword ptr [rsi - 0x7b], esp ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x000000000046e03b : add eax, 0x13e0 ; cmove rax, rdx ; ret
0x000000000045c126 : add eax, 0x18c48348 ; ret
0x0000000000422b8b : add eax, 0x1bf60 ; cmove rax, rdx ; ret
0x0000000000421eab : add eax, 0x1d270 ; cmove rax, rdx ; ret
0x000000000042a135 : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000045c0ca : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000422714 : add eax, 0x22da7 ; cmove rax, rdx ; ret
0x0000000000422b10 : add eax, 0x2339b ; cmove rax, rdx ; ret
0x00000000004229a0 : add eax, 0x234fb ; cmove rax, rdx ; ret
0x0000000000422840 : add eax, 0x2366b ; cmove rax, rdx ; ret
0x0000000000422aa2 : add eax, 0x23769 ; cmove rax, rdx ; ret
0x0000000000422932 : add eax, 0x238c9 ; cmove rax, rdx ; ret
0x00000000004227d2 : add eax, 0x23a39 ; cmove rax, rdx ; ret
0x0000000000421e34 : add eax, 0x23b27 ; cmovne rax, rdx ; ret
0x0000000000422af4 : add eax, 0x23b57 ; cmove rax, rdx ; ret
0x0000000000422984 : add eax, 0x23cb7 ; cmove rax, rdx ; ret
0x0000000000422824 : add eax, 0x23e27 ; cmove rax, rdx ; ret
0x00000000004228bb : add eax, 0x242a0 ; cmovne rax, rdx ; ret
0x000000000042289c : add eax, 0x2448f ; cmove rax, rdx ; ret
0x00000000004228e4 : add eax, 0x245d7 ; cmove rax, rdx ; ret
0x00000000004496ff : add eax, 0x28c48348 ; ret
0x00000000004846b2 : add eax, 0x38c48348 ; ret
0x0000000000454469 : add eax, 0x39480000 ; ret
0x000000000048779b : add eax, 0x3a03f ; jne 0x4877b0 ; ret
0x00000000004853a5 : add eax, 0x3c49e ; ret
0x00000000004840a9 : add eax, 0x3cf3a ; ret
0x0000000000484092 : add eax, 0x3cf51 ; add rsp, 8 ; ret
0x000000000042a145 : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000448b02 : add eax, 0x401f0fc3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000047b3d0 : add eax, 0x45f53 ; mov qword ptr [rsi], rax ; ret
0x000000000047b35f : add eax, 0x45fcc ; mov rax, r8 ; ret
0x000000000047b26a : add eax, 0x460c1 ; ret
0x00000000004428b8 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004410e8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000442db6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000442939 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000441129 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000462530 : add eax, 0x5910b ; mov rax, qword ptr [rax + rcx*8] ; jmp rax
0x0000000000461a80 : add eax, 0x59dbb ; mov rax, qword ptr [rax + rcx*8] ; jmp rax
0x000000000042a173 : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000484854 : add eax, 0x67 ; cmovne rax, rdx ; ret
0x0000000000459466 : add eax, 0x679a5 ; ret
0x0000000000450f49 : add eax, 0x6feae ; test eax, eax ; je 0x450f61 ; ret
0x0000000000484acb : add eax, 0x70 ; cmove rax, rdx ; ret
0x000000000044d4ab : add eax, 0x70608 ; pop rbx ; ret
0x000000000044d476 : add eax, 0x71dc5 ; ret
0x000000000044fab6 : add eax, 0x71e1d ; ret
0x0000000000422b4b : add eax, 0x72d0 ; cmove rax, rdx ; ret
0x000000000044e22e : add eax, 0x735e1 ; ret
0x000000000044e1fe : add eax, 0x73611 ; ret
0x000000000044e1cd : add eax, 0x73642 ; pop rbx ; ret
0x000000000044e18e : add eax, 0x73681 ; ret
0x000000000044e15e : add eax, 0x736b1 ; ret
0x000000000044e12d : add eax, 0x736e2 ; pop rbx ; ret
0x000000000044d485 : add eax, 0x74426 ; test eax, eax ; je 0x44d499 ; ret
0x000000000046e13b : add eax, 0x810 ; cmove rax, rdx ; ret
0x0000000000429387 : add eax, 0x83480000 ; ret 0x4910
0x000000000043cc61 : add eax, 0x83480000 ; ret 0xe910
0x00000000004293b5 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004428bb : add eax, 0x8428d48 ; ret
0x000000000040f61c : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000410b8d : add eax, 0x8949ffff ; ret
0x0000000000426ba8 : add eax, 0x894d0000 ; retf
0x000000000045b2ab : add eax, 0x90660000 ; ret
0x000000000046f98b : add eax, 0x9b0 ; cmove rax, rdx ; ret
0x0000000000422ab1 : add eax, 0x9e292 ; add dh, byte ptr [rdi + rax*2 - 0xa] ; ret 0x7520
0x0000000000422941 : add eax, 0x9e402 ; add dh, byte ptr [rdi + rax*2 - 0xa] ; ret 0x7520
0x00000000004227e1 : add eax, 0x9e562 ; add dh, byte ptr [rdi + rax*2 - 0xa] ; ret 0x7520
0x000000000041f391 : add eax, 0x9f40a ; ret
0x000000000041f32f : add eax, 0xa19a8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041b5a7 : add eax, 0xa31f4 ; ret
0x000000000041a673 : add eax, 0xa40d4 ; ret
0x000000000041a64d : add eax, 0xa40de ; ret
0x000000000041a624 : add eax, 0xa40ff ; ret
0x000000000041a604 : add eax, 0xa4117 ; ret
0x000000000041a2fa : add eax, 0xa4489 ; ret
0x000000000041a2e2 : add eax, 0xa4499 ; ret
0x000000000041a28a : add eax, 0xa44a9 ; ret
0x000000000041a27a : add eax, 0xa44c1 ; ret
0x0000000000419776 : add eax, 0xa49a5 ; ret
0x000000000041a689 : add eax, 0xa6666 ; ret
0x0000000000419881 : add eax, 0xa73ee ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402886 : add eax, 0xbe4bf ; adc byte ptr [rax + rsi*4 - 0x7f], dh ; retf 0x434
0x000000000042b9ba : add eax, 0xc0310000 ; ret
0x000000000044293d : add eax, 0xc428d48 ; ret
0x000000000044342d : add eax, 0xc478d48 ; ret
0x000000000044ddbd : add eax, 0xe9000000 ; retf 0xfff7
0x000000000046e07b : add eax, 0xed0 ; cmove rax, rdx ; ret
0x0000000000433e63 : add eax, 0xf7f0ff3 ; ret
0x000000000044eccd : add eax, 1 ; push rax ; call rbx
0x0000000000470541 : add eax, 1 ; ret
0x0000000000470538 : add eax, 2 ; ret
0x0000000000470551 : add eax, 3 ; ret
0x000000000045c02d : add eax, dword ptr [0] ; ret
0x000000000045483b : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000048c1ec : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000048701a : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8941
0x000000000045a5b3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000048b10a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004721c5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000429567 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ce01 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429595 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004869a3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], 0x83 ; ret 0x4801
0x000000000046b837 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x46b80d
0x0000000000470593 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000449285 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000429518 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047d03c : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x25], cl ; ret 0x447
0x0000000000447422 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xcfe9
0x00000000004634c2 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0x3944
0x0000000000457af0 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000455fae : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a7d8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000046dbf9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000401925 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x0000000000457b0a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; int1 ; mov r10, rcx ; jmp 0x457ac9
0x0000000000451bed : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000046dc99 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000048aa5b : add eax, dword ptr [rax] ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x290f
0x000000000044cf6f : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7402
0x00000000004786f7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x0000000000476dfb : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7508
0x000000000041d350 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf01
0x0000000000471aff : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf0e
0x0000000000483f66 : add eax, dword ptr [rax] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000484095 : add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004851dc : add eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000048779e : add eax, dword ptr [rax] ; jne 0x4877ad ; ret
0x000000000048452e : add eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004840a5 : add eax, dword ptr [rax] ; mov qword ptr [rip + 0x3cf3a], rax ; ret
0x00000000004470d1 : add eax, dword ptr [rax] ; ret
0x0000000000481b74 : add eax, dword ptr [rax] ; syscall
0x0000000000477cee : add eax, dword ptr [rbp] ; call rax
0x000000000046e8d6 : add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0x46e8f7
0x0000000000478add : add eax, dword ptr [rbx] ; call rax
0x000000000048be53 : add eax, dword ptr [rbx] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044e2e4 : add eax, dword ptr [rcx + 0x5c] ; shl eax, cl ; ret
0x0000000000471569 : add eax, dword ptr [rcx + rdx] ; ret
0x000000000047812d : add eax, dword ptr [rdi] ; call rax
0x0000000000486c78 : add eax, dword ptr [rdx + 8] ; call rax
0x0000000000481a98 : add eax, eax ; mov eax, r8d ; ret
0x000000000044d5c5 : add eax, ebp ; jmp rax
0x0000000000404728 : add eax, ebp ; push rdx ; retf 0xffff
0x0000000000404180 : add eax, ebp ; retf 0xffcf
0x0000000000474704 : add eax, ebp ; xchg eax, esi ; lodsb al, byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000041646c : add eax, ebx ; jmp rax
0x000000000043efa8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ac83 : add eax, ecx ; jmp rax
0x00000000004194bd : add eax, ecx ; mov qword ptr [rdi + 8], rax ; xor eax, eax ; ret
0x0000000000429e91 : add eax, ecx ; ret
0x0000000000445ab6 : add eax, ecx ; sub rax, rdi ; ret
0x000000000043f31d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042a08d : add eax, ecx ; vzeroupper ; ret
0x0000000000429e8e : add eax, edi ; add rax, rcx ; ret
0x000000000042a08a : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046b337 : add eax, edi ; jmp rax
0x000000000042a004 : add eax, edi ; ret
0x000000000043f3d5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042a125 : add eax, edi ; vzeroupper ; ret
0x000000000045b39e : add eax, edx ; jmp r8
0x0000000000401b86 : add eax, edx ; jmp rax
0x000000000043f2b6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047029b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000047b1ca : add eax, esi ; inc dword ptr [r8 + 0x10] ; pop rbx ; pop rbp ; ret
0x000000000044706e : add eax, esi ; jmp rax
0x000000000048e932 : add eax, esp ; jmp rax
0x0000000000478129 : add ebx, 0x18 ; add rax, qword ptr [r15] ; call rax
0x000000000048c7de : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000048ab5e : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041a5c1 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000488721 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042a6db : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000453027 : add ebx, ebp ; retf
0x0000000000434023 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446c7b : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x446c70 ; ret
0x00000000004410d5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000041ae3c : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000047359d : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004886b7 : add ecx, dword ptr [rax + 0x29] ; retf 0xceb
0x000000000047d787 : add ecx, dword ptr [rax + 0x39] ; retf 0x820f
0x000000000044b937 : add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x0000000000461697 : add ecx, dword ptr [rax - 0x75] ; add al, 0xc6 ; jmp rax
0x00000000004410d9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000045454c : add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000047a6d3 : add ecx, dword ptr [rax - 0x77] ; mov rax, r8 ; ret
0x000000000041a31f : add ecx, dword ptr [rax - 0x77] ; retf 0x3141
0x0000000000432e34 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000478685 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046e8e5 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004101cf : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000048e18d : add ecx, dword ptr [rbp - 0x73] ; or ecx, dword ptr [eax - 0x7d] ; ret
0x0000000000433d92 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000442d54 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000048be54 : add ecx, dword ptr [rcx + rcx*4 - 0x1a] ; mov edi, ebp ; call rax
0x00000000004410d6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000454465 : add ecx, dword ptr [rdi] ; xchg dword ptr [rax + 0x39480000], esp ; ret
0x0000000000447fd1 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448025 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000045843d : add ecx, dword ptr [rdi] ; xchg ebp, ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000403f11 : add ecx, eax ; or eax, dword ptr [rax] ; syscall
0x0000000000479ee4 : add ecx, ebp ; ret
0x0000000000451efc : add ecx, ebp ; retf
0x000000000042bfef : add ecx, ebx ; jmp r9
0x000000000042a986 : add ecx, ebx ; jmp rcx
0x000000000046b3d3 : add ecx, edi ; jmp rcx
0x0000000000402814 : add ecx, esi ; jmp rcx
0x0000000000492530 : add edi, ebp ; call r12
0x000000000040f938 : add edi, ebx ; call rax
0x000000000042bfec : add edi, edx ; add r9, r11 ; jmp r9
0x000000000043f6f6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x43f69d
0x0000000000443916 : add edx, 0x20 ; sub edx, ecx ; jmp 0x4438bd
0x0000000000419412 : add edx, 0x60 ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000048733a : add edx, eax ; jmp 0x48734e
0x0000000000489572 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000004735fa : add edx, ebp ; jmp rdx
0x0000000000478760 : add edx, ebx ; call r10
0x000000000046b437 : add edx, ecx ; jmp rdx
0x000000000040eeb2 : add edx, edi ; jmp r10
0x000000000040ed84 : add edx, edi ; jmp rdx
0x0000000000402632 : add esi, dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004902ad : add esi, dword ptr [rbp + 0x20] ; add rsp, 8 ; ret
0x000000000041d7e5 : add esi, dword ptr [rbp + rdi - 0x77] ; ret 0xb48b
0x0000000000433f43 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000445e7e : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041dd41 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbp ; ret
0x000000000043f6f4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x43f69f
0x0000000000443914 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x4438bf
0x00000000004471cc : add esi, edi ; int1 ; mov eax, eax ; ret
0x00000000004799e3 : add esi, esi ; ret 0xf01
0x000000000041058a : add esp, 0x10 ; mov eax, r8d ; pop rbx ; ret
0x000000000041e870 : add esp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x000000000041e679 : add esp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x0000000000459dc8 : add esp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b4a1 : add esp, 0x10 ; pop rbp ; ret
0x00000000004178c5 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000412346 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004854d1 : add esp, 0x10 ; pop rbx ; ret
0x00000000004459fd : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000040f662 : add esp, 0x118 ; ret
0x000000000045c3a6 : add esp, 0x148 ; ret
0x000000000041fa2e : add esp, 0x18 ; jmp rax
0x000000000041044a : add esp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000490680 : add esp, 0x18 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x000000000041a01a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412d27 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041fa21 : add esp, 0x18 ; ret
0x0000000000417fe1 : add esp, 0x20 ; pop rbx ; jmp rax
0x00000000004596ed : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004477f6 : add esp, 0x20 ; pop rbx ; ret
0x0000000000418463 : add esp, 0x20 ; xor edx, edx ; pop rbx ; jmp rax
0x000000000041105a : add esp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000447e01 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044879e : add esp, 0x28 ; ret
0x000000000048a9dd : add esp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x00000000004172ba : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d1aa : add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000419209 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004136d4 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004713f3 : add esp, 0x38 ; ret
0x000000000047d980 : add esp, 0x48 ; jmp qword ptr [rax]
0x00000000004483f5 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047d8fe : add esp, 0x58 ; jmp qword ptr [rax]
0x0000000000449455 : add esp, 0x58 ; ret
0x00000000004488fc : add esp, 0x68 ; pop rbp ; pop r12 ; ret
0x000000000046fa6e : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044930e : add esp, 0x68 ; ret
0x000000000046fcda : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044be4d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000401f35 : add esp, 0x88 ; pop rbx ; ret
0x0000000000402963 : add esp, 0x98 ; ret
0x0000000000471196 : add esp, 0xa8 ; pop rbp ; pop r12 ; ret
0x0000000000410deb : add esp, 0xd8 ; ret
0x00000000004130cb : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000047bb72 : add esp, 8 ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000047e991 : add esp, 8 ; mov eax, r12d ; pop rbx ; pop r12 ; ret
0x0000000000411764 : add esp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000044962e : add esp, 8 ; mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000004179a8 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000048a91d : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000044a4c9 : add esp, 8 ; pop rbp ; pop r12 ; ret
0x000000000045ab34 : add esp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000415042 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000403257 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000401017 : add esp, 8 ; ret
0x000000000047a591 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000410872 : add qword ptr [r8 - 0x7d], rcx ; ret
0x000000000045edd8 : add qword ptr [rax - 0x77], rcx ; retf 0x3948
0x000000000046fb1c : add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x28 ; call rbx
0x0000000000453024 : add qword ptr [rdi], 1 ; jmp 0x452ffa
0x000000000047875f : add r10, r11 ; call r10
0x000000000040eeb1 : add r10, r15 ; jmp r10
0x0000000000418506 : add r11b, r13b ; retf 0xf66
0x0000000000434022 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433fb2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433f42 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000040f937 : add r15, rbx ; call rax
0x0000000000401c6a : add r15b, dil ; loopne 0x401cdb ; nop ; ret
0x000000000045483a : add r8, qword ptr [r8] ; add bh, dh ; ret 0
0x0000000000429594 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045b39d : add r8, rdx ; jmp r8
0x00000000004228e6 : add r8b, byte ptr [r8] ; cmove rax, rdx ; ret
0x000000000043f767 : add r8b, byte ptr [r8] ; vzeroupper ; ret
0x000000000042289e : add r8b, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000481a97 : add r8d, eax ; mov eax, r8d ; ret
0x000000000042bfee : add r9, r11 ; jmp r9
0x0000000000455fb3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000047cc9f : add r9b, byte ptr [r8 - 0x7d] ; ret
0x000000000047ce95 : add r9d, dword ptr [r8 - 0x7d] ; ret
0x0000000000470540 : add rax, 1 ; ret
0x0000000000470537 : add rax, 2 ; ret
0x0000000000470550 : add rax, 3 ; ret
0x000000000045c02c : add rax, qword ptr [0] ; ret
0x0000000000478adc : add rax, qword ptr [r11] ; call rax
0x0000000000477ced : add rax, qword ptr [r13] ; call rax
0x000000000047812c : add rax, qword ptr [r15] ; call rax
0x000000000046e8d5 : add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0x46e8f8
0x000000000048be52 : add rax, qword ptr [rbx] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000486c77 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045c02b : add rax, qword ptr fs:[0] ; ret
0x0000000000416439 : add rax, r10 ; jmp rax
0x000000000041646b : add rax, r11 ; jmp rax
0x000000000048e931 : add rax, r12 ; jmp rax
0x000000000048e77c : add rax, r13 ; jmp rax
0x000000000045e983 : add rax, r14 ; jmp rax
0x000000000048e8f4 : add rax, r9 ; jmp rax
0x000000000044d5c4 : add rax, rbp ; jmp rax
0x000000000044d57c : add rax, rbx ; jmp rax
0x000000000043efa7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ac82 : add rax, rcx ; jmp rax
0x00000000004194bc : add rax, rcx ; mov qword ptr [rdi + 8], rax ; xor eax, eax ; ret
0x0000000000429e90 : add rax, rcx ; ret
0x0000000000445ab5 : add rax, rcx ; sub rax, rdi ; ret
0x000000000043f31c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042a08c : add rax, rcx ; vzeroupper ; ret
0x0000000000429e8d : add rax, rdi ; add rax, rcx ; ret
0x000000000042a089 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046b336 : add rax, rdi ; jmp rax
0x000000000042a003 : add rax, rdi ; ret
0x000000000043f3d4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042a124 : add rax, rdi ; vzeroupper ; ret
0x0000000000401b85 : add rax, rdx ; jmp rax
0x000000000043f2b5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000044706d : add rax, rsi ; jmp rax
0x0000000000478128 : add rbx, 0x18 ; add rax, qword ptr [r15] ; call rax
0x000000000042a985 : add rcx, r11 ; jmp rcx
0x000000000046b3d2 : add rcx, rdi ; jmp rcx
0x0000000000402813 : add rcx, rsi ; jmp rcx
0x000000000049252f : add rdi, rbp ; call r12
0x000000000042bfeb : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004735f9 : add rdx, r13 ; jmp rdx
0x0000000000489571 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487339 : add rdx, rax ; jmp 0x48734f
0x000000000046b436 : add rdx, rcx ; jmp rdx
0x000000000040ed83 : add rdx, rdi ; jmp rdx
0x000000000043f6f3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x43f6a0
0x0000000000443913 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x4438c0
0x0000000000410589 : add rsp, 0x10 ; mov eax, r8d ; pop rbx ; ret
0x000000000041e86f : add rsp, 0x10 ; mov rax, r8 ; pop rbp ; ret
0x000000000041e678 : add rsp, 0x10 ; mov rax, r8 ; pop rbx ; ret
0x0000000000459dc7 : add rsp, 0x10 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b4a0 : add rsp, 0x10 ; pop rbp ; ret
0x00000000004178c4 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000412345 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004854d0 : add rsp, 0x10 ; pop rbx ; ret
0x000000000040f661 : add rsp, 0x118 ; ret
0x000000000045c3a5 : add rsp, 0x148 ; ret
0x000000000041fa2d : add rsp, 0x18 ; jmp rax
0x0000000000410449 : add rsp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000049067f : add rsp, 0x18 ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000412d26 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041fa20 : add rsp, 0x18 ; ret
0x0000000000417fe0 : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004596ec : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004477f5 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000418462 : add rsp, 0x20 ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000411059 : add rsp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000044879d : add rsp, 0x28 ; ret
0x000000000048a9dc : add rsp, 0x30 ; mov rax, r12 ; pop r12 ; ret
0x00000000004172b9 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d1a9 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000004136d3 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004713f2 : add rsp, 0x38 ; ret
0x000000000047d97f : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000047d8fd : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449454 : add rsp, 0x58 ; ret
0x00000000004488fb : add rsp, 0x68 ; pop rbp ; pop r12 ; ret
0x000000000044930d : add rsp, 0x68 ; ret
0x000000000046fcd9 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044be4c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000401f34 : add rsp, 0x88 ; pop rbx ; ret
0x0000000000402962 : add rsp, 0x98 ; ret
0x0000000000410dea : add rsp, 0xd8 ; ret
0x00000000004130ca : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411763 : add rsp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000004179a7 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000048a91c : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000044a4c8 : add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000045ab33 : add rsp, 8 ; pop rbx ; pop r14 ; ret
0x0000000000403256 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000401016 : add rsp, 8 ; ret
0x000000000047a590 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004851de : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000421dad : and al, 0 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000474698 : and al, 0 ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x401199
0x000000000048f7bb : and al, 0x10 ; add rsp, 0x28 ; ret
0x000000000041ccb0 : and al, 0x10 ; call rax
0x000000000047e455 : and al, 0x10 ; call rsi
0x0000000000417ff8 : and al, 0x10 ; mov qword ptr [rsp + 8], rdi ; call 0x414219
0x0000000000402577 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045cf20 : and al, 0x10 ; mov rdx, rbp ; mov rdi, r12 ; call rbx
0x000000000046a92c : and al, 0x18 ; add dword ptr [rax], eax ; add al, ch ; retf 0xffcc
0x000000000041fa2b : and al, 0x18 ; add rsp, 0x18 ; jmp rax
0x000000000040257c : and al, 0x18 ; call rax
0x00000000004480ed : and al, 0x18 ; call rbx
0x000000000041ccab : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rax
0x0000000000447f63 : and al, 0x18 ; mov rcx, r12 ; mov rdx, r13 ; call rbx
0x000000000041ef48 : and al, 0x18 ; mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000045c61b : and al, 0x18 ; mov rdx, rbp ; mov rsi, r12 ; call rbx
0x000000000047e450 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x000000000041f513 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044ec58 : and al, 0x18 ; xor r8d, r8d ; call rbx
0x0000000000452f5c : and al, 0x20 ; call rax
0x000000000046fc44 : and al, 0x20 ; call rbx
0x0000000000475487 : and al, 0x20 ; mov rsi, r15 ; call 0x471f77
0x00000000004513bb : and al, 0x28 ; call rax
0x000000000046fb21 : and al, 0x28 ; call rbx
0x0000000000420e63 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000045215e : and al, 0x30 ; call rax
0x000000000046fe4f : and al, 0x30 ; call rbx
0x0000000000455760 : and al, 0x38 ; call r15
0x000000000045516c : and al, 0x38 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000041fc43 : and al, 0x38 ; mov rdi, r14 ; call rax
0x000000000047d97d : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000047d8fb : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004541de : and al, 0x40 ; call r14
0x000000000045472c : and al, 0x40 ; call rbx
0x000000000045575b : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000046e844 : and al, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004178e8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048d248 : and al, 0x48 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000048cf5f : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000453aeb : and al, 0x48 ; call rbx
0x0000000000414c22 : and al, 0x48 ; mov edi, ebp ; call rax
0x000000000048462b : and al, 0x48 ; mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004541d9 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x0000000000454727 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000040f7c7 : and al, 0x4c ; mov edx, esi ; mov rax, qword ptr [rsp] ; call rax
0x000000000040f8be : and al, 0x4c ; mov esi, esp ; mov rdi, r13 ; call rax
0x000000000040f933 : and al, 0x4d ; mov ebp, edi ; add r15, rbx ; call rax
0x00000000004564ea : and al, 0x50 ; call rbx
0x00000000004577fd : and al, 0x50 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000456100 : and al, 0x50 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000453ae6 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000451660 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x0000000000452bb0 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x00000000004523ca : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x0000000000451665 : and al, 0x58 ; call r14
0x0000000000452bb5 : and al, 0x58 ; call r15
0x00000000004523cf : and al, 0x58 ; call rbx
0x0000000000452730 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452f57 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004513b6 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000452159 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000004564e5 : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000451ddf : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x0000000000451de4 : and al, 0x60 ; call r15
0x00000000004519a1 : and al, 0x60 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004823f0 : and al, 0x83 ; ret
0x000000000041d800 : and al, 0x89 ; ret 0xb48b
0x000000000047350d : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000473d51 : and al, 0xc0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000472064 : and al, 0xd ; add dword ptr [rbp + rcx*4 + 0xd], ecx ; retf 0x356
0x000000000046775d : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000417e74 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x000000000046179c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000048d40c : and al, 0xd8 ; ret
0x0000000000473d44 : and al, 0xe0 ; add eax, dword ptr [rax] ; add dh, dh ; ret 0x7402
0x000000000040a810 : and al, 0xe8 ; cli ; retf 0xffff
0x000000000040a719 : and al, 0xe8 ; int1 ; retf
0x000000000040a866 : and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000040a7ba : and al, 0xe8 ; push rax ; retf
0x000000000040d847 : and al, 0xe8 ; ret
0x000000000040cdc8 : and al, 0xe8 ; ret 0x12b
0x000000000040e948 : and al, 0xe8 ; ret 0xff89
0x000000000040d548 : and al, 0xe8 ; ret 0xff9d
0x000000000040a148 : and al, 0xe8 ; ret 0xffd1
0x0000000000409a3f : and al, 0xe8 ; retf
0x000000000040d9c0 : and al, 0xe8 ; retf 0x11f
0x000000000040e640 : and al, 0xe8 ; retf 0xff8c
0x000000000040a007 : and al, 0xe9 ; ret 0xffed
0x000000000040a6d1 : and al, 0xe9 ; retf
0x0000000000493b93 : and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000491018 : and al, 0xf6 ; ret 0xf01
0x000000000045c606 : and al, 1 ; mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000449332 : and al, 8 ; add cl, byte ptr [rbx + 0x750c2444] ; ret 0xd8f7
0x0000000000418015 : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000448a14 : and al, 8 ; add rsp, 0x28 ; ret
0x0000000000417ffd : and al, 8 ; call 0x414214
0x0000000000448a96 : and al, 8 ; mov eax, 1 ; syscall
0x0000000000490155 : and al, 8 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000040a80b : and al, 8 ; mov qword ptr [rsp], r9 ; call 0x407318
0x000000000040a80a : and al, 8 ; mov qword ptr [rsp], r9 ; call 0x407319
0x000000000047b483 : and al, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044abe0 : and al, 8 ; mov rdi, qword ptr [r8] ; call rbx
0x0000000000449a2b : and al, 8 ; mov rdi, r13 ; call rax
0x0000000000412561 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000004489f6 : and al, 8 ; xor eax, eax ; syscall
0x000000000043f8ca : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000041426f : and al, ch ; retf
0x00000000004229fc : and bh, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046b47b : and bl, ch ; retf 0x9066
0x0000000000412979 : and byte ptr [r11 + rcx*4 + 0x6d], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004129a7 : and byte ptr [r8 + 1], r9b ; ret
0x000000000046ed16 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000041df1d : and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000041d841 : and byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000411fce : and byte ptr [rax + 0x39], cl ; ret 0x894c
0x000000000043eeba : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411b45 : and byte ptr [rax + 0x3d8b4803], cl ; cdq ; retf
0x000000000042a137 : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004129a8 : and byte ptr [rax + 1], cl ; ret
0x000000000040219c : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000043f18c : and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000043f2ad : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046f5ce : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000473f74 : and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x00000000004480e6 : and byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000044f0f4 : and byte ptr [rax - 0x77], cl ; ret
0x000000000045b868 : and byte ptr [rax - 0x77], cl ; std ; test rax, rax ; je 0x45b87c ; call rax
0x0000000000492dc3 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff7
0x0000000000492cc3 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff8
0x0000000000492bc3 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfff9
0x0000000000492ac3 : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xfffa
0x00000000004147c2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000470ed5 : and byte ptr [rax], al ; add al, ch ; ret
0x000000000044ba30 : and byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x8148
0x00000000004678f9 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000468b7e : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000044718b : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004020a8 : and byte ptr [rax], al ; add dh, dh ; ret 0x7440
0x000000000049264b : and byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf
0x00000000004596ef : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041297a : and byte ptr [rbx + rcx*4 + 0x6d], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000041b49c : and byte ptr [rbx], dh ; or al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000453611 : and byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000481f9c : and byte ptr [rcx + 9], cl ; ret
0x0000000000475488 : and byte ptr [rcx + rcx*4 - 2], cl ; call 0x471f76
0x000000000049123c : and byte ptr [rcx - 0x75], cl ; insd dword ptr [rdi], dx ; sbb dh, dh ; ret 0xf01
0x000000000040ec29 : and byte ptr [rcx - 0x77], cl ; ret 0x1c74
0x000000000043f6f8 : and byte ptr [rcx], ch ; retf 0x9ceb
0x0000000000417807 : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004460d5 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000443ae0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000042aa1a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000479725 : and byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret
0x0000000000491033 : and byte ptr [rsi - 9], ah ; ret
0x0000000000470532 : and ch, 0xf ; je 0x470559 ; add rax, 2 ; ret
0x0000000000447148 : and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000046f31b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000047051d : and cl, 0xf ; je 0x470545 ; ret
0x000000000047c88a : and cl, byte ptr [rbx - 0x76b70000] ; ret
0x0000000000463099 : and cl, ch ; retf
0x00000000004481fd : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044c151 : and dh, al ; sub byte ptr [r9], r8b ; ret
0x000000000044c1bd : and dh, al ; sub byte ptr [rcx], al ; ret
0x000000000047c24a : and dl, byte ptr [rbx - 0x76b70000] ; ret
0x000000000041bfe7 : and dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000047a953 : and dword ptr [rax - 0x77], ecx ; ret 0x2548
0x000000000041889b : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004188f3 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000484b1b : and dword ptr [rbx], esp ; cld ; dec dword ptr [rax + 0x21] ; ret 0x8d48
0x000000000042a25e : and dword ptr [rcx - 0x77], ecx ; ret
0x000000000041c64d : and dword ptr [rdx], ecx ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000451b1b : and dword ptr [rsp + rax], 0 ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045c02f : and eax, 0 ; ret
0x00000000004489b7 : and eax, 0x18 ; test eax, eax ; jne 0x4489d9 ; syscall
0x000000000046ac1a : and eax, 0x2358d48 ; ret
0x00000000004100d4 : and eax, 0x30 ; call rax
0x00000000004100b6 : and eax, 0x30 ; call rdx
0x000000000046a0c5 : and eax, 0x39480000 ; ret
0x00000000004470ce : and eax, 0x3fc00 ; ret
0x00000000004471c8 : and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x0000000000447119 : and eax, 0x3fffc00 ; ret
0x00000000004713ee : and eax, 0x48c88944 ; add esp, 0x38 ; ret
0x000000000046d17a : and eax, 0x6e0f4866 ; ret
0x00000000004471b1 : and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x0000000000447167 : and eax, 0x7ff80000 ; ret
0x0000000000454ae9 : and eax, 0x833fe283 ; retf 0x4180
0x000000000047869e : and eax, 0x8348df74 ; ret
0x000000000046dc7b : and eax, 0xc ; cmp eax, 4 ; je 0x46dc8c ; ret
0x0000000000421371 : and eax, 1 ; cmovne rax, rdx ; ret
0x000000000048871c : and eax, 2 ; sub eax, 1 ; ret
0x000000000047795a : and eax, esi ; cmp rdi, rax ; jne 0x477970 ; pop rbx ; ret
0x000000000041889c : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004188f4 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046dc16 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x46dc29 ; ret
0x0000000000414284 : and ebx, dword ptr [rbx + 0x4c] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048c4ba : and ecx, 0x39447fff ; ret
0x000000000042bf95 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042b6c8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000004547cd : and ecx, dword ptr [rax + 0x39] ; ret 0x850f
0x000000000041abb5 : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484b1c : and edi, esp ; dec dword ptr [rax + 0x21] ; ret 0x8d48
0x0000000000487f9c : and esi, 2 ; syscall
0x0000000000477959 : and rax, rsi ; cmp rdi, rax ; jne 0x477971 ; pop rbx ; ret
0x000000000044c1bc : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000457e17 : bnd jb 0x457e2d ; mov r9, rsi ; mov r10, rcx ; jmp 0x457de2
0x00000000004700d8 : bnd je 0x4700e6 ; test edx, edx ; jne 0x4700d7 ; ret
0x0000000000429e8a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042a000 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042a121 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042a010 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042a020 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000429ff0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x0000000000429fd9 : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000043eb37 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000043f15a : bsf eax, edx ; ret
0x0000000000470187 : bsf eax, edx ; shr rax, 2 ; ret
0x000000000043f2b2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000043ec50 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x000000000043f1a2 : bsf rax, rdx ; ret
0x0000000000470186 : bsf rax, rdx ; shr rax, 2 ; ret
0x000000000046efab : bsr eax, eax ; add rax, rdi ; ret
0x000000000046f23b : bsr eax, esi ; add rax, rdi ; ret
0x000000000046f149 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x000000000046f045 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x000000000046efaa : bsr rax, rax ; add rax, rdi ; ret
0x000000000046f23a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000046f148 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000046f044 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x0000000000404719 : call 0x401182
0x000000000047469f : call 0x401192
0x000000000040b0dd : call 0x407312
0x0000000000403300 : call 0x40f512
0x00000000004842cc : call 0x410d42
0x0000000000416ac3 : call 0x412dc2
0x0000000000417fff : call 0x414212
0x000000000041e022 : call 0x41a302
0x000000000041e38f : call 0x41a692
0x000000000041dc4a : call 0x41a6f2
0x0000000000421b27 : call 0x41de12
0x00000000004936bf : call 0x41f992
0x000000000044de81 : call 0x42a182
0x000000000045b8fc : call 0x448372
0x000000000047d53f : call 0x4497c2
0x000000000045d6e6 : call 0x4499c2
0x000000000046fd40 : call 0x44bff2
0x00000000004215e6 : call 0x45e062
0x0000000000463ad2 : call 0x46fd72
0x000000000047548c : call 0x471f72
0x000000000041e642 : call 0xffffffffc37b2e4c
0x000000000043f9c7 : call 0xffffffffc4148318
0x000000000043f8d7 : call 0xffffffffc43c8228
0x000000000048d136 : call 0xffffffffcb6a1a6f
0x0000000000403d26 : call 2
0x000000000041e72e : call qword ptr [rax]
0x00000000004101d8 : call qword ptr [rbx]
0x0000000000408db9 : call qword ptr [rcx]
0x000000000048f100 : call qword ptr [rdx]
0x00000000004785b7 : call r10
0x000000000047c010 : call r11
0x0000000000413af5 : call r12
0x000000000044ffb7 : call r14
0x0000000000451de6 : call r15
0x000000000046b79a : call r8
0x0000000000401014 : call rax
0x0000000000447f6b : call rbx
0x000000000043964d : call rdi
0x00000000004100bb : call rdx
0x000000000044f6ae : call rsi
0x0000000000413af6 : call rsp
0x0000000000427667 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000414a0b : cdq ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000046b085 : cdq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x894d
0x000000000041a2e3 : cdq ; or r8b, byte ptr [rax] ; ret
0x0000000000463ad3 : cdq ; ret 0
0x0000000000411b4b : cdq ; retf
0x000000000041286c : clc ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000470322 : clc ; add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret
0x00000000004875ae : clc ; add cl, ch ; ret
0x000000000047fda3 : clc ; add cl, ch ; ret 0xfff6
0x000000000040eb65 : clc ; add dword ptr [rbx - 0x7cb60030], eax ; ret
0x00000000004487cf : clc ; add dword ptr [rdi + 0x2d], esi ; mov eax, 4 ; syscall
0x000000000047124f : clc ; add dword ptr [rdi + 0x2d], esi ; mov eax, 6 ; syscall
0x000000000044882e : clc ; add dword ptr [rdi + 0x2e], esi ; mov eax, 5 ; syscall
0x000000000048ab5d : clc ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000429e8f : clc ; add rax, rcx ; ret
0x000000000042a08b : clc ; add rax, rcx ; vzeroupper ; ret
0x000000000042bf39 : clc ; cmp rcx, rax ; jne 0x42bf6b ; xor eax, eax ; ret
0x000000000042bf38 : clc ; cmp rcx, rax ; jne 0x42bf6c ; xor eax, eax ; ret
0x0000000000421d04 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000047b8b4 : clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000047cb75 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047d080 : clc ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004936f1 : clc ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x41f997
0x0000000000460598 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047cdd8 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000049243e : clc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000045f790 : clc ; idiv bh ; call qword ptr [rax]
0x0000000000460836 : clc ; idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x0000000000466026 : clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x00000000004667a9 : clc ; idiv bh ; inc dword ptr [rcx] ; retf
0x0000000000464e6c : clc ; idiv bh ; inc esi ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x000000000046b338 : clc ; jmp rax
0x000000000048faa2 : clc ; leave ; ret
0x000000000042da47 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042e3b7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433337 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e5b7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004332a7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e7b7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433217 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042da63 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446ca2 : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000446e21 : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000436ce0 : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000445f1e : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048fc0f : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; pop rcx ; jmp rcx
0x000000000047e73b : clc ; or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x0000000000401768 : clc ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x000000000041aa3a : clc ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000004197a6 : clc ; ret
0x0000000000416ac4 : clc ; ret 0xffff
0x000000000043d494 : clc ; rol ch, 1 ; jns 0x43d475 ; retf 0xead3
0x000000000043d5e4 : clc ; rol ch, 1 ; jns 0x43d5c5 ; retf 0xead3
0x000000000043d734 : clc ; rol ch, 1 ; jns 0x43d715 ; retf 0xead3
0x000000000043d884 : clc ; rol ch, 1 ; jns 0x43d865 ; retf 0xead3
0x000000000043d9d4 : clc ; rol ch, 1 ; jns 0x43d9b5 ; retf 0xead3
0x000000000043db24 : clc ; rol ch, 1 ; jns 0x43db05 ; retf 0xead3
0x000000000043dc74 : clc ; rol ch, 1 ; jns 0x43dc55 ; retf 0xead3
0x000000000043ddc4 : clc ; rol ch, 1 ; jns 0x43dda5 ; retf 0xead3
0x000000000043df14 : clc ; rol ch, 1 ; jns 0x43def5 ; retf 0xead3
0x000000000043e064 : clc ; rol ch, 1 ; jns 0x43e045 ; retf 0xead3
0x000000000043e1b4 : clc ; rol ch, 1 ; jns 0x43e195 ; retf 0xead3
0x000000000043e304 : clc ; rol ch, 1 ; jns 0x43e2e5 ; retf 0xead3
0x000000000043e454 : clc ; rol ch, 1 ; jns 0x43e435 ; retf 0xead3
0x000000000043e5a4 : clc ; rol ch, 1 ; jns 0x43e585 ; retf 0xead3
0x000000000043e6f4 : clc ; rol ch, 1 ; jns 0x43e6d5 ; retf 0xead3
0x0000000000488e9a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047029f : clc ; shr rax, 2 ; ret
0x000000000047d831 : clc ; std ; jbe 0x47d844 ; ret
0x0000000000459c6b : clc ; std ; je 0x459c8d ; pop rbx ; ret
0x000000000043f3d6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000042a126 : clc ; vzeroupper ; ret
0x0000000000401d4f : cld ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004470d0 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000484b1d : cld ; dec dword ptr [rax + 0x21] ; ret 0x8d48
0x000000000044d192 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004471ca : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x000000000044711b : cld ; inc dword ptr [rbx] ; ret
0x000000000042e1d2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042e3d5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e5d5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e7d5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000446caa : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000446e2c : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000436cf2 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000445f2c : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000445f26 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042de06 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004334c6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042dfe6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000433446 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e1c6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004333c6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042dc26 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000433546 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046e686 : cld ; or byte ptr [rax + 0xf], cl ; ret
0x000000000042dab1 : cld ; ret
0x000000000041e390 : cld ; ret 0xffff
0x00000000004467c6 : cld ; vzeroupper ; ret
0x0000000000484b2b : cli ; add al, 0x4c ; cmovne eax, eax ; mov rax, r8 ; ret
0x0000000000416ac1 : cli ; add ch, al ; clc ; ret 0xffff
0x00000000004126ac : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000446c95 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x446ca5 ; mov byte ptr [rdi], cl ; ret
0x0000000000445c4f : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000436d10 : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447fd0 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448024 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000417d03 : cli ; cmp qword ptr [rdi + 0x38], 0 ; je 0x417d18 ; ret
0x000000000047ca0c : cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000474708 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000045df7a : cli ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004568c3 : cli ; dec dword ptr [rbp - 0x77] ; ret
0x000000000047b496 : cli ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457fd5 : cli ; dec dword ptr [rcx - 0x77] ; dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x00000000004765c5 : cli ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045663b : cli ; dec dword ptr [rcx - 0x77] ; retf
0x00000000004470ef : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x0000000000436ccb : cli ; jg 0x436cde ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000445c1a : cli ; jg 0x445c2c ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044628d : cli ; jg 0x4462a0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004466f5 : cli ; jg 0x446708 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446e16 : cli ; jg 0x446e26 ; vzeroupper ; ret
0x0000000000446fec : cli ; jg 0x446ffc ; vzeroupper ; ret
0x000000000040eeb3 : cli ; jmp r10
0x000000000040ed85 : cli ; jmp rdx
0x000000000044d473 : cli ; lea rax, [rip + 0x71dc5] ; ret
0x000000000042e5d8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000448733 : cli ; mov eax, 0x18 ; syscall
0x0000000000449823 : cli ; mov eax, 0x1c ; syscall
0x000000000048aad3 : cli ; mov eax, 0x26 ; syscall
0x0000000000485183 : cli ; mov eax, 0x27 ; syscall
0x00000000004711d3 : cli ; mov eax, 0x3f ; syscall
0x000000000044bfa3 : cli ; mov eax, 0x63 ; syscall
0x0000000000471203 : cli ; mov eax, 0x66 ; syscall
0x0000000000471223 : cli ; mov eax, 0x68 ; syscall
0x0000000000471213 : cli ; mov eax, 0x6b ; syscall
0x0000000000471233 : cli ; mov eax, 0x6c ; syscall
0x00000000004497f3 : cli ; mov eax, 0xa ; syscall
0x00000000004497c3 : cli ; mov eax, 0xb ; syscall
0x0000000000471423 : cli ; mov eax, 0xc ; syscall
0x0000000000470af3 : cli ; mov eax, 0xc9 ; syscall
0x0000000000471483 : cli ; mov eax, 0xe4 ; syscall
0x0000000000417dc3 : cli ; mov eax, 0xffffffff ; ret
0x0000000000449573 : cli ; mov eax, 1 ; syscall
0x0000000000449283 : cli ; mov eax, 3 ; syscall
0x0000000000448af3 : cli ; mov eax, 8 ; syscall
0x0000000000419423 : cli ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000491833 : cli ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491847 ; ret
0x0000000000491a73 : cli ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491a87 ; ret
0x00000000004853a3 : cli ; mov eax, dword ptr [rip + 0x3c49e] ; ret
0x000000000048f773 : cli ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044bf73 : cli ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000418843 : cli ; mov rax, -1 ; ret
0x000000000047d863 : cli ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000419793 : cli ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048f6d3 : cli ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048f743 : cli ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048f783 : cli ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048f7e3 : cli ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048f7d3 : cli ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048f793 : cli ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000487d73 : cli ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487d89 ; ret
0x0000000000459463 : cli ; mov rax, qword ptr [rip + 0x679a5] ; ret
0x000000000044fab3 : cli ; mov rax, qword ptr [rip + 0x71e1d] ; ret
0x0000000000419773 : cli ; mov rax, qword ptr [rip + 0xa49a5] ; ret
0x00000000004197a3 : cli ; mov rax, rdi ; ret
0x0000000000491611 : cli ; mov rsi, qword ptr [r12 + r14*8 + 0x10] ; mov rdi, r13 ; call rax
0x000000000042a279 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000428de6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000455c36 : cli ; or byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000041ed07 : cli ; or dword ptr [rax], eax ; syscall
0x0000000000446bc6 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000401c43 : cli ; ret
0x000000000044de82 : cli ; ret 0xfffd
0x000000000040a812 : cli ; retf 0xffff
0x00000000004844e2 : cli ; retf 3
0x0000000000474cda : cli ; retf 4
0x000000000041a223 : cli ; setae al ; ret
0x0000000000493f03 : cli ; sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000446bb3 : cli ; test rdx, rdx ; jne 0x446bc6 ; mov rax, rdi ; ret
0x000000000046f423 : cli ; test rsi, rsi ; jne 0x46f436 ; xor rax, rax ; ret
0x00000000004700e3 : cli ; test rsi, rsi ; jne 0x4700f6 ; xor rax, rax ; ret
0x00000000004187c3 : cli ; xor eax, eax ; ret
0x0000000000449543 : cli ; xor eax, eax ; syscall
0x0000000000416093 : cli ; xor eax, eax ; test rdx, rdx ; jne 0x4160a8 ; ret
0x0000000000416617 : cmc ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000043344a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042de5e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000444fc3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004012d0 : cmc ; or eax, dword ptr [rax] ; syscall
0x0000000000444fc7 : cmc ; sub eax, edx ; ret
0x0000000000485151 : cmova edx, eax ; mov eax, 0xd9 ; syscall
0x0000000000485150 : cmova rdx, rax ; mov eax, 0xd9 ; syscall
0x000000000041a1cd : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000041a1cc : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000047a74a : cmove eax, eax ; mov rax, r8 ; ret
0x0000000000470328 : cmove eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004470f5 : cmove eax, ecx ; ret
0x0000000000421d07 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000045dcd8 : cmove eax, edx ; jmp 0x45dcf2
0x0000000000421eb1 : cmove eax, edx ; ret
0x000000000047a749 : cmove r8, rax ; mov rax, r8 ; ret
0x00000000004470f4 : cmove rax, rcx ; ret
0x0000000000421d06 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000045dcd7 : cmove rax, rdx ; jmp 0x45dcf3
0x0000000000421eb0 : cmove rax, rdx ; ret
0x0000000000417723 : cmovg eax, ecx ; test rdx, rdx ; jne 0x417720 ; ret
0x000000000046ca1b : cmovg eax, ecx ; test rdx, rdx ; jne 0x46ca18 ; ret
0x0000000000417722 : cmovg rax, rcx ; test rdx, rdx ; jne 0x417721 ; ret
0x000000000046ca1a : cmovg rax, rcx ; test rdx, rdx ; jne 0x46ca19 ; ret
0x000000000048f7b8 : cmovne eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000484b2e : cmovne eax, eax ; mov rax, r8 ; ret
0x0000000000413a15 : cmovne eax, ecx ; ret
0x0000000000421375 : cmovne eax, edx ; ret
0x000000000043ed84 : cmovne eax, edx ; vzeroupper ; ret
0x00000000004842c7 : cmovne ecx, eax ; xor eax, eax ; call 0x410d47
0x0000000000484b2d : cmovne r8, rax ; mov rax, r8 ; ret
0x0000000000413a14 : cmovne rax, rcx ; ret
0x0000000000421374 : cmovne rax, rdx ; ret
0x000000000043ed83 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000004842c6 : cmovne rcx, rax ; xor eax, eax ; call 0x410d48
0x0000000000452806 : cmovns eax, dword ptr [rbx + 0x394804c7] ; ret 0x2074
0x000000000046e99c : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004698c7 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0xfb83
0x00000000004511f0 : cmovs eax, edx ; ret
0x000000000041bd03 : cmovs ecx, dword ptr [rbx - 0x173ef7be] ; add al, 0x39 ; ret
0x0000000000418968 : cmovs edi, dword ptr [rcx] ; int1 ; ja 0x418969 ; lea eax, [rdx + rdi] ; ret
0x000000000044709e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000447130 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004256f8 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x0000000000484a0f : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004849d8 : cmp ah, byte ptr [rbx - 0x2e] ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x00000000004178e7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000044a683 : cmp al, 0x24 ; call rbx
0x000000000040f7c6 : cmp al, 0x24 ; mov rdx, r14 ; mov rax, qword ptr [rsp] ; call rax
0x0000000000411aa6 : cmp al, 0x5b ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000487f97 : cmp al, 1 ; sbb esi, esi ; and esi, 2 ; syscall
0x0000000000422986 : cmp al, 2 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000468570 : cmp al, 5 ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004227d4 : cmp al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000445486 : cmp al, byte ptr [rsi - 1] ; jne 0x4454ac ; xor eax, eax ; ret
0x0000000000429ff6 : cmp al, dh ; ret
0x0000000000429ff5 : cmp al, r14b ; ret
0x00000000004902ab : cmp bh, 3 ; jne 0x4902d9 ; add rsp, 8 ; ret
0x00000000004849db : cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000041241c : cmp bl, 0x4b ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004612c4 : cmp bl, 0x4b ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000417d87 : cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004184f0 : cmp byte ptr [r13 + 0x41], r11b ; pop rsp ; ret
0x000000000041528c : cmp byte ptr [r8 + 0xf], r9b ; ret 0x110f
0x00000000004120fd : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000473703 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000467ca3 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000044d29f : cmp byte ptr [rax + 0x39], cl ; retf 0x1174
0x000000000041528d : cmp byte ptr [rax + 0xf], cl ; ret 0x110f
0x000000000046ec37 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000045516d : cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004120fe : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000488bd2 : cmp byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004131a4 : cmp byte ptr [rax - 0x75], cl ; xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x00000000004184bd : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000047179f : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040f393 : cmp byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040f35d : cmp byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040f3de : cmp byte ptr [rax - 0x7d], cl ; retf 0xe90c
0x000000000040f3c9 : cmp byte ptr [rax - 0x7d], cl ; retf 0xeb0a
0x0000000000492ee0 : cmp byte ptr [rax], 0x2f ; jne 0x492ed7 ; call 0x41f997
0x0000000000492f50 : cmp byte ptr [rax], 0x2f ; jne 0x492f47 ; call 0x41f997
0x000000000042a026 : cmp byte ptr [rax], ah ; ret
0x0000000000417d07 : cmp byte ptr [rax], al ; je 0x417d14 ; ret
0x000000000048e681 : cmp byte ptr [rax], al ; je 0x48e6dc ; add rsp, 0x18 ; ret
0x000000000043e914 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042a016 : cmp byte ptr [rax], dl ; ret
0x000000000042a015 : cmp byte ptr [rax], r10b ; ret
0x000000000042a025 : cmp byte ptr [rax], r12b ; ret
0x000000000043e913 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000454876 : cmp byte ptr [rbp + 0x39], cl ; ret 0x820f
0x0000000000488147 : cmp byte ptr [rbp + 0x39], cl ; ret 0x840f
0x00000000004184f1 : cmp byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000041920b : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417d88 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004136d6 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000041fc44 : cmp byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000417ce1 : cmp byte ptr [rcx - 0x3b7cb7fd], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000047bfea : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000041bbfe : cmp byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004215fc : cmp byte ptr [rdi], al ; add al, ch ; pop rsp ; retf 3
0x0000000000421615 : cmp byte ptr [rdi], al ; add al, ch ; retf 3
0x0000000000492ee1 : cmp byte ptr [rdi], ch ; jne 0x492ed6 ; call 0x41f996
0x0000000000492f51 : cmp byte ptr [rdi], ch ; jne 0x492f46 ; call 0x41f996
0x000000000042b40d : cmp byte ptr [rdi], dl ; ret
0x000000000042bf20 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042bf09 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042bef2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042a9ae : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000422934 : cmp byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000416582 : cmp ch, byte ptr [rbx - 0x76b70002] ; ret
0x0000000000484a12 : cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004840aa : cmp cl, bh ; add eax, dword ptr [rax] ; ret
0x000000000048b392 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000047a033 : cmp cl, byte ptr [rcx - 0x77] ; retf
0x000000000046b26b : cmp cl, byte ptr [rcx - 0x77] ; ror byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042c602 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042c752 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042c8a2 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042c9f2 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042cb42 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042cc92 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042cde2 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042cf32 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042d082 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042d1d2 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042d322 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042d472 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042d5c2 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042d712 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042d862 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000043185a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x00000000004319da : cmp cl, byte ptr [rdi] ; retf 0xf02
0x0000000000431b5a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x0000000000431cda : cmp cl, byte ptr [rdi] ; retf 0xf04
0x0000000000431e5a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x0000000000431fda : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000043215a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x00000000004322da : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000043245a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x00000000004325da : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000043275a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x00000000004328da : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x0000000000432a5a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x0000000000432bda : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x0000000000432d5a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000043ed81 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000446fce : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000446c94 : cmp dl, 1 ; ja 0x446cb7 ; jb 0x446ca6 ; mov byte ptr [rdi], cl ; ret
0x0000000000436d0f : cmp dl, 1 ; jb 0x436d21 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000445c4e : cmp dl, 1 ; jb 0x445c5c ; mov byte ptr [rdi], cl ; ret
0x00000000004213d5 : cmp dl, al ; jne 0x4213c8 ; sub rax, 0x10 ; ret
0x00000000004213d4 : cmp dl, r8b ; jne 0x4213c9 ; sub rax, 0x10 ; ret
0x000000000046d09c : cmp dword ptr [rax + 0x30], 0 ; je 0x46d0ae ; ret
0x00000000004284c7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428ca7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045cc9d : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000047197b : cmp dword ptr [rax], eax ; je 0x4719bf ; leave ; xor eax, eax ; ret
0x000000000045a932 : cmp dword ptr [rbp + 8], 0x850f5241 ; retf
0x000000000041f21e : cmp dword ptr [rbx + 0xa1aba2d], eax ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000432f78 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004758c0 : cmp dword ptr [rdi + 0x14], 0x850f2f75 ; retf 0xfffc
0x0000000000417d05 : cmp dword ptr [rdi + 0x38], 0 ; je 0x417d16 ; ret
0x000000000045bfd0 : cmp dword ptr [rdi], esi ; je 0x45bfdc ; ret
0x0000000000413a12 : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x00000000004227d3 : cmp dword ptr [rdx], edi ; add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000414215 : cmp dword ptr [rip + 0xa9d84], 0 ; je 0x414228 ; ret
0x00000000004900fe : cmp dword ptr [rsi + 8], ecx ; ja 0x49010c ; sbb eax, eax ; ret
0x000000000047b8b3 : cmp eax, -1 ; cmove rax, rdx ; ret
0x000000000047d830 : cmp eax, -3 ; jbe 0x47d845 ; ret
0x0000000000459c6a : cmp eax, -3 ; je 0x459c8e ; pop rbx ; ret
0x000000000041e07e : cmp eax, 0x1000a07 ; pop rbp ; ret
0x000000000041aa0e : cmp eax, 0x148000a ; ret
0x000000000041a638 : cmp eax, 0x2000000 ; jbe 0x41a647 ; ret
0x0000000000493ae9 : cmp eax, 0x2d452 ; syscall
0x000000000048aa58 : cmp eax, 0x334aa ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x290f
0x000000000041aa18 : cmp eax, 0x3948000a ; ret
0x0000000000483fb9 : cmp eax, 0x3d016 ; syscall
0x0000000000483d35 : cmp eax, 0x3d296 ; syscall
0x0000000000481cb1 : cmp eax, 0x3f312 ; syscall
0x0000000000481b71 : cmp eax, 0x3f452 ; syscall
0x000000000045da99 : cmp eax, 0x634a2 ; syscall
0x000000000045d9d4 : cmp eax, 0x63567 ; syscall
0x000000000045d832 : cmp eax, 0x63709 ; syscall
0x000000000045d758 : cmp eax, 0x637e3 ; syscall
0x0000000000450059 : cmp eax, 0x71882 ; syscall
0x000000000044feed : cmp eax, 0x719ee ; syscall
0x000000000044fdcd : cmp eax, 0x71b0e ; syscall
0x000000000041e38a : cmp eax, 0x769fd ; call 0x41a697
0x000000000041dc7d : cmp eax, 0x770b1 ; call 0x41a697
0x000000000041dc39 : cmp eax, 0x770da ; call 0x41a697
0x000000000041dc1a : cmp eax, 0x77114 ; call 0x41a697
0x000000000041e3a9 : cmp eax, 0x775d2 ; call 0x41a697
0x000000000041dc45 : cmp eax, 0x77c6e ; call 0x41a6f7
0x0000000000447d35 : cmp eax, 0x79ba6 ; syscall
0x000000000046f2a4 : cmp eax, 0x89000001 ; ret 0x8948
0x00000000004684f0 : cmp eax, 0x89490005 ; retf
0x0000000000421985 : cmp eax, 0x9ce36 ; syscall
0x000000000042134c : cmp eax, 0x9f97e ; add dword ptr [rax - 0x77], ecx ; ret 0x3174
0x000000000041ed65 : cmp eax, 0x9fa56 ; syscall
0x000000000041ed05 : cmp eax, 0x9fab6 ; syscall
0x000000000041e945 : cmp eax, 0x9fe76 ; syscall
0x000000000041e6e5 : cmp eax, 0xa00d6 ; syscall
0x000000000041e11d : cmp eax, 0xa069e ; syscall
0x000000000041e0e5 : cmp eax, 0xa06d6 ; syscall
0x000000000041fcc5 : cmp eax, 0xa1026 ; syscall
0x000000000041f279 : cmp eax, 0xa1a62 ; syscall
0x000000000041b3f6 : cmp eax, 0xa58e5 ; syscall
0x000000000041b3c5 : cmp eax, 0xa5926 ; syscall
0x000000000041b145 : cmp eax, 0xa5ba6 ; syscall
0x000000000041ac21 : cmp eax, 0xa60ca ; syscall
0x0000000000419867 : cmp eax, 0xa7404 ; syscall
0x00000000004192a7 : cmp eax, 0xa79c4 ; syscall
0x0000000000418f3b : cmp eax, 0xa7d30 ; syscall
0x0000000000418bf9 : cmp eax, 0xa8072 ; syscall
0x0000000000417693 : cmp eax, 0xa95d8 ; syscall
0x00000000004173f3 : cmp eax, 0xa9878 ; syscall
0x000000000041709f : cmp eax, 0xa9bcc ; syscall
0x0000000000411635 : cmp eax, 0xb02a6 ; syscall
0x00000000004105e4 : cmp eax, 0xb1187 ; syscall
0x00000000004104a4 : cmp eax, 0xb12c7 ; syscall
0x000000000041026d : cmp eax, 0xb14fe ; syscall
0x0000000000410232 : cmp eax, 0xb1539 ; syscall
0x000000000041014e : cmp eax, 0xb161d ; syscall
0x0000000000406a32 : cmp eax, 0xb9dc1 ; syscall
0x000000000040508f : cmp eax, 0xbb72c ; syscall
0x0000000000403f10 : cmp eax, 0xbc803 ; syscall
0x0000000000403ee2 : cmp eax, 0xbc831 ; syscall
0x0000000000403d96 : cmp eax, 0xbc97d ; syscall
0x00000000004012ce : cmp eax, 0xbf53d ; syscall
0x000000000045d8c4 : cmp eax, 0xe8000000 ; ret
0x00000000004487db : cmp eax, 0xfffff000 ; ja 0x4487ef ; ret
0x000000000044883a : cmp eax, 0xfffff000 ; ja 0x44884f ; ret
0x00000000004489c3 : cmp eax, 0xfffff000 ; ja 0x448a27 ; ret
0x0000000000448a68 : cmp eax, 0xfffff000 ; ja 0x448ac7 ; ret
0x0000000000448afc : cmp eax, 0xfffff000 ; ja 0x448b0f ; ret
0x000000000044928c : cmp eax, 0xfffff000 ; ja 0x44929f ; ret
0x0000000000449549 : cmp eax, 0xfffff000 ; ja 0x44955f ; ret
0x000000000044957c : cmp eax, 0xfffff000 ; ja 0x44958f ; ret
0x00000000004495b5 : cmp eax, 0xfffff000 ; ja 0x4495c7 ; ret
0x0000000000449737 : cmp eax, 0xfffff000 ; ja 0x4497a9 ; pop rbx ; pop rbp ; ret
0x000000000045c442 : cmp eax, 0xfffff000 ; ja 0x45c457 ; ret
0x000000000047125b : cmp eax, 0xfffff000 ; ja 0x47126f ; ret
0x00000000004712c0 : cmp eax, 0xfffff000 ; ja 0x4712d7 ; ret
0x000000000048515c : cmp eax, 0xfffff000 ; ja 0x48516f ; ret
0x000000000044873c : cmp eax, 0xfffff001 ; jae 0x44874b ; ret
0x00000000004497cc : cmp eax, 0xfffff001 ; jae 0x4497db ; ret
0x00000000004497fc : cmp eax, 0xfffff001 ; jae 0x44980b ; ret
0x000000000044982c : cmp eax, 0xfffff001 ; jae 0x44983b ; ret
0x000000000044bf7f : cmp eax, 0xfffff001 ; jae 0x44bf8e ; ret
0x000000000044bfac : cmp eax, 0xfffff001 ; jae 0x44bfbb ; ret
0x00000000004711dc : cmp eax, 0xfffff001 ; jae 0x4711eb ; ret
0x000000000048aadc : cmp eax, 0xfffff001 ; jae 0x48aaeb ; ret
0x000000000044769f : cmp eax, 2 ; je 0x4476bf ; xor eax, eax ; ret
0x000000000046dc7e : cmp eax, 4 ; je 0x46dc89 ; ret
0x000000000047e73a : cmp eax, 9 ; ja 0x47e718 ; mov rax, r8 ; ret
0x000000000047b8f4 : cmp eax, dword ptr [rcx + rsi + 0x10] ; jae 0x47b8ad ; xor eax, eax ; ret
0x0000000000421e36 : cmp eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000047b2f9 : cmp eax, eax ; ja 0x47b310 ; add rsp, 8 ; ret
0x00000000004454a3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004198bf : cmp eax, edx ; jae 0x4198ef ; movzx eax, byte ptr [rax] ; ret
0x000000000046d9da : cmp eax, esi ; ja 0x46d9d7 ; lea eax, [rdx + rdi] ; ret
0x0000000000487d78 : cmp eax, esi ; je 0x487d84 ; ret
0x000000000046dc1a : cmp ebx, 0xa ; je 0x46dc25 ; ret
0x000000000041a5be : cmp ebx, eax ; je 0x41a5cb ; pop rbx ; pop rbp ; ret
0x000000000041f17c : cmp ebx, ebp ; jne 0x41f168 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ed98 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048e78f : cmp ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000042bf3b : cmp ecx, eax ; jne 0x42bf69 ; xor eax, eax ; ret
0x000000000047197e : cmp ecx, ecx ; xor eax, eax ; ret
0x000000000047a5de : cmp ecx, edx ; jne 0x47a5be ; mov eax, dword ptr [rcx] ; ret
0x000000000041896a : cmp ecx, esi ; ja 0x418967 ; lea eax, [rdx + rdi] ; ret
0x000000000047143b : cmp edi, eax ; ja 0x47146e ; xor eax, eax ; ret
0x000000000047795d : cmp edi, eax ; jne 0x47796d ; pop rbx ; ret
0x0000000000481a81 : cmp edi, ecx ; ja 0x481a6f ; mov eax, r8d ; ret
0x0000000000445e7b : cmp edi, edx ; jb 0x445e88 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004936bb : cmp edi, esi ; je 0x4936cf ; call 0x41f996
0x000000000047e6b6 : cmp edx, ecx ; jae 0x47e6a3 ; mov rax, r8 ; ret
0x0000000000457dd1 : cmp edx, ecx ; jb 0x457e28 ; mov r10, rcx ; jmp 0x457d98
0x0000000000445a7a : cmp edx, ecx ; jle 0x445a9b ; movsxd rax, ecx ; ret
0x0000000000445a79 : cmp edx, ecx ; jle 0x445a9c ; movsxd rax, ecx ; ret
0x00000000004849dc : cmp edx, ecx ; jle 0x484a88 ; ret
0x0000000000446c7f : cmp edx, ecx ; jne 0x446c6c ; ret
0x0000000000446de6 : cmp edx, ecx ; jne 0x446dd2 ; vzeroupper ; ret
0x0000000000446fa9 : cmp edx, ecx ; jne 0x446f8d ; vzeroupper ; ret
0x000000000041a222 : cmp edx, edi ; setae al ; ret
0x0000000000479fef : cmp edx, edx ; jl 0x479fe5 ; jmp 0x479fbd
0x0000000000457e16 : cmp edx, esi ; jb 0x457e2e ; mov r9, rsi ; mov r10, rcx ; jmp 0x457de3
0x00000000004700d7 : cmp edx, esi ; je 0x4700e7 ; test edx, edx ; jne 0x4700d8 ; ret
0x0000000000459c48 : cmp esi, 3 ; je 0x459c55 ; ret
0x0000000000446279 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047197a : cmp qword ptr [r8], rax ; je 0x4719c0 ; leave ; xor eax, eax ; ret
0x000000000046d09b : cmp qword ptr [rax + 0x30], 0 ; je 0x46d0af ; ret
0x0000000000417d04 : cmp qword ptr [rdi + 0x38], 0 ; je 0x417d17 ; ret
0x000000000045bfcf : cmp qword ptr [rdi], rsi ; je 0x45bfdd ; ret
0x0000000000413a11 : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x00000000004900fd : cmp qword ptr [rsi + 8], rcx ; ja 0x49010d ; sbb eax, eax ; ret
0x000000000045bfce : cmp qword ptr fs:[rdi], rsi ; je 0x45bfde ; ret
0x000000000046dc19 : cmp r11d, 0xa ; je 0x46dc26 ; ret
0x000000000047b8f3 : cmp r8, qword ptr [rcx + rsi + 0x10] ; jae 0x47b8ae ; xor eax, eax ; ret
0x0000000000487f96 : cmp r8b, 1 ; sbb esi, esi ; and esi, 2 ; syscall
0x00000000004487da : cmp rax, -0x1000 ; ja 0x4487f0 ; ret
0x0000000000448839 : cmp rax, -0x1000 ; ja 0x448850 ; ret
0x00000000004489c2 : cmp rax, -0x1000 ; ja 0x448a28 ; ret
0x0000000000448a67 : cmp rax, -0x1000 ; ja 0x448ac8 ; ret
0x0000000000448afb : cmp rax, -0x1000 ; ja 0x448b10 ; ret
0x000000000044928b : cmp rax, -0x1000 ; ja 0x4492a0 ; ret
0x0000000000449548 : cmp rax, -0x1000 ; ja 0x449560 ; ret
0x000000000044957b : cmp rax, -0x1000 ; ja 0x449590 ; ret
0x00000000004495b4 : cmp rax, -0x1000 ; ja 0x4495c8 ; ret
0x000000000045c441 : cmp rax, -0x1000 ; ja 0x45c458 ; ret
0x000000000047125a : cmp rax, -0x1000 ; ja 0x471270 ; ret
0x00000000004712bf : cmp rax, -0x1000 ; ja 0x4712d8 ; ret
0x000000000048515b : cmp rax, -0x1000 ; ja 0x485170 ; ret
0x00000000004684ef : cmp rax, -0x76b6fffb ; retf
0x000000000044873b : cmp rax, -0xfff ; jae 0x44874c ; ret
0x00000000004497cb : cmp rax, -0xfff ; jae 0x4497dc ; ret
0x00000000004497fb : cmp rax, -0xfff ; jae 0x44980c ; ret
0x000000000044982b : cmp rax, -0xfff ; jae 0x44983c ; ret
0x000000000044bf7e : cmp rax, -0xfff ; jae 0x44bf8f ; ret
0x000000000044bfab : cmp rax, -0xfff ; jae 0x44bfbc ; ret
0x00000000004711db : cmp rax, -0xfff ; jae 0x4711ec ; ret
0x000000000048aadb : cmp rax, -0xfff ; jae 0x48aaec ; ret
0x000000000047b8b2 : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000047d82f : cmp rax, -3 ; jbe 0x47d846 ; ret
0x000000000041a637 : cmp rax, 0x2000000 ; jbe 0x41a648 ; ret
0x000000000047e739 : cmp rax, 9 ; ja 0x47e719 ; mov rax, r8 ; ret
0x000000000047b2f8 : cmp rax, r8 ; ja 0x47b311 ; add rsp, 8 ; ret
0x00000000004198be : cmp rax, rdx ; jae 0x4198f0 ; movzx eax, byte ptr [rax] ; ret
0x000000000046d9d9 : cmp rax, rsi ; ja 0x46d9d8 ; lea eax, [rdx + rdi] ; ret
0x0000000000487d77 : cmp rax, rsi ; je 0x487d85 ; ret
0x000000000041a5bd : cmp rbx, rax ; je 0x41a5cc ; pop rbx ; pop rbp ; ret
0x000000000041f17b : cmp rbx, rbp ; jne 0x41f169 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042bf3a : cmp rcx, rax ; jne 0x42bf6a ; xor eax, eax ; ret
0x000000000047a5dd : cmp rcx, rdx ; jne 0x47a5bf ; mov eax, dword ptr [rcx] ; ret
0x0000000000418969 : cmp rcx, rsi ; ja 0x418968 ; lea eax, [rdx + rdi] ; ret
0x00000000004936ba : cmp rdi, r14 ; je 0x4936d0 ; call 0x41f997
0x000000000047143a : cmp rdi, rax ; ja 0x47146f ; xor eax, eax ; ret
0x000000000047795c : cmp rdi, rax ; jne 0x47796e ; pop rbx ; ret
0x0000000000445e7a : cmp rdi, rdx ; jb 0x445e89 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000479fee : cmp rdx, r10 ; jl 0x479fe6 ; jmp 0x479fbe
0x0000000000457dd0 : cmp rdx, r9 ; jb 0x457e29 ; mov r10, rcx ; jmp 0x457d99
0x000000000047e6b5 : cmp rdx, rcx ; jae 0x47e6a4 ; mov rax, r8 ; ret
0x0000000000446c7e : cmp rdx, rcx ; jne 0x446c6d ; ret
0x0000000000446c7d : cmp rdx, rcx ; jne 0x446c6e ; ret
0x0000000000446de5 : cmp rdx, rcx ; jne 0x446dd3 ; vzeroupper ; ret
0x0000000000446fa8 : cmp rdx, rcx ; jne 0x446f8e ; vzeroupper ; ret
0x000000000041a221 : cmp rdx, rdi ; setae al ; ret
0x000000000042b9b9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000477fb3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rax, rsi ; jmp rax
0x000000000047cdd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004765c4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043c716 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041b146 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; or al, byte ptr [rax] ; syscall
0x000000000044ddd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000492ee6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0xfff8
0x00000000004473b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fd08], al ; retf 0
0x00000000004784f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000422b85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004746d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xfff8
0x0000000000422715 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, 0xf480002 ; ret 0x66c3
0x000000000044708c : cpuid ; jmp 0x447056
0x0000000000411c36 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004032ff : cwde ; call 0x40f513
0x00000000004032fe : cwde ; call 0x40f514
0x0000000000461693 : cwde ; movzx eax, byte ptr [rbx + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004173f5 : cwde ; or al, byte ptr [rax] ; syscall
0x000000000044dee4 : cwde ; ret 0xfffd
0x0000000000440de1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000440de2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004467c1 : dec byte ptr [rax + 0x7f] ; jl 0x4467e6 ; cld ; vzeroupper ; ret
0x000000000041d5f0 : dec byte ptr [rax - 0x73] ; ret
0x00000000004059c5 : dec byte ptr [rax - 0x77] ; ret
0x0000000000449ce6 : dec byte ptr [rax - 0x77] ; retf 0x8b48
0x0000000000486bca : dec byte ptr [rax - 0x7b] ; dec dword ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000449a98 : dec byte ptr [rbp - 0x75] ; pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000449d66 : dec byte ptr [rcx + 9] ; retf 0x894c
0x000000000045c660 : dec byte ptr [rcx + rcx*4 - 0x19] ; call rbx
0x00000000004492ea : dec byte ptr [rcx] ; je 0x449321 ; mov eax, 0x48 ; syscall
0x0000000000449379 : dec byte ptr [rcx] ; je 0x4493b1 ; mov eax, 0x48 ; syscall
0x0000000000480057 : dec dword ptr [r8 - 0x77] ; ret 0xf748
0x000000000047d82d : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x47d848 ; ret
0x0000000000484b1e : dec dword ptr [rax + 0x21] ; ret 0x8d48
0x000000000047390a : dec dword ptr [rax + 0x21] ; retf 0x8548
0x000000000041a9a2 : dec dword ptr [rax + 0x21] ; retf 0x949
0x0000000000406385 : dec dword ptr [rax + 0x29] ; ret
0x0000000000440f22 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000041a494 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x0000000000466098 : dec dword ptr [rax + 0x29] ; ret 0xb8
0x0000000000466b6b : dec dword ptr [rax + 0x29] ; ret 0xf48
0x000000000044e5c0 : dec dword ptr [rax + 0x29] ; retf
0x000000000044ba40 : dec dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0x3948
0x0000000000453cc9 : dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000448c66 : dec dword ptr [rax + 0x39] ; je 0x448c97 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x000000000047388c : dec dword ptr [rax + 0x39] ; ret
0x0000000000464ffd : dec dword ptr [rax + 0x39] ; ret 0x2675
0x0000000000414a11 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000460079 : dec dword ptr [rax + 0x39] ; ret 0x850f
0x000000000045ccad : dec dword ptr [rax + 0x39] ; ret 0xe575
0x00000000004889b0 : dec dword ptr [rax + 0x39] ; retf
0x0000000000451eea : dec dword ptr [rax + 0x39] ; retf 0x9775
0x000000000047a1a1 : dec dword ptr [rax + 0x63] ; ret
0x0000000000447219 : dec dword ptr [rax + 0x63] ; ret 0xfac1
0x000000000046f239 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000421d05 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000047b8b5 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000045c4c7 : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000047cb76 : dec dword ptr [rax + 1] ; ret
0x000000000047ad0c : dec dword ptr [rax + 9] ; ret 0x1075
0x000000000047ae96 : dec dword ptr [rax + 9] ; ret 0x850f
0x0000000000403fc3 : dec dword ptr [rax - 0x39] ; ret
0x000000000049374e : dec dword ptr [rax - 0x39] ; ret 0xb240
0x00000000004937ef : dec dword ptr [rax - 0x39] ; ret 0xc340
0x0000000000493774 : dec dword ptr [rax - 0x39] ; ret 0xc3c0
0x000000000049379d : dec dword ptr [rax - 0x39] ; ret 0xc580
0x00000000004937c6 : dec dword ptr [rax - 0x39] ; ret 0xc600
0x0000000000493818 : dec dword ptr [rax - 0x39] ; ret 0xcb40
0x0000000000493841 : dec dword ptr [rax - 0x39] ; ret 0xcba0
0x000000000049386a : dec dword ptr [rax - 0x39] ; ret 0xcc20
0x0000000000493893 : dec dword ptr [rax - 0x39] ; ret 0xcce0
0x00000000004938bc : dec dword ptr [rax - 0x39] ; ret 0xcd60
0x00000000004938e5 : dec dword ptr [rax - 0x39] ; ret 0xcdc0
0x0000000000493725 : dec dword ptr [rax - 0x39] ; ret 0xce80
0x000000000044898d : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000047d081 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000487334 : dec dword ptr [rax - 0x3f] ; loop 0x487345 ; add rdx, rax ; jmp 0x487354
0x000000000048e357 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x000000000042c526 : dec dword ptr [rax - 0x73] ; push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x0000000000403751 : dec dword ptr [rax - 0x73] ; sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000490fab : dec dword ptr [rax - 0x75] ; je 0x490fdc ; or byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044f6a6 : dec dword ptr [rax - 0x75] ; jne 0x44f643 ; mov rdi, rbx ; call rsi
0x00000000004784b8 : dec dword ptr [rax - 0x75] ; mov byte ptr [r9 - 0x77], r9b ; ret 0x8949
0x000000000047da90 : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041ccc7 : dec dword ptr [rax - 0x77] ; add al, 0x24 ; call rdx
0x000000000041f38e : dec dword ptr [rax - 0x77] ; add eax, 0x9f40a ; ret
0x000000000048c7db : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f407 : dec dword ptr [rax - 0x77] ; jrcxz 0x47f39a ; retf 0xfac1
0x0000000000479411 : dec dword ptr [rax - 0x77] ; mov r8b, 0xf ; xchg eax, ebp ; ret 0x2148
0x00000000004746b1 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x401186
0x00000000004936f2 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x41f996
0x0000000000404836 : dec dword ptr [rax - 0x77] ; ret
0x0000000000470319 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000478b22 : dec dword ptr [rax - 0x77] ; ret 0x35e8
0x000000000041bff0 : dec dword ptr [rax - 0x77] ; ret 0x394c
0x0000000000469cc1 : dec dword ptr [rax - 0x77] ; ret 0x82e9
0x0000000000415734 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000047a181 : dec dword ptr [rax - 0x77] ; ret 0x86e8
0x0000000000410a6b : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000450c8f : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000453b9f : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000465ce4 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000004043cb : dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000493e04 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000466e16 : dec dword ptr [rax - 0x77] ; ret 0xc9e9
0x0000000000406b57 : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000465554 : dec dword ptr [rax - 0x77] ; retf
0x00000000004623fb : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000048ba12 : dec dword ptr [rax - 0x77] ; retf 0xeeb
0x000000000047fd9e : dec dword ptr [rax - 0x7d] ; adc al, 0xf8 ; add cl, ch ; ret 0xfff6
0x00000000004875a9 : dec dword ptr [rax - 0x7d] ; add al, 0xf8 ; add cl, ch ; ret
0x000000000041e63f : dec dword ptr [rax - 0x7d] ; call 0xffffffffc37b2e4f
0x0000000000460595 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047d82e : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47d847 ; ret
0x00000000004066ca : dec dword ptr [rax - 0x7d] ; ret
0x0000000000462ed2 : dec dword ptr [rax - 0x7d] ; ret 0x4420
0x0000000000407082 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000046afeb : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000044ba2b : dec dword ptr [rax - 0x7f] ; ret
0x0000000000432f7c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000041a749 : dec dword ptr [rax - 9] ; fisttp dword ptr [rax + 0x21] ; ret
0x0000000000466029 : dec dword ptr [rbp + 0x63] ; ret
0x000000000047a726 : dec dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x000000000048be83 : dec dword ptr [rbp + r9*4 + 0x74] ; ret
0x0000000000404724 : dec dword ptr [rbp + rcx*4 + 0x60] ; add eax, ebp ; push rdx ; retf 0xffff
0x000000000048be84 : dec dword ptr [rbp + rcx*4 + 0x74] ; ret
0x00000000004738d5 : dec dword ptr [rbp + rcx*4 + 0xd] ; ret
0x000000000048e7f6 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0xef89
0x00000000004568c4 : dec dword ptr [rbp - 0x77] ; ret
0x00000000004566d7 : dec dword ptr [rbp - 0x77] ; ret 0x2de9
0x0000000000457fd9 : dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x000000000042122d : dec dword ptr [rbx + 0x9082454] ; ret 0x37e9
0x0000000000402641 : dec dword ptr [rbx + 0xbe75815] ; add dh, dh ; ret 0x7404
0x00000000004667a5 : dec dword ptr [rbx + rcx*4 - 0x73] ; clc ; idiv bh ; inc dword ptr [rcx] ; retf
0x0000000000469009 : dec dword ptr [rbx - 0x4d77b] ; inc dword ptr [rcx + 1] ; retf 0x8d89
0x00000000004145e2 : dec dword ptr [rbx - 0x7c2e76ed] ; retf 0x8320
0x000000000045f86f : dec dword ptr [rbx - 0x8ef7b] ; inc dword ptr [rcx] ; ret
0x0000000000466092 : dec dword ptr [rbx - 0x8ff4b] ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000041d557 : dec dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; retf 0xc183
0x000000000047385d : dec dword ptr [rcx + 0x21] ; ret 0x394c
0x000000000048ee21 : dec dword ptr [rcx + 0x21] ; retf 0x894c
0x000000000048a2e4 : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x000000000048ed5c : dec dword ptr [rcx + 0x31] ; retf 0x894c
0x000000000045643c : dec dword ptr [rcx + 0x3948fc51] ; ret
0x0000000000478169 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048d33d : dec dword ptr [rcx + 0x39] ; retf
0x000000000048ed67 : dec dword ptr [rcx + 0x39] ; retf 0x894c
0x0000000000405c6b : dec dword ptr [rcx + 0x3c8348c9] ; retf
0x000000000048d680 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000460804 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000045ae44 : dec dword ptr [rcx + 1] ; ret 0x8d48
0x000000000048ed30 : dec dword ptr [rcx + 1] ; retf 0x894c
0x000000000048edf0 : dec dword ptr [rcx + 9] ; retf 0x894c
0x0000000000481743 : dec dword ptr [rcx + rcx*4 + 0x44] ; ret 0xe9f8
0x000000000048067c : dec dword ptr [rcx + rcx*4 + 4] ; ret 0x85c7
0x000000000047b497 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404715 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x401186
0x000000000048d53f : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x000000000047cfc2 : dec dword ptr [rcx - 0x3fd6bb38] ; ret
0x0000000000468f2a : dec dword ptr [rcx - 0x4df73] ; ljmp [rcx] ; retf 0x2944
0x000000000045678b : dec dword ptr [rcx - 0x73] ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000049017d : dec dword ptr [rcx - 0x73] ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call rax
0x0000000000454549 : dec dword ptr [rcx - 0x75] ; add ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040b0e1 : dec dword ptr [rcx - 0x75] ; jg 0x40b0fd ; call 0x407317
0x000000000040b0ea : dec dword ptr [rcx - 0x75] ; jg 0x40b0fe ; call 0x407317
0x000000000049252a : dec dword ptr [rcx - 0x75] ; jge 0x492548 ; add rdi, rbp ; call r12
0x0000000000449d49 : dec dword ptr [rcx - 0x75] ; push rdx ; adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000457fd6 : dec dword ptr [rcx - 0x77] ; dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x00000000004567a5 : dec dword ptr [rcx - 0x77] ; mov r10, rcx ; jmp 0x456767
0x00000000004567f5 : dec dword ptr [rcx - 0x77] ; mov r10, rcx ; jmp 0x4567b7
0x0000000000410b8f : dec dword ptr [rcx - 0x77] ; ret
0x000000000046e3b3 : dec dword ptr [rcx - 0x77] ; ret 0x3948
0x00000000004785c0 : dec dword ptr [rcx - 0x77] ; ret 0x8349
0x000000000045fab3 : dec dword ptr [rcx - 0x77] ; ret 0x8445
0x000000000045fa69 : dec dword ptr [rcx - 0x77] ; ret 0x8548
0x000000000045fae9 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000456609 : dec dword ptr [rcx - 0x77] ; retf
0x000000000041c632 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000040eb69 : dec dword ptr [rcx - 0x7d] ; ret
0x000000000041a37e : dec dword ptr [rcx - 9] ; ret
0x0000000000420d54 : dec dword ptr [rcx] ; add dh, dh ; ret 0x7402
0x0000000000415f3a : dec dword ptr [rcx] ; ret 0x1389
0x000000000041859d : dec dword ptr [rdi] ; adc dword ptr [rdi + 0xa0], eax ; ret
0x000000000047ce92 : dec dword ptr [rdi] ; mov dh, 0x45 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048e552 : dec dword ptr [rdi] ; mov dh, 0x53 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000480816 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000047f173 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000468b5f : dec dword ptr [rdi] ; mov dh, 4 ; add cl, byte ptr [rcx - 0x77] ; retf
0x00000000004511ef : dec dword ptr [rdi] ; ret 0x66c3
0x000000000047a120 : dec dword ptr [rdi] ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004746cd : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x58180000], al ; retf 0xfff8
0x00000000004542af : dec dword ptr [rdi] ; test byte ptr [rbp + rax], al ; add bh, dh ; ret 0
0x0000000000445330 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000486bcd : dec dword ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000004605de : dec dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; shr ecx, cl ; retf 0xfff0
0x0000000000440f21 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000041a9a1 : dec qword ptr [rax + 0x21] ; retf 0x949
0x0000000000453cc8 : dec qword ptr [rax + 0x3948074a] ; ret
0x0000000000407081 : dec qword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000459c45 : div byte ptr [rax + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x459c58 ; ret
0x000000000044a770 : div byte ptr [rbp + 0x1d] ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044a573 : div byte ptr [rbp + 0xa] ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045c1b9 : div byte ptr [rbp + 0xc] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000046f426 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000474c52 : div byte ptr [rbp - 0x25] ; jmp 0x474c1e
0x000000000047a6d1 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, r8 ; ret
0x0000000000421359 : div byte ptr [rsp + rcx + 0x48] ; lea eax, [rax - 0x10] ; ret
0x0000000000481a95 : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000004471cd : div ecx ; mov eax, eax ; ret
0x00000000004471b6 : div esi ; mov eax, eax ; ret
0x0000000000448730 : endbr64 ; mov eax, 0x18 ; syscall
0x0000000000449820 : endbr64 ; mov eax, 0x1c ; syscall
0x000000000048aad0 : endbr64 ; mov eax, 0x26 ; syscall
0x0000000000485180 : endbr64 ; mov eax, 0x27 ; syscall
0x00000000004711d0 : endbr64 ; mov eax, 0x3f ; syscall
0x000000000044bfa0 : endbr64 ; mov eax, 0x63 ; syscall
0x0000000000471200 : endbr64 ; mov eax, 0x66 ; syscall
0x0000000000471220 : endbr64 ; mov eax, 0x68 ; syscall
0x0000000000471210 : endbr64 ; mov eax, 0x6b ; syscall
0x0000000000471230 : endbr64 ; mov eax, 0x6c ; syscall
0x00000000004497f0 : endbr64 ; mov eax, 0xa ; syscall
0x00000000004497c0 : endbr64 ; mov eax, 0xb ; syscall
0x0000000000471420 : endbr64 ; mov eax, 0xc ; syscall
0x0000000000470af0 : endbr64 ; mov eax, 0xc9 ; syscall
0x0000000000471480 : endbr64 ; mov eax, 0xe4 ; syscall
0x0000000000417dc0 : endbr64 ; mov eax, 0xffffffff ; ret
0x0000000000449570 : endbr64 ; mov eax, 1 ; syscall
0x0000000000449280 : endbr64 ; mov eax, 3 ; syscall
0x0000000000448af0 : endbr64 ; mov eax, 8 ; syscall
0x000000000047d860 : endbr64 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000419790 : endbr64 ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004197a0 : endbr64 ; mov rax, rdi ; ret
0x0000000000401c40 : endbr64 ; ret
0x00000000004187c0 : endbr64 ; xor eax, eax ; ret
0x0000000000449540 : endbr64 ; xor eax, eax ; syscall
0x000000000041897a : enter -0x177d, 1 ; ret
0x000000000042a157 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000045b8f9 : enter -0x2dcf, -0x18 ; outsd dx, dword ptr [rsi] ; retf 0xfffe
0x000000000040357d : enter -0x3f77, 0xf ; retf 0x14c
0x00000000004842c9 : enter -0x3fcf, -0x18 ; outsd dx, dword ptr [rsi] ; retf 0xfff8
0x0000000000405ad4 : enter -0x3fcf, -0x77 ; retf 0xeac1
0x00000000004454a4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000488783 : enter -0x72b4, 0x34 ; ret 0x8d4a
0x0000000000440dde : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000440f1e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000041a99e : enter -0x72b8, 0x4a ; dec dword ptr [rax + 0x21] ; retf 0x949
0x0000000000425850 : enter -0x73b, 0x77 ; ret
0x0000000000451b19 : enter -0x7cf1, 0x24 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000490aa2 : enter -0x7df1, 5 ; add al, byte ptr [rax] ; add byte ptr [rax + 9], cl ; retf 0x840f
0x000000000042a7c4 : enter -2, -1 ; ret
0x000000000043efa9 : enter 0x148, -8 ; vzeroupper ; ret
0x0000000000425831 : enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000429cb1 : enter 0x2275, -0x7d ; ret 0x8101
0x000000000048a696 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000047cfc4 : enter 0x2944, -0x40 ; ret
0x000000000043f31e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000445ab7 : enter 0x2948, -8 ; ret
0x0000000000423fcd : enter 0x31c3, -0x40 ; ret
0x0000000000464758 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000474e1d : enter 0x4800, -0x77 ; ret
0x000000000044d68a : enter 0x4ad, 0 ; mov rdi, r12 ; call 0x42a189
0x00000000004070b9 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000048259c : enter 0xf41, -0x6c ; ret
0x00000000004512f1 : enter 0xf49, 0x4f ; ret 0x8548
0x000000000042ba66 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043e969 : enter 0xf66, -0x15 ; ret
0x0000000000477bfe : enter 0xf66, 0x6c ; ret 0x290f
0x0000000000410ded : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000045fd8b : fadd dword ptr [rbx - 0x1f3efe20] ; add al, 0x89 ; ret 0xf41
0x00000000004935ee : fadd dword ptr [rdx] ; add cl, ch ; retf 0xfb61
0x00000000004255cd : faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x000000000042b5b1 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043f43b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000004568c1 : fcmovnb st(0), st(6) ; cli ; dec dword ptr [rbp - 0x77] ; ret
0x0000000000475bcb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415f8a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004130cf : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000048081c : fdiv st(6) ; ret
0x000000000041646d : fdivr dword ptr [rsi] ; jmp rax
0x0000000000491f09 : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004454a8 : fdivr st(7) ; ret
0x00000000004255d1 : ffreep st(5) ; std ; xlatb ; retf
0x000000000041193b : fiadd dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000410818 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000046b5fd : fiadd dword ptr [rcx] ; rol byte ptr [rcx + rbp - 0x36], 0x39 ; ret 0x2b7c
0x00000000004140ba : fiadd word ptr [rcx + rcx*4 - 1] ; mov eax, r9d ; syscall
0x00000000004662d9 : fidivr dword ptr [rcx] ; ret 0x820f
0x000000000045ea20 : fidivr dword ptr [rcx] ; ret 0x830f
0x000000000048ed93 : fild dword ptr [rcx + 0xf] ; lahf ; ret 0xf45
0x000000000048ed80 : fild dword ptr [rcx + 0xf] ; popfq ; ret 0xf45
0x000000000048ee14 : fild dword ptr [rcx + 0xf] ; pushfq ; ret 0xf45
0x000000000048ee01 : fild dword ptr [rcx + 0xf] ; sahf ; ret 0xf45
0x000000000048ede3 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xf45
0x000000000048ed6d : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xf45
0x0000000000421e0d : fild dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041bb58 : fimul dword ptr [rax + 0x21] ; ret 0x8949
0x000000000048042b : fimul dword ptr [rax + 0x29] ; ret 0x2948
0x000000000045167a : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000481455 : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000048141a : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000428c06 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045386b : fimul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000044972b : fimul dword ptr [rax - 0x77] ; out dx, eax ; mov eax, 9 ; syscall
0x000000000040fc3c : fimul dword ptr [rax - 0x77] ; retf 0x4866
0x000000000040388a : fimul dword ptr [rax - 0x7d] ; ret 0x8001
0x00000000004315e1 : fimul dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000048a4fc : fimul word ptr [rbp + 0x11] ; retf
0x0000000000420ac2 : fimul word ptr [rcx + rcx*4 - 0x3e] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000420042 : fistp qword ptr [rax + 0xca] ; syscall
0x000000000041a74c : fisttp dword ptr [rax + 0x21] ; ret
0x000000000048d29a : fisttp dword ptr [rax + 9] ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000048580e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x48582c
0x00000000004894d5 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000004894ef : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000041655a : fisttp dword ptr [rcx] ; retf 0x8948
0x0000000000449e04 : fisttp qword ptr [rax - 0x77] ; out dx, eax ; call r12
0x00000000004911c0 : fisttp word ptr [rax - 0x77] ; ret 0xf7e8
0x00000000004905ab : fisttp word ptr [rax - 0x7d] ; in al, dx ; sbb al, ch ; retf
0x0000000000402d93 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004070a3 : fisttp word ptr [rax - 0x7d] ; ret 0x4001
0x000000000048956f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000406551 : fisttp word ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000043da5d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042b981 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b681 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000485155 : fld dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000044a897 : fld dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004936b8 : fld qword ptr [rax] ; cmp rdi, r14 ; je 0x4936d2 ; call 0x41f999
0x000000000040f55e : fld st(3) ; ret
0x000000000046f276 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x000000000046f2d2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000484d29 : fldenv [rsi + 0xf] ; jbe 0x484d86 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000429fc7 : fldenv [rsi + 0xf] ; je 0x42a024 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000046eb39 : fldenv [rsi + 0xf] ; je 0x46eb96 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ba01 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000429ee1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000004765c3 : fldenv [rsi - 0x76b60006] ; ret
0x000000000048a564 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000445777 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000041352e : fmul dword ptr [rax - 0x77] ; ret
0x00000000004736c5 : fmul dword ptr [rdi] ; retf 0x8d88
0x00000000004748a2 : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000422d89 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004376bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000046f274 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042bff0 : fnstcw word ptr [rsi] ; jmp r9
0x000000000042a987 : fnstcw word ptr [rsi] ; jmp rcx
0x000000000042b781 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044874c : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000004487f0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042ba81 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043fc54 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004458bb : fsub qword ptr [rsi + 0xf] ; jmp 0x445887
0x000000000042b881 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043ea8c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047106f : fsubp st(0) ; retf
0x0000000000429cd3 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000004493c9 : fsubr st(3) ; ror byte ptr [rdi], 0x1f ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000474c54 : fucomi st(3) ; ret
0x00000000004162cf : fucomip st(0) ; retf
0x0000000000492110 : fucomip st(0) ; retf 0xffd5
0x0000000000491615 : hlt ; adc byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000454642 : hlt ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000481b73 : hlt ; add eax, dword ptr [rax] ; syscall
0x00000000004333ca : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e04e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004481fe : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000444fb3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000401c3e : hlt ; nop ; endbr64 ; ret
0x000000000041f393 : hlt ; or dword ptr [rax], eax ; ret
0x0000000000493688 : hlt ; ret 2
0x00000000004844f0 : hlt ; retf 3
0x0000000000444fb7 : hlt ; sub eax, edx ; ret
0x000000000045f791 : idiv bh ; call qword ptr [rax]
0x0000000000466b69 : idiv bh ; dec dword ptr [rax + 0x29] ; ret 0xf48
0x0000000000460837 : idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x0000000000465e18 : idiv bh ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000048ba10 : idiv bh ; dec dword ptr [rax - 0x77] ; retf 0xeeb
0x0000000000466027 : idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x000000000045fab1 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8445
0x000000000045fa67 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x000000000045fae7 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000045fb52 : idiv bh ; inc dword ptr [rcx - 0x7d] ; in al, dx ; add ch, cl ; retf
0x00000000004667aa : idiv bh ; inc dword ptr [rcx] ; retf
0x000000000046094e : idiv bh ; inc edi ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x0000000000464e6d : idiv bh ; inc esi ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x0000000000464e73 : idiv bh ; jmp qword ptr [rax]
0x00000000004511ea : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000466096 : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x0000000000464ffb : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x2675
0x0000000000460077 : idiv edi ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x0000000000465552 : idiv edi ; dec dword ptr [rax - 0x77] ; retf
0x0000000000466840 : idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000460593 : idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004857ce : idiv edi ; endbr64 ; ret
0x000000000045fbb7 : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045f896 : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x0000000000460409 : idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000045f873 : idiv edi ; inc dword ptr [rcx] ; ret
0x000000000045f6ff : idiv edi ; jmp qword ptr [rax]
0x000000000048f71c : idiv edi ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000048f6ba : idiv edi ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000048d5ad : idiv edi ; xor eax, eax ; add rsp, 8 ; ret
0x000000000048d5ac : idiv r15d ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000460408 : idiv rdi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x0000000000474dc3 : imul al ; ret
0x0000000000421150 : imul al ; retf 0x286
0x00000000004818b5 : imul cl ; ret 0xfffb
0x0000000000475acf : imul eax ; retf
0x0000000000470f95 : imul eax, dword ptr [rcx + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000410701 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x7bf0cf07], al ; ret 1
0x0000000000443b11 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000427027 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000426a27 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000046adda : imul ebp, dword ptr [rsp + rcx*2], -0x77 ; ret 0x8348
0x0000000000427d97 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000004129a4 : imul ecx, dword ptr [rcx + 0x2b], 0x47 ; and byte ptr [rax + 1], cl ; ret
0x0000000000428f77 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000426727 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000041a491 : imul edi, edi, -1 ; dec dword ptr [rax + 0x29] ; ret 0x8d49
0x0000000000426127 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000425e27 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000425b27 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000483f64 : imul edx, eax, 3 ; add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000422aa3 : imul esi, dword ptr [rdi], 0xf480002 ; ret 0xfc3
0x0000000000422841 : imul esi, dword ptr [rsi], 2 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044e921 : imul esi, edi, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419329 : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004755ab : imul esp, dword ptr [rdx + 0x48], 0x9480733 ; ret 0x1475
0x0000000000471485 : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000048aa08 : in al, 0x1d ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000045390f : in al, 0x29 ; ret
0x00000000004867c3 : in al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000459e74 : in al, 0x4c ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004030e5 : in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000046e0f6 : in al, 0x5d ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x000000000043f8cc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044a63d : in al, 0x75 ; sub byte ptr [rax - 0x75], cl ; jge 0x44a64b ; call rbx
0x00000000004118be : in al, 0xa ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x0000000000493e13 : in al, 0xe9 ; retf
0x0000000000470ecb : in al, 0xeb ; retf
0x000000000045f89b : in al, 0xf ; lahf ; ret
0x00000000004333aa : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000446c82 : in al, 0xf3 ; ret
0x000000000041e72a : in al, dx ; adc byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041a69b : in al, dx ; adc byte ptr [rcx - 0x77], al ; ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x000000000045fb57 : in al, dx ; add ch, cl ; retf
0x000000000045f73f : in al, dx ; add dword ptr [rax - 0x8ff43], eax ; jmp qword ptr [rax]
0x000000000042e04a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004337aa : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000470313 : in al, dx ; or al, ch ; out 0xd, al ; stc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047461a : in al, dx ; or al, ch ; outsd dx, dword ptr [rsi] ; retf
0x0000000000428ff4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004746a0 : in al, dx ; retf 0xfff8
0x00000000004905ae : in al, dx ; sbb al, ch ; retf
0x00000000004901f9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000047ba1d : in eax, 0x48 ; mov esi, ebp ; syscall
0x000000000041b3f7 : in eax, 0x58 ; or al, byte ptr [rax] ; syscall
0x00000000004255cf : in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000401ced : in eax, 0xb ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004886da : in eax, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004822d6 : in eax, 0xdf ; loopne 0x482267 ; ret
0x0000000000470533 : in eax, 0xf ; je 0x470558 ; add rax, 2 ; ret
0x0000000000447149 : in eax, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000043342a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000480a42 : in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000479ff2 : in eax, dx ; jmp 0x479fba
0x000000000044a67e : in eax, dx ; jne 0x44a6d7 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000044a6ae : in eax, dx ; jne 0x44a737 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000492315 : in eax, dx ; jne 0x492309 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004457d2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000042de5a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043382a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000048bea2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041772a : in eax, dx ; ret
0x0000000000445922 : in eax, dx ; sub rax, 1 ; ret
0x0000000000445c4c : inc bl ; cmp dl, 1 ; jb 0x445c5e ; mov byte ptr [rdi], cl ; ret
0x0000000000459c49 : inc byte ptr [rbx] ; je 0x459c54 ; ret
0x0000000000450f64 : inc byte ptr [rsi] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000047b1cc : inc dword ptr [r8 + 0x10] ; pop rbx ; pop rbp ; ret
0x000000000047b1cd : inc dword ptr [rax + 0x10] ; pop rbx ; pop rbp ; ret
0x000000000044855b : inc dword ptr [rax - 0x7af0f506] ; ret
0x0000000000474c21 : inc dword ptr [rax - 0x7bf0c506] ; ret
0x0000000000474c4f : inc dword ptr [rax - 0x7c] ; div byte ptr [rbp - 0x25] ; jmp 0x474c21
0x0000000000460030 : inc dword ptr [rax - 0x8ff43] ; jmp qword ptr [rax]
0x0000000000466606 : inc dword ptr [rax - 0x93343] ; jmp qword ptr [rax]
0x0000000000468c45 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; jmp rax
0x000000000045fbb9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004470f0 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x000000000042bf97 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000470ec8 : inc dword ptr [rbp + 0x31] ; in al, 0xeb ; retf
0x0000000000455e29 : inc dword ptr [rbp + 0x31] ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000045f898 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x000000000047869a : inc dword ptr [rbx + 0x7425087b] ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000451ef8 : inc dword ptr [rbx - 0x16feeb93] ; retf
0x00000000004691bf : inc dword ptr [rbx - 0x4ef43] ; jmp qword ptr [rax]
0x000000000040dc52 : inc dword ptr [rbx - 0x7af0fe08] ; jmp rbx
0x000000000040e04c : inc dword ptr [rbx - 0x7af0fe08] ; ret 0xfff2
0x0000000000409bf3 : inc dword ptr [rbx - 0x7af0fe08] ; retf
0x000000000041678b : inc dword ptr [rbx - 0x7ebf8bb3] ; retf 0
0x000000000045fb38 : inc dword ptr [rbx - 0x90743] ; call qword ptr [rax]
0x00000000004471cb : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000004902ac : inc dword ptr [rbx] ; jne 0x4902d8 ; add rsp, 8 ; ret
0x000000000044711c : inc dword ptr [rbx] ; ret
0x000000000048859c : inc dword ptr [rcx + 0xf] ; mov dh, 0x48 ; add al, 0x89 ; retf 0xeac0
0x0000000000466fb5 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000048213d : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8545
0x000000000046900f : inc dword ptr [rcx + 1] ; retf 0x8d89
0x000000000041630b : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004140bd : inc dword ptr [rcx + rcx*4 - 0x38] ; syscall
0x000000000044ddba : inc dword ptr [rcx - 0x42] ; add eax, 0xe9000000 ; retf 0xfff7
0x0000000000408db0 : inc dword ptr [rcx - 0x75] ; add byte ptr [rbx - 0x7bf0fd08], al ; call qword ptr [rcx]
0x000000000040b984 : inc dword ptr [rcx - 0x75] ; add byte ptr [rbx - 0x7bf0fd08], al ; retf 8
0x0000000000456821 : inc dword ptr [rcx - 0x77] ; ret
0x000000000045fb54 : inc dword ptr [rcx - 0x7d] ; in al, dx ; add ch, cl ; retf
0x0000000000449777 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046040b : inc dword ptr [rcx - 1] ; push rsp ; ret
0x00000000004677b5 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000467b26 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; jmp rax
0x000000000046873b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0xf0 ; jmp rax
0x000000000045f875 : inc dword ptr [rcx] ; ret
0x0000000000462a33 : inc dword ptr [rcx] ; retf
0x000000000043e23d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042a8ec : inc ebp ; std ; xlatb ; ret 0xe883
0x00000000004454a9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047cfcd : inc ebx ; sub eax, edx ; ret
0x0000000000460950 : inc edi ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000045f6fb : inc esi ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x0000000000464e6f : inc esi ; test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x0000000000429774 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004755aa : insb byte ptr [rdi], dx ; imul esp, dword ptr [rdx + 0x48], 0x9480733 ; ret 0x1475
0x000000000040fc4a : insb byte ptr [rdi], dx ; ret
0x0000000000414c5f : insb byte ptr [rdi], dx ; ret 0x110f
0x000000000047644d : insb byte ptr [rdi], dx ; ret 0x290f
0x000000000041a17f : insb byte ptr [rdi], dx ; ret 0x4d83
0x000000000041303d : insb byte ptr [rdi], dx ; ret 0x7589
0x000000000041d3b8 : insb byte ptr [rdi], dx ; ret 0x8348
0x0000000000404f39 : insb byte ptr [rdi], dx ; ret 0x8941
0x00000000004047d6 : insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000413017 : insb byte ptr [rdi], dx ; retf
0x000000000041dc20 : insb byte ptr [rdi], dx ; retf 0xffff
0x00000000004131c1 : insb byte ptr [rdi], dx ; ror byte ptr [rdi], 0x11 ; add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000041b1db : insb byte ptr [rdi], dx ; ror byte ptr [rdi], 0x11 ; add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x000000000045116c : insb byte ptr [rdi], dx ; ror dword ptr [rdi], 0x11 ; ret
0x000000000047b04f : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000477bfd : insd dword ptr [rdi], dx ; enter 0xf66, 0x6c ; ret 0x290f
0x000000000044df0f : insd dword ptr [rdi], dx ; ret 0xfffd
0x000000000048446f : insd dword ptr [rdi], dx ; retf
0x000000000041297d : insd dword ptr [rdi], dx ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000049123f : insd dword ptr [rdi], dx ; sbb dh, dh ; ret 0xf01
0x0000000000403b4f : int 0xcb
0x0000000000453a1d : int1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000481a96 : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000041896b : int1 ; ja 0x418966 ; lea eax, [rdx + rdi] ; ret
0x0000000000445bcf : int1 ; jl 0x445c20 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445bf0 : int1 ; jl 0x445c41 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445c03 : int1 ; jl 0x445c54 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445cd8 : int1 ; jl 0x445d29 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445d30 : int1 ; jl 0x445d81 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000445dcd : int1 ; jl 0x445e1e ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000402815 : int1 ; jmp rcx
0x0000000000443a03 : int1 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000447086 : int1 ; mov eax, 0x80000006 ; cpuid ; jmp 0x44705c
0x00000000004471ce : int1 ; mov eax, eax ; ret
0x000000000043321b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e61f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000457b0f : int1 ; mov r10, rcx ; jmp 0x457ac4
0x0000000000457d6f : int1 ; mov r10, rcx ; jmp 0x457d24
0x0000000000457e1c : int1 ; mov r10, rcx ; jmp 0x457ddd
0x0000000000413af1 : int1 ; mov rdi, r15 ; call r12
0x000000000044ec54 : int1 ; mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x0000000000444f83 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004700de : int1 ; ret
0x000000000040a71b : int1 ; retf
0x0000000000421e76 : int1 ; std ; lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000444f87 : int1 ; sub eax, edx ; ret
0x000000000043f7c3 : int1 ; vzeroupper ; ret
0x0000000000486ed0 : iretd ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000004854e3 : iretd ; nop dword ptr [rax] ; call rax
0x0000000000418380 : ja 0x418307 ; retf 0x6601
0x000000000041896c : ja 0x418965 ; lea eax, [rdx + rdi] ; ret
0x00000000004194fd : ja 0x41951f ; mov qword ptr [rdi + 8], rax ; xor eax, eax ; ret
0x0000000000437137 : ja 0x43713b ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000442d17 : ja 0x442d1d ; ret
0x0000000000442d33 : ja 0x442d3d ; mov dword ptr [rdi], ecx ; ret
0x0000000000442d74 : ja 0x442d83 ; mov qword ptr [rdi], rcx ; ret
0x0000000000442df9 : ja 0x442e0d ; ret
0x0000000000442e4f : ja 0x442e67 ; ret
0x0000000000442ed1 : ja 0x442eed ; ret
0x0000000000443347 : ja 0x443351 ; lea rax, [rdi + 2] ; ret
0x0000000000443363 : ja 0x443371 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004433b4 : ja 0x4433c7 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000443499 : ja 0x4434b1 ; lea rax, [rdi + 0x10] ; ret
0x000000000044350f : ja 0x44352b ; lea rax, [rdi + 0x14] ; ret
0x0000000000443591 : ja 0x4435b1 ; lea rax, [rdi + 0x18] ; ret
0x0000000000445f08 : ja 0x445f39 ; jb 0x445f1a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446278 : ja 0x4462be ; jb 0x44628a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004466c8 : ja 0x446726 ; jb 0x4466da ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446c97 : ja 0x446cb4 ; jb 0x446ca3 ; mov byte ptr [rdi], cl ; ret
0x0000000000446e05 : ja 0x446e3c ; jb 0x446e14 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000446fcd : ja 0x447012 ; jb 0x446fdc ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004481fc : ja 0x448228 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000004487e0 : ja 0x4487ea ; ret
0x00000000004487d1 : ja 0x448807 ; mov eax, 4 ; syscall
0x000000000044883f : ja 0x44884a ; ret
0x0000000000448830 : ja 0x448867 ; mov eax, 5 ; syscall
0x00000000004489c8 : ja 0x448a22 ; ret
0x0000000000448a6d : ja 0x448ac2 ; ret
0x0000000000448b01 : ja 0x448b0a ; ret
0x0000000000449291 : ja 0x44929a ; ret
0x000000000044954e : ja 0x44955a ; ret
0x0000000000449581 : ja 0x44958a ; ret
0x00000000004495ba : ja 0x4495c2 ; ret
0x000000000044973c : ja 0x4497a4 ; pop rbx ; pop rbp ; ret
0x000000000044c162 : ja 0x44c186 ; ret
0x000000000045c447 : ja 0x45c452 ; ret
0x000000000046d9dc : ja 0x46d9d5 ; lea eax, [rdx + rdi] ; ret
0x0000000000470a29 : ja 0x4709f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000471260 : ja 0x47126a ; ret
0x0000000000471251 : ja 0x471287 ; mov eax, 6 ; syscall
0x00000000004712c5 : ja 0x4712d2 ; ret
0x00000000004712b6 : ja 0x4712ef ; mov eax, 0x106 ; syscall
0x000000000047143d : ja 0x47146c ; xor eax, eax ; ret
0x000000000047b2fb : ja 0x47b30e ; add rsp, 8 ; ret
0x000000000047e73d : ja 0x47e715 ; mov rax, r8 ; ret
0x0000000000481a83 : ja 0x481a6d ; mov eax, r8d ; ret
0x0000000000485161 : ja 0x48516a ; ret
0x0000000000490101 : ja 0x490109 ; sbb eax, eax ; ret
0x00000000004198c1 : jae 0x4198ed ; movzx eax, byte ptr [rax] ; ret
0x0000000000448741 : jae 0x448746 ; ret
0x00000000004497d1 : jae 0x4497d6 ; ret
0x0000000000449801 : jae 0x449806 ; ret
0x0000000000449831 : jae 0x449836 ; ret
0x000000000044bf84 : jae 0x44bf89 ; ret
0x000000000044bfb1 : jae 0x44bfb6 ; ret
0x000000000045c1bd : jae 0x45c204 ; xor eax, eax ; pop rbx ; ret
0x000000000045c1e0 : jae 0x45c225 ; pop rbx ; ret
0x00000000004711e1 : jae 0x4711e6 ; ret
0x000000000047b8f8 : jae 0x47b8a9 ; xor eax, eax ; ret
0x000000000047e6b8 : jae 0x47e6a1 ; mov rax, r8 ; ret
0x00000000004886d9 : jae 0x4886c7 ; mov eax, 1 ; ret
0x0000000000488f02 : jae 0x488f54 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048aae1 : jae 0x48aae6 ; ret
0x0000000000418bfa : jb 0x418b80 ; or al, byte ptr [rax] ; syscall
0x0000000000422b4d : jb 0x422b55 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042c62b : jb 0x42c63d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042c77b : jb 0x42c78d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042c8cb : jb 0x42c8dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ca1b : jb 0x42ca2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042cb6b : jb 0x42cb7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ccbb : jb 0x42cccd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ce0b : jb 0x42ce1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042cf5b : jb 0x42cf6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d0ab : jb 0x42d0bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d1fb : jb 0x42d20d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d34b : jb 0x42d35d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d49b : jb 0x42d4ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d5eb : jb 0x42d5fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d73b : jb 0x42d74d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d88b : jb 0x42d89d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f00b : jb 0x42f01d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f15b : jb 0x42f16d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f2ab : jb 0x42f2bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f3fb : jb 0x42f40d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f54b : jb 0x42f55d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f69b : jb 0x42f6ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f7eb : jb 0x42f7fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f93b : jb 0x42f94d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fa8b : jb 0x42fa9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fbdb : jb 0x42fbed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fd2b : jb 0x42fd3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fe7b : jb 0x42fe8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ffcb : jb 0x42ffdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043011b : jb 0x43012d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043026b : jb 0x43027d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000436d12 : jb 0x436d1e ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000445c39 : jb 0x445c48 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000445c44 : jb 0x445c57 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000445c51 : jb 0x445c59 ; mov byte ptr [rdi], cl ; ret
0x0000000000445e7d : jb 0x445e86 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000445f0a : jb 0x445f18 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000445f09 : jb 0x445f19 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044627a : jb 0x446288 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004466ca : jb 0x4466d8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446c99 : jb 0x446ca1 ; mov byte ptr [rdi], cl ; ret
0x0000000000446e07 : jb 0x446e12 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000446fcf : jb 0x446fda ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000457dd3 : jb 0x457e26 ; mov r10, rcx ; jmp 0x457d96
0x0000000000457e18 : jb 0x457e2c ; mov r9, rsi ; mov r10, rcx ; jmp 0x457de1
0x0000000000402c13 : jbe 0x402c27 ; syscall
0x000000000041a63d : jbe 0x41a642 ; ret
0x000000000041e946 : jbe 0x41e94a ; or dword ptr [rax], eax ; syscall
0x000000000046ec36 : jbe 0x46ec75 ; add rax, rdi ; ret
0x000000000046ec46 : jbe 0x46ec77 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000046ec56 : jbe 0x46ec77 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000046ec66 : jbe 0x46ec77 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000046ee77 : jbe 0x46eee8 ; add rax, rdi ; vzeroupper ; ret
0x000000000047d833 : jbe 0x47d842 ; ret
0x0000000000484d2c : jbe 0x484d83 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000484e26 : jbe 0x484e65 ; add rax, rdi ; ret
0x0000000000484e36 : jbe 0x484e67 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000484e46 : jbe 0x484e67 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000484e56 : jbe 0x484e67 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000485067 : jbe 0x4850d8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000401012 : je 0x401018 ; call rax
0x0000000000401c65 : je 0x401c77 ; mov edi, 0x4bfb30 ; jmp rax
0x0000000000401ca7 : je 0x401cb7 ; mov edi, 0x4bfb30 ; jmp rax
0x0000000000402576 : je 0x4025a4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000406d3e : je 0x406d4e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000411aa5 : je 0x411aec ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000041421c : je 0x414221 ; ret
0x0000000000417d09 : je 0x417d12 ; ret
0x00000000004197e9 : je 0x4197fa ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041983f : je 0x41984f ; add byte ptr [rcx], al ; ret
0x000000000041a5c0 : je 0x41a5c9 ; pop rbx ; pop rbp ; ret
0x000000000041bb79 : je 0x41bb90 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e2bc : je 0x41e2c8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041f512 : je 0x41f53f ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000041fc42 : je 0x41fc6e ; cmp byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000420e62 : je 0x420e8e ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000042135a : je 0x42136e ; lea rax, [rax - 0x10] ; ret
0x0000000000421582 : je 0x42150f ; retf 0x4c89
0x0000000000421581 : je 0x421510 ; retf 0x4c89
0x00000000004224e7 : je 0x4224fd ; adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x0000000000422786 : je 0x422743 ; ret
0x00000000004289d3 : je 0x42899e ; lea r10, [r10 + r9] ; jmp r10
0x00000000004298ba : je 0x4298c2 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000429fca : je 0x42a021 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042a6d5 : je 0x42a6e7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042bcf7 : je 0x42bd01 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043b7a3 : je 0x43b76e ; lea r10, [r10 + r9] ; jmp r10
0x000000000043d343 : je 0x43d30e ; lea r10, [r10 + r9] ; jmp r10
0x000000000043eb35 : je 0x43eb49 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000043f158 : je 0x43f163 ; bsf eax, edx ; ret
0x000000000043f1fd : je 0x43f216 ; bsf rax, rdx ; ret
0x000000000043f1a0 : je 0x43f226 ; bsf rax, rdx ; ret
0x000000000043f6cf : je 0x43f758 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x0000000000445f97 : je 0x445fb8 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044769d : je 0x4476b9 ; cmp eax, 2 ; je 0x4476c1 ; xor eax, eax ; ret
0x00000000004476a2 : je 0x4476bc ; xor eax, eax ; ret
0x00000000004476f4 : je 0x4476da ; ret
0x0000000000447f62 : je 0x447f91 ; sbb byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdx, r13 ; call rbx
0x0000000000448c69 : je 0x448c94 ; or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000000004492ec : je 0x44931f ; mov eax, 0x48 ; syscall
0x000000000044937b : je 0x4493af ; mov eax, 0x48 ; syscall
0x00000000004494d1 : je 0x449507 ; mov eax, 0x101 ; syscall
0x000000000044968e : je 0x449693 ; ret
0x0000000000449872 : je 0x4498ad ; mov rdi, rbp ; xor esi, esi ; call r12
0x0000000000449902 : je 0x44993d ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000044a4e9 : je 0x44a522 ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000044a59a : je 0x44a5d5 ; mov rdi, rbp ; xor esi, esi ; call r12
0x000000000044c79e : je 0x44c7b7 ; lea rdi, [rcx + rsi + 0x20] ; jmp rdx
0x000000000044d48c : je 0x44d492 ; ret
0x000000000044d4a8 : je 0x44d4c1 ; mov dword ptr [rip + 0x70608], eax ; pop rbx ; ret
0x0000000000450f50 : je 0x450f5a ; ret
0x000000000045165f : je 0x45168e ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x0000000000451dde : je 0x451e0d ; pop rax ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x00000000004523c9 : je 0x4523f7 ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x0000000000452baf : je 0x452bde ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x00000000004531c6 : je 0x4531f4 ; push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x0000000000453ae5 : je 0x453b13 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000004541d8 : je 0x454207 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x0000000000454726 : je 0x454754 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045575a : je 0x455789 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004564e4 : je 0x456512 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000457065 : je 0x457093 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000457c49 : je 0x457c77 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x00000000004587c8 : je 0x4587f6 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000459012 : je 0x459041 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000459c4b : je 0x459c52 ; ret
0x0000000000459c46 : je 0x459c57 ; cmp esi, 3 ; je 0x459c57 ; ret
0x0000000000459c6d : je 0x459c8b ; pop rbx ; ret
0x000000000045a474 : je 0x45a47a ; call rax
0x000000000045a70a : je 0x45a710 ; call rax
0x000000000045b86f : je 0x45b875 ; call rax
0x000000000045bfd2 : je 0x45bfda ; ret
0x000000000046cafc : je 0x46cb4d ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046cafb : je 0x46cb4e ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046d0a0 : je 0x46d0aa ; ret
0x000000000046d193 : je 0x46d156 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000046d100 : je 0x46d162 ; pop rbp ; pop r12 ; ret
0x000000000046d1ae : je 0x46d19d ; retf 0x1f0f
0x000000000046d1ad : je 0x46d19e ; retf 0x1f0f
0x000000000046dc1d : je 0x46dc22 ; ret
0x000000000046dc81 : je 0x46dc86 ; ret
0x000000000046e8d3 : je 0x46e93e ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0x46e8fa
0x000000000046eb3c : je 0x46eb93 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000046f52c : je 0x46f556 ; bsf rax, rdx ; ret
0x00000000004700d9 : je 0x4700e5 ; test edx, edx ; jne 0x4700d6 ; ret
0x0000000000470519 : je 0x470539 ; mov cl, dl ; and cl, 0xf ; je 0x470549 ; ret
0x0000000000470520 : je 0x470542 ; ret
0x0000000000470535 : je 0x470556 ; add rax, 2 ; ret
0x000000000047197d : je 0x4719bd ; leave ; xor eax, eax ; ret
0x00000000004746ce : je 0x474760 ; call 0x401188
0x0000000000475c55 : je 0x475b49 ; xor eax, eax ; jmp 0x475c2b
0x000000000047a6d2 : je 0x47a6df ; mov qword ptr [rsi], rdi ; mov rax, r8 ; ret
0x000000000047b1c9 : je 0x47b1d5 ; lock inc dword ptr [r8 + 0x10] ; pop rbx ; pop rbp ; ret
0x00000000004847c6 : je 0x4847d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000486c72 : je 0x486c86 ; mov rax, qword ptr [r14] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000487d7a : je 0x487d82 ; ret
0x000000000048d11f : je 0x48d14a ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048e683 : je 0x48e6da ; add rsp, 0x18 ; ret
0x000000000049003e : je 0x490057 ; mov edi, 1 ; jmp rax
0x0000000000490fae : je 0x490fd9 ; or byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000491614 : je 0x491610 ; adc byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004936a6 : je 0x4936ac ; call rax
0x00000000004936bd : je 0x4936cd ; call 0x41f994
0x000000000049397b : je 0x493986 ; call rax
0x0000000000493b6e : je 0x493b61 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004040d0 : jg 0x4040df ; add byte ptr [rax - 0x76b7bcc8], al ; ret
0x0000000000407a2e : jg 0x407a35 ; add cl, ch ; ret
0x000000000040b0db : jg 0x40b0f9 ; call 0x407314
0x000000000040b0e4 : jg 0x40b0fa ; call 0x407314
0x000000000040b0ed : jg 0x40b0fb ; call 0x407314
0x000000000042e209 : jg 0x42e25c ; ret
0x000000000042e250 : jg 0x42e2a0 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000042e255 : jg 0x42e2a8 ; retf
0x000000000042e28f : jg 0x42e2da ; ret
0x000000000042e2cf : jg 0x42e31a ; retf
0x000000000042e409 : jg 0x42e45c ; ret 0x894c
0x000000000042e450 : jg 0x42e4a0 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000042e455 : jg 0x42e4a8 ; retf 0x894c
0x000000000042e48f : jg 0x42e4da ; ret 0x894c
0x000000000042e4cb : jg 0x42e516 ; retf 0x894c
0x0000000000430be9 : jg 0x430c3c ; ret
0x0000000000430c30 : jg 0x430c80 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000430c35 : jg 0x430c88 ; retf
0x0000000000430c6f : jg 0x430cba ; ret
0x0000000000430caf : jg 0x430cfa ; retf
0x0000000000430de9 : jg 0x430e3c ; ret 0x894c
0x0000000000430e30 : jg 0x430e80 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000430e35 : jg 0x430e88 ; retf 0x894c
0x0000000000430e6f : jg 0x430eba ; ret 0x894c
0x0000000000430eab : jg 0x430ef6 ; retf 0x894c
0x00000000004331f8 : jg 0x433249 ; loope 0x4331f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043326f : jg 0x4332ba ; ret 0xff2
0x0000000000433288 : jg 0x4332d9 ; loop 0x433287 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004332ff : jg 0x43334a ; ret
0x0000000000433318 : jg 0x433369 ; jrcxz 0x433317 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004333a8 : jg 0x4333f9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433428 : jg 0x433479 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004334a8 : jg 0x4334f9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433528 : jg 0x433579 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433685 : jg 0x4336d5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043368f : jg 0x4336da ; retf 0xff2
0x0000000000433705 : jg 0x433755 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043370f : jg 0x43375a ; retf
0x00000000004337a8 : jg 0x4337f9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433828 : jg 0x433879 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004338b8 : jg 0x433909 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433938 : jg 0x433989 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004339ac : jg 0x4339b7 ; ret
0x0000000000433a06 : jg 0x433a19 ; ret
0x0000000000433a01 : jg 0x433a51 ; psllq mm1, qword ptr [rdi] ; jg 0x433a1e ; ret
0x0000000000433a76 : jg 0x433a89 ; ret
0x0000000000433ae6 : jg 0x433af9 ; ret
0x0000000000433ae1 : jg 0x433b31 ; or eax, 0xf7f0ff3 ; ret
0x0000000000433b56 : jg 0x433b69 ; ret
0x0000000000433b51 : jg 0x433ba1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433bc6 : jg 0x433bd9 ; ret
0x0000000000433bc1 : jg 0x433c11 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433c36 : jg 0x433c49 ; ret
0x0000000000433c31 : jg 0x433c81 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433ca6 : jg 0x433cb9 ; ret
0x0000000000433ca1 : jg 0x433cf1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433d16 : jg 0x433d29 ; ret
0x0000000000433d11 : jg 0x433d61 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433d86 : jg 0x433d99 ; ret
0x0000000000433df6 : jg 0x433e09 ; ret
0x0000000000433e66 : jg 0x433e79 ; ret
0x0000000000433e61 : jg 0x433eb1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000433ed6 : jg 0x433ee9 ; ret
0x0000000000433ed1 : jg 0x433f21 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433f46 : jg 0x433f59 ; ret
0x0000000000433f41 : jg 0x433f91 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433fb6 : jg 0x433fc9 ; ret
0x0000000000433fb1 : jg 0x434001 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434026 : jg 0x434039 ; ret
0x0000000000434021 : jg 0x434071 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d28 : jg 0x435d79 ; loope 0x435d27 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435d9f : jg 0x435dea ; ret 0xff2
0x0000000000435db8 : jg 0x435e09 ; loop 0x435db7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435e2f : jg 0x435e7a ; ret
0x0000000000435e48 : jg 0x435e99 ; jrcxz 0x435e47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435ed8 : jg 0x435f29 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435f58 : jg 0x435fa9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435fd8 : jg 0x436029 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000436058 : jg 0x4360a9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004361b5 : jg 0x436205 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004361bf : jg 0x43620a ; retf 0xff2
0x0000000000436235 : jg 0x436285 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043623f : jg 0x43628a ; retf
0x00000000004362d8 : jg 0x436329 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436358 : jg 0x4363a9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004363e8 : jg 0x436439 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436468 : jg 0x4364b9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004364dc : jg 0x4364e7 ; ret
0x0000000000436536 : jg 0x436549 ; ret
0x0000000000436531 : jg 0x436581 ; psllq mm1, qword ptr [rdi] ; jg 0x43654e ; ret
0x00000000004365a6 : jg 0x4365b9 ; ret
0x0000000000436616 : jg 0x436629 ; ret
0x0000000000436611 : jg 0x436661 ; or eax, 0xf7f0ff3 ; ret
0x0000000000436686 : jg 0x436699 ; ret
0x0000000000436681 : jg 0x4366d1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004366f6 : jg 0x436709 ; ret
0x00000000004366f1 : jg 0x436741 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436766 : jg 0x436779 ; ret
0x0000000000436761 : jg 0x4367b1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004367d6 : jg 0x4367e9 ; ret
0x00000000004367d1 : jg 0x436821 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436846 : jg 0x436859 ; ret
0x0000000000436841 : jg 0x436891 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004368b6 : jg 0x4368c9 ; ret
0x0000000000436926 : jg 0x436939 ; ret
0x0000000000436996 : jg 0x4369a9 ; ret
0x0000000000436991 : jg 0x4369e1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000436a06 : jg 0x436a19 ; ret
0x0000000000436a01 : jg 0x436a51 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436a76 : jg 0x436a89 ; ret
0x0000000000436a71 : jg 0x436ac1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436ae6 : jg 0x436af9 ; ret
0x0000000000436ae1 : jg 0x436b31 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436b56 : jg 0x436b69 ; ret
0x0000000000436b51 : jg 0x436ba1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436cb8 : jg 0x436cc9 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000436ccc : jg 0x436cdd ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043713e : jg 0x43713a ; ret
0x000000000043f562 : jg 0x43f57e ; pextrw edi, mm5, 0x74 ; retf
0x0000000000442de6 : jg 0x442df1 ; ret
0x0000000000442df6 : jg 0x442e04 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000442e0a : jg 0x442e19 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000442e29 : jg 0x442e37 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000442e39 : jg 0x442e47 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000442e49 : jg 0x442e5a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000442e6a : jg 0x442e79 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000442e8a : jg 0x442e99 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000442eaa : jg 0x442eb9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000442eca : jg 0x442edc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000442f0d : jg 0x442f1f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000442f2d : jg 0x442f3f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000442f4b : jg 0x442f5b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000442f6b : jg 0x442f7b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000442f8b : jg 0x442f9b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000442fab : jg 0x442fbb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000443486 : jg 0x443495 ; lea rax, [rdi + 0xf] ; ret
0x0000000000443496 : jg 0x4434a8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000004434c9 : jg 0x4434db ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004434e9 : jg 0x4434fb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000044360f : jg 0x44366f ; or eax, 0x1c478d48 ; ret
0x0000000000443782 : jg 0x44379e ; pextrw edi, mm5, 0x74 ; retf
0x0000000000445c1b : jg 0x445c2b ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000445c11 : jg 0x445c31 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004460d8 : jg 0x446110 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004461a6 : jg 0x4461de ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044628e : jg 0x44629f ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044641f : jg 0x446449 ; vzeroupper ; ret
0x00000000004464c6 : jg 0x4464d0 ; vzeroupper ; ret
0x0000000000446552 : jg 0x44657c ; vzeroupper ; ret
0x00000000004465e2 : jg 0x4465ec ; vzeroupper ; ret
0x00000000004466f6 : jg 0x446707 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004468da : jg 0x446904 ; vzeroupper ; ret
0x00000000004468d9 : jg 0x446905 ; vzeroupper ; ret
0x00000000004469a0 : jg 0x4469aa ; vzeroupper ; ret
0x000000000044699f : jg 0x4469ab ; vzeroupper ; ret
0x0000000000446a65 : jg 0x446a8f ; vzeroupper ; ret
0x0000000000446a64 : jg 0x446a90 ; vzeroupper ; ret
0x0000000000446b2a : jg 0x446b34 ; vzeroupper ; ret
0x0000000000446b29 : jg 0x446b35 ; vzeroupper ; ret
0x0000000000446b94 : jg 0x446b9f ; ret
0x0000000000446c00 : jg 0x446c0b ; ret
0x0000000000446c77 : jg 0x446cc3 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000446d08 : jg 0x446d16 ; vzeroupper ; ret
0x0000000000446d58 : jg 0x446d66 ; vzeroupper ; ret
0x0000000000446e17 : jg 0x446e25 ; vzeroupper ; ret
0x0000000000446e95 : jg 0x446ea3 ; vzeroupper ; ret
0x0000000000446e94 : jg 0x446ea4 ; vzeroupper ; ret
0x0000000000446ef5 : jg 0x446f03 ; vzeroupper ; ret
0x0000000000446ef4 : jg 0x446f04 ; vzeroupper ; ret
0x0000000000446fdf : jg 0x446fed ; vzeroupper ; ret
0x0000000000446fed : jg 0x446ffb ; vzeroupper ; ret
0x000000000044716b : jg 0x447139 ; nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x000000000044a6b0 : jg 0x44a700 ; mov edi, dword ptr [rsp] ; call rbx
0x000000000044a918 : jg 0x44a924 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000045ea1e : jg 0x45ea4d ; fidivr dword ptr [rcx] ; ret 0x830f
0x00000000004662d7 : jg 0x466306 ; fidivr dword ptr [rcx] ; ret 0x820f
0x000000000048a669 : jg 0x48a6e8 ; loopne 0x48a62d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418244 : jge 0x298e8196 ; ret 0x8348
0x0000000000403d97 : jge 0x403d66 ; or eax, dword ptr [rax] ; syscall
0x0000000000449991 : jge 0x449995 ; call rbx
0x000000000044a642 : jge 0x44a646 ; call rbx
0x000000000044a6ed : jge 0x44a6f1 ; call rbx
0x000000000044a71d : jge 0x44a721 ; call rbx
0x000000000044a74d : jge 0x44a751 ; call rbx
0x000000000044a775 : jge 0x44a779 ; call rbx
0x000000000044abaf : jge 0x44abfe ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000474e1c : jge 0x474deb ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000488de8 : jge 0x488e3a ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048a344 : jge 0x48a34b ; add byte ptr [rax], al ; leave ; ret
0x000000000048faa1 : jge 0x48fa9e ; leave ; ret
0x000000000048fd69 : jge 0x48fd66 ; leave ; ret
0x000000000048ff8b : jge 0x48ff88 ; leave ; ret
0x000000000049252d : jge 0x492545 ; add rdi, rbp ; call r12
0x00000000004936e8 : jge 0x4936f2 ; mov rbx, qword ptr [rbp + 0x18] ; call 0x41f998
0x0000000000406c96 : jl 0x406ca7 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000436c38 : jl 0x436c87 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000436c74 : jl 0x436cc3 ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000436e72 : jl 0x436ec1 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000436fd9 : jl 0x437028 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000043713b : jl 0x43718a ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000445bd0 : jl 0x445c1f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445bf1 : jl 0x445c40 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445c04 : jl 0x445c53 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445cd9 : jl 0x445d28 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000445d31 : jl 0x445d80 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000445dce : jl 0x445e1d ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004467c4 : jl 0x4467e3 ; cld ; vzeroupper ; ret
0x0000000000448a95 : jl 0x448ac3 ; or byte ptr [rax + 1], bh ; syscall
0x00000000004513b5 : jl 0x4513e3 ; pop rax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000451664 : jl 0x45168e ; pop rax ; call r14
0x0000000000452158 : jl 0x452186 ; pop rax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000004523ce : jl 0x4523f7 ; pop rax ; call rbx
0x000000000045272f : jl 0x45275d ; pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452bb4 : jl 0x452bde ; pop rax ; call r15
0x0000000000452f56 : jl 0x452f84 ; pop rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004531cb : jl 0x4531f4 ; pop rax ; call rbx
0x0000000000453aea : jl 0x453b13 ; call rbx
0x00000000004541dd : jl 0x454207 ; call r14
0x000000000045472b : jl 0x454754 ; call rbx
0x000000000045516b : jl 0x455199 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004560ff : jl 0x45612d ; push rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000456470 : jl 0x45649b ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000004564e9 : jl 0x456512 ; push rax ; call rbx
0x000000000045706a : jl 0x457093 ; call rbx
0x00000000004577fc : jl 0x45782a ; push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000457c4e : jl 0x457c77 ; push rax ; call rbx
0x00000000004587cd : jl 0x4587f6 ; call rbx
0x000000000046e5b2 : jl 0x46e5f0 ; adc byte ptr [rbp - 0x7cb7fd8e], cl ; ret 0x4802
0x0000000000472063 : jl 0x472090 ; or eax, 0xd8d4c01 ; retf 0x356
0x0000000000475486 : jl 0x4754b4 ; and byte ptr [rcx + rcx*4 - 2], cl ; call 0x471f78
0x0000000000479ff1 : jl 0x479fe3 ; jmp 0x479fbb
0x00000000004822d2 : jl 0x482300 ; adc cl, bl ; in eax, 0xdf ; loopne 0x48226b ; ret
0x0000000000407ace : jle 0x407ad5 ; add cl, ch ; ret
0x000000000042134d : jle 0x42134f ; or dword ptr [rax], eax ; add dword ptr [rax - 0x77], ecx ; ret 0x3174
0x000000000043f1a1 : jle 0x43f1f0 ; bsf eax, edx ; ret
0x0000000000445a7c : jle 0x445a99 ; movsxd rax, ecx ; ret
0x0000000000459c7a : jle 0x459ca9 ; sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000004849de : jle 0x484a86 ; ret
0x00000000004845fc : jmp 0x401022
0x000000000041840f : jmp 0x4183dd
0x000000000042ae08 : jmp 0x42add6
0x000000000042ae86 : jmp 0x42ae54
0x000000000042b318 : jmp 0x42b2e6
0x000000000042b396 : jmp 0x42b364
0x000000000043e96c : jmp 0x43e932
0x000000000043eb8c : jmp 0x43eb52
0x000000000044577e : jmp 0x445744
0x000000000044584f : jmp 0x445815
0x00000000004458be : jmp 0x445884
0x000000000044708e : jmp 0x447054
0x00000000004474ef : jmp 0x4474bd
0x0000000000453028 : jmp 0x452ff6
0x0000000000469ba5 : jmp 0x469b6b
0x000000000046b83b : jmp 0x46b809
0x000000000046c613 : jmp 0x46c5d9
0x000000000046c74b : jmp 0x46c711
0x000000000046e870 : jmp 0x46e83e
0x0000000000470ecc : jmp 0x470e9a
0x0000000000471412 : jmp 0x4713e0
0x0000000000474c55 : jmp 0x474c1b
0x0000000000475c5d : jmp 0x475c23
0x0000000000479ff3 : jmp 0x479fb9
0x0000000000485a6a : jmp 0x485a30
0x0000000000487d64 : jmp 0x487d2a
0x0000000000488f05 : jmp 0xffffffffc358185a
0x000000000047763f : jmp 0xffffffffeb0938cf
0x000000000040fbe2 : jmp qword ptr [rax]
0x000000000040eeb5 : jmp r10
0x000000000047bfe4 : jmp r11
0x000000000045b3a1 : jmp r8
0x000000000042bff2 : jmp r9
0x0000000000401b89 : jmp rax
0x0000000000408f0d : jmp rbx
0x0000000000402817 : jmp rcx
0x000000000040ed87 : jmp rdx
0x0000000000460334 : jmp rsi
0x00000000004118bd : jmp rsp
0x0000000000401758 : jne 0x40175d ; ret
0x000000000040f55d : jne 0x40f53a ; ret
0x0000000000410de8 : jne 0x410dfb ; add rsp, 0xd8 ; ret
0x0000000000416099 : jne 0x4160a2 ; ret
0x000000000041706e : jne 0x417089 ; sub dword ptr [rip + 0xa9bf9], 1 ; ret
0x0000000000417729 : jne 0x41771a ; ret
0x0000000000418676 : jne 0x41866a ; ret
0x0000000000418931 : jne 0x4188fb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041940e : jne 0x419402 ; ret
0x000000000041983a : jne 0x419851 ; sub dword ptr [rip + 0xa742d], 1 ; ret
0x000000000041aa29 : jne 0x41aa1d ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000041e528 : jne 0x41e537 ; add rsp, 0x10 ; pop rbp ; ret
0x000000000041f17e : jne 0x41f166 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004213d7 : jne 0x4213c6 ; sub rax, 0x10 ; ret
0x000000000042428c : jne 0x424276 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042584d : jne 0x425837 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000429cd2 : jne 0x429cb7 ; sub eax, ecx ; vzeroupper ; ret
0x000000000042a68a : jne 0x42a695 ; vzeroupper ; ret
0x000000000042a784 : jne 0x42a696 ; ret
0x000000000042a8cf : jne 0x42a699 ; vzeroupper ; ret
0x000000000042bf3d : jne 0x42bf67 ; xor eax, eax ; ret
0x000000000042b531 : jne 0x42bf6b ; xor eax, eax ; ret
0x000000000042b559 : jne 0x42bf77 ; xor eax, eax ; ret
0x0000000000443b25 : jne 0x443ab6 ; lea rax, [rdi + 3] ; ret
0x0000000000443af7 : jne 0x443ab6 ; lea rax, [rdi + 7] ; ret
0x0000000000443af6 : jne 0x443ab7 ; lea rax, [rdi + 7] ; ret
0x0000000000445284 : jne 0x445498 ; xor eax, eax ; ret
0x0000000000445489 : jne 0x4454a9 ; xor eax, eax ; ret
0x0000000000445331 : jne 0x4454ad ; xor eax, eax ; ret
0x00000000004454a1 : jne 0x4454ae ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004455b1 : jne 0x4455a2 ; ret
0x0000000000445661 : jne 0x445652 ; ret
0x00000000004457d1 : jne 0x4457c6 ; lea rax, [rcx - 1] ; ret
0x0000000000445921 : jne 0x445916 ; sub rax, 1 ; ret
0x0000000000446bb7 : jne 0x446bc2 ; mov rax, rdi ; ret
0x0000000000446c81 : jne 0x446c6a ; ret
0x0000000000446de8 : jne 0x446dd0 ; vzeroupper ; ret
0x0000000000446fab : jne 0x446f8b ; vzeroupper ; ret
0x00000000004474e9 : jne 0x4473ac ; jmp 0x4474c3
0x00000000004477f3 : jne 0x44781b ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044879b : jne 0x4487b7 ; add rsp, 0x28 ; ret
0x00000000004489be : jne 0x4489d2 ; syscall
0x0000000000448a5e : jne 0x448a77 ; mov eax, 1 ; syscall
0x000000000044930b : jne 0x449359 ; add rsp, 0x68 ; ret
0x000000000044939a : jne 0x4493e9 ; add rsp, 0x18 ; ret
0x0000000000449452 : jne 0x4494a1 ; add rsp, 0x58 ; ret
0x00000000004494f0 : jne 0x449541 ; add rsp, 0x58 ; ret
0x00000000004496fe : jne 0x44970b ; add rsp, 0x28 ; ret
0x000000000044998d : jne 0x4499bc ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000044a4c6 : jne 0x44a4d9 ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x000000000044a574 : jne 0x44a587 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a63e : jne 0x44a66e ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000044a67f : jne 0x44a6d6 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000044a6af : jne 0x44a736 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000044a771 : jne 0x44a796 ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044a8c1 : jne 0x44a906 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a8ed : jne 0x44a95d ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a7a5 : jne 0x44a9bb ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a865 : jne 0x44aa15 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a835 : jne 0x44aa6f ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a805 : jne 0x44aac9 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a7d5 : jne 0x44ab23 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a895 : jne 0x44ab7d ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044ab85 : jne 0x44abc7 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044abae : jne 0x44ac32 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044a916 : jne 0x44aca4 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044aa7b : jne 0x44ad12 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044a99a : jne 0x44ad80 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044ab2f : jne 0x44adee ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044a9f4 : jne 0x44ae5c ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044a9c7 : jne 0x44aeca ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044aa4e : jne 0x44af38 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044aad5 : jne 0x44afa6 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044a940 : jne 0x44b014 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044aa21 : jne 0x44b082 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044ab02 : jne 0x44b0f0 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044a96d : jne 0x44b15e ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044aaa8 : jne 0x44b1cc ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044ab5c : jne 0x44b23a ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044f6a9 : jne 0x44f640 ; mov rdi, rbx ; call rsi
0x000000000045c125 : jne 0x45c132 ; add rsp, 0x18 ; ret
0x000000000045c1ba : jne 0x45c1d0 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000045e108 : jne 0x45e11b ; add rsp, 0xd8 ; ret
0x000000000046ca21 : jne 0x46ca12 ; ret
0x000000000046ebe7 : jne 0x46ec44 ; xor eax, eax ; ret
0x000000000046ebb7 : jne 0x46ec68 ; xor eax, eax ; ret
0x000000000046ee63 : jne 0x46ee87 ; xor eax, eax ; vzeroupper ; ret
0x000000000046f427 : jne 0x46f432 ; xor rax, rax ; ret
0x000000000046f823 : jne 0x46f858 ; mov rax, r8 ; vzeroupper ; ret
0x00000000004700dd : jne 0x4700d2 ; ret
0x00000000004700e7 : jne 0x4700f2 ; xor rax, rax ; ret
0x0000000000471333 : jne 0x471346 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004713ed : jne 0x47141d ; mov eax, r9d ; add rsp, 0x38 ; ret
0x0000000000471553 : jne 0x471562 ; ret
0x00000000004719bd : jne 0x471987 ; leave ; mov eax, 1 ; ret
0x0000000000474c53 : jne 0x474c33 ; jmp 0x474c1d
0x000000000047795f : jne 0x47796b ; pop rbx ; ret
0x000000000047a5e0 : jne 0x47a5bc ; mov eax, dword ptr [rcx] ; ret
0x000000000047cf3e : jne 0x47cf15 ; movsx eax, dl ; neg eax ; ret
0x000000000047da4e : jne 0x47da5d ; add rsp, 0x20 ; pop rbx ; ret
0x000000000047db49 : jne 0x47db79 ; add rsp, 0x38 ; ret
0x000000000047dc15 : jne 0x47dc4a ; add rsp, 0x58 ; ret
0x000000000047dd87 : jne 0x47ddca ; add rsp, 0x68 ; ret
0x000000000047e0a5 : jne 0x47e0da ; add rsp, 0x58 ; ret
0x000000000047e5c6 : jne 0x47e5da ; add rsp, 0x38 ; ret
0x000000000047e905 : jne 0x47e92b ; add rsp, 0x38 ; ret
0x0000000000484038 : jne 0x484045 ; sub dword ptr [rdi], 1 ; ret
0x00000000004846b1 : jne 0x4846be ; add rsp, 0x38 ; ret
0x000000000048479a : jne 0x4847a7 ; add rsp, 0x38 ; ret
0x0000000000484dd7 : jne 0x484e34 ; xor eax, eax ; ret
0x0000000000484da7 : jne 0x484e58 ; xor eax, eax ; ret
0x0000000000485053 : jne 0x485077 ; xor eax, eax ; vzeroupper ; ret
0x00000000004877a1 : jne 0x4877aa ; ret
0x00000000004877a0 : jne 0x4877ab ; ret
0x000000000048a342 : jne 0x48a3cc ; leave ; ret
0x000000000048a66a : jne 0x48a653 ; mov eax, 1 ; ret
0x000000000048a8d5 : jne 0x48a8e2 ; add rsp, 0x38 ; ret
0x000000000048fa9d : jne 0x48fa96 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048fd65 : jne 0x48fd5e ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048ff87 : jne 0x48ff80 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004902ae : jne 0x4902d6 ; add rsp, 8 ; ret
0x000000000049032a : jne 0x49035b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049038a : jne 0x4903bb ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000491838 : jne 0x491842 ; ret
0x0000000000491a78 : jne 0x491a82 ; ret
0x0000000000491d3a : jne 0x491d63 ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000492316 : jne 0x492308 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000492369 : jne 0x492348 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004924bd : jne 0x4924a3 ; pop rbx ; ret
0x00000000004925d5 : jne 0x4925c0 ; pop rbx ; ret
0x0000000000492ee3 : jne 0x492ed4 ; call 0x41f994
0x0000000000492f53 : jne 0x492f44 ; call 0x41f994
0x00000000004939fe : jne 0x4939e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041dc1c : jno 0x41dc2a ; add al, ch ; insb byte ptr [rdi], dx ; retf 0xffff
0x000000000042b7ee : jno 0x42b7fd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000436c34 : jno 0x436c3d ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000436e6e : jno 0x436e77 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000436fd5 : jno 0x436fe6 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043713a : jno 0x4371be ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000048258b : jno 0x482595 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x3145
0x000000000047869c : jnp 0x4786ad ; and eax, 0x8348df74 ; ret
0x00000000004845f9 : jnp 0x484618 ; pop rbx ; jmp 0x401025
0x0000000000469041 : jnp 0xffffffff89882164 ; adc dword ptr [rax - 0x77], ecx ; ret 0xc148
0x0000000000481e8f : jnp 0xffffffff8989b5b2 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000481ff4 : jnp 0xffffffff8989b617 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004825b1 : jnp 0xffffffff8989b6d4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000436c3b : jns 0x436c3e ; ret
0x0000000000436e75 : jns 0x436e78 ; ret
0x0000000000436fdc : jns 0x436fe7 ; ret
0x000000000043d497 : jns 0x43d472 ; retf 0xead3
0x000000000043d5e7 : jns 0x43d5c2 ; retf 0xead3
0x000000000043d737 : jns 0x43d712 ; retf 0xead3
0x000000000043d887 : jns 0x43d862 ; retf 0xead3
0x000000000043d9d7 : jns 0x43d9b2 ; retf 0xead3
0x000000000043db27 : jns 0x43db02 ; retf 0xead3
0x000000000043dc77 : jns 0x43dc52 ; retf 0xead3
0x000000000043ddc7 : jns 0x43dda2 ; retf 0xead3
0x000000000043df17 : jns 0x43def2 ; retf 0xead3
0x000000000043e067 : jns 0x43e042 ; retf 0xead3
0x000000000043e1b7 : jns 0x43e192 ; retf 0xead3
0x000000000043e307 : jns 0x43e2e2 ; retf 0xead3
0x000000000043e457 : jns 0x43e432 ; retf 0xead3
0x000000000043e5a7 : jns 0x43e582 ; retf 0xead3
0x000000000043e6f7 : jns 0x43e6d2 ; retf 0xead3
0x0000000000481e5c : jns 0x481e65 ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000048e680 : jns 0x48e6c3 ; add byte ptr [rdi + rcx*2 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000419fc3 : jo 0x419fc8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421eac : jo 0x421e88 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000044c1ca : jo 0x44c1ee ; ret
0x000000000046db4e : jo 0x46db97 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000046fcdc : jo 0x46fd3e ; pop rbp ; pop r12 ; ret
0x000000000047498d : jo 0x474955 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000047df3b : jo 0x47dfa1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000484acc : jo 0x484ad6 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000485c13 : jo 0x485c79 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000048cbc7 : jo 0x48cc29 ; pop rbp ; pop r12 ; ret
0x000000000048c944 : jo 0xffffffff8457d44a ; ret 0
0x0000000000421ee3 : jp 0x421eea ; add byte ptr [rax + 0x39], cl ; retf 0x3374
0x000000000047cc9a : jp 0x47cd19 ; adc ecx, dword ptr [rdi] ; mov dh, 0x45 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000004119bf : jrcxz 0x4119d3 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x0000000000422a27 : jrcxz 0x422a36 ; add bh, dh ; ret 0
0x000000000043331a : jrcxz 0x433315 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433319 : jrcxz 0x433316 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435e4a : jrcxz 0x435e45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435e49 : jrcxz 0x435e46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044ba27 : jrcxz 0x44ba30 ; loop 0x44ba31 ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004565f9 : jrcxz 0x456626 ; ret
0x000000000046dc17 : jrcxz 0x46dbdc ; cmp r11d, 0xa ; je 0x46dc28 ; ret
0x000000000047f40a : jrcxz 0x47f397 ; retf 0xfac1
0x0000000000481a84 : jrcxz 0x481ace ; mov eax, eax ; ret
0x00000000004173f4 : js 0x417392 ; or al, byte ptr [rax] ; syscall
0x0000000000454aaa : js 0x454a31 ; retf 0x4180
0x000000000045fa08 : js 0x45f9d6 ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x00000000004607ee : js 0x4607bd ; test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000048d45e : js 0x48d491 ; mov qword ptr [r9], r8 ; add rsp, 8 ; ret
0x000000000048f8ee : js 0x48f8fb ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048f903 : js 0x48f90f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000049040e : js 0x490441 ; mov qword ptr [r9], r8 ; add rsp, 8 ; ret
0x0000000000491dae : js 0x491de1 ; mov qword ptr [r9], r8 ; add rsp, 8 ; ret
0x000000000043df9d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449c11 : lahf ; ret
0x0000000000419de8 : lahf ; ret 0x3949
0x0000000000419e82 : lahf ; ret 0x61e9
0x000000000048ed96 : lahf ; ret 0xf45
0x0000000000449c0b : lahf ; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x000000000043e62d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449acd : lar eax, word ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000045d892 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000418515 : lcall [rbp + 0x41] ; pop rsp ; ret
0x00000000004133a5 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004130bc : lcall [rbx + 0x5d] ; ret
0x000000000047bc7a : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000421e78 : lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004339a6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000048d47c : lea eax, [rax + 8] ; mov qword ptr [rcx], r8 ; ret
0x000000000042a014 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042a024 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000429ff4 : lea eax, [rax + rdi - 0x10] ; ret
0x000000000042135d : lea eax, [rax - 0x10] ; ret
0x000000000046683e : lea eax, [rax] ; idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000046f14d : lea eax, [rcx + rsi] ; ret
0x00000000004457d4 : lea eax, [rcx - 1] ; ret
0x000000000044349c : lea eax, [rdi + 0x10] ; ret
0x00000000004434b1 : lea eax, [rdi + 0x11] ; ret
0x00000000004434cf : lea eax, [rdi + 0x12] ; ret
0x00000000004434ef : lea eax, [rdi + 0x13] ; ret
0x0000000000443512 : lea eax, [rdi + 0x14] ; ret
0x0000000000443531 : lea eax, [rdi + 0x15] ; ret
0x0000000000443551 : lea eax, [rdi + 0x16] ; ret
0x0000000000443571 : lea eax, [rdi + 0x17] ; ret
0x0000000000443594 : lea eax, [rdi + 0x18] ; ret
0x00000000004435b9 : lea eax, [rdi + 0x19] ; ret
0x00000000004435d7 : lea eax, [rdi + 0x1a] ; ret
0x00000000004435f7 : lea eax, [rdi + 0x1b] ; ret
0x0000000000443613 : lea eax, [rdi + 0x1c] ; ret
0x0000000000443633 : lea eax, [rdi + 0x1d] ; ret
0x0000000000443653 : lea eax, [rdi + 0x1e] ; ret
0x0000000000443673 : lea eax, [rdi + 0x1f] ; ret
0x00000000004433ed : lea eax, [rdi + 0xa] ; ret
0x000000000044340d : lea eax, [rdi + 0xb] ; ret
0x000000000044342f : lea eax, [rdi + 0xc] ; ret
0x000000000044344f : lea eax, [rdi + 0xd] ; ret
0x000000000044346f : lea eax, [rdi + 0xe] ; ret
0x0000000000443489 : lea eax, [rdi + 0xf] ; ret
0x0000000000443337 : lea eax, [rdi + 1] ; ret
0x0000000000443977 : lea eax, [rdi + 1] ; vzeroupper ; ret
0x000000000044334a : lea eax, [rdi + 2] ; ret
0x000000000044398b : lea eax, [rdi + 2] ; vzeroupper ; ret
0x0000000000443355 : lea eax, [rdi + 3] ; ret
0x00000000004439a5 : lea eax, [rdi + 3] ; vzeroupper ; ret
0x0000000000443368 : lea eax, [rdi + 4] ; ret
0x000000000044337d : lea eax, [rdi + 5] ; ret
0x000000000044339b : lea eax, [rdi + 6] ; ret
0x00000000004433a7 : lea eax, [rdi + 7] ; ret
0x00000000004433ba : lea eax, [rdi + 8] ; ret
0x00000000004433cf : lea eax, [rdi + 9] ; ret
0x000000000046ec49 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000046ec59 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000429fdd : lea eax, [rdi + rax + 0x30] ; ret
0x000000000046f395 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000043eb3b : lea eax, [rdi + rax] ; ret
0x00000000004439bd : lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000046f049 : lea eax, [rdi + rsi] ; ret
0x000000000047d82c : lea eax, [rdi - 1] ; cmp rax, -3 ; jbe 0x47d849 ; ret
0x0000000000443323 : lea eax, [rdi] ; ret
0x00000000004438f5 : lea eax, [rdi] ; vzeroupper ; ret
0x00000000004428fd : lea eax, [rdx + 0xa] ; ret
0x000000000044291d : lea eax, [rdx + 0xb] ; ret
0x000000000044293f : lea eax, [rdx + 0xc] ; ret
0x000000000044295f : lea eax, [rdx + 0xd] ; ret
0x000000000044297f : lea eax, [rdx + 0xe] ; ret
0x000000000044280f : lea eax, [rdx + 0xf] ; ret
0x0000000000442837 : lea eax, [rdx + 1] ; ret
0x000000000044284d : lea eax, [rdx + 2] ; ret
0x0000000000442865 : lea eax, [rdx + 3] ; ret
0x000000000044287b : lea eax, [rdx + 4] ; ret
0x000000000044288d : lea eax, [rdx + 5] ; ret
0x00000000004428ab : lea eax, [rdx + 6] ; ret
0x00000000004427b7 : lea eax, [rdx + 7] ; ret
0x00000000004428bd : lea eax, [rdx + 8] ; ret
0x00000000004428dd : lea eax, [rdx + 9] ; ret
0x000000000041896e : lea eax, [rdx + rdi] ; ret
0x0000000000447163 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000442825 : lea eax, [rdx] ; ret
0x000000000044d475 : lea eax, [rip + 0x71dc5] ; ret
0x0000000000459180 : lea eax, [rsp + 0xa0] ; call r15
0x000000000049017f : lea ebx, [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call rax
0x000000000046fb1b : lea ecx, [rax + 1] ; lea r9, [rsp + 0x28] ; call rbx
0x000000000046fcae : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000042c050 : lea ecx, [rbx + rcx] ; jmp r9
0x0000000000442bae : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000485814 : lea ecx, [rdx + rcx*8] ; jmp 0x485826
0x0000000000471566 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000465b04 : lea ecx, [rsi + rsi*8 - 0x76b30001] ; ret 0x894c
0x000000000046fc42 : lea ecx, [rsp + 0x20] ; call rbx
0x000000000046fb1f : lea ecx, [rsp + 0x28] ; call rbx
0x000000000046fe4d : lea ecx, [rsp + 0x30] ; call rbx
0x000000000044c7a1 : lea edi, [rcx + rsi + 0x20] ; jmp rdx
0x000000000045ae40 : lea edi, [rdi + rdi*8 - 1] ; dec dword ptr [rcx + 1] ; ret 0x8d48
0x00000000004621f1 : lea edi, [rdx + rdi*8 - 0x76b60001] ; ret
0x0000000000493ae8 : lea edi, [rip + 0x2d452] ; syscall
0x0000000000483fb8 : lea edi, [rip + 0x3d016] ; syscall
0x0000000000483d34 : lea edi, [rip + 0x3d296] ; syscall
0x0000000000481cb0 : lea edi, [rip + 0x3f312] ; syscall
0x0000000000481b70 : lea edi, [rip + 0x3f452] ; syscall
0x000000000045da98 : lea edi, [rip + 0x634a2] ; syscall
0x000000000045d9d3 : lea edi, [rip + 0x63567] ; syscall
0x000000000045d831 : lea edi, [rip + 0x63709] ; syscall
0x000000000045d757 : lea edi, [rip + 0x637e3] ; syscall
0x0000000000450058 : lea edi, [rip + 0x71882] ; syscall
0x000000000044feec : lea edi, [rip + 0x719ee] ; syscall
0x000000000044fdcc : lea edi, [rip + 0x71b0e] ; syscall
0x000000000041e389 : lea edi, [rip + 0x769fd] ; call 0x41a698
0x000000000041dc7c : lea edi, [rip + 0x770b1] ; call 0x41a698
0x000000000041dc38 : lea edi, [rip + 0x770da] ; call 0x41a698
0x000000000041dc19 : lea edi, [rip + 0x77114] ; call 0x41a698
0x000000000041e3a8 : lea edi, [rip + 0x775d2] ; call 0x41a698
0x000000000041dc44 : lea edi, [rip + 0x77c6e] ; call 0x41a6f8
0x0000000000447d34 : lea edi, [rip + 0x79ba6] ; syscall
0x0000000000421984 : lea edi, [rip + 0x9ce36] ; syscall
0x000000000041ed64 : lea edi, [rip + 0x9fa56] ; syscall
0x000000000041ed04 : lea edi, [rip + 0x9fab6] ; syscall
0x000000000041e944 : lea edi, [rip + 0x9fe76] ; syscall
0x000000000041e6e4 : lea edi, [rip + 0xa00d6] ; syscall
0x000000000041e11c : lea edi, [rip + 0xa069e] ; syscall
0x000000000041e0e4 : lea edi, [rip + 0xa06d6] ; syscall
0x000000000041fcc4 : lea edi, [rip + 0xa1026] ; syscall
0x000000000041f278 : lea edi, [rip + 0xa1a62] ; syscall
0x000000000041b3f5 : lea edi, [rip + 0xa58e5] ; syscall
0x000000000041b3c4 : lea edi, [rip + 0xa5926] ; syscall
0x000000000041b144 : lea edi, [rip + 0xa5ba6] ; syscall
0x000000000041ac20 : lea edi, [rip + 0xa60ca] ; syscall
0x0000000000419866 : lea edi, [rip + 0xa7404] ; syscall
0x00000000004192a6 : lea edi, [rip + 0xa79c4] ; syscall
0x0000000000418f3a : lea edi, [rip + 0xa7d30] ; syscall
0x0000000000418bf8 : lea edi, [rip + 0xa8072] ; syscall
0x0000000000417692 : lea edi, [rip + 0xa95d8] ; syscall
0x00000000004173f2 : lea edi, [rip + 0xa9878] ; syscall
0x000000000041709e : lea edi, [rip + 0xa9bcc] ; syscall
0x0000000000411634 : lea edi, [rip + 0xb02a6] ; syscall
0x00000000004105e3 : lea edi, [rip + 0xb1187] ; syscall
0x00000000004104a3 : lea edi, [rip + 0xb12c7] ; syscall
0x000000000041026c : lea edi, [rip + 0xb14fe] ; syscall
0x0000000000410231 : lea edi, [rip + 0xb1539] ; syscall
0x000000000041014d : lea edi, [rip + 0xb161d] ; syscall
0x0000000000406a31 : lea edi, [rip + 0xb9dc1] ; syscall
0x000000000040508e : lea edi, [rip + 0xbb72c] ; syscall
0x0000000000403f0f : lea edi, [rip + 0xbc803] ; syscall
0x0000000000403ee1 : lea edi, [rip + 0xbc831] ; syscall
0x0000000000403d95 : lea edi, [rip + 0xbc97d] ; syscall
0x00000000004012cd : lea edi, [rip + 0xbf53d] ; syscall
0x0000000000403d20 : lea edi, [rsi + 0x80] ; call 8
0x0000000000485810 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x48582a
0x000000000046db14 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042c124 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000422c36 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042c528 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000466c18 : lea esi, [rax] ; idiv edi ; inc dword ptr [rcx - 1] ; push rsp ; ret
0x000000000045d6e0 : lea esi, [rip + 0x63852] ; call 0x4499c8
0x00000000004215f9 : lea esi, [rip + 0x7382b] ; call 0x45e068
0x00000000004215e0 : lea esi, [rip + 0x73839] ; call 0x45e068
0x0000000000445e88 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000404726 : lea esp, [rax + 1] ; call 0x401185
0x00000000004101d1 : lea esp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000045c605 : lea esp, [rcx + rax] ; mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000422c35 : lea r10, [r10 + r9] ; jmp r10
0x0000000000404725 : lea r12, [rax + 1] ; call 0x401186
0x00000000004101d0 : lea r12, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000045917f : lea r8, [rsp + 0xa0] ; call r15
0x000000000042c04f : lea r9, [r11 + r9] ; jmp r9
0x000000000046fc41 : lea r9, [rsp + 0x20] ; call rbx
0x000000000046fb1e : lea r9, [rsp + 0x28] ; call rbx
0x000000000046fe4c : lea r9, [rsp + 0x30] ; call rbx
0x000000000048d47b : lea rax, [rax + 8] ; mov qword ptr [rcx], r8 ; ret
0x000000000042a013 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042a023 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000429ff3 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000042135c : lea rax, [rax - 0x10] ; ret
0x000000000046f14c : lea rax, [rcx + rsi] ; ret
0x00000000004457d3 : lea rax, [rcx - 1] ; ret
0x000000000044349b : lea rax, [rdi + 0x10] ; ret
0x00000000004434b0 : lea rax, [rdi + 0x11] ; ret
0x00000000004434ce : lea rax, [rdi + 0x12] ; ret
0x00000000004434ee : lea rax, [rdi + 0x13] ; ret
0x0000000000443511 : lea rax, [rdi + 0x14] ; ret
0x0000000000443530 : lea rax, [rdi + 0x15] ; ret
0x0000000000443550 : lea rax, [rdi + 0x16] ; ret
0x0000000000443570 : lea rax, [rdi + 0x17] ; ret
0x0000000000443593 : lea rax, [rdi + 0x18] ; ret
0x00000000004435b8 : lea rax, [rdi + 0x19] ; ret
0x00000000004435d6 : lea rax, [rdi + 0x1a] ; ret
0x00000000004435f6 : lea rax, [rdi + 0x1b] ; ret
0x0000000000443612 : lea rax, [rdi + 0x1c] ; ret
0x0000000000443632 : lea rax, [rdi + 0x1d] ; ret
0x0000000000443652 : lea rax, [rdi + 0x1e] ; ret
0x0000000000443672 : lea rax, [rdi + 0x1f] ; ret
0x00000000004433ec : lea rax, [rdi + 0xa] ; ret
0x000000000044340c : lea rax, [rdi + 0xb] ; ret
0x000000000044342e : lea rax, [rdi + 0xc] ; ret
0x000000000044344e : lea rax, [rdi + 0xd] ; ret
0x000000000044346e : lea rax, [rdi + 0xe] ; ret
0x0000000000443488 : lea rax, [rdi + 0xf] ; ret
0x0000000000443336 : lea rax, [rdi + 1] ; ret
0x0000000000443976 : lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000443349 : lea rax, [rdi + 2] ; ret
0x000000000044398a : lea rax, [rdi + 2] ; vzeroupper ; ret
0x0000000000443354 : lea rax, [rdi + 3] ; ret
0x00000000004439a4 : lea rax, [rdi + 3] ; vzeroupper ; ret
0x0000000000443367 : lea rax, [rdi + 4] ; ret
0x000000000044337c : lea rax, [rdi + 5] ; ret
0x000000000044339a : lea rax, [rdi + 6] ; ret
0x00000000004433a6 : lea rax, [rdi + 7] ; ret
0x00000000004433b9 : lea rax, [rdi + 8] ; ret
0x00000000004433ce : lea rax, [rdi + 9] ; ret
0x000000000046ec48 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000046ec58 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000429fdc : lea rax, [rdi + rax + 0x30] ; ret
0x000000000046f394 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000043eb3a : lea rax, [rdi + rax] ; ret
0x00000000004439bc : lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000046f048 : lea rax, [rdi + rsi] ; ret
0x0000000000443322 : lea rax, [rdi] ; ret
0x00000000004438f4 : lea rax, [rdi] ; vzeroupper ; ret
0x00000000004428fc : lea rax, [rdx + 0xa] ; ret
0x000000000044291c : lea rax, [rdx + 0xb] ; ret
0x000000000044293e : lea rax, [rdx + 0xc] ; ret
0x000000000044295e : lea rax, [rdx + 0xd] ; ret
0x000000000044297e : lea rax, [rdx + 0xe] ; ret
0x000000000044280e : lea rax, [rdx + 0xf] ; ret
0x0000000000442836 : lea rax, [rdx + 1] ; ret
0x000000000044284c : lea rax, [rdx + 2] ; ret
0x0000000000442864 : lea rax, [rdx + 3] ; ret
0x000000000044287a : lea rax, [rdx + 4] ; ret
0x000000000044288c : lea rax, [rdx + 5] ; ret
0x00000000004428aa : lea rax, [rdx + 6] ; ret
0x00000000004427b6 : lea rax, [rdx + 7] ; ret
0x00000000004428bc : lea rax, [rdx + 8] ; ret
0x00000000004428dc : lea rax, [rdx + 9] ; ret
0x0000000000442824 : lea rax, [rdx] ; ret
0x000000000044d474 : lea rax, [rip + 0x71dc5] ; ret
0x000000000049017e : lea rbx, [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call rax
0x0000000000442bad : lea rcx, [r11 + rcx] ; jmp rcx
0x000000000046fb1a : lea rcx, [rax + 1] ; lea r9, [rsp + 0x28] ; call rbx
0x000000000046fcad : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000485813 : lea rcx, [rdx + rcx*8] ; jmp 0x485827
0x0000000000471565 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000403d1f : lea rdi, [r14 + 0x80] ; call 9
0x000000000044c7a0 : lea rdi, [rcx + rsi + 0x20] ; jmp rdx
0x0000000000493ae7 : lea rdi, [rip + 0x2d452] ; syscall
0x0000000000483fb7 : lea rdi, [rip + 0x3d016] ; syscall
0x0000000000483d33 : lea rdi, [rip + 0x3d296] ; syscall
0x0000000000481caf : lea rdi, [rip + 0x3f312] ; syscall
0x0000000000481b6f : lea rdi, [rip + 0x3f452] ; syscall
0x000000000045da97 : lea rdi, [rip + 0x634a2] ; syscall
0x000000000045d9d2 : lea rdi, [rip + 0x63567] ; syscall
0x000000000045d830 : lea rdi, [rip + 0x63709] ; syscall
0x000000000045d756 : lea rdi, [rip + 0x637e3] ; syscall
0x0000000000450057 : lea rdi, [rip + 0x71882] ; syscall
0x000000000044feeb : lea rdi, [rip + 0x719ee] ; syscall
0x000000000044fdcb : lea rdi, [rip + 0x71b0e] ; syscall
0x000000000041e388 : lea rdi, [rip + 0x769fd] ; call 0x41a699
0x000000000041dc7b : lea rdi, [rip + 0x770b1] ; call 0x41a699
0x000000000041dc37 : lea rdi, [rip + 0x770da] ; call 0x41a699
0x000000000041dc18 : lea rdi, [rip + 0x77114] ; call 0x41a699
0x000000000041e3a7 : lea rdi, [rip + 0x775d2] ; call 0x41a699
0x000000000041dc43 : lea rdi, [rip + 0x77c6e] ; call 0x41a6f9
0x0000000000447d33 : lea rdi, [rip + 0x79ba6] ; syscall
0x0000000000421983 : lea rdi, [rip + 0x9ce36] ; syscall
0x000000000041ed63 : lea rdi, [rip + 0x9fa56] ; syscall
0x000000000041ed03 : lea rdi, [rip + 0x9fab6] ; syscall
0x000000000041e943 : lea rdi, [rip + 0x9fe76] ; syscall
0x000000000041e6e3 : lea rdi, [rip + 0xa00d6] ; syscall
0x000000000041e11b : lea rdi, [rip + 0xa069e] ; syscall
0x000000000041e0e3 : lea rdi, [rip + 0xa06d6] ; syscall
0x000000000041fcc3 : lea rdi, [rip + 0xa1026] ; syscall
0x000000000041f277 : lea rdi, [rip + 0xa1a62] ; syscall
0x000000000041b3f4 : lea rdi, [rip + 0xa58e5] ; syscall
0x000000000041b3c3 : lea rdi, [rip + 0xa5926] ; syscall
0x000000000041b143 : lea rdi, [rip + 0xa5ba6] ; syscall
0x000000000041ac1f : lea rdi, [rip + 0xa60ca] ; syscall
0x0000000000419865 : lea rdi, [rip + 0xa7404] ; syscall
0x00000000004192a5 : lea rdi, [rip + 0xa79c4] ; syscall
0x0000000000418f39 : lea rdi, [rip + 0xa7d30] ; syscall
0x0000000000418bf7 : lea rdi, [rip + 0xa8072] ; syscall
0x0000000000417691 : lea rdi, [rip + 0xa95d8] ; syscall
0x00000000004173f1 : lea rdi, [rip + 0xa9878] ; syscall
0x000000000041709d : lea rdi, [rip + 0xa9bcc] ; syscall
0x0000000000411633 : lea rdi, [rip + 0xb02a6] ; syscall
0x00000000004105e2 : lea rdi, [rip + 0xb1187] ; syscall
0x00000000004104a2 : lea rdi, [rip + 0xb12c7] ; syscall
0x000000000041026b : lea rdi, [rip + 0xb14fe] ; syscall
0x0000000000410230 : lea rdi, [rip + 0xb1539] ; syscall
0x000000000041014c : lea rdi, [rip + 0xb161d] ; syscall
0x0000000000406a30 : lea rdi, [rip + 0xb9dc1] ; syscall
0x000000000040508d : lea rdi, [rip + 0xbb72c] ; syscall
0x0000000000403f0e : lea rdi, [rip + 0xbc803] ; syscall
0x0000000000403ee0 : lea rdi, [rip + 0xbc831] ; syscall
0x0000000000403d94 : lea rdi, [rip + 0xbc97d] ; syscall
0x00000000004012cc : lea rdi, [rip + 0xbf53d] ; syscall
0x000000000042c123 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000046db13 : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000048580f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x48582b
0x000000000042c527 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000045d6df : lea rsi, [rip + 0x63852] ; call 0x4499c9
0x00000000004215f8 : lea rsi, [rip + 0x7382b] ; call 0x45e069
0x00000000004215df : lea rsi, [rip + 0x73839] ; call 0x45e069
0x0000000000445e87 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000428637 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000429517 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047d03b : leave ; add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x25], cl ; ret 0x447
0x0000000000445ab4 : leave ; add rax, rcx ; sub rax, rdi ; ret
0x000000000045663a : leave ; cli ; dec dword ptr [rcx - 0x77] ; retf
0x000000000047a748 : leave ; cmove r8, rax ; mov rax, r8 ; ret
0x0000000000422933 : leave ; cmp byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004455b0 : leave ; jne 0x4455a3 ; ret
0x0000000000445660 : leave ; jne 0x445653 ; ret
0x0000000000445920 : leave ; jne 0x445917 ; sub rax, 1 ; ret
0x00000000004719bf : leave ; mov eax, 1 ; ret
0x0000000000403d98 : leave ; or eax, dword ptr [rax] ; syscall
0x00000000004070e2 : leave ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x0000000000401d53 : leave ; ret
0x000000000044deb3 : leave ; ret 0xfffd
0x0000000000457fd3 : leave ; scasd eax, dword ptr [rdi] ; cli ; dec dword ptr [rcx - 0x77] ; dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x00000000004923e4 : leave ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047197f : leave ; xor eax, eax ; ret
0x0000000000425948 : ljmp [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000480934 : ljmp [rcx] ; ret
0x0000000000468f30 : ljmp [rcx] ; retf 0x2944
0x0000000000462ab0 : ljmp [rcx] ; retf 0xda29
0x000000000042ad40 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047b1cb : lock inc dword ptr [r8 + 0x10] ; pop rbx ; pop rbp ; ret
0x000000000044d6c0 : lodsb al, byte ptr [rsi] ; add al, 0 ; mov rdi, r15 ; call 0x42a188
0x000000000044d6bf : lodsb al, byte ptr [rsi] ; add al, 0 ; mov rdi, r15 ; call 0x42a189
0x0000000000444f30 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000474707 : lodsb al, byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004315e0 : lodsb al, byte ptr [rsi] ; fimul dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000428c34 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044d68b : lodsd eax, dword ptr [rsi] ; add al, 0 ; mov rdi, r12 ; call 0x42a188
0x0000000000488f62 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000421b20 : loop 0x421b73 ; mov esi, ebp ; mov rdi, r13 ; call 0x41de19
0x000000000042428d : loop 0x4242c5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043328a : loop 0x433285 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433289 : loop 0x433286 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435dba : loop 0x435db5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435db9 : loop 0x435db6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044a96f : loop 0x44a97f ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044ba29 : loop 0x44ba2f ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000471372 : loop 0x471332 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000047e6b9 : loop 0x47e70b ; mov eax, eax ; ret
0x0000000000487337 : loop 0x487342 ; add rdx, rax ; jmp 0x487351
0x0000000000402818 : loope 0x402855 ; ret 0x860f
0x000000000042295b : loope 0x422950 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000042584e : loope 0x42587f ; enter -0x73b, 0x77 ; ret
0x00000000004331fa : loope 0x4331f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004331f9 : loope 0x4331f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435d2a : loope 0x435d25 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435d29 : loope 0x435d26 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000443a23 : loope 0x443a75 ; lea eax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000443c5b : loope 0x443c65 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000447f67 : loope 0x447fb9 ; mov edx, ebp ; call rbx
0x000000000044e2e3 : loope 0x44e2ee ; pop r12 ; shl eax, cl ; ret
0x000000000047051e : loope 0x470533 ; je 0x470544 ; ret
0x00000000004886b6 : loope 0x4886bf ; sub rdx, rcx ; jmp 0x4886cd
0x0000000000488deb : loope 0x488e3d ; mov dword ptr [rdi], ecx ; ret
0x0000000000488e1c : loope 0x488e6f ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000488e9d : loope 0x488ef0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004924be : loope 0x49251d ; ret
0x0000000000401c6d : loopne 0x401cd8 ; nop ; ret
0x000000000040304c : loopne 0x4030ae ; pop rbp ; pop r12 ; ret
0x00000000004030ea : loopne 0x403130 ; pop rsp ; ret
0x000000000041150f : loopne 0x411571 ; pop rbp ; pop r12 ; ret
0x00000000004119e3 : loopne 0x411a47 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411a09 : loopne 0x411a6d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041630e : loopne 0x416370 ; pop rbp ; pop r12 ; ret
0x000000000041a824 : loopne 0x41a888 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a85c : loopne 0x41a8c1 ; pop r12 ; pop r13 ; ret
0x000000000041abc7 : loopne 0x41ac0d ; pop rsp ; ret
0x000000000041abb8 : loopne 0x41ac1a ; pop rbp ; pop r12 ; ret
0x000000000041b027 : loopne 0x41b08b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041f17f : loopne 0x41f1e1 ; pop rbp ; pop r12 ; ret
0x0000000000421372 : loopne 0x42137b ; cmovne rax, rdx ; ret
0x0000000000421d4c : loopne 0x421d72 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000042c582 : loopne 0x42c59a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c581 : loopne 0x42c59b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c6d2 : loopne 0x42c6ea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c6d1 : loopne 0x42c6eb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c822 : loopne 0x42c83a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c821 : loopne 0x42c83b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c972 : loopne 0x42c98a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c971 : loopne 0x42c98b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042cac2 : loopne 0x42cada ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042cac1 : loopne 0x42cadb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042cc12 : loopne 0x42cc2a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042cc11 : loopne 0x42cc2b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042cd62 : loopne 0x42cd7a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042cd61 : loopne 0x42cd7b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ceb0 : loopne 0x42cec8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ceaf : loopne 0x42cec9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d002 : loopne 0x42d01a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d001 : loopne 0x42d01b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d152 : loopne 0x42d16a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d151 : loopne 0x42d16b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d2a2 : loopne 0x42d2ba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d2a1 : loopne 0x42d2bb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d3f2 : loopne 0x42d40a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d3f1 : loopne 0x42d40b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d542 : loopne 0x42d55a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d541 : loopne 0x42d55b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d692 : loopne 0x42d6aa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d691 : loopne 0x42d6ab ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d7e2 : loopne 0x42d7fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042d7e1 : loopne 0x42d7fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef62 : loopne 0x42ef7a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef61 : loopne 0x42ef7b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f0b2 : loopne 0x42f0ca ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f0b1 : loopne 0x42f0cb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f202 : loopne 0x42f21a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f201 : loopne 0x42f21b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f352 : loopne 0x42f36a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f351 : loopne 0x42f36b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f4a2 : loopne 0x42f4ba ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f4a1 : loopne 0x42f4bb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f5f2 : loopne 0x42f60a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f5f1 : loopne 0x42f60b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f742 : loopne 0x42f75a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f741 : loopne 0x42f75b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f890 : loopne 0x42f8a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f88f : loopne 0x42f8a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f9e2 : loopne 0x42f9fa ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f9e1 : loopne 0x42f9fb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fb32 : loopne 0x42fb4a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fb31 : loopne 0x42fb4b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fc82 : loopne 0x42fc9a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fc81 : loopne 0x42fc9b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fdd2 : loopne 0x42fdea ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fdd1 : loopne 0x42fdeb ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ff22 : loopne 0x42ff3a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ff21 : loopne 0x42ff3b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430072 : loopne 0x43008a ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430071 : loopne 0x43008b ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004301c2 : loopne 0x4301da ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004301c1 : loopne 0x4301db ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000449633 : loopne 0x449694 ; pop r12 ; ret
0x000000000044967b : loopne 0x4496dc ; pop r12 ; ret
0x00000000004498aa : loopne 0x44990f ; pop r12 ; pop r13 ; jmp rax
0x000000000044993a : loopne 0x44999f ; pop r12 ; pop r13 ; jmp rax
0x000000000044a523 : loopne 0x44a586 ; pop r12 ; jmp rax
0x000000000044a5d2 : loopne 0x44a637 ; pop r12 ; pop r13 ; jmp rax
0x000000000044a5d9 : loopne 0x44a648 ; nop dword ptr [rax + rax] ; ret
0x000000000044bdae : loopne 0x44be12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000459df5 : loopne 0x459e5a ; pop r12 ; pop r13 ; ret
0x0000000000459e77 : loopne 0x459edc ; pop r12 ; pop r13 ; ret
0x000000000045a470 : loopne 0x45a4c0 ; test eax, eax ; je 0x45a47e ; call rax
0x000000000046464a : loopne 0x4646b0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000465b02 : loopne 0x465a96 ; lea ecx, [rsi + rsi*8 - 0x76b30001] ; ret 0x894c
0x0000000000466fb3 : loopne 0x466fbd ; inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000046aa26 : loopne 0x46aa8c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046b022 : loopne 0x46b086 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046b82e : loopne 0x46b890 ; pop rbp ; pop r12 ; ret
0x000000000046d686 : loopne 0x46d6ed ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046dc7c : loopne 0x46dc91 ; cmp eax, 4 ; je 0x46dc8b ; ret
0x000000000046e03c : loopne 0x46e059 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000046e0fa : loopne 0x46e142 ; pop rsp ; pop r13 ; ret
0x000000000046e0e3 : loopne 0x46e148 ; pop r12 ; pop r13 ; ret
0x0000000000470bf7 : loopne 0x470c5b ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470d77 : loopne 0x470ddb ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470e9f : loopne 0x470f03 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004717cc : loopne 0x471830 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000471804 : loopne 0x471869 ; pop r12 ; pop r13 ; ret
0x00000000004743f1 : loopne 0x474458 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047446c : loopne 0x4744d3 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a2c7 : loopne 0x47a32b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b487 : loopne 0x47b4e9 ; pop rbp ; pop r12 ; ret
0x000000000047b4a7 : loopne 0x47b4ed ; pop rsp ; ret
0x000000000047b49a : loopne 0x47b4fc ; pop rbp ; pop r12 ; ret
0x000000000047baf8 : loopne 0x47bb5c ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047bb77 : loopne 0x47bbda ; pop r12 ; ret
0x000000000047e498 : loopne 0x47e4de ; pop rsp ; ret
0x000000000047e996 : loopne 0x47e9f7 ; pop r12 ; ret
0x000000000047ea2e : loopne 0x47ea8f ; pop r12 ; ret
0x000000000047ea55 : loopne 0x47eab6 ; pop r12 ; ret
0x000000000047ea72 : loopne 0x47ead3 ; pop r12 ; ret
0x00000000004822d8 : loopne 0x482265 ; ret
0x0000000000484896 : loopne 0x4848f7 ; pop r12 ; ret
0x00000000004848ad : loopne 0x48490e ; pop r12 ; ret
0x0000000000485ad9 : loopne 0x485b3a ; pop r12 ; ret
0x0000000000485aee : loopne 0x485b4f ; pop r12 ; ret
0x000000000048871d : loopne 0x488726 ; sub eax, 1 ; ret
0x000000000048a66b : loopne 0x48a62b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048a9e2 : loopne 0x48aa28 ; pop rsp ; ret
0x000000000048aac0 : loopne 0x48ab06 ; pop rsp ; ret
0x000000000048ab5a : loopne 0x48abad ; sar eax, 3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048c758 : loopne 0x48c7bc ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048c787 : loopne 0x48c7eb ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048c79a : loopne 0x48c7ff ; pop r12 ; pop r13 ; ret
0x000000000048e933 : loopne 0x48e975 ; jmp rax
0x000000000048f073 : loopne 0x48f0b5 ; jmp rax
0x00000000004919b0 : loopne 0x491a12 ; pop rbp ; pop r12 ; ret
0x0000000000491a17 : loopne 0x491a5d ; pop rsp ; ret
0x00000000004939ff : loopne 0x493a61 ; pop rbp ; pop r12 ; ret
0x000000000047cac8 : mov ah, 0x46 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048e930 : mov ah, 0x4c ; add eax, esp ; jmp rax
0x000000000044c708 : mov ah, 4 ; add byte ptr [rax + 0x15], bh ; syscall
0x000000000046fd23 : mov ah, 4 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048d5db : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000048f7d7 : mov al, 0 ; add byte ptr [rax], al ; ret
0x000000000040288d : mov al, 0x81 ; retf 0x434
0x0000000000486cd3 : mov al, 0x89 ; ret 0xe283
0x000000000043eeff : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000479415 : mov al, 0xf ; xchg eax, ebp ; ret 0x2148
0x0000000000464359 : mov al, 0xfb ; dec dword ptr [rcx - 0x77] ; ret
0x000000000044ab31 : mov al, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000046f98c : mov al, 9 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047c94b : mov al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000441096 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000004410b4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000442820 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000441070 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000441080 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000433fc1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043f751 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000422985 : mov bh, 0x3c ; add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000471045 : mov bh, 0x48 ; adc byte ptr [rax + 1], cl ; retf 0x8b49
0x0000000000443af8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x0000000000491031 : mov bh, 0x5d ; and byte ptr [rsi - 9], ah ; ret
0x0000000000412bff : mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000411c35 : mov bh, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004453ee : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004645ab : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x0000000000465ce2 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045b3fb : mov bl, ch ; retf 0x8348
0x000000000047823a : mov byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf
0x00000000004506f2 : mov byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004784bb : mov byte ptr [r9 - 0x77], r9b ; ret 0x8949
0x000000000044c1be : mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000414a53 : mov byte ptr [rax + 0x48004bfb], 0xc7 ; ret
0x000000000047823b : mov byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000004506f3 : mov byte ptr [rax - 0x7d], cl ; ret
0x000000000044be4f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000401f37 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000465b1a : mov byte ptr [rbp - 0x958], cl ; call rax
0x0000000000465b19 : mov byte ptr [rbp - 0x958], r9b ; call rax
0x00000000004784bc : mov byte ptr [rcx - 0x77], cl ; ret 0x8949
0x0000000000443498 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000442df8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044350e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x0000000000442e4e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000443590 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000442ed0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044c152 : mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000043f766 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000443346 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000442d16 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000443362 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000442d32 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000442d73 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042dbab : mov byte ptr [rdi - 1], dl ; ret
0x00000000004438f1 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x000000000043f6d1 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x0000000000490644 : mov byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000436d16 : mov byte ptr [rdi], cl ; ret
0x0000000000446e09 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000443320 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000442cf0 : mov byte ptr [rdi], dh ; ret
0x0000000000434033 : mov byte ptr [rdi], dl ; ret
0x0000000000442849 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000441099 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442877 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000004410b7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000044aa7d : mov byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000442822 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000441072 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048ded4 : mov byte ptr [rip + 0x33255], 8 ; ret
0x0000000000401cea : mov byte ptr [rip + 0xbe54f], 1 ; pop rbp ; ret
0x00000000004542a5 : mov byte ptr [rsi], cl ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000466094 : mov ch, 0 ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000046ce82 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x000000000044a807 : mov ch, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x000000000042b8b6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045482d : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000048e8f3 : mov cl, 0x4c ; add eax, ecx ; jmp rax
0x000000000047faac : mov cl, 0xeb ; retf 0x4c90
0x000000000045bef8 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000401b84 : mov cl, byte ptr [rax + 1] ; sar byte ptr [rsi], 1 ; jmp rax
0x0000000000439505 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000045b39c : mov cl, byte ptr [rcx + 1] ; sar byte ptr [rsi], 1 ; jmp r8
0x0000000000422c34 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000042a704 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000436d14 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047051b : mov cl, dl ; and cl, 0xf ; je 0x470547 ; ret
0x0000000000402812 : mov cs, word ptr [rax + 1] ; int1 ; jmp rcx
0x000000000047154d : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x471568 ; ret
0x000000000043daae : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000442d10 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000417a91 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004198c4 : mov dh, 0 ; ret
0x000000000040f559 : mov dh, 0x11 ; test dl, dl ; jne 0x40f53e ; ret
0x0000000000434031 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042a255 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040f457 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b78d8c], eax ; ret 0xfff0
0x00000000004065a1 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000406553 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000493b91 : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047cc9e : mov dh, 0x45 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000047ce94 : mov dh, 0x45 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000045ee5c : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000444fc1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000444fb1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000444f81 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000444fa1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000444f91 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000048859f : mov dh, 0x48 ; add al, 0x89 ; retf 0xeac0
0x0000000000453cc7 : mov dh, 0x48 ; dec dword ptr [rax + 0x3948074a] ; ret
0x0000000000410871 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e554 : mov dh, 0x53 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000406571 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004822c1 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf01
0x000000000046b6b1 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000004256f6 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000049123a : mov dh, 0x55 ; and byte ptr [rcx - 0x75], cl ; insd dword ptr [rdi], dx ; sbb dh, dh ; ret 0xf01
0x0000000000444fc5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000444fb5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000444f85 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000465402 : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000444f95 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000480818 : mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000047f175 : mov dh, 0x58 ; or al, 0xf6 ; ret
0x000000000047504b : mov dh, 0x87 ; sbb eax, 0x89000003 ; ret 0xe8c0
0x000000000040ec90 : mov dh, 0xc ; or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x000000000044eccb : mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x0000000000471336 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048a921 : mov dh, 0xc0 ; neg eax ; ret
0x000000000048441e : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447101 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000416b94 : mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a27b : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000445f0d : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000423fe1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042a714 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000041ed06 : mov dh, 0xfa ; or dword ptr [rax], eax ; syscall
0x00000000004919ac : mov dh, 0xff ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004917bd : mov dh, 0xff ; nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004179f1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000468b61 : mov dh, 4 ; add cl, byte ptr [rcx - 0x77] ; retf
0x0000000000461695 : mov dh, 4 ; add ecx, dword ptr [rax - 0x75] ; add al, 0xc6 ; jmp rax
0x000000000042a711 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042a252 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000423fe4 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000429cf4 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000419fc2 : mov dh, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c707 : mov dh, byte ptr [rsp + rax + 0x15b800] ; add byte ptr [rax], al ; syscall
0x000000000044d72f : mov dl, 0xab ; add al, 0 ; mov rdi, r15 ; call 0x42a189
0x000000000045b2aa : mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x000000000042dc30 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000465433 : mov dl, dl ; sbb al, 0 ; add dh, dh ; ret 0xf40
0x000000000041a5e3 : mov dword ptr [r11 + 0x14], 0 ; ret
0x0000000000436d0a : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000436cf5 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c105 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000046ca5d : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046d22c : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000044c1bb : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000041ace7 : mov dword ptr [rax + 0x20], edx ; add rsp, 8 ; ret
0x000000000044c1c9 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000046ca61 : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000046ca9f : mov dword ptr [rax + 0x40], edx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000046db4d : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004186e5 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c109 : mov dword ptr [rax + 8], edx ; ret
0x0000000000493e48 : mov dword ptr [rax - 0x77], ecx ; ret 0xc148
0x0000000000411844 : mov dword ptr [rax], 0x89480000 ; ret
0x000000000041d44b : mov dword ptr [rax], 0xc ; mov rax, r8 ; ret
0x000000000042c512 : mov dword ptr [rax], ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004845c5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484531 : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x00000000004845b9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000046db18 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461673 : mov dword ptr [rbp + 0x31], 0x358d48db ; ret 0x5a0
0x000000000045b8f7 : mov dword ptr [rbp - 0x38], edx ; xor edx, edx ; call 0x448377
0x0000000000463315 : mov dword ptr [rbp - 0x4e8], ebx ; call 0x46fd78
0x0000000000463acc : mov dword ptr [rbp - 0x4e8], esi ; call 0x46fd78
0x0000000000461454 : mov dword ptr [rbp - 0x4f8], esi ; jmp rax
0x00000000004032fd : mov dword ptr [rbp - 0x68], eax ; call 0x40f515
0x000000000045f2e2 : mov dword ptr [rbp - 0x940], ebx ; call rax
0x000000000045f2e1 : mov dword ptr [rbp - 0x940], r11d ; call rax
0x0000000000478c9d : mov dword ptr [rbp - 0xd0], edx ; call r15
0x0000000000480450 : mov dword ptr [rbp - 0xe8], eax ; call rax
0x00000000004785b1 : mov dword ptr [rbp - 0xf0], ebx ; call r10
0x000000000046e869 : mov dword ptr [rbp], 0 ; jmp 0x46e845
0x0000000000459c97 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000047da92 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047b94e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a5e4 : mov dword ptr [rbx + 0x14], 0 ; ret
0x0000000000485a63 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485a37
0x000000000047d9c7 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048a949 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000048aa0d : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000046b834 : mov dword ptr [rbx + 0x34], 3 ; jmp 0x46b810
0x000000000045c1df : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000045c1bc : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000046da3e : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000419328 : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415eae : mov dword ptr [rbx + 0x70], 0xffffffff ; pop rbx ; ret
0x000000000046cafa : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046d0fe : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000459c67 : mov dword ptr [rbx + 8], eax ; cmp eax, -3 ; je 0x459c91 ; pop rbx ; ret
0x000000000045a5b2 : mov dword ptr [rbx], 0x89480000 ; ret 0x2948
0x00000000004854ce : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000417ce2 : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048c7dd : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000483e06 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046d231 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000041abb4 : mov dword ptr [rbx], esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414283 : mov dword ptr [rbx], esp ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000041e85e : mov dword ptr [rcx - 0x78], 0x29481004 ; ret 0x3948
0x0000000000436d0b : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000436cf6 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000436ce5 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000048d461 : mov dword ptr [rcx], eax ; add rsp, 8 ; ret
0x000000000044874e : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000048d480 : mov dword ptr [rcx], eax ; ret
0x000000000048f71f : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x00000000004434ad : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000004434eb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000044356d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x0000000000442e4b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000442ecd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000442e0d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000442f10 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000442f30 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000442ef1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004435d3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000442f13 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000417757 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004435b5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000004435f3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000442ef5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004194fc : mov dword ptr [rdi + 0x18], esi ; mov qword ptr [rdi + 8], rax ; xor eax, eax ; ret
0x000000000044c14f : mov dword ptr [rdi + 0x20], edx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000044c161 : mov dword ptr [rdi + 0x20], esi ; ret
0x000000000047733d : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000047730b : mov dword ptr [rdi + 0x310], eax ; ret
0x0000000000417788 : mov dword ptr [rdi + 0x48], eax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000048f775 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044352d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x0000000000442e6d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000004434cb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000044354d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x0000000000442e2b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000433e75 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000433cb8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433f58 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000433e05 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000433c48 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443397 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000433d95 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000433bd8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442d57 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000443379 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000433b68 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442d49 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044342b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000433af8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442dbb : mov dword ptr [rdi + 5], edx ; ret
0x000000000044344b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000433a88 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442dcb : mov dword ptr [rdi + 6], edx ; ret
0x00000000004433e9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000044346b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000433a18 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442d99 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048a746 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000041775b : mov dword ptr [rdi + 8], eax ; ret
0x00000000004194c0 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000488f38 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000443409 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000004433cb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x000000000048a428 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000442d8b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000446caf : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000445f39 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000043f788 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x0000000000446ca7 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000446e29 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000445f29 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000043f79c : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x0000000000446c9f : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445f1b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048f731 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x000000000042d8f5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042d933 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000488e9f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042dc7c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004334c8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042de5c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000433448 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e04c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004333c8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e21d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433339 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e41d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004332a9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e61d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433219 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042dffd : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042de15 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042dff9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042e3d9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042daaf : mov dword ptr [rdi - 4], edx ; ret
0x000000000042e3d6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e5d6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e7d6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042d8f9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042d937 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042daac : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042dba8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042daf4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000433548 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000488e18 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000488f32 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000443365 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004433b7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000043f764 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000443344 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000442d14 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000443395 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000442d55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004433e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000442d97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000443407 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000442da7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000445c3b : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000442db8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000442dc8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000442dd8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000442d46 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000442d88 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000445c47 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000433a1c : mov dword ptr [rdi], ecx ; ret
0x0000000000446e23 : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000443334 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000443974 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000443352 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004439a2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000004433a4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000433d24 : mov dword ptr [rdi], edx ; ret
0x000000000043f754 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x0000000000436cf3 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000048a5f6 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000436ce2 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000436d07 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000445f20 : mov dword ptr [rdi], esi ; ret
0x00000000004143ed : mov dword ptr [rdx + 0xf0], ecx ; pop rbx ; ret
0x000000000041180b : mov dword ptr [rdx + 0xf0], ecx ; ret
0x00000000004428a7 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000004410d7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000442889 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004410c9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044293b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x00000000004428b9 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004410e9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000044295b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x00000000004428d9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000004410f9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004428f9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000044297b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000441109 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442919 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000044280b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000044105b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000459c7f : mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000041a2fb : mov dword ptr [rdx + rcx], eax ; ret
0x000000000048a6b2 : mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000471410 : mov dword ptr [rdx], eax ; jmp 0x4713e2
0x0000000000442834 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000442862 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000004427b4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000004487f2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000048a5f8 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000048a787 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000448a2a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000441004 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484631 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000419419 : mov dword ptr [rdx], eax ; ret
0x000000000046cdac : mov dword ptr [rdx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004840a8 : mov dword ptr [rip + 0x3cf3a], eax ; ret
0x000000000047b269 : mov dword ptr [rip + 0x460c1], eax ; ret
0x000000000044d4aa : mov dword ptr [rip + 0x70608], eax ; pop rbx ; ret
0x000000000044e22d : mov dword ptr [rip + 0x735e1], eax ; ret
0x000000000044e1fd : mov dword ptr [rip + 0x73611], eax ; ret
0x000000000044e1cc : mov dword ptr [rip + 0x73642], eax ; pop rbx ; ret
0x000000000044e18d : mov dword ptr [rip + 0x73681], eax ; ret
0x000000000044e15d : mov dword ptr [rip + 0x736b1], eax ; ret
0x000000000044e12c : mov dword ptr [rip + 0x736e2], eax ; pop rbx ; ret
0x000000000041f390 : mov dword ptr [rip + 0x9f40a], eax ; ret
0x000000000041b5a6 : mov dword ptr [rip + 0xa31f4], eax ; ret
0x000000000041a672 : mov dword ptr [rip + 0xa40d4], eax ; ret
0x000000000041a64c : mov dword ptr [rip + 0xa40de], eax ; ret
0x000000000041a623 : mov dword ptr [rip + 0xa40ff], eax ; ret
0x000000000041a603 : mov dword ptr [rip + 0xa4117], eax ; ret
0x000000000041a2f9 : mov dword ptr [rip + 0xa4489], eax ; ret
0x000000000041a2e1 : mov dword ptr [rip + 0xa4499], eax ; ret
0x000000000041a2c7 : mov dword ptr [rip + 0xa44a3], edx ; ret
0x000000000041a289 : mov dword ptr [rip + 0xa44a9], eax ; ret
0x000000000041a279 : mov dword ptr [rip + 0xa44c1], eax ; ret
0x000000000041a688 : mov dword ptr [rip + 0xa6666], eax ; ret
0x0000000000402c12 : mov dword ptr [rsi + 0x10], esi ; syscall
0x0000000000445c4a : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000445c3d : mov dword ptr [rsi - 4], ecx ; ret
0x000000000048f762 : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047b3d6 : mov dword ptr [rsi], eax ; ret
0x000000000047a6d5 : mov dword ptr [rsi], edi ; mov rax, r8 ; ret
0x0000000000402c0f : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000042ce42 : mov dword ptr [rsi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000041ccae : mov dword ptr [rsp + 0x10], eax ; call rax
0x0000000000490158 : mov dword ptr [rsp + 0x10], edx ; call rax
0x000000000041cca9 : mov dword ptr [rsp + 0x18], edx ; mov qword ptr [rsp + 0x10], r8 ; call rax
0x0000000000475485 : mov dword ptr [rsp + 0x20], edi ; mov rsi, r15 ; call 0x471f79
0x000000000044abde : mov dword ptr [rsp + 8], eax ; mov rdi, qword ptr [r8] ; call rbx
0x000000000041255f : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x0000000000417ffb : mov dword ptr [rsp + 8], edi ; call 0x414216
0x000000000041ccc9 : mov dword ptr [rsp], eax ; call rdx
0x000000000040a80e : mov dword ptr [rsp], ecx ; call 0x407315
0x0000000000414c20 : mov dword ptr [rsp], ecx ; mov rdi, rbp ; call rax
0x000000000046e842 : mov dword ptr [rsp], esi ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044874d : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000047140f : mov dword ptr fs:[rdx], eax ; jmp 0x4713e3
0x00000000004487f1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000445f28 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042de10 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000442d00 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000447191 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000471373 : mov eax, 0x10 ; syscall
0x00000000004488d4 : mov eax, 0x101 ; syscall
0x00000000004712b8 : mov eax, 0x106 ; syscall
0x00000000004495ab : mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000479dca : mov eax, 0x14 ; syscall
0x000000000044c70b : mov eax, 0x15 ; syscall
0x0000000000421cd0 : mov eax, 0x16 ; ret
0x0000000000448734 : mov eax, 0x18 ; syscall
0x000000000044bf77 : mov eax, 0x19 ; syscall
0x0000000000449824 : mov eax, 0x1c ; syscall
0x000000000044718a : mov eax, 0x20 ; pop rbx ; ret
0x000000000048aad4 : mov eax, 0x26 ; syscall
0x0000000000485184 : mov eax, 0x27 ; syscall
0x0000000000447183 : mov eax, 0x30 ; pop rbx ; ret
0x00000000004711d4 : mov eax, 0x3f ; syscall
0x000000000044717c : mov eax, 0x40 ; pop rbx ; ret
0x00000000004492ee : mov eax, 0x48 ; syscall
0x000000000048d58f : mov eax, 0x48000000 ; add esp, 8 ; ret
0x000000000048a944 : mov eax, 0x48000021 ; mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000457d69 : mov eax, 0x49000000 ; mov ecx, esi ; mov r10, rcx ; jmp 0x457d2a
0x0000000000448b9b : mov eax, 0x4f ; syscall
0x0000000000447175 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044bfa4 : mov eax, 0x63 ; syscall
0x0000000000471204 : mov eax, 0x66 ; syscall
0x0000000000471224 : mov eax, 0x68 ; syscall
0x0000000000471214 : mov eax, 0x6b ; syscall
0x0000000000471234 : mov eax, 0x6c ; syscall
0x000000000044719f : mov eax, 0x80 ; pop rbx ; ret
0x0000000000447087 : mov eax, 0x80000006 ; cpuid ; jmp 0x44705b
0x0000000000403c73 : mov eax, 0x95058b48 ; retf 0xb
0x0000000000402318 : mov eax, 0x9e ; syscall
0x00000000004497f4 : mov eax, 0xa ; syscall
0x00000000004497c4 : mov eax, 0xb ; syscall
0x000000000040f616 : mov eax, 0xba ; syscall
0x0000000000471424 : mov eax, 0xc ; syscall
0x0000000000470af4 : mov eax, 0xc9 ; syscall
0x0000000000401436 : mov eax, 0xca ; syscall
0x000000000045c2cf : mov eax, 0xd ; syscall
0x0000000000485154 : mov eax, 0xd9 ; syscall
0x000000000040f644 : mov eax, 0xe ; syscall
0x0000000000471484 : mov eax, 0xe4 ; syscall
0x00000000004741f4 : mov eax, 0xe9ffffdb ; retf 0xfffc
0x000000000040f622 : mov eax, 0xea ; syscall
0x000000000045c201 : mov eax, 0xf ; syscall
0x0000000000469ba0 : mov eax, 0xffffffff ; jmp 0x469b70
0x0000000000418511 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000412c40 : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004130b8 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004147c3 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000413a20 : mov eax, 0xffffffff ; ret
0x000000000048a5d5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000046d194 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000046ddc3 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046beaa : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000470571 : mov eax, 1 ; ret
0x0000000000448a60 : mov eax, 1 ; syscall
0x0000000000470581 : mov eax, 2 ; ret
0x0000000000470591 : mov eax, 3 ; ret
0x0000000000449284 : mov eax, 3 ; syscall
0x00000000004705a1 : mov eax, 4 ; ret
0x00000000004487d3 : mov eax, 4 ; syscall
0x00000000004705b1 : mov eax, 5 ; ret
0x0000000000448832 : mov eax, 5 ; syscall
0x00000000004705c1 : mov eax, 6 ; ret
0x0000000000471253 : mov eax, 6 ; syscall
0x00000000004705d1 : mov eax, 7 ; ret
0x00000000004902bd : mov eax, 8 ; add rsp, 8 ; ret
0x0000000000447198 : mov eax, 8 ; pop rbx ; ret
0x0000000000448af4 : mov eax, 8 ; syscall
0x000000000044972f : mov eax, 9 ; syscall
0x0000000000412c35 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000418670 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x418670 ; ret
0x000000000047d865 : mov eax, dword ptr [rax + 8] ; ret
0x000000000045a704 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x45a716 ; call rax
0x00000000004936a0 : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x4936b2 ; call rax
0x0000000000461a86 : mov eax, dword ptr [rax + rcx*8] ; jmp rax
0x000000000045c013 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000468741 : mov eax, dword ptr [rax + rsi*8] ; jmp rax
0x00000000004639fd : mov eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047c7c4 : mov eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000048f6bd : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000048d479 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [rcx], r8 ; ret
0x000000000048d489 : mov eax, dword ptr [rax] ; mov qword ptr [r9], r8 ; add rsp, 8 ; ret
0x000000000047bc7d : mov eax, dword ptr [rax] ; ret
0x000000000045a46e : mov eax, dword ptr [rax] ; test rax, rax ; je 0x45a480 ; call rax
0x0000000000419409 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x419407 ; ret
0x0000000000449ecf : mov eax, dword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000478ad9 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r11] ; call rax
0x0000000000477cea : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r13] ; call rax
0x00000000004782b1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x00000000004178c1 : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004845c1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000417fdd : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004410d4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004410e6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004410f6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000441106 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000441116 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043b90a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004476ed : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0x4476e1 ; ret
0x000000000043d1e2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000046d34f : mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000442860 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000004410a0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000004427b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000441001 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000442831 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000441081 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047a5e2 : mov eax, dword ptr [rcx] ; ret
0x0000000000419424 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000041944c : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000493975 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x49398c ; call rax
0x0000000000419795 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048f6d5 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048f745 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048f785 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048f7e5 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048f7d5 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048f795 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000487d75 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487d87 ; ret
0x0000000000419416 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a685 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0xa6666], eax ; ret
0x0000000000491834 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491846 ; ret
0x0000000000491a74 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491a86 ; ret
0x0000000000413a0f : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000439506 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004853a4 : mov eax, dword ptr [rip + 0x3c49e] ; ret
0x000000000047b3cf : mov eax, dword ptr [rip + 0x45f53] ; mov qword ptr [rsi], rax ; ret
0x000000000047b35e : mov eax, dword ptr [rip + 0x45fcc] ; mov rax, r8 ; ret
0x0000000000459465 : mov eax, dword ptr [rip + 0x679a5] ; ret
0x000000000044fab5 : mov eax, dword ptr [rip + 0x71e1d] ; ret
0x0000000000419775 : mov eax, dword ptr [rip + 0xa49a5] ; ret
0x000000000049031a : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x0000000000461699 : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000486c75 : mov eax, dword ptr [rsi] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000040257a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000452f5a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x00000000004513b9 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000045215c : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000448a12 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000490153 : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000449a29 : mov eax, dword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x000000000048cf5d : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000040f7cc : mov eax, dword ptr [rsp] ; call rax
0x000000000040f931 : mov eax, dword ptr [rsp] ; mov r13, r15 ; add r15, rbx ; call rax
0x000000000040f8bc : mov eax, dword ptr [rsp] ; mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000047bc7c : mov eax, dword ptr fs:[rax] ; ret
0x000000000040f65f : mov eax, eax ; add rsp, 0x118 ; ret
0x00000000004489f2 : mov eax, eax ; mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000041f75a : mov eax, eax ; pop r12 ; pop r13 ; ret
0x000000000041aa3e : mov eax, eax ; pop r12 ; ret
0x000000000041f7c7 : mov eax, eax ; pop r13 ; ret
0x000000000046e8aa : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411aa9 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041e874 : mov eax, eax ; pop rbp ; ret
0x0000000000420d69 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411b11 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004103ac : mov eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041058e : mov eax, eax ; pop rbx ; ret
0x00000000004103a1 : mov eax, eax ; ret
0x0000000000470964 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000448202 : mov eax, eax ; syscall
0x000000000046f7f1 : mov eax, eax ; vzeroupper ; ret
0x0000000000485716 : mov eax, ebp ; pop r12 ; pop r13 ; ret
0x00000000004118de : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000449e29 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000449e14 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041562e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f8f3 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000048a563 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000415f89 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004130ce : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041f247 : mov eax, ebx ; syscall
0x000000000048a42b : mov eax, ecx ; adc eax, eax ; ret
0x000000000045c3a3 : mov eax, ecx ; add rsp, 0x148 ; ret
0x00000000004713f0 : mov eax, ecx ; add rsp, 0x38 ; ret
0x00000000004070e6 : mov eax, ecx ; pop r12 ; ret
0x0000000000464808 : mov eax, ecx ; pop r14 ; ret
0x0000000000464757 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004070b8 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047cfc3 : mov eax, ecx ; sub eax, r8d ; ret
0x000000000040f60f : mov eax, ecx ; syscall
0x000000000041aa39 : mov eax, edi ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000004197a5 : mov eax, edi ; ret
0x0000000000447171 : mov eax, edx ; pop rbx ; ret
0x000000000043f9c9 : mov eax, edx ; ret
0x00000000004025b2 : mov eax, edx ; syscall
0x000000000047e659 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000004481f2 : mov eax, esi ; syscall
0x000000000046e0f9 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x00000000004030e9 : mov eax, esp ; pop r12 ; ret
0x000000000044a522 : mov eax, esp ; pop rbp ; pop r12 ; jmp rax
0x00000000004498a9 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000046d685 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041a85b : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047bb76 : mov eax, esp ; pop rbp ; pop r12 ; ret
0x0000000000449632 : mov eax, esp ; pop rbx ; pop r12 ; ret
0x00000000004119e2 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040304b : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e496 : mov eax, r12d ; pop r12 ; ret
0x000000000048c798 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047bb75 : mov eax, r12d ; pop rbp ; pop r12 ; ret
0x000000000047e994 : mov eax, r12d ; pop rbx ; pop r12 ; ret
0x000000000044bdac : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041150d : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004595c5 : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045d94f : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041044d : mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000041058d : mov eax, r8d ; pop rbx ; ret
0x0000000000481a85 : mov eax, r8d ; ret
0x0000000000448201 : mov eax, r8d ; syscall
0x00000000004713ef : mov eax, r9d ; add rsp, 0x38 ; ret
0x0000000000413e0b : mov eax, r9d ; syscall
0x0000000000478ee5 : mov ebp, 0x39000002 ; retf 0x850f
0x000000000048426f : mov ebp, 0x8948ffb7 ; ret
0x000000000046efac : mov ebp, 0xf80148c0 ; ret
0x000000000046f23c : mov ebp, 0xf80148c6 ; ret
0x0000000000468324 : mov ebp, 0xfffffb18 ; add byte ptr [rcx - 0x77], al ; ret 0x1d74
0x000000000048fc11 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; pop rcx ; jmp rcx
0x0000000000421be7 : mov ebp, eax ; call 0x41de14
0x000000000045c609 : mov ebp, eax ; mov rdi, r12 ; call rbx
0x0000000000449e03 : mov ebp, ebx ; mov rdi, rbp ; call r12
0x000000000047e65f : mov ebp, ecx ; nop ; jmp rdx
0x000000000040f935 : mov ebp, edi ; add r15, rbx ; call rax
0x000000000045b86a : mov ebp, edi ; test rax, rax ; je 0x45b87a ; call rax
0x000000000047ba1c : mov ebp, esp ; mov rsi, rbp ; syscall
0x0000000000433707 : mov ebx, 0x46f00ff2 ; retf
0x0000000000461a81 : mov ebx, 0x4800059d ; mov eax, dword ptr [rax + rcx*8] ; jmp rax
0x000000000042e234 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000042e252 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000484497 : mov ebx, 0x8948ffb7 ; ret
0x000000000048442e : mov ebx, 0xaa158b90 ; retf
0x000000000046dc18 : mov ebx, 0xafb8341 ; je 0x46dc27 ; ret
0x00000000004936eb : mov ebx, dword ptr [rbp + 0x18] ; call 0x41f995
0x00000000004032fb : mov ebx, eax ; mov dword ptr [rbp - 0x68], eax ; call 0x40f517
0x00000000004567a7 : mov ebx, esi ; mov r10, rcx ; jmp 0x456765
0x00000000004567f7 : mov ebx, esi ; mov r10, rcx ; jmp 0x4567b5
0x000000000040f60a : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x0000000000463cec : mov ecx, 0x89000002 ; ret 0xc083
0x000000000047140a : mov ecx, 0xffffffff ; mov dword ptr fs:[rdx], eax ; jmp 0x4713e8
0x0000000000468c01 : mov ecx, 1 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004315fe : mov ecx, dword ptr [rbp + 1] ; fnstcw word ptr [rsi] ; jmp r9
0x0000000000436cf0 : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042c04e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000439503 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000042e3d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e5d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e7d3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000442d30 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000442d71 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000433e73 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000433e03 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000433d93 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000433cb5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433c45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433bd5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433b65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433af5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433a85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433a15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433f55 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000442d11 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047d97b : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000047d8f9 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000047a5db : mov ecx, eax ; cmp rcx, rdx ; jne 0x47a5c1 ; mov eax, dword ptr [rcx] ; ret
0x00000000004923e3 : mov ecx, ecx ; sti ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000445ef6 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000457b0e : mov ecx, esi ; mov r10, rcx ; jmp 0x457ac5
0x0000000000457d6e : mov ecx, esi ; mov r10, rcx ; jmp 0x457d25
0x0000000000457e1b : mov ecx, esi ; mov r10, rcx ; jmp 0x457dde
0x0000000000413af0 : mov ecx, esi ; mov rdi, r15 ; call r12
0x0000000000447f66 : mov ecx, esp ; mov rdx, r13 ; call rbx
0x0000000000401c67 : mov edi, 0x4bfb30 ; jmp rax
0x000000000048519f : mov edi, 0x89480003 ; ret 0xc148
0x0000000000407acd : mov edi, 0xe900017e ; ret
0x0000000000422b8d : mov edi, 0xf480001 ; ret 0x66c3
0x000000000048f4f4 : mov edi, 1 ; call rax
0x0000000000490040 : mov edi, 1 ; jmp rax
0x000000000044abe3 : mov edi, dword ptr [rax] ; call rbx
0x000000000049252c : mov edi, dword ptr [rbp + 0x10] ; add rdi, rbp ; call r12
0x000000000048faa0 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000449990 : mov edi, dword ptr [rbp] ; call rbx
0x00000000004936e7 : mov edi, dword ptr [rbp] ; mov rbx, qword ptr [rbp + 0x18] ; call 0x41f999
0x00000000004845f8 : mov edi, dword ptr [rbx + 0x18] ; pop rbx ; jmp 0x401026
0x000000000040b0e3 : mov edi, dword ptr [rdi + 0x10] ; call 0x407315
0x000000000040b0da : mov edi, dword ptr [rdi + 0x18] ; call 0x407315
0x000000000040b0ec : mov edi, dword ptr [rdi + 8] ; call 0x407315
0x000000000044a91d : mov edi, dword ptr [rdi] ; call rbx
0x000000000044a7ac : mov edi, dword ptr [rsi] ; call rbx
0x000000000047e44e : mov edi, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x000000000045575e : mov edi, dword ptr [rsp + 0x38] ; call r15
0x000000000045516a : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004541dc : mov edi, dword ptr [rsp + 0x40] ; call r14
0x000000000045472a : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000453ae9 : mov edi, dword ptr [rsp + 0x48] ; call rbx
0x00000000004564e8 : mov edi, dword ptr [rsp + 0x50] ; call rbx
0x00000000004577fb : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004560fe : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000451663 : mov edi, dword ptr [rsp + 0x58] ; call r14
0x0000000000452bb3 : mov edi, dword ptr [rsp + 0x58] ; call r15
0x00000000004523cd : mov edi, dword ptr [rsp + 0x58] ; call rbx
0x000000000045272e : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452f55 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004513b4 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000452157 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000451de2 : mov edi, dword ptr [rsp + 0x60] ; call r15
0x000000000045199f : mov edi, dword ptr [rsp + 0x60] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000418013 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000448a94 : mov edi, dword ptr [rsp + 8] ; mov eax, 1 ; syscall
0x00000000004489f4 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000004178e6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000044a682 : mov edi, dword ptr [rsp] ; call rbx
0x000000000047d53d : mov edi, eax ; call 0x4497c4
0x000000000040f614 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000421be4 : mov edi, eax ; mov r13, rax ; call 0x41de17
0x00000000004746b3 : mov edi, ebp ; call 0x401184
0x000000000041e020 : mov edi, ebp ; call 0x41a304
0x0000000000421b25 : mov edi, ebp ; call 0x41de14
0x00000000004936f4 : mov edi, ebp ; call 0x41f994
0x000000000048bff2 : mov edi, ebp ; call qword ptr [rax]
0x000000000048be96 : mov edi, ebp ; call qword ptr [rbx]
0x0000000000449e06 : mov edi, ebp ; call r12
0x000000000040f8c3 : mov edi, ebp ; call rax
0x000000000045c647 : mov edi, ebp ; call rbx
0x0000000000448b99 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000041bf8d : mov edi, ebp ; mov eax, 0xca ; syscall
0x000000000044972d : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000044a51f : mov edi, ebp ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000004480e8 : mov edi, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000046ce14 : mov edi, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000041f7d4 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004179ac : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000041ef4b : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000449875 : mov edi, ebp ; xor esi, esi ; call r12
0x000000000044ef55 : mov edi, ebx ; call r12
0x000000000044ffb5 : mov edi, ebx ; call r14
0x00000000004900a4 : mov edi, ebx ; call r15
0x000000000046b798 : mov edi, ebx ; call r8
0x000000000046b1a2 : mov edi, ebx ; call rax
0x000000000044f6ac : mov edi, ebx ; call rsi
0x0000000000420041 : mov edi, ebx ; mov eax, 0xca ; syscall
0x0000000000486ecf : mov edi, ecx ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000047469d : mov edi, edi ; call 0x401194
0x000000000044de7f : mov edi, edi ; call 0x42a184
0x0000000000413af3 : mov edi, edi ; call r12
0x0000000000412564 : mov edi, edi ; call rax
0x000000000049017c : mov edi, edi ; lea rbx, [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call rax
0x00000000004212bc : mov edi, edi ; mov eax, 0xca ; syscall
0x00000000004140bc : mov edi, edi ; mov eax, r9d ; syscall
0x00000000004481f0 : mov edi, edx ; mov eax, esi ; syscall
0x00000000004481ff : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000404717 : mov edi, esi ; call 0x401184
0x000000000041fc46 : mov edi, esi ; call rax
0x0000000000449ecc : mov edi, esi ; mov rax, qword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x000000000044d68f : mov edi, esp ; call 0x42a184
0x000000000040f73b : mov edi, esp ; call rax
0x000000000045c60c : mov edi, esp ; call rbx
0x000000000046fe4a : mov edi, esp ; lea r9, [rsp + 0x30] ; call rbx
0x000000000041f0e8 : mov edi, esp ; mov eax, 0xca ; syscall
0x0000000000413e09 : mov edi, esp ; mov eax, r9d ; syscall
0x000000000048044d : mov edi, esp ; mov qword ptr [rbp - 0xe8], r8 ; call rax
0x000000000046ffa0 : mov edi, esp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000413e08 : mov edi, r12d ; mov eax, r9d ; syscall
0x00000000004140bb : mov edi, r15d ; mov eax, r9d ; syscall
0x000000000041f221 : mov edx, 0x1000a1a ; pop rbx ; ret
0x0000000000433687 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000042e434 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042e452 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000412842 : mov edx, 0x89000011 ; ret 0x3948
0x000000000048e359 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x00000000004511eb : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000487d5e : mov edx, dword ptr [rbp + 0x448] ; jmp 0x487d30
0x000000000048462d : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000041840d : mov edx, dword ptr [rbx] ; jmp 0x4183df
0x000000000043d1df : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043b90d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047154e : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x471567 ; ret
0x00000000004845b5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000442d52 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000442d43 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000442d93 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000442da3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042de11 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042e1d0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042da61 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000443350 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000433ee0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043f770 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000004433a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000433d21 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000443331 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000442d01 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046e8da : mov edx, eax ; jmp 0x46e8f3
0x000000000040f620 : mov edx, eax ; mov eax, 0xea ; syscall
0x0000000000420ac4 : mov edx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000447f69 : mov edx, ebp ; call rbx
0x000000000044988a : mov edx, ebp ; mov esi, 1 ; call r12
0x000000000045cf23 : mov edx, ebp ; mov rdi, r12 ; call rbx
0x000000000045c61e : mov edx, ebp ; mov rsi, r12 ; call rbx
0x000000000048bfed : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048be91 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000045c641 : mov edx, ebp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x000000000045c65c : mov edx, ebp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x00000000004567aa : mov edx, ecx ; jmp 0x456762
0x00000000004567fa : mov edx, ecx ; jmp 0x4567b2
0x0000000000457b11 : mov edx, ecx ; jmp 0x457ac2
0x0000000000457d71 : mov edx, ecx ; jmp 0x457d22
0x0000000000457dd6 : mov edx, ecx ; jmp 0x457d93
0x0000000000457e1e : mov edx, ecx ; jmp 0x457ddb
0x000000000048ba14 : mov edx, ecx ; jmp 0x48ba27
0x000000000044bf75 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000446bc5 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000040f7c9 : mov edx, esi ; mov rax, qword ptr [rsp] ; call rax
0x000000000040f735 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000471371 : mov edx, esp ; mov eax, 0x10 ; syscall
0x0000000000449889 : mov edx, r13d ; mov esi, 1 ; call r12
0x000000000040f61f : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000471568 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000044706c : mov esi, 0x3ef00148 ; jmp rax
0x0000000000492193 : mov esi, 0x40 ; mov rdi, r13 ; call rbx
0x0000000000481a7f : mov esi, 0x77cf390e ; jrcxz 0x481ad3 ; mov eax, eax ; ret
0x0000000000403d21 : mov esi, 0x80 ; call 7
0x000000000046dc9c : mov esi, 0x80 ; syscall
0x000000000041f242 : mov esi, 0x81 ; mov eax, ebx ; syscall
0x000000000040282e : mov esi, 0x81000119 ; retf 0x4b0
0x0000000000450d8a : mov esi, 0x83480142 ; ret 0xf01
0x00000000004106d2 : mov esi, 0x83480143 ; ret
0x000000000044df61 : mov esi, 0xd ; call 0x42a187
0x000000000046fd3c : mov esi, 0xe8fffffe ; stosd dword ptr [rdi], eax ; ret 0xfffd
0x000000000044988c : mov esi, 1 ; call r12
0x000000000046b792 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000046b19c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000048fa9c : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f6a8 : mov esi, dword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x0000000000490183 : mov esi, dword ptr [rbx] ; call rax
0x0000000000449e00 : mov esi, dword ptr [rbx] ; mov r13, rbx ; mov rdi, rbp ; call r12
0x0000000000445f27 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000047e453 : mov esi, dword ptr [rsp + 0x10] ; call rsi
0x0000000000402575 : mov esi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041fa29 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x18 ; jmp rax
0x00000000004480eb : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000041f511 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044ec56 : mov esi, dword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x0000000000420e61 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000041fc41 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, r14 ; call rax
0x0000000000454725 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000453ae4 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000004523c8 : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x00000000004564e3 : mov esi, dword ptr [rsp + 0x58] ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000491613 : mov esi, dword ptr [rsp + rsi*8 + 0x10] ; mov rdi, r13 ; call rax
0x0000000000413e06 : mov esi, ebp ; mov edi, r12d ; mov eax, r9d ; syscall
0x000000000040f738 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000421b22 : mov esi, ebp ; mov rdi, r13 ; call 0x41de17
0x000000000047ba1f : mov esi, ebp ; syscall
0x00000000004140b9 : mov esi, ebx ; mov edi, r15d ; mov eax, r9d ; syscall
0x0000000000420ac1 : mov esi, ebx ; mov rdx, r8 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047548a : mov esi, edi ; call 0x471f74
0x00000000004495a9 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000045c65f : mov esi, edi ; mov rdi, r12 ; call rbx
0x00000000004900a1 : mov esi, esi ; mov rdi, rbx ; call r15
0x0000000000421ae1 : mov esi, esp ; call rax
0x000000000045c621 : mov esi, esp ; call rbx
0x000000000048bff0 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x000000000048be94 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000048be56 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000040f8c0 : mov esi, esp ; mov rdi, r13 ; call rax
0x000000000045c644 : mov esi, esp ; mov rdi, r13 ; call rbx
0x000000000047d53a : mov esi, esp ; mov rdi, r8 ; call 0x4497c7
0x00000000004207d2 : mov esi, esp ; pop r12 ; pop r13 ; jmp rax
0x000000000046ce10 : mov esi, esp ; pop rbx ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000004608c9 : mov esp, 0x39480000 ; ret
0x0000000000429ff1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042a021 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042a011 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000453773 : mov esp, 0x8514 ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000401d8c : mov esp, 0x89000bef ; ret 0xeac1
0x00000000004130c9 : mov esp, 0x8c48348 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000402b6f : mov esp, 0x90005 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043f6f1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x43f6a2
0x0000000000443911 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x4438c2
0x000000000043f2b3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000429e8b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042a001 : mov esp, 0xf80148c0 ; ret
0x000000000042a122 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000047e65c : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048fc15 : mov esp, ecx ; pop rcx ; jmp rcx
0x0000000000436ce4 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000048d460 : mov qword ptr [r9], r8 ; add rsp, 8 ; ret
0x000000000044c104 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000046ca5c : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046d22b : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000044c1ba : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000041ace6 : mov qword ptr [rax + 0x20], rdx ; add rsp, 8 ; ret
0x000000000044c1c8 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000046ca60 : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046ca9e : mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000046db4c : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004186e4 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c108 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004845c4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484530 : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004845b8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000046db17 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000045b8f6 : mov qword ptr [rbp - 0x38], rdx ; xor edx, edx ; call 0x448378
0x0000000000463314 : mov qword ptr [rbp - 0x4e8], r11 ; call 0x46fd79
0x0000000000463acb : mov qword ptr [rbp - 0x4e8], rsi ; call 0x46fd79
0x0000000000461453 : mov qword ptr [rbp - 0x4f8], rsi ; jmp rax
0x0000000000478c9c : mov qword ptr [rbp - 0xd0], r10 ; call r15
0x000000000048044f : mov qword ptr [rbp - 0xe8], r8 ; call rax
0x00000000004785b0 : mov qword ptr [rbp - 0xf0], r11 ; call r10
0x000000000046e868 : mov qword ptr [rbp], 0 ; jmp 0x46e846
0x0000000000459c96 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000047da91 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047b94d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485a62 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485a38
0x000000000047d9c6 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048a948 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000048aa0c : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000419327 : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000483e05 : mov qword ptr [rbx], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004854cd : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048c7dc : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000048d47f : mov qword ptr [rcx], r8 ; ret
0x000000000048f71e : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x0000000000488fae : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000044356c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000442ecc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000442eac : mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000442f0f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000442f2f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000442ef0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000417756 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000044c14e : mov qword ptr [rdi + 0x20], rdx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000044c160 : mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000047733c : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000047730a : mov qword ptr [rdi + 0x310], rax ; ret
0x0000000000417787 : mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000048f774 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044352c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x0000000000442e6c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044354c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x0000000000442e8c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000433cb7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433c47 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433bd7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000433b67 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044342a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000433af7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442dba : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044344a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000433a87 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442dca : mov qword ptr [rdi + 6], rdx ; ret
0x000000000044346a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000433a17 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000442dda : mov qword ptr [rdi + 7], rdx ; ret
0x000000000048a427 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000488f37 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048a745 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000041775a : mov qword ptr [rdi + 8], rax ; ret
0x00000000004194bf : mov qword ptr [rdi + 8], rax ; xor eax, eax ; ret
0x000000000043f79b : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x0000000000446c9e : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445f1a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048f730 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x000000000042d8f4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042d932 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000488e9e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042dc7b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004334c7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042de5b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000433447 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e04b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004333c7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042e21c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433338 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e41c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004332a8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e61c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433218 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000488e1d : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042d8f8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042d936 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042daab : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042dba7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042daf3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000433547 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000488dec : mov qword ptr [rdi], r9 ; ret
0x00000000004433b6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000442d96 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000442da6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000442db7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000442dc7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000442dd7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000442d87 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000433a1b : mov qword ptr [rdi], rcx ; ret
0x0000000000446e22 : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004433a3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000433d23 : mov qword ptr [rdi], rdx ; ret
0x0000000000436ce1 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000445f1f : mov qword ptr [rdi], rsi ; ret
0x00000000004143ec : mov qword ptr [rdx + 0xf0], rcx ; pop rbx ; ret
0x000000000041180a : mov qword ptr [rdx + 0xf0], rcx ; ret
0x000000000044293a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000044112a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000044295a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000044114a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000044297a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000044116a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000044280a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000044105a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004427b3 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000441003 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484630 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000419418 : mov qword ptr [rdx], rax ; ret
0x000000000046cdab : mov qword ptr [rdx], rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004840a7 : mov qword ptr [rip + 0x3cf3a], rax ; ret
0x000000000047b268 : mov qword ptr [rip + 0x460c1], rax ; ret
0x000000000041f38f : mov qword ptr [rip + 0x9f40a], rax ; ret
0x000000000041b5a5 : mov qword ptr [rip + 0xa31f4], rax ; ret
0x000000000041a64b : mov qword ptr [rip + 0xa40de], rax ; ret
0x000000000041a622 : mov qword ptr [rip + 0xa40ff], rax ; ret
0x000000000041a602 : mov qword ptr [rip + 0xa4117], rax ; ret
0x000000000041a2f8 : mov qword ptr [rip + 0xa4489], rax ; ret
0x000000000041a2e0 : mov qword ptr [rip + 0xa4499], rax ; ret
0x000000000041a2c6 : mov qword ptr [rip + 0xa44a3], rdx ; ret
0x000000000041a288 : mov qword ptr [rip + 0xa44a9], rax ; ret
0x000000000041a278 : mov qword ptr [rip + 0xa44c1], rax ; ret
0x0000000000402c11 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000047b3d5 : mov qword ptr [rsi], rax ; ret
0x000000000047a6d4 : mov qword ptr [rsi], rdi ; mov rax, r8 ; ret
0x0000000000402c0e : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000490157 : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000041ccad : mov qword ptr [rsp + 0x10], r8 ; call rax
0x000000000044abdd : mov qword ptr [rsp + 8], r8 ; mov rdi, qword ptr [r8] ; call rbx
0x000000000041255e : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000417ffa : mov qword ptr [rsp + 8], rdi ; call 0x414217
0x000000000040a80d : mov qword ptr [rsp], r9 ; call 0x407316
0x000000000041ccc8 : mov qword ptr [rsp], rax ; call rdx
0x0000000000414c1f : mov qword ptr [rsp], rcx ; mov rdi, rbp ; call rax
0x000000000045bff5 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000445f19 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000402c10 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004567a9 : mov r10, rcx ; jmp 0x456763
0x00000000004567a8 : mov r10, rcx ; jmp 0x456764
0x00000000004567f9 : mov r10, rcx ; jmp 0x4567b3
0x00000000004567f8 : mov r10, rcx ; jmp 0x4567b4
0x0000000000457b10 : mov r10, rcx ; jmp 0x457ac3
0x0000000000457d70 : mov r10, rcx ; jmp 0x457d23
0x0000000000457dd5 : mov r10, rcx ; jmp 0x457d94
0x0000000000457dd4 : mov r10, rcx ; jmp 0x457d95
0x0000000000457e1d : mov r10, rcx ; jmp 0x457ddc
0x000000000044bf74 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000433686 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000042e451 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004567a6 : mov r11, rsi ; mov r10, rcx ; jmp 0x456766
0x00000000004567f6 : mov r11, rsi ; mov r10, rcx ; jmp 0x4567b6
0x0000000000465ce1 : mov r11b, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000433706 : mov r11d, 0x46f00ff2 ; retf
0x000000000042e251 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040f934 : mov r13, r15 ; add r15, rbx ; call rax
0x0000000000421be6 : mov r13, rax ; call 0x41de15
0x000000000045c608 : mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000449e02 : mov r13, rbx ; mov rdi, rbp ; call r12
0x000000000048fa9b : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044df60 : mov r14d, 0xd ; call 0x42a188
0x000000000048fa9f : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000449ed2 : mov r15d, r13d ; call rax
0x0000000000479414 : mov r8b, 0xf ; xchg eax, ebp ; ret 0x2148
0x00000000004489f1 : mov r8d, eax ; mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000457b0d : mov r9, rsi ; mov r10, rcx ; jmp 0x457ac6
0x0000000000457d6d : mov r9, rsi ; mov r10, rcx ; jmp 0x457d26
0x0000000000457e1a : mov r9, rsi ; mov r10, rcx ; jmp 0x457ddf
0x0000000000418844 : mov rax, -1 ; ret
0x000000000045c200 : mov rax, 0xf ; syscall
0x0000000000470570 : mov rax, 1 ; ret
0x0000000000470580 : mov rax, 2 ; ret
0x0000000000470590 : mov rax, 3 ; ret
0x00000000004705a0 : mov rax, 4 ; ret
0x00000000004705b0 : mov rax, 5 ; ret
0x00000000004705c0 : mov rax, 6 ; ret
0x00000000004705d0 : mov rax, 7 ; ret
0x0000000000486c74 : mov rax, qword ptr [r14] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000412c34 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000041866f : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x418671 ; ret
0x000000000047d864 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045a46d : mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x45a481 ; call rax
0x000000000045a703 : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x45a717 ; call rax
0x000000000049369f : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x4936b3 ; call rax
0x0000000000461a85 : mov rax, qword ptr [rax + rcx*8] ; jmp rax
0x000000000045c012 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000468740 : mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x000000000048f6bc : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000419408 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x419408 ; ret
0x0000000000449ece : mov rax, qword ptr [rbp - 0x58] ; mov r15d, r13d ; call rax
0x0000000000478ad8 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r11] ; call rax
0x0000000000477ce9 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r13] ; call rax
0x00000000004782b0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x00000000004178c0 : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004845c0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000417fdc : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000441000 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000493974 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x49398d ; call rax
0x0000000000419794 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048f6d4 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048f744 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048f784 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048f7e4 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048f7d4 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048f794 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000487d74 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487d88 ; ret
0x0000000000419415 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000459464 : mov rax, qword ptr [rip + 0x679a5] ; ret
0x000000000044fab4 : mov rax, qword ptr [rip + 0x71e1d] ; ret
0x0000000000419774 : mov rax, qword ptr [rip + 0xa49a5] ; ret
0x0000000000490319 : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x0000000000461698 : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000402579 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452f59 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004513b8 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000045215b : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000448a11 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000449a28 : mov rax, qword ptr [rsp + 8] ; mov rdi, r13 ; call rax
0x000000000048cf5c : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000040f7cb : mov rax, qword ptr [rsp] ; call rax
0x0000000000449a27 : mov rax, qword ptr ss:[rsp + 8] ; mov rdi, r13 ; call rax
0x000000000046e0f8 : mov rax, r12 ; pop r12 ; pop r13 ; ret
0x00000000004030e8 : mov rax, r12 ; pop r12 ; ret
0x000000000044a521 : mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000004498a8 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000041a85a : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000449631 : mov rax, r12 ; pop rbx ; pop r12 ; ret
0x00000000004119e1 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040304a : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485715 : mov rax, r13 ; pop r12 ; pop r13 ; ret
0x0000000000449e28 : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000449e13 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041f759 : mov rax, r8 ; pop r12 ; pop r13 ; ret
0x000000000041aa3d : mov rax, r8 ; pop r12 ; ret
0x000000000041f7c6 : mov rax, r8 ; pop r13 ; ret
0x0000000000411aa8 : mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000041e873 : mov rax, r8 ; pop rbp ; ret
0x0000000000420d68 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411b10 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004103ab : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000041e67c : mov rax, r8 ; pop rbx ; ret
0x00000000004103a0 : mov rax, r8 ; ret
0x000000000046f7f0 : mov rax, r8 ; vzeroupper ; ret
0x00000000004070e5 : mov rax, r9 ; pop r12 ; ret
0x0000000000464807 : mov rax, r9 ; pop r14 ; ret
0x00000000004070b7 : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041562d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f8f2 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000415f88 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004197a4 : mov rax, rdi ; ret
0x0000000000447170 : mov rax, rdx ; pop rbx ; ret
0x000000000043f9c8 : mov rax, rdx ; ret
0x000000000048fc10 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; pop rcx ; jmp rcx
0x000000000047e65e : mov rbp, r9 ; nop ; jmp rdx
0x000000000045b869 : mov rbp, rdi ; test rax, rax ; je 0x45b87b ; call rax
0x000000000047ba1b : mov rbp, rsp ; mov rsi, rbp ; syscall
0x00000000004936ea : mov rbx, qword ptr [rbp + 0x18] ; call 0x41f996
0x00000000004032fa : mov rbx, rax ; mov dword ptr [rbp - 0x68], eax ; call 0x40f518
0x0000000000442d70 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000047d97a : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000047d8f8 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000447f65 : mov rcx, r12 ; mov rdx, r13 ; call rbx
0x0000000000413aef : mov rcx, r14 ; mov rdi, r15 ; call r12
0x0000000000445ef5 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a681 : mov rdi, qword ptr [r12] ; call rbx
0x000000000049252b : mov rdi, qword ptr [r13 + 0x10] ; add rdi, rbp ; call r12
0x000000000044a6eb : mov rdi, qword ptr [r13] ; call rbx
0x000000000044a7ab : mov rdi, qword ptr [r14] ; call rbx
0x000000000040b0e2 : mov rdi, qword ptr [r15 + 0x10] ; call 0x407316
0x000000000040b0d9 : mov rdi, qword ptr [r15 + 0x18] ; call 0x407316
0x000000000040b0eb : mov rdi, qword ptr [r15 + 8] ; call 0x407316
0x000000000044a91c : mov rdi, qword ptr [r15] ; call rbx
0x000000000044abe2 : mov rdi, qword ptr [r8] ; call rbx
0x000000000044998f : mov rdi, qword ptr [rbp] ; call rbx
0x00000000004845f7 : mov rdi, qword ptr [rbx + 0x18] ; pop rbx ; jmp 0x401027
0x000000000045575d : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004541db : mov rdi, qword ptr [rsp + 0x40] ; call r14
0x0000000000454729 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000453ae8 : mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000004564e7 : mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000451662 : mov rdi, qword ptr [rsp + 0x58] ; call r14
0x0000000000452bb2 : mov rdi, qword ptr [rsp + 0x58] ; call r15
0x00000000004523cc : mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x0000000000451de1 : mov rdi, qword ptr [rsp + 0x60] ; call r15
0x00000000004178e5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000044a8c2 : mov rdi, qword ptr ds:[r14] ; call rbx
0x000000000044d68e : mov rdi, r12 ; call 0x42a185
0x000000000040f73a : mov rdi, r12 ; call rax
0x000000000045c60b : mov rdi, r12 ; call rbx
0x000000000046fe49 : mov rdi, r12 ; lea r9, [rsp + 0x30] ; call rbx
0x000000000041f0e7 : mov rdi, r12 ; mov eax, 0xca ; syscall
0x000000000046ff9f : mov rdi, r12 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000421b24 : mov rdi, r13 ; call 0x41de15
0x000000000040f8c2 : mov rdi, r13 ; call rax
0x000000000045c646 : mov rdi, r13 ; call rbx
0x000000000042067a : mov rdi, r13 ; mov eax, 0xca ; syscall
0x0000000000404716 : mov rdi, r14 ; call 0x401185
0x000000000041fc45 : mov rdi, r14 ; call rax
0x000000000047469c : mov rdi, r15 ; call 0x401195
0x000000000044de7e : mov rdi, r15 ; call 0x42a185
0x0000000000413af2 : mov rdi, r15 ; call r12
0x0000000000412563 : mov rdi, r15 ; call rax
0x00000000004212bb : mov rdi, r15 ; mov eax, 0xca ; syscall
0x000000000047d53c : mov rdi, r8 ; call 0x4497c5
0x000000000040f613 : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000421be3 : mov rdi, rax ; mov r13, rax ; call 0x41de18
0x00000000004746b2 : mov rdi, rbp ; call 0x401185
0x000000000041e01f : mov rdi, rbp ; call 0x41a305
0x00000000004936f3 : mov rdi, rbp ; call 0x41f995
0x0000000000449e05 : mov rdi, rbp ; call r12
0x0000000000414c23 : mov rdi, rbp ; call rax
0x0000000000448b98 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000041bf8c : mov rdi, rbp ; mov eax, 0xca ; syscall
0x000000000044972c : mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000044a51e : mov rdi, rbp ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000004480e7 : mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000046ce13 : mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000041f7d3 : mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004179ab : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041ef4a : mov rdi, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000449874 : mov rdi, rbp ; xor esi, esi ; call r12
0x000000000044ef54 : mov rdi, rbx ; call r12
0x000000000044ffb4 : mov rdi, rbx ; call r14
0x00000000004900a3 : mov rdi, rbx ; call r15
0x000000000046b797 : mov rdi, rbx ; call r8
0x000000000046b1a1 : mov rdi, rbx ; call rax
0x000000000044f6ab : mov rdi, rbx ; call rsi
0x0000000000420040 : mov rdi, rbx ; mov eax, 0xca ; syscall
0x0000000000487d5d : mov rdx, qword ptr [rbp + 0x448] ; jmp 0x487d31
0x000000000048462c : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004845b4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042da60 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433d20 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000447f68 : mov rdx, r13 ; call rbx
0x0000000000449919 : mov rdx, r13 ; mov esi, 1 ; call r12
0x000000000048bfec : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048be90 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000040f7c8 : mov rdx, r14 ; mov rax, qword ptr [rsp] ; call rax
0x000000000040f734 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000420ac3 : mov rdx, r8 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000046e8d9 : mov rdx, rax ; jmp 0x46e8f4
0x000000000045cf22 : mov rdx, rbp ; mov rdi, r12 ; call rbx
0x000000000045c61d : mov rdx, rbp ; mov rsi, r12 ; call rbx
0x000000000045c640 : mov rdx, rbp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x000000000045c65b : mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x000000000048ba13 : mov rdx, rcx ; jmp 0x48ba28
0x0000000000446bc4 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000471370 : mov rdx, rsp ; mov eax, 0x10 ; syscall
0x0000000000491612 : mov rsi, qword ptr [r12 + r14*8 + 0x10] ; mov rdi, r13 ; call rax
0x000000000044f6a7 : mov rsi, qword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi
0x0000000000490182 : mov rsi, qword ptr [rbx] ; call rax
0x000000000047e452 : mov rsi, qword ptr [rsp + 0x10] ; call rsi
0x000000000041fa28 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 0x18 ; jmp rax
0x00000000004480ea : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000041f510 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044ec55 : mov rsi, qword ptr [rsp + 0x18] ; xor r8d, r8d ; call rbx
0x0000000000420e60 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000041fc40 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, r14 ; call rax
0x0000000000421ae0 : mov rsi, r12 ; call rax
0x000000000045c620 : mov rsi, r12 ; call rbx
0x000000000048bfef : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000048be93 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000048be55 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000040f8bf : mov rsi, r12 ; mov rdi, r13 ; call rax
0x000000000045c643 : mov rsi, r12 ; mov rdi, r13 ; call rbx
0x000000000047d539 : mov rsi, r12 ; mov rdi, r8 ; call 0x4497c8
0x00000000004207d1 : mov rsi, r12 ; pop r12 ; pop r13 ; jmp rax
0x0000000000413e05 : mov rsi, r13 ; mov edi, r12d ; mov eax, r9d ; syscall
0x000000000040f737 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000004900a0 : mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000475489 : mov rsi, r15 ; call 0x471f75
0x000000000045c65e : mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000421b21 : mov rsi, rbp ; mov rdi, r13 ; call 0x41de18
0x000000000047ba1e : mov rsi, rbp ; syscall
0x00000000004140b8 : mov rsi, rbx ; mov edi, r15d ; mov eax, r9d ; syscall
0x000000000047e65b : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048fc14 : mov rsp, rcx ; pop rcx ; jmp rcx
0x0000000000436d09 : mov word ptr [r9 - 2], cx ; ret
0x000000000040a000 : mov word ptr [rcx + 1], ds ; add byte ptr [rbx + rcx*4 + 4], cl ; and al, 0xe9 ; ret 0xffed
0x00000000004434ac : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x0000000000442e0c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000004435b4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000442ef4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000433f57 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000443378 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000442d48 : mov word ptr [rdi + 4], dx ; ret
0x00000000004433ca : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x0000000000442d8a : mov word ptr [rdi + 8], dx ; ret
0x0000000000446cae : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000445f38 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042dffc : mov word ptr [rdi - 2], cx ; ret
0x000000000042de14 : mov word ptr [rdi - 2], dx ; ret
0x000000000042dff8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000442d13 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000445c46 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000433f5b : mov word ptr [rdi], cx ; ret
0x0000000000446e38 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000443333 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000433fc3 : mov word ptr [rdi], dx ; ret
0x000000000043f753 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000436d06 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000445f3d : mov word ptr [rdi], si ; ret
0x0000000000442888 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000004410c8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000442833 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000441083 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000445c49 : mov word ptr [rsi - 2], cx ; ret
0x0000000000445f37 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000048c7d9 : movabs al, byte ptr [0x5b5a58038948fffe] ; ret
0x000000000044641b : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000482e44 : movabs al, byte ptr [0x8304768b41000000] ; ret
0x0000000000482e70 : movabs al, byte ptr [0x8324348b41000000] ; ret
0x0000000000480a3d : movabs byte ptr [0x394801ed83410002], al ; ret
0x000000000044e42b : movabs eax, dword ptr [0x440f48c085480004] ; ret 0x4864
0x0000000000425765 : movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x000000000042c583 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042c62d : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040f600 : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000442de0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044366d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x0000000000442fad : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000433c2f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433bbf : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433b4f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433adf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044360d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x0000000000442f4d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000433a6f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044362d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x0000000000442f6d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004339ff : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044364d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x0000000000442f8d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043401f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433faf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433f3f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433ecf : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433e5f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433def : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433d7f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433d0f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433c9f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000446c21 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043318b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004331fb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000443484 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000442df4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000442e37 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000442e27 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000442ea8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000442e68 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000442e88 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000442e08 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000442fa9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000442f49 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000442f69 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000442f89 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004339aa : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000433a04 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000419448 : movntps xmmword ptr [rax + 0x18], xmm2 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000442de1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044366e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x0000000000442fae : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000433c30 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433bc0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433b50 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433ae0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044360e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x0000000000442f4e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000433a70 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044362e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x0000000000442f6e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000433a00 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044364e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x0000000000442f8e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000434020 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433fb0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433f40 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433ed0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433e60 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433df0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433d80 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433d10 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000433ca0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000446b8d : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000446c22 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043318c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004331fc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433937 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004338b7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433827 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004337a7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433727 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004336a7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433627 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004335a7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433527 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004334a7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433427 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004333a7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433317 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433287 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004331f7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000443485 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000442df5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000442e48 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000442e38 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000442e28 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000442ea9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000442e69 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000442e89 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000442e09 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000442faa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000442f4a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000442f6a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000442f8a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004339ab : movq qword ptr [rdi], mm0 ; ret
0x0000000000433a05 : movq qword ptr [rdi], mm1 ; ret
0x000000000044de7b : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; mov rdi, r15 ; call 0x42a188
0x0000000000445e8e : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000445e80 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040a868 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000044a747 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44a757 ; call rbx
0x0000000000466025 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x0000000000419777 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, byte ptr [r8] ; ret
0x0000000000488e52 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000048d408 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047cf40 : movsx eax, dl ; neg eax ; ret
0x000000000040eead : movsxd r10, dword ptr [r15 + r10*4] ; add r10, r15 ; jmp r10
0x000000000045b399 : movsxd r8, dword ptr [rdx + r9*4] ; add r8, rdx ; jmp r8
0x00000000004315fb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000416435 : movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x0000000000416467 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048f06d : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000048e92d : movsxd rax, dword ptr [r12 + rsi*4] ; add rax, r12 ; jmp rax
0x000000000048e777 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000045e97f : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048e8f0 : movsxd rax, dword ptr [r9 + rsi*4] ; add rax, r9 ; jmp rax
0x000000000044bfa5 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000048e778 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044d5c0 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x0000000000416468 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, r11 ; jmp rax
0x000000000044d579 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000046ac7f : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048e8f1 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, r9 ; jmp rax
0x0000000000445ef1 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004784ed : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000046b333 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000004784ee : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000416436 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, r10 ; jmp rax
0x00000000004030c5 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448438 : movsxd rax, dword ptr [rdx + rbp*4] ; add rax, rdx ; jmp rax
0x000000000045b39a : movsxd rax, dword ptr [rdx + rcx*4] ; add r8, rdx ; jmp r8
0x0000000000401b82 : movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000477fb0 : movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x000000000045e980 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046ab7b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000044706a : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000447132 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000477fb1 : movsxd rax, dword ptr [rsi] ; add rax, rsi ; jmp rax
0x000000000048f06e : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x000000000048e92e : movsxd rax, dword ptr [rsp + rsi*4] ; add rax, r12 ; jmp rax
0x0000000000445a7f : movsxd rax, ecx ; ret
0x000000000047d4f2 : movsxd rbp, dword ptr [rip + 0x3349646c] ; add byte ptr [rax + 9], cl ; ret 0x2875
0x0000000000484a10 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042a981 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000442ba9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004315fc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042c04c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042a982 : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000442baa : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000046b3cf : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x0000000000422c32 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000004470a0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000402810 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x0000000000445ab3 : movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x0000000000456639 : movsxd rcx, ecx ; cli ; dec dword ptr [rcx - 0x77] ; retf
0x000000000042c11f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004735f4 : movsxd rdx, dword ptr [r13 + rdx*4] ; add rdx, r13 ; jmp rdx
0x00000000004735f5 : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, r13 ; jmp rdx
0x000000000042c120 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000046b433 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000040eeae : movsxd rdx, dword ptr [rdi + rdx*4] ; add r10, r15 ; jmp r10
0x000000000040ed80 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000004849d9 : movsxd rdx, edx ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x0000000000444f4c : movsxd rsi, esi ; ret 0x7520
0x0000000000446053 : movups xmmword ptr [r11], xmm4 ; ret
0x00000000004460da : movups xmmword ptr [r11], xmm8 ; ret
0x000000000046d8b9 : movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000046caa2 : movups xmmword ptr [rax], xmm0 ; ret
0x00000000004184ee : movups xmmword ptr [rbp + 0x38], xmm0 ; pop rbp ; pop r12 ; ret
0x0000000000414372 : movups xmmword ptr [rbx + 0x18], xmm0 ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x0000000000414376 : movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x0000000000417d85 : movups xmmword ptr [rbx + 0x38], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417874 : movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x00000000004147b5 : movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x000000000047ceed : movups xmmword ptr [rbx], xmm0 ; pop rbx ; ret
0x00000000004460db : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000446054 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000044604f : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044604e : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004460d6 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000041859e : movups xmmword ptr [rdi + 0xa0], xmm0 ; ret
0x000000000041778b : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000445e16 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000445fbd : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000445f9a : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000445e13 : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000045116e : movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x000000000048d409 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000044ecca : movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x0000000000471335 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048a920 : movzx eax, al ; neg eax ; ret
0x000000000048441d : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b93 : movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417a90 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004198c3 : movzx eax, byte ptr [rax] ; ret
0x0000000000461694 : movzx eax, byte ptr [rbx + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000423fc8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042a710 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042a251 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000423fe3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000429cf3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x00000000004179f0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000447100 : movzx eax, cl ; pop rbx ; ret
0x00000000004455aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4455a9 ; ret
0x000000000044565a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x445659 ; ret
0x000000000042b834 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000445f0c : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000423fe0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042a713 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040f558 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x40f53f ; ret
0x00000000004241a1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004256cb : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000429b2b : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x0000000000428a88 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042a698 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000424037 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042554e : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000444f74 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000444fd4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000444fc4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000444fb4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000444fa4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000444f94 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000444f84 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000433950 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042b5e7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000444f5b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000434030 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042a254 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042a27a : movzx edx, dl ; sub eax, edx ; ret
0x00000000004338d0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000433fc0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000043f750 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x000000000046f087 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044874b : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000047cf43 : neg eax ; ret
0x0000000000402324 : nop ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000433077 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048c968 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000411e79 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042ac9e : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000412c00 : nop ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000479efc : nop ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004917bf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000401c3f : nop ; endbr64 ; ret
0x000000000047e661 : nop ; jmp rdx
0x0000000000443c7f : nop ; lea rax, [rdi + 1] ; ret
0x0000000000443c6f : nop ; lea rax, [rdi] ; ret
0x0000000000401d52 : nop ; leave ; ret
0x000000000044281f : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000042dc2f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000041a687 : nop ; mov dword ptr [rip + 0xa6666], eax ; ret
0x000000000042de0f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000442cff : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000421ccf : nop ; mov eax, 0x16 ; ret
0x000000000042e1cf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044334f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000043f76f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000046db16 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000041a2f7 : nop ; mov qword ptr [rip + 0xa4489], rax ; ret
0x000000000041a2df : nop ; mov qword ptr [rip + 0xa4499], rax ; ret
0x000000000041a287 : nop ; mov qword ptr [rip + 0xa44a9], rax ; ret
0x000000000041a277 : nop ; mov qword ptr [rip + 0xa44c1], rax ; ret
0x000000000047056f : nop ; mov rax, 1 ; ret
0x000000000044f6aa : nop ; mov rdi, rbx ; call rsi
0x000000000049009f : nop ; mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000442ddf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000401d62 : nop ; pop rbp ; ret
0x0000000000401c6f : nop ; ret
0x000000000046eedf : nop ; vzeroupper ; xor eax, eax ; ret
0x000000000046ec6f : nop ; xor eax, eax ; ret
0x000000000041bbd3 : nop dword ptr [rax + rax] ; call rax
0x000000000041975b : nop dword ptr [rax + rax] ; endbr64 ; ret
0x00000000004481eb : nop dword ptr [rax + rax] ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000442d1b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c1c3 : nop dword ptr [rax + rax] ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048438b : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000401cf3 : nop dword ptr [rax + rax] ; ret
0x0000000000447073 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000041358b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047053c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000487db4 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000492eec : nop dword ptr [rax] ; call 0x41f996
0x00000000004101d5 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000004854e4 : nop dword ptr [rax] ; call rax
0x000000000048f90c : nop dword ptr [rax] ; endbr64 ; ret
0x00000000004146f4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044716d : nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000004204ec : nop dword ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000418825 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000407364 : nop dword ptr [rax] ; ret
0x000000000040f561 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000046f40d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x00000000004935f7 : nop dword ptr cs:[rax + rax] ; ret
0x000000000048ca07 : nop word ptr [rax + rax] ; call rax
0x000000000048438a : nop word ptr [rax + rax] ; pop rbp ; ret
0x000000000044a5da : nop word ptr [rax + rax] ; ret
0x000000000041358a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000478121 : or al, 0 ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000428c07 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dbff : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428c35 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000471472 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041d44d : or al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x0000000000471425 : or al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000427c28 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040b25a : or al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000047ee96 : or al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000423fc6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000040a80f : or al, 0x24 ; call 0x407314
0x0000000000414c21 : or al, 0x24 ; mov rdi, rbp ; call rax
0x000000000047e5c7 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000042135b : or al, 0x48 ; lea eax, [rax - 0x10] ; ret
0x0000000000449338 : or al, 0x75 ; ret 0xd8f7
0x00000000004638da : or al, 0x7e ; ret
0x000000000046a2e1 : or al, 0x7e ; retf
0x000000000046ba6b : or al, 0x7e ; retf 0x8948
0x000000000046b0fb : or al, 0x7e ; retf 0xffb8
0x000000000045ee5e : or al, 0x83 ; ret
0x000000000048c4a1 : or al, 0x85 ; sal byte ptr [rsp + 0x48], 1 ; ret 0xb70f
0x00000000004470a1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000048081a : or al, 0x89 ; fdiv st(6) ; ret
0x000000000045c1bb : or al, 0x89 ; jae 0x45c206 ; xor eax, eax ; pop rbx ; ret
0x000000000044712b : or al, 0x89 ; ret 0xe283
0x0000000000422c33 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000439504 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004315fd : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042c04d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000471567 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000402811 : or al, 0x8e ; add rcx, rsi ; jmp rcx
0x000000000047154c : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x471569 ; ret
0x000000000046b3d0 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000042a983 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000442bab : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042c051 : or al, 0xb ; jmp r9
0x0000000000442baf : or al, 0xb ; jmp rcx
0x0000000000485815 : or al, 0xca ; jmp 0x485825
0x0000000000465a47 : or al, 0xe9 ; ret
0x0000000000433b53 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000047f177 : or al, 0xf6 ; ret
0x00000000004822c3 : or al, 0xf6 ; ret 0xf01
0x000000000046b6b3 : or al, 0xf6 ; ret 0xf04
0x0000000000465404 : or al, 0xf6 ; ret 0xf08
0x00000000004229d3 : or al, 2 ; add byte ptr [rax + 0x39], cl ; retf 0x2974
0x0000000000419778 : or al, byte ptr [r8] ; ret
0x0000000000428de7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c781 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428e15 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000419884 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048f5c6 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004497f5 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000426728 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e080 : or al, byte ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x000000000041b49e : or al, byte ptr [rax] ; add rsp, 0x10 ; pop rbp ; ret
0x0000000000419779 : or al, byte ptr [rax] ; ret
0x00000000004170a2 : or al, byte ptr [rax] ; syscall
0x000000000041e01b : or al, byte ptr [rax] ; xor esi, esi ; mov rdi, rbp ; call 0x41a309
0x000000000047c888 : or al, ch ; and cl, byte ptr [rbx - 0x76b70000] ; ret
0x00000000004741f2 : or al, ch ; mov eax, 0xe9ffffdb ; retf 0xfffc
0x0000000000470314 : or al, ch ; out 0xd, al ; stc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047461b : or al, ch ; outsd dx, dword ptr [rsi] ; retf
0x0000000000420067 : or al, ch ; ret
0x000000000048bdb8 : or al, ch ; ret 0xff25
0x000000000041ea90 : or al, ch ; retf 0xffbe
0x000000000041ca10 : or al, ch ; retf 0xfff1
0x0000000000418fca : or bh, al ; add al, 1 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x0000000000402330 : or bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000422c38 : or bh, byte ptr [rsi] ; jmp r10
0x000000000044c10b : or bl, al ; nop dword ptr [rax] ; ret
0x000000000044a575 : or bl, byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000433d13 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000459c68 : or byte ptr [r11 + 0x1974fdf8], al ; pop rbx ; ret
0x000000000041795e : or byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x000000000048a747 : or byte ptr [r8 + 2], r15b ; ret
0x0000000000441058 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000449d7c : or byte ptr [r8 - 0x77], cl ; ret 0xe083
0x0000000000471dd2 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000047b925 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000441117 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000041d4ce : or byte ptr [rax + 0x39], cl ; ret
0x000000000041795f : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000476cfc : or byte ptr [rax + 0x39], cl ; ret 0xd74
0x0000000000451b80 : or byte ptr [rax + 0x39], cl ; retf
0x00000000004198bd : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000046e687 : or byte ptr [rax + 0xf], cl ; ret
0x000000000046bea9 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448a97 : or byte ptr [rax + 1], bh ; syscall
0x00000000004853fe : or byte ptr [rax + 1], cl ; ret
0x000000000048b472 : or byte ptr [rax + 1], cl ; retf 0x8b48
0x000000000048a748 : or byte ptr [rax + 2], bh ; ret
0x00000000004891a4 : or byte ptr [rax + 3], cl ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8948
0x00000000004881ce : or byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041a2de : or byte ptr [rax - 0x66fa76b8], dl ; or r8b, byte ptr [rax] ; ret
0x0000000000485812 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485828
0x0000000000489b2c : or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000048a1dc : or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000487d5c : or byte ptr [rax - 0x75], cl ; xchg eax, ebp ; add al, 0 ; add bl, ch ; ret
0x0000000000414123 : or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044105d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000456550 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000441059 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004179aa : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041bc04 : or byte ptr [rax - 0x77], cl ; ret
0x000000000041d77e : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000449d7d : or byte ptr [rax - 0x77], cl ; ret 0xe083
0x000000000048d1f3 : or byte ptr [rax - 0x77], cl ; retf
0x0000000000456472 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000041bc03 : or byte ptr [rax - 0x77], r9b ; ret
0x0000000000471dd3 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000047b926 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000040499a : or byte ptr [rax - 0x7d], cl ; ret
0x000000000041cf36 : or byte ptr [rax - 0x7d], cl ; ret 0x4110
0x0000000000486a9f : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004130b7 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000046e13d : or byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000482a42 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004290b7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c921 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428ff5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c2c2 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004902be : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000045c2cb : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xd ; syscall
0x000000000045c436 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000447199 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448af5 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004268a8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a117 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x0000000000413038 : or byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x7589
0x000000000044c30e : or byte ptr [rax], bh ; retf 0xe574
0x000000000043dfee : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004103a7 : or byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x0000000000485953 : or byte ptr [rbp + 0x39481904], cl ; ret 0x830f
0x000000000044a4cb : or byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000487cc3 : or byte ptr [rbp + 0x440f4cf6], al ; ret 0x8d48
0x0000000000459c69 : or byte ptr [rbx + 0x1974fdf8], al ; pop rbx ; ret
0x0000000000459c47 : or byte ptr [rbx + 0x37403fe], al ; ret
0x000000000045ab36 : or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000041567e : or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000046dcf7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415044 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004847c7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000403259 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044a420 : or byte ptr [rbx + 0x94801e2], al ; retf 0x8948
0x0000000000421370 : or byte ptr [rbx + 0xf4801e0], al ; ret 0xfc3
0x000000000040a6cd : or byte ptr [rbx + rcx*4 + 0xc], cl ; and al, 0xe9 ; retf
0x00000000004159e3 : or byte ptr [rbx + rcx*4 + 4], cl ; and al, 0xe9 ; retf
0x0000000000411560 : or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x00000000004855e5 : or byte ptr [rbx - 0x7af0f802], al ; ret 1
0x000000000046dc98 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047733f : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000048a55b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004516f3 : or byte ptr [rcx + 0x39], cl ; retf
0x0000000000454206 : or byte ptr [rcx + 0x39], cl ; retf 0x850f
0x000000000044cf6b : or byte ptr [rcx + 0x3e093], cl ; add dh, dh ; ret 0x7402
0x000000000048f06c : or byte ptr [rcx + 0x63], cl ; add al, 0x84 ; add rax, r12 ; jmp rax
0x000000000048cecb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004897a1 : or byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000044ce39 : or byte ptr [rcx + 1], cl ; retf
0x000000000044ce65 : or byte ptr [rcx + 1], cl ; retf 0x894c
0x000000000041b713 : or byte ptr [rcx + 1], cl ; ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000489570 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000040200b : or byte ptr [rcx + rcx - 0x7d], dh ; retf 0x8910
0x0000000000490156 : or byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x000000000040a80c : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; cli ; retf 0xffff
0x000000000040a715 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; int1 ; retf
0x000000000040a862 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x000000000040a7b6 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; push rax ; retf
0x000000000040de43 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x000000000040d544 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret 0xff9d
0x0000000000409a3b : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf
0x000000000040e63c : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xff8c
0x000000000048d47e : or byte ptr [rcx + rcx*4 + 1], cl ; ret
0x000000000040e944 : or byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xff89
0x0000000000449a2c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000048bfeb : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000047bb74 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbp ; pop r12 ; ret
0x000000000047e993 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop r12 ; ret
0x0000000000449630 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop r12 ; ret
0x000000000047b484 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411766 : or byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x0000000000412562 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000048a562 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044a372 : or byte ptr [rcx - 0x75], cl ; add dword ptr [rbx + 0x94901e0], eax ; ret
0x0000000000441118 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000046a007 : or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; retf 0xfff4
0x000000000046998f : or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; retf 0xfff5
0x000000000048bbb8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000000000048bc0b : or byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x0000000000449a9c : or byte ptr [rcx - 0xa], al ; ret
0x0000000000421231 : or byte ptr [rcx], cl ; ret 0x37e9
0x0000000000421a61 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000044cc2a : or byte ptr [rcx], dh ; rol byte ptr [rax - 0x6af0ffc8], cl ; ret 0x8348
0x000000000044d0d2 : or byte ptr [rcx], dh ; rol byte ptr [rax - 0x6af0ffc8], cl ; ret 0x8d48
0x000000000044d0b1 : or byte ptr [rcx], dh ; rol byte ptr [rax - 0x6bf0ffc8], cl ; ret 0x8d48
0x00000000004778c0 : or byte ptr [rdi + 0x31d], 4 ; ret
0x0000000000477810 : or byte ptr [rdi + 0x31d], 4 ; xor eax, eax ; ret
0x0000000000490100 : or byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004900ff : or byte ptr [rdi + 2], r14b ; sbb eax, eax ; ret
0x00000000004054fc : or byte ptr [rdi + rcx - 0x7b], dl ; ret
0x0000000000455c37 : or byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000044708b : or byte ptr [rdi], 0xa2 ; jmp 0x447057
0x0000000000471334 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048a91f : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000448c6b : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x0000000000402595 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000418bfb : or byte ptr [rdx], 0 ; syscall
0x000000000047869d : or byte ptr [rip - 0x7cb7208c], ah ; ret
0x0000000000411e89 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000415036 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x000000000040ec92 : or cl, byte ptr [rax - 0x77] ; retf 0xc985
0x0000000000413fe8 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000463d4a : or cl, ch ; ret 0xfff3
0x000000000046a00b : or cl, ch ; retf 0xfff4
0x0000000000469993 : or cl, ch ; retf 0xfff5
0x000000000041f392 : or dh, ah ; or dword ptr [rax], eax ; ret
0x0000000000433c33 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000041e58b : or dh, dh ; ret 0xf02
0x000000000044d57b : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040f459 : or dword ptr [rax + rax*8 - 0x38b78d8c], eax ; ret 0xfff0
0x00000000004274f7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004905a8 : or dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax - 0x7d] ; in al, dx ; sbb al, ch ; retf
0x0000000000449ab3 : or dword ptr [rax - 0x77], ecx ; retf
0x000000000045b9d6 : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000041deb5 : or dword ptr [rax - 0x7d], ecx ; retf 0xb804
0x000000000043f8ce : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000046f98d : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000402b72 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428fc7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043de9f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428f05 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000449730 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000427f08 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004227e4 : or dword ptr [rax], eax ; add dh, byte ptr [rdi + rax*2 - 0xa] ; ret 0x7520
0x000000000042134f : or dword ptr [rax], eax ; add dword ptr [rax - 0x77], ecx ; ret 0x3174
0x000000000041f394 : or dword ptr [rax], eax ; ret
0x000000000041e948 : or dword ptr [rax], eax ; syscall
0x000000000042bdb6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004147c0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041646a : or dword ptr [rcx + rax - 0x28], 0x3e ; jmp rax
0x0000000000401c66 : or dword ptr [rdi + 0x4bfb30], edi ; jmp rax
0x000000000047e73c : or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x000000000042c62c : or dword ptr [rdi], ecx ; sub dword ptr [rdi], esp ; jmp r9
0x000000000047bc5f : or dword ptr [rip + 0x434c2], 1 ; ret
0x000000000047cb73 : or dword ptr [rsi - 8], eax ; dec dword ptr [rax + 1] ; ret
0x000000000044df32 : or dword ptr [rsp + rax - 0x76b400], esp ; call 0x42a189
0x000000000044e22a : or eax, 0x18 ; mov dword ptr [rip + 0x735e1], eax ; ret
0x0000000000443611 : or eax, 0x1c478d48 ; ret
0x000000000041d9f6 : or eax, 0x3948000a ; ret
0x000000000046ab8a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041bb7a : or eax, 0x5d5bc031 ; pop r12 ; ret
0x0000000000428b17 : or eax, 0x83480000 ; ret 0x4910
0x000000000043c441 : or eax, 0x83480000 ; ret 0xe910
0x0000000000428b45 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000470317 : or eax, 0x8948fff9 ; ret 0x2948
0x0000000000426428 : or eax, 0x894d0000 ; retf
0x0000000000470202 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000472065 : or eax, 0xd8d4c01 ; retf 0x356
0x0000000000475acc : or eax, 0xe8f7894c ; retf
0x0000000000433ae3 : or eax, 0xf7f0ff3 ; ret
0x0000000000448751 : or eax, 0xffffffff ; ret
0x000000000044e15a : or eax, 1 ; mov dword ptr [rip + 0x736b1], eax ; ret
0x000000000042a6d9 : or eax, 1 ; ret
0x000000000044e18a : or eax, 3 ; mov dword ptr [rip + 0x73681], eax ; ret
0x000000000044e1fa : or eax, 8 ; mov dword ptr [rip + 0x73611], eax ; ret
0x0000000000402889 : or eax, dword ptr [rax] ; adc byte ptr [rax + rsi*4 - 0x7f], dh ; retf 0x434
0x0000000000428cf7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c5e1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428d25 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000401769 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret
0x00000000004497c5 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004265a8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004682ee : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0xb8
0x00000000004012d1 : or eax, dword ptr [rax] ; syscall
0x0000000000433ca3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000048e190 : or ecx, dword ptr [eax - 0x7d] ; ret
0x0000000000421804 : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000048e191 : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000457e19 : or ecx, dword ptr [rcx - 0x77] ; int1 ; mov r10, rcx ; jmp 0x457de0
0x000000000041dbc4 : or ecx, dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042c052 : or edi, dword ptr [rsi] ; jmp r9
0x0000000000442bb0 : or edi, dword ptr [rsi] ; jmp rcx
0x0000000000449779 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000462531 : or edx, dword ptr [rcx - 0x74b7fffb] ; add al, 0xc8 ; jmp rax
0x000000000048f4f1 : or esi, 2 ; mov edi, 1 ; call rax
0x0000000000433bc3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004147c1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000449778 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000433d12 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433ca2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433c32 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000433bc2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000041a27c : or r8b, byte ptr [rax] ; ret
0x000000000046a00a : or r9b, r13b ; retf 0xfff4
0x0000000000469992 : or r9b, r13b ; retf 0xfff5
0x000000000046ab89 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000448750 : or rax, 0xffffffffffffffff ; ret
0x0000000000428d97 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004207d3 : out 0x41, al ; pop rsp ; pop r13 ; jmp rax
0x0000000000413e0a : out 0x44, eax ; mov eax, ecx ; syscall
0x00000000004032f9 : out 0x48, eax ; mov ebx, eax ; mov dword ptr [rbp - 0x68], eax ; call 0x40f519
0x000000000046ffa1 : out 0x48, eax ; mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000004213d8 : out 0x48, eax ; sub eax, 0x10 ; ret
0x000000000047d53b : out 0x4c, al ; mov edi, eax ; call 0x4497c6
0x000000000040f8c1 : out 0x4c, al ; mov edi, ebp ; call rax
0x000000000045c645 : out 0x4c, al ; mov edi, ebp ; call rbx
0x000000000046fe4b : out 0x4c, eax ; lea ecx, [rsp + 0x30] ; call rbx
0x000000000048044e : out 0x4c, eax ; mov dword ptr [rbp - 0xe8], eax ; call rax
0x000000000046ce11 : out 0x5b, al ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000004925d6 : out 0x5b, al ; ret
0x000000000048d726 : out 0x77, eax ; retf
0x000000000045eefb : out 0x83, al ; ret
0x000000000048bff1 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x000000000048be95 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000048be57 : out 0x89, al ; out dx, eax ; call rax
0x0000000000402645 : out 0xb, eax ; add dh, dh ; ret 0x7404
0x000000000041f0e9 : out 0xb8, eax ; retf 0
0x0000000000470316 : out 0xd, al ; stc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000041a148 : out 0xe8, eax ; add ch, byte ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412840 : out 0xe8, eax ; mov edx, 0x89000011 ; ret 0x3948
0x0000000000465cdf : out 0xe8, eax ; mov r11b, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000047d07c : out 0xe8, eax ; scasb al, byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000492df8 : out 0xe8, eax ; xchg eax, edx ; retf
0x00000000004334aa : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043352a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000468e0e : out 0xff, eax ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004229fd : out 1, eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000487f9d : out 2, al ; syscall
0x0000000000422782 : out 9, al ; add byte ptr [rcx], al ; je 0x422747 ; ret
0x0000000000482c09 : out dx, al ; adc byte ptr [rcx + 0x39], cl ; ret
0x0000000000413e07 : out dx, al ; mov edi, r12d ; mov eax, r9d ; syscall
0x000000000042dc7a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040f739 : out dx, al ; mov rdi, r12 ; call rax
0x0000000000421b23 : out dx, al ; mov rdi, r13 ; call 0x41de16
0x0000000000421be2 : out dx, al ; mov rdi, rax ; mov r13, rax ; call 0x41de19
0x000000000041f7d2 : out dx, al ; mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004338ba : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043dd4e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040a116 : out dx, al ; or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 8
0x000000000045557f : out dx, al ; ret 0
0x000000000046455e : out dx, al ; retf
0x000000000047ba20 : out dx, al ; syscall
0x000000000042275d : out dx, eax ; adc eax, 0xf480002 ; ret 0x66c3
0x0000000000474989 : out dx, eax ; add ah, byte ptr [rsi + 0xf] ; jo 0x474959 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004660f9 : out dx, eax ; add dword ptr [rax - 0x93343], eax ; jmp qword ptr [rax]
0x000000000047359c : out dx, eax ; add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041889d : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004188f5 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004746b4 : out dx, eax ; call 0x401183
0x000000000041e021 : out dx, eax ; call 0x41a303
0x0000000000421b26 : out dx, eax ; call 0x41de13
0x00000000004936f5 : out dx, eax ; call 0x41f993
0x000000000048bff3 : out dx, eax ; call qword ptr [rax]
0x000000000048be97 : out dx, eax ; call qword ptr [rbx]
0x0000000000449e07 : out dx, eax ; call r12
0x000000000040f8c4 : out dx, eax ; call rax
0x000000000045c648 : out dx, eax ; call rbx
0x0000000000448b9a : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000041bf8e : out dx, eax ; mov eax, 0xca ; syscall
0x000000000044972e : out dx, eax ; mov eax, 9 ; syscall
0x000000000042daaa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042dba6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042daf2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044a520 : out dx, eax ; mov rax, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000004498a7 : out dx, eax ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004480e9 : out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000043393a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043de4d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046ce15 : out dx, eax ; pop rbp ; pop r12 ; jmp rax
0x000000000041f7d5 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004179ad : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041ef4c : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042ae03 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42addb
0x000000000042ae81 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ae59
0x000000000042b313 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42b2eb
0x000000000042b391 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42b369
0x000000000042aa03 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042aa18 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042aa2d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004456f3 : out dx, eax ; ret 0xf66
0x00000000004456d6 : out dx, eax ; retf 0x4466
0x0000000000419576 : out dx, eax ; ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x0000000000422bce : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042bf1c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042bf05 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042beee : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042a9aa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044a4ff : out dx, eax ; xor edx, edx ; mov esi, 1 ; call r12
0x0000000000449876 : out dx, eax ; xor esi, esi ; call r12
0x000000000043bd4e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000443b1e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000040fc3b : outsb dx, byte ptr [rsi] ; fimul dword ptr [rax - 0x77] ; retf 0x4866
0x000000000040fc32 : outsb dx, byte ptr [rsi] ; ret
0x000000000048837f : outsb dx, byte ptr [rsi] ; ret 0x160f
0x000000000041acf8 : outsb dx, byte ptr [rsi] ; ret 0x4866
0x00000000004152e3 : outsb dx, byte ptr [rsi] ; ret 0x4d83
0x000000000048aa54 : outsb dx, byte ptr [rsi] ; ret 0x8348
0x000000000041d6db : outsb dx, byte ptr [rsi] ; ret 0x894c
0x000000000044f082 : outsb dx, byte ptr [rsi] ; ret 0x8d48
0x0000000000416cb4 : outsb dx, byte ptr [rsi] ; ret 0xde9
0x0000000000414e86 : outsb dx, byte ptr [rsi] ; ret 0xe083
0x0000000000419d50 : outsb dx, byte ptr [rsi] ; ret 0xe480
0x0000000000415deb : outsb dx, byte ptr [rsi] ; ret 0xf66
0x000000000046573e : outsb dx, byte ptr [rsi] ; ret 5
0x000000000041a000 : outsb dx, byte ptr [rsi] ; retf
0x000000000041d718 : outsb dx, byte ptr [rsi] ; retf 0x4966
0x0000000000477b97 : outsb dx, byte ptr [rsi] ; retf 0x8d48
0x0000000000414c46 : outsb dx, byte ptr [rsi] ; retf 0x8d4a
0x0000000000416bd0 : outsb dx, byte ptr [rsi] ; retf 0xc189
0x000000000041be1e : outsb dx, byte ptr [rsi] ; retf 0xf66
0x0000000000475f6b : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf
0x000000000041be19 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf 0xf66
0x000000000048a714 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x110f
0x000000000047ca78 : outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000476449 : outsb dx, byte ptr [rsi] ; shl dword ptr [rsi + 0xf], cl ; insb byte ptr [rdi], dx ; ret 0x290f
0x000000000041a17b : outsb dx, byte ptr [rsi] ; shl dword ptr [rsi + 0xf], cl ; insb byte ptr [rdi], dx ; ret 0x4d83
0x000000000047ee72 : outsd dx, dword ptr [rsi] ; adc ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000481db7 : outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000422d88 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004376be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042e232 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000042e432 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042bd1d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042bdbd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042b8e2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042b962 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000046f08a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042bd22 : outsd dx, dword ptr [rsi] ; ret
0x000000000047ee7a : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000047fc05 : outsd dx, dword ptr [rsi] ; ret 0x2be
0x00000000004131c8 : outsd dx, dword ptr [rsi] ; ret 0x34e9
0x00000000004131ab : outsd dx, dword ptr [rsi] ; ret 0x4866
0x0000000000419c0b : outsd dx, dword ptr [rsi] ; ret 0x8948
0x000000000042e3e7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042bdc2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000046f0da : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000041327d : outsd dx, dword ptr [rsi] ; ret 0xff3
0x000000000042e2b2 : outsd dx, dword ptr [rsi] ; retf
0x000000000043b6fd : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042e4b2 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042b30a : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042adfa : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004842cd : outsd dx, dword ptr [rsi] ; retf 0xfff8
0x000000000045b8fd : outsd dx, dword ptr [rsi] ; retf 0xfffe
0x000000000042164d : outsd dx, dword ptr [rsi] ; ror dword ptr [rcx], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004289d2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000470534 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047051f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000446e0a : pextrw edi, mm0, 0x77 ; ret
0x000000000043f564 : pextrw edi, mm5, 0x74 ; retf
0x000000000046ebe2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x46ec49 ; xor eax, eax ; ret
0x0000000000484dd2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x484e39 ; xor eax, eax ; ret
0x000000000047c63b : pop qword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042289d : pop qword ptr [rdx + rax] ; cmove rax, rdx ; ret
0x000000000041ef4f : pop r12 ; jmp rax
0x000000000041f7c4 : pop r12 ; mov rax, r8 ; pop r13 ; ret
0x000000000041f7d7 : pop r12 ; pop r13 ; jmp rax
0x0000000000464803 : pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x000000000041fe36 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040345c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401863 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4f9 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004119e6 : pop r12 ; pop r13 ; ret
0x000000000040304f : pop r12 ; ret
0x000000000044e2e5 : pop r12 ; shl eax, cl ; ret
0x000000000041f7d9 : pop r13 ; jmp rax
0x0000000000464805 : pop r13 ; mov rax, r9 ; pop r14 ; ret
0x000000000041fe38 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040345e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401865 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4fb : pop r13 ; pop r14 ; ret
0x00000000004119e8 : pop r13 ; ret
0x000000000041fe3a : pop r14 ; pop r15 ; jmp rax
0x0000000000403460 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401867 : pop r14 ; pop r15 ; ret
0x000000000040f4fd : pop r14 ; ret
0x000000000041fe3c : pop r15 ; jmp rax
0x0000000000403462 : pop r15 ; pop rbp ; ret
0x0000000000401869 : pop r15 ; ret
0x000000000048dcb1 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000000000451666 : pop rax ; call r14
0x0000000000452bb6 : pop rax ; call r15
0x00000000004523d0 : pop rax ; call rbx
0x000000000046e3b2 : pop rax ; dec dword ptr [rcx - 0x77] ; ret 0x3948
0x000000000047d900 : pop rax ; jmp qword ptr [rax]
0x0000000000452731 : pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452f58 : pop rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004513b7 : pop rax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000045215a : pop rax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000004564e6 : pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call rbx
0x0000000000451de0 : pop rax ; mov rdi, qword ptr [rsp + 0x60] ; call r15
0x0000000000480819 : pop rax ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000047f176 : pop rax ; or al, 0xf6 ; ret
0x000000000041b3f8 : pop rax ; or al, byte ptr [rax] ; syscall
0x0000000000402644 : pop rax ; out 0xb, eax ; add dh, dh ; ret 0x7404
0x000000000047d9ca : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000449457 : pop rax ; ret
0x0000000000491032 : pop rbp ; and byte ptr [rsi - 9], ah ; ret
0x00000000004179af : pop rbp ; jmp rax
0x0000000000490684 : pop rbp ; mov eax, r8d ; ret
0x000000000046e0f7 : pop rbp ; mov rax, r12 ; pop r12 ; pop r13 ; ret
0x00000000004030e7 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000485714 : pop rbp ; mov rax, r13 ; pop r12 ; pop r13 ; ret
0x000000000041f758 : pop rbp ; mov rax, r8 ; pop r12 ; pop r13 ; ret
0x000000000041aa3c : pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000004070e4 : pop rbp ; mov rax, r9 ; pop r12 ; ret
0x0000000000464806 : pop rbp ; mov rax, r9 ; pop r14 ; ret
0x00000000004207d0 : pop rbp ; mov rsi, r12 ; pop r12 ; pop r13 ; jmp rax
0x000000000041ef4e : pop rbp ; pop r12 ; jmp rax
0x000000000041f7c3 : pop rbp ; pop r12 ; mov rax, r8 ; pop r13 ; ret
0x000000000041f7d6 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000041fe35 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401862 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4f8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004119e5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040304e : pop rbp ; pop r12 ; ret
0x000000000041fe39 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000040345f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401866 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f4fc : pop rbp ; pop r14 ; ret
0x000000000048a568 : pop rbp ; pop rbx ; ret
0x0000000000401cf1 : pop rbp ; ret
0x00000000004936ec : pop rbp ; sbb al, ch ; popfq ; ret 0xfff8
0x000000000044e2e1 : pop rbp ; shl ecx, 3 ; pop r12 ; shl eax, cl ; ret
0x0000000000447166 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004470bb : pop rbx ; cmove rax, rdx ; ret
0x000000000044714b : pop rbx ; cmovne rax, rdx ; ret
0x00000000004845fb : pop rbx ; jmp 0x401023
0x00000000004178c8 : pop rbx ; jmp rax
0x0000000000418510 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000047bc7b : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000048c797 : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000481b0a : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000041a859 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000449e27 : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411aa7 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000046ce12 : pop rbx ; mov rdi, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000041b147 : pop rbx ; or al, byte ptr [rax] ; syscall
0x000000000047bc5e : pop rbx ; or dword ptr [rip + 0x434c2], 1 ; ret
0x0000000000449634 : pop rbx ; pop r12 ; ret
0x000000000045ab37 : pop rbx ; pop r14 ; ret
0x00000000004179ae : pop rbx ; pop rbp ; jmp rax
0x0000000000490683 : pop rbx ; pop rbp ; mov eax, r8d ; ret
0x00000000004030e6 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000485713 : pop rbx ; pop rbp ; mov rax, r13 ; pop r12 ; pop r13 ; ret
0x000000000041aa3b : pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x00000000004070e3 : pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x000000000041ef4d : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040f4f7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004119e4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040304d : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d1ad : pop rbx ; pop rbp ; pop r14 ; ret
0x000000000040325a : pop rbx ; pop rbp ; ret
0x000000000044e2e0 : pop rbx ; pop rbp ; shl ecx, 3 ; pop r12 ; shl eax, cl ; ret
0x0000000000401f3b : pop rbx ; ret
0x00000000004470ca : pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x0000000000447115 : pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x000000000041567f : pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000415fb0 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041de23 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x00000000004287a7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048fc17 : pop rcx ; jmp rcx
0x0000000000428e87 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041b3c7 : pop rcx ; or al, byte ptr [rax] ; syscall
0x000000000044ce38 : pop rcx ; or byte ptr [rcx + 1], cl ; retf
0x000000000041cfcc : pop rcx ; xor byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000042c629 : pop rdi ; adc byte ptr [rdx + 9], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000047b3d2 : pop rdi ; add al, 0 ; mov qword ptr [rsi], rax ; ret
0x000000000047b361 : pop rdi ; add al, 0 ; mov rax, r8 ; ret
0x000000000043e4dd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042e049 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042de59 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000407a2d : pop rdi ; jg 0x407a36 ; add cl, ch ; ret
0x000000000041fe3d : pop rdi ; jmp rax
0x000000000041155f : pop rdi ; or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x000000000042dc79 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042daa9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042dba5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042daf1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000403463 : pop rdi ; pop rbp ; ret
0x000000000040186a : pop rdi ; ret
0x000000000041d34b : pop rdx ; adc byte ptr [rdi], cl ; test dword ptr [rip - 0x9fffffd], ebp ; ret 0xf01
0x0000000000429386 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000449a9b : pop rdx ; or byte ptr [rcx - 0xa], al ; ret
0x000000000047d9cb : pop rdx ; pop rbx ; ret
0x000000000040176f : pop rdx ; ret
0x0000000000421e79 : pop rdx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000042ae04 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42adda
0x000000000042ae82 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ae58
0x000000000042b314 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42b2ea
0x000000000042b392 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42b368
0x000000000043e3de : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fe3b : pop rsi ; pop r15 ; jmp rax
0x0000000000403461 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401868 : pop rsi ; pop r15 ; ret
0x000000000040f4fe : pop rsi ; ret
0x000000000043bf60 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429684 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043cc60 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041ef50 : pop rsp ; jmp rax
0x000000000041f7c5 : pop rsp ; mov rax, r8 ; pop r13 ; ret
0x000000000041f7d8 : pop rsp ; pop r13 ; jmp rax
0x0000000000464804 : pop rsp ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x000000000041fe37 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040345d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401864 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f4fa : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004119e7 : pop rsp ; pop r13 ; ret
0x0000000000403050 : pop rsp ; ret
0x000000000048a449 : pop rsp ; retf 0x4df0
0x0000000000421600 : pop rsp ; retf 3
0x000000000044e2e6 : pop rsp ; shl eax, cl ; ret
0x000000000040cebc : popfq ; adc byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; retf 0x10
0x0000000000420d53 : popfq ; dec dword ptr [rcx] ; add dh, dh ; ret 0x7402
0x0000000000406a34 : popfq ; or eax, dword ptr [rax] ; syscall
0x000000000048989e : popfq ; ret 0x3948
0x000000000048ed83 : popfq ; ret 0xf45
0x00000000004936ef : popfq ; ret 0xfff8
0x0000000000433a02 : psllq mm1, qword ptr [r15] ; jg 0x433a1d ; ret
0x0000000000436532 : psllq mm1, qword ptr [r15] ; jg 0x43654d ; ret
0x0000000000433a03 : psllq mm1, qword ptr [rdi] ; jg 0x433a1c ; ret
0x0000000000436533 : psllq mm1, qword ptr [rdi] ; jg 0x43654c ; ret
0x0000000000442e26 : psllq mm1, qword ptr [rdi] ; jg 0x442e3a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000442e25 : psllq mm1, qword ptr [rdi] ; jg 0x442e3b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000442e87 : psllq mm1, qword ptr [rdi] ; jg 0x442e9c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004147b1 : punpcklqdq xmm0, xmm0 ; movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x000000000045116a : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdx + 0x48], xmm0 ; ret
0x00000000004599d0 : push -0x1605feb4 ; ret 0xfffe
0x0000000000402859 : push -0x7c000001 ; retf 0x8940
0x0000000000443b04 : push -0x9ffffff ; ret 0x7501
0x0000000000454201 : push 0x244c8b48 ; or byte ptr [rcx + 0x39], cl ; retf 0x850f
0x000000000048af6d : push 0x39480003 ; ret 0xf48
0x000000000046fa70 : push 0x5c415d5b ; pop r13 ; ret
0x000000000041d73e : push 0x6e0f4966 ; ret
0x0000000000422a50 : push 1 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046fc3f : push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000445488 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044998c : push qword ptr [rbp + 0x27] ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000044a8c0 : push qword ptr [rbp + 0x3e] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a8ec : push qword ptr [rbp + 0x69] ; mov rdi, qword ptr [r14] ; call rbx
0x000000000042a689 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000492dc6 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff7
0x0000000000492cc6 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff8
0x0000000000492bc6 : push qword ptr [rbp + rax - 0x18] ; ret 0xfff9
0x0000000000492ac6 : push qword ptr [rbp + rax - 0x18] ; ret 0xfffa
0x000000000049361e : push qword ptr [rbp + rax - 0x18] ; retf 0xfea4
0x000000000046d0e1 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000492ebd : push qword ptr [rbp + rdx - 0x18] ; retf
0x0000000000418930 : push qword ptr [rbp - 0x40] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000448740 : push qword ptr [rbx + 1] ; ret
0x00000000004179be : push qword ptr [rbx + rdi*4 - 0x18] ; retf 0x7f
0x0000000000416e03 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004481fb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000448a6c : push qword ptr [rdi + 0x51] ; ret
0x00000000004489c7 : push qword ptr [rdi + 0x56] ; ret
0x000000000044973b : push qword ptr [rdi + 0x62] ; pop rbx ; pop rbp ; ret
0x00000000004495b9 : push qword ptr [rdi + 4] ; ret
0x0000000000448b00 : push qword ptr [rdi + 5] ; ret
0x00000000004487df : push qword ptr [rdi + 6] ; ret
0x000000000044883e : push qword ptr [rdi + 7] ; ret
0x000000000044954d : push qword ptr [rdi + 8] ; ret
0x00000000004712c4 : push qword ptr [rdi + 9] ; ret
0x0000000000417cc0 : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rcx + rbp - 0x77], esi ; ret 0xff3
0x000000000041837a : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rdi + rsi*2 - 0x7d], esi ; retf 0x6601
0x000000000046ca5e : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000419459 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000463d45 : push rax ; adc byte ptr [rcx - 0x77], cl ; push rsi ; or cl, ch ; ret 0xfff3
0x000000000041a2c4 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0xa44a3 ; ret
0x000000000040219b : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000044ecd0 : push rax ; call rbx
0x0000000000467ca2 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000473909 : push rax ; dec dword ptr [rax + 0x21] ; retf 0x8548
0x000000000045f6fa : push rax ; inc esi ; test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x0000000000490329 : push rax ; jne 0x49035c ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000490389 : push rax ; jne 0x4903bc ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000491d39 : push rax ; jne 0x491d64 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004639fc : push rax ; mov eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004577fe : push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000456101 : push rax ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000453ae7 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000451661 : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x0000000000452bb1 : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call r15
0x00000000004523cb : push rax ; mov rdi, qword ptr [rsp + 0x58] ; call rbx
0x000000000046caa0 : push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000044c10a : push rax ; or bl, al ; nop dword ptr [rax] ; ret
0x0000000000485811 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485829
0x000000000044a41f : push rax ; or byte ptr [rbx + 0x94801e2], al ; retf 0x8948
0x000000000044cf6a : push rax ; or byte ptr [rcx + 0x3e093], cl ; add dh, dh ; ret 0x7402
0x000000000041e58a : push rax ; or dh, dh ; ret 0xf02
0x000000000047e216 : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044de2c : push rax ; ret
0x000000000040a7bc : push rax ; retf
0x000000000046331c : push rax ; retf 0
0x000000000041944a : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004908fc : push rax ; sub byte ptr [rbp + 1], cl ; ret 0x394c
0x000000000049253b : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000413279 : push rbp ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xff3
0x000000000041307f : push rbp ; add dh, dh ; ret 0x7402
0x000000000041d840 : push rbp ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000049123b : push rbp ; and byte ptr [rcx - 0x75], cl ; insd dword ptr [rdi], dx ; sbb dh, dh ; ret 0xf01
0x000000000045b8f8 : push rbp ; enter -0x2dcf, -0x18 ; outsd dx, dword ptr [rsi] ; retf 0xfffe
0x000000000044d764 : push rbp ; stosd dword ptr [rdi], eax ; add al, 0 ; mov rdi, r15 ; call 0x42a189
0x000000000048ded6 : push rbp ; xor al, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x0000000000412101 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000402332 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047b94f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000048441b : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e555 : push rbx ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000406572 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473f73 : push rbx ; and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x00000000004466c9 : push rbx ; jb 0x4466d9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046d0ff : push rbx ; je 0x46d163 ; pop rbp ; pop r12 ; ret
0x00000000004822c2 : push rbx ; or al, 0xf6 ; ret 0xf01
0x000000000046b6b2 : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000414122 : push rbx ; or byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000449dea : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b3d1 : push rbx ; pop rdi ; add al, 0 ; mov qword ptr [rsi], rax ; ret
0x000000000046b9ce : push rbx ; xor al, 0xe9 ; ret 0xfffc
0x0000000000447418 : push rcx ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000436e71 : push rcx ; jl 0x436ec2 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000436fd8 : push rcx ; jl 0x437029 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000041d4cd : push rcx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000044ce64 : push rcx ; or byte ptr [rcx + 1], cl ; retf 0x894c
0x0000000000448a6e : push rcx ; ret
0x000000000041b71d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004227fb : push rcx ; sbb byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042c023 : push rcx ; xor byte ptr [rcx], cl ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000044337a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000433b69 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000489b2f : push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000044342c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000041df1c : push rdi ; and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000044c150 : push rdi ; and dh, al ; sub byte ptr [r9], r8b ; ret
0x000000000042d938 : push rdi ; clc ; ret
0x000000000042dab0 : push rdi ; cld ; ret
0x000000000042e5d7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000433449 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004131a3 : push rdi ; cmp byte ptr [rax - 0x75], cl ; xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x0000000000422af5 : push rdi ; cmp eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004333c9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043321a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004332aa : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000047ee95 : push rdi ; or al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000041567d : push rdi ; or byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000048a55a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048ceca : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000048a561 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000443610 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042bd1e : push rdi ; ret
0x000000000042bdbe : push rdi ; ret 0xff3
0x000000000042b8e3 : push rdi ; retf
0x000000000042b963 : push rdi ; retf 0xcab2
0x000000000042e7d7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042dffa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042e3d7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045eea8 : push rdi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000046f08b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000046ebe8 : push rdi ; xor eax, eax ; ret
0x0000000000449d4c : push rdx ; adc byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000041d6a5 : push rdx ; adc byte ptr [rcx - 0x77], cl ; retf 0x894d
0x0000000000421f17 : push rdx ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000481b72 : push rdx ; hlt ; add eax, dword ptr [rax] ; syscall
0x000000000041d77d : push rdx ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040472a : push rdx ; retf 0xffff
0x000000000042c529 : push rdx ; sar byte ptr [rsi], 0x41 ; jmp rcx
0x000000000042aa04 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000445d2d : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x445d84 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000433e01 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000433e71 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000048a1df : push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000442db5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000433d91 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000442d53 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042aa19 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042da62 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042e1d1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042de05 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042dfe5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042e1c5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042dc25 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000041ed66 : push rsi ; cli ; or dword ptr [rax], eax ; syscall
0x0000000000444fc6 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000444fb6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000444f86 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000465403 : push rsi ; or al, 0xf6 ; ret 0xf08
0x0000000000463d49 : push rsi ; or cl, ch ; ret 0xfff3
0x00000000004489c9 : push rsi ; ret
0x0000000000466b2a : push rsi ; ret 0xf10
0x0000000000421caa : push rsi ; retf 9
0x0000000000444f96 : push rsi ; sub eax, edx ; ret
0x000000000042aa2e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000490159 : push rsp ; and al, 0x10 ; call rax
0x000000000041ccaa : push rsp ; and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rax
0x00000000004256f7 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000041d619 : push rsp ; ret
0x0000000000488bd5 : push rsp ; retf 0x48f8
0x0000000000488ad2 : push rsp ; retf 0x4cf0
0x00000000004735f6 : push rsp ; xchg eax, ebp ; add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x000000000043bc20 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000455ff8 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000417e73 : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x000000000043c920 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428b44 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048ee17 : pushfq ; ret 0xf45
0x0000000000419575 : pxor mm0, mm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000419574 : pxor xmm0, xmm0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x00000000004857cc : rcl bh, 1 ; idiv edi ; endbr64 ; ret
0x000000000041c898 : rcl dword ptr [rip + 0xa1eaa], 0x83 ; ret 0x8b01
0x0000000000421e0c : rcr bl, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000465434 : rcr byte ptr [rax + rax], cl ; add dh, dh ; ret 0xf40
0x000000000041f7c2 : rcr byte ptr [rbp + 0x41], 0x5c ; mov rax, r8 ; pop r13 ; ret
0x0000000000450028 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000411aaa : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000415682 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000048a567 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000475c21 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000413375 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000411b12 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041ef5a : rcr byte ptr [rbx + 0x5d], 0x4c ; mov eax, eax ; pop r12 ; ret
0x00000000004936ff : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000447172 : rcr byte ptr [rbx - 0x3d], 1 ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000488719 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000445e8d : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000445e7f : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000446bc7 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041dd42 : rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x000000000040101a : ret
0x000000000040189b : ret 0
0x000000000046b68f : ret 0x107
0x000000000047ad0f : ret 0x1075
0x000000000048ed02 : ret 0x10e9
0x000000000041d64a : ret 0x110
0x000000000040fc6b : ret 0x110f
0x000000000048a53c : ret 0x114d
0x0000000000454734 : ret 0x11e9
0x000000000040cdca : ret 0x12b
0x0000000000415f3c : ret 0x1389
0x000000000045dcda : ret 0x13eb
0x000000000048d1c9 : ret 0x145
0x00000000004114f6 : ret 0x1475
0x0000000000418956 : ret 0x148
0x0000000000437233 : ret 0x14d
0x000000000046e8db : ret 0x14eb
0x0000000000417cd8 : ret 0x160f
0x00000000004820c6 : ret 0x1773
0x000000000046eec6 : ret 0x1776
0x000000000040fe61 : ret 0x17e9
0x0000000000437170 : ret 0x180f
0x00000000004076ca : ret 0x182
0x000000000046ec55 : ret 0x1876
0x000000000047f6dc : ret 0x1b8
0x000000000041df41 : ret 0x1ba
0x000000000040ec2c : ret 0x1c74
0x000000000040c694 : ret 0x1d
0x000000000046832c : ret 0x1d74
0x0000000000457393 : ret 0x1e74
0x0000000000456082 : ret 0x1f0f
0x000000000045bfbb : ret 0x200
0x0000000000448d65 : ret 0x2044
0x000000000045280d : ret 0x2074
0x0000000000473681 : ret 0x2148
0x0000000000415ce7 : ret 0x214c
0x000000000047a7f0 : ret 0x2275
0x000000000043f8c8 : ret 0x2288
0x000000000042bf22 : ret 0x2373
0x0000000000490767 : ret 0x2374
0x0000000000487ae9 : ret 0x2476
0x0000000000404111 : ret 0x2548
0x000000000048c305 : ret 0x25e8
0x0000000000465000 : ret 0x2675
0x0000000000410c10 : ret 0x2774
0x000000000042d707 : ret 0x280f
0x000000000047d4fb : ret 0x2875
0x000000000046ec45 : ret 0x2876
0x000000000046901e : ret 0x28e9
0x000000000047a865 : ret 0x28f5
0x000000000047644e : ret 0x290f
0x00000000004849cb : ret 0x2912
0x000000000043f6f7 : ret 0x2920
0x00000000004126b1 : ret 0x2948
0x000000000045ffcc : ret 0x2949
0x0000000000411e4b : ret 0x294c
0x00000000004157ba : ret 0x294d
0x0000000000412105 : ret 0x2b48
0x00000000004873f3 : ret 0x2b49
0x000000000046b604 : ret 0x2b7c
0x000000000047fc06 : ret 0x2be
0x000000000049364e : ret 0x2d7
0x00000000004566da : ret 0x2de9
0x000000000046b485 : ret 0x2e66
0x000000000048942a : ret 0x30e8
0x0000000000482137 : ret 0x3145
0x0000000000476002 : ret 0x3148
0x0000000000421354 : ret 0x3174
0x0000000000474553 : ret 0x330
0x00000000004131c9 : ret 0x34e9
0x0000000000478b25 : ret 0x35e8
0x000000000046eea6 : ret 0x3776
0x0000000000421233 : ret 0x37e9
0x000000000046ec35 : ret 0x3876
0x00000000004634c8 : ret 0x3944
0x000000000046e815 : ret 0x3945
0x0000000000405aaf : ret 0x3948
0x0000000000419de9 : ret 0x3949
0x000000000041bff3 : ret 0x394c
0x0000000000459544 : ret 0x3973
0x00000000004455a2 : ret 0x3a01
0x000000000042bf0b : ret 0x3a73
0x000000000048edd8 : ret 0x3ae9
0x0000000000446005 : ret 0x3b48
0x00000000004070a6 : ret 0x4001
0x000000000046fb28 : ret 0x408d
0x0000000000417191 : ret 0x4101
0x0000000000458507 : ret 0x4104
0x000000000041cf39 : ret 0x4110
0x00000000004241da : ret 0x4266
0x000000000041df20 : ret 0x4273
0x000000000047bc61 : ret 0x434
0x000000000046caf9 : ret 0x4389
0x000000000046b845 : ret 0x43c7
0x0000000000486b4a : ret 0x4401
0x0000000000457741 : ret 0x4408
0x0000000000462ed5 : ret 0x4420
0x000000000047d042 : ret 0x447
0x0000000000404dda : ret 0x448b
0x00000000004476da : ret 0x4501
0x0000000000416d2f : ret 0x458b
0x000000000045337a : ret 0x45c
0x0000000000405d14 : ret 0x46e8
0x000000000040f984 : ret 0x4801
0x00000000004224ef : ret 0x4802
0x000000000046d082 : ret 0x4804
0x0000000000471b68 : ret 0x4807
0x0000000000413d66 : ret 0x4808
0x0000000000450a62 : ret 0x481
0x000000000041b235 : ret 0x4810
0x000000000045c17b : ret 0x4811
0x0000000000447b22 : ret 0x4817
0x00000000004038aa : ret 0x481a
0x0000000000476d3a : ret 0x483
0x0000000000490a06 : ret 0x4830
0x00000000004240e6 : ret 0x4840
0x000000000045493a : ret 0x4858
0x0000000000419413 : ret 0x4860
0x000000000044e434 : ret 0x4864
0x00000000004131ac : ret 0x4866
0x000000000043f15c : ret 0x48c3
0x000000000044a40a : ret 0x48f8
0x000000000040704c : ret 0x4901
0x0000000000451497 : ret 0x4902
0x000000000041a471 : ret 0x4907
0x000000000047bfed : ret 0x4908
0x0000000000428b1c : ret 0x4910
0x0000000000459dc0 : ret 0x4911
0x000000000044c4ee : ret 0x4938
0x000000000048acd1 : ret 0x4966
0x000000000041661e : ret 0x4a8d
0x0000000000455e2f : ret 0x4b01
0x0000000000429dee : ret 0x4c04
0x000000000047b055 : ret 0x4c08
0x0000000000429976 : ret 0x4c20
0x0000000000429996 : ret 0x4c40
0x00000000004299b6 : ret 0x4c60
0x000000000048bc0e : ret 0x4d08
0x000000000047ff77 : ret 0x4d74
0x00000000004152e4 : ret 0x4d83
0x0000000000479994 : ret 0x4f10
0x0000000000448196 : ret 0x4f2
0x000000000044c19b : ret 0x508b
0x0000000000447dc6 : ret 0x509
0x000000000042bef4 : ret 0x5173
0x0000000000447416 : ret 0x518d
0x000000000046b9cc : ret 0x5389
0x000000000046ee86 : ret 0x5776
0x000000000044d886 : ret 0x589
0x000000000044c525 : ret 0x58b
0x000000000046167a : ret 0x5a0
0x0000000000453af1 : ret 0x5a58
0x0000000000420ac5 : ret 0x5d5b
0x0000000000447b10 : ret 0x5de9
0x0000000000447fed : ret 0x6073
0x0000000000419e83 : ret 0x61e9
0x0000000000478290 : ret 0x6349
0x0000000000459d94 : ret 0x6411
0x000000000043145a : ret 0x64d
0x000000000041d0fc : ret 0x6610
0x000000000046ebc1 : ret 0x6620
0x0000000000421d53 : ret 0x66c3
0x000000000046ee76 : ret 0x6776
0x0000000000487e30 : ret 0x6975
0x0000000000491350 : ret 0x6ae8
0x000000000040209d : ret 0x7402
0x00000000004786fb : ret 0x7403
0x0000000000402649 : ret 0x7404
0x0000000000402059 : ret 0x7408
0x0000000000414291 : ret 0x7420
0x00000000004020ac : ret 0x7440
0x000000000044c7ea : ret 0x750
0x0000000000443b09 : ret 0x7501
0x0000000000443b16 : ret 0x7502
0x0000000000443b23 : ret 0x7504
0x0000000000444f44 : ret 0x7508
0x0000000000443adb : ret 0x7510
0x00000000004227ea : ret 0x7520
0x0000000000443af5 : ret 0x7540
0x000000000041303e : ret 0x7589
0x000000000048eb9d : ret 0x75e9
0x00000000004718db : ret 0x774
0x000000000042ade2 : ret 0x7777
0x0000000000483acc : ret 0x77e9
0x00000000004475ee : ret 0x797
0x0000000000405b02 : ret 0x7c8b
0x000000000046eb61 : ret 0x7e20
0x000000000046eddc : ret 0x7e40
0x0000000000422d8c : ret 0x7f10
0x000000000041c2e5 : ret 0x80
0x0000000000423f69 : ret 0x8000
0x000000000040388d : ret 0x8001
0x00000000004137ee : ret 0x810
0x0000000000425835 : ret 0x8101
0x000000000044ba39 : ret 0x8148
0x0000000000490e7a : ret 0x8166
0x0000000000454879 : ret 0x820f
0x0000000000469cc4 : ret 0x82e9
0x000000000044740f : ret 0x8301
0x0000000000463e65 : ret 0x8303
0x000000000046b4f5 : ret 0x8304
0x0000000000478ed0 : ret 0x8305
0x0000000000425905 : ret 0x8308
0x00000000004478a1 : ret 0x830b
0x0000000000414a14 : ret 0x830f
0x00000000004258d0 : ret 0x8310
0x00000000004258a2 : ret 0x8320
0x000000000040192d : ret 0x8341
0x0000000000410320 : ret 0x8348
0x00000000004665d2 : ret 0x8349
0x00000000004065a6 : ret 0x8401
0x0000000000483dc7 : ret 0x8404
0x0000000000405ab7 : ret 0x840f
0x0000000000454b0e : ret 0x841
0x000000000045fab6 : ret 0x8445
0x0000000000414aaa : ret 0x850f
0x0000000000460807 : ret 0x8545
0x0000000000415737 : ret 0x8548
0x000000000045cf40 : ret 0x854d
0x0000000000480680 : ret 0x85c7
0x000000000040281a : ret 0x860f
0x000000000047a184 : ret 0x86e8
0x0000000000417962 : ret 0x870f
0x000000000046ec65 : ret 0x876
0x0000000000457fdc : ret 0x87e9
0x0000000000403910 : ret 0x8801
0x00000000004174d3 : ret 0x8901
0x0000000000404f3a : ret 0x8941
0x0000000000478293 : ret 0x8944
0x0000000000403758 : ret 0x8948
0x0000000000415039 : ret 0x8949
0x000000000040fbcb : ret 0x894c
0x0000000000482b72 : ret 0x894d
0x000000000048956b : ret 0x894e
0x0000000000488024 : ret 0x8964
0x000000000041c89f : ret 0x8b01
0x000000000046b936 : ret 0x8b04
0x0000000000471537 : ret 0x8b05
0x000000000047d62e : ret 0x8b30
0x000000000045beff : ret 0x8b41
0x0000000000404996 : ret 0x8b48
0x0000000000476c35 : ret 0x8b49
0x00000000004894f2 : ret 0x8b4a
0x000000000042e3e9 : ret 0x8b4c
0x000000000047cd7e : ret 0x8ce8
0x0000000000457865 : ret 0x8d08
0x000000000048218b : ret 0x8d0f
0x000000000041b721 : ret 0x8d48
0x000000000041a497 : ret 0x8d49
0x0000000000479501 : ret 0x8d4a
0x0000000000481120 : ret 0x8d4b
0x000000000044e8d3 : ret 0x8d4c
0x000000000041a350 : ret 0x8d4d
0x0000000000465188 : ret 0x8d89
0x000000000045cccb : ret 0x8e0f
0x00000000004059cb : ret 0x8fe8
0x00000000004799dd : ret 0x9066
0x0000000000421f1d : ret 0x90c3
0x000000000041a8f4 : ret 0x948
0x000000000046f128 : ret 0x94c
0x0000000000484416 : ret 0x950f
0x000000000047e3d1 : ret 0x99e8
0x000000000041effa : ret 0x9f7
0x000000000041b41a : ret 0xa58
0x000000000041c8a8 : ret 0xa7e
0x000000000044b971 : ret 0xabe
0x0000000000402e99 : ret 0xb
0x0000000000493751 : ret 0xb240
0x000000000041d7e9 : ret 0xb48b
0x00000000004651ba : ret 0xb589
0x000000000041d76c : ret 0xb60f
0x000000000040219f : ret 0xb70f
0x000000000046609b : ret 0xb8
0x000000000046b522 : ret 0xb804
0x000000000041de29 : ret 0xb817
0x0000000000465ce7 : ret 0xb848
0x000000000048f1dd : ret 0xbc80
0x0000000000423e29 : ret 0xc000
0x00000000004043ce : ret 0xc031
0x0000000000413fdb : ret 0xc083
0x0000000000429ed0 : ret 0xc085
0x000000000041a20d : ret 0xc148
0x000000000045e44a : ret 0xc200
0x000000000042bdc4 : ret 0xc2b2
0x00000000004937f2 : ret 0xc340
0x0000000000493777 : ret 0xc3c0
0x000000000046ee41 : ret 0xc540
0x00000000004937a0 : ret 0xc580
0x0000000000477692 : ret 0xc6
0x00000000004937c9 : ret 0xc600
0x000000000045eb55 : ret 0xc689
0x000000000043fc24 : ret 0xc748
0x0000000000410af6 : ret 0xc776
0x000000000046514b : ret 0xc789
0x0000000000421693 : ret 0xc7e8
0x000000000046caee : ret 0xc883
0x0000000000466e19 : ret 0xc9e9
0x000000000043f815 : ret 0xc9ff
0x000000000048801b : ret 0xca83
0x000000000049381b : ret 0xcb40
0x0000000000493844 : ret 0xcba0
0x000000000049386d : ret 0xcc20
0x0000000000493896 : ret 0xcce0
0x00000000004938bf : ret 0xcd60
0x00000000004938e8 : ret 0xcdc0
0x000000000047ac1d : ret 0xcde8
0x000000000040641e : ret 0xce80
0x000000000044742a : ret 0xcfe9
0x000000000044f444 : ret 0xd17d
0x0000000000402598 : ret 0xd284
0x000000000046b966 : ret 0xd285
0x0000000000483b71 : ret 0xd2e9
0x0000000000475d78 : ret 0xd348
0x00000000004025fd : ret 0xd689
0x0000000000476cff : ret 0xd74
0x0000000000475585 : ret 0xd75
0x000000000044933a : ret 0xd8f7
0x000000000041a424 : ret 0xd977
0x0000000000471063 : ret 0xda72
0x000000000044741c : ret 0xda89
0x000000000048d273 : ret 0xdb31
0x0000000000416cb5 : ret 0xde9
0x000000000046636f : ret 0xe
0x0000000000423ce9 : ret 0xe000
0x0000000000443a9d : ret 0xe074
0x0000000000414e87 : ret 0xe083
0x00000000004908f7 : ret 0xe172
0x000000000046604b : ret 0xe273
0x000000000040f545 : ret 0xe281
0x0000000000401dc5 : ret 0xe283
0x000000000047cc77 : ret 0xe3e8
0x0000000000419d51 : ret 0xe480
0x000000000045ccb0 : ret 0xe575
0x0000000000481458 : ret 0xe57f
0x00000000004470b2 : ret 0xe680
0x00000000004213d6 : ret 0xe775
0x0000000000465158 : ret 0xe783
0x00000000004849d3 : ret 0xe7f
0x000000000042a599 : ret 0xe883
0x0000000000475052 : ret 0xe8c0
0x00000000004221b3 : ret 0xe901
0x000000000046afee : ret 0xe902
0x0000000000483b41 : ret 0xe904
0x000000000043f8b6 : ret 0xe908
0x000000000043ba86 : ret 0xe910
0x000000000047cd21 : ret 0xe9e8
0x0000000000481747 : ret 0xe9f8
0x000000000040f621 : ret 0xeab8
0x0000000000401d91 : ret 0xeac1
0x0000000000428b4a : ret 0xeb10
0x000000000041b1e2 : ret 0xeb75
0x00000000004893a0 : ret 0xed75
0x0000000000405aef : ret 0xee75
0x000000000048e7fc : ret 0xef89
0x000000000042793e : ret 0xf
0x000000000040ae8d : ret 0xf00
0x0000000000423ba9 : ret 0xf000
0x00000000004045d0 : ret 0xf01
0x000000000041e58d : ret 0xf02
0x0000000000425937 : ret 0xf04
0x0000000000465406 : ret 0xf08
0x0000000000471b03 : ret 0xf0e
0x0000000000422d42 : ret 0xf10
0x0000000000411b62 : ret 0xf20
0x000000000047d1ca : ret 0xf30
0x0000000000416b2e : ret 0xf390
0x0000000000445aa9 : ret 0xf40
0x00000000004047d7 : ret 0xf41
0x0000000000482c9a : ret 0xf45
0x000000000046e291 : ret 0xf475
0x00000000004522ee : ret 0xf48
0x0000000000482481 : ret 0xf50
0x000000000042576e : ret 0xf5c5
0x0000000000488465 : ret 0xf601
0x0000000000415dec : ret 0xf66
0x0000000000491d5c : ret 0xf6f9
0x0000000000406b5a : ret 0xf748
0x00000000004712a9 : ret 0xf789
0x00000000004865da : ret 0xf7c9
0x00000000004911c3 : ret 0xf7e8
0x0000000000405b61 : ret 0xf7f7
0x0000000000423a69 : ret 0xf800
0x0000000000471168 : ret 0xf883
0x00000000004198a7 : ret 0xf8b
0x000000000043ed86 : ret 0xf8c5
0x00000000004922ca : ret 0xf8d6
0x000000000044721c : ret 0xfac1
0x000000000041145b : ret 0xfb80
0x00000000004698ce : ret 0xfb83
0x0000000000423929 : ret 0xfc00
0x0000000000421377 : ret 0xfc3
0x000000000044e0ba : ret 0xfdc0
0x00000000004237e9 : ret 0xfe00
0x000000000048733b : ret 0xfeb
0x00000000004236a9 : ret 0xff00
0x0000000000433271 : ret 0xff2
0x000000000048bdba : ret 0xff25
0x000000000042a759 : ret 0xff2d
0x000000000041327e : ret 0xff3
0x0000000000423569 : ret 0xff80
0x000000000048280a : ret 0xff85
0x000000000040e94a : ret 0xff89
0x000000000040d54a : ret 0xff9d
0x000000000041610b : ret 0xffb8
0x0000000000403d28 : ret 0xffbf
0x000000000040f672 : ret 0xffc0
0x000000000040a14a : ret 0xffd1
0x00000000004232e9 : ret 0xffe0
0x00000000004199da : ret 0xffe2
0x000000000040a009 : ret 0xffed
0x00000000004108d1 : ret 0xffef
0x00000000004213b1 : ret 0xfff
0x000000000040f460 : ret 0xfff0
0x000000000040e052 : ret 0xfff2
0x0000000000463d4c : ret 0xfff3
0x000000000044e0ca : ret 0xfff4
0x000000000047fda6 : ret 0xfff6
0x0000000000492dca : ret 0xfff7
0x0000000000423069 : ret 0xfff8
0x000000000047861a : ret 0xfff9
0x0000000000478335 : ret 0xfffa
0x00000000004818b7 : ret 0xfffb
0x000000000041677c : ret 0xfffc
0x000000000044de83 : ret 0xfffd
0x0000000000422de9 : ret 0xfffe
0x000000000040b0df : ret 0xffff
0x00000000004042aa : ret 1
0x000000000041c0b2 : ret 2
0x0000000000404c98 : ret 3
0x000000000042941e : ret 4
0x000000000046573f : ret 5
0x00000000004290da : ret 7
0x000000000042a209 : ret 8
0x0000000000412e5a : ret 9
0x000000000040134d : retf
0x00000000004012c8 : retf 0
0x000000000040cec5 : retf 0x10
0x0000000000451607 : retf 0x1089
0x0000000000474f8f : retf 0x10bf
0x000000000048cddd : retf 0x114d
0x000000000044d2a2 : retf 0x1174
0x0000000000402722 : retf 0x11a
0x000000000040d9c2 : retf 0x11f
0x000000000040b6de : retf 0x14
0x0000000000451315 : retf 0x1489
0x0000000000403581 : retf 0x14c
0x0000000000468d62 : retf 0x15
0x0000000000425a92 : retf 0x16
0x0000000000445a7b : retf 0x167e
0x00000000004860f2 : retf 0x17
0x000000000048a46d : retf 0x194d
0x0000000000421d38 : retf 0x1974
0x000000000044bf76 : retf 0x19b8
0x00000000004077ca : retf 0x1a
0x0000000000457e2a : retf 0x1a75
0x0000000000421d32 : retf 0x1cf
0x0000000000461ab5 : retf 0x1d
0x000000000043b9a7 : retf 0x1f0f
0x0000000000480a95 : retf 0x25e8
0x000000000042c519 : retf 0x280f
0x0000000000421152 : retf 0x286
0x000000000040f5cf : retf 0x290f
0x0000000000464f68 : retf 0x2941
0x0000000000468f32 : retf 0x2944
0x000000000042c01c : retf 0x2948
0x00000000004480fc : retf 0x294c
0x0000000000421d88 : retf 0x2974
0x00000000004937b9 : retf 0x2a7
0x000000000047b6cc : retf 0x2d0
0x0000000000490ad5 : retf 0x2e66
0x000000000041a7f2 : retf 0x2ef
0x0000000000482ba3 : retf 0x30be
0x000000000041a322 : retf 0x3141
0x0000000000432e56 : retf 0x3148
0x0000000000421ee8 : retf 0x3374
0x00000000004859f7 : retf 0x33e8
0x000000000047206a : retf 0x356
0x0000000000432e32 : retf 0x377
0x0000000000452c67 : retf 0x3775
0x000000000041eb36 : retf 0x3948
0x000000000041b78d : retf 0x394c
0x00000000004883f2 : retf 0x394d
0x0000000000485912 : retf 0x3be
0x00000000004675b2 : retf 0x3f6
0x0000000000471b0f : retf 0x4102
0x000000000044d941 : retf 0x4108
0x000000000044d902 : retf 0x4110
0x000000000044db86 : retf 0x4120
0x0000000000454aac : retf 0x4180
0x0000000000401943 : retf 0x41ff
0x0000000000456634 : retf 0x426
0x00000000004241bc : retf 0x4266
0x000000000040288f : retf 0x434
0x0000000000415f06 : retf 0x43f6
0x000000000043b6fe : retf 0x4466
0x000000000048801d : retf 0x4502
0x000000000046b6d5 : retf 0x4800
0x000000000041d4c2 : retf 0x4801
0x00000000004183c1 : retf 0x4802
0x000000000041df39 : retf 0x4804
0x0000000000476fb1 : retf 0x4808
0x000000000040f396 : retf 0x480b
0x000000000040f360 : retf 0x480d
0x000000000040fc3f : retf 0x4866
0x000000000041af5e : retf 0x4890
0x0000000000488bd6 : retf 0x48f8
0x000000000041d779 : retf 0x4901
0x000000000041d719 : retf 0x4966
0x000000000044ddf9 : retf 0x4a4
0x000000000045f2a5 : retf 0x4a8d
0x0000000000402833 : retf 0x4b0
0x000000000046ac31 : retf 0x4b80
0x0000000000449a78 : retf 0x4c01
0x0000000000475311 : retf 0x4c4
0x0000000000421584 : retf 0x4c89
0x000000000047faae : retf 0x4c90
0x0000000000488ad3 : retf 0x4cf0
0x0000000000457dd2 : retf 0x4d72
0x000000000048a438 : retf 0x4de8
0x000000000048a44a : retf 0x4df0
0x000000000048a45c : retf 0x4df8
0x00000000004100b0 : retf 0x6411
0x0000000000473316 : retf 0x64e9
0x0000000000418382 : retf 0x6601
0x000000000042c754 : retf 0x6602
0x000000000042c8a4 : retf 0x6603
0x000000000042c9f4 : retf 0x6604
0x000000000042cb44 : retf 0x6605
0x000000000042cc94 : retf 0x6606
0x000000000042cde4 : retf 0x6607
0x000000000042cf34 : retf 0x6608
0x000000000042d084 : retf 0x6609
0x000000000042d1d4 : retf 0x660a
0x000000000042d324 : retf 0x660b
0x000000000042d474 : retf 0x660c
0x000000000042d5c4 : retf 0x660d
0x000000000042d714 : retf 0x660e
0x000000000042d864 : retf 0x660f
0x000000000046ed90 : retf 0x6666
0x0000000000432e51 : retf 0x676
0x000000000045953a : retf 0x678
0x0000000000405b99 : retf 0x6c77
0x0000000000445a65 : retf 0x7202
0x000000000041e6f4 : retf 0x766
0x00000000004874cb : retf 0x774
0x0000000000488b82 : retf 0x777
0x00000000004179c2 : retf 0x7f
0x0000000000432e3a : retf 0x8148
0x0000000000411c3c : retf 0x820f
0x0000000000401ff4 : retf 0x8304
0x00000000004315e6 : retf 0x830f
0x0000000000415580 : retf 0x8310
0x00000000004145e8 : retf 0x8320
0x0000000000401bab : retf 0x8341
0x000000000041b232 : retf 0x8348
0x0000000000428aef : retf 0x8349
0x0000000000401bae : retf 0x83ff
0x000000000041a3ed : retf 0x840f
0x000000000041d65e : retf 0x850f
0x000000000043fd0b : retf 0x8548
0x000000000047e2be : retf 0x854d
0x000000000046d36e : retf 0x858b
0x0000000000419d32 : retf 0x860f
0x0000000000419cb4 : retf 0x870f
0x000000000048ab13 : retf 0x8820
0x000000000042158a : retf 0x8902
0x0000000000401f7f : retf 0x8903
0x000000000040200f : retf 0x8910
0x0000000000411f69 : retf 0x8920
0x000000000040285e : retf 0x8940
0x0000000000405d54 : retf 0x8941
0x000000000041d6c7 : retf 0x8944
0x000000000041655c : retf 0x8948
0x000000000041a6a2 : retf 0x8949
0x0000000000412f4b : retf 0x894c
0x00000000004069c5 : retf 0x894d
0x0000000000432fbe : retf 0x8b48
0x000000000041254e : retf 0x8b49
0x000000000042e439 : retf 0x8b4c
0x0000000000402afa : retf 0x8d48
0x0000000000482237 : retf 0x8d49
0x0000000000414c47 : retf 0x8d4a
0x000000000047e8f2 : retf 0x8d4b
0x0000000000442c5d : retf 0x8d4c
0x00000000004736c8 : retf 0x8d88
0x0000000000469012 : retf 0x8d89
0x00000000004849dd : retf 0x8e0f
0x0000000000428a2d : retf 0x9066
0x0000000000489449 : retf 0x93e9
0x000000000041deda : retf 0x948
0x000000000041a9a5 : retf 0x949
0x0000000000451eed : retf 0x9775
0x0000000000449770 : retf 0x9b9
0x000000000043f6fa : retf 0x9ceb
0x0000000000411c8f : retf 0xa
0x000000000048a3ba : retf 0xa0e8
0x000000000041ac22 : retf 0xa60
0x000000000041d5ff : retf 0xa74
0x00000000004190a6 : retf 0xa7b
0x0000000000457b12 : retf 0xaceb
0x00000000004117f2 : retf 0xae5
0x0000000000403c54 : retf 0xb
0x000000000048acfb : retf 0xb275
0x00000000004567ab : retf 0xb3eb
0x000000000040389a : retf 0xb60f
0x0000000000485c32 : retf 0xb7a3
0x0000000000484232 : retf 0xb7bd
0x000000000048d232 : retf 0xb801
0x000000000041deb8 : retf 0xb804
0x0000000000411f48 : retf 0xb810
0x0000000000457dd7 : retf 0xb8eb
0x0000000000487cba : retf 0xba
0x000000000048481c : retf 0xba5b
0x0000000000419d82 : retf 0xbb77
0x0000000000466515 : retf 0xbd80
0x0000000000485816 : retf 0xbeb
0x0000000000486bf2 : retf 0xc
0x0000000000415340 : retf 0xc031
0x00000000004651a3 : retf 0xc041
0x00000000004130a0 : retf 0xc148
0x000000000046c80b : retf 0xc149
0x000000000041d55d : retf 0xc183
0x0000000000416bd1 : retf 0xc189
0x0000000000461e1e : retf 0xc239
0x000000000041b790 : retf 0xc574
0x000000000046c745 : retf 0xc5e8
0x0000000000488bb7 : retf 0xc748
0x000000000040ec95 : retf 0xc985
0x000000000042b964 : retf 0xcab2
0x00000000004886ba : retf 0xceb
0x0000000000428b16 : retf 0xd
0x000000000045647c : retf 0xd148
0x0000000000447fdb : retf 0xd284
0x00000000004052be : retf 0xd289
0x00000000004550c5 : retf 0xd689
0x0000000000446faa : retf 0xd975
0x0000000000462ab2 : retf 0xda29
0x000000000041b7ca : retf 0xdb75
0x00000000004799ff : retf 0xde75
0x0000000000428a16 : retf 0xe
0x00000000004874b5 : retf 0xe074
0x0000000000446de7 : retf 0xe175
0x000000000047e6b7 : retf 0xe273
0x000000000048583b : retf 0xe275
0x00000000004038dc : retf 0xe281
0x0000000000451448 : retf 0xe283
0x0000000000446c80 : retf 0xe475
0x000000000044c310 : retf 0xe574
0x000000000048141d : retf 0xe87f
0x000000000040f3e1 : retf 0xe90c
0x0000000000416779 : retf 0xe980
0x000000000045be71 : retf 0xe9e8
0x0000000000401a80 : retf 0xe9ff
0x00000000004885a3 : retf 0xeac0
0x0000000000405ad8 : retf 0xeac1
0x0000000000422d01 : retf 0xead3
0x000000000040f3cc : retf 0xeb0a
0x000000000045b9e0 : retf 0xed75
0x000000000048ba15 : retf 0xeeb
0x000000000043185c : retf 0xf01
0x00000000004319dc : retf 0xf02
0x0000000000431b5c : retf 0xf03
0x0000000000431cdc : retf 0xf04
0x0000000000431e5c : retf 0xf05
0x0000000000431fdc : retf 0xf06
0x000000000043215c : retf 0xf07
0x00000000004322dc : retf 0xf08
0x000000000043245c : retf 0xf09
0x00000000004325dc : retf 0xf0a
0x000000000043275c : retf 0xf0b
0x00000000004328dc : retf 0xf0c
0x0000000000432a5c : retf 0xf0d
0x0000000000432bdc : retf 0xf0e
0x0000000000432d5c : retf 0xf0f
0x000000000043d2d5 : retf 0xf1c5
0x0000000000488072 : retf 0xf375
0x000000000043f2b0 : retf 0xf48
0x00000000004682fb : retf 0xf4c
0x0000000000418509 : retf 0xf66
0x000000000042a9ca : retf 0xf748
0x0000000000488b6c : retf 0xf749
0x00000000004923c2 : retf 0xf8d5
0x000000000042574b : retf 0xf983
0x000000000043d3af : retf 0xf9c5
0x000000000046d6c2 : retf 0xfa5f
0x000000000047f40c : retf 0xfac1
0x0000000000453fd2 : retf 0xfaef
0x00000000004935f2 : retf 0xfb61
0x000000000047e38a : retf 0xfd89
0x000000000043f4cd : retf 0xfdc5
0x000000000046c60d : retf 0xfde8
0x0000000000493622 : retf 0xfea4
0x000000000042a7f7 : retf 0xfec5
0x0000000000433691 : retf 0xff2
0x000000000042adfb : retf 0xff3
0x000000000046b438 : retf 0xff3e
0x000000000040e642 : retf 0xff8c
0x000000000046b0fd : retf 0xffb8
0x000000000041ea92 : retf 0xffbe
0x00000000004035c8 : retf 0xffbf
0x000000000046a932 : retf 0xffcc
0x0000000000404182 : retf 0xffcf
0x0000000000492112 : retf 0xffd5
0x0000000000469b63 : retf 0xffdf
0x0000000000481871 : retf 0xffe3
0x000000000046695b : retf 0xffe6
0x000000000046665b : retf 0xffe9
0x0000000000480df5 : retf 0xffea
0x00000000004605e7 : retf 0xfff0
0x000000000041ca12 : retf 0xfff1
0x0000000000491c32 : retf 0xfff3
0x000000000046a00d : retf 0xfff4
0x0000000000455c3a : retf 0xfff5
0x000000000040825b : retf 0xfff7
0x00000000004746a1 : retf 0xfff8
0x0000000000412207 : retf 0xfffa
0x0000000000412a2a : retf 0xfffc
0x000000000040b4b2 : retf 0xfffd
0x000000000040fec1 : retf 0xfffe
0x000000000040471b : retf 0xffff
0x000000000041904a : retf 1
0x00000000004059ac : retf 2
0x000000000040f502 : retf 3
0x000000000044af39 : retf 4
0x000000000040a11f : retf 8
0x0000000000421cab : retf 9
0x0000000000445665 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000046ebbe : rol bl, 0x83 ; ret 0x6620
0x00000000004471b9 : rol bl, 0x89 ; retf 0xb60f
0x0000000000491d59 : rol bl, 0xe9 ; ret 0xf6f9
0x000000000041945f : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000047cfd0 : rol bl, 1 ; mov eax, 1 ; ret
0x000000000042a27e : rol bl, 1 ; xor eax, eax ; ret
0x0000000000446051 : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000487ae3 : rol byte ptr [r9 + rbp - 0x10], 0x39 ; ret 0x2476
0x00000000004240e2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042a146 : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000046f562 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000404dd4 : rol byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000454409 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x0000000000458fd0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000044cc2c : rol byte ptr [rax - 0x6af0ffc8], cl ; ret 0x8348
0x000000000044d0d4 : rol byte ptr [rax - 0x6af0ffc8], cl ; ret 0x8d48
0x000000000044d0b3 : rol byte ptr [rax - 0x6bf0ffc8], cl ; ret 0x8d48
0x0000000000414859 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000042acef : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044cf7a : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x0000000000429fb2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000485835 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000048871b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000475b48 : rol byte ptr [rbx - 0x7a99fe20], 1 ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x0000000000470592 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000483f65 : rol byte ptr [rbx], 1 ; add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000041f75b : rol byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; ret
0x0000000000446052 : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000482c96 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x0000000000487ae4 : rol byte ptr [rcx + rbp - 0x10], 0x39 ; ret 0x2476
0x000000000046b5ff : rol byte ptr [rcx + rbp - 0x36], 0x39 ; ret 0x2b7c
0x000000000046901b : rol byte ptr [rcx - 0x77], 1 ; ret 0x28e9
0x0000000000405b5e : rol byte ptr [rcx - 0x77], cl ; ret 0xf7f7
0x0000000000470572 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000044ecce : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000040707e : rol byte ptr [rcx], 0x88 ; dec qword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000451d12 : rol byte ptr [rcx], 0x89 ; xor dword ptr [rax - 0x7d], ecx ; ret
0x0000000000411b5d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000447412 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x000000000044e2c2 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421ead : rol byte ptr [rcx], cl ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004705d2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004776cd : rol byte ptr [rdx], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000470582 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004858e3 : rol byte ptr [rdx], 0 ; add byte ptr [rcx + 0x148b48d8], cl ; ret 0xb60f
0x00000000004705c2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000450db4 : rol byte ptr [rsi], 1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000043d495 : rol ch, 1 ; jns 0x43d474 ; retf 0xead3
0x000000000043d5e5 : rol ch, 1 ; jns 0x43d5c4 ; retf 0xead3
0x000000000043d735 : rol ch, 1 ; jns 0x43d714 ; retf 0xead3
0x000000000043d885 : rol ch, 1 ; jns 0x43d864 ; retf 0xead3
0x000000000043d9d5 : rol ch, 1 ; jns 0x43d9b4 ; retf 0xead3
0x000000000043db25 : rol ch, 1 ; jns 0x43db04 ; retf 0xead3
0x000000000043dc75 : rol ch, 1 ; jns 0x43dc54 ; retf 0xead3
0x000000000043ddc5 : rol ch, 1 ; jns 0x43dda4 ; retf 0xead3
0x000000000043df15 : rol ch, 1 ; jns 0x43def4 ; retf 0xead3
0x000000000043e065 : rol ch, 1 ; jns 0x43e044 ; retf 0xead3
0x000000000043e1b5 : rol ch, 1 ; jns 0x43e194 ; retf 0xead3
0x000000000043e305 : rol ch, 1 ; jns 0x43e2e4 ; retf 0xead3
0x000000000043e455 : rol ch, 1 ; jns 0x43e434 ; retf 0xead3
0x000000000043e5a5 : rol ch, 1 ; jns 0x43e584 ; retf 0xead3
0x000000000043e6f5 : rol ch, 1 ; jns 0x43e6d4 ; retf 0xead3
0x000000000042a15f : rol ch, 1 ; std ; xlatb ; ret
0x000000000046f2d6 : rol ch, cl ; std ; xlatb ; ret
0x000000000043f42f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x000000000047051c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000446de0 : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000446c7c : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000429c94 : rol dword ptr [rax + 0x49], 0x29 ; retf
0x0000000000453718 : rol dword ptr [rax + rcx*2], 0x39 ; retf
0x0000000000453102 : rol dword ptr [rax + rcx*2], 0x39 ; retf 0x820f
0x0000000000435940 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000046ebe4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042a153 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000043eef3 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000425745 : rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x000000000047faa7 : rol dword ptr [rcx + rdi - 0x18], 0x7e ; mov cl, 0xeb ; retf 0x4c90
0x0000000000453aee : rol dword ptr [rcx - 0x77], cl ; ret 0x5a58
0x000000000040192a : rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x0000000000454fee : rol dword ptr [rdx + rdx*8 - 0x157e2a87], 1 ; ret 0
0x000000000046f272 : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042a755 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000413aed : ror byte ptr [r9 + rcx*4 - 0xf], 0x4c ; mov edi, edi ; call r12
0x000000000046ec32 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x46ec79 ; add rax, rdi ; ret
0x0000000000484e22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x484e69 ; add rax, rdi ; ret
0x000000000043f2b7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047029c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000041a220 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041e66e : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000422518 : ror byte ptr [rax + 0x48100454], 0x89 ; retf 0x8348
0x000000000044e430 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x0000000000473910 : ror byte ptr [rax + 0xf], 0x45 ; ret 0x8949
0x000000000045bf0a : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045befb : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000470326 : ror byte ptr [rax + 0xf], cl ; ret
0x0000000000429e8c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042a002 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042a123 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000406c9b : ror byte ptr [rax + 1], 1 ; ret
0x000000000047408b : ror byte ptr [rax + 1], 1 ; retf 0x4866
0x000000000043f2b4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000042a276 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000045fdba : ror byte ptr [rax - 0x73], 0x34 ; ret
0x000000000041d062 : ror byte ptr [rax - 0x73], 0x3c ; ret
0x0000000000485df4 : ror byte ptr [rax - 0x73], 0x3d ; xor eax, 0x83000248 ; ret
0x000000000045d155 : ror byte ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x0000000000429ff2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042a022 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042a012 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000004213ad : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000044b933 : ror byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x000000000041bc00 : ror byte ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000047136f : ror byte ptr [rax - 0x77], 0xe2 ; mov eax, 0x10 ; syscall
0x0000000000412bc9 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000044e3bf : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040f542 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000047e387 : ror byte ptr [rax - 0x77], 1 ; retf 0xfd89
0x0000000000425742 : ror byte ptr [rax - 0x77], cl ; rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x0000000000416095 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4160a6 ; ret
0x0000000000417809 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000471337 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000416e05 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000048dfa5 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000046b933 : ror byte ptr [rax - 0x7d], 1 ; ret 0x8b04
0x0000000000454406 : ror byte ptr [rax - 0x7d], 1 ; rol byte ptr [rax + rcx*2], 0x39 ; ret
0x000000000046b26e : ror byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000040f660 : ror byte ptr [rax - 0x7f], 0xc4 ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048213a : ror byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8545
0x00000000004489f3 : ror byte ptr [rbx + 0x3108247c], 0xc0 ; syscall
0x0000000000457758 : ror byte ptr [rcx + 0x3948fc51], cl ; ret
0x0000000000416466 : ror byte ptr [rcx + 0x63], 4 ; or dword ptr [rcx + rax - 0x28], 0x3e ; jmp rax
0x00000000004534a6 : ror byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; sub byte ptr [rcx - 0x77], cl ; ret
0x000000000046fe48 : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x30] ; call rbx
0x00000000004103aa : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; pop rbp ; ret
0x0000000000413aee : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, edi ; call r12
0x0000000000481f98 : ror byte ptr [rcx - 0x3f], 0xe3 ; and byte ptr [rcx + 9], cl ; ret
0x0000000000462aaa : ror byte ptr [rcx - 0x4ef73], cl ; ljmp [rcx] ; retf 0xda29
0x000000000044736a : ror byte ptr [rcx - 0x765df00f], 1 ; ret 0xe283
0x000000000045f2a1 : ror byte ptr [rcx - 0x77], 4 ; retf 0x4a8d
0x0000000000451208 : ror byte ptr [rcx - 0x77], cl ; retf
0x0000000000455e2c : ror byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000045c202 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004131c2 : ror byte ptr [rdi], 0x11 ; add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x34e9
0x000000000041b1dc : ror byte ptr [rdi], 0x11 ; add byte ptr [rax + 0x39], cl ; ret 0xeb75
0x0000000000419577 : ror byte ptr [rdi], 0x11 ; pop rbx ; ret
0x00000000004493cb : ror byte ptr [rdi], 0x1f ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000045130c : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + 0xf008554], cl ; retf 0x1489
0x000000000044bf00 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000488021 : ror byte ptr [rdi], 0x45 ; ret 0x8964
0x0000000000411841 : ror byte ptr [rdi], 0x84 ; mov dword ptr [rax], 0x89480000 ; ret
0x000000000045a5af : ror byte ptr [rdi], 0x84 ; mov dword ptr [rbx], 0x89480000 ; ret 0x2948
0x0000000000402321 : ror byte ptr [rdi], 0x84 ; nop ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044d041 : ror byte ptr [rdi], 0x84 ; ret
0x000000000041f417 : ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000404c95 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000041f55e : ror byte ptr [rdi], 0x84 ; retf
0x0000000000411940 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000041ef3e : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000045217c : ror byte ptr [rdi], 0x85 ; ret
0x000000000044aad4 : ror byte ptr [rdi], 0x85 ; ret 4
0x000000000041bf2c : ror byte ptr [rdi], 0x85 ; retf
0x000000000042042f : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000044c9c7 : ror byte ptr [rdi], 0x85 ; retf 0xfffe
0x000000000046ed6d : ror byte ptr [rdi], 0x85 ; retf 1
0x0000000000448e5e : ror byte ptr [rdi], 0x88 ; retf
0x0000000000459f58 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000484413 : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000486bd0 : ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000445f99 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040f557 : ror byte ptr [rdi], 1 ; mov dh, 0x11 ; test dl, dl ; jne 0x40f540 ; ret
0x000000000046e372 : ror byte ptr [rdi], 1 ; test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042a1c6 : ror byte ptr [rdi], 1 ; test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x00000000004542a3 : ror byte ptr [rdi], cl ; mov byte ptr [rsi], cl ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000045482b : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000044ecc9 : ror byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x0000000000465431 : ror byte ptr [rdi], cl ; mov dl, dl ; sbb al, 0 ; add dh, dh ; ret 0xf40
0x0000000000404dd1 : ror byte ptr [rdi], cl ; test al, dl ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x000000000046e38a : ror byte ptr [rdi], cl ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000475b4e : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x00000000004114e9 : ror byte ptr [rdx], 1 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3948
0x000000000046e07c : ror byte ptr [rsi], 1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004719be : ror cl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000432e37 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000047a5dc : ror dword ptr [rax + 0x39], 0xd1 ; jne 0x47a5c0 ; mov eax, dword ptr [rcx] ; ret
0x000000000041b716 : ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000043f188 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000043f2a9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046f5ca : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000045cd1d : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045646d : ror dword ptr [rax - 0x75], 1 ; jl 0x45649e ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000004512ee : ror dword ptr [rax - 0x77], 1 ; enter 0xf49, 0x4f ; ret 0x8548
0x0000000000475d75 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x000000000044ba43 : ror dword ptr [rax - 0x77], 1 ; retf 0x3948
0x00000000004826b6 : ror dword ptr [rax - 0x77], 1 ; retf 0x8948
0x0000000000457b6c : ror dword ptr [rax - 0x77], 1 ; retf 0xc148
0x0000000000417725 : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x41771e ; ret
0x000000000046ca1d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x46ca16 ; ret
0x000000000040ee7a : ror dword ptr [rax - 0x7d], 1 ; ret 0x4001
0x00000000004182db : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000429973 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c20
0x0000000000429993 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c40
0x00000000004299b3 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c60
0x0000000000453715 : ror dword ptr [rax - 0x7d], 1 ; rol dword ptr [rax + rcx*2], 0x39 ; retf
0x00000000004869a8 : ror dword ptr [rax], 0x83 ; ret 0x4801
0x0000000000447213 : ror dword ptr [rbp - 0xb869], cl ; dec dword ptr [rax + 0x63] ; ret 0xfac1
0x000000000047e73e : ror dword ptr [rcx + rcx*4 - 0x40], 1 ; ret
0x000000000041a69f : ror dword ptr [rcx - 0x77], 1 ; retf 0x8949
0x000000000042164e : ror dword ptr [rcx], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000443a9b : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004289d4 : ror dword ptr [rdi - 0x73], 0x14 ; or bh, byte ptr [rsi] ; jmp r10
0x0000000000417d84 : ror dword ptr [rdi], 0x11 ; cmp byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000041d73a : ror dword ptr [rdi], 0x11 ; push 0x6e0f4966 ; ret
0x000000000045116d : ror dword ptr [rdi], 0x11 ; ret
0x0000000000493cce : ror dword ptr [rdi], 0x84 ; add dword ptr [rax], r8d ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000449aca : ror dword ptr [rdi], 0x84 ; lar eax, word ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000045d51a : ror dword ptr [rdi], 0x84 ; ret 2
0x000000000042b558 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042bc64 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ba36 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042b9b6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042bcf4 : ror dword ptr [rdi], 0x85 ; je 0x42bd04 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b7eb : ror dword ptr [rdi], 0x85 ; jno 0x42b800 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b8b3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b530 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000474f04 : ror dword ptr [rdi], 0xb6 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000473873 : ror dword ptr [rdi], 1 ; xchg dword ptr [rdi + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d769 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048d29d : ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000417724 : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x41771f ; ret
0x000000000046ca1c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x46ca17 ; ret
0x000000000044831e : sahf ; add al, 0 ; add byte ptr [rax - 0x39], cl ; ret
0x000000000043de9e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000489f10 : sahf ; ret 0x3948
0x000000000045d15b : sahf ; ret 0x3949
0x000000000048ee04 : sahf ; ret 0xf45
0x000000000048a922 : sal bh, 0xd8 ; ret
0x0000000000423f67 : sal bh, 1 ; ret 0x8000
0x0000000000423e27 : sal bh, 1 ; ret 0xc000
0x0000000000423ce7 : sal bh, 1 ; ret 0xe000
0x0000000000423ba7 : sal bh, 1 ; ret 0xf000
0x0000000000423a67 : sal bh, 1 ; ret 0xf800
0x0000000000423927 : sal bh, 1 ; ret 0xfc00
0x00000000004237e7 : sal bh, 1 ; ret 0xfe00
0x00000000004236a7 : sal bh, 1 ; ret 0xff00
0x0000000000423567 : sal bh, 1 ; ret 0xff80
0x0000000000423427 : sal bh, 1 ; ret 0xffc0
0x00000000004232e7 : sal bh, 1 ; ret 0xffe0
0x00000000004231a7 : sal bh, 1 ; ret 0xfff0
0x0000000000423067 : sal bh, 1 ; ret 0xfff8
0x0000000000422f27 : sal bh, 1 ; ret 0xfffc
0x0000000000422de7 : sal bh, 1 ; ret 0xfffe
0x0000000000481a94 : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000493799 : sal byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xc580
0x00000000004847c5 : sal byte ptr [rax + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044c79d : sal byte ptr [rax + rdx + 0x48], cl ; lea edi, [rcx + rsi + 0x20] ; jmp rdx
0x00000000004773ad : sal byte ptr [rax + rsi*2 + 0x48], 0x89 ; ret 0x8b48
0x00000000004101bb : sal byte ptr [rax], 2 ; add byte ptr [rax + 0x39], r9b ; ret
0x0000000000448a5d : sal byte ptr [rbp + 0x10], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046f822 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000044ab84 : sal byte ptr [rbp + 0x3b], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000044abad : sal byte ptr [rbp + 0x7d], 0x49 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000471552 : sal byte ptr [rbp + 0xb], cl ; ret
0x0000000000446bb6 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x0000000000416098 : sal byte ptr [rbp + 5], cl ; ret
0x0000000000484037 : sal byte ptr [rbp + 6], cl ; sub dword ptr [rdi], 1 ; ret
0x00000000004457d0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000417728 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042428b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000042584c : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x0000000000429cd1 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000040f55c : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042a15d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x000000000042a155 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000043eefd : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x000000000043eef5 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004700dc : sal byte ptr [rbp - 0xf], cl ; ret
0x00000000004198c0 : sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004129a2 : sal byte ptr [rbx + rbp*2 + 0x49], 0x2b ; and byte ptr [r8 + 1], r9b ; ret
0x000000000046e8d2 : sal byte ptr [rcx + 0x48], 3 ; add byte ptr [r8 - 0x77], r9b ; ret 0x14eb
0x00000000004744e4 : sal byte ptr [rcx + rbp*2 - 0x75], 5 ; retf
0x000000000043f1fc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000048be7f : sal byte ptr [rcx - 0x73], cl ; dec dword ptr [rbp + r9*4 + 0x74] ; ret
0x000000000041a21e : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000471dd6 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000047b2fa : sal byte ptr [rdi + 0xb], 0x48 ; add esp, 8 ; ret
0x000000000046f52b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000401011 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000043f8c3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000040f45b : sal byte ptr [rdx + rsi*2 + 0x48], 0xc7 ; ret 0xfff0
0x0000000000422b4c : sal byte ptr [rdx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000043f19f : sal byte ptr [rsi + rdi*2 + 0x48], cl ; bsf eax, edx ; ret
0x000000000048c4a3 : sal byte ptr [rsp + 0x48], 1 ; ret 0xb70f
0x000000000047b929 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000047a5df : sal dword ptr [rbp - 0x2a], 1 ; mov eax, dword ptr [rcx] ; ret
0x0000000000493e46 : sal dword ptr [rcx + rcx*4 + 0x48], 0x89 ; ret 0xc148
0x0000000000445ef7 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000403fc0 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000047bc77 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000048a6b5 : sar bh, 0xff ; ret
0x0000000000485152 : sar byte ptr [r8 + 0xd9], 1 ; syscall
0x0000000000493770 : sar byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xc3c0
0x0000000000485153 : sar byte ptr [rax + 0xd9], 1 ; syscall
0x0000000000479ff0 : sar byte ptr [rbp + rbp*8 - 0x15], cl ; ret
0x0000000000486beb : sar byte ptr [rcx + 1], 0xe8 ; retf 0xc
0x0000000000459dde : sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000044a501 : sar byte ptr [rsi + 1], cl ; call r12
0x000000000042c52a : sar byte ptr [rsi], 0x41 ; jmp rcx
0x000000000045b39f : sar byte ptr [rsi], 1 ; jmp r8
0x0000000000401b87 : sar byte ptr [rsi], 1 ; jmp rax
0x0000000000436c37 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x436c42 ; ret
0x000000000047ff75 : sar dword ptr [rcx], cl ; ret 0x4d74
0x000000000044641d : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000048ab5c : sar eax, 3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d9ec : sar ecx, 2 ; lea eax, [rcx - 1] ; ret
0x000000000040e04a : sar edi, 1 ; inc dword ptr [rbx - 0x7af0fe08] ; ret 0xfff2
0x0000000000416ac0 : sar edx, 2 ; call 0x412dc5
0x000000000046da96 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042a278 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004468d7 : sar esi, 1 ; jg 0x446907 ; vzeroupper ; ret
0x0000000000446a62 : sar esi, 1 ; jg 0x446a92 ; vzeroupper ; ret
0x000000000048ab5b : sar rax, 3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d9eb : sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x0000000000416abf : sar rdx, 2 ; call 0x412dc6
0x0000000000416abe : sar rdx, 2 ; call 0x412dc7
0x000000000046da95 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042a277 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000449825 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000465435 : sbb al, 0 ; add dh, dh ; ret 0xf40
0x0000000000401754 : sbb al, 0 ; test al, al ; jne 0x401761 ; ret
0x0000000000490180 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call rax
0x0000000000421d4d : sbb al, 2 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040eef7 : sbb al, 3 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000048f643 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004077c2 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0x1a
0x0000000000408f0b : sbb al, ch ; jmp rbx
0x00000000004936ed : sbb al, ch ; popfq ; ret 0xfff8
0x000000000040b0dc : sbb al, ch ; ret 0xffff
0x0000000000412e58 : sbb al, ch ; ret 9
0x00000000004905af : sbb al, ch ; retf
0x0000000000421ee2 : sbb bh, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; retf 0x3374
0x0000000000414374 : sbb byte ptr [r15], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000047e9c1 : sbb byte ptr [r8 + 0x2b], cl ; sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x000000000041a5bb : sbb byte ptr [r8 + 0x39], cl ; ret
0x000000000047d9c8 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000492ede : sbb byte ptr [r8 - 0x148ad0c8], r8b ; call 0x41f999
0x000000000048440f : sbb byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485a64 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000492537 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e9c2 : sbb byte ptr [rax + 0x2b], cl ; sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x000000000041a5bc : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004887bc : sbb byte ptr [rax + 0x39], cl ; retf
0x000000000041d65b : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000047d9c9 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000044d577 : sbb byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x0000000000492edf : sbb byte ptr [rax - 0x148ad0c8], al ; call 0x41f998
0x00000000004901fa : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000417786 : sbb byte ptr [rax - 0x77], cl ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000041ef49 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047b94c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040419a : sbb byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000403755 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004907b8 : sbb byte ptr [rax - 0x77], cl ; ret 0xe783
0x000000000041297e : sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004889be : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000484410 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485a65 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000485fea : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000448735 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004489b8 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; jne 0x4489d8 ; syscall
0x0000000000490682 : sbb byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; ret
0x000000000041f514 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000041a01c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000412d29 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041944b : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000457b09 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; mov r9, rsi ; mov r10, rcx ; jmp 0x457aca
0x000000000041b71e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000041ccac : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rax
0x000000000040a144 : sbb byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xffd1
0x0000000000447f64 : sbb byte ptr [rcx + rcx*4 - 0x1f], cl ; mov rdx, r13 ; call rbx
0x000000000041044c : sbb byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000048d133 : sbb byte ptr [rcx - 0x3f], cl ; call 0xffffffffcb6a1a72
0x0000000000492538 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004227fc : sbb byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000040f664 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000040282a : sbb byte ptr [rcx], cl ; add al, ch ; mov esi, 0x81000119 ; retf 0x4b0
0x0000000000413373 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000414375 : sbb byte ptr [rdi], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000487076 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404f36 : sbb byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0x8941
0x0000000000451d31 : sbb cl, byte ptr [rax + 0x39] ; retf 0x850f
0x000000000045aee2 : sbb cl, byte ptr [rax - 0x77] ; ret 0x2548
0x000000000044e5b3 : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000043c5dd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e23a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043da5a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043de4a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d66a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d13d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043c91d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043c0fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043d809 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043cc5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043c43d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043bc1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043cdfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043dcfa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d51a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e62a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bf5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043c093 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043cd93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c8b3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dbfb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e52b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d0d3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c3d3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043bef3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043cbf3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043dd4b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d56b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041f222 : sbb cl, byte ptr [rdx] ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000491240 : sbb dh, dh ; ret 0xf01
0x000000000047c7fb : sbb dl, dh ; jmp r11
0x0000000000485956 : sbb dword ptr [rax + 0x39], ecx ; ret 0x830f
0x000000000044bf78 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000040271e : sbb dword ptr [rcx], ecx ; add al, ch ; retf 0x11a
0x00000000004454a7 : sbb eax, -1 ; ret
0x00000000004778c2 : sbb eax, 0x4000003 ; ret
0x0000000000477812 : sbb eax, 0x4000003 ; xor eax, eax ; ret
0x000000000044a772 : sbb eax, 0x7d8b49 ; call rbx
0x000000000047504d : sbb eax, 0x89000003 ; ret 0xe8c0
0x0000000000474703 : sbb eax, 0xac96e801 ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000453fcd : sbb eax, 0xe800044d ; retf 0xfaef
0x000000000040c60e : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000048871a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042a6d7 : sbb eax, eax ; or eax, 1 ; ret
0x0000000000490103 : sbb eax, eax ; ret
0x00000000004454a5 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000487f9a : sbb esi, esi ; and esi, 2 ; syscall
0x0000000000429832 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e28e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000047d07e : scasb al, byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000043e38d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000457fd4 : scasd eax, dword ptr [rdi] ; cli ; dec dword ptr [rcx - 0x77] ; dec dword ptr [rbp - 0x77] ; ret 0x87e9
0x0000000000412870 : scasd eax, dword ptr [rdi] ; ret
0x00000000004126b0 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447415 : scasd eax, dword ptr [rdi] ; ret 0x518d
0x000000000047a729 : scasd eax, dword ptr [rdi] ; ret 0x8348
0x000000000041b719 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000447429 : scasd eax, dword ptr [rdi] ; ret 0xcfe9
0x000000000044741b : scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000464459 : scasd eax, dword ptr [rdi] ; sti ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000401751 : seta al ; sbb al, 0 ; test al, al ; jne 0x401764 ; ret
0x000000000041a224 : setae al ; ret
0x000000000045c1da : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000042a174 : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000049374a : shl byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xb240
0x00000000004937eb : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xc340
0x00000000004937c2 : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xc600
0x0000000000493814 : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xcb40
0x000000000049383d : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xcba0
0x0000000000493866 : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xcc20
0x000000000049388f : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xcce0
0x00000000004938b8 : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xcd60
0x00000000004938e1 : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xcdc0
0x0000000000493721 : shl byte ptr [rax + 0x4e], 0xb4 ; dec dword ptr [rax - 0x39] ; ret 0xce80
0x000000000042a136 : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000004456ef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000475f6c : shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf
0x000000000041be1a : shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; retf 0xf66
0x0000000000476445 : shl byte ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; shl dword ptr [rsi + 0xf], cl ; insb byte ptr [rdi], dx ; ret 0x290f
0x0000000000422bcf : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000443a97 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000043eac5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042beeb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000048a715 : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x110f
0x000000000047ca79 : shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x000000000042bf02 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000046f0c6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000046f0d7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042bde1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044deab : shl byte ptr [rsp + rax - 0x76b400], 1 ; call 0x42a189
0x0000000000429b98 : shl dword ptr [rax + 0x49], 0x39 ; retf
0x000000000047b26b : shl dword ptr [rax + 4], 0 ; ret
0x00000000004456d2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000047ca74 : shl dword ptr [rsi + 0x48], 0xf ; outsb dx, byte ptr [rsi] ; shl byte ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0xf41
0x0000000000422bd3 : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000046f0c2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000044554f : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042be66 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bf1d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042bf06 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042beef : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042a9ab : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042be81 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000429ecc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000047644a : shl dword ptr [rsi + 0xf], cl ; insb byte ptr [rdi], dx ; ret 0x290f
0x000000000041a17c : shl dword ptr [rsi + 0xf], cl ; insb byte ptr [rdi], dx ; ret 0x4d83
0x000000000042bd41 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044e2e7 : shl eax, cl ; ret
0x000000000044e2e2 : shl ecx, 3 ; pop r12 ; shl eax, cl ; ret
0x00000000004886b5 : shl ecx, 3 ; sub rdx, rcx ; jmp 0x4886ce
0x0000000000488e9c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000488e1b : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000488dea : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000487336 : shl edx, 5 ; add rdx, rax ; jmp 0x487352
0x0000000000488e9b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000488e1a : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000488de9 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004886b4 : shl rcx, 3 ; sub rdx, rcx ; jmp 0x4886cf
0x0000000000487335 : shl rdx, 5 ; add rdx, rax ; jmp 0x487353
0x00000000004842cb : shr al, 0x6f ; retf 0xfff8
0x00000000004841ba : shr al, 0x80 ; retf
0x000000000047d748 : shr al, 0xe2 ; retf
0x000000000048b51b : shr al, cl ; lahf ; ret
0x000000000045b8fb : shr al, cl ; outsd dx, dword ptr [rsi] ; retf 0xfffe
0x00000000004854e1 : shr bl, 0xcf ; nop dword ptr [rax] ; call rax
0x0000000000456080 : shr bl, 1 ; ret 0x1f0f
0x000000000042428f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000459118 : shr byte ptr [rcx], cl ; ret
0x000000000042a27c : shr byte ptr [rcx], cl ; rol bl, 1 ; xor eax, eax ; ret
0x000000000046fc3e : shr byte ptr [rdx + 1], cl ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000461771 : shr dword ptr [rcx], cl ; ret
0x00000000004470cb : shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x000000000047018b : shr eax, 2 ; ret
0x0000000000470643 : shr eax, 2 ; vzeroupper ; ret
0x0000000000447116 : shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x000000000041dd3f : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000488fac : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000488f35 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000488f04 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048eb50 : shr ecx, cl ; ret 0xfffc
0x00000000004605e5 : shr ecx, cl ; retf 0xfff0
0x0000000000488fab : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000488f34 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000488f03 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047018a : shr rax, 2 ; ret
0x0000000000470642 : shr rax, 2 ; vzeroupper ; ret
0x000000000043f765 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000454ae6 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000004297e7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000468f0b : stc ; add cl, byte ptr [rcx + 0x29] ; retf 0xf4c
0x0000000000487e24 : stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xfb83
0x00000000004712b4 : stc ; add dword ptr [rdi + 0x30], esi ; mov eax, 0x106 ; syscall
0x00000000004844b3 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000470318 : stc ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000465ce3 : stc ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000466e15 : stc ; dec dword ptr [rax - 0x77] ; ret 0xc9e9
0x000000000043d342 : stc ; je 0x43d30f ; lea r10, [r10 + r9] ; jmp r10
0x000000000046b3d4 : stc ; jmp rcx
0x000000000046de5c : stc ; lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004439df : stc ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000042e7d8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427f07 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042134e : stc ; or dword ptr [rax], eax ; add dword ptr [rax - 0x77], ecx ; ret 0x3174
0x000000000041dbc3 : stc ; or ecx, dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004886b3 : stc ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x4886d0
0x0000000000437138 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043f79f : stc ; vzeroupper ; ret
0x000000000042a757 : stc ; xlatb ; ret 0xff2d
0x000000000040f936 : std ; add r15, rbx ; call rax
0x0000000000450852 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000047d832 : std ; jbe 0x47d843 ; ret
0x0000000000459c6c : std ; je 0x459c8c ; pop rbx ; ret
0x0000000000421e77 : std ; lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004439bb : std ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000043f787 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x0000000000448b97 : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000042dffb : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000422a4f : std ; push 1 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000445e8c : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000045b86b : std ; test rax, rax ; je 0x45b879 ; call rax
0x000000000043f78b : std ; vzeroupper ; ret
0x000000000042a161 : std ; xlatb ; ret
0x000000000042a159 : std ; xlatb ; ret 0xc085
0x000000000042a597 : std ; xlatb ; ret 0xe883
0x00000000004255d3 : std ; xlatb ; retf
0x00000000004255fb : std ; xlatb ; retf 0xc985
0x000000000046f278 : std ; xlatb ; retf 0xfdc5
0x000000000046f2d4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041241d : sti ; add byte ptr [r8 - 0x39], cl ; ret
0x00000000004612c5 : sti ; add byte ptr [r8 - 0x77], cl ; ret 0x8148
0x0000000000452c61 : sti ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3775
0x0000000000401c69 : sti ; add r15b, dil ; loopne 0x401cdc ; nop ; ret
0x0000000000448287 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004923e5 : sti ; dec dword ptr [rax - 0x7d] ; ret
0x000000000046435a : sti ; dec dword ptr [rcx - 0x77] ; ret
0x000000000042e3d8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004229a1 : sti ; xor al, 2 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044843a : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x0000000000446bc8 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041bbd2 : stosb byte ptr [rdi], al ; nop dword ptr [rax + rax] ; call rax
0x00000000004229d2 : stosb byte ptr [rdi], al ; or al, 2 ; add byte ptr [rax + 0x39], cl ; retf 0x2974
0x0000000000403b72 : stosb byte ptr [rdi], al ; retf
0x000000000044d730 : stosd dword ptr [rdi], eax ; add al, 0 ; mov rdi, r15 ; call 0x42a188
0x000000000041dd44 : stosd dword ptr [rdi], eax ; pop rbp ; ret
0x000000000046fd41 : stosd dword ptr [rdi], eax ; ret 0xfffd
0x0000000000475530 : stosd dword ptr [rdi], eax ; ret 4
0x0000000000484439 : stosd dword ptr [rdi], eax ; retf
0x000000000047b8f9 : stosd dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000041dd43 : stosq qword ptr [rdi], rax ; pop rbp ; ret
0x0000000000482845 : sub al, 0x29 ; ret 0x8341
0x0000000000446e06 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000407360 : sub al, 0x86 ; add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x000000000042b533 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000405090 : sub al, 0xb7 ; or eax, dword ptr [rax] ; syscall
0x000000000042a8f5 : sub al, ch ; std ; xlatb ; ret
0x00000000004492ed : sub bh, byte ptr [rax + 0x48] ; syscall
0x000000000045e622 : sub byte ptr [r15 + rcx - 0x4a], r8b ; ret
0x0000000000473f77 : sub byte ptr [r8 + 0x39], r9b ; ret 0x870f
0x000000000047e9c5 : sub byte ptr [r9 + r9*4 + 4], cl ; ret 0x8b4c
0x000000000044c153 : sub byte ptr [r9], r8b ; ret
0x0000000000473f78 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004522eb : sub byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000040b259 : sub byte ptr [rax + rax], cl ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0xb
0x000000000044a63f : sub byte ptr [rax - 0x75], cl ; jge 0x44a649 ; call rbx
0x000000000046bc6c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000467d99 : sub byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044e477 : sub byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004908fd : sub byte ptr [rbp + 1], cl ; ret 0x394c
0x0000000000404e4a : sub byte ptr [rbp + 9], al ; ret
0x0000000000476c10 : sub byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x0000000000447e03 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004886d8 : sub byte ptr [rbx - 0x1b], dh ; mov eax, 1 ; ret
0x00000000004886d7 : sub byte ptr [rbx - 0x1b], sil ; mov eax, 1 ; ret
0x000000000047e9c6 : sub byte ptr [rcx + rcx*4 + 4], cl ; ret 0x8b4c
0x0000000000420e64 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000041105c : sub byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000004534ab : sub byte ptr [rcx - 0x77], cl ; ret
0x000000000044c154 : sub byte ptr [rcx], al ; ret
0x000000000045e623 : sub byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000000000480425 : sub byte ptr [rdx], al ; add byte ptr [rax - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x2948
0x0000000000414a5b : sub byte ptr [rdx], al ; add byte ptr [rax - 0x77], r9b ; ret 0x294c
0x00000000004157b4 : sub byte ptr [rdx], al ; add byte ptr [rax - 0x77], r9b ; ret 0x294d
0x0000000000406b54 : sub byte ptr [rsi - 0x76b70001], ah ; ret 0xf748
0x0000000000414c4b : sub cl, byte ptr [rax + 1] ; ret 0x4866
0x000000000046fd3a : sub cl, ch ; mov esi, 0xe8fffffe ; stosd dword ptr [rdi], eax ; ret 0xfffd
0x000000000045eea9 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000048ec47 : sub dh, bh ; dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0xef89
0x000000000047c00e : sub dl, dh ; call r11
0x000000000042c584 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042c580 : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000048403a : sub dword ptr [rdi], 1 ; ret
0x000000000042c62e : sub dword ptr [rdi], esp ; jmp r9
0x000000000048ec46 : sub dword ptr [rdx], -9 ; dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0xef89
0x000000000041e07c : sub dword ptr [rip + 0xa073d], 1 ; pop rbp ; ret
0x000000000041f21f : sub dword ptr [rip + 0xa1aba], 1 ; pop rbx ; ret
0x000000000041983c : sub dword ptr [rip + 0xa742d], 1 ; ret
0x0000000000417070 : sub dword ptr [rip + 0xa9bf9], 1 ; ret
0x0000000000428bb7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042bd16 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000428a71 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040f601 : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042a687 : sub eax, -1 ; jne 0x42a698 ; vzeroupper ; ret
0x00000000004213da : sub eax, 0x10 ; ret
0x000000000041983e : sub eax, 0x1000a74 ; ret
0x000000000047d4f3 : sub eax, 0x3349646c ; add byte ptr [rax + 9], cl ; ret 0x2875
0x000000000047dc16 : sub eax, 0x58c48348 ; ret
0x000000000044d191 : sub eax, 0x8948fffc ; ret
0x0000000000422716 : sub eax, 0xf480002 ; ret 0x66c3
0x000000000041d34f : sub eax, 0xf6000003 ; ret 0xf01
0x0000000000459c7c : sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000041897b : sub eax, 1 ; ret
0x000000000047d87a : sub eax, dword ptr [0] ; ret
0x0000000000403253 : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045ee59 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000004476f0 : sub eax, dword ptr [rcx + r8*4] ; je 0x4476de ; ret
0x00000000004476f1 : sub eax, dword ptr [rcx + rax*4] ; je 0x4476dd ; ret
0x000000000041a1d2 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044a837 : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000419427 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048a7c3 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000047cfc6 : sub eax, eax ; ret
0x000000000042a6d3 : sub eax, ecx ; je 0x42a6e9 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000048a695 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000423fcc : sub eax, ecx ; ret
0x0000000000418979 : sub eax, ecx ; sub eax, 1 ; ret
0x000000000042584f : sub eax, ecx ; vzeroupper ; ret
0x000000000043f2b9 : sub eax, edi ; ret
0x000000000047029e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000415681 : sub eax, edx ; pop rbp ; pop r12 ; ret
0x000000000041944f : sub eax, edx ; ret
0x0000000000470640 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000425552 : sub eax, edx ; vzeroupper ; ret
0x000000000047cfc5 : sub eax, r8d ; ret
0x0000000000483e07 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004895d2 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046f824 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000046d9e9 : sub ecx, eax ; sar rcx, 2 ; lea eax, [rcx - 1] ; ret
0x00000000004886b2 : sub ecx, edi ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x4886d1
0x000000000044937c : sub edi, dword ptr [rax + 0x48] ; syscall
0x0000000000419458 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000419449 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000046da92 : sub edx, dword ptr [rcx + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000046daa4 : sub edx, dword ptr [rcx + 8] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000479fec : sub edx, eax ; cmp rdx, r10 ; jl 0x479fe8 ; jmp 0x479fc0
0x000000000046ec34 : sub edx, eax ; jbe 0x46ec77 ; add rax, rdi ; ret
0x000000000046ec44 : sub edx, eax ; jbe 0x46ec79 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000046ec54 : sub edx, eax ; jbe 0x46ec79 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000046ec64 : sub edx, eax ; jbe 0x46ec79 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000484e24 : sub edx, eax ; jbe 0x484e67 ; add rax, rdi ; ret
0x0000000000484e34 : sub edx, eax ; jbe 0x484e69 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000484e44 : sub edx, eax ; jbe 0x484e69 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000484e54 : sub edx, eax ; jbe 0x484e69 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000043f6f9 : sub edx, ecx ; jmp 0x43f69a
0x0000000000443919 : sub edx, ecx ; jmp 0x4438ba
0x00000000004886b9 : sub edx, ecx ; jmp 0x4886ca
0x000000000047ca0b : sub edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000445a78 : sub edx, esi ; cmp edx, ecx ; jle 0x445a9d ; movsxd rax, ecx ; ret
0x0000000000414c1d : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbp ; call rax
0x0000000000416abd : sub edx, esi ; sar rdx, 2 ; call 0x412dc8
0x0000000000493f05 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000044d190 : sub rax, -0x76b70004 ; ret
0x00000000004213d9 : sub rax, 0x10 ; ret
0x0000000000445923 : sub rax, 1 ; ret
0x000000000047d879 : sub rax, qword ptr [0] ; ret
0x000000000041a1d1 : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000047d878 : sub rax, qword ptr fs:[0] ; ret
0x0000000000418978 : sub rax, rcx ; sub eax, 1 ; ret
0x000000000043f2b8 : sub rax, rdi ; ret
0x000000000047029d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000415680 : sub rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000445a03 : sub rax, rdx ; ret
0x000000000043f31f : sub rax, rdx ; vzeroupper ; ret
0x00000000004886b1 : sub rcx, rdi ; shl rcx, 3 ; sub rdx, rcx ; jmp 0x4886d2
0x0000000000479feb : sub rdx, rax ; cmp rdx, r10 ; jl 0x479fe9 ; jmp 0x479fc1
0x000000000046ec33 : sub rdx, rax ; jbe 0x46ec78 ; add rax, rdi ; ret
0x0000000000484e23 : sub rdx, rax ; jbe 0x484e68 ; add rax, rdi ; ret
0x00000000004886b8 : sub rdx, rcx ; jmp 0x4886cb
0x0000000000416abc : sub rdx, rsi ; sar rdx, 2 ; call 0x412dc9
0x0000000000493f04 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004012d3 : syscall
0x000000000044d98d : sysenter
0x0000000000418796 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040febb : test al, 0 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048d57c : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000471198 : test al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000048f7e7 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000041f330 : test al, 0x19 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449ed1 : test al, 0x45 ; mov edi, ebp ; call rax
0x0000000000401756 : test al, al ; jne 0x40175f ; ret
0x000000000042428a : test al, al ; jne 0x424278 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004474e7 : test al, al ; jne 0x4473ae ; jmp 0x4474c5
0x000000000047cf3c : test al, al ; jne 0x47cf17 ; movsx eax, dl ; neg eax ; ret
0x0000000000404dd3 : test al, dl ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x448b
0x0000000000411843 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045a5b1 : test bh, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000047a122 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045dcd6 : test byte ptr [rax + 0xf], 0x44 ; ret 0x13eb
0x00000000004746cf : test byte ptr [rax + rax - 0x58180000], al ; retf 0xfff8
0x0000000000473d50 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000046775c : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000046179b : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000046a92b : test byte ptr [rax + rbx], ah ; add dword ptr [rax], eax ; add al, ch ; retf 0xffcc
0x000000000047350c : test byte ptr [rax + rdi*4], ah ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004900a2 : test byte ptr [rax - 0x77], 0xdf ; call r15
0x000000000041e01e : test byte ptr [rax - 0x77], 0xef ; call 0x41a306
0x0000000000479978 : test byte ptr [rax - 0x7d], 0xe8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004071f9 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048ca0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000442cea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000421ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x000000000048787a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000044c7aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004476fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000443aaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004746d0 : test byte ptr [rax], al ; add byte ptr [rax], al ; call 0x401186
0x00000000004542b1 : test byte ptr [rbp + rax], al ; add bh, dh ; ret 0
0x000000000048e92c : test byte ptr [rcx + 0x63], 4 ; mov ah, 0x4c ; add eax, esp ; jmp rax
0x000000000048e8ef : test byte ptr [rcx + 0x63], 4 ; mov cl, 0x4c ; add eax, ecx ; jmp rax
0x000000000048f070 : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000004221c4 : test byte ptr [rcx + rax - 0x7cb80000], dh ; ret 0xe901
0x0000000000493cd0 : test byte ptr [rcx + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004284c6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428ca6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004277d6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046e374 : test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000428bb6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x00000000004274f6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000476c13 : test byte ptr [rdi], 0x84 ; ret
0x000000000049264e : test byte ptr [rdi], 0x84 ; retf
0x00000000004213aa : test byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000449acc : test byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000004052b8 : test byte ptr [rdx + 0xf000001], ah ; retf 0xd289
0x000000000041bbc0 : test byte ptr [rdx + rcx], dh ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000048779a : test byte ptr [rip + 0x3a03f], 0x40 ; jne 0x4877b1 ; ret
0x000000000042277f : test byte ptr [rip + 0x9e61f], 1 ; je 0x42274a ; ret
0x000000000046f4bd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000046c0d8 : test byte ptr [rsi - 0x74fffffe], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000046e38c : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000416616 : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x00000000004297e6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427f06 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000429606 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427c26 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000425ca6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000425fa6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000426ea6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004296f6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000426ba6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004268a6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004265a6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428636 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000429516 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047d03a : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x25], cl ; ret 0x447
0x000000000047a747 : test cl, cl ; cmove r8, rax ; mov rax, r8 ; ret
0x00000000004455af : test cl, cl ; jne 0x4455a4 ; ret
0x000000000044565f : test cl, cl ; jne 0x445654 ; ret
0x000000000044591f : test cl, cl ; jne 0x445918 ; sub rax, 1 ; ret
0x0000000000474c51 : test dh, dh ; jne 0x474c35 ; jmp 0x474c1f
0x0000000000443af4 : test dl, 0x40 ; jne 0x443ab9 ; lea rax, [rdi + 7] ; ret
0x0000000000443b22 : test dl, 4 ; jne 0x443ab9 ; lea rax, [rdi + 3] ; ret
0x0000000000411942 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f55b : test dl, dl ; jne 0x40f53c ; ret
0x00000000004457cf : test dl, dl ; jne 0x4457c8 ; lea rax, [rcx - 1] ; ret
0x000000000044aa7c : test dword ptr [rax + 0x49000002], ecx ; mov edi, dword ptr [rdi] ; call rbx
0x000000000044ab30 : test dword ptr [rax + 0x49000002], esi ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004727bf : test dword ptr [rax + rax - 0x7cb80000], eax ; ret
0x000000000042a1c8 : test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x000000000044cd69 : test dword ptr [rax - 0x75], 0x83481042 ; ret 0x4810
0x0000000000449ecd : test dword ptr [rax - 0x75], 0x8945a845 ; out dx, eax ; call rax
0x000000000041ea8b : test dword ptr [rax - 0x77], 0xe8082454 ; retf 0xffbe
0x0000000000464a4a : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000476390 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x860f
0x000000000048e77a : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d5c2 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045f6fd : test dword ptr [rax], eax ; idiv edi ; jmp qword ptr [rax]
0x000000000045f871 : test dword ptr [rax], edx ; idiv edi ; inc dword ptr [rcx] ; ret
0x000000000048e779 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d5c1 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x0000000000478ee4 : test dword ptr [rbp + 0x39000002], edi ; retf 0x850f
0x000000000044a746 : test dword ptr [rbp + 0x49000000], esp ; mov edi, dword ptr [rbp] ; call rbx
0x000000000044a806 : test dword ptr [rbp + 0x49000002], esi ; mov edi, dword ptr [rsi] ; call rbx
0x000000000048a343 : test dword ptr [rbp], edi ; add byte ptr [rax], al ; leave ; ret
0x000000000046ebb8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000042b817 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042bc66 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042a8e8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000047e2d1 : test dword ptr [rbx], 0x358d4800 ; ret
0x000000000044a836 : test dword ptr [rbx], ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000044a866 : test dword ptr [rcx + 0x49000001], esp ; mov edi, dword ptr [rsi] ; call rbx
0x000000000044a9f5 : test dword ptr [rcx + 4], ebx ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000042b7ed : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b6fd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b60d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044e8f6 : test dword ptr [rcx], 0xa845c600 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044a917 : test dword ptr [rdi + 3], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000451be9 : test dword ptr [rdi], 0x33486 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000044a7a6 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000044a7d6 : test dword ptr [rdi], edi ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x000000000044aa22 : test dword ptr [rdx + 6], edx ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call rbx
0x000000000042b532 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a716 : test dword ptr [rip + 0x49000001], esi ; mov edi, dword ptr [rbp] ; call rbx
0x000000000044aaa9 : test dword ptr [rip + 0x49000007], edx ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000468cb7 : test dword ptr [rip - 0x76b6fffb], esi ; retf
0x000000000046f2a3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000041d34e : test dword ptr [rip - 0x9fffffd], ebp ; ret 0xf01
0x0000000000445332 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004474ea : test dword ptr [rsi - 0x14000002], esi ; retf
0x000000000042ba38 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x000000000041c8a3 : test eax, 0x39000a1e ; ret 0xa7e
0x00000000004316e6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044beff : test eax, eax ; cmove eax, edx ; ret
0x0000000000401010 : test eax, eax ; je 0x40101a ; call rax
0x0000000000401c63 : test eax, eax ; je 0x401c79 ; mov edi, 0x4bfb30 ; jmp rax
0x0000000000401ca5 : test eax, eax ; je 0x401cb9 ; mov edi, 0x4bfb30 ; jmp rax
0x00000000004298b8 : test eax, eax ; je 0x4298c4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044968c : test eax, eax ; je 0x449695 ; ret
0x000000000044d48a : test eax, eax ; je 0x44d494 ; ret
0x0000000000450f4e : test eax, eax ; je 0x450f5c ; ret
0x000000000045a472 : test eax, eax ; je 0x45a47c ; call rax
0x000000000045a708 : test eax, eax ; je 0x45a712 ; call rax
0x000000000045b86d : test eax, eax ; je 0x45b877 ; call rax
0x00000000004847c4 : test eax, eax ; je 0x4847d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049003c : test eax, eax ; je 0x490059 ; mov edi, 1 ; jmp rax
0x00000000004936a4 : test eax, eax ; je 0x4936ae ; call rax
0x0000000000493979 : test eax, eax ; je 0x493988 ; call rax
0x0000000000418674 : test eax, eax ; jne 0x41866c ; ret
0x000000000041940c : test eax, eax ; jne 0x419404 ; ret
0x000000000042584b : test eax, eax ; jne 0x425839 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000429cd0 : test eax, eax ; jne 0x429cb9 ; sub eax, ecx ; vzeroupper ; ret
0x00000000004489bc : test eax, eax ; jne 0x4489d4 ; syscall
0x0000000000448a5c : test eax, eax ; jne 0x448a79 ; mov eax, 1 ; syscall
0x000000000044ab83 : test eax, eax ; jne 0x44abc9 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044abac : test eax, eax ; jne 0x44ac34 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000046ebe5 : test eax, eax ; jne 0x46ec46 ; xor eax, eax ; ret
0x000000000046ee61 : test eax, eax ; jne 0x46ee89 ; xor eax, eax ; vzeroupper ; ret
0x0000000000484dd5 : test eax, eax ; jne 0x484e36 ; xor eax, eax ; ret
0x0000000000485051 : test eax, eax ; jne 0x485079 ; xor eax, eax ; vzeroupper ; ret
0x0000000000491836 : test eax, eax ; jne 0x491844 ; ret
0x0000000000491a76 : test eax, eax ; jne 0x491a84 ; ret
0x0000000000465def : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfb80
0x0000000000414bbe : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000045f9f9 : test eax, edi ; idiv bh ; call qword ptr [rax]
0x000000000048d71f : test eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; out 0x77, eax ; retf
0x000000000044a6e6 : test ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x44a6f8 ; call rbx
0x000000000044a67d : test ebp, ebp ; jne 0x44a6d8 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000044a6ad : test ebp, ebp ; jne 0x44a738 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000479ebe : test ebp, ecx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000046eb20 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004924bb : test ebx, ebx ; jne 0x4924a5 ; pop rbx ; ret
0x00000000004925d3 : test ebx, ebx ; jne 0x4925c2 ; pop rbx ; ret
0x00000000004939fc : test ebx, ebx ; jne 0x4939e8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004209d8 : test ebx, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044a896 : test ecx, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call rbx
0x0000000000443ae2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000042040c : test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044998b : test edi, edi ; jne 0x4499be ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000044a8bf : test edi, edi ; jne 0x44a908 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a8eb : test edi, edi ; jne 0x44a95f ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004206e1 : test edx, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043f156 : test edx, edx ; je 0x43f165 ; bsf eax, edx ; ret
0x000000000043f1fb : test edx, edx ; je 0x43f218 ; bsf rax, rdx ; ret
0x000000000043f19e : test edx, edx ; je 0x43f228 ; bsf rax, rdx ; ret
0x000000000044c79c : test edx, edx ; je 0x44c7b9 ; lea rdi, [rcx + rsi + 0x20] ; jmp rdx
0x000000000046f52a : test edx, edx ; je 0x46f558 ; bsf rax, rdx ; ret
0x0000000000416097 : test edx, edx ; jne 0x4160a4 ; ret
0x0000000000417727 : test edx, edx ; jne 0x41771c ; ret
0x0000000000446bb5 : test edx, edx ; jne 0x446bc4 ; mov rax, rdi ; ret
0x000000000046ca1f : test edx, edx ; jne 0x46ca14 ; ret
0x00000000004700db : test edx, edx ; jne 0x4700d4 ; ret
0x0000000000471551 : test edx, edx ; jne 0x471564 ; ret
0x0000000000484036 : test edx, edx ; jne 0x484047 ; sub dword ptr [rdi], 1 ; ret
0x0000000000443ad5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004071f8 : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045dcd5 : test esi, esi ; cmove rax, rdx ; jmp 0x45dcf5
0x0000000000421358 : test esi, esi ; je 0x421370 ; lea rax, [rax - 0x10] ; ret
0x0000000000459c44 : test esi, esi ; je 0x459c59 ; cmp esi, 3 ; je 0x459c59 ; ret
0x000000000044a572 : test esi, esi ; jne 0x44a589 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a76f : test esi, esi ; jne 0x44a798 ; mov rdi, qword ptr [r13] ; call rbx
0x000000000046f425 : test esi, esi ; jne 0x46f434 ; xor rax, rax ; ret
0x00000000004700e5 : test esi, esi ; jne 0x4700f4 ; xor rax, rax ; ret
0x0000000000443aef : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000464e71 : test esp, ecx ; idiv bh ; jmp qword ptr [rax]
0x000000000044a63c : test esp, esp ; jne 0x44a670 ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000044a63b : test r12, r12 ; jne 0x44a671 ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000044a67c : test r13, r13 ; jne 0x44a6d9 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000044a6ac : test r13, r13 ; jne 0x44a739 ; mov rdi, qword ptr [r12] ; call rbx
0x000000000044a76e : test r14, r14 ; jne 0x44a799 ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044a8be : test r15, r15 ; jne 0x44a909 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044a8ea : test r15, r15 ; jne 0x44a960 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000044ab82 : test r8, r8 ; jne 0x44abca ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044abab : test r8, r8 ; jne 0x44ac35 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004298b7 : test r8d, r8d ; je 0x4298c5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000040100f : test rax, rax ; je 0x40101b ; call rax
0x000000000044968b : test rax, rax ; je 0x449696 ; ret
0x000000000045a471 : test rax, rax ; je 0x45a47d ; call rax
0x000000000045a707 : test rax, rax ; je 0x45a713 ; call rax
0x000000000045b86c : test rax, rax ; je 0x45b878 ; call rax
0x00000000004847c3 : test rax, rax ; je 0x4847d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004936a3 : test rax, rax ; je 0x4936af ; call rax
0x0000000000493978 : test rax, rax ; je 0x493989 ; call rax
0x0000000000418673 : test rax, rax ; jne 0x41866d ; ret
0x000000000041940b : test rax, rax ; jne 0x419405 ; ret
0x00000000004924ba : test rbx, rbx ; jne 0x4924a6 ; pop rbx ; ret
0x00000000004925d2 : test rbx, rbx ; jne 0x4925c3 ; pop rbx ; ret
0x00000000004939fb : test rbx, rbx ; jne 0x4939e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044998a : test rdi, rdi ; jne 0x4499bf ; mov rdi, qword ptr [rbp] ; call rbx
0x000000000043f1fa : test rdx, rdx ; je 0x43f219 ; bsf rax, rdx ; ret
0x000000000043f19d : test rdx, rdx ; je 0x43f229 ; bsf rax, rdx ; ret
0x000000000046f529 : test rdx, rdx ; je 0x46f559 ; bsf rax, rdx ; ret
0x0000000000416096 : test rdx, rdx ; jne 0x4160a5 ; ret
0x0000000000417726 : test rdx, rdx ; jne 0x41771d ; ret
0x0000000000446bb4 : test rdx, rdx ; jne 0x446bc5 ; mov rax, rdi ; ret
0x000000000046ca1e : test rdx, rdx ; jne 0x46ca15 ; ret
0x0000000000421357 : test rsi, rsi ; je 0x421371 ; lea rax, [rax - 0x10] ; ret
0x000000000046f424 : test rsi, rsi ; jne 0x46f435 ; xor rax, rax ; ret
0x00000000004700e4 : test rsi, rsi ; jne 0x4700f5 ; xor rax, rax ; ret
0x0000000000474c50 : test sil, sil ; jne 0x474c36 ; jmp 0x474c20
0x0000000000436cce : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446290 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000043f7be : vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x0000000000445c19 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446e15 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000445c1d : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044641c : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x00000000004464c3 : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000436cba : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000436ca1 : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043f7de : vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x00000000004461e9 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000446d7f : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000446367 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000446339 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000446d06 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000445c0f : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000445c13 : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004468d6 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000044699c : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000446e91 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000445c28 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000445c2c : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000436fd7 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000436e70 : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000436c72 : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000436c36 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000437139 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000445dcc : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000445d2f : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000445bce : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000449c0c : vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf] ; lahf ; ret
0x0000000000425554 : vzeroupper ; ret
0x000000000046eee0 : vzeroupper ; xor eax, eax ; ret
0x00000000004170a1 : wait ; or al, byte ptr [rax] ; syscall
0x00000000004031e1 : wait ; ret
0x0000000000492ef1 : wait ; retf 0xfff8
0x0000000000422b11 : wait ; xor eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000428f03 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043c5df : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428ff3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428e13 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043e23c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043da5c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043de4c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d66c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048d58e : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000048d57b : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000048d5da : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x00000000004470a2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042985b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043d13f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043c91f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043c0ff : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004293b3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043d80b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043cc5f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428b43 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043c43f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043bc1f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043cdff : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000429593 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428d23 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000045e982 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000429773 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043dcfc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d51c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e62c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429683 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043bf5f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428fc5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004290b5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428ed5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000482b9c : xchg byte ptr [rsi + rcx - 0x76b80000], bh ; retf 0x30be
0x000000000043c095 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043cd95 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c8b5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dbfd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e52d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428c33 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000043593f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043d0d5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c3d5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043bef5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043cbf5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043dd4d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d56d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428de5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428c05 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428cf5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428b15 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000454467 : xchg dword ptr [rax + 0x39480000], esp ; ret
0x000000000046b335 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000467ceb : xchg dword ptr [rax - 0x76ffffe6], ecx ; ret 0xc083
0x00000000004618e3 : xchg dword ptr [rax - 0x76ffffe8], ecx ; ret 0xc083
0x00000000004627f9 : xchg dword ptr [rax - 0x76fffff1], esp ; ret 0xc083
0x00000000004631b4 : xchg dword ptr [rax - 0x76fffff5], esi ; ret 0xc083
0x0000000000477f82 : xchg dword ptr [rax], edx ; add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000469cf5 : xchg dword ptr [rbp - 0x76fffff8], esp ; ret 0xc083
0x0000000000462ff2 : xchg dword ptr [rbx - 0x76fffff7], esp ; ret 0xc083
0x00000000004637f0 : xchg dword ptr [rbx - 0x76fffff9], esp ; ret 0xc083
0x000000000046991c : xchg dword ptr [rcx - 0x76fffffa], esp ; ret 0xc083
0x0000000000463ceb : xchg dword ptr [rcx - 0x76fffffe], edi ; ret 0xc083
0x00000000004105e5 : xchg dword ptr [rcx], edx ; or eax, dword ptr [rax] ; syscall
0x0000000000473875 : xchg dword ptr [rdi + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046a1f6 : xchg dword ptr [rdx - 0x76fffffd], eax ; ret 0xc083
0x000000000047504c : xchg dword ptr [rip - 0x76fffffd], ebx ; ret 0xe8c0
0x00000000004637c3 : xchg dword ptr [rsi - 0x76fffff9], ebp ; ret 0xc083
0x0000000000413fd5 : xchg dword ptr [rsi - 0x76ffffff], ebp ; ret 0xc083
0x0000000000487d5f : xchg eax, ebp ; add al, 0 ; add bl, ch ; ret
0x00000000004735f7 : xchg eax, ebp ; add byte ptr [rcx + rax - 0x16], cl ; jmp rdx
0x0000000000460835 : xchg eax, ebp ; clc ; idiv bh ; dec dword ptr [rax + 0x39] ; ret 0x850f
0x0000000000417695 : xchg eax, ebp ; or al, byte ptr [rax] ; syscall
0x000000000048d1c8 : xchg eax, ebp ; ret 0x145
0x0000000000479417 : xchg eax, ebp ; ret 0x2148
0x000000000046b9cb : xchg eax, ebp ; ret 0x5389
0x000000000041dac2 : xchg eax, ebp ; ret 0x8348
0x0000000000448c6d : xchg eax, ebp ; ret 0x8948
0x000000000044d0d9 : xchg eax, ebp ; ret 0x8d48
0x000000000041d76b : xchg eax, ebp ; ret 0xb60f
0x000000000048d272 : xchg eax, ebp ; ret 0xdb31
0x000000000048ede6 : xchg eax, ebp ; ret 0xf45
0x00000000004936f7 : xchg eax, ebp ; ret 0xfff8
0x00000000004045f7 : xchg eax, ebp ; retf
0x0000000000403c77 : xchg eax, ebp ; retf 0xb
0x0000000000412530 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000042a984 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000048ba0f : xchg eax, ebx ; idiv bh ; dec dword ptr [rax - 0x77] ; retf 0xeeb
0x0000000000442bac : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042c122 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000411e78 : xchg eax, ebx ; nop ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000405aae : xchg eax, ebx ; ret 0x3948
0x000000000045cd23 : xchg eax, ebx ; ret 0x3949
0x000000000045cf3f : xchg eax, ebx ; ret 0x854d
0x000000000046b435 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x000000000043d1e1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043b90f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000040eeb0 : xchg eax, edi ; add r10, r15 ; jmp r10
0x000000000040ed82 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004891a9 : xchg eax, edx ; ret 0x8948
0x0000000000445aa8 : xchg eax, edx ; ret 0xf40
0x0000000000492dfa : xchg eax, edx ; retf
0x00000000004298bc : xchg eax, edx ; sub eax, edx ; ret
0x000000000047ca0a : xchg eax, edx ; sub edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416104 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000042ac82 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432ee3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000447134 : xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000042ad3f : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000474706 : xchg eax, esi ; lodsb al, byte ptr [rsi] ; cli ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000042ac9d : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421f16 : xchg eax, esi ; push rdx ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000447fd3 : xchg eax, esi ; ret 0xc085
0x0000000000448027 : xchg eax, esi ; ret 0xd284
0x000000000042acee : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000040c60d : xchg eax, esi ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000473d43 : xchg eax, esp ; and al, 0xe0 ; add eax, dword ptr [rax] ; add dh, dh ; ret 0x7402
0x0000000000450f63 : xchg eax, esp ; inc byte ptr [rsi] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000404e31 : xchg eax, esp ; ret
0x0000000000448d64 : xchg eax, esp ; ret 0x2044
0x0000000000482590 : xchg eax, esp ; ret 0x3145
0x00000000004114ed : xchg eax, esp ; ret 0x3948
0x0000000000482140 : xchg eax, esp ; ret 0x8545
0x000000000044d0b8 : xchg eax, esp ; ret 0x8d48
0x0000000000484415 : xchg eax, esp ; ret 0x950f
0x0000000000475b50 : xchg eax, esp ; ret 0xb60f
0x0000000000402597 : xchg eax, esp ; ret 0xd284
0x0000000000482c99 : xchg eax, esp ; ret 0xf45
0x0000000000487e27 : xchg eax, esp ; ret 0xfb83
0x00000000004213ac : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000486bcf : xchg eax, esp ; ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000045843f : xchg ebp, ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000467d97 : xchg esp, edx ; sub byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000491533 : xlatb ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004228e5 : xlatb ; add r8b, byte ptr [r8] ; cmove rax, rdx ; ret
0x000000000042bfed : xlatb ; add r9, r11 ; jmp r9
0x00000000004857cd : xlatb ; idiv edi ; endbr64 ; ret
0x0000000000445e7c : xlatb ; jb 0x445e87 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004481f1 : xlatb ; mov eax, esi ; syscall
0x0000000000448200 : xlatb ; mov eax, r8d ; syscall
0x0000000000429ee4 : xlatb ; ret
0x000000000046f127 : xlatb ; ret 0x94c
0x0000000000429ecf : xlatb ; ret 0xc085
0x0000000000424080 : xlatb ; ret 0xc148
0x000000000042a598 : xlatb ; ret 0xe883
0x000000000043f178 : xlatb ; ret 0xf66
0x000000000042a758 : xlatb ; ret 0xff2d
0x00000000004255d4 : xlatb ; retf
0x000000000046f204 : xlatb ; retf 0xc148
0x00000000004255fc : xlatb ; retf 0xc985
0x0000000000422d00 : xlatb ; retf 0xead3
0x000000000046f279 : xlatb ; retf 0xfdc5
0x0000000000429fb1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000046f2d5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000046ebe3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042a152 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000043eef2 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000443a9a : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000423f66 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000423e26 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000423ce6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000423ba6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000423a66 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000423926 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004237e6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000004236a6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000423566 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000423426 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000004232e6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000004231a6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000423066 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000422f26 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000422de6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000443a96 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000046f0c5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000046f0d6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000047648e : xor ah, byte ptr [rsi + 0xf] ; insb byte ptr [rdi], dx ; ret
0x0000000000412c2f : xor al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000046e843 : xor al, 0x24 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041bbc1 : xor al, 0xa ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000048a5d4 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046b19b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000046b9cf : xor al, 0xe9 ; ret 0xfffc
0x00000000004229a2 : xor al, 2 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046b83f : xor al, 2 ; add byte ptr [rax], al ; add bl, ch ; ret 0x43c7
0x000000000046b836 : xor al, 3 ; add byte ptr [rax], al ; add bl, ch ; retf
0x000000000047bc62 : xor al, 4 ; add byte ptr [rcx], al ; ret
0x000000000048ded7 : xor al, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x000000000046de5b : xor bh, cl ; lcall [rdx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000045df79 : xor bh, dl ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000046ec6c : xor bl, al ; nop ; xor eax, eax ; ret
0x0000000000401c68 : xor bl, bh ; add r15b, dil ; loopne 0x401cdd ; nop ; ret
0x0000000000404f42 : xor byte ptr [r11 - 0x78f0fd07], r8b ; ret
0x0000000000429fcb : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000446c78 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004712b7 : xor byte ptr [rax + 0x106], bh ; syscall
0x0000000000471060 : xor byte ptr [rax + 0x39], cl ; ret 0xda72
0x0000000000456123 : xor byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000043ea3f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041cfcd : xor byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000043ed82 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000043e915 : xor byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000043f88f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000492eba : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx - 0x18] ; retf
0x0000000000463e62 : xor byte ptr [rax - 0x7d], cl ; ret 0x8303
0x0000000000446c79 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000402315 : xor byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x00000000004100d5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004100b7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004700ac : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000447184 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046d09e : xor byte ptr [rax], al ; je 0x46d0ac ; ret
0x00000000004460d9 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x000000000040f4f6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004172bc : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000048d1ac : xor byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x0000000000404f43 : xor byte ptr [rbx - 0x78f0fd07], al ; ret
0x000000000048d137 : xor byte ptr [rcx + 0x21], cl ; retf
0x000000000046d0fd : xor byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048a9df : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop r12 ; ret
0x000000000045ffc9 : xor byte ptr [rcx - 0x77], cl ; ret 0x2949
0x0000000000454f0c : xor byte ptr [rcx - 0xa], al ; ret 0x7501
0x000000000042c024 : xor byte ptr [rcx], cl ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004101bc : xor byte ptr [rdx], al ; add byte ptr [rax + 0x39], r9b ; ret
0x000000000042aa2f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046f08c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004131a8 : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x0000000000429fcc : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004131a7 : xor byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4866
0x000000000046573a : xor cl, byte ptr [rbx + rcx*4 + 0x1d] ; outsb dx, byte ptr [rsi] ; ret 5
0x000000000047c63a : xor cl, byte ptr [rdi - 0x76b70000] ; ret
0x000000000047bfe2 : xor dl, dh ; jmp r11
0x000000000047c0f4 : xor dl, dh ; ret
0x00000000004101b1 : xor dword ptr [rax - 0x39], ecx ; ret
0x0000000000449873 : xor dword ptr [rax - 0x77], ecx ; out dx, eax ; xor esi, esi ; call r12
0x0000000000451d15 : xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000041da79 : xor dword ptr [rax], ecx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000047b8f6 : xor dword ptr [rax], edx ; jae 0x47b8ab ; xor eax, eax ; ret
0x000000000044c7a3 : xor dword ptr [rax], esp ; jmp rdx
0x000000000047b8f5 : xor dword ptr [rax], r10d ; jae 0x47b8ac ; xor eax, eax ; ret
0x0000000000418409 : xor dword ptr [rbp], 0 ; mov edx, dword ptr [rbx] ; jmp 0x4183e3
0x000000000045bc48 : xor dword ptr [rcx], edi ; ret 0x820f
0x00000000004466a7 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a717 : xor eax, 0x49000001 ; mov edi, dword ptr [rbp] ; call rbx
0x000000000045d6e1 : xor eax, 0x63852 ; call 0x4499c7
0x00000000004215fa : xor eax, 0x7382b ; call 0x45e067
0x00000000004215e1 : xor eax, 0x73839 ; call 0x45e067
0x000000000040af6f : xor eax, 0x7503f883 ; retf
0x0000000000485df8 : xor eax, 0x83000248 ; ret
0x0000000000468c7e : xor eax, 0x89490005 ; retf
0x00000000004100d2 : xor eax, dword ptr [0x30] ; call rax
0x000000000046b519 : xor eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x7cb7fb8e], cl ; ret 0xb804
0x0000000000422b12 : xor eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000493b70 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000416e04 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417808 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045da57 : xor eax, eax ; add rsp, 8 ; ret
0x00000000004842ca : xor eax, eax ; call 0x410d44
0x000000000044ec5b : xor eax, eax ; call rbx
0x000000000041a21f : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000475c5b : xor eax, eax ; jmp 0x475c25
0x000000000045c1dd : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000046d22f : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000004103a9 : xor eax, eax ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000041039e : xor eax, eax ; mov rax, r8 ; ret
0x0000000000450027 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415fb1 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041ef59 : xor eax, eax ; pop rbx ; pop rbp ; mov rax, r8 ; pop r12 ; ret
0x0000000000413374 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041bb7b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a594 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000447078 : xor eax, eax ; pop rbx ; ret
0x000000000040f568 : xor eax, eax ; ret
0x000000000042428e : xor eax, eax ; sub eax, ecx ; ret
0x00000000004489f8 : xor eax, eax ; syscall
0x0000000000416094 : xor eax, eax ; test rdx, rdx ; jne 0x4160a7 ; ret
0x0000000000429ce0 : xor eax, eax ; vzeroupper ; ret
0x0000000000403ee3 : xor eax, ecx ; or eax, dword ptr [rax] ; syscall
0x000000000040f556 : xor eax, edx ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0x40f541 ; ret
0x000000000048580d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x48582d
0x0000000000414126 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000422a23 : xor ecx, dword ptr [rbx + 0x9e31e15] ; add bh, dh ; ret 0
0x0000000000421eea : xor ecx, dword ptr [rbx + 0x9ee5715] ; add bh, dh ; ret 0
0x0000000000449e01 : xor ecx, dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x77] ; out dx, eax ; call r12
0x0000000000456520 : xor ecx, dword ptr [rcx - 0x77] ; retf
0x000000000048e93e : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004070e1 : xor ecx, ecx ; pop rbx ; pop rbp ; mov rax, r9 ; pop r12 ; ret
0x00000000004025b0 : xor edi, edi ; mov eax, edx ; syscall
0x0000000000449776 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000004495b0 : xor edi, edi ; syscall
0x00000000004100b4 : xor edx, dword ptr [0x30] ; call rdx
0x000000000045b8fa : xor edx, edx ; call 0x448374
0x000000000044a500 : xor edx, edx ; mov esi, 1 ; call r12
0x000000000044ecc8 : xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x0000000000418466 : xor edx, edx ; pop rbx ; jmp rax
0x000000000046fc3d : xor edx, edx ; push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000449877 : xor esi, esi ; call r12
0x000000000041e01d : xor esi, esi ; mov rdi, rbp ; call 0x41a307
0x000000000044de7a : xor esp, dword ptr [rsp + rax - 0x76b400] ; call 0x42a189
0x0000000000470eca : xor esp, esp ; jmp 0x470e9c
0x00000000004030e4 : xor esp, esp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000041da78 : xor qword ptr [rax], r9 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000470ec9 : xor r12d, r12d ; jmp 0x470e9d
0x000000000044ec5a : xor r8d, r8d ; call rbx
0x00000000004103a8 : xor r8d, r8d ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000041039d : xor r8d, r8d ; mov rax, r8 ; ret
0x00000000004100d1 : xor rax, qword ptr [0x30] ; call rax
0x00000000004100d0 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000443ab0 : xor rax, rax ; ret
0x00000000004100b3 : xor rdx, qword ptr [0x30] ; call rdx
0x00000000004100b2 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9341
