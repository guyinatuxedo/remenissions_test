Gadgets information
============================================================
0x00000000000005f7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5c4
0x0000000000000707 : add bl, dh ; ret
0x0000000000000703 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000000705 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000007eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000000076d : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000005d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5c4
0x000000000000066c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000704 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000076f : add byte ptr [rax], al ; call rdx
0x00000000000005d9 : add byte ptr [rax], al ; jmp 0x5c2
0x000000000000066e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000000070e : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x687
0x0000000000000706 : add byte ptr [rax], al ; ret
0x000000000000070d : add byte ptr [rax], r8b ; push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x688
0x000000000000070f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; pop rbp ; jmp 0x686
0x00000000000006fd : add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000005e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5c4
0x00000000000005b3 : add esp, 8 ; ret
0x00000000000005b2 : add rsp, 8 ; ret
0x00000000000005d4 : and byte ptr [rax], al ; push 0 ; jmp 0x5c7
0x00000000000005e4 : and byte ptr [rax], al ; push 1 ; jmp 0x5c7
0x00000000000005f4 : and byte ptr [rax], al ; push 2 ; jmp 0x5c7
0x00000000000005a9 : and byte ptr [rax], al ; test rax, rax ; je 0x5b9 ; call rax
0x000000000000065c : and byte ptr [rax], al ; test rax, rax ; je 0x678 ; pop rbp ; jmp rax
0x00000000000006ad : and byte ptr [rax], al ; test rax, rax ; je 0x6c8 ; pop rbp ; jmp rax
0x00000000000008fb : call qword ptr [rbx]
0x00000000000005b0 : call rax
0x0000000000000771 : call rdx
0x000000000000076b : clc ; mov eax, 0 ; call rdx
0x00000000000005a7 : cmp eax, 0x4800200a ; test eax, eax ; je 0x5bb ; call rax
0x00000000000005f2 : fimul dword ptr [rcx] ; and byte ptr [rax], al ; push 2 ; jmp 0x5c9
0x00000000000007cc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000000713 : in eax, 0x5d ; jmp 0x682
0x00000000000005ae : je 0x5b4 ; call rax
0x0000000000000661 : je 0x673 ; pop rbp ; jmp rax
0x00000000000006b2 : je 0x6c3 ; pop rbp ; jmp rax
0x00000000000005db : jmp 0x5c0
0x0000000000000715 : jmp 0x680
0x0000000000000664 : jmp rax
0x0000000000000774 : leave ; ret
0x00000000000005e2 : loop 0x5f6 ; and byte ptr [rax], al ; push 1 ; jmp 0x5c9
0x00000000000006f8 : mov byte ptr [rip + 0x200919], 1 ; pop rbp ; ret
0x000000000000076c : mov eax, 0 ; call rdx
0x0000000000000712 : mov ebp, esp ; pop rbp ; jmp 0x683
0x0000000000000769 : mov edx, dword ptr [rbp - 8] ; mov eax, 0 ; call rdx
0x0000000000000711 : mov rbp, rsp ; pop rbp ; jmp 0x684
0x0000000000000768 : mov rdx, qword ptr [rbp - 8] ; mov eax, 0 ; call rdx
0x0000000000000773 : nop ; leave ; ret
0x000000000000072a : nop ; pop rbp ; ret
0x0000000000000668 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000000007e8 : nop dword ptr [rax + rax] ; ret
0x0000000000000701 : nop dword ptr [rax] ; ret
0x00000000000006b3 : or al, 0x5d ; jmp rax
0x00000000000006fb : or dword ptr [rax], esp ; add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000007dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000007de : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000007e0 : pop r14 ; pop r15 ; ret
0x00000000000007e2 : pop r15 ; ret
0x0000000000000714 : pop rbp ; jmp 0x681
0x0000000000000663 : pop rbp ; jmp rax
0x00000000000007db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000007df : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000000670 : pop rbp ; ret
0x00000000000007e3 : pop rdi ; ret
0x00000000000007e1 : pop rsi ; pop r15 ; ret
0x00000000000007dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000005d6 : push 0 ; jmp 0x5c5
0x00000000000005e6 : push 1 ; jmp 0x5c5
0x00000000000005f6 : push 2 ; jmp 0x5c5
0x000000000000076a : push rbp ; clc ; mov eax, 0 ; call rdx
0x0000000000000710 : push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x685
0x00000000000005b6 : ret
0x0000000000000622 : retf 1
0x00000000000005ad : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000000007f5 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000000007f4 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000000066a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000007ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000005ac : test eax, eax ; je 0x5b6 ; call rax
0x000000000000065f : test eax, eax ; je 0x675 ; pop rbp ; jmp rax
0x00000000000006b0 : test eax, eax ; je 0x6c5 ; pop rbp ; jmp rax
0x00000000000005ab : test rax, rax ; je 0x5b7 ; call rax
0x000000000000065e : test rax, rax ; je 0x676 ; pop rbp ; jmp rax
0x00000000000006af : test rax, rax ; je 0x6c6 ; pop rbp ; jmp rax

Unique gadgets found: 85
